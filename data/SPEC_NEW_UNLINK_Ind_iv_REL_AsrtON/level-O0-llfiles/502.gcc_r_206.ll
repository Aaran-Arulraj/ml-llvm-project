; ModuleID = 'sched-deps.c'
source_filename = "sched-deps.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VEC_haifa_deps_insn_data_def_heap = type { %struct.VEC_haifa_deps_insn_data_def_base }
%struct.VEC_haifa_deps_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_deps_insn_data] }
%struct._haifa_deps_insn_data = type { i32, i32, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, %struct._deps_list*, i8 }
%struct._deps_list = type { %struct._dep_link*, i32 }
%struct._dep_link = type { %struct._dep_node*, %struct._dep_link*, %struct._dep_link** }
%struct._dep_node = type { %struct._dep_link, %struct._dep, %struct._dep_link }
%struct._dep = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.haifa_sched_info = type { void ()*, i32 (%struct.rtx_def*)*, i32 ()*, i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8* (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, %struct.rtx_def*)*, i8 (%struct.rtx_def*)*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8, i32, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, %struct.basic_block_def* (%struct.basic_block_def*, %struct.rtx_def*)*, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.VEC_haifa_insn_data_def_heap = type { %struct.VEC_haifa_insn_data_def_base }
%struct.VEC_haifa_insn_data_def_base = type { i32, i32, [1 x %struct._haifa_insn_data] }
%struct._haifa_insn_data = type { i32, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.basic_block_def*, %struct.rtx_def*, %struct.reg_pressure_data*, i32*, %struct.reg_use_data*, %struct.reg_set_data*, i32 }
%struct.reg_pressure_data = type { i32 }
%struct.reg_use_data = type { i32, %struct.rtx_def*, %struct.reg_use_data*, %struct.reg_use_data* }
%struct.reg_set_data = type { i32, %struct.rtx_def*, %struct.reg_set_data* }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.reg_info_t = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.sched_deps_info_def = type { void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (%struct.rtx_def*)*, void ()*, void (i32)*, void (i32)*, void (i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, i8 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.common_sched_info_def = type { void (i32, i32, i32)*, void (%struct.basic_block_def*, %struct.basic_block_def*)*, i32 (%struct.basic_block_def*)*, i32 (%struct.rtx_def*)*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct.spec_info_def = type { i32, %struct._IO_FILE*, i32, i32, i32 }
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct._sd_iterator = type { i32, %struct.rtx_def*, %struct._dep_link**, i8 }
%struct.deps = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, %struct.deps_reg*, %struct.bitmap_head_def, %struct.bitmap_head_def, i32, i8 }
%struct.deps_reg = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.cselib_val_struct = type { i32, i32, %struct.rtx_def*, %struct.elt_loc_list*, %struct.elt_list*, %struct.cselib_val_struct* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }

@h_d_i_d = dso_local global %struct.VEC_haifa_deps_insn_data_def_heap* null, align 8, !dbg !0
@.str = private unnamed_addr constant [13 x i8] c"sched-deps.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@current_sched_info = external dso_local global %struct.haifa_sched_info*, align 8
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@dn_pool_diff = internal global i32 0, align 4, !dbg !2152
@dl_pool_diff = internal global i32 0, align 4, !dbg !2154
@sched_luids = external dso_local global %struct.VEC_int_heap*, align 8
@h_i_d = external dso_local global %struct.VEC_haifa_insn_data_def_heap*, align 8
@true_dependency_cache = internal global %struct.bitmap_head_def* null, align 8, !dbg !2156
@output_dependency_cache = internal global %struct.bitmap_head_def* null, align 8, !dbg !2158
@anti_dependency_cache = internal global %struct.bitmap_head_def* null, align 8, !dbg !2160
@spec_dependency_cache = internal global %struct.bitmap_head_def* null, align 8, !dbg !2177
@reg_pending_sets = internal global %struct.bitmap_head_def* null, align 8, !dbg !2138
@reg_pending_clobbers = internal global %struct.bitmap_head_def* null, align 8, !dbg !2140
@reg_pending_uses = internal global %struct.bitmap_head_def* null, align 8, !dbg !2142
@max_regno = external dso_local global i32, align 4
@reg_info_p_size = external dso_local global i64, align 8
@reload_completed = external dso_local global i32, align 4
@reg_info_p = external dso_local global %struct.reg_info_t*, align 8
@sched_deps_info = common dso_local global %struct.sched_deps_info_def* null, align 8, !dbg !2074
@compiler_params = external dso_local global %struct.param_info*, align 8
@reg_pending_barrier = internal global i32 0, align 4, !dbg !2144
@global_regs = external dso_local global [53 x i8], align 16
@implicit_reg_pending_uses = internal global i64 0, align 8, !dbg !2148
@regs_invalidated_by_call = external dso_local global i64, align 8
@fixed_regs = external dso_local global [53 x i8], align 16
@x_rtl = external dso_local global %struct.rtl_data, align 8
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@sched_max_luid = external dso_local global i32, align 4
@cfun = external dso_local global %struct.function*, align 8
@cache_size = internal global i32 0, align 4, !dbg !2150
@.str.3 = private unnamed_addr constant [10 x i8] c"deps_list\00", align 1
@dl_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !2136
@.str.4 = private unnamed_addr constant [9 x i8] c"dep_node\00", align 1
@dn_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !2113
@implicit_reg_pending_clobbers = internal global i64 0, align 8, !dbg !2146
@sched_emulate_haifa_p = external dso_local global i32, align 4
@cur_insn = internal global %struct.rtx_def* null, align 8, !dbg !2191
@.str.5 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"%d; \00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"%c; \00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c">\00", align 1
@global_rtl = external dso_local global [11 x %struct.rtx_def*], align 16
@rtx_class = external dso_local constant [139 x i32], align 16
@common_sched_info = external dso_local global %struct.common_sched_info_def*, align 8
@sd_iterator_start.null_link = internal global %struct._dep_link* null, align 8, !dbg !2162
@.str.9 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@dump_dep_flags = internal global i32 6, align 4, !dbg !2179
@.str.10 = private unnamed_addr constant [2 x i8] c" \00", align 1
@ira_no_alloc_regs = external dso_local global i64, align 8
@can_start_lhs_rhs_p = internal global i8 0, align 1, !dbg !2181
@sched_pressure_p = external dso_local global i8, align 1
@targetm = external dso_local global %struct.gcc_target, align 8
@spec_info = external dso_local global %struct.spec_info_def*, align 8
@rtx_format = external dso_local constant [139 x i8*], align 16
@rtx_length = external dso_local constant [139 x i8], align 16
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@setup_insn_reg_pressure_info.pressure_info = internal global %struct.reg_pressure_data* null, align 8, !dbg !2183
@ira_reg_class_cover_size = external dso_local global i32, align 4
@ira_reg_class_cover = external dso_local global [27 x i32], align 16
@reg_pressure_info = internal global [27 x %struct.reg_pressure_data] zeroinitializer, align 16, !dbg !2186
@sched_regno_cover_class = external dso_local global i32*, align 8
@ira_reg_class_nregs = external dso_local global [27 x [87 x i32]], align 16
@regno_reg_rtx = external dso_local global %struct.rtx_def**, align 8
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.11 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"BEGIN_DATA: %d; \00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"BE_IN_DATA: %d; \00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"BEGIN_CONTROL: %d; \00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"BE_IN_CONTROL: %d; \00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"HARD_DEP; \00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"DEP_TRUE; \00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"DEP_ANTI; \00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"DEP_OUTPUT; \00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"}\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ds_to_dk(i32 %ds) #0 !dbg !2197 {
entry:
  %retval = alloca i32, align 4
  %ds.addr = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !2200, metadata !DIExpression()), !dbg !2201
  %0 = load i32, i32* %ds.addr, align 4, !dbg !2202
  %and = and i32 %0, 16777216, !dbg !2204
  %tobool = icmp ne i32 %and, 0, !dbg !2204
  br i1 %tobool, label %if.then, label %if.end, !dbg !2205

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2206
  br label %return, !dbg !2206

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %ds.addr, align 4, !dbg !2207
  %and1 = and i32 %1, 33554432, !dbg !2209
  %tobool2 = icmp ne i32 %and1, 0, !dbg !2209
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !2210

if.then3:                                         ; preds = %if.end
  store i32 11, i32* %retval, align 4, !dbg !2211
  br label %return, !dbg !2211

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %ds.addr, align 4, !dbg !2212
  %and5 = and i32 %2, 67108864, !dbg !2212
  %tobool6 = icmp ne i32 %and5, 0, !dbg !2212
  br i1 %tobool6, label %cond.false, label %cond.true, !dbg !2212

cond.true:                                        ; preds = %if.end4
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2212
  br label %cond.end, !dbg !2212

cond.false:                                       ; preds = %if.end4
  br label %cond.end, !dbg !2212

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2212
  store i32 12, i32* %retval, align 4, !dbg !2213
  br label %return, !dbg !2213

return:                                           ; preds = %cond.end, %if.then3, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !2214
  ret i32 %3, !dbg !2214
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dk_to_ds(i32 %dk) #0 !dbg !2215 {
entry:
  %retval = alloca i32, align 4
  %dk.addr = alloca i32, align 4
  store i32 %dk, i32* %dk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dk.addr, metadata !2218, metadata !DIExpression()), !dbg !2219
  %0 = load i32, i32* %dk.addr, align 4, !dbg !2220
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 11, label %sw.bb1
  ], !dbg !2221

sw.bb:                                            ; preds = %entry
  store i32 16777216, i32* %retval, align 4, !dbg !2222
  br label %return, !dbg !2222

sw.bb1:                                           ; preds = %entry
  store i32 33554432, i32* %retval, align 4, !dbg !2224
  br label %return, !dbg !2224

sw.default:                                       ; preds = %entry
  %1 = load i32, i32* %dk.addr, align 4, !dbg !2225
  %cmp = icmp eq i32 %1, 12, !dbg !2225
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !2225

cond.true:                                        ; preds = %sw.default
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2225
  br label %cond.end, !dbg !2225

cond.false:                                       ; preds = %sw.default
  br label %cond.end, !dbg !2225

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2225
  store i32 67108864, i32* %retval, align 4, !dbg !2226
  br label %return, !dbg !2226

return:                                           ; preds = %cond.end, %sw.bb1, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !2227
  ret i32 %2, !dbg !2227
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_dep_1(%struct._dep* %dep, %struct.rtx_def* %pro, %struct.rtx_def* %con, i32 %type, i32 %ds) #0 !dbg !2228 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  %pro.addr = alloca %struct.rtx_def*, align 8
  %con.addr = alloca %struct.rtx_def*, align 8
  %type.addr = alloca i32, align 4
  %ds.addr = alloca i32, align 4
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !2234, metadata !DIExpression()), !dbg !2235
  store %struct.rtx_def* %pro, %struct.rtx_def** %pro.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pro.addr, metadata !2236, metadata !DIExpression()), !dbg !2237
  store %struct.rtx_def* %con, %struct.rtx_def** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %con.addr, metadata !2238, metadata !DIExpression()), !dbg !2239
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2240, metadata !DIExpression()), !dbg !2241
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !2242, metadata !DIExpression()), !dbg !2243
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pro.addr, align 8, !dbg !2244
  %1 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2245
  %pro1 = getelementptr inbounds %struct._dep, %struct._dep* %1, i32 0, i32 0, !dbg !2245
  store %struct.rtx_def* %0, %struct.rtx_def** %pro1, align 8, !dbg !2246
  %2 = load %struct.rtx_def*, %struct.rtx_def** %con.addr, align 8, !dbg !2247
  %3 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2248
  %con2 = getelementptr inbounds %struct._dep, %struct._dep* %3, i32 0, i32 1, !dbg !2248
  store %struct.rtx_def* %2, %struct.rtx_def** %con2, align 8, !dbg !2249
  %4 = load i32, i32* %type.addr, align 4, !dbg !2250
  %5 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2251
  %type3 = getelementptr inbounds %struct._dep, %struct._dep* %5, i32 0, i32 2, !dbg !2251
  store i32 %4, i32* %type3, align 8, !dbg !2252
  %6 = load i32, i32* %ds.addr, align 4, !dbg !2253
  %7 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2254
  %status = getelementptr inbounds %struct._dep, %struct._dep* %7, i32 0, i32 3, !dbg !2254
  store i32 %6, i32* %status, align 4, !dbg !2255
  ret void, !dbg !2256
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_dep(%struct._dep* %dep, %struct.rtx_def* %pro, %struct.rtx_def* %con, i32 %kind) #0 !dbg !2257 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  %pro.addr = alloca %struct.rtx_def*, align 8
  %con.addr = alloca %struct.rtx_def*, align 8
  %kind.addr = alloca i32, align 4
  %ds = alloca i32, align 4
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !2260, metadata !DIExpression()), !dbg !2261
  store %struct.rtx_def* %pro, %struct.rtx_def** %pro.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pro.addr, metadata !2262, metadata !DIExpression()), !dbg !2263
  store %struct.rtx_def* %con, %struct.rtx_def** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %con.addr, metadata !2264, metadata !DIExpression()), !dbg !2265
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !2266, metadata !DIExpression()), !dbg !2267
  call void @llvm.dbg.declare(metadata i32* %ds, metadata !2268, metadata !DIExpression()), !dbg !2269
  %0 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !2270
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %0, i32 0, i32 17, !dbg !2272
  %1 = load i32, i32* %flags, align 8, !dbg !2272
  %and = and i32 %1, 1, !dbg !2273
  %tobool = icmp ne i32 %and, 0, !dbg !2273
  br i1 %tobool, label %if.then, label %if.else, !dbg !2274

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %kind.addr, align 4, !dbg !2275
  %call = call i32 @dk_to_ds(i32 %2), !dbg !2276
  store i32 %call, i32* %ds, align 4, !dbg !2277
  br label %if.end, !dbg !2278

if.else:                                          ; preds = %entry
  store i32 -1, i32* %ds, align 4, !dbg !2279
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2280
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pro.addr, align 8, !dbg !2281
  %5 = load %struct.rtx_def*, %struct.rtx_def** %con.addr, align 8, !dbg !2282
  %6 = load i32, i32* %kind.addr, align 4, !dbg !2283
  %7 = load i32, i32* %ds, align 4, !dbg !2284
  call void @init_dep_1(%struct._dep* %3, %struct.rtx_def* %4, %struct.rtx_def* %5, i32 %6, i32 %7), !dbg !2285
  ret void, !dbg !2286
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_debug_dep(%struct._dep* %dep) #0 !dbg !2287 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !2290, metadata !DIExpression()), !dbg !2291
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2292
  %1 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2293
  call void @dump_dep(%struct._IO_FILE* %0, %struct._dep* %1, i32 1), !dbg !2294
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2295
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !2296
  ret void, !dbg !2297
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_dep(%struct._IO_FILE* %dump, %struct._dep* %dep, i32 %flags) #0 !dbg !2298 {
entry:
  %dump.addr = alloca %struct._IO_FILE*, align 8
  %dep.addr = alloca %struct._dep*, align 8
  %flags.addr = alloca i32, align 4
  %t = alloca i8, align 1
  %type = alloca i32, align 4
  store %struct._IO_FILE* %dump, %struct._IO_FILE** %dump.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %dump.addr, metadata !2352, metadata !DIExpression()), !dbg !2353
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !2354, metadata !DIExpression()), !dbg !2355
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !2356, metadata !DIExpression()), !dbg !2357
  %0 = load i32, i32* %flags.addr, align 4, !dbg !2358
  %and = and i32 %0, 1, !dbg !2360
  %tobool = icmp ne i32 %and, 0, !dbg !2360
  br i1 %tobool, label %if.then, label %if.end, !dbg !2361

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %flags.addr, align 4, !dbg !2362
  %or = or i32 %1, 30, !dbg !2362
  store i32 %or, i32* %flags.addr, align 4, !dbg !2362
  br label %if.end, !dbg !2363

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !2364
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)), !dbg !2365
  %3 = load i32, i32* %flags.addr, align 4, !dbg !2366
  %and1 = and i32 %3, 2, !dbg !2368
  %tobool2 = icmp ne i32 %and1, 0, !dbg !2368
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !2369

if.then3:                                         ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !2370
  %5 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2371
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %5, i32 0, i32 0, !dbg !2371
  %6 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !2371
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !2371
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2371
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2371
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2371
  %7 = load i32, i32* %rt_int, align 8, !dbg !2371
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %7), !dbg !2372
  br label %if.end5, !dbg !2372

if.end5:                                          ; preds = %if.then3, %if.end
  %8 = load i32, i32* %flags.addr, align 4, !dbg !2373
  %and6 = and i32 %8, 4, !dbg !2375
  %tobool7 = icmp ne i32 %and6, 0, !dbg !2375
  br i1 %tobool7, label %if.then8, label %if.end14, !dbg !2376

if.then8:                                         ; preds = %if.end5
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !2377
  %10 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2378
  %con = getelementptr inbounds %struct._dep, %struct._dep* %10, i32 0, i32 1, !dbg !2378
  %11 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !2378
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !2378
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !2378
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !2378
  %rt_int12 = bitcast %union.rtunion_def* %arrayidx11 to i32*, !dbg !2378
  %12 = load i32, i32* %rt_int12, align 8, !dbg !2378
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %12), !dbg !2379
  br label %if.end14, !dbg !2379

if.end14:                                         ; preds = %if.then8, %if.end5
  %13 = load i32, i32* %flags.addr, align 4, !dbg !2380
  %and15 = and i32 %13, 8, !dbg !2382
  %tobool16 = icmp ne i32 %and15, 0, !dbg !2382
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !2383

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i8* %t, metadata !2384, metadata !DIExpression()), !dbg !2386
  call void @llvm.dbg.declare(metadata i32* %type, metadata !2387, metadata !DIExpression()), !dbg !2388
  %14 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2389
  %type18 = getelementptr inbounds %struct._dep, %struct._dep* %14, i32 0, i32 2, !dbg !2389
  %15 = load i32, i32* %type18, align 8, !dbg !2389
  store i32 %15, i32* %type, align 4, !dbg !2388
  %16 = load i32, i32* %type, align 4, !dbg !2390
  switch i32 %16, label %sw.default [
    i32 0, label %sw.bb
    i32 11, label %sw.bb19
    i32 12, label %sw.bb20
  ], !dbg !2391

sw.bb:                                            ; preds = %if.then17
  store i8 116, i8* %t, align 1, !dbg !2392
  br label %sw.epilog, !dbg !2394

sw.bb19:                                          ; preds = %if.then17
  store i8 111, i8* %t, align 1, !dbg !2395
  br label %sw.epilog, !dbg !2396

sw.bb20:                                          ; preds = %if.then17
  store i8 97, i8* %t, align 1, !dbg !2397
  br label %sw.epilog, !dbg !2398

sw.default:                                       ; preds = %if.then17
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2399
  br label %sw.epilog, !dbg !2400

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb19, %sw.bb
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !2401
  %18 = load i8, i8* %t, align 1, !dbg !2402
  %conv = sext i8 %18 to i32, !dbg !2402
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i32 %conv), !dbg !2403
  br label %if.end22, !dbg !2404

if.end22:                                         ; preds = %sw.epilog, %if.end14
  %19 = load i32, i32* %flags.addr, align 4, !dbg !2405
  %and23 = and i32 %19, 16, !dbg !2407
  %tobool24 = icmp ne i32 %and23, 0, !dbg !2407
  br i1 %tobool24, label %if.then25, label %if.end31, !dbg !2408

if.then25:                                        ; preds = %if.end22
  %20 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !2409
  %flags26 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %20, i32 0, i32 17, !dbg !2412
  %21 = load i32, i32* %flags26, align 8, !dbg !2412
  %and27 = and i32 %21, 1, !dbg !2413
  %tobool28 = icmp ne i32 %and27, 0, !dbg !2413
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !2414

if.then29:                                        ; preds = %if.then25
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !2415
  %23 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !2416
  %status = getelementptr inbounds %struct._dep, %struct._dep* %23, i32 0, i32 3, !dbg !2416
  %24 = load i32, i32* %status, align 4, !dbg !2416
  call void @dump_ds(%struct._IO_FILE* %22, i32 %24), !dbg !2417
  br label %if.end30, !dbg !2417

if.end30:                                         ; preds = %if.then29, %if.then25
  br label %if.end31, !dbg !2418

if.end31:                                         ; preds = %if.end30, %if.end22
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !2419
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)), !dbg !2420
  ret void, !dbg !2421
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @deps_pools_are_empty_p() #0 !dbg !2422 {
entry:
  %0 = load i32, i32* @dn_pool_diff, align 4, !dbg !2425
  %cmp = icmp eq i32 %0, 0, !dbg !2426
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2427

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @dl_pool_diff, align 4, !dbg !2428
  %cmp1 = icmp eq i32 %1, 0, !dbg !2429
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !2430
  %land.ext = zext i1 %2 to i32, !dbg !2427
  %conv = trunc i32 %land.ext to i8, !dbg !2425
  ret i8 %conv, !dbg !2431
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %insn1, %struct.rtx_def* %insn2) #0 !dbg !2432 {
entry:
  %retval = alloca i8, align 1
  %insn1.addr = alloca %struct.rtx_def*, align 8
  %insn2.addr = alloca %struct.rtx_def*, align 8
  %cond1 = alloca %struct.rtx_def*, align 8
  %cond2 = alloca %struct.rtx_def*, align 8
  %rev1 = alloca i8, align 1
  %rev2 = alloca i8, align 1
  store %struct.rtx_def* %insn1, %struct.rtx_def** %insn1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn1.addr, metadata !2435, metadata !DIExpression()), !dbg !2436
  store %struct.rtx_def* %insn2, %struct.rtx_def** %insn2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn2.addr, metadata !2437, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cond1, metadata !2439, metadata !DIExpression()), !dbg !2440
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cond2, metadata !2441, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.declare(metadata i8* %rev1, metadata !2443, metadata !DIExpression()), !dbg !2444
  store i8 0, i8* %rev1, align 1, !dbg !2444
  call void @llvm.dbg.declare(metadata i8* %rev2, metadata !2445, metadata !DIExpression()), !dbg !2446
  store i8 0, i8* %rev2, align 1, !dbg !2446
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn1.addr, align 8, !dbg !2447
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2447
  %bf.load = load i32, i32* %1, align 8, !dbg !2447
  %bf.clear = and i32 %bf.load, 65535, !dbg !2447
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !2447
  br i1 %cmp, label %if.end17, label %land.lhs.true, !dbg !2449

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn2.addr, align 8, !dbg !2450
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !2450
  %bf.load1 = load i32, i32* %3, align 8, !dbg !2450
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2450
  %cmp3 = icmp eq i32 %bf.clear2, 10, !dbg !2450
  br i1 %cmp3, label %if.end17, label %if.then, !dbg !2451

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn1.addr, align 8, !dbg !2452
  %call = call %struct.rtx_def* @sched_get_condition_with_rev(%struct.rtx_def* %4, i8* %rev1), !dbg !2454
  store %struct.rtx_def* %call, %struct.rtx_def** %cond1, align 8, !dbg !2455
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn2.addr, align 8, !dbg !2456
  %call4 = call %struct.rtx_def* @sched_get_condition_with_rev(%struct.rtx_def* %5, i8* %rev2), !dbg !2457
  store %struct.rtx_def* %call4, %struct.rtx_def** %cond2, align 8, !dbg !2458
  %6 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8, !dbg !2459
  %tobool = icmp ne %struct.rtx_def* %6, null, !dbg !2459
  br i1 %tobool, label %land.lhs.true5, label %if.end, !dbg !2461

land.lhs.true5:                                   ; preds = %if.then
  %7 = load %struct.rtx_def*, %struct.rtx_def** %cond2, align 8, !dbg !2462
  %tobool6 = icmp ne %struct.rtx_def* %7, null, !dbg !2462
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !2463

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %8 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8, !dbg !2464
  %9 = load %struct.rtx_def*, %struct.rtx_def** %cond2, align 8, !dbg !2465
  %10 = load i8, i8* %rev1, align 1, !dbg !2466
  %11 = load i8, i8* %rev2, align 1, !dbg !2467
  %call8 = call i32 @conditions_mutex_p(%struct.rtx_def* %8, %struct.rtx_def* %9, i8 zeroext %10, i8 zeroext %11), !dbg !2468
  %tobool9 = icmp ne i32 %call8, 0, !dbg !2468
  br i1 %tobool9, label %land.lhs.true10, label %if.end, !dbg !2469

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %12 = load %struct.rtx_def*, %struct.rtx_def** %cond1, align 8, !dbg !2470
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn2.addr, align 8, !dbg !2471
  %call11 = call i32 @modified_in_p(%struct.rtx_def* %12, %struct.rtx_def* %13), !dbg !2472
  %tobool12 = icmp ne i32 %call11, 0, !dbg !2472
  br i1 %tobool12, label %if.end, label %land.lhs.true13, !dbg !2473

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %14 = load %struct.rtx_def*, %struct.rtx_def** %cond2, align 8, !dbg !2474
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn1.addr, align 8, !dbg !2475
  %call14 = call i32 @modified_in_p(%struct.rtx_def* %14, %struct.rtx_def* %15), !dbg !2476
  %tobool15 = icmp ne i32 %call14, 0, !dbg !2476
  br i1 %tobool15, label %if.end, label %if.then16, !dbg !2477

if.then16:                                        ; preds = %land.lhs.true13
  store i8 1, i8* %retval, align 1, !dbg !2478
  br label %return, !dbg !2478

if.end:                                           ; preds = %land.lhs.true13, %land.lhs.true10, %land.lhs.true7, %land.lhs.true5, %if.then
  br label %if.end17, !dbg !2479

if.end17:                                         ; preds = %if.end, %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !2480
  br label %return, !dbg !2480

return:                                           ; preds = %if.end17, %if.then16
  %16 = load i8, i8* %retval, align 1, !dbg !2481
  ret i8 %16, !dbg !2481
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @sched_get_condition_with_rev(%struct.rtx_def* %insn, i8* %rev) #0 !dbg !2482 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %rev.addr = alloca i8*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %cond = alloca %struct.rtx_def*, align 8
  %revcode = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2486, metadata !DIExpression()), !dbg !2487
  store i8* %rev, i8** %rev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rev.addr, metadata !2488, metadata !DIExpression()), !dbg !2489
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !2490, metadata !DIExpression()), !dbg !2491
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2492
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !2492
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2492
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !2492
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2492
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2492
  store %struct.rtx_def* %1, %struct.rtx_def** %pat, align 8, !dbg !2491
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !2493, metadata !DIExpression()), !dbg !2494
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !2495
  %cmp = icmp eq %struct.rtx_def* %2, null, !dbg !2497
  br i1 %cmp, label %if.then, label %if.end, !dbg !2498

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !2499
  br label %return, !dbg !2499

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %rev.addr, align 8, !dbg !2500
  %tobool = icmp ne i8* %3, null, !dbg !2500
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !2502

if.then1:                                         ; preds = %if.end
  %4 = load i8*, i8** %rev.addr, align 8, !dbg !2503
  store i8 0, i8* %4, align 1, !dbg !2504
  br label %if.end2, !dbg !2505

if.end2:                                          ; preds = %if.then1, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !2506
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !2506
  %bf.load = load i32, i32* %6, align 8, !dbg !2506
  %bf.clear = and i32 %bf.load, 65535, !dbg !2506
  %cmp3 = icmp eq i32 %bf.clear, 14, !dbg !2508
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !2509

if.then4:                                         ; preds = %if.end2
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !2510
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !2510
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !2510
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !2510
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !2510
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !2510
  store %struct.rtx_def* %8, %struct.rtx_def** %retval, align 8, !dbg !2511
  br label %return, !dbg !2511

if.end9:                                          ; preds = %if.end2
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2512
  %call = call i32 @any_condjump_p(%struct.rtx_def* %9), !dbg !2514
  %tobool10 = icmp ne i32 %call, 0, !dbg !2514
  br i1 %tobool10, label %lor.lhs.false, label %if.then13, !dbg !2515

lor.lhs.false:                                    ; preds = %if.end9
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2516
  %call11 = call i32 @onlyjump_p(%struct.rtx_def* %10), !dbg !2517
  %tobool12 = icmp ne i32 %call11, 0, !dbg !2517
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !2518

if.then13:                                        ; preds = %lor.lhs.false, %if.end9
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !2519
  br label %return, !dbg !2519

if.end14:                                         ; preds = %lor.lhs.false
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2520
  %call15 = call %struct.rtx_def* @pc_set(%struct.rtx_def* %11), !dbg !2520
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call15, i32 0, i32 1, !dbg !2520
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !2520
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !2520
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !2520
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !2520
  store %struct.rtx_def* %12, %struct.rtx_def** %src, align 8, !dbg !2521
  %13 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !2522
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !2522
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !2522
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 2, !dbg !2522
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !2522
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !2522
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !2524
  %cmp24 = icmp eq %struct.rtx_def* %14, %15, !dbg !2525
  br i1 %cmp24, label %if.then25, label %if.else, !dbg !2526

if.then25:                                        ; preds = %if.end14
  %16 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !2527
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !2527
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !2527
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 0, !dbg !2527
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !2527
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !2527
  store %struct.rtx_def* %17, %struct.rtx_def** %retval, align 8, !dbg !2528
  br label %return, !dbg !2528

if.else:                                          ; preds = %if.end14
  %18 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !2529
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !2529
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !2529
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 1, !dbg !2529
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !2529
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !2529
  %20 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !2531
  %cmp34 = icmp eq %struct.rtx_def* %19, %20, !dbg !2532
  br i1 %cmp34, label %if.then35, label %if.end47, !dbg !2533

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cond, metadata !2534, metadata !DIExpression()), !dbg !2536
  %21 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !2537
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !2537
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !2537
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 0, !dbg !2537
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !2537
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !2537
  store %struct.rtx_def* %22, %struct.rtx_def** %cond, align 8, !dbg !2536
  call void @llvm.dbg.declare(metadata i32* %revcode, metadata !2538, metadata !DIExpression()), !dbg !2539
  %23 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !2540
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2541
  %call40 = call i32 @reversed_comparison_code(%struct.rtx_def* %23, %struct.rtx_def* %24), !dbg !2542
  store i32 %call40, i32* %revcode, align 4, !dbg !2539
  %25 = load i32, i32* %revcode, align 4, !dbg !2543
  %cmp41 = icmp eq i32 %25, 0, !dbg !2545
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !2546

if.then42:                                        ; preds = %if.then35
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !2547
  br label %return, !dbg !2547

if.end43:                                         ; preds = %if.then35
  %26 = load i8*, i8** %rev.addr, align 8, !dbg !2548
  %tobool44 = icmp ne i8* %26, null, !dbg !2548
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !2550

if.then45:                                        ; preds = %if.end43
  %27 = load i8*, i8** %rev.addr, align 8, !dbg !2551
  store i8 1, i8* %27, align 1, !dbg !2552
  br label %if.end46, !dbg !2553

if.end46:                                         ; preds = %if.then45, %if.end43
  %28 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !2554
  store %struct.rtx_def* %28, %struct.rtx_def** %retval, align 8, !dbg !2555
  br label %return, !dbg !2555

if.end47:                                         ; preds = %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !2556
  br label %return, !dbg !2556

return:                                           ; preds = %if.end48, %if.end46, %if.then42, %if.then25, %if.then13, %if.then4, %if.then
  %29 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !2557
  ret %struct.rtx_def* %29, !dbg !2557
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @conditions_mutex_p(%struct.rtx_def* %cond1, %struct.rtx_def* %cond2, i8 zeroext %rev1, i8 zeroext %rev2) #0 !dbg !2558 {
entry:
  %retval = alloca i32, align 4
  %cond1.addr = alloca %struct.rtx_def*, align 8
  %cond2.addr = alloca %struct.rtx_def*, align 8
  %rev1.addr = alloca i8, align 1
  %rev2.addr = alloca i8, align 1
  store %struct.rtx_def* %cond1, %struct.rtx_def** %cond1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cond1.addr, metadata !2561, metadata !DIExpression()), !dbg !2562
  store %struct.rtx_def* %cond2, %struct.rtx_def** %cond2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cond2.addr, metadata !2563, metadata !DIExpression()), !dbg !2564
  store i8 %rev1, i8* %rev1.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rev1.addr, metadata !2565, metadata !DIExpression()), !dbg !2566
  store i8 %rev2, i8* %rev2.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rev2.addr, metadata !2567, metadata !DIExpression()), !dbg !2568
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cond1.addr, align 8, !dbg !2569
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2569
  %bf.load = load i32, i32* %1, align 8, !dbg !2569
  %bf.clear = and i32 %bf.load, 65535, !dbg !2569
  %idxprom = sext i32 %bf.clear to i64, !dbg !2569
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2569
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2569
  %and = and i32 %2, -2, !dbg !2569
  %cmp = icmp eq i32 %and, 0, !dbg !2569
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2571

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %cond2.addr, align 8, !dbg !2572
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !2572
  %bf.load1 = load i32, i32* %4, align 8, !dbg !2572
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !2572
  %idxprom3 = sext i32 %bf.clear2 to i64, !dbg !2572
  %arrayidx4 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom3, !dbg !2572
  %5 = load i32, i32* %arrayidx4, align 4, !dbg !2572
  %and5 = and i32 %5, -2, !dbg !2572
  %cmp6 = icmp eq i32 %and5, 0, !dbg !2572
  br i1 %cmp6, label %land.lhs.true7, label %if.end, !dbg !2573

land.lhs.true7:                                   ; preds = %land.lhs.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** %cond1.addr, align 8, !dbg !2574
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2574
  %bf.load8 = load i32, i32* %7, align 8, !dbg !2574
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !2574
  %8 = load i8, i8* %rev1.addr, align 1, !dbg !2575
  %conv = zext i8 %8 to i32, !dbg !2575
  %9 = load i8, i8* %rev2.addr, align 1, !dbg !2576
  %conv10 = zext i8 %9 to i32, !dbg !2576
  %cmp11 = icmp eq i32 %conv, %conv10, !dbg !2577
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !2575

cond.true:                                        ; preds = %land.lhs.true7
  %10 = load %struct.rtx_def*, %struct.rtx_def** %cond2.addr, align 8, !dbg !2578
  %call = call i32 @reversed_comparison_code(%struct.rtx_def* %10, %struct.rtx_def* null), !dbg !2579
  br label %cond.end, !dbg !2575

cond.false:                                       ; preds = %land.lhs.true7
  %11 = load %struct.rtx_def*, %struct.rtx_def** %cond2.addr, align 8, !dbg !2580
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !2580
  %bf.load13 = load i32, i32* %12, align 8, !dbg !2580
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !2580
  br label %cond.end, !dbg !2575

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear14, %cond.false ], !dbg !2575
  %cmp15 = icmp eq i32 %bf.clear9, %cond, !dbg !2581
  br i1 %cmp15, label %land.lhs.true17, label %if.end, !dbg !2582

land.lhs.true17:                                  ; preds = %cond.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %cond1.addr, align 8, !dbg !2583
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !2583
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2583
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2583
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !2583
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2583
  %15 = load %struct.rtx_def*, %struct.rtx_def** %cond2.addr, align 8, !dbg !2584
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !2584
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !2584
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 0, !dbg !2584
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !2584
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !2584
  %cmp23 = icmp eq %struct.rtx_def* %14, %16, !dbg !2585
  br i1 %cmp23, label %land.lhs.true25, label %if.end, !dbg !2586

land.lhs.true25:                                  ; preds = %land.lhs.true17
  %17 = load %struct.rtx_def*, %struct.rtx_def** %cond1.addr, align 8, !dbg !2587
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !2587
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !2587
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !2587
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !2587
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !2587
  %19 = load %struct.rtx_def*, %struct.rtx_def** %cond2.addr, align 8, !dbg !2588
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !2588
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !2588
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 1, !dbg !2588
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !2588
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !2588
  %cmp34 = icmp eq %struct.rtx_def* %18, %20, !dbg !2589
  br i1 %cmp34, label %if.then, label %if.end, !dbg !2590

if.then:                                          ; preds = %land.lhs.true25
  store i32 1, i32* %retval, align 4, !dbg !2591
  br label %return, !dbg !2591

if.end:                                           ; preds = %land.lhs.true25, %land.lhs.true17, %cond.end, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !2592
  br label %return, !dbg !2592

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !2593
  ret i32 %21, !dbg !2593
}

declare dso_local i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %insn, i32 %ds) #0 !dbg !2594 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %ds.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2597, metadata !DIExpression()), !dbg !2598
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !2599, metadata !DIExpression()), !dbg !2600
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2601
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %0, null, !dbg !2601
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2601

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2601
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %1, i32 0, i32 0, !dbg !2601
  br label %cond.end, !dbg !2601

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2601

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2601
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2601
  %tobool1 = icmp ne %struct.VEC_int_heap* %2, null, !dbg !2601
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !2601

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2601
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i32 0, i32 0, !dbg !2601
  br label %cond.end5, !dbg !2601

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !2601

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !2601
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2601
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !2601
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2601
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2601
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2601
  %5 = load i32, i32* %rt_int, align 8, !dbg !2601
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %5), !dbg !2601
  %call7 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %call), !dbg !2601
  %has_internal_dep = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call7, i32 0, i32 1, !dbg !2601
  %6 = load i32, i32* %has_internal_dep, align 4, !dbg !2601
  %tobool8 = icmp ne i32 %6, 0, !dbg !2601
  br i1 %tobool8, label %if.then, label %if.end, !dbg !2603

if.then:                                          ; preds = %cond.end5
  store i8 0, i8* %retval, align 1, !dbg !2604
  br label %return, !dbg !2604

if.end:                                           ; preds = %cond.end5
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2605
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !2605
  %bf.load = load i32, i32* %8, align 8, !dbg !2605
  %bf.clear = and i32 %bf.load, 65535, !dbg !2605
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !2605
  br i1 %cmp, label %if.end10, label %if.then9, !dbg !2607

if.then9:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !2608
  br label %return, !dbg !2608

if.end10:                                         ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2609
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !2609
  %bf.load11 = load i32, i32* %10, align 8, !dbg !2609
  %bf.lshr = lshr i32 %bf.load11, 28, !dbg !2609
  %bf.clear12 = and i32 %bf.lshr, 1, !dbg !2609
  %tobool13 = icmp ne i32 %bf.clear12, 0, !dbg !2609
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !2611

if.then14:                                        ; preds = %if.end10
  store i8 0, i8* %retval, align 1, !dbg !2612
  br label %return, !dbg !2612

if.end15:                                         ; preds = %if.end10
  %call16 = call zeroext i8 @sel_sched_p(), !dbg !2613
  %conv = zext i8 %call16 to i32, !dbg !2613
  %tobool17 = icmp ne i32 %conv, 0, !dbg !2613
  br i1 %tobool17, label %cond.true18, label %cond.false22, !dbg !2615

cond.true18:                                      ; preds = %if.end15
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2613
  %call19 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %11), !dbg !2613
  %conv20 = zext i8 %call19 to i32, !dbg !2613
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !2613
  br i1 %tobool21, label %if.then36, label %if.end37, !dbg !2613

cond.false22:                                     ; preds = %if.end15
  %12 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !2613
  %tobool23 = icmp ne %struct.VEC_haifa_insn_data_def_heap* %12, null, !dbg !2613
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !2613

cond.true24:                                      ; preds = %cond.false22
  %13 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !2613
  %base25 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %13, i32 0, i32 0, !dbg !2613
  br label %cond.end27, !dbg !2613

cond.false26:                                     ; preds = %cond.false22
  br label %cond.end27, !dbg !2613

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi %struct.VEC_haifa_insn_data_def_base* [ %base25, %cond.true24 ], [ null, %cond.false26 ], !dbg !2613
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2613
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !2613
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !2613
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !2613
  %rt_int32 = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !2613
  %15 = load i32, i32* %rt_int32, align 8, !dbg !2613
  %call33 = call %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %cond28, i32 %15), !dbg !2613
  %recovery_block = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call33, i32 0, i32 11, !dbg !2613
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %recovery_block, align 8, !dbg !2613
  %cmp34 = icmp ne %struct.basic_block_def* %16, null, !dbg !2613
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !2615

if.then36:                                        ; preds = %cond.end27, %cond.true18
  store i8 0, i8* %retval, align 1, !dbg !2616
  br label %return, !dbg !2616

if.end37:                                         ; preds = %cond.end27, %cond.true18
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2617
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !2617
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !2617
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 5, !dbg !2617
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !2617
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2617
  %call41 = call i32 @side_effects_p(%struct.rtx_def* %18), !dbg !2619
  %tobool42 = icmp ne i32 %call41, 0, !dbg !2619
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !2620

if.then43:                                        ; preds = %if.end37
  store i8 0, i8* %retval, align 1, !dbg !2621
  br label %return, !dbg !2621

if.end44:                                         ; preds = %if.end37
  %19 = load i32, i32* %ds.addr, align 4, !dbg !2622
  %and = and i32 %19, 16519104, !dbg !2624
  %tobool45 = icmp ne i32 %and, 0, !dbg !2624
  br i1 %tobool45, label %if.then46, label %if.end62, !dbg !2625

if.then46:                                        ; preds = %if.end44
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2626
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !2626
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !2626
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 5, !dbg !2626
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !2626
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !2626
  %call51 = call i32 @may_trap_p(%struct.rtx_def* %21), !dbg !2629
  %tobool52 = icmp ne i32 %call51, 0, !dbg !2629
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !2630

if.then53:                                        ; preds = %if.then46
  store i8 0, i8* %retval, align 1, !dbg !2631
  br label %return, !dbg !2631

if.end54:                                         ; preds = %if.then46
  %22 = load i32, i32* %ds.addr, align 4, !dbg !2632
  %and55 = and i32 %22, 4032, !dbg !2634
  %tobool56 = icmp ne i32 %and55, 0, !dbg !2634
  br i1 %tobool56, label %land.lhs.true, label %if.end61, !dbg !2635

land.lhs.true:                                    ; preds = %if.end54
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2636
  %call57 = call zeroext i8 @sched_has_condition_p(%struct.rtx_def* %23), !dbg !2637
  %conv58 = zext i8 %call57 to i32, !dbg !2637
  %tobool59 = icmp ne i32 %conv58, 0, !dbg !2637
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !2638

if.then60:                                        ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !2639
  br label %return, !dbg !2639

if.end61:                                         ; preds = %land.lhs.true, %if.end54
  br label %if.end62, !dbg !2640

if.end62:                                         ; preds = %if.end61, %if.end44
  store i8 1, i8* %retval, align 1, !dbg !2641
  br label %return, !dbg !2641

return:                                           ; preds = %if.end62, %if.then60, %if.then53, %if.then43, %if.then36, %if.then14, %if.then9, %if.then
  %24 = load i8, i8* %retval, align 1, !dbg !2642
  ret i8 %24, !dbg !2642
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %vec_, i32 %ix_) #0 !dbg !2643 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_deps_insn_data_def_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_haifa_deps_insn_data_def_base* %vec_, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, metadata !2648, metadata !DIExpression()), !dbg !2649
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !2650, metadata !DIExpression()), !dbg !2649
  %0 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !2649
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_base* %0, null, !dbg !2649
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2649

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !2649
  %2 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !2649
  %num = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %2, i32 0, i32 0, !dbg !2649
  %3 = load i32, i32* %num, align 8, !dbg !2649
  %cmp = icmp ult i32 %1, %3, !dbg !2649
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !2651
  %land.ext = zext i1 %4 to i32, !dbg !2649
  %5 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !2649
  %vec = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %5, i32 0, i32 2, !dbg !2649
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !2649
  %idxprom = zext i32 %6 to i64, !dbg !2649
  %arrayidx = getelementptr inbounds [1 x %struct._haifa_deps_insn_data], [1 x %struct._haifa_deps_insn_data]* %vec, i64 0, i64 %idxprom, !dbg !2649
  ret %struct._haifa_deps_insn_data* %arrayidx, !dbg !2649
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_int_base_index(%struct.VEC_int_base* %vec_, i32 %ix_) #0 !dbg !2652 {
entry:
  %vec_.addr = alloca %struct.VEC_int_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_int_base* %vec_, %struct.VEC_int_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_int_base** %vec_.addr, metadata !2664, metadata !DIExpression()), !dbg !2665
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !2666, metadata !DIExpression()), !dbg !2665
  %0 = load %struct.VEC_int_base*, %struct.VEC_int_base** %vec_.addr, align 8, !dbg !2665
  %tobool = icmp ne %struct.VEC_int_base* %0, null, !dbg !2665
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2665

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !2665
  %2 = load %struct.VEC_int_base*, %struct.VEC_int_base** %vec_.addr, align 8, !dbg !2665
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %2, i32 0, i32 0, !dbg !2665
  %3 = load i32, i32* %num, align 4, !dbg !2665
  %cmp = icmp ult i32 %1, %3, !dbg !2665
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !2667
  %land.ext = zext i1 %4 to i32, !dbg !2665
  %5 = load %struct.VEC_int_base*, %struct.VEC_int_base** %vec_.addr, align 8, !dbg !2665
  %vec = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %5, i32 0, i32 2, !dbg !2665
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !2665
  %idxprom = zext i32 %6 to i64, !dbg !2665
  %arrayidx = getelementptr inbounds [1 x i32], [1 x i32]* %vec, i64 0, i64 %idxprom, !dbg !2665
  %7 = load i32, i32* %arrayidx, align 4, !dbg !2665
  ret i32 %7, !dbg !2665
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sel_sched_p() #0 !dbg !2668 {
entry:
  %0 = load %struct.common_sched_info_def*, %struct.common_sched_info_def** @common_sched_info, align 8, !dbg !2669
  %sched_pass_id = getelementptr inbounds %struct.common_sched_info_def, %struct.common_sched_info_def* %0, i32 0, i32 4, !dbg !2670
  %1 = load i32, i32* %sched_pass_id, align 8, !dbg !2670
  %cmp = icmp eq i32 %1, 4, !dbg !2671
  %conv = zext i1 %cmp to i32, !dbg !2671
  %conv1 = trunc i32 %conv to i8, !dbg !2669
  ret i8 %conv1, !dbg !2672
}

declare dso_local zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %vec_, i32 %ix_) #0 !dbg !2673 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_insn_data_def_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_haifa_insn_data_def_base* %vec_, %struct.VEC_haifa_insn_data_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_insn_data_def_base** %vec_.addr, metadata !2708, metadata !DIExpression()), !dbg !2709
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !2710, metadata !DIExpression()), !dbg !2709
  %0 = load %struct.VEC_haifa_insn_data_def_base*, %struct.VEC_haifa_insn_data_def_base** %vec_.addr, align 8, !dbg !2709
  %tobool = icmp ne %struct.VEC_haifa_insn_data_def_base* %0, null, !dbg !2709
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2709

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !2709
  %2 = load %struct.VEC_haifa_insn_data_def_base*, %struct.VEC_haifa_insn_data_def_base** %vec_.addr, align 8, !dbg !2709
  %num = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %2, i32 0, i32 0, !dbg !2709
  %3 = load i32, i32* %num, align 8, !dbg !2709
  %cmp = icmp ult i32 %1, %3, !dbg !2709
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !2711
  %land.ext = zext i1 %4 to i32, !dbg !2709
  %5 = load %struct.VEC_haifa_insn_data_def_base*, %struct.VEC_haifa_insn_data_def_base** %vec_.addr, align 8, !dbg !2709
  %vec = getelementptr inbounds %struct.VEC_haifa_insn_data_def_base, %struct.VEC_haifa_insn_data_def_base* %5, i32 0, i32 2, !dbg !2709
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !2709
  %idxprom = zext i32 %6 to i64, !dbg !2709
  %arrayidx = getelementptr inbounds [1 x %struct._haifa_insn_data], [1 x %struct._haifa_insn_data]* %vec, i64 0, i64 %idxprom, !dbg !2709
  ret %struct._haifa_insn_data* %arrayidx, !dbg !2709
}

declare dso_local i32 @side_effects_p(%struct.rtx_def*) #2

declare dso_local i32 @may_trap_p(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sched_has_condition_p(%struct.rtx_def* %insn) #0 !dbg !2712 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2715, metadata !DIExpression()), !dbg !2716
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2717
  %call = call %struct.rtx_def* @sched_get_condition_with_rev(%struct.rtx_def* %0, i8* null), !dbg !2718
  %tobool = icmp ne %struct.rtx_def* %call, null, !dbg !2719
  %lnot = xor i1 %tobool, true, !dbg !2719
  %lnot1 = xor i1 %lnot, true, !dbg !2720
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2720
  %conv = trunc i32 %lnot.ext to i8, !dbg !2720
  ret i8 %conv, !dbg !2721
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_next_list(%struct.rtx_def* %insn, i32* %types_ptr, %struct._deps_list** %list_ptr, i8* %resolved_p_ptr) #0 !dbg !2722 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %types_ptr.addr = alloca i32*, align 8
  %list_ptr.addr = alloca %struct._deps_list**, align 8
  %resolved_p_ptr.addr = alloca i8*, align 8
  %types = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2727, metadata !DIExpression()), !dbg !2728
  store i32* %types_ptr, i32** %types_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %types_ptr.addr, metadata !2729, metadata !DIExpression()), !dbg !2730
  store %struct._deps_list** %list_ptr, %struct._deps_list*** %list_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list*** %list_ptr.addr, metadata !2731, metadata !DIExpression()), !dbg !2732
  store i8* %resolved_p_ptr, i8** %resolved_p_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %resolved_p_ptr.addr, metadata !2733, metadata !DIExpression()), !dbg !2734
  call void @llvm.dbg.declare(metadata i32* %types, metadata !2735, metadata !DIExpression()), !dbg !2736
  %0 = load i32*, i32** %types_ptr.addr, align 8, !dbg !2737
  %1 = load i32, i32* %0, align 4, !dbg !2738
  store i32 %1, i32* %types, align 4, !dbg !2736
  %2 = load i32, i32* %types, align 4, !dbg !2739
  %and = and i32 %2, 1, !dbg !2741
  %tobool = icmp ne i32 %and, 0, !dbg !2741
  br i1 %tobool, label %if.then, label %if.else, !dbg !2742

if.then:                                          ; preds = %entry
  %3 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2743
  %tobool1 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %3, null, !dbg !2743
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !2743

cond.true:                                        ; preds = %if.then
  %4 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2743
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %4, i32 0, i32 0, !dbg !2743
  br label %cond.end, !dbg !2743

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !2743

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2743
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2743
  %tobool2 = icmp ne %struct.VEC_int_heap* %5, null, !dbg !2743
  br i1 %tobool2, label %cond.true3, label %cond.false5, !dbg !2743

cond.true3:                                       ; preds = %cond.end
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2743
  %base4 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i32 0, i32 0, !dbg !2743
  br label %cond.end6, !dbg !2743

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !2743

cond.end6:                                        ; preds = %cond.false5, %cond.true3
  %cond7 = phi %struct.VEC_int_base* [ %base4, %cond.true3 ], [ null, %cond.false5 ], !dbg !2743
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2743
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !2743
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2743
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2743
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2743
  %8 = load i32, i32* %rt_int, align 8, !dbg !2743
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond7, i32 %8), !dbg !2743
  %call8 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %call), !dbg !2743
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call8, i32 0, i32 2, !dbg !2743
  %9 = load %struct._deps_list*, %struct._deps_list** %hard_back_deps, align 8, !dbg !2743
  %10 = load %struct._deps_list**, %struct._deps_list*** %list_ptr.addr, align 8, !dbg !2745
  store %struct._deps_list* %9, %struct._deps_list** %10, align 8, !dbg !2746
  %11 = load i8*, i8** %resolved_p_ptr.addr, align 8, !dbg !2747
  store i8 0, i8* %11, align 1, !dbg !2748
  %12 = load i32, i32* %types, align 4, !dbg !2749
  %and9 = and i32 %12, -2, !dbg !2750
  %13 = load i32*, i32** %types_ptr.addr, align 8, !dbg !2751
  store i32 %and9, i32* %13, align 4, !dbg !2752
  br label %if.end105, !dbg !2753

if.else:                                          ; preds = %entry
  %14 = load i32, i32* %types, align 4, !dbg !2754
  %and10 = and i32 %14, 2, !dbg !2756
  %tobool11 = icmp ne i32 %and10, 0, !dbg !2756
  br i1 %tobool11, label %if.then12, label %if.else32, !dbg !2757

if.then12:                                        ; preds = %if.else
  %15 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2758
  %tobool13 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %15, null, !dbg !2758
  br i1 %tobool13, label %cond.true14, label %cond.false16, !dbg !2758

cond.true14:                                      ; preds = %if.then12
  %16 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2758
  %base15 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %16, i32 0, i32 0, !dbg !2758
  br label %cond.end17, !dbg !2758

cond.false16:                                     ; preds = %if.then12
  br label %cond.end17, !dbg !2758

cond.end17:                                       ; preds = %cond.false16, %cond.true14
  %cond18 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base15, %cond.true14 ], [ null, %cond.false16 ], !dbg !2758
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2758
  %tobool19 = icmp ne %struct.VEC_int_heap* %17, null, !dbg !2758
  br i1 %tobool19, label %cond.true20, label %cond.false22, !dbg !2758

cond.true20:                                      ; preds = %cond.end17
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2758
  %base21 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i32 0, i32 0, !dbg !2758
  br label %cond.end23, !dbg !2758

cond.false22:                                     ; preds = %cond.end17
  br label %cond.end23, !dbg !2758

cond.end23:                                       ; preds = %cond.false22, %cond.true20
  %cond24 = phi %struct.VEC_int_base* [ %base21, %cond.true20 ], [ null, %cond.false22 ], !dbg !2758
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2758
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !2758
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !2758
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !2758
  %rt_int28 = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !2758
  %20 = load i32, i32* %rt_int28, align 8, !dbg !2758
  %call29 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond24, i32 %20), !dbg !2758
  %call30 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond18, i32 %call29), !dbg !2758
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call30, i32 0, i32 3, !dbg !2758
  %21 = load %struct._deps_list*, %struct._deps_list** %spec_back_deps, align 8, !dbg !2758
  %22 = load %struct._deps_list**, %struct._deps_list*** %list_ptr.addr, align 8, !dbg !2760
  store %struct._deps_list* %21, %struct._deps_list** %22, align 8, !dbg !2761
  %23 = load i8*, i8** %resolved_p_ptr.addr, align 8, !dbg !2762
  store i8 0, i8* %23, align 1, !dbg !2763
  %24 = load i32, i32* %types, align 4, !dbg !2764
  %and31 = and i32 %24, -3, !dbg !2765
  %25 = load i32*, i32** %types_ptr.addr, align 8, !dbg !2766
  store i32 %and31, i32* %25, align 4, !dbg !2767
  br label %if.end104, !dbg !2768

if.else32:                                        ; preds = %if.else
  %26 = load i32, i32* %types, align 4, !dbg !2769
  %and33 = and i32 %26, 4, !dbg !2771
  %tobool34 = icmp ne i32 %and33, 0, !dbg !2771
  br i1 %tobool34, label %if.then35, label %if.else55, !dbg !2772

if.then35:                                        ; preds = %if.else32
  %27 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2773
  %tobool36 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %27, null, !dbg !2773
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !2773

cond.true37:                                      ; preds = %if.then35
  %28 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2773
  %base38 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %28, i32 0, i32 0, !dbg !2773
  br label %cond.end40, !dbg !2773

cond.false39:                                     ; preds = %if.then35
  br label %cond.end40, !dbg !2773

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base38, %cond.true37 ], [ null, %cond.false39 ], !dbg !2773
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2773
  %tobool42 = icmp ne %struct.VEC_int_heap* %29, null, !dbg !2773
  br i1 %tobool42, label %cond.true43, label %cond.false45, !dbg !2773

cond.true43:                                      ; preds = %cond.end40
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2773
  %base44 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %30, i32 0, i32 0, !dbg !2773
  br label %cond.end46, !dbg !2773

cond.false45:                                     ; preds = %cond.end40
  br label %cond.end46, !dbg !2773

cond.end46:                                       ; preds = %cond.false45, %cond.true43
  %cond47 = phi %struct.VEC_int_base* [ %base44, %cond.true43 ], [ null, %cond.false45 ], !dbg !2773
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2773
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !2773
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !2773
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !2773
  %rt_int51 = bitcast %union.rtunion_def* %arrayidx50 to i32*, !dbg !2773
  %32 = load i32, i32* %rt_int51, align 8, !dbg !2773
  %call52 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond47, i32 %32), !dbg !2773
  %call53 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond41, i32 %call52), !dbg !2773
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call53, i32 0, i32 4, !dbg !2773
  %33 = load %struct._deps_list*, %struct._deps_list** %forw_deps, align 8, !dbg !2773
  %34 = load %struct._deps_list**, %struct._deps_list*** %list_ptr.addr, align 8, !dbg !2775
  store %struct._deps_list* %33, %struct._deps_list** %34, align 8, !dbg !2776
  %35 = load i8*, i8** %resolved_p_ptr.addr, align 8, !dbg !2777
  store i8 0, i8* %35, align 1, !dbg !2778
  %36 = load i32, i32* %types, align 4, !dbg !2779
  %and54 = and i32 %36, -5, !dbg !2780
  %37 = load i32*, i32** %types_ptr.addr, align 8, !dbg !2781
  store i32 %and54, i32* %37, align 4, !dbg !2782
  br label %if.end103, !dbg !2783

if.else55:                                        ; preds = %if.else32
  %38 = load i32, i32* %types, align 4, !dbg !2784
  %and56 = and i32 %38, 8, !dbg !2786
  %tobool57 = icmp ne i32 %and56, 0, !dbg !2786
  br i1 %tobool57, label %if.then58, label %if.else78, !dbg !2787

if.then58:                                        ; preds = %if.else55
  %39 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2788
  %tobool59 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %39, null, !dbg !2788
  br i1 %tobool59, label %cond.true60, label %cond.false62, !dbg !2788

cond.true60:                                      ; preds = %if.then58
  %40 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2788
  %base61 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %40, i32 0, i32 0, !dbg !2788
  br label %cond.end63, !dbg !2788

cond.false62:                                     ; preds = %if.then58
  br label %cond.end63, !dbg !2788

cond.end63:                                       ; preds = %cond.false62, %cond.true60
  %cond64 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base61, %cond.true60 ], [ null, %cond.false62 ], !dbg !2788
  %41 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2788
  %tobool65 = icmp ne %struct.VEC_int_heap* %41, null, !dbg !2788
  br i1 %tobool65, label %cond.true66, label %cond.false68, !dbg !2788

cond.true66:                                      ; preds = %cond.end63
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2788
  %base67 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %42, i32 0, i32 0, !dbg !2788
  br label %cond.end69, !dbg !2788

cond.false68:                                     ; preds = %cond.end63
  br label %cond.end69, !dbg !2788

cond.end69:                                       ; preds = %cond.false68, %cond.true66
  %cond70 = phi %struct.VEC_int_base* [ %base67, %cond.true66 ], [ null, %cond.false68 ], !dbg !2788
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2788
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !2788
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !2788
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 0, !dbg !2788
  %rt_int74 = bitcast %union.rtunion_def* %arrayidx73 to i32*, !dbg !2788
  %44 = load i32, i32* %rt_int74, align 8, !dbg !2788
  %call75 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond70, i32 %44), !dbg !2788
  %call76 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond64, i32 %call75), !dbg !2788
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call76, i32 0, i32 5, !dbg !2788
  %45 = load %struct._deps_list*, %struct._deps_list** %resolved_back_deps, align 8, !dbg !2788
  %46 = load %struct._deps_list**, %struct._deps_list*** %list_ptr.addr, align 8, !dbg !2790
  store %struct._deps_list* %45, %struct._deps_list** %46, align 8, !dbg !2791
  %47 = load i8*, i8** %resolved_p_ptr.addr, align 8, !dbg !2792
  store i8 1, i8* %47, align 1, !dbg !2793
  %48 = load i32, i32* %types, align 4, !dbg !2794
  %and77 = and i32 %48, -9, !dbg !2795
  %49 = load i32*, i32** %types_ptr.addr, align 8, !dbg !2796
  store i32 %and77, i32* %49, align 4, !dbg !2797
  br label %if.end102, !dbg !2798

if.else78:                                        ; preds = %if.else55
  %50 = load i32, i32* %types, align 4, !dbg !2799
  %and79 = and i32 %50, 16, !dbg !2801
  %tobool80 = icmp ne i32 %and79, 0, !dbg !2801
  br i1 %tobool80, label %if.then81, label %if.else101, !dbg !2802

if.then81:                                        ; preds = %if.else78
  %51 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2803
  %tobool82 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %51, null, !dbg !2803
  br i1 %tobool82, label %cond.true83, label %cond.false85, !dbg !2803

cond.true83:                                      ; preds = %if.then81
  %52 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2803
  %base84 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %52, i32 0, i32 0, !dbg !2803
  br label %cond.end86, !dbg !2803

cond.false85:                                     ; preds = %if.then81
  br label %cond.end86, !dbg !2803

cond.end86:                                       ; preds = %cond.false85, %cond.true83
  %cond87 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base84, %cond.true83 ], [ null, %cond.false85 ], !dbg !2803
  %53 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2803
  %tobool88 = icmp ne %struct.VEC_int_heap* %53, null, !dbg !2803
  br i1 %tobool88, label %cond.true89, label %cond.false91, !dbg !2803

cond.true89:                                      ; preds = %cond.end86
  %54 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2803
  %base90 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %54, i32 0, i32 0, !dbg !2803
  br label %cond.end92, !dbg !2803

cond.false91:                                     ; preds = %cond.end86
  br label %cond.end92, !dbg !2803

cond.end92:                                       ; preds = %cond.false91, %cond.true89
  %cond93 = phi %struct.VEC_int_base* [ %base90, %cond.true89 ], [ null, %cond.false91 ], !dbg !2803
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2803
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !2803
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !2803
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !2803
  %rt_int97 = bitcast %union.rtunion_def* %arrayidx96 to i32*, !dbg !2803
  %56 = load i32, i32* %rt_int97, align 8, !dbg !2803
  %call98 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond93, i32 %56), !dbg !2803
  %call99 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond87, i32 %call98), !dbg !2803
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call99, i32 0, i32 6, !dbg !2803
  %57 = load %struct._deps_list*, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !2803
  %58 = load %struct._deps_list**, %struct._deps_list*** %list_ptr.addr, align 8, !dbg !2805
  store %struct._deps_list* %57, %struct._deps_list** %58, align 8, !dbg !2806
  %59 = load i8*, i8** %resolved_p_ptr.addr, align 8, !dbg !2807
  store i8 1, i8* %59, align 1, !dbg !2808
  %60 = load i32, i32* %types, align 4, !dbg !2809
  %and100 = and i32 %60, -17, !dbg !2810
  %61 = load i32*, i32** %types_ptr.addr, align 8, !dbg !2811
  store i32 %and100, i32* %61, align 4, !dbg !2812
  br label %if.end, !dbg !2813

if.else101:                                       ; preds = %if.else78
  %62 = load %struct._deps_list**, %struct._deps_list*** %list_ptr.addr, align 8, !dbg !2814
  store %struct._deps_list* null, %struct._deps_list** %62, align 8, !dbg !2816
  %63 = load i8*, i8** %resolved_p_ptr.addr, align 8, !dbg !2817
  store i8 0, i8* %63, align 1, !dbg !2818
  %64 = load i32*, i32** %types_ptr.addr, align 8, !dbg !2819
  store i32 0, i32* %64, align 4, !dbg !2820
  br label %if.end

if.end:                                           ; preds = %if.else101, %cond.end92
  br label %if.end102

if.end102:                                        ; preds = %if.end, %cond.end69
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %cond.end46
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %cond.end23
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %cond.end6
  ret void, !dbg !2821
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sd_lists_size(%struct.rtx_def* %insn, i32 %list_types) #0 !dbg !2822 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %list_types.addr = alloca i32, align 4
  %size = alloca i32, align 4
  %list = alloca %struct._deps_list*, align 8
  %resolved_p = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2825, metadata !DIExpression()), !dbg !2826
  store i32 %list_types, i32* %list_types.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_types.addr, metadata !2827, metadata !DIExpression()), !dbg !2828
  call void @llvm.dbg.declare(metadata i32* %size, metadata !2829, metadata !DIExpression()), !dbg !2830
  store i32 0, i32* %size, align 4, !dbg !2830
  br label %while.cond, !dbg !2831

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %list_types.addr, align 4, !dbg !2832
  %cmp = icmp ne i32 %0, 0, !dbg !2833
  br i1 %cmp, label %while.body, label %while.end, !dbg !2831

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._deps_list** %list, metadata !2834, metadata !DIExpression()), !dbg !2836
  call void @llvm.dbg.declare(metadata i8* %resolved_p, metadata !2837, metadata !DIExpression()), !dbg !2838
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2839
  call void @sd_next_list(%struct.rtx_def* %1, i32* %list_types.addr, %struct._deps_list** %list, i8* %resolved_p), !dbg !2840
  %2 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !2841
  %tobool = icmp ne %struct._deps_list* %2, null, !dbg !2841
  br i1 %tobool, label %if.then, label %if.end, !dbg !2843

if.then:                                          ; preds = %while.body
  %3 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !2844
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %3, i32 0, i32 1, !dbg !2844
  %4 = load i32, i32* %n_links, align 8, !dbg !2844
  %5 = load i32, i32* %size, align 4, !dbg !2845
  %add = add nsw i32 %5, %4, !dbg !2845
  store i32 %add, i32* %size, align 4, !dbg !2845
  br label %if.end, !dbg !2846

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !2831, !llvm.loop !2847

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %size, align 4, !dbg !2849
  ret i32 %6, !dbg !2850
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @sd_lists_empty_p(%struct.rtx_def* %insn, i32 %list_types) #0 !dbg !2851 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %list_types.addr = alloca i32, align 4
  %list = alloca %struct._deps_list*, align 8
  %resolved_p = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2854, metadata !DIExpression()), !dbg !2855
  store i32 %list_types, i32* %list_types.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_types.addr, metadata !2856, metadata !DIExpression()), !dbg !2857
  br label %while.cond, !dbg !2858

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %list_types.addr, align 4, !dbg !2859
  %cmp = icmp ne i32 %0, 0, !dbg !2860
  br i1 %cmp, label %while.body, label %while.end, !dbg !2858

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._deps_list** %list, metadata !2861, metadata !DIExpression()), !dbg !2863
  call void @llvm.dbg.declare(metadata i8* %resolved_p, metadata !2864, metadata !DIExpression()), !dbg !2865
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2866
  call void @sd_next_list(%struct.rtx_def* %1, i32* %list_types.addr, %struct._deps_list** %list, i8* %resolved_p), !dbg !2867
  %2 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !2868
  %call = call zeroext i8 @deps_list_empty_p(%struct._deps_list* %2), !dbg !2870
  %tobool = icmp ne i8 %call, 0, !dbg !2870
  br i1 %tobool, label %if.end, label %if.then, !dbg !2871

if.then:                                          ; preds = %while.body
  store i8 0, i8* %retval, align 1, !dbg !2872
  br label %return, !dbg !2872

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !2858, !llvm.loop !2873

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !2875
  br label %return, !dbg !2875

return:                                           ; preds = %while.end, %if.then
  %3 = load i8, i8* %retval, align 1, !dbg !2876
  ret i8 %3, !dbg !2876
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @deps_list_empty_p(%struct._deps_list* %l) #0 !dbg !2877 {
entry:
  %l.addr = alloca %struct._deps_list*, align 8
  store %struct._deps_list* %l, %struct._deps_list** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list** %l.addr, metadata !2880, metadata !DIExpression()), !dbg !2881
  %0 = load %struct._deps_list*, %struct._deps_list** %l.addr, align 8, !dbg !2882
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %0, i32 0, i32 1, !dbg !2882
  %1 = load i32, i32* %n_links, align 8, !dbg !2882
  %cmp = icmp eq i32 %1, 0, !dbg !2883
  %conv = zext i1 %cmp to i32, !dbg !2883
  %conv1 = trunc i32 %conv to i8, !dbg !2882
  ret i8 %conv1, !dbg !2884
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_init_insn(%struct.rtx_def* %insn) #0 !dbg !2885 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2886, metadata !DIExpression()), !dbg !2887
  %call = call %struct._deps_list* @create_deps_list(), !dbg !2888
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2889
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %0, null, !dbg !2889
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2889

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2889
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %1, i32 0, i32 0, !dbg !2889
  br label %cond.end, !dbg !2889

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2889

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2889
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2889
  %tobool1 = icmp ne %struct.VEC_int_heap* %2, null, !dbg !2889
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !2889

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2889
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %3, i32 0, i32 0, !dbg !2889
  br label %cond.end5, !dbg !2889

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !2889

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !2889
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2889
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !2889
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2889
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2889
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2889
  %5 = load i32, i32* %rt_int, align 8, !dbg !2889
  %call7 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %5), !dbg !2889
  %call8 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %call7), !dbg !2889
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call8, i32 0, i32 2, !dbg !2889
  store %struct._deps_list* %call, %struct._deps_list** %hard_back_deps, align 8, !dbg !2890
  %call9 = call %struct._deps_list* @create_deps_list(), !dbg !2891
  %6 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2892
  %tobool10 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %6, null, !dbg !2892
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !2892

cond.true11:                                      ; preds = %cond.end5
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2892
  %base12 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %7, i32 0, i32 0, !dbg !2892
  br label %cond.end14, !dbg !2892

cond.false13:                                     ; preds = %cond.end5
  br label %cond.end14, !dbg !2892

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base12, %cond.true11 ], [ null, %cond.false13 ], !dbg !2892
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2892
  %tobool16 = icmp ne %struct.VEC_int_heap* %8, null, !dbg !2892
  br i1 %tobool16, label %cond.true17, label %cond.false19, !dbg !2892

cond.true17:                                      ; preds = %cond.end14
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2892
  %base18 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i32 0, i32 0, !dbg !2892
  br label %cond.end20, !dbg !2892

cond.false19:                                     ; preds = %cond.end14
  br label %cond.end20, !dbg !2892

cond.end20:                                       ; preds = %cond.false19, %cond.true17
  %cond21 = phi %struct.VEC_int_base* [ %base18, %cond.true17 ], [ null, %cond.false19 ], !dbg !2892
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2892
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !2892
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !2892
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 0, !dbg !2892
  %rt_int25 = bitcast %union.rtunion_def* %arrayidx24 to i32*, !dbg !2892
  %11 = load i32, i32* %rt_int25, align 8, !dbg !2892
  %call26 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond21, i32 %11), !dbg !2892
  %call27 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond15, i32 %call26), !dbg !2892
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call27, i32 0, i32 3, !dbg !2892
  store %struct._deps_list* %call9, %struct._deps_list** %spec_back_deps, align 8, !dbg !2893
  %call28 = call %struct._deps_list* @create_deps_list(), !dbg !2894
  %12 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2895
  %tobool29 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %12, null, !dbg !2895
  br i1 %tobool29, label %cond.true30, label %cond.false32, !dbg !2895

cond.true30:                                      ; preds = %cond.end20
  %13 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2895
  %base31 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %13, i32 0, i32 0, !dbg !2895
  br label %cond.end33, !dbg !2895

cond.false32:                                     ; preds = %cond.end20
  br label %cond.end33, !dbg !2895

cond.end33:                                       ; preds = %cond.false32, %cond.true30
  %cond34 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base31, %cond.true30 ], [ null, %cond.false32 ], !dbg !2895
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2895
  %tobool35 = icmp ne %struct.VEC_int_heap* %14, null, !dbg !2895
  br i1 %tobool35, label %cond.true36, label %cond.false38, !dbg !2895

cond.true36:                                      ; preds = %cond.end33
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2895
  %base37 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %15, i32 0, i32 0, !dbg !2895
  br label %cond.end39, !dbg !2895

cond.false38:                                     ; preds = %cond.end33
  br label %cond.end39, !dbg !2895

cond.end39:                                       ; preds = %cond.false38, %cond.true36
  %cond40 = phi %struct.VEC_int_base* [ %base37, %cond.true36 ], [ null, %cond.false38 ], !dbg !2895
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2895
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !2895
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !2895
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 0, !dbg !2895
  %rt_int44 = bitcast %union.rtunion_def* %arrayidx43 to i32*, !dbg !2895
  %17 = load i32, i32* %rt_int44, align 8, !dbg !2895
  %call45 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond40, i32 %17), !dbg !2895
  %call46 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond34, i32 %call45), !dbg !2895
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call46, i32 0, i32 5, !dbg !2895
  store %struct._deps_list* %call28, %struct._deps_list** %resolved_back_deps, align 8, !dbg !2896
  %call47 = call %struct._deps_list* @create_deps_list(), !dbg !2897
  %18 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2898
  %tobool48 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %18, null, !dbg !2898
  br i1 %tobool48, label %cond.true49, label %cond.false51, !dbg !2898

cond.true49:                                      ; preds = %cond.end39
  %19 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2898
  %base50 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %19, i32 0, i32 0, !dbg !2898
  br label %cond.end52, !dbg !2898

cond.false51:                                     ; preds = %cond.end39
  br label %cond.end52, !dbg !2898

cond.end52:                                       ; preds = %cond.false51, %cond.true49
  %cond53 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base50, %cond.true49 ], [ null, %cond.false51 ], !dbg !2898
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2898
  %tobool54 = icmp ne %struct.VEC_int_heap* %20, null, !dbg !2898
  br i1 %tobool54, label %cond.true55, label %cond.false57, !dbg !2898

cond.true55:                                      ; preds = %cond.end52
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2898
  %base56 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %21, i32 0, i32 0, !dbg !2898
  br label %cond.end58, !dbg !2898

cond.false57:                                     ; preds = %cond.end52
  br label %cond.end58, !dbg !2898

cond.end58:                                       ; preds = %cond.false57, %cond.true55
  %cond59 = phi %struct.VEC_int_base* [ %base56, %cond.true55 ], [ null, %cond.false57 ], !dbg !2898
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2898
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !2898
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !2898
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 0, !dbg !2898
  %rt_int63 = bitcast %union.rtunion_def* %arrayidx62 to i32*, !dbg !2898
  %23 = load i32, i32* %rt_int63, align 8, !dbg !2898
  %call64 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond59, i32 %23), !dbg !2898
  %call65 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond53, i32 %call64), !dbg !2898
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call65, i32 0, i32 4, !dbg !2898
  store %struct._deps_list* %call47, %struct._deps_list** %forw_deps, align 8, !dbg !2899
  %call66 = call %struct._deps_list* @create_deps_list(), !dbg !2900
  %24 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2901
  %tobool67 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %24, null, !dbg !2901
  br i1 %tobool67, label %cond.true68, label %cond.false70, !dbg !2901

cond.true68:                                      ; preds = %cond.end58
  %25 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2901
  %base69 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %25, i32 0, i32 0, !dbg !2901
  br label %cond.end71, !dbg !2901

cond.false70:                                     ; preds = %cond.end58
  br label %cond.end71, !dbg !2901

cond.end71:                                       ; preds = %cond.false70, %cond.true68
  %cond72 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base69, %cond.true68 ], [ null, %cond.false70 ], !dbg !2901
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2901
  %tobool73 = icmp ne %struct.VEC_int_heap* %26, null, !dbg !2901
  br i1 %tobool73, label %cond.true74, label %cond.false76, !dbg !2901

cond.true74:                                      ; preds = %cond.end71
  %27 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2901
  %base75 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %27, i32 0, i32 0, !dbg !2901
  br label %cond.end77, !dbg !2901

cond.false76:                                     ; preds = %cond.end71
  br label %cond.end77, !dbg !2901

cond.end77:                                       ; preds = %cond.false76, %cond.true74
  %cond78 = phi %struct.VEC_int_base* [ %base75, %cond.true74 ], [ null, %cond.false76 ], !dbg !2901
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2901
  %u79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !2901
  %fld80 = bitcast %union.u* %u79 to [1 x %union.rtunion_def]*, !dbg !2901
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i64 0, i64 0, !dbg !2901
  %rt_int82 = bitcast %union.rtunion_def* %arrayidx81 to i32*, !dbg !2901
  %29 = load i32, i32* %rt_int82, align 8, !dbg !2901
  %call83 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond78, i32 %29), !dbg !2901
  %call84 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond72, i32 %call83), !dbg !2901
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call84, i32 0, i32 6, !dbg !2901
  store %struct._deps_list* %call66, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !2902
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2903
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !2903
  %bf.load = load i32, i32* %31, align 8, !dbg !2903
  %bf.clear = and i32 %bf.load, 65535, !dbg !2903
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !2903
  br i1 %cmp, label %if.then, label %if.end, !dbg !2905

if.then:                                          ; preds = %cond.end77
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2906
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !2906
  %bf.load85 = load i32, i32* %33, align 8, !dbg !2907
  %bf.clear86 = and i32 %bf.load85, -67108865, !dbg !2907
  %bf.set = or i32 %bf.clear86, 67108864, !dbg !2907
  store i32 %bf.set, i32* %33, align 8, !dbg !2907
  br label %if.end, !dbg !2906

if.end:                                           ; preds = %if.then, %cond.end77
  ret void, !dbg !2908
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._deps_list* @create_deps_list() #0 !dbg !2909 {
entry:
  %l = alloca %struct._deps_list*, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list** %l, metadata !2912, metadata !DIExpression()), !dbg !2913
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dl_pool, align 8, !dbg !2914
  %call = call i8* @pool_alloc(%struct.alloc_pool_def* %0), !dbg !2915
  %1 = bitcast i8* %call to %struct._deps_list*, !dbg !2916
  store %struct._deps_list* %1, %struct._deps_list** %l, align 8, !dbg !2913
  %2 = load %struct._deps_list*, %struct._deps_list** %l, align 8, !dbg !2917
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %2, i32 0, i32 0, !dbg !2917
  store %struct._dep_link* null, %struct._dep_link** %first, align 8, !dbg !2918
  %3 = load %struct._deps_list*, %struct._deps_list** %l, align 8, !dbg !2919
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %3, i32 0, i32 1, !dbg !2919
  store i32 0, i32* %n_links, align 8, !dbg !2920
  %4 = load i32, i32* @dl_pool_diff, align 4, !dbg !2921
  %inc = add nsw i32 %4, 1, !dbg !2921
  store i32 %inc, i32* @dl_pool_diff, align 4, !dbg !2921
  %5 = load %struct._deps_list*, %struct._deps_list** %l, align 8, !dbg !2922
  ret %struct._deps_list* %5, !dbg !2923
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_finish_insn(%struct.rtx_def* %insn) #0 !dbg !2924 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2925, metadata !DIExpression()), !dbg !2926
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2927
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2927
  %bf.load = load i32, i32* %1, align 8, !dbg !2927
  %bf.clear = and i32 %bf.load, 65535, !dbg !2927
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !2927
  br i1 %cmp, label %if.then, label %if.end, !dbg !2929

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2930
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !2930
  %bf.load1 = load i32, i32* %3, align 8, !dbg !2930
  %bf.lshr = lshr i32 %bf.load1, 26, !dbg !2930
  %bf.clear2 = and i32 %bf.lshr, 1, !dbg !2930
  %tobool = icmp ne i32 %bf.clear2, 0, !dbg !2930
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2930

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 727, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2930
  br label %cond.end, !dbg !2930

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !2930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2930
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2932
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2932
  %bf.load3 = load i32, i32* %5, align 8, !dbg !2933
  %bf.clear4 = and i32 %bf.load3, -67108865, !dbg !2933
  store i32 %bf.clear4, i32* %5, align 8, !dbg !2933
  br label %if.end, !dbg !2934

if.end:                                           ; preds = %cond.end, %entry
  %6 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2935
  %tobool5 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %6, null, !dbg !2935
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !2935

cond.true6:                                       ; preds = %if.end
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2935
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %7, i32 0, i32 0, !dbg !2935
  br label %cond.end8, !dbg !2935

cond.false7:                                      ; preds = %if.end
  br label %cond.end8, !dbg !2935

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true6 ], [ null, %cond.false7 ], !dbg !2935
  %8 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2935
  %tobool10 = icmp ne %struct.VEC_int_heap* %8, null, !dbg !2935
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !2935

cond.true11:                                      ; preds = %cond.end8
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2935
  %base12 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %9, i32 0, i32 0, !dbg !2935
  br label %cond.end14, !dbg !2935

cond.false13:                                     ; preds = %cond.end8
  br label %cond.end14, !dbg !2935

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi %struct.VEC_int_base* [ %base12, %cond.true11 ], [ null, %cond.false13 ], !dbg !2935
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2935
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !2935
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2935
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2935
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2935
  %11 = load i32, i32* %rt_int, align 8, !dbg !2935
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond15, i32 %11), !dbg !2935
  %call16 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond9, i32 %call), !dbg !2935
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call16, i32 0, i32 2, !dbg !2935
  %12 = load %struct._deps_list*, %struct._deps_list** %hard_back_deps, align 8, !dbg !2935
  call void @free_deps_list(%struct._deps_list* %12), !dbg !2936
  %13 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2937
  %tobool17 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %13, null, !dbg !2937
  br i1 %tobool17, label %cond.true18, label %cond.false20, !dbg !2937

cond.true18:                                      ; preds = %cond.end14
  %14 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2937
  %base19 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %14, i32 0, i32 0, !dbg !2937
  br label %cond.end21, !dbg !2937

cond.false20:                                     ; preds = %cond.end14
  br label %cond.end21, !dbg !2937

cond.end21:                                       ; preds = %cond.false20, %cond.true18
  %cond22 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base19, %cond.true18 ], [ null, %cond.false20 ], !dbg !2937
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2937
  %tobool23 = icmp ne %struct.VEC_int_heap* %15, null, !dbg !2937
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !2937

cond.true24:                                      ; preds = %cond.end21
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2937
  %base25 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i32 0, i32 0, !dbg !2937
  br label %cond.end27, !dbg !2937

cond.false26:                                     ; preds = %cond.end21
  br label %cond.end27, !dbg !2937

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi %struct.VEC_int_base* [ %base25, %cond.true24 ], [ null, %cond.false26 ], !dbg !2937
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2937
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !2937
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !2937
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !2937
  %rt_int32 = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !2937
  %18 = load i32, i32* %rt_int32, align 8, !dbg !2937
  %call33 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond28, i32 %18), !dbg !2937
  %call34 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond22, i32 %call33), !dbg !2937
  %hard_back_deps35 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call34, i32 0, i32 2, !dbg !2937
  store %struct._deps_list* null, %struct._deps_list** %hard_back_deps35, align 8, !dbg !2938
  %19 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2939
  %tobool36 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %19, null, !dbg !2939
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !2939

cond.true37:                                      ; preds = %cond.end27
  %20 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2939
  %base38 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %20, i32 0, i32 0, !dbg !2939
  br label %cond.end40, !dbg !2939

cond.false39:                                     ; preds = %cond.end27
  br label %cond.end40, !dbg !2939

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base38, %cond.true37 ], [ null, %cond.false39 ], !dbg !2939
  %21 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2939
  %tobool42 = icmp ne %struct.VEC_int_heap* %21, null, !dbg !2939
  br i1 %tobool42, label %cond.true43, label %cond.false45, !dbg !2939

cond.true43:                                      ; preds = %cond.end40
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2939
  %base44 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %22, i32 0, i32 0, !dbg !2939
  br label %cond.end46, !dbg !2939

cond.false45:                                     ; preds = %cond.end40
  br label %cond.end46, !dbg !2939

cond.end46:                                       ; preds = %cond.false45, %cond.true43
  %cond47 = phi %struct.VEC_int_base* [ %base44, %cond.true43 ], [ null, %cond.false45 ], !dbg !2939
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2939
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !2939
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !2939
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !2939
  %rt_int51 = bitcast %union.rtunion_def* %arrayidx50 to i32*, !dbg !2939
  %24 = load i32, i32* %rt_int51, align 8, !dbg !2939
  %call52 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond47, i32 %24), !dbg !2939
  %call53 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond41, i32 %call52), !dbg !2939
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call53, i32 0, i32 3, !dbg !2939
  %25 = load %struct._deps_list*, %struct._deps_list** %spec_back_deps, align 8, !dbg !2939
  call void @free_deps_list(%struct._deps_list* %25), !dbg !2940
  %26 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2941
  %tobool54 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %26, null, !dbg !2941
  br i1 %tobool54, label %cond.true55, label %cond.false57, !dbg !2941

cond.true55:                                      ; preds = %cond.end46
  %27 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2941
  %base56 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %27, i32 0, i32 0, !dbg !2941
  br label %cond.end58, !dbg !2941

cond.false57:                                     ; preds = %cond.end46
  br label %cond.end58, !dbg !2941

cond.end58:                                       ; preds = %cond.false57, %cond.true55
  %cond59 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base56, %cond.true55 ], [ null, %cond.false57 ], !dbg !2941
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2941
  %tobool60 = icmp ne %struct.VEC_int_heap* %28, null, !dbg !2941
  br i1 %tobool60, label %cond.true61, label %cond.false63, !dbg !2941

cond.true61:                                      ; preds = %cond.end58
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2941
  %base62 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i32 0, i32 0, !dbg !2941
  br label %cond.end64, !dbg !2941

cond.false63:                                     ; preds = %cond.end58
  br label %cond.end64, !dbg !2941

cond.end64:                                       ; preds = %cond.false63, %cond.true61
  %cond65 = phi %struct.VEC_int_base* [ %base62, %cond.true61 ], [ null, %cond.false63 ], !dbg !2941
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2941
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !2941
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !2941
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 0, !dbg !2941
  %rt_int69 = bitcast %union.rtunion_def* %arrayidx68 to i32*, !dbg !2941
  %31 = load i32, i32* %rt_int69, align 8, !dbg !2941
  %call70 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond65, i32 %31), !dbg !2941
  %call71 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond59, i32 %call70), !dbg !2941
  %spec_back_deps72 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call71, i32 0, i32 3, !dbg !2941
  store %struct._deps_list* null, %struct._deps_list** %spec_back_deps72, align 8, !dbg !2942
  %32 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2943
  %tobool73 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %32, null, !dbg !2943
  br i1 %tobool73, label %cond.true74, label %cond.false76, !dbg !2943

cond.true74:                                      ; preds = %cond.end64
  %33 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2943
  %base75 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %33, i32 0, i32 0, !dbg !2943
  br label %cond.end77, !dbg !2943

cond.false76:                                     ; preds = %cond.end64
  br label %cond.end77, !dbg !2943

cond.end77:                                       ; preds = %cond.false76, %cond.true74
  %cond78 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base75, %cond.true74 ], [ null, %cond.false76 ], !dbg !2943
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2943
  %tobool79 = icmp ne %struct.VEC_int_heap* %34, null, !dbg !2943
  br i1 %tobool79, label %cond.true80, label %cond.false82, !dbg !2943

cond.true80:                                      ; preds = %cond.end77
  %35 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2943
  %base81 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %35, i32 0, i32 0, !dbg !2943
  br label %cond.end83, !dbg !2943

cond.false82:                                     ; preds = %cond.end77
  br label %cond.end83, !dbg !2943

cond.end83:                                       ; preds = %cond.false82, %cond.true80
  %cond84 = phi %struct.VEC_int_base* [ %base81, %cond.true80 ], [ null, %cond.false82 ], !dbg !2943
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2943
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !2943
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !2943
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 0, !dbg !2943
  %rt_int88 = bitcast %union.rtunion_def* %arrayidx87 to i32*, !dbg !2943
  %37 = load i32, i32* %rt_int88, align 8, !dbg !2943
  %call89 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond84, i32 %37), !dbg !2943
  %call90 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond78, i32 %call89), !dbg !2943
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call90, i32 0, i32 5, !dbg !2943
  %38 = load %struct._deps_list*, %struct._deps_list** %resolved_back_deps, align 8, !dbg !2943
  call void @free_deps_list(%struct._deps_list* %38), !dbg !2944
  %39 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2945
  %tobool91 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %39, null, !dbg !2945
  br i1 %tobool91, label %cond.true92, label %cond.false94, !dbg !2945

cond.true92:                                      ; preds = %cond.end83
  %40 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2945
  %base93 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %40, i32 0, i32 0, !dbg !2945
  br label %cond.end95, !dbg !2945

cond.false94:                                     ; preds = %cond.end83
  br label %cond.end95, !dbg !2945

cond.end95:                                       ; preds = %cond.false94, %cond.true92
  %cond96 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base93, %cond.true92 ], [ null, %cond.false94 ], !dbg !2945
  %41 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2945
  %tobool97 = icmp ne %struct.VEC_int_heap* %41, null, !dbg !2945
  br i1 %tobool97, label %cond.true98, label %cond.false100, !dbg !2945

cond.true98:                                      ; preds = %cond.end95
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2945
  %base99 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %42, i32 0, i32 0, !dbg !2945
  br label %cond.end101, !dbg !2945

cond.false100:                                    ; preds = %cond.end95
  br label %cond.end101, !dbg !2945

cond.end101:                                      ; preds = %cond.false100, %cond.true98
  %cond102 = phi %struct.VEC_int_base* [ %base99, %cond.true98 ], [ null, %cond.false100 ], !dbg !2945
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2945
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !2945
  %fld104 = bitcast %union.u* %u103 to [1 x %union.rtunion_def]*, !dbg !2945
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i64 0, i64 0, !dbg !2945
  %rt_int106 = bitcast %union.rtunion_def* %arrayidx105 to i32*, !dbg !2945
  %44 = load i32, i32* %rt_int106, align 8, !dbg !2945
  %call107 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond102, i32 %44), !dbg !2945
  %call108 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond96, i32 %call107), !dbg !2945
  %resolved_back_deps109 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call108, i32 0, i32 5, !dbg !2945
  store %struct._deps_list* null, %struct._deps_list** %resolved_back_deps109, align 8, !dbg !2946
  %45 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2947
  %tobool110 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %45, null, !dbg !2947
  br i1 %tobool110, label %cond.true111, label %cond.false113, !dbg !2947

cond.true111:                                     ; preds = %cond.end101
  %46 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2947
  %base112 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %46, i32 0, i32 0, !dbg !2947
  br label %cond.end114, !dbg !2947

cond.false113:                                    ; preds = %cond.end101
  br label %cond.end114, !dbg !2947

cond.end114:                                      ; preds = %cond.false113, %cond.true111
  %cond115 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base112, %cond.true111 ], [ null, %cond.false113 ], !dbg !2947
  %47 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2947
  %tobool116 = icmp ne %struct.VEC_int_heap* %47, null, !dbg !2947
  br i1 %tobool116, label %cond.true117, label %cond.false119, !dbg !2947

cond.true117:                                     ; preds = %cond.end114
  %48 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2947
  %base118 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %48, i32 0, i32 0, !dbg !2947
  br label %cond.end120, !dbg !2947

cond.false119:                                    ; preds = %cond.end114
  br label %cond.end120, !dbg !2947

cond.end120:                                      ; preds = %cond.false119, %cond.true117
  %cond121 = phi %struct.VEC_int_base* [ %base118, %cond.true117 ], [ null, %cond.false119 ], !dbg !2947
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2947
  %u122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !2947
  %fld123 = bitcast %union.u* %u122 to [1 x %union.rtunion_def]*, !dbg !2947
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i64 0, i64 0, !dbg !2947
  %rt_int125 = bitcast %union.rtunion_def* %arrayidx124 to i32*, !dbg !2947
  %50 = load i32, i32* %rt_int125, align 8, !dbg !2947
  %call126 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond121, i32 %50), !dbg !2947
  %call127 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond115, i32 %call126), !dbg !2947
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call127, i32 0, i32 4, !dbg !2947
  %51 = load %struct._deps_list*, %struct._deps_list** %forw_deps, align 8, !dbg !2947
  call void @free_deps_list(%struct._deps_list* %51), !dbg !2948
  %52 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2949
  %tobool128 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %52, null, !dbg !2949
  br i1 %tobool128, label %cond.true129, label %cond.false131, !dbg !2949

cond.true129:                                     ; preds = %cond.end120
  %53 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2949
  %base130 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %53, i32 0, i32 0, !dbg !2949
  br label %cond.end132, !dbg !2949

cond.false131:                                    ; preds = %cond.end120
  br label %cond.end132, !dbg !2949

cond.end132:                                      ; preds = %cond.false131, %cond.true129
  %cond133 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base130, %cond.true129 ], [ null, %cond.false131 ], !dbg !2949
  %54 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2949
  %tobool134 = icmp ne %struct.VEC_int_heap* %54, null, !dbg !2949
  br i1 %tobool134, label %cond.true135, label %cond.false137, !dbg !2949

cond.true135:                                     ; preds = %cond.end132
  %55 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2949
  %base136 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %55, i32 0, i32 0, !dbg !2949
  br label %cond.end138, !dbg !2949

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138, !dbg !2949

cond.end138:                                      ; preds = %cond.false137, %cond.true135
  %cond139 = phi %struct.VEC_int_base* [ %base136, %cond.true135 ], [ null, %cond.false137 ], !dbg !2949
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2949
  %u140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !2949
  %fld141 = bitcast %union.u* %u140 to [1 x %union.rtunion_def]*, !dbg !2949
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i64 0, i64 0, !dbg !2949
  %rt_int143 = bitcast %union.rtunion_def* %arrayidx142 to i32*, !dbg !2949
  %57 = load i32, i32* %rt_int143, align 8, !dbg !2949
  %call144 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond139, i32 %57), !dbg !2949
  %call145 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond133, i32 %call144), !dbg !2949
  %forw_deps146 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call145, i32 0, i32 4, !dbg !2949
  store %struct._deps_list* null, %struct._deps_list** %forw_deps146, align 8, !dbg !2950
  %58 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2951
  %tobool147 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %58, null, !dbg !2951
  br i1 %tobool147, label %cond.true148, label %cond.false150, !dbg !2951

cond.true148:                                     ; preds = %cond.end138
  %59 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2951
  %base149 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %59, i32 0, i32 0, !dbg !2951
  br label %cond.end151, !dbg !2951

cond.false150:                                    ; preds = %cond.end138
  br label %cond.end151, !dbg !2951

cond.end151:                                      ; preds = %cond.false150, %cond.true148
  %cond152 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base149, %cond.true148 ], [ null, %cond.false150 ], !dbg !2951
  %60 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2951
  %tobool153 = icmp ne %struct.VEC_int_heap* %60, null, !dbg !2951
  br i1 %tobool153, label %cond.true154, label %cond.false156, !dbg !2951

cond.true154:                                     ; preds = %cond.end151
  %61 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2951
  %base155 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %61, i32 0, i32 0, !dbg !2951
  br label %cond.end157, !dbg !2951

cond.false156:                                    ; preds = %cond.end151
  br label %cond.end157, !dbg !2951

cond.end157:                                      ; preds = %cond.false156, %cond.true154
  %cond158 = phi %struct.VEC_int_base* [ %base155, %cond.true154 ], [ null, %cond.false156 ], !dbg !2951
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2951
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !2951
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !2951
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 0, !dbg !2951
  %rt_int162 = bitcast %union.rtunion_def* %arrayidx161 to i32*, !dbg !2951
  %63 = load i32, i32* %rt_int162, align 8, !dbg !2951
  %call163 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond158, i32 %63), !dbg !2951
  %call164 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond152, i32 %call163), !dbg !2951
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call164, i32 0, i32 6, !dbg !2951
  %64 = load %struct._deps_list*, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !2951
  call void @free_deps_list(%struct._deps_list* %64), !dbg !2952
  %65 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2953
  %tobool165 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %65, null, !dbg !2953
  br i1 %tobool165, label %cond.true166, label %cond.false168, !dbg !2953

cond.true166:                                     ; preds = %cond.end157
  %66 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !2953
  %base167 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %66, i32 0, i32 0, !dbg !2953
  br label %cond.end169, !dbg !2953

cond.false168:                                    ; preds = %cond.end157
  br label %cond.end169, !dbg !2953

cond.end169:                                      ; preds = %cond.false168, %cond.true166
  %cond170 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base167, %cond.true166 ], [ null, %cond.false168 ], !dbg !2953
  %67 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2953
  %tobool171 = icmp ne %struct.VEC_int_heap* %67, null, !dbg !2953
  br i1 %tobool171, label %cond.true172, label %cond.false174, !dbg !2953

cond.true172:                                     ; preds = %cond.end169
  %68 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2953
  %base173 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %68, i32 0, i32 0, !dbg !2953
  br label %cond.end175, !dbg !2953

cond.false174:                                    ; preds = %cond.end169
  br label %cond.end175, !dbg !2953

cond.end175:                                      ; preds = %cond.false174, %cond.true172
  %cond176 = phi %struct.VEC_int_base* [ %base173, %cond.true172 ], [ null, %cond.false174 ], !dbg !2953
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2953
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !2953
  %fld178 = bitcast %union.u* %u177 to [1 x %union.rtunion_def]*, !dbg !2953
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i64 0, i64 0, !dbg !2953
  %rt_int180 = bitcast %union.rtunion_def* %arrayidx179 to i32*, !dbg !2953
  %70 = load i32, i32* %rt_int180, align 8, !dbg !2953
  %call181 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond176, i32 %70), !dbg !2953
  %call182 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond170, i32 %call181), !dbg !2953
  %resolved_forw_deps183 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call182, i32 0, i32 6, !dbg !2953
  store %struct._deps_list* null, %struct._deps_list** %resolved_forw_deps183, align 8, !dbg !2954
  ret void, !dbg !2955
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_deps_list(%struct._deps_list* %l) #0 !dbg !2956 {
entry:
  %l.addr = alloca %struct._deps_list*, align 8
  store %struct._deps_list* %l, %struct._deps_list** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list** %l.addr, metadata !2959, metadata !DIExpression()), !dbg !2960
  %0 = load %struct._deps_list*, %struct._deps_list** %l.addr, align 8, !dbg !2961
  %call = call zeroext i8 @deps_list_empty_p(%struct._deps_list* %0), !dbg !2961
  %tobool = icmp ne i8 %call, 0, !dbg !2961
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2961

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2961
  br label %cond.end, !dbg !2961

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2961

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2961
  %1 = load i32, i32* @dl_pool_diff, align 4, !dbg !2962
  %dec = add nsw i32 %1, -1, !dbg !2962
  store i32 %dec, i32* @dl_pool_diff, align 4, !dbg !2962
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dl_pool, align 8, !dbg !2963
  %3 = load %struct._deps_list*, %struct._deps_list** %l.addr, align 8, !dbg !2964
  %4 = bitcast %struct._deps_list* %3 to i8*, !dbg !2964
  call void @pool_free(%struct.alloc_pool_def* %2, i8* %4), !dbg !2965
  ret void, !dbg !2966
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._dep* @sd_find_dep_between(%struct.rtx_def* %pro, %struct.rtx_def* %con, i8 zeroext %resolved_p) #0 !dbg !2967 {
entry:
  %retval = alloca %struct._dep*, align 8
  %pro.addr = alloca %struct.rtx_def*, align 8
  %con.addr = alloca %struct.rtx_def*, align 8
  %resolved_p.addr = alloca i8, align 1
  %elem_luid = alloca i32, align 4
  %insn_luid = alloca i32, align 4
  store %struct.rtx_def* %pro, %struct.rtx_def** %pro.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pro.addr, metadata !2970, metadata !DIExpression()), !dbg !2971
  store %struct.rtx_def* %con, %struct.rtx_def** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %con.addr, metadata !2972, metadata !DIExpression()), !dbg !2973
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !2974, metadata !DIExpression()), !dbg !2975
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !2976
  %cmp = icmp ne %struct.bitmap_head_def* %0, null, !dbg !2978
  br i1 %cmp, label %if.then, label %if.end32, !dbg !2979

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %elem_luid, metadata !2980, metadata !DIExpression()), !dbg !2982
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2983
  %tobool = icmp ne %struct.VEC_int_heap* %1, null, !dbg !2983
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2983

cond.true:                                        ; preds = %if.then
  %2 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2983
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %2, i32 0, i32 0, !dbg !2983
  br label %cond.end, !dbg !2983

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !2983

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2983
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pro.addr, align 8, !dbg !2983
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !2983
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2983
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2983
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2983
  %4 = load i32, i32* %rt_int, align 8, !dbg !2983
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond, i32 %4), !dbg !2983
  store i32 %call, i32* %elem_luid, align 4, !dbg !2982
  call void @llvm.dbg.declare(metadata i32* %insn_luid, metadata !2984, metadata !DIExpression()), !dbg !2985
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2986
  %tobool1 = icmp ne %struct.VEC_int_heap* %5, null, !dbg !2986
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !2986

cond.true2:                                       ; preds = %cond.end
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !2986
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i32 0, i32 0, !dbg !2986
  br label %cond.end5, !dbg !2986

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !2986

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !2986
  %7 = load %struct.rtx_def*, %struct.rtx_def** %con.addr, align 8, !dbg !2986
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !2986
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !2986
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 0, !dbg !2986
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !2986
  %8 = load i32, i32* %rt_int10, align 8, !dbg !2986
  %call11 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %8), !dbg !2986
  store i32 %call11, i32* %insn_luid, align 4, !dbg !2985
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !2987
  %cmp12 = icmp ne %struct.bitmap_head_def* %9, null, !dbg !2987
  br i1 %cmp12, label %land.lhs.true, label %cond.true14, !dbg !2987

land.lhs.true:                                    ; preds = %cond.end5
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !2987
  %cmp13 = icmp ne %struct.bitmap_head_def* %10, null, !dbg !2987
  br i1 %cmp13, label %cond.false15, label %cond.true14, !dbg !2987

cond.true14:                                      ; preds = %land.lhs.true, %cond.end5
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 822, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2987
  br label %cond.end16, !dbg !2987

cond.false15:                                     ; preds = %land.lhs.true
  br label %cond.end16, !dbg !2987

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond17 = phi i32 [ 0, %cond.true14 ], [ 0, %cond.false15 ], !dbg !2987
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !2988
  %12 = load i32, i32* %insn_luid, align 4, !dbg !2990
  %idxprom = sext i32 %12 to i64, !dbg !2988
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %11, i64 %idxprom, !dbg !2988
  %13 = load i32, i32* %elem_luid, align 4, !dbg !2991
  %call19 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx18, i32 %13), !dbg !2992
  %tobool20 = icmp ne i32 %call19, 0, !dbg !2992
  br i1 %tobool20, label %if.end, label %land.lhs.true21, !dbg !2993

land.lhs.true21:                                  ; preds = %cond.end16
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !2994
  %15 = load i32, i32* %insn_luid, align 4, !dbg !2995
  %idxprom22 = sext i32 %15 to i64, !dbg !2994
  %arrayidx23 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %14, i64 %idxprom22, !dbg !2994
  %16 = load i32, i32* %elem_luid, align 4, !dbg !2996
  %call24 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx23, i32 %16), !dbg !2997
  %tobool25 = icmp ne i32 %call24, 0, !dbg !2997
  br i1 %tobool25, label %if.end, label %land.lhs.true26, !dbg !2998

land.lhs.true26:                                  ; preds = %land.lhs.true21
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !2999
  %18 = load i32, i32* %insn_luid, align 4, !dbg !3000
  %idxprom27 = sext i32 %18 to i64, !dbg !2999
  %arrayidx28 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %17, i64 %idxprom27, !dbg !2999
  %19 = load i32, i32* %elem_luid, align 4, !dbg !3001
  %call29 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx28, i32 %19), !dbg !3002
  %tobool30 = icmp ne i32 %call29, 0, !dbg !3002
  br i1 %tobool30, label %if.end, label %if.then31, !dbg !3003

if.then31:                                        ; preds = %land.lhs.true26
  store %struct._dep* null, %struct._dep** %retval, align 8, !dbg !3004
  br label %return, !dbg !3004

if.end:                                           ; preds = %land.lhs.true26, %land.lhs.true21, %cond.end16
  br label %if.end32, !dbg !3005

if.end32:                                         ; preds = %if.end, %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %pro.addr, align 8, !dbg !3006
  %21 = load %struct.rtx_def*, %struct.rtx_def** %con.addr, align 8, !dbg !3007
  %22 = load i8, i8* %resolved_p.addr, align 1, !dbg !3008
  %call33 = call %struct._dep* @sd_find_dep_between_no_cache(%struct.rtx_def* %20, %struct.rtx_def* %21, i8 zeroext %22, %struct._sd_iterator* null), !dbg !3009
  store %struct._dep* %call33, %struct._dep** %retval, align 8, !dbg !3010
  br label %return, !dbg !3010

return:                                           ; preds = %if.end32, %if.then31
  %23 = load %struct._dep*, %struct._dep** %retval, align 8, !dbg !3011
  ret %struct._dep* %23, !dbg !3011
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._dep* @sd_find_dep_between_no_cache(%struct.rtx_def* %pro, %struct.rtx_def* %con, i8 zeroext %resolved_p, %struct._sd_iterator* %sd_it_ptr) #0 !dbg !3012 {
entry:
  %retval = alloca %struct._dep*, align 8
  %pro.addr = alloca %struct.rtx_def*, align 8
  %con.addr = alloca %struct.rtx_def*, align 8
  %resolved_p.addr = alloca i8, align 1
  %sd_it_ptr.addr = alloca %struct._sd_iterator*, align 8
  %pro_list_type = alloca i32, align 4
  %con_list_type = alloca i32, align 4
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %found_p = alloca i8, align 1
  %tmp = alloca %struct._sd_iterator, align 8
  %tmp10 = alloca %struct._sd_iterator, align 8
  store %struct.rtx_def* %pro, %struct.rtx_def** %pro.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pro.addr, metadata !3016, metadata !DIExpression()), !dbg !3017
  store %struct.rtx_def* %con, %struct.rtx_def** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %con.addr, metadata !3018, metadata !DIExpression()), !dbg !3019
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !3020, metadata !DIExpression()), !dbg !3021
  store %struct._sd_iterator* %sd_it_ptr, %struct._sd_iterator** %sd_it_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._sd_iterator** %sd_it_ptr.addr, metadata !3022, metadata !DIExpression()), !dbg !3023
  call void @llvm.dbg.declare(metadata i32* %pro_list_type, metadata !3024, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.declare(metadata i32* %con_list_type, metadata !3026, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !3028, metadata !DIExpression()), !dbg !3029
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !3030, metadata !DIExpression()), !dbg !3031
  call void @llvm.dbg.declare(metadata i8* %found_p, metadata !3032, metadata !DIExpression()), !dbg !3033
  store i8 0, i8* %found_p, align 1, !dbg !3033
  %0 = load i8, i8* %resolved_p.addr, align 1, !dbg !3034
  %tobool = icmp ne i8 %0, 0, !dbg !3034
  br i1 %tobool, label %if.then, label %if.else, !dbg !3036

if.then:                                          ; preds = %entry
  store i32 16, i32* %pro_list_type, align 4, !dbg !3037
  store i32 8, i32* %con_list_type, align 4, !dbg !3039
  br label %if.end, !dbg !3040

if.else:                                          ; preds = %entry
  store i32 4, i32* %pro_list_type, align 4, !dbg !3041
  store i32 3, i32* %con_list_type, align 4, !dbg !3043
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct.rtx_def*, %struct.rtx_def** %con.addr, align 8, !dbg !3044
  %2 = load i32, i32* %con_list_type, align 4, !dbg !3046
  %call = call i32 @sd_lists_size(%struct.rtx_def* %1, i32 %2), !dbg !3047
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pro.addr, align 8, !dbg !3048
  %4 = load i32, i32* %pro_list_type, align 4, !dbg !3049
  %call1 = call i32 @sd_lists_size(%struct.rtx_def* %3, i32 %4), !dbg !3050
  %cmp = icmp slt i32 %call, %call1, !dbg !3051
  br i1 %cmp, label %if.then2, label %if.else9, !dbg !3052

if.then2:                                         ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %con.addr, align 8, !dbg !3053
  %6 = load i32, i32* %con_list_type, align 4, !dbg !3053
  call void @sd_iterator_start(%struct._sd_iterator* sret %tmp, %struct.rtx_def* %5, i32 %6), !dbg !3053
  %7 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3053
  %8 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !3053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !3053
  br label %for.cond, !dbg !3053

for.cond:                                         ; preds = %for.inc, %if.then2
  %call3 = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %sd_it, %struct._dep** %dep), !dbg !3056
  %tobool4 = icmp ne i8 %call3, 0, !dbg !3053
  br i1 %tobool4, label %for.body, label %for.end, !dbg !3053

for.body:                                         ; preds = %for.cond
  %9 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3058
  %pro5 = getelementptr inbounds %struct._dep, %struct._dep* %9, i32 0, i32 0, !dbg !3058
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pro5, align 8, !dbg !3058
  %11 = load %struct.rtx_def*, %struct.rtx_def** %pro.addr, align 8, !dbg !3060
  %cmp6 = icmp eq %struct.rtx_def* %10, %11, !dbg !3061
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3062

if.then7:                                         ; preds = %for.body
  store i8 1, i8* %found_p, align 1, !dbg !3063
  br label %for.end, !dbg !3065

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !3060

for.inc:                                          ; preds = %if.end8
  call void @sd_iterator_next(%struct._sd_iterator* %sd_it), !dbg !3056
  br label %for.cond, !dbg !3056, !llvm.loop !3066

for.end:                                          ; preds = %if.then7, %for.cond
  br label %if.end21, !dbg !3068

if.else9:                                         ; preds = %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %pro.addr, align 8, !dbg !3069
  %13 = load i32, i32* %pro_list_type, align 4, !dbg !3069
  call void @sd_iterator_start(%struct._sd_iterator* sret %tmp10, %struct.rtx_def* %12, i32 %13), !dbg !3069
  %14 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3069
  %15 = bitcast %struct._sd_iterator* %tmp10 to i8*, !dbg !3069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false), !dbg !3069
  br label %for.cond11, !dbg !3069

for.cond11:                                       ; preds = %for.inc19, %if.else9
  %call12 = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %sd_it, %struct._dep** %dep), !dbg !3072
  %tobool13 = icmp ne i8 %call12, 0, !dbg !3069
  br i1 %tobool13, label %for.body14, label %for.end20, !dbg !3069

for.body14:                                       ; preds = %for.cond11
  %16 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3074
  %con15 = getelementptr inbounds %struct._dep, %struct._dep* %16, i32 0, i32 1, !dbg !3074
  %17 = load %struct.rtx_def*, %struct.rtx_def** %con15, align 8, !dbg !3074
  %18 = load %struct.rtx_def*, %struct.rtx_def** %con.addr, align 8, !dbg !3076
  %cmp16 = icmp eq %struct.rtx_def* %17, %18, !dbg !3077
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !3078

if.then17:                                        ; preds = %for.body14
  store i8 1, i8* %found_p, align 1, !dbg !3079
  br label %for.end20, !dbg !3081

if.end18:                                         ; preds = %for.body14
  br label %for.inc19, !dbg !3076

for.inc19:                                        ; preds = %if.end18
  call void @sd_iterator_next(%struct._sd_iterator* %sd_it), !dbg !3072
  br label %for.cond11, !dbg !3072, !llvm.loop !3082

for.end20:                                        ; preds = %if.then17, %for.cond11
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %for.end
  %19 = load i8, i8* %found_p, align 1, !dbg !3084
  %tobool22 = icmp ne i8 %19, 0, !dbg !3084
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !3086

if.then23:                                        ; preds = %if.end21
  %20 = load %struct._sd_iterator*, %struct._sd_iterator** %sd_it_ptr.addr, align 8, !dbg !3087
  %cmp24 = icmp ne %struct._sd_iterator* %20, null, !dbg !3090
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !3091

if.then25:                                        ; preds = %if.then23
  %21 = load %struct._sd_iterator*, %struct._sd_iterator** %sd_it_ptr.addr, align 8, !dbg !3092
  %22 = bitcast %struct._sd_iterator* %21 to i8*, !dbg !3093
  %23 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false), !dbg !3093
  br label %if.end26, !dbg !3094

if.end26:                                         ; preds = %if.then25, %if.then23
  %24 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3095
  store %struct._dep* %24, %struct._dep** %retval, align 8, !dbg !3096
  br label %return, !dbg !3096

if.end27:                                         ; preds = %if.end21
  store %struct._dep* null, %struct._dep** %retval, align 8, !dbg !3097
  br label %return, !dbg !3097

return:                                           ; preds = %if.end27, %if.end26
  %25 = load %struct._dep*, %struct._dep** %retval, align 8, !dbg !3098
  ret %struct._dep* %25, !dbg !3098
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_add_dep(%struct._dep* %dep, i8 zeroext %resolved_p) #0 !dbg !3099 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  %resolved_p.addr = alloca i8, align 1
  %n = alloca %struct._dep_node*, align 8
  %con_back_deps = alloca %struct._deps_list*, align 8
  %pro_forw_deps = alloca %struct._deps_list*, align 8
  %elem = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !3102, metadata !DIExpression()), !dbg !3103
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !3104, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.declare(metadata %struct._dep_node** %n, metadata !3106, metadata !DIExpression()), !dbg !3107
  %call = call %struct._dep_node* @create_dep_node(), !dbg !3108
  store %struct._dep_node* %call, %struct._dep_node** %n, align 8, !dbg !3107
  call void @llvm.dbg.declare(metadata %struct._deps_list** %con_back_deps, metadata !3109, metadata !DIExpression()), !dbg !3110
  call void @llvm.dbg.declare(metadata %struct._deps_list** %pro_forw_deps, metadata !3111, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elem, metadata !3113, metadata !DIExpression()), !dbg !3114
  %0 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3115
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %0, i32 0, i32 0, !dbg !3115
  %1 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3115
  store %struct.rtx_def* %1, %struct.rtx_def** %elem, align 8, !dbg !3114
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !3116, metadata !DIExpression()), !dbg !3117
  %2 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3118
  %con = getelementptr inbounds %struct._dep, %struct._dep* %2, i32 0, i32 1, !dbg !3118
  %3 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3118
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8, !dbg !3117
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3119
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3119
  %bf.load = load i32, i32* %5, align 8, !dbg !3119
  %bf.clear = and i32 %bf.load, 65535, !dbg !3119
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3119
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3119

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3119
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3119
  %bf.load1 = load i32, i32* %7, align 8, !dbg !3119
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3119
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !3119
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !3119

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3119
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !3119
  %bf.load5 = load i32, i32* %9, align 8, !dbg !3119
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3119
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !3119
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !3119

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3119
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3119
  %bf.load9 = load i32, i32* %11, align 8, !dbg !3119
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !3119
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !3119
  br i1 %cmp11, label %land.lhs.true, label %cond.true, !dbg !3119

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !3119
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !3119
  %bf.load12 = load i32, i32* %13, align 8, !dbg !3119
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3119
  %cmp14 = icmp eq i32 %bf.clear13, 8, !dbg !3119
  br i1 %cmp14, label %land.lhs.true27, label %lor.lhs.false15, !dbg !3119

lor.lhs.false15:                                  ; preds = %land.lhs.true
  %14 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !3119
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !3119
  %bf.load16 = load i32, i32* %15, align 8, !dbg !3119
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !3119
  %cmp18 = icmp eq i32 %bf.clear17, 7, !dbg !3119
  br i1 %cmp18, label %land.lhs.true27, label %lor.lhs.false19, !dbg !3119

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %16 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !3119
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !3119
  %bf.load20 = load i32, i32* %17, align 8, !dbg !3119
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !3119
  %cmp22 = icmp eq i32 %bf.clear21, 9, !dbg !3119
  br i1 %cmp22, label %land.lhs.true27, label %lor.lhs.false23, !dbg !3119

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %18 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !3119
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !3119
  %bf.load24 = load i32, i32* %19, align 8, !dbg !3119
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !3119
  %cmp26 = icmp eq i32 %bf.clear25, 10, !dbg !3119
  br i1 %cmp26, label %land.lhs.true27, label %cond.true, !dbg !3119

land.lhs.true27:                                  ; preds = %lor.lhs.false23, %lor.lhs.false19, %lor.lhs.false15, %land.lhs.true
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3119
  %21 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !3119
  %cmp28 = icmp ne %struct.rtx_def* %20, %21, !dbg !3119
  br i1 %cmp28, label %cond.false, label %cond.true, !dbg !3119

cond.true:                                        ; preds = %land.lhs.true27, %lor.lhs.false23, %lor.lhs.false8
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3119
  br label %cond.end, !dbg !3119

cond.false:                                       ; preds = %land.lhs.true27
  br label %cond.end, !dbg !3119

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3119
  %22 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3120
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %22, i32 0, i32 17, !dbg !3122
  %23 = load i32, i32* %flags, align 8, !dbg !3122
  %and = and i32 %23, 2, !dbg !3123
  %tobool = icmp ne i32 %and, 0, !dbg !3123
  br i1 %tobool, label %land.lhs.true29, label %if.end, !dbg !3124

land.lhs.true29:                                  ; preds = %cond.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3125
  %25 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3126
  %status = getelementptr inbounds %struct._dep, %struct._dep* %25, i32 0, i32 3, !dbg !3126
  %26 = load i32, i32* %status, align 4, !dbg !3126
  %call30 = call zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %24, i32 %26), !dbg !3127
  %tobool31 = icmp ne i8 %call30, 0, !dbg !3127
  br i1 %tobool31, label %if.end, label %if.then, !dbg !3128

if.then:                                          ; preds = %land.lhs.true29
  %27 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3129
  %status32 = getelementptr inbounds %struct._dep, %struct._dep* %27, i32 0, i32 3, !dbg !3129
  %28 = load i32, i32* %status32, align 4, !dbg !3130
  %and33 = and i32 %28, -16777216, !dbg !3130
  store i32 %and33, i32* %status32, align 4, !dbg !3130
  br label %if.end, !dbg !3129

if.end:                                           ; preds = %if.then, %land.lhs.true29, %cond.end
  %29 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3131
  %dep34 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %29, i32 0, i32 1, !dbg !3131
  %30 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3132
  call void @copy_dep(%struct._dep* %dep34, %struct._dep* %30), !dbg !3133
  %31 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3134
  %32 = load i8, i8* %resolved_p.addr, align 1, !dbg !3135
  call void @get_back_and_forw_lists(%struct._dep* %31, i8 zeroext %32, %struct._deps_list** %con_back_deps, %struct._deps_list** %pro_forw_deps), !dbg !3136
  %33 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3137
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %33, i32 0, i32 0, !dbg !3137
  %34 = load %struct._deps_list*, %struct._deps_list** %con_back_deps, align 8, !dbg !3138
  call void @add_to_deps_list(%struct._dep_link* %back, %struct._deps_list* %34), !dbg !3139
  %35 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3140
  %forw = getelementptr inbounds %struct._dep_node, %struct._dep_node* %35, i32 0, i32 2, !dbg !3140
  %36 = load %struct._deps_list*, %struct._deps_list** %pro_forw_deps, align 8, !dbg !3141
  call void @add_to_deps_list(%struct._dep_link* %forw, %struct._deps_list* %36), !dbg !3142
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3143
  %cmp35 = icmp ne %struct.bitmap_head_def* %37, null, !dbg !3145
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !3146

if.then36:                                        ; preds = %if.end
  %38 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3147
  call void @set_dependency_caches(%struct._dep* %38), !dbg !3148
  br label %if.end37, !dbg !3148

if.end37:                                         ; preds = %if.then36, %if.end
  ret void, !dbg !3149
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._dep_node* @create_dep_node() #0 !dbg !3150 {
entry:
  %n = alloca %struct._dep_node*, align 8
  %back = alloca %struct._dep_link*, align 8
  %forw = alloca %struct._dep_link*, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_node** %n, metadata !3153, metadata !DIExpression()), !dbg !3154
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dn_pool, align 8, !dbg !3155
  %call = call i8* @pool_alloc(%struct.alloc_pool_def* %0), !dbg !3156
  %1 = bitcast i8* %call to %struct._dep_node*, !dbg !3157
  store %struct._dep_node* %1, %struct._dep_node** %n, align 8, !dbg !3154
  call void @llvm.dbg.declare(metadata %struct._dep_link** %back, metadata !3158, metadata !DIExpression()), !dbg !3159
  %2 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3160
  %back1 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %2, i32 0, i32 0, !dbg !3160
  store %struct._dep_link* %back1, %struct._dep_link** %back, align 8, !dbg !3159
  call void @llvm.dbg.declare(metadata %struct._dep_link** %forw, metadata !3161, metadata !DIExpression()), !dbg !3162
  %3 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3163
  %forw2 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %3, i32 0, i32 2, !dbg !3163
  store %struct._dep_link* %forw2, %struct._dep_link** %forw, align 8, !dbg !3162
  %4 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3164
  %5 = load %struct._dep_link*, %struct._dep_link** %back, align 8, !dbg !3165
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %5, i32 0, i32 0, !dbg !3165
  store %struct._dep_node* %4, %struct._dep_node** %node, align 8, !dbg !3166
  %6 = load %struct._dep_link*, %struct._dep_link** %back, align 8, !dbg !3167
  %next = getelementptr inbounds %struct._dep_link, %struct._dep_link* %6, i32 0, i32 1, !dbg !3167
  store %struct._dep_link* null, %struct._dep_link** %next, align 8, !dbg !3168
  %7 = load %struct._dep_link*, %struct._dep_link** %back, align 8, !dbg !3169
  %prev_nextp = getelementptr inbounds %struct._dep_link, %struct._dep_link* %7, i32 0, i32 2, !dbg !3169
  store %struct._dep_link** null, %struct._dep_link*** %prev_nextp, align 8, !dbg !3170
  %8 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3171
  %9 = load %struct._dep_link*, %struct._dep_link** %forw, align 8, !dbg !3172
  %node3 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %9, i32 0, i32 0, !dbg !3172
  store %struct._dep_node* %8, %struct._dep_node** %node3, align 8, !dbg !3173
  %10 = load %struct._dep_link*, %struct._dep_link** %forw, align 8, !dbg !3174
  %next4 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %10, i32 0, i32 1, !dbg !3174
  store %struct._dep_link* null, %struct._dep_link** %next4, align 8, !dbg !3175
  %11 = load %struct._dep_link*, %struct._dep_link** %forw, align 8, !dbg !3176
  %prev_nextp5 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %11, i32 0, i32 2, !dbg !3176
  store %struct._dep_link** null, %struct._dep_link*** %prev_nextp5, align 8, !dbg !3177
  %12 = load i32, i32* @dn_pool_diff, align 4, !dbg !3178
  %inc = add nsw i32 %12, 1, !dbg !3178
  store i32 %inc, i32* @dn_pool_diff, align 4, !dbg !3178
  %13 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3179
  ret %struct._dep_node* %13, !dbg !3180
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_dep(%struct._dep* %to, %struct._dep* %from) #0 !dbg !3181 {
entry:
  %to.addr = alloca %struct._dep*, align 8
  %from.addr = alloca %struct._dep*, align 8
  store %struct._dep* %to, %struct._dep** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %to.addr, metadata !3184, metadata !DIExpression()), !dbg !3185
  store %struct._dep* %from, %struct._dep** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %from.addr, metadata !3186, metadata !DIExpression()), !dbg !3187
  %0 = load %struct._dep*, %struct._dep** %to.addr, align 8, !dbg !3188
  %1 = bitcast %struct._dep* %0 to i8*, !dbg !3189
  %2 = load %struct._dep*, %struct._dep** %from.addr, align 8, !dbg !3190
  %3 = bitcast %struct._dep* %2 to i8*, !dbg !3189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %3, i64 24, i1 false), !dbg !3189
  ret void, !dbg !3191
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_back_and_forw_lists(%struct._dep* %dep, i8 zeroext %resolved_p, %struct._deps_list** %back_list_ptr, %struct._deps_list** %forw_list_ptr) #0 !dbg !3192 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  %resolved_p.addr = alloca i8, align 1
  %back_list_ptr.addr = alloca %struct._deps_list**, align 8
  %forw_list_ptr.addr = alloca %struct._deps_list**, align 8
  %con = alloca %struct.rtx_def*, align 8
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !3195, metadata !DIExpression()), !dbg !3196
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !3197, metadata !DIExpression()), !dbg !3198
  store %struct._deps_list** %back_list_ptr, %struct._deps_list*** %back_list_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list*** %back_list_ptr.addr, metadata !3199, metadata !DIExpression()), !dbg !3200
  store %struct._deps_list** %forw_list_ptr, %struct._deps_list*** %forw_list_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list*** %forw_list_ptr.addr, metadata !3201, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %con, metadata !3203, metadata !DIExpression()), !dbg !3204
  %0 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3205
  %con1 = getelementptr inbounds %struct._dep, %struct._dep* %0, i32 0, i32 1, !dbg !3205
  %1 = load %struct.rtx_def*, %struct.rtx_def** %con1, align 8, !dbg !3205
  store %struct.rtx_def* %1, %struct.rtx_def** %con, align 8, !dbg !3204
  %2 = load i8, i8* %resolved_p.addr, align 1, !dbg !3206
  %tobool = icmp ne i8 %2, 0, !dbg !3206
  br i1 %tobool, label %if.else50, label %if.then, !dbg !3208

if.then:                                          ; preds = %entry
  %3 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3209
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %3, i32 0, i32 17, !dbg !3212
  %4 = load i32, i32* %flags, align 8, !dbg !3212
  %and = and i32 %4, 2, !dbg !3213
  %tobool2 = icmp ne i32 %and, 0, !dbg !3213
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !3214

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3215
  %status = getelementptr inbounds %struct._dep, %struct._dep* %5, i32 0, i32 3, !dbg !3215
  %6 = load i32, i32* %status, align 4, !dbg !3215
  %and3 = and i32 %6, 16777215, !dbg !3216
  %tobool4 = icmp ne i32 %and3, 0, !dbg !3216
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !3217

if.then5:                                         ; preds = %land.lhs.true
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3218
  %tobool6 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %7, null, !dbg !3218
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !3218

cond.true:                                        ; preds = %if.then5
  %8 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3218
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %8, i32 0, i32 0, !dbg !3218
  br label %cond.end, !dbg !3218

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !3218

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3218
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3218
  %tobool7 = icmp ne %struct.VEC_int_heap* %9, null, !dbg !3218
  br i1 %tobool7, label %cond.true8, label %cond.false10, !dbg !3218

cond.true8:                                       ; preds = %cond.end
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3218
  %base9 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i32 0, i32 0, !dbg !3218
  br label %cond.end11, !dbg !3218

cond.false10:                                     ; preds = %cond.end
  br label %cond.end11, !dbg !3218

cond.end11:                                       ; preds = %cond.false10, %cond.true8
  %cond12 = phi %struct.VEC_int_base* [ %base9, %cond.true8 ], [ null, %cond.false10 ], !dbg !3218
  %11 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3218
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !3218
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3218
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3218
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3218
  %12 = load i32, i32* %rt_int, align 8, !dbg !3218
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond12, i32 %12), !dbg !3218
  %call13 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %call), !dbg !3218
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call13, i32 0, i32 3, !dbg !3218
  %13 = load %struct._deps_list*, %struct._deps_list** %spec_back_deps, align 8, !dbg !3218
  %14 = load %struct._deps_list**, %struct._deps_list*** %back_list_ptr.addr, align 8, !dbg !3219
  store %struct._deps_list* %13, %struct._deps_list** %14, align 8, !dbg !3220
  br label %if.end, !dbg !3221

if.else:                                          ; preds = %land.lhs.true, %if.then
  %15 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3222
  %tobool14 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %15, null, !dbg !3222
  br i1 %tobool14, label %cond.true15, label %cond.false17, !dbg !3222

cond.true15:                                      ; preds = %if.else
  %16 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3222
  %base16 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %16, i32 0, i32 0, !dbg !3222
  br label %cond.end18, !dbg !3222

cond.false17:                                     ; preds = %if.else
  br label %cond.end18, !dbg !3222

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base16, %cond.true15 ], [ null, %cond.false17 ], !dbg !3222
  %17 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3222
  %tobool20 = icmp ne %struct.VEC_int_heap* %17, null, !dbg !3222
  br i1 %tobool20, label %cond.true21, label %cond.false23, !dbg !3222

cond.true21:                                      ; preds = %cond.end18
  %18 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3222
  %base22 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %18, i32 0, i32 0, !dbg !3222
  br label %cond.end24, !dbg !3222

cond.false23:                                     ; preds = %cond.end18
  br label %cond.end24, !dbg !3222

cond.end24:                                       ; preds = %cond.false23, %cond.true21
  %cond25 = phi %struct.VEC_int_base* [ %base22, %cond.true21 ], [ null, %cond.false23 ], !dbg !3222
  %19 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3222
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !3222
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !3222
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 0, !dbg !3222
  %rt_int29 = bitcast %union.rtunion_def* %arrayidx28 to i32*, !dbg !3222
  %20 = load i32, i32* %rt_int29, align 8, !dbg !3222
  %call30 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond25, i32 %20), !dbg !3222
  %call31 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond19, i32 %call30), !dbg !3222
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call31, i32 0, i32 2, !dbg !3222
  %21 = load %struct._deps_list*, %struct._deps_list** %hard_back_deps, align 8, !dbg !3222
  %22 = load %struct._deps_list**, %struct._deps_list*** %back_list_ptr.addr, align 8, !dbg !3223
  store %struct._deps_list* %21, %struct._deps_list** %22, align 8, !dbg !3224
  br label %if.end

if.end:                                           ; preds = %cond.end24, %cond.end11
  %23 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3225
  %tobool32 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %23, null, !dbg !3225
  br i1 %tobool32, label %cond.true33, label %cond.false35, !dbg !3225

cond.true33:                                      ; preds = %if.end
  %24 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3225
  %base34 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %24, i32 0, i32 0, !dbg !3225
  br label %cond.end36, !dbg !3225

cond.false35:                                     ; preds = %if.end
  br label %cond.end36, !dbg !3225

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base34, %cond.true33 ], [ null, %cond.false35 ], !dbg !3225
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3225
  %tobool38 = icmp ne %struct.VEC_int_heap* %25, null, !dbg !3225
  br i1 %tobool38, label %cond.true39, label %cond.false41, !dbg !3225

cond.true39:                                      ; preds = %cond.end36
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3225
  %base40 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i32 0, i32 0, !dbg !3225
  br label %cond.end42, !dbg !3225

cond.false41:                                     ; preds = %cond.end36
  br label %cond.end42, !dbg !3225

cond.end42:                                       ; preds = %cond.false41, %cond.true39
  %cond43 = phi %struct.VEC_int_base* [ %base40, %cond.true39 ], [ null, %cond.false41 ], !dbg !3225
  %27 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3225
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %27, i32 0, i32 0, !dbg !3225
  %28 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3225
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !3225
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !3225
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !3225
  %rt_int47 = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !3225
  %29 = load i32, i32* %rt_int47, align 8, !dbg !3225
  %call48 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond43, i32 %29), !dbg !3225
  %call49 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond37, i32 %call48), !dbg !3225
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call49, i32 0, i32 4, !dbg !3225
  %30 = load %struct._deps_list*, %struct._deps_list** %forw_deps, align 8, !dbg !3225
  %31 = load %struct._deps_list**, %struct._deps_list*** %forw_list_ptr.addr, align 8, !dbg !3226
  store %struct._deps_list* %30, %struct._deps_list** %31, align 8, !dbg !3227
  br label %if.end88, !dbg !3228

if.else50:                                        ; preds = %entry
  %32 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3229
  %tobool51 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %32, null, !dbg !3229
  br i1 %tobool51, label %cond.true52, label %cond.false54, !dbg !3229

cond.true52:                                      ; preds = %if.else50
  %33 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3229
  %base53 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %33, i32 0, i32 0, !dbg !3229
  br label %cond.end55, !dbg !3229

cond.false54:                                     ; preds = %if.else50
  br label %cond.end55, !dbg !3229

cond.end55:                                       ; preds = %cond.false54, %cond.true52
  %cond56 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base53, %cond.true52 ], [ null, %cond.false54 ], !dbg !3229
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3229
  %tobool57 = icmp ne %struct.VEC_int_heap* %34, null, !dbg !3229
  br i1 %tobool57, label %cond.true58, label %cond.false60, !dbg !3229

cond.true58:                                      ; preds = %cond.end55
  %35 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3229
  %base59 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %35, i32 0, i32 0, !dbg !3229
  br label %cond.end61, !dbg !3229

cond.false60:                                     ; preds = %cond.end55
  br label %cond.end61, !dbg !3229

cond.end61:                                       ; preds = %cond.false60, %cond.true58
  %cond62 = phi %struct.VEC_int_base* [ %base59, %cond.true58 ], [ null, %cond.false60 ], !dbg !3229
  %36 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3229
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !3229
  %fld64 = bitcast %union.u* %u63 to [1 x %union.rtunion_def]*, !dbg !3229
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i64 0, i64 0, !dbg !3229
  %rt_int66 = bitcast %union.rtunion_def* %arrayidx65 to i32*, !dbg !3229
  %37 = load i32, i32* %rt_int66, align 8, !dbg !3229
  %call67 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond62, i32 %37), !dbg !3229
  %call68 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond56, i32 %call67), !dbg !3229
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call68, i32 0, i32 5, !dbg !3229
  %38 = load %struct._deps_list*, %struct._deps_list** %resolved_back_deps, align 8, !dbg !3229
  %39 = load %struct._deps_list**, %struct._deps_list*** %back_list_ptr.addr, align 8, !dbg !3231
  store %struct._deps_list* %38, %struct._deps_list** %39, align 8, !dbg !3232
  %40 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3233
  %tobool69 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %40, null, !dbg !3233
  br i1 %tobool69, label %cond.true70, label %cond.false72, !dbg !3233

cond.true70:                                      ; preds = %cond.end61
  %41 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3233
  %base71 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %41, i32 0, i32 0, !dbg !3233
  br label %cond.end73, !dbg !3233

cond.false72:                                     ; preds = %cond.end61
  br label %cond.end73, !dbg !3233

cond.end73:                                       ; preds = %cond.false72, %cond.true70
  %cond74 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base71, %cond.true70 ], [ null, %cond.false72 ], !dbg !3233
  %42 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3233
  %tobool75 = icmp ne %struct.VEC_int_heap* %42, null, !dbg !3233
  br i1 %tobool75, label %cond.true76, label %cond.false78, !dbg !3233

cond.true76:                                      ; preds = %cond.end73
  %43 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3233
  %base77 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %43, i32 0, i32 0, !dbg !3233
  br label %cond.end79, !dbg !3233

cond.false78:                                     ; preds = %cond.end73
  br label %cond.end79, !dbg !3233

cond.end79:                                       ; preds = %cond.false78, %cond.true76
  %cond80 = phi %struct.VEC_int_base* [ %base77, %cond.true76 ], [ null, %cond.false78 ], !dbg !3233
  %44 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3233
  %pro81 = getelementptr inbounds %struct._dep, %struct._dep* %44, i32 0, i32 0, !dbg !3233
  %45 = load %struct.rtx_def*, %struct.rtx_def** %pro81, align 8, !dbg !3233
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !3233
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !3233
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !3233
  %rt_int85 = bitcast %union.rtunion_def* %arrayidx84 to i32*, !dbg !3233
  %46 = load i32, i32* %rt_int85, align 8, !dbg !3233
  %call86 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond80, i32 %46), !dbg !3233
  %call87 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond74, i32 %call86), !dbg !3233
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call87, i32 0, i32 6, !dbg !3233
  %47 = load %struct._deps_list*, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !3233
  %48 = load %struct._deps_list**, %struct._deps_list*** %forw_list_ptr.addr, align 8, !dbg !3234
  store %struct._deps_list* %47, %struct._deps_list** %48, align 8, !dbg !3235
  br label %if.end88

if.end88:                                         ; preds = %cond.end79, %cond.end42
  ret void, !dbg !3236
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_to_deps_list(%struct._dep_link* %link, %struct._deps_list* %l) #0 !dbg !3237 {
entry:
  %link.addr = alloca %struct._dep_link*, align 8
  %l.addr = alloca %struct._deps_list*, align 8
  store %struct._dep_link* %link, %struct._dep_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_link** %link.addr, metadata !3240, metadata !DIExpression()), !dbg !3241
  store %struct._deps_list* %l, %struct._deps_list** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list** %l.addr, metadata !3242, metadata !DIExpression()), !dbg !3243
  %0 = load %struct._dep_link*, %struct._dep_link** %link.addr, align 8, !dbg !3244
  %1 = load %struct._deps_list*, %struct._deps_list** %l.addr, align 8, !dbg !3245
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %1, i32 0, i32 0, !dbg !3245
  call void @attach_dep_link(%struct._dep_link* %0, %struct._dep_link** %first), !dbg !3246
  %2 = load %struct._dep_link*, %struct._dep_link** %link.addr, align 8, !dbg !3247
  %call = call zeroext i8 @depl_on_debug_p(%struct._dep_link* %2), !dbg !3249
  %tobool = icmp ne i8 %call, 0, !dbg !3249
  br i1 %tobool, label %if.end, label %if.then, !dbg !3250

if.then:                                          ; preds = %entry
  %3 = load %struct._deps_list*, %struct._deps_list** %l.addr, align 8, !dbg !3251
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %3, i32 0, i32 1, !dbg !3251
  %4 = load i32, i32* %n_links, align 8, !dbg !3252
  %inc = add nsw i32 %4, 1, !dbg !3252
  store i32 %inc, i32* %n_links, align 8, !dbg !3252
  br label %if.end, !dbg !3252

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3253
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_dependency_caches(%struct._dep* %dep) #0 !dbg !3254 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  %elem_luid = alloca i32, align 4
  %insn_luid = alloca i32, align 4
  %ds = alloca i32, align 4
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !3255, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.declare(metadata i32* %elem_luid, metadata !3257, metadata !DIExpression()), !dbg !3258
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3259
  %tobool = icmp ne %struct.VEC_int_heap* %0, null, !dbg !3259
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3259

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3259
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i32 0, i32 0, !dbg !3259
  br label %cond.end, !dbg !3259

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3259

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3259
  %2 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3259
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %2, i32 0, i32 0, !dbg !3259
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3259
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !3259
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3259
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3259
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3259
  %4 = load i32, i32* %rt_int, align 8, !dbg !3259
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond, i32 %4), !dbg !3259
  store i32 %call, i32* %elem_luid, align 4, !dbg !3258
  call void @llvm.dbg.declare(metadata i32* %insn_luid, metadata !3260, metadata !DIExpression()), !dbg !3261
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3262
  %tobool1 = icmp ne %struct.VEC_int_heap* %5, null, !dbg !3262
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !3262

cond.true2:                                       ; preds = %cond.end
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3262
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i32 0, i32 0, !dbg !3262
  br label %cond.end5, !dbg !3262

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !3262

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !3262
  %7 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3262
  %con = getelementptr inbounds %struct._dep, %struct._dep* %7, i32 0, i32 1, !dbg !3262
  %8 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3262
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !3262
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !3262
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 0, !dbg !3262
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !3262
  %9 = load i32, i32* %rt_int10, align 8, !dbg !3262
  %call11 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %9), !dbg !3262
  store i32 %call11, i32* %insn_luid, align 4, !dbg !3261
  %10 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3263
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %10, i32 0, i32 17, !dbg !3265
  %11 = load i32, i32* %flags, align 8, !dbg !3265
  %and = and i32 %11, 1, !dbg !3266
  %tobool12 = icmp ne i32 %and, 0, !dbg !3266
  br i1 %tobool12, label %if.else, label %if.then, !dbg !3267

if.then:                                          ; preds = %cond.end5
  %12 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3268
  %type = getelementptr inbounds %struct._dep, %struct._dep* %12, i32 0, i32 2, !dbg !3268
  %13 = load i32, i32* %type, align 8, !dbg !3268
  switch i32 %13, label %sw.default [
    i32 0, label %sw.bb
    i32 11, label %sw.bb15
    i32 12, label %sw.bb19
  ], !dbg !3270

sw.bb:                                            ; preds = %if.then
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3271
  %15 = load i32, i32* %insn_luid, align 4, !dbg !3273
  %idxprom = sext i32 %15 to i64, !dbg !3271
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %14, i64 %idxprom, !dbg !3271
  %16 = load i32, i32* %elem_luid, align 4, !dbg !3274
  %call14 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx13, i32 %16), !dbg !3275
  br label %sw.epilog, !dbg !3276

sw.bb15:                                          ; preds = %if.then
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !3277
  %18 = load i32, i32* %insn_luid, align 4, !dbg !3278
  %idxprom16 = sext i32 %18 to i64, !dbg !3277
  %arrayidx17 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %17, i64 %idxprom16, !dbg !3277
  %19 = load i32, i32* %elem_luid, align 4, !dbg !3279
  %call18 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx17, i32 %19), !dbg !3280
  br label %sw.epilog, !dbg !3281

sw.bb19:                                          ; preds = %if.then
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !3282
  %21 = load i32, i32* %insn_luid, align 4, !dbg !3283
  %idxprom20 = sext i32 %21 to i64, !dbg !3282
  %arrayidx21 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %20, i64 %idxprom20, !dbg !3282
  %22 = load i32, i32* %elem_luid, align 4, !dbg !3284
  %call22 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx21, i32 %22), !dbg !3285
  br label %sw.epilog, !dbg !3286

sw.default:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 963, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3287
  br label %sw.epilog, !dbg !3288

sw.epilog:                                        ; preds = %sw.default, %sw.bb19, %sw.bb15, %sw.bb
  br label %if.end57, !dbg !3289

if.else:                                          ; preds = %cond.end5
  call void @llvm.dbg.declare(metadata i32* %ds, metadata !3290, metadata !DIExpression()), !dbg !3292
  %23 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3293
  %status = getelementptr inbounds %struct._dep, %struct._dep* %23, i32 0, i32 3, !dbg !3293
  %24 = load i32, i32* %status, align 4, !dbg !3293
  store i32 %24, i32* %ds, align 4, !dbg !3292
  %25 = load i32, i32* %ds, align 4, !dbg !3294
  %and23 = and i32 %25, 16777216, !dbg !3296
  %tobool24 = icmp ne i32 %and23, 0, !dbg !3296
  br i1 %tobool24, label %if.then25, label %if.end, !dbg !3297

if.then25:                                        ; preds = %if.else
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3298
  %27 = load i32, i32* %insn_luid, align 4, !dbg !3299
  %idxprom26 = sext i32 %27 to i64, !dbg !3298
  %arrayidx27 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %26, i64 %idxprom26, !dbg !3298
  %28 = load i32, i32* %elem_luid, align 4, !dbg !3300
  %call28 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx27, i32 %28), !dbg !3301
  br label %if.end, !dbg !3301

if.end:                                           ; preds = %if.then25, %if.else
  %29 = load i32, i32* %ds, align 4, !dbg !3302
  %and29 = and i32 %29, 33554432, !dbg !3304
  %tobool30 = icmp ne i32 %and29, 0, !dbg !3304
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !3305

if.then31:                                        ; preds = %if.end
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !3306
  %31 = load i32, i32* %insn_luid, align 4, !dbg !3307
  %idxprom32 = sext i32 %31 to i64, !dbg !3306
  %arrayidx33 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %30, i64 %idxprom32, !dbg !3306
  %32 = load i32, i32* %elem_luid, align 4, !dbg !3308
  %call34 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx33, i32 %32), !dbg !3309
  br label %if.end35, !dbg !3309

if.end35:                                         ; preds = %if.then31, %if.end
  %33 = load i32, i32* %ds, align 4, !dbg !3310
  %and36 = and i32 %33, 67108864, !dbg !3312
  %tobool37 = icmp ne i32 %and36, 0, !dbg !3312
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !3313

if.then38:                                        ; preds = %if.end35
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !3314
  %35 = load i32, i32* %insn_luid, align 4, !dbg !3315
  %idxprom39 = sext i32 %35 to i64, !dbg !3314
  %arrayidx40 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %34, i64 %idxprom39, !dbg !3314
  %36 = load i32, i32* %elem_luid, align 4, !dbg !3316
  %call41 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx40, i32 %36), !dbg !3317
  br label %if.end42, !dbg !3317

if.end42:                                         ; preds = %if.then38, %if.end35
  %37 = load i32, i32* %ds, align 4, !dbg !3318
  %and43 = and i32 %37, 16777215, !dbg !3320
  %tobool44 = icmp ne i32 %and43, 0, !dbg !3320
  br i1 %tobool44, label %if.then45, label %if.end56, !dbg !3321

if.then45:                                        ; preds = %if.end42
  %38 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3322
  %flags46 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %38, i32 0, i32 17, !dbg !3322
  %39 = load i32, i32* %flags46, align 8, !dbg !3322
  %and47 = and i32 %39, 2, !dbg !3322
  %tobool48 = icmp ne i32 %and47, 0, !dbg !3322
  br i1 %tobool48, label %cond.false50, label %cond.true49, !dbg !3322

cond.true49:                                      ; preds = %if.then45
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 979, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3322
  br label %cond.end51, !dbg !3322

cond.false50:                                     ; preds = %if.then45
  br label %cond.end51, !dbg !3322

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond52 = phi i32 [ 0, %cond.true49 ], [ 0, %cond.false50 ], !dbg !3322
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !3324
  %41 = load i32, i32* %insn_luid, align 4, !dbg !3325
  %idxprom53 = sext i32 %41 to i64, !dbg !3324
  %arrayidx54 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %40, i64 %idxprom53, !dbg !3324
  %42 = load i32, i32* %elem_luid, align 4, !dbg !3326
  %call55 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %arrayidx54, i32 %42), !dbg !3327
  br label %if.end56, !dbg !3328

if.end56:                                         ; preds = %cond.end51, %if.end42
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %sw.epilog
  ret void, !dbg !3329
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @sd_add_or_update_dep(%struct._dep* %dep, i8 zeroext %resolved_p) #0 !dbg !3330 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  %resolved_p.addr = alloca i8, align 1
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !3333, metadata !DIExpression()), !dbg !3334
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !3335, metadata !DIExpression()), !dbg !3336
  %0 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !3337
  %1 = load i8, i8* %resolved_p.addr, align 1, !dbg !3338
  %call = call i32 @add_or_update_dep_1(%struct._dep* %0, i8 zeroext %1, %struct.rtx_def* null, %struct.rtx_def* null), !dbg !3339
  ret i32 %call, !dbg !3340
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @add_or_update_dep_1(%struct._dep* %new_dep, i8 zeroext %resolved_p, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) #0 !dbg !3341 {
entry:
  %retval = alloca i32, align 4
  %new_dep.addr = alloca %struct._dep*, align 8
  %resolved_p.addr = alloca i8, align 1
  %mem1.addr = alloca %struct.rtx_def*, align 8
  %mem2.addr = alloca %struct.rtx_def*, align 8
  %maybe_present_p = alloca i8, align 1
  %present_p = alloca i8, align 1
  %present_dep = alloca %struct._dep*, align 8
  %sd_it = alloca %struct._sd_iterator, align 8
  store %struct._dep* %new_dep, %struct._dep** %new_dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %new_dep.addr, metadata !3344, metadata !DIExpression()), !dbg !3345
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !3346, metadata !DIExpression()), !dbg !3347
  store %struct.rtx_def* %mem1, %struct.rtx_def** %mem1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem1.addr, metadata !3348, metadata !DIExpression()), !dbg !3349
  store %struct.rtx_def* %mem2, %struct.rtx_def** %mem2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem2.addr, metadata !3350, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.declare(metadata i8* %maybe_present_p, metadata !3352, metadata !DIExpression()), !dbg !3353
  store i8 1, i8* %maybe_present_p, align 1, !dbg !3353
  call void @llvm.dbg.declare(metadata i8* %present_p, metadata !3354, metadata !DIExpression()), !dbg !3355
  store i8 0, i8* %present_p, align 1, !dbg !3355
  %0 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %0, i32 0, i32 0, !dbg !3356
  %1 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3356
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !3356
  %bf.load = load i32, i32* %2, align 8, !dbg !3356
  %bf.clear = and i32 %bf.load, 65535, !dbg !3356
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3356
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3356

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %pro1 = getelementptr inbounds %struct._dep, %struct._dep* %3, i32 0, i32 0, !dbg !3356
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pro1, align 8, !dbg !3356
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3356
  %bf.load2 = load i32, i32* %5, align 8, !dbg !3356
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !3356
  %cmp4 = icmp eq i32 %bf.clear3, 7, !dbg !3356
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false5, !dbg !3356

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %6 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %pro6 = getelementptr inbounds %struct._dep, %struct._dep* %6, i32 0, i32 0, !dbg !3356
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pro6, align 8, !dbg !3356
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !3356
  %bf.load7 = load i32, i32* %8, align 8, !dbg !3356
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !3356
  %cmp9 = icmp eq i32 %bf.clear8, 9, !dbg !3356
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !3356

lor.lhs.false10:                                  ; preds = %lor.lhs.false5
  %9 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %pro11 = getelementptr inbounds %struct._dep, %struct._dep* %9, i32 0, i32 0, !dbg !3356
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pro11, align 8, !dbg !3356
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3356
  %bf.load12 = load i32, i32* %11, align 8, !dbg !3356
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3356
  %cmp14 = icmp eq i32 %bf.clear13, 10, !dbg !3356
  br i1 %cmp14, label %land.lhs.true, label %cond.true, !dbg !3356

land.lhs.true:                                    ; preds = %lor.lhs.false10, %lor.lhs.false5, %lor.lhs.false, %entry
  %12 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %con = getelementptr inbounds %struct._dep, %struct._dep* %12, i32 0, i32 1, !dbg !3356
  %13 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3356
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !3356
  %bf.load15 = load i32, i32* %14, align 8, !dbg !3356
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !3356
  %cmp17 = icmp eq i32 %bf.clear16, 8, !dbg !3356
  br i1 %cmp17, label %land.lhs.true33, label %lor.lhs.false18, !dbg !3356

lor.lhs.false18:                                  ; preds = %land.lhs.true
  %15 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %con19 = getelementptr inbounds %struct._dep, %struct._dep* %15, i32 0, i32 1, !dbg !3356
  %16 = load %struct.rtx_def*, %struct.rtx_def** %con19, align 8, !dbg !3356
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !3356
  %bf.load20 = load i32, i32* %17, align 8, !dbg !3356
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !3356
  %cmp22 = icmp eq i32 %bf.clear21, 7, !dbg !3356
  br i1 %cmp22, label %land.lhs.true33, label %lor.lhs.false23, !dbg !3356

lor.lhs.false23:                                  ; preds = %lor.lhs.false18
  %18 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %con24 = getelementptr inbounds %struct._dep, %struct._dep* %18, i32 0, i32 1, !dbg !3356
  %19 = load %struct.rtx_def*, %struct.rtx_def** %con24, align 8, !dbg !3356
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !3356
  %bf.load25 = load i32, i32* %20, align 8, !dbg !3356
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !3356
  %cmp27 = icmp eq i32 %bf.clear26, 9, !dbg !3356
  br i1 %cmp27, label %land.lhs.true33, label %lor.lhs.false28, !dbg !3356

lor.lhs.false28:                                  ; preds = %lor.lhs.false23
  %21 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %con29 = getelementptr inbounds %struct._dep, %struct._dep* %21, i32 0, i32 1, !dbg !3356
  %22 = load %struct.rtx_def*, %struct.rtx_def** %con29, align 8, !dbg !3356
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !3356
  %bf.load30 = load i32, i32* %23, align 8, !dbg !3356
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !3356
  %cmp32 = icmp eq i32 %bf.clear31, 10, !dbg !3356
  br i1 %cmp32, label %land.lhs.true33, label %cond.true, !dbg !3356

land.lhs.true33:                                  ; preds = %lor.lhs.false28, %lor.lhs.false23, %lor.lhs.false18, %land.lhs.true
  %24 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %pro34 = getelementptr inbounds %struct._dep, %struct._dep* %24, i32 0, i32 0, !dbg !3356
  %25 = load %struct.rtx_def*, %struct.rtx_def** %pro34, align 8, !dbg !3356
  %26 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3356
  %con35 = getelementptr inbounds %struct._dep, %struct._dep* %26, i32 0, i32 1, !dbg !3356
  %27 = load %struct.rtx_def*, %struct.rtx_def** %con35, align 8, !dbg !3356
  %cmp36 = icmp ne %struct.rtx_def* %25, %27, !dbg !3356
  br i1 %cmp36, label %cond.false, label %cond.true, !dbg !3356

cond.true:                                        ; preds = %land.lhs.true33, %lor.lhs.false28, %lor.lhs.false10
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3356
  br label %cond.end, !dbg !3356

cond.false:                                       ; preds = %land.lhs.true33
  br label %cond.end, !dbg !3356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3356
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3357
  %cmp37 = icmp ne %struct.bitmap_head_def* %28, null, !dbg !3359
  br i1 %cmp37, label %if.then, label %if.end, !dbg !3360

if.then:                                          ; preds = %cond.end
  %29 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3361
  %call = call i32 @ask_dependency_caches(%struct._dep* %29), !dbg !3363
  switch i32 %call, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb38
    i32 3, label %sw.bb39
  ], !dbg !3364

sw.bb:                                            ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !3365
  br label %return, !dbg !3365

sw.bb38:                                          ; preds = %if.then
  store i8 1, i8* %maybe_present_p, align 1, !dbg !3367
  store i8 1, i8* %present_p, align 1, !dbg !3368
  br label %sw.epilog, !dbg !3369

sw.bb39:                                          ; preds = %if.then
  store i8 0, i8* %maybe_present_p, align 1, !dbg !3370
  store i8 0, i8* %present_p, align 1, !dbg !3371
  br label %sw.epilog, !dbg !3372

sw.default:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3373
  br label %sw.epilog, !dbg !3374

sw.epilog:                                        ; preds = %sw.default, %sw.bb39, %sw.bb38
  br label %if.end, !dbg !3375

if.end:                                           ; preds = %sw.epilog, %cond.end
  %30 = load i8, i8* %maybe_present_p, align 1, !dbg !3376
  %tobool = icmp ne i8 %30, 0, !dbg !3376
  br i1 %tobool, label %if.then40, label %if.end61, !dbg !3378

if.then40:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._dep** %present_dep, metadata !3379, metadata !DIExpression()), !dbg !3381
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !3382, metadata !DIExpression()), !dbg !3383
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3384
  %cmp41 = icmp eq %struct.bitmap_head_def* %31, null, !dbg !3384
  br i1 %cmp41, label %cond.false45, label %lor.lhs.false42, !dbg !3384

lor.lhs.false42:                                  ; preds = %if.then40
  %32 = load i8, i8* %present_p, align 1, !dbg !3384
  %conv = zext i8 %32 to i32, !dbg !3384
  %tobool43 = icmp ne i32 %conv, 0, !dbg !3384
  br i1 %tobool43, label %cond.false45, label %cond.true44, !dbg !3384

cond.true44:                                      ; preds = %lor.lhs.false42
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3384
  br label %cond.end46, !dbg !3384

cond.false45:                                     ; preds = %lor.lhs.false42, %if.then40
  br label %cond.end46, !dbg !3384

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond47 = phi i32 [ 0, %cond.true44 ], [ 0, %cond.false45 ], !dbg !3384
  %33 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3385
  %pro48 = getelementptr inbounds %struct._dep, %struct._dep* %33, i32 0, i32 0, !dbg !3385
  %34 = load %struct.rtx_def*, %struct.rtx_def** %pro48, align 8, !dbg !3385
  %35 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3386
  %con49 = getelementptr inbounds %struct._dep, %struct._dep* %35, i32 0, i32 1, !dbg !3386
  %36 = load %struct.rtx_def*, %struct.rtx_def** %con49, align 8, !dbg !3386
  %37 = load i8, i8* %resolved_p.addr, align 1, !dbg !3387
  %call50 = call %struct._dep* @sd_find_dep_between_no_cache(%struct.rtx_def* %34, %struct.rtx_def* %36, i8 zeroext %37, %struct._sd_iterator* %sd_it), !dbg !3388
  store %struct._dep* %call50, %struct._dep** %present_dep, align 8, !dbg !3389
  %38 = load %struct._dep*, %struct._dep** %present_dep, align 8, !dbg !3390
  %cmp51 = icmp ne %struct._dep* %38, null, !dbg !3392
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !3393

if.then53:                                        ; preds = %cond.end46
  %39 = load %struct._dep*, %struct._dep** %present_dep, align 8, !dbg !3394
  %40 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3395
  %41 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !3396
  %42 = load %struct.rtx_def*, %struct.rtx_def** %mem2.addr, align 8, !dbg !3397
  %call54 = call i32 @update_dep(%struct._dep* %39, %struct._dep* %40, %struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it, %struct.rtx_def* %41, %struct.rtx_def* %42), !dbg !3398
  store i32 %call54, i32* %retval, align 4, !dbg !3399
  br label %return, !dbg !3399

if.else:                                          ; preds = %cond.end46
  %43 = load i8, i8* %present_p, align 1, !dbg !3400
  %tobool55 = icmp ne i8 %43, 0, !dbg !3400
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !3400

cond.true56:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3400
  br label %cond.end58, !dbg !3400

cond.false57:                                     ; preds = %if.else
  br label %cond.end58, !dbg !3400

cond.end58:                                       ; preds = %cond.false57, %cond.true56
  %cond59 = phi i32 [ 0, %cond.true56 ], [ 0, %cond.false57 ], !dbg !3400
  br label %if.end60

if.end60:                                         ; preds = %cond.end58
  br label %if.end61, !dbg !3401

if.end61:                                         ; preds = %if.end60, %if.end
  %44 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !3402
  %cmp62 = icmp ne %struct.rtx_def* %44, null, !dbg !3404
  br i1 %cmp62, label %if.then64, label %if.end75, !dbg !3405

if.then64:                                        ; preds = %if.end61
  %45 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3406
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %45, i32 0, i32 12, !dbg !3406
  %bf.load65 = load i8, i8* %generate_spec_deps, align 8, !dbg !3406
  %bf.lshr = lshr i8 %bf.load65, 2, !dbg !3406
  %bf.clear66 = and i8 %bf.lshr, 1, !dbg !3406
  %bf.cast = zext i8 %bf.clear66 to i32, !dbg !3406
  %tobool67 = icmp ne i32 %bf.cast, 0, !dbg !3406
  br i1 %tobool67, label %cond.false69, label %cond.true68, !dbg !3406

cond.true68:                                      ; preds = %if.then64
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3406
  br label %cond.end70, !dbg !3406

cond.false69:                                     ; preds = %if.then64
  br label %cond.end70, !dbg !3406

cond.end70:                                       ; preds = %cond.false69, %cond.true68
  %cond71 = phi i32 [ 0, %cond.true68 ], [ 0, %cond.false69 ], !dbg !3406
  %46 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3408
  %status = getelementptr inbounds %struct._dep, %struct._dep* %46, i32 0, i32 3, !dbg !3408
  %47 = load i32, i32* %status, align 4, !dbg !3408
  %48 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !3409
  %49 = load %struct.rtx_def*, %struct.rtx_def** %mem2.addr, align 8, !dbg !3410
  %call72 = call i32 @estimate_dep_weak(%struct.rtx_def* %48, %struct.rtx_def* %49), !dbg !3411
  %call73 = call i32 @set_dep_weak(i32 %47, i32 63, i32 %call72), !dbg !3412
  %50 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3413
  %status74 = getelementptr inbounds %struct._dep, %struct._dep* %50, i32 0, i32 3, !dbg !3413
  store i32 %call73, i32* %status74, align 4, !dbg !3414
  br label %if.end75, !dbg !3415

if.end75:                                         ; preds = %cond.end70, %if.end61
  %51 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !3416
  %52 = load i8, i8* %resolved_p.addr, align 1, !dbg !3417
  call void @sd_add_dep(%struct._dep* %51, i8 zeroext %52), !dbg !3418
  store i32 3, i32* %retval, align 4, !dbg !3419
  br label %return, !dbg !3419

return:                                           ; preds = %if.end75, %if.then53, %sw.bb
  %53 = load i32, i32* %retval, align 4, !dbg !3420
  ret i32 %53, !dbg !3420
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_resolve_dep(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it) #0 !dbg !3421 {
entry:
  %node = alloca %struct._dep_node*, align 8
  %dep = alloca %struct._dep*, align 8
  %pro = alloca %struct.rtx_def*, align 8
  %con = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !3424, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.declare(metadata %struct._dep_node** %node, metadata !3426, metadata !DIExpression()), !dbg !3427
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i32 0, i32 2, !dbg !3428
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3428
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !3428
  %node1 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i32 0, i32 0, !dbg !3428
  %2 = load %struct._dep_node*, %struct._dep_node** %node1, align 8, !dbg !3428
  store %struct._dep_node* %2, %struct._dep_node** %node, align 8, !dbg !3427
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !3429, metadata !DIExpression()), !dbg !3430
  %3 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3431
  %dep2 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %3, i32 0, i32 1, !dbg !3431
  store %struct._dep* %dep2, %struct._dep** %dep, align 8, !dbg !3430
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pro, metadata !3432, metadata !DIExpression()), !dbg !3433
  %4 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3434
  %pro3 = getelementptr inbounds %struct._dep, %struct._dep* %4, i32 0, i32 0, !dbg !3434
  %5 = load %struct.rtx_def*, %struct.rtx_def** %pro3, align 8, !dbg !3434
  store %struct.rtx_def* %5, %struct.rtx_def** %pro, align 8, !dbg !3433
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %con, metadata !3435, metadata !DIExpression()), !dbg !3436
  %6 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3437
  %con4 = getelementptr inbounds %struct._dep, %struct._dep* %6, i32 0, i32 1, !dbg !3437
  %7 = load %struct.rtx_def*, %struct.rtx_def** %con4, align 8, !dbg !3437
  store %struct.rtx_def* %7, %struct.rtx_def** %con, align 8, !dbg !3436
  %8 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3438
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %8, i32 0, i32 17, !dbg !3440
  %9 = load i32, i32* %flags, align 8, !dbg !3440
  %and = and i32 %9, 2, !dbg !3441
  %tobool = icmp ne i32 %and, 0, !dbg !3441
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3442

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3443
  %status = getelementptr inbounds %struct._dep, %struct._dep* %10, i32 0, i32 3, !dbg !3443
  %11 = load i32, i32* %status, align 4, !dbg !3443
  %and5 = and i32 %11, 16777215, !dbg !3444
  %tobool6 = icmp ne i32 %and5, 0, !dbg !3444
  br i1 %tobool6, label %if.then, label %if.else, !dbg !3445

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3446
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %12, i32 0, i32 0, !dbg !3446
  %13 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3447
  %tobool7 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %13, null, !dbg !3447
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !3447

cond.true:                                        ; preds = %if.then
  %14 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3447
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %14, i32 0, i32 0, !dbg !3447
  br label %cond.end, !dbg !3447

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3447

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3447
  %15 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3447
  %tobool8 = icmp ne %struct.VEC_int_heap* %15, null, !dbg !3447
  br i1 %tobool8, label %cond.true9, label %cond.false11, !dbg !3447

cond.true9:                                       ; preds = %cond.end
  %16 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3447
  %base10 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %16, i32 0, i32 0, !dbg !3447
  br label %cond.end12, !dbg !3447

cond.false11:                                     ; preds = %cond.end
  br label %cond.end12, !dbg !3447

cond.end12:                                       ; preds = %cond.false11, %cond.true9
  %cond13 = phi %struct.VEC_int_base* [ %base10, %cond.true9 ], [ null, %cond.false11 ], !dbg !3447
  %17 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3447
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3447
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3447
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3447
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3447
  %18 = load i32, i32* %rt_int, align 8, !dbg !3447
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond13, i32 %18), !dbg !3447
  %call14 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %call), !dbg !3447
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call14, i32 0, i32 3, !dbg !3447
  %19 = load %struct._deps_list*, %struct._deps_list** %spec_back_deps, align 8, !dbg !3447
  %20 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3448
  %tobool15 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %20, null, !dbg !3448
  br i1 %tobool15, label %cond.true16, label %cond.false18, !dbg !3448

cond.true16:                                      ; preds = %cond.end12
  %21 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3448
  %base17 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %21, i32 0, i32 0, !dbg !3448
  br label %cond.end19, !dbg !3448

cond.false18:                                     ; preds = %cond.end12
  br label %cond.end19, !dbg !3448

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base17, %cond.true16 ], [ null, %cond.false18 ], !dbg !3448
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3448
  %tobool21 = icmp ne %struct.VEC_int_heap* %22, null, !dbg !3448
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !3448

cond.true22:                                      ; preds = %cond.end19
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3448
  %base23 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i32 0, i32 0, !dbg !3448
  br label %cond.end25, !dbg !3448

cond.false24:                                     ; preds = %cond.end19
  br label %cond.end25, !dbg !3448

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.VEC_int_base* [ %base23, %cond.true22 ], [ null, %cond.false24 ], !dbg !3448
  %24 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3448
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !3448
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !3448
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 0, !dbg !3448
  %rt_int30 = bitcast %union.rtunion_def* %arrayidx29 to i32*, !dbg !3448
  %25 = load i32, i32* %rt_int30, align 8, !dbg !3448
  %call31 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond26, i32 %25), !dbg !3448
  %call32 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond20, i32 %call31), !dbg !3448
  %resolved_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call32, i32 0, i32 5, !dbg !3448
  %26 = load %struct._deps_list*, %struct._deps_list** %resolved_back_deps, align 8, !dbg !3448
  call void @move_dep_link(%struct._dep_link* %back, %struct._deps_list* %19, %struct._deps_list* %26), !dbg !3449
  br label %if.end, !dbg !3449

if.else:                                          ; preds = %land.lhs.true, %entry
  %27 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3450
  %back33 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %27, i32 0, i32 0, !dbg !3450
  %28 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3451
  %tobool34 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %28, null, !dbg !3451
  br i1 %tobool34, label %cond.true35, label %cond.false37, !dbg !3451

cond.true35:                                      ; preds = %if.else
  %29 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3451
  %base36 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %29, i32 0, i32 0, !dbg !3451
  br label %cond.end38, !dbg !3451

cond.false37:                                     ; preds = %if.else
  br label %cond.end38, !dbg !3451

cond.end38:                                       ; preds = %cond.false37, %cond.true35
  %cond39 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base36, %cond.true35 ], [ null, %cond.false37 ], !dbg !3451
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3451
  %tobool40 = icmp ne %struct.VEC_int_heap* %30, null, !dbg !3451
  br i1 %tobool40, label %cond.true41, label %cond.false43, !dbg !3451

cond.true41:                                      ; preds = %cond.end38
  %31 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3451
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %31, i32 0, i32 0, !dbg !3451
  br label %cond.end44, !dbg !3451

cond.false43:                                     ; preds = %cond.end38
  br label %cond.end44, !dbg !3451

cond.end44:                                       ; preds = %cond.false43, %cond.true41
  %cond45 = phi %struct.VEC_int_base* [ %base42, %cond.true41 ], [ null, %cond.false43 ], !dbg !3451
  %32 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3451
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !3451
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !3451
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !3451
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !3451
  %33 = load i32, i32* %rt_int49, align 8, !dbg !3451
  %call50 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond45, i32 %33), !dbg !3451
  %call51 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond39, i32 %call50), !dbg !3451
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call51, i32 0, i32 2, !dbg !3451
  %34 = load %struct._deps_list*, %struct._deps_list** %hard_back_deps, align 8, !dbg !3451
  %35 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3452
  %tobool52 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %35, null, !dbg !3452
  br i1 %tobool52, label %cond.true53, label %cond.false55, !dbg !3452

cond.true53:                                      ; preds = %cond.end44
  %36 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3452
  %base54 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %36, i32 0, i32 0, !dbg !3452
  br label %cond.end56, !dbg !3452

cond.false55:                                     ; preds = %cond.end44
  br label %cond.end56, !dbg !3452

cond.end56:                                       ; preds = %cond.false55, %cond.true53
  %cond57 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base54, %cond.true53 ], [ null, %cond.false55 ], !dbg !3452
  %37 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3452
  %tobool58 = icmp ne %struct.VEC_int_heap* %37, null, !dbg !3452
  br i1 %tobool58, label %cond.true59, label %cond.false61, !dbg !3452

cond.true59:                                      ; preds = %cond.end56
  %38 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3452
  %base60 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %38, i32 0, i32 0, !dbg !3452
  br label %cond.end62, !dbg !3452

cond.false61:                                     ; preds = %cond.end56
  br label %cond.end62, !dbg !3452

cond.end62:                                       ; preds = %cond.false61, %cond.true59
  %cond63 = phi %struct.VEC_int_base* [ %base60, %cond.true59 ], [ null, %cond.false61 ], !dbg !3452
  %39 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3452
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !3452
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !3452
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !3452
  %rt_int67 = bitcast %union.rtunion_def* %arrayidx66 to i32*, !dbg !3452
  %40 = load i32, i32* %rt_int67, align 8, !dbg !3452
  %call68 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond63, i32 %40), !dbg !3452
  %call69 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond57, i32 %call68), !dbg !3452
  %resolved_back_deps70 = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call69, i32 0, i32 5, !dbg !3452
  %41 = load %struct._deps_list*, %struct._deps_list** %resolved_back_deps70, align 8, !dbg !3452
  call void @move_dep_link(%struct._dep_link* %back33, %struct._deps_list* %34, %struct._deps_list* %41), !dbg !3453
  br label %if.end

if.end:                                           ; preds = %cond.end62, %cond.end25
  %42 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3454
  %forw = getelementptr inbounds %struct._dep_node, %struct._dep_node* %42, i32 0, i32 2, !dbg !3454
  %43 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3455
  %tobool71 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %43, null, !dbg !3455
  br i1 %tobool71, label %cond.true72, label %cond.false74, !dbg !3455

cond.true72:                                      ; preds = %if.end
  %44 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3455
  %base73 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %44, i32 0, i32 0, !dbg !3455
  br label %cond.end75, !dbg !3455

cond.false74:                                     ; preds = %if.end
  br label %cond.end75, !dbg !3455

cond.end75:                                       ; preds = %cond.false74, %cond.true72
  %cond76 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base73, %cond.true72 ], [ null, %cond.false74 ], !dbg !3455
  %45 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3455
  %tobool77 = icmp ne %struct.VEC_int_heap* %45, null, !dbg !3455
  br i1 %tobool77, label %cond.true78, label %cond.false80, !dbg !3455

cond.true78:                                      ; preds = %cond.end75
  %46 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3455
  %base79 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %46, i32 0, i32 0, !dbg !3455
  br label %cond.end81, !dbg !3455

cond.false80:                                     ; preds = %cond.end75
  br label %cond.end81, !dbg !3455

cond.end81:                                       ; preds = %cond.false80, %cond.true78
  %cond82 = phi %struct.VEC_int_base* [ %base79, %cond.true78 ], [ null, %cond.false80 ], !dbg !3455
  %47 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3455
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !3455
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !3455
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !3455
  %rt_int86 = bitcast %union.rtunion_def* %arrayidx85 to i32*, !dbg !3455
  %48 = load i32, i32* %rt_int86, align 8, !dbg !3455
  %call87 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond82, i32 %48), !dbg !3455
  %call88 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond76, i32 %call87), !dbg !3455
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call88, i32 0, i32 4, !dbg !3455
  %49 = load %struct._deps_list*, %struct._deps_list** %forw_deps, align 8, !dbg !3455
  %50 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3456
  %tobool89 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %50, null, !dbg !3456
  br i1 %tobool89, label %cond.true90, label %cond.false92, !dbg !3456

cond.true90:                                      ; preds = %cond.end81
  %51 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3456
  %base91 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %51, i32 0, i32 0, !dbg !3456
  br label %cond.end93, !dbg !3456

cond.false92:                                     ; preds = %cond.end81
  br label %cond.end93, !dbg !3456

cond.end93:                                       ; preds = %cond.false92, %cond.true90
  %cond94 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base91, %cond.true90 ], [ null, %cond.false92 ], !dbg !3456
  %52 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3456
  %tobool95 = icmp ne %struct.VEC_int_heap* %52, null, !dbg !3456
  br i1 %tobool95, label %cond.true96, label %cond.false98, !dbg !3456

cond.true96:                                      ; preds = %cond.end93
  %53 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3456
  %base97 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %53, i32 0, i32 0, !dbg !3456
  br label %cond.end99, !dbg !3456

cond.false98:                                     ; preds = %cond.end93
  br label %cond.end99, !dbg !3456

cond.end99:                                       ; preds = %cond.false98, %cond.true96
  %cond100 = phi %struct.VEC_int_base* [ %base97, %cond.true96 ], [ null, %cond.false98 ], !dbg !3456
  %54 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3456
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !3456
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !3456
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 0, !dbg !3456
  %rt_int104 = bitcast %union.rtunion_def* %arrayidx103 to i32*, !dbg !3456
  %55 = load i32, i32* %rt_int104, align 8, !dbg !3456
  %call105 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond100, i32 %55), !dbg !3456
  %call106 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond94, i32 %call105), !dbg !3456
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call106, i32 0, i32 6, !dbg !3456
  %56 = load %struct._deps_list*, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !3456
  call void @move_dep_link(%struct._dep_link* %forw, %struct._deps_list* %49, %struct._deps_list* %56), !dbg !3457
  ret void, !dbg !3458
}

; Function Attrs: noinline nounwind uwtable
define internal void @move_dep_link(%struct._dep_link* %link, %struct._deps_list* %from, %struct._deps_list* %to) #0 !dbg !3459 {
entry:
  %link.addr = alloca %struct._dep_link*, align 8
  %from.addr = alloca %struct._deps_list*, align 8
  %to.addr = alloca %struct._deps_list*, align 8
  store %struct._dep_link* %link, %struct._dep_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_link** %link.addr, metadata !3462, metadata !DIExpression()), !dbg !3463
  store %struct._deps_list* %from, %struct._deps_list** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list** %from.addr, metadata !3464, metadata !DIExpression()), !dbg !3465
  store %struct._deps_list* %to, %struct._deps_list** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list** %to.addr, metadata !3466, metadata !DIExpression()), !dbg !3467
  %0 = load %struct._dep_link*, %struct._dep_link** %link.addr, align 8, !dbg !3468
  %1 = load %struct._deps_list*, %struct._deps_list** %from.addr, align 8, !dbg !3469
  call void @remove_from_deps_list(%struct._dep_link* %0, %struct._deps_list* %1), !dbg !3470
  %2 = load %struct._dep_link*, %struct._dep_link** %link.addr, align 8, !dbg !3471
  %3 = load %struct._deps_list*, %struct._deps_list** %to.addr, align 8, !dbg !3472
  call void @add_to_deps_list(%struct._dep_link* %2, %struct._deps_list* %3), !dbg !3473
  ret void, !dbg !3474
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_copy_back_deps(%struct.rtx_def* %to, %struct.rtx_def* %from, i8 zeroext %resolved_p) #0 !dbg !3475 {
entry:
  %to.addr = alloca %struct.rtx_def*, align 8
  %from.addr = alloca %struct.rtx_def*, align 8
  %resolved_p.addr = alloca i8, align 1
  %list_type = alloca i32, align 4
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %_new_dep = alloca %struct._dep, align 8
  %new_dep = alloca %struct._dep*, align 8
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !3478, metadata !DIExpression()), !dbg !3479
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !3480, metadata !DIExpression()), !dbg !3481
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !3482, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.declare(metadata i32* %list_type, metadata !3484, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !3486, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !3488, metadata !DIExpression()), !dbg !3489
  %0 = load i8, i8* %resolved_p.addr, align 1, !dbg !3490
  %conv = zext i8 %0 to i32, !dbg !3490
  %tobool = icmp ne i32 %conv, 0, !dbg !3490
  %1 = zext i1 %tobool to i64, !dbg !3490
  %cond = select i1 %tobool, i32 8, i32 3, !dbg !3490
  store i32 %cond, i32* %list_type, align 4, !dbg !3491
  %2 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !3492
  %3 = load i32, i32* %list_type, align 4, !dbg !3492
  call void @sd_iterator_start(%struct._sd_iterator* sret %tmp, %struct.rtx_def* %2, i32 %3), !dbg !3492
  %4 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3492
  %5 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !3492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false), !dbg !3492
  br label %for.cond, !dbg !3492

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %sd_it, %struct._dep** %dep), !dbg !3494
  %tobool1 = icmp ne i8 %call, 0, !dbg !3492
  br i1 %tobool1, label %for.body, label %for.end, !dbg !3492

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._dep* %_new_dep, metadata !3496, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.declare(metadata %struct._dep** %new_dep, metadata !3499, metadata !DIExpression()), !dbg !3500
  store %struct._dep* %_new_dep, %struct._dep** %new_dep, align 8, !dbg !3500
  %6 = load %struct._dep*, %struct._dep** %new_dep, align 8, !dbg !3501
  %7 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3502
  call void @copy_dep(%struct._dep* %6, %struct._dep* %7), !dbg !3503
  %8 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !3504
  %9 = load %struct._dep*, %struct._dep** %new_dep, align 8, !dbg !3505
  %con = getelementptr inbounds %struct._dep, %struct._dep* %9, i32 0, i32 1, !dbg !3505
  store %struct.rtx_def* %8, %struct.rtx_def** %con, align 8, !dbg !3506
  %10 = load %struct._dep*, %struct._dep** %new_dep, align 8, !dbg !3507
  %11 = load i8, i8* %resolved_p.addr, align 1, !dbg !3508
  call void @sd_add_dep(%struct._dep* %10, i8 zeroext %11), !dbg !3509
  br label %for.inc, !dbg !3510

for.inc:                                          ; preds = %for.body
  call void @sd_iterator_next(%struct._sd_iterator* %sd_it), !dbg !3494
  br label %for.cond, !dbg !3494, !llvm.loop !3511

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3513
}

; Function Attrs: noinline nounwind uwtable
define internal void @sd_iterator_start(%struct._sd_iterator* noalias sret %agg.result, %struct.rtx_def* %insn, i32 %types) #0 !dbg !2164 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %types.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3514, metadata !DIExpression()), !dbg !3515
  store i32 %types, i32* %types.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %types.addr, metadata !3516, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %agg.result, metadata !3518, metadata !DIExpression()), !dbg !3519
  %0 = load i32, i32* %types.addr, align 4, !dbg !3520
  %types1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i32 0, i32 0, !dbg !3521
  store i32 %0, i32* %types1, align 8, !dbg !3522
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3523
  %insn2 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i32 0, i32 1, !dbg !3524
  store %struct.rtx_def* %1, %struct.rtx_def** %insn2, align 8, !dbg !3525
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i32 0, i32 2, !dbg !3526
  store %struct._dep_link** @sd_iterator_start.null_link, %struct._dep_link*** %linkp, align 8, !dbg !3527
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %agg.result, i32 0, i32 3, !dbg !3528
  store i8 0, i8* %resolved_p, align 8, !dbg !3529
  ret void, !dbg !3530
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %it_ptr, %struct._dep** %dep_ptr) #0 !dbg !3531 {
entry:
  %retval = alloca i8, align 1
  %it_ptr.addr = alloca %struct._sd_iterator*, align 8
  %dep_ptr.addr = alloca %struct._dep**, align 8
  %link = alloca %struct._dep_link*, align 8
  %types = alloca i32, align 4
  %list = alloca %struct._deps_list*, align 8
  store %struct._sd_iterator* %it_ptr, %struct._sd_iterator** %it_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._sd_iterator** %it_ptr.addr, metadata !3535, metadata !DIExpression()), !dbg !3536
  store %struct._dep** %dep_ptr, %struct._dep*** %dep_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep*** %dep_ptr.addr, metadata !3537, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.declare(metadata %struct._dep_link** %link, metadata !3539, metadata !DIExpression()), !dbg !3540
  %0 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3541
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %0, i32 0, i32 2, !dbg !3542
  %1 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3542
  %2 = load %struct._dep_link*, %struct._dep_link** %1, align 8, !dbg !3543
  store %struct._dep_link* %2, %struct._dep_link** %link, align 8, !dbg !3540
  %3 = load %struct._dep_link*, %struct._dep_link** %link, align 8, !dbg !3544
  %cmp = icmp ne %struct._dep_link* %3, null, !dbg !3546
  br i1 %cmp, label %if.then, label %if.else, !dbg !3547

if.then:                                          ; preds = %entry
  %4 = load %struct._dep_link*, %struct._dep_link** %link, align 8, !dbg !3548
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %4, i32 0, i32 0, !dbg !3548
  %5 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3548
  %dep = getelementptr inbounds %struct._dep_node, %struct._dep_node* %5, i32 0, i32 1, !dbg !3548
  %6 = load %struct._dep**, %struct._dep*** %dep_ptr.addr, align 8, !dbg !3550
  store %struct._dep* %dep, %struct._dep** %6, align 8, !dbg !3551
  store i8 1, i8* %retval, align 1, !dbg !3552
  br label %return, !dbg !3552

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %types, metadata !3553, metadata !DIExpression()), !dbg !3555
  %7 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3556
  %types1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %7, i32 0, i32 0, !dbg !3557
  %8 = load i32, i32* %types1, align 8, !dbg !3557
  store i32 %8, i32* %types, align 4, !dbg !3555
  %9 = load i32, i32* %types, align 4, !dbg !3558
  %cmp2 = icmp ne i32 %9, 0, !dbg !3560
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !3561

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct._deps_list** %list, metadata !3562, metadata !DIExpression()), !dbg !3564
  %10 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3565
  %insn = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %10, i32 0, i32 1, !dbg !3566
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3566
  %12 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3567
  %types4 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %12, i32 0, i32 0, !dbg !3568
  %13 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3569
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %13, i32 0, i32 3, !dbg !3570
  call void @sd_next_list(%struct.rtx_def* %11, i32* %types4, %struct._deps_list** %list, i8* %resolved_p), !dbg !3571
  %14 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !3572
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %14, i32 0, i32 0, !dbg !3572
  %15 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3573
  %linkp5 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %15, i32 0, i32 2, !dbg !3574
  store %struct._dep_link** %first, %struct._dep_link*** %linkp5, align 8, !dbg !3575
  %16 = load %struct._deps_list*, %struct._deps_list** %list, align 8, !dbg !3576
  %tobool = icmp ne %struct._deps_list* %16, null, !dbg !3576
  br i1 %tobool, label %if.then6, label %if.end, !dbg !3578

if.then6:                                         ; preds = %if.then3
  %17 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3579
  %18 = load %struct._dep**, %struct._dep*** %dep_ptr.addr, align 8, !dbg !3580
  %call = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %17, %struct._dep** %18), !dbg !3581
  store i8 %call, i8* %retval, align 1, !dbg !3582
  br label %return, !dbg !3582

if.end:                                           ; preds = %if.then3
  br label %if.end7, !dbg !3583

if.end7:                                          ; preds = %if.end, %if.else
  %19 = load %struct._dep**, %struct._dep*** %dep_ptr.addr, align 8, !dbg !3584
  store %struct._dep* null, %struct._dep** %19, align 8, !dbg !3585
  store i8 0, i8* %retval, align 1, !dbg !3586
  br label %return, !dbg !3586

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %20 = load i8, i8* %retval, align 1, !dbg !3587
  ret i8 %20, !dbg !3587
}

; Function Attrs: noinline nounwind uwtable
define internal void @sd_iterator_next(%struct._sd_iterator* %it_ptr) #0 !dbg !3588 {
entry:
  %it_ptr.addr = alloca %struct._sd_iterator*, align 8
  store %struct._sd_iterator* %it_ptr, %struct._sd_iterator** %it_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._sd_iterator** %it_ptr.addr, metadata !3591, metadata !DIExpression()), !dbg !3592
  %0 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3593
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %0, i32 0, i32 2, !dbg !3593
  %1 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3593
  %2 = load %struct._dep_link*, %struct._dep_link** %1, align 8, !dbg !3593
  %next = getelementptr inbounds %struct._dep_link, %struct._dep_link* %2, i32 0, i32 1, !dbg !3593
  %3 = load %struct._sd_iterator*, %struct._sd_iterator** %it_ptr.addr, align 8, !dbg !3594
  %linkp1 = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %3, i32 0, i32 2, !dbg !3595
  store %struct._dep_link** %next, %struct._dep_link*** %linkp1, align 8, !dbg !3596
  ret void, !dbg !3597
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_delete_dep(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it) #0 !dbg !3598 {
entry:
  %n = alloca %struct._dep_node*, align 8
  %dep = alloca %struct._dep*, align 8
  %pro = alloca %struct.rtx_def*, align 8
  %con = alloca %struct.rtx_def*, align 8
  %con_back_deps = alloca %struct._deps_list*, align 8
  %pro_forw_deps = alloca %struct._deps_list*, align 8
  %elem_luid = alloca i32, align 4
  %insn_luid = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !3599, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.declare(metadata %struct._dep_node** %n, metadata !3601, metadata !DIExpression()), !dbg !3602
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i32 0, i32 2, !dbg !3603
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !3603
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !3603
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i32 0, i32 0, !dbg !3603
  %2 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !3603
  store %struct._dep_node* %2, %struct._dep_node** %n, align 8, !dbg !3602
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !3604, metadata !DIExpression()), !dbg !3605
  %3 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3606
  %dep1 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %3, i32 0, i32 1, !dbg !3606
  store %struct._dep* %dep1, %struct._dep** %dep, align 8, !dbg !3605
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pro, metadata !3607, metadata !DIExpression()), !dbg !3608
  %4 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3609
  %pro2 = getelementptr inbounds %struct._dep, %struct._dep* %4, i32 0, i32 0, !dbg !3609
  %5 = load %struct.rtx_def*, %struct.rtx_def** %pro2, align 8, !dbg !3609
  store %struct.rtx_def* %5, %struct.rtx_def** %pro, align 8, !dbg !3608
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %con, metadata !3610, metadata !DIExpression()), !dbg !3611
  %6 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3612
  %con3 = getelementptr inbounds %struct._dep, %struct._dep* %6, i32 0, i32 1, !dbg !3612
  %7 = load %struct.rtx_def*, %struct.rtx_def** %con3, align 8, !dbg !3612
  store %struct.rtx_def* %7, %struct.rtx_def** %con, align 8, !dbg !3611
  call void @llvm.dbg.declare(metadata %struct._deps_list** %con_back_deps, metadata !3613, metadata !DIExpression()), !dbg !3614
  call void @llvm.dbg.declare(metadata %struct._deps_list** %pro_forw_deps, metadata !3615, metadata !DIExpression()), !dbg !3616
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3617
  %cmp = icmp ne %struct.bitmap_head_def* %8, null, !dbg !3619
  br i1 %cmp, label %if.then, label %if.end28, !dbg !3620

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %elem_luid, metadata !3621, metadata !DIExpression()), !dbg !3623
  %9 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3624
  %tobool = icmp ne %struct.VEC_int_heap* %9, null, !dbg !3624
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3624

cond.true:                                        ; preds = %if.then
  %10 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3624
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %10, i32 0, i32 0, !dbg !3624
  br label %cond.end, !dbg !3624

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3624

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3624
  %11 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !3624
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !3624
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3624
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3624
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3624
  %12 = load i32, i32* %rt_int, align 8, !dbg !3624
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond, i32 %12), !dbg !3624
  store i32 %call, i32* %elem_luid, align 4, !dbg !3623
  call void @llvm.dbg.declare(metadata i32* %insn_luid, metadata !3625, metadata !DIExpression()), !dbg !3626
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3627
  %tobool4 = icmp ne %struct.VEC_int_heap* %13, null, !dbg !3627
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !3627

cond.true5:                                       ; preds = %cond.end
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3627
  %base6 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i32 0, i32 0, !dbg !3627
  br label %cond.end8, !dbg !3627

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8, !dbg !3627

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi %struct.VEC_int_base* [ %base6, %cond.true5 ], [ null, %cond.false7 ], !dbg !3627
  %15 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !3627
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !3627
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !3627
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !3627
  %rt_int13 = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !3627
  %16 = load i32, i32* %rt_int13, align 8, !dbg !3627
  %call14 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond9, i32 %16), !dbg !3627
  store i32 %call14, i32* %insn_luid, align 4, !dbg !3626
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !3628
  %18 = load i32, i32* %insn_luid, align 4, !dbg !3629
  %idxprom = sext i32 %18 to i64, !dbg !3628
  %arrayidx15 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %17, i64 %idxprom, !dbg !3628
  %19 = load i32, i32* %elem_luid, align 4, !dbg !3630
  %call16 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx15, i32 %19), !dbg !3631
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !3632
  %21 = load i32, i32* %insn_luid, align 4, !dbg !3633
  %idxprom17 = sext i32 %21 to i64, !dbg !3632
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %20, i64 %idxprom17, !dbg !3632
  %22 = load i32, i32* %elem_luid, align 4, !dbg !3634
  %call19 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx18, i32 %22), !dbg !3635
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !3636
  %24 = load i32, i32* %insn_luid, align 4, !dbg !3637
  %idxprom20 = sext i32 %24 to i64, !dbg !3636
  %arrayidx21 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %23, i64 %idxprom20, !dbg !3636
  %25 = load i32, i32* %elem_luid, align 4, !dbg !3638
  %call22 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx21, i32 %25), !dbg !3639
  %26 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !3640
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %26, i32 0, i32 17, !dbg !3642
  %27 = load i32, i32* %flags, align 8, !dbg !3642
  %and = and i32 %27, 2, !dbg !3643
  %tobool23 = icmp ne i32 %and, 0, !dbg !3643
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !3644

if.then24:                                        ; preds = %cond.end8
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !3645
  %29 = load i32, i32* %insn_luid, align 4, !dbg !3646
  %idxprom25 = sext i32 %29 to i64, !dbg !3645
  %arrayidx26 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %28, i64 %idxprom25, !dbg !3645
  %30 = load i32, i32* %elem_luid, align 4, !dbg !3647
  %call27 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx26, i32 %30), !dbg !3648
  br label %if.end, !dbg !3648

if.end:                                           ; preds = %if.then24, %cond.end8
  br label %if.end28, !dbg !3649

if.end28:                                         ; preds = %if.end, %entry
  %31 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3650
  %resolved_p = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i32 0, i32 3, !dbg !3651
  %32 = load i8, i8* %resolved_p, align 8, !dbg !3651
  call void @get_back_and_forw_lists(%struct._dep* %31, i8 zeroext %32, %struct._deps_list** %con_back_deps, %struct._deps_list** %pro_forw_deps), !dbg !3652
  %33 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3653
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %33, i32 0, i32 0, !dbg !3653
  %34 = load %struct._deps_list*, %struct._deps_list** %con_back_deps, align 8, !dbg !3654
  call void @remove_from_deps_list(%struct._dep_link* %back, %struct._deps_list* %34), !dbg !3655
  %35 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3656
  %forw = getelementptr inbounds %struct._dep_node, %struct._dep_node* %35, i32 0, i32 2, !dbg !3656
  %36 = load %struct._deps_list*, %struct._deps_list** %pro_forw_deps, align 8, !dbg !3657
  call void @remove_from_deps_list(%struct._dep_link* %forw, %struct._deps_list* %36), !dbg !3658
  %37 = load %struct._dep_node*, %struct._dep_node** %n, align 8, !dbg !3659
  call void @delete_dep_node(%struct._dep_node* %37), !dbg !3660
  ret void, !dbg !3661
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @remove_from_deps_list(%struct._dep_link* %link, %struct._deps_list* %list) #0 !dbg !3662 {
entry:
  %link.addr = alloca %struct._dep_link*, align 8
  %list.addr = alloca %struct._deps_list*, align 8
  store %struct._dep_link* %link, %struct._dep_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_link** %link.addr, metadata !3663, metadata !DIExpression()), !dbg !3664
  store %struct._deps_list* %list, %struct._deps_list** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list** %list.addr, metadata !3665, metadata !DIExpression()), !dbg !3666
  %0 = load %struct._dep_link*, %struct._dep_link** %link.addr, align 8, !dbg !3667
  call void @detach_dep_link(%struct._dep_link* %0), !dbg !3668
  %1 = load %struct._dep_link*, %struct._dep_link** %link.addr, align 8, !dbg !3669
  %call = call zeroext i8 @depl_on_debug_p(%struct._dep_link* %1), !dbg !3671
  %tobool = icmp ne i8 %call, 0, !dbg !3671
  br i1 %tobool, label %if.end, label %if.then, !dbg !3672

if.then:                                          ; preds = %entry
  %2 = load %struct._deps_list*, %struct._deps_list** %list.addr, align 8, !dbg !3673
  %n_links = getelementptr inbounds %struct._deps_list, %struct._deps_list* %2, i32 0, i32 1, !dbg !3673
  %3 = load i32, i32* %n_links, align 8, !dbg !3674
  %dec = add nsw i32 %3, -1, !dbg !3674
  store i32 %dec, i32* %n_links, align 8, !dbg !3674
  br label %if.end, !dbg !3674

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3675
}

; Function Attrs: noinline nounwind uwtable
define internal void @delete_dep_node(%struct._dep_node* %n) #0 !dbg !3676 {
entry:
  %n.addr = alloca %struct._dep_node*, align 8
  store %struct._dep_node* %n, %struct._dep_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_node** %n.addr, metadata !3679, metadata !DIExpression()), !dbg !3680
  %0 = load %struct._dep_node*, %struct._dep_node** %n.addr, align 8, !dbg !3681
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %0, i32 0, i32 0, !dbg !3681
  %call = call zeroext i8 @dep_link_is_detached_p(%struct._dep_link* %back), !dbg !3681
  %conv = zext i8 %call to i32, !dbg !3681
  %tobool = icmp ne i32 %conv, 0, !dbg !3681
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !3681

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._dep_node*, %struct._dep_node** %n.addr, align 8, !dbg !3681
  %forw = getelementptr inbounds %struct._dep_node, %struct._dep_node* %1, i32 0, i32 2, !dbg !3681
  %call1 = call zeroext i8 @dep_link_is_detached_p(%struct._dep_link* %forw), !dbg !3681
  %conv2 = zext i8 %call1 to i32, !dbg !3681
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !3681
  br i1 %tobool3, label %cond.false, label %cond.true, !dbg !3681

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 339, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3681
  br label %cond.end, !dbg !3681

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !3681

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3681
  %2 = load i32, i32* @dn_pool_diff, align 4, !dbg !3682
  %dec = add nsw i32 %2, -1, !dbg !3682
  store i32 %dec, i32* @dn_pool_diff, align 4, !dbg !3682
  %3 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dn_pool, align 8, !dbg !3683
  %4 = load %struct._dep_node*, %struct._dep_node** %n.addr, align 8, !dbg !3684
  %5 = bitcast %struct._dep_node* %4 to i8*, !dbg !3684
  call void @pool_free(%struct.alloc_pool_def* %3, i8* %5), !dbg !3685
  ret void, !dbg !3686
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sd_debug_lists(%struct.rtx_def* %insn, i32 %types) #0 !dbg !3687 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %types.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3690, metadata !DIExpression()), !dbg !3691
  store i32 %types, i32* %types.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %types.addr, metadata !3692, metadata !DIExpression()), !dbg !3693
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3694
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3695
  %2 = load i32, i32* %types.addr, align 4, !dbg !3696
  call void @dump_lists(%struct._IO_FILE* %0, %struct.rtx_def* %1, i32 %2, i32 1), !dbg !3697
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3698
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !3699
  ret void, !dbg !3700
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_lists(%struct._IO_FILE* %dump, %struct.rtx_def* %insn, i32 %types, i32 %flags) #0 !dbg !3701 {
entry:
  %dump.addr = alloca %struct._IO_FILE*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %types.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %all = alloca i32, align 4
  %tmp = alloca %struct._sd_iterator, align 8
  store %struct._IO_FILE* %dump, %struct._IO_FILE** %dump.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %dump.addr, metadata !3704, metadata !DIExpression()), !dbg !3705
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3706, metadata !DIExpression()), !dbg !3707
  store i32 %types, i32* %types.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %types.addr, metadata !3708, metadata !DIExpression()), !dbg !3709
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !3710, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !3712, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.declare(metadata i32* %all, metadata !3716, metadata !DIExpression()), !dbg !3717
  %0 = load i32, i32* %flags.addr, align 4, !dbg !3718
  %and = and i32 %0, 1, !dbg !3719
  store i32 %and, i32* %all, align 4, !dbg !3720
  %1 = load i32, i32* %all, align 4, !dbg !3721
  %tobool = icmp ne i32 %1, 0, !dbg !3721
  br i1 %tobool, label %if.then, label %if.end, !dbg !3723

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %flags.addr, align 4, !dbg !3724
  %or = or i32 %2, 6, !dbg !3724
  store i32 %or, i32* %flags.addr, align 4, !dbg !3724
  br label %if.end, !dbg !3725

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !3726
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)), !dbg !3727
  %4 = load i32, i32* %flags.addr, align 4, !dbg !3728
  %and1 = and i32 %4, 2, !dbg !3730
  %tobool2 = icmp ne i32 %and1, 0, !dbg !3730
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !3731

if.then3:                                         ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !3732
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3733
  %7 = load i32, i32* %types.addr, align 4, !dbg !3734
  %call4 = call i32 @sd_lists_size(%struct.rtx_def* %6, i32 %7), !dbg !3735
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %call4), !dbg !3736
  br label %if.end6, !dbg !3736

if.end6:                                          ; preds = %if.then3, %if.end
  %8 = load i32, i32* %flags.addr, align 4, !dbg !3737
  %and7 = and i32 %8, 4, !dbg !3739
  %tobool8 = icmp ne i32 %and7, 0, !dbg !3739
  br i1 %tobool8, label %if.then9, label %if.end14, !dbg !3740

if.then9:                                         ; preds = %if.end6
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3741
  %10 = load i32, i32* %types.addr, align 4, !dbg !3741
  call void @sd_iterator_start(%struct._sd_iterator* sret %tmp, %struct.rtx_def* %9, i32 %10), !dbg !3741
  %11 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !3741
  %12 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !3741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false), !dbg !3741
  br label %for.cond, !dbg !3741

for.cond:                                         ; preds = %for.inc, %if.then9
  %call10 = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %sd_it, %struct._dep** %dep), !dbg !3744
  %tobool11 = icmp ne i8 %call10, 0, !dbg !3741
  br i1 %tobool11, label %for.body, label %for.end, !dbg !3741

for.body:                                         ; preds = %for.cond
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !3746
  %14 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !3748
  %15 = load i32, i32* @dump_dep_flags, align 4, !dbg !3749
  %16 = load i32, i32* %all, align 4, !dbg !3750
  %or12 = or i32 %15, %16, !dbg !3751
  call void @dump_dep(%struct._IO_FILE* %13, %struct._dep* %14, i32 %or12), !dbg !3752
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %dump.addr, align 8, !dbg !3753
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)), !dbg !3754
  br label %for.inc, !dbg !3755

for.inc:                                          ; preds = %for.body
  call void @sd_iterator_next(%struct._sd_iterator* %sd_it), !dbg !3744
  br label %for.cond, !dbg !3744, !llvm.loop !3756

for.end:                                          ; preds = %for.cond
  br label %if.end14, !dbg !3758

if.end14:                                         ; preds = %for.end, %if.end6
  ret void, !dbg !3759
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @haifa_note_reg_set(i32 %regno) #0 !dbg !3760 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !3761, metadata !DIExpression()), !dbg !3762
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !3763
  %1 = load i32, i32* %regno.addr, align 4, !dbg !3763
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1), !dbg !3763
  ret void, !dbg !3764
}

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @haifa_note_reg_clobber(i32 %regno) #0 !dbg !3765 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !3766, metadata !DIExpression()), !dbg !3767
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !3768
  %1 = load i32, i32* %regno.addr, align 4, !dbg !3768
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1), !dbg !3768
  ret void, !dbg !3769
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @haifa_note_reg_use(i32 %regno) #0 !dbg !3770 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !3771, metadata !DIExpression()), !dbg !3772
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !3773
  %1 = load i32, i32* %regno.addr, align 4, !dbg !3773
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %0, i32 %1), !dbg !3773
  ret void, !dbg !3774
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ds_to_dt(i32 %ds) #0 !dbg !3775 {
entry:
  %retval = alloca i32, align 4
  %ds.addr = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !3776, metadata !DIExpression()), !dbg !3777
  %0 = load i32, i32* %ds.addr, align 4, !dbg !3778
  %and = and i32 %0, 16777216, !dbg !3780
  %tobool = icmp ne i32 %and, 0, !dbg !3780
  br i1 %tobool, label %if.then, label %if.else, !dbg !3781

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3782
  br label %return, !dbg !3782

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %ds.addr, align 4, !dbg !3783
  %and1 = and i32 %1, 33554432, !dbg !3785
  %tobool2 = icmp ne i32 %and1, 0, !dbg !3785
  br i1 %tobool2, label %if.then3, label %if.else4, !dbg !3786

if.then3:                                         ; preds = %if.else
  store i32 11, i32* %retval, align 4, !dbg !3787
  br label %return, !dbg !3787

if.else4:                                         ; preds = %if.else
  %2 = load i32, i32* %ds.addr, align 4, !dbg !3788
  %and5 = and i32 %2, 67108864, !dbg !3788
  %tobool6 = icmp ne i32 %and5, 0, !dbg !3788
  br i1 %tobool6, label %cond.false, label %cond.true, !dbg !3788

cond.true:                                        ; preds = %if.else4
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1726, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3788
  br label %cond.end, !dbg !3788

cond.false:                                       ; preds = %if.else4
  br label %cond.end, !dbg !3788

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3788
  store i32 12, i32* %retval, align 4, !dbg !3790
  br label %return, !dbg !3790

return:                                           ; preds = %cond.end, %if.then3, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3791
  ret i32 %3, !dbg !3791
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @maybe_extend_reg_info_p() #0 !dbg !3792 {
entry:
  %new_reg_info_p_size = alloca i64, align 8
  %0 = load i32, i32* @max_regno, align 4, !dbg !3793
  %sub = sub i32 %0, 1, !dbg !3795
  %conv = zext i32 %sub to i64, !dbg !3796
  %1 = load i64, i64* @reg_info_p_size, align 8, !dbg !3797
  %cmp = icmp uge i64 %conv, %1, !dbg !3798
  br i1 %cmp, label %if.then, label %if.end, !dbg !3799

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %new_reg_info_p_size, metadata !3800, metadata !DIExpression()), !dbg !3802
  %2 = load i32, i32* @max_regno, align 4, !dbg !3803
  %add = add nsw i32 %2, 128, !dbg !3804
  %conv2 = sext i32 %add to i64, !dbg !3803
  store i64 %conv2, i64* %new_reg_info_p_size, align 8, !dbg !3802
  %3 = load i32, i32* @reload_completed, align 4, !dbg !3805
  %tobool = icmp ne i32 %3, 0, !dbg !3805
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !3805

land.lhs.true:                                    ; preds = %if.then
  %call = call zeroext i8 @sel_sched_p(), !dbg !3805
  %conv3 = zext i8 %call to i32, !dbg !3805
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !3805
  br i1 %tobool4, label %cond.false, label %cond.true, !dbg !3805

cond.true:                                        ; preds = %land.lhs.true, %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2095, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3805
  br label %cond.end, !dbg !3805

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !3805

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3805
  %4 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !3806
  %5 = bitcast %struct.reg_info_t* %4 to i8*, !dbg !3806
  %6 = load i64, i64* %new_reg_info_p_size, align 8, !dbg !3807
  %7 = load i64, i64* @reg_info_p_size, align 8, !dbg !3808
  %call5 = call i8* @xrecalloc(i8* %5, i64 %6, i64 %7, i64 28), !dbg !3809
  %8 = bitcast i8* %call5 to %struct.reg_info_t*, !dbg !3810
  store %struct.reg_info_t* %8, %struct.reg_info_t** @reg_info_p, align 8, !dbg !3811
  %9 = load i64, i64* %new_reg_info_p_size, align 8, !dbg !3812
  store i64 %9, i64* @reg_info_p_size, align 8, !dbg !3813
  br label %if.end, !dbg !3814

if.end:                                           ; preds = %cond.end, %entry
  ret void, !dbg !3815
}

declare dso_local i8* @xrecalloc(i8*, i64, i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @deps_analyze_insn(%struct.deps* %deps, %struct.rtx_def* %insn) #0 !dbg !3816 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !3842, metadata !DIExpression()), !dbg !3843
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3844, metadata !DIExpression()), !dbg !3845
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3846
  %start_insn = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i32 0, i32 1, !dbg !3848
  %1 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_insn, align 8, !dbg !3848
  %tobool = icmp ne void (%struct.rtx_def*)* %1, null, !dbg !3846
  br i1 %tobool, label %if.then, label %if.end, !dbg !3849

if.then:                                          ; preds = %entry
  %2 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !3850
  %start_insn1 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %2, i32 0, i32 1, !dbg !3851
  %3 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_insn1, align 8, !dbg !3851
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3852
  call void %3(%struct.rtx_def* %4), !dbg !3850
  br label %if.end, !dbg !3850

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3853
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !3853
  %bf.load = load i32, i32* %6, align 8, !dbg !3853
  %bf.clear = and i32 %bf.load, 65535, !dbg !3853
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3853
  br i1 %cmp, label %if.then9, label %lor.lhs.false, !dbg !3855

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3856
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !3856
  %bf.load2 = load i32, i32* %8, align 8, !dbg !3856
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !3856
  %cmp4 = icmp eq i32 %bf.clear3, 7, !dbg !3856
  br i1 %cmp4, label %if.then9, label %lor.lhs.false5, !dbg !3857

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3858
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !3858
  %bf.load6 = load i32, i32* %10, align 8, !dbg !3858
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !3858
  %cmp8 = icmp eq i32 %bf.clear7, 9, !dbg !3858
  br i1 %cmp8, label %if.then9, label %if.else31, !dbg !3859

if.then9:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  %11 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3860
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %11, i32 0, i32 18, !dbg !3863
  %bf.load10 = load i8, i8* %readonly, align 4, !dbg !3863
  %bf.clear11 = and i8 %bf.load10, 1, !dbg !3863
  %bf.cast = zext i8 %bf.clear11 to i32, !dbg !3863
  %tobool12 = icmp ne i32 %bf.cast, 0, !dbg !3860
  br i1 %tobool12, label %if.end29, label %land.lhs.true, !dbg !3864

land.lhs.true:                                    ; preds = %if.then9
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3865
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !3865
  %bf.load13 = load i32, i32* %13, align 8, !dbg !3865
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !3865
  %cmp15 = icmp eq i32 %bf.clear14, 9, !dbg !3865
  br i1 %cmp15, label %land.lhs.true16, label %if.end29, !dbg !3866

land.lhs.true16:                                  ; preds = %land.lhs.true
  %call = call zeroext i8 @sel_sched_p(), !dbg !3867
  %conv = zext i8 %call to i32, !dbg !3867
  %tobool17 = icmp ne i32 %conv, 0, !dbg !3867
  br i1 %tobool17, label %land.lhs.true18, label %if.then22, !dbg !3868

land.lhs.true18:                                  ; preds = %land.lhs.true16
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3869
  %call19 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %14), !dbg !3870
  %conv20 = zext i8 %call19 to i32, !dbg !3870
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !3870
  br i1 %tobool21, label %if.end29, label %if.then22, !dbg !3871

if.then22:                                        ; preds = %land.lhs.true18, %land.lhs.true16
  %15 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3872
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %15, i32 0, i32 6, !dbg !3875
  %16 = load i32, i32* %pending_flush_length, align 8, !dbg !3876
  %inc = add nsw i32 %16, 1, !dbg !3876
  store i32 %inc, i32* %pending_flush_length, align 8, !dbg !3876
  %17 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3877
  %arrayidx = getelementptr inbounds %struct.param_info, %struct.param_info* %17, i64 14, !dbg !3877
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx, i32 0, i32 1, !dbg !3877
  %18 = load i32, i32* %value, align 8, !dbg !3877
  %cmp23 = icmp sgt i32 %16, %18, !dbg !3878
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !3879

if.then25:                                        ; preds = %if.then22
  %19 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3880
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3881
  call void @flush_pending_lists(%struct.deps* %19, %struct.rtx_def* %20, i32 1, i32 1), !dbg !3882
  br label %if.end28, !dbg !3882

if.else:                                          ; preds = %if.then22
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3883
  %22 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3884
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %22, i32 0, i32 7, !dbg !3885
  %23 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !3885
  %call26 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %21, %struct.rtx_def* %23), !dbg !3886
  %24 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3887
  %last_pending_memory_flush27 = getelementptr inbounds %struct.deps, %struct.deps* %24, i32 0, i32 7, !dbg !3888
  store %struct.rtx_def* %call26, %struct.rtx_def** %last_pending_memory_flush27, align 8, !dbg !3889
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  br label %if.end29, !dbg !3890

if.end29:                                         ; preds = %if.end28, %land.lhs.true18, %land.lhs.true, %if.then9
  %25 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3891
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3892
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3892
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3892
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !3892
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !3892
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3892
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3893
  call void @sched_analyze_insn(%struct.deps* %25, %struct.rtx_def* %27, %struct.rtx_def* %28), !dbg !3894
  br label %if.end133, !dbg !3895

if.else31:                                        ; preds = %lor.lhs.false5
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3896
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !3896
  %bf.load32 = load i32, i32* %30, align 8, !dbg !3896
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !3896
  %cmp34 = icmp eq i32 %bf.clear33, 10, !dbg !3896
  br i1 %cmp34, label %if.then36, label %if.end132, !dbg !3898

if.then36:                                        ; preds = %if.else31
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3899, metadata !DIExpression()), !dbg !3901
  %31 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3902
  %tobool37 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %31, null, !dbg !3902
  br i1 %tobool37, label %cond.true, label %cond.false, !dbg !3902

cond.true:                                        ; preds = %if.then36
  %32 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !3902
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %32, i32 0, i32 0, !dbg !3902
  br label %cond.end, !dbg !3902

cond.false:                                       ; preds = %if.then36
  br label %cond.end, !dbg !3902

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3902
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3902
  %tobool38 = icmp ne %struct.VEC_int_heap* %33, null, !dbg !3902
  br i1 %tobool38, label %cond.true39, label %cond.false41, !dbg !3902

cond.true39:                                      ; preds = %cond.end
  %34 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !3902
  %base40 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %34, i32 0, i32 0, !dbg !3902
  br label %cond.end42, !dbg !3902

cond.false41:                                     ; preds = %cond.end
  br label %cond.end42, !dbg !3902

cond.end42:                                       ; preds = %cond.false41, %cond.true39
  %cond43 = phi %struct.VEC_int_base* [ %base40, %cond.true39 ], [ null, %cond.false41 ], !dbg !3902
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3902
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !3902
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !3902
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !3902
  %rt_int = bitcast %union.rtunion_def* %arrayidx46 to i32*, !dbg !3902
  %36 = load i32, i32* %rt_int, align 8, !dbg !3902
  %call47 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond43, i32 %36), !dbg !3902
  %call48 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %call47), !dbg !3902
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call48, i32 0, i32 7, !dbg !3902
  %bf.load49 = load i8, i8* %cant_move, align 8, !dbg !3903
  %bf.clear50 = and i8 %bf.load49, -2, !dbg !3903
  %bf.set = or i8 %bf.clear50, 1, !dbg !3903
  store i8 %bf.set, i8* %cant_move, align 8, !dbg !3903
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3904
  %call51 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %37, i32 30, %struct.rtx_def* null), !dbg !3906
  %tobool52 = icmp ne %struct.rtx_def* %call51, null, !dbg !3906
  br i1 %tobool52, label %if.then53, label %if.else54, !dbg !3907

if.then53:                                        ; preds = %cond.end42
  store i32 1, i32* @reg_pending_barrier, align 4, !dbg !3908
  br label %if.end95, !dbg !3910

if.else54:                                        ; preds = %cond.end42
  store i32 0, i32* %i, align 4, !dbg !3911
  br label %for.cond, !dbg !3914

for.cond:                                         ; preds = %for.inc, %if.else54
  %38 = load i32, i32* %i, align 4, !dbg !3915
  %cmp55 = icmp slt i32 %38, 53, !dbg !3917
  br i1 %cmp55, label %for.body, label %for.end, !dbg !3918

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4, !dbg !3919
  %idxprom = sext i32 %39 to i64, !dbg !3921
  %arrayidx57 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom, !dbg !3921
  %40 = load i8, i8* %arrayidx57, align 1, !dbg !3921
  %tobool58 = icmp ne i8 %40, 0, !dbg !3921
  br i1 %tobool58, label %if.then59, label %if.else61, !dbg !3922

if.then59:                                        ; preds = %for.body
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !3923
  %42 = load i32, i32* %i, align 4, !dbg !3923
  %call60 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %41, i32 %42), !dbg !3923
  %43 = load i32, i32* %i, align 4, !dbg !3925
  %sh_prom = zext i32 %43 to i64, !dbg !3925
  %shl = shl i64 1, %sh_prom, !dbg !3925
  %44 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !3925
  %or = or i64 %44, %shl, !dbg !3925
  store i64 %or, i64* @implicit_reg_pending_uses, align 8, !dbg !3925
  br label %if.end93, !dbg !3926

if.else61:                                        ; preds = %for.body
  %45 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !3927
  %46 = load i32, i32* %i, align 4, !dbg !3927
  %sh_prom62 = zext i32 %46 to i64, !dbg !3927
  %shl63 = shl i64 1, %sh_prom62, !dbg !3927
  %and = and i64 %45, %shl63, !dbg !3927
  %tobool64 = icmp ne i64 %and, 0, !dbg !3927
  br i1 %tobool64, label %if.then65, label %if.else67, !dbg !3929

if.then65:                                        ; preds = %if.else61
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !3930
  %48 = load i32, i32* %i, align 4, !dbg !3930
  %call66 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %47, i32 %48), !dbg !3930
  br label %if.end92, !dbg !3930

if.else67:                                        ; preds = %if.else61
  %49 = load i32, i32* %i, align 4, !dbg !3931
  %idxprom68 = sext i32 %49 to i64, !dbg !3933
  %arrayidx69 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom68, !dbg !3933
  %50 = load i8, i8* %arrayidx69, align 1, !dbg !3933
  %tobool70 = icmp ne i8 %50, 0, !dbg !3933
  br i1 %tobool70, label %if.then71, label %if.else75, !dbg !3934

if.then71:                                        ; preds = %if.else67
  %51 = load i32, i32* %i, align 4, !dbg !3935
  %sh_prom72 = zext i32 %51 to i64, !dbg !3935
  %shl73 = shl i64 1, %sh_prom72, !dbg !3935
  %52 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !3935
  %or74 = or i64 %52, %shl73, !dbg !3935
  store i64 %or74, i64* @implicit_reg_pending_uses, align 8, !dbg !3935
  br label %if.end91, !dbg !3935

if.else75:                                        ; preds = %if.else67
  %53 = load i32, i32* %i, align 4, !dbg !3936
  %cmp76 = icmp eq i32 %53, 20, !dbg !3938
  br i1 %cmp76, label %if.then86, label %lor.lhs.false78, !dbg !3939

lor.lhs.false78:                                  ; preds = %if.else75
  %54 = load i32, i32* %i, align 4, !dbg !3940
  %cmp79 = icmp eq i32 %54, 6, !dbg !3941
  br i1 %cmp79, label %land.lhs.true81, label %if.end90, !dbg !3942

land.lhs.true81:                                  ; preds = %lor.lhs.false78
  %55 = load i32, i32* @reload_completed, align 4, !dbg !3943
  %tobool82 = icmp ne i32 %55, 0, !dbg !3943
  br i1 %tobool82, label %lor.lhs.false83, label %if.then86, !dbg !3944

lor.lhs.false83:                                  ; preds = %land.lhs.true81
  %56 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !3945
  %conv84 = zext i8 %56 to i32, !dbg !3945
  %tobool85 = icmp ne i32 %conv84, 0, !dbg !3945
  br i1 %tobool85, label %if.then86, label %if.end90, !dbg !3946

if.then86:                                        ; preds = %lor.lhs.false83, %land.lhs.true81, %if.else75
  %57 = load i32, i32* %i, align 4, !dbg !3947
  %sh_prom87 = zext i32 %57 to i64, !dbg !3947
  %shl88 = shl i64 1, %sh_prom87, !dbg !3947
  %58 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !3947
  %or89 = or i64 %58, %shl88, !dbg !3947
  store i64 %or89, i64* @implicit_reg_pending_uses, align 8, !dbg !3947
  br label %if.end90, !dbg !3947

if.end90:                                         ; preds = %if.then86, %lor.lhs.false83, %lor.lhs.false78
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then71
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.then65
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then59
  br label %for.inc, !dbg !3948

for.inc:                                          ; preds = %if.end93
  %59 = load i32, i32* %i, align 4, !dbg !3949
  %inc94 = add nsw i32 %59, 1, !dbg !3949
  store i32 %inc94, i32* %i, align 4, !dbg !3949
  br label %for.cond, !dbg !3950, !llvm.loop !3951

for.end:                                          ; preds = %for.cond
  br label %if.end95

if.end95:                                         ; preds = %for.end, %if.then53
  %60 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3953
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3954
  %62 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3955
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %62, i32 0, i32 10, !dbg !3956
  call void @add_dependence_list_and_free(%struct.deps* %60, %struct.rtx_def* %61, %struct.rtx_def** %sched_before_next_call, i32 1, i32 12), !dbg !3957
  %63 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3958
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3959
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !3959
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !3959
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 5, !dbg !3959
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !3959
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !3959
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3960
  call void @sched_analyze_insn(%struct.deps* %63, %struct.rtx_def* %65, %struct.rtx_def* %66), !dbg !3961
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3962
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !3962
  %bf.load100 = load i32, i32* %68, align 8, !dbg !3962
  %bf.lshr = lshr i32 %bf.load100, 28, !dbg !3962
  %bf.clear101 = and i32 %bf.lshr, 1, !dbg !3962
  %tobool102 = icmp ne i32 %bf.clear101, 0, !dbg !3962
  br i1 %tobool102, label %cond.true103, label %cond.false104, !dbg !3962

cond.true103:                                     ; preds = %if.end95
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3310, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3962
  br label %cond.end105, !dbg !3962

cond.false104:                                    ; preds = %if.end95
  br label %cond.end105, !dbg !3962

cond.end105:                                      ; preds = %cond.false104, %cond.true103
  %cond106 = phi i32 [ 0, %cond.true103 ], [ 0, %cond.false104 ], !dbg !3962
  %69 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3963
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3964
  %71 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3965
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !3965
  %bf.load107 = load i32, i32* %72, align 8, !dbg !3965
  %bf.lshr108 = lshr i32 %bf.load107, 26, !dbg !3965
  %bf.clear109 = and i32 %bf.lshr108, 1, !dbg !3965
  %tobool110 = icmp ne i32 %bf.clear109, 0, !dbg !3965
  br i1 %tobool110, label %lor.end, label %lor.rhs, !dbg !3965

lor.rhs:                                          ; preds = %cond.end105
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3965
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !3965
  %bf.load111 = load i32, i32* %74, align 8, !dbg !3965
  %bf.lshr112 = lshr i32 %bf.load111, 31, !dbg !3965
  %tobool113 = icmp ne i32 %bf.lshr112, 0, !dbg !3965
  br label %lor.end, !dbg !3965

lor.end:                                          ; preds = %lor.rhs, %cond.end105
  %75 = phi i1 [ true, %cond.end105 ], [ %tobool113, %lor.rhs ]
  %lnot = xor i1 %75, true, !dbg !3966
  %lnot.ext = zext i1 %lnot to i32, !dbg !3966
  call void @flush_pending_lists(%struct.deps* %69, %struct.rtx_def* %70, i32 1, i32 %lnot.ext), !dbg !3967
  %76 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3968
  %readonly114 = getelementptr inbounds %struct.deps, %struct.deps* %76, i32 0, i32 18, !dbg !3970
  %bf.load115 = load i8, i8* %readonly114, align 4, !dbg !3970
  %bf.clear116 = and i8 %bf.load115, 1, !dbg !3970
  %bf.cast117 = zext i8 %bf.clear116 to i32, !dbg !3970
  %tobool118 = icmp ne i32 %bf.cast117, 0, !dbg !3968
  br i1 %tobool118, label %if.end131, label %if.then119, !dbg !3971

if.then119:                                       ; preds = %lor.end
  %77 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3972
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %77, i32 0, i32 8, !dbg !3974
  call void @free_INSN_LIST_list(%struct.rtx_def** %last_function_call), !dbg !3975
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3976
  %call120 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %78, %struct.rtx_def* null), !dbg !3977
  %79 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3978
  %last_function_call121 = getelementptr inbounds %struct.deps, %struct.deps* %79, i32 0, i32 8, !dbg !3979
  store %struct.rtx_def* %call120, %struct.rtx_def** %last_function_call121, align 8, !dbg !3980
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3981
  %call122 = call zeroext i8 @call_may_noreturn_p(%struct.rtx_def* %80), !dbg !3983
  %tobool123 = icmp ne i8 %call122, 0, !dbg !3983
  br i1 %tobool123, label %if.then124, label %if.end127, !dbg !3984

if.then124:                                       ; preds = %if.then119
  %81 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3985
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %81, i32 0, i32 9, !dbg !3987
  call void @free_INSN_LIST_list(%struct.rtx_def** %last_function_call_may_noreturn), !dbg !3988
  %82 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3989
  %call125 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %82, %struct.rtx_def* null), !dbg !3990
  %83 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3991
  %last_function_call_may_noreturn126 = getelementptr inbounds %struct.deps, %struct.deps* %83, i32 0, i32 9, !dbg !3992
  store %struct.rtx_def* %call125, %struct.rtx_def** %last_function_call_may_noreturn126, align 8, !dbg !3993
  br label %if.end127, !dbg !3994

if.end127:                                        ; preds = %if.then124, %if.then119
  %84 = load i32, i32* @reload_completed, align 4, !dbg !3995
  %tobool128 = icmp ne i32 %84, 0, !dbg !3995
  br i1 %tobool128, label %if.end130, label %if.then129, !dbg !3997

if.then129:                                       ; preds = %if.end127
  %85 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !3998
  %in_post_call_group_p = getelementptr inbounds %struct.deps, %struct.deps* %85, i32 0, i32 11, !dbg !3999
  store i32 1, i32* %in_post_call_group_p, align 8, !dbg !4000
  br label %if.end130, !dbg !3998

if.end130:                                        ; preds = %if.then129, %if.end127
  br label %if.end131, !dbg !4001

if.end131:                                        ; preds = %if.end130, %lor.end
  br label %if.end132, !dbg !4002

if.end132:                                        ; preds = %if.end131, %if.else31
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end29
  %86 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4003
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %86, i32 0, i32 12, !dbg !4005
  %bf.load134 = load i8, i8* %use_cselib, align 8, !dbg !4005
  %bf.clear135 = and i8 %bf.load134, 1, !dbg !4005
  %bf.cast136 = zext i8 %bf.clear135 to i32, !dbg !4005
  %tobool137 = icmp ne i32 %bf.cast136, 0, !dbg !4003
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !4006

if.then138:                                       ; preds = %if.end133
  %87 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4007
  call void @cselib_process_insn(%struct.rtx_def* %87), !dbg !4008
  br label %if.end139, !dbg !4008

if.end139:                                        ; preds = %if.then138, %if.end133
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4009
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !4009
  %bf.load140 = load i32, i32* %89, align 8, !dbg !4009
  %bf.clear141 = and i32 %bf.load140, 65535, !dbg !4009
  %cmp142 = icmp eq i32 %bf.clear141, 13, !dbg !4009
  br i1 %cmp142, label %if.then144, label %if.end162, !dbg !4011

if.then144:                                       ; preds = %if.end139
  %90 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4012
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1, !dbg !4012
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !4012
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 5, !dbg !4012
  %rt_int148 = bitcast %union.rtunion_def* %arrayidx147 to i32*, !dbg !4012
  %91 = load i32, i32* %rt_int148, align 8, !dbg !4012
  %cmp149 = icmp ne i32 %91, 7, !dbg !4012
  br i1 %cmp149, label %land.lhs.true151, label %cond.true158, !dbg !4012

land.lhs.true151:                                 ; preds = %if.then144
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4012
  %u152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !4012
  %fld153 = bitcast %union.u* %u152 to [1 x %union.rtunion_def]*, !dbg !4012
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i64 0, i64 5, !dbg !4012
  %rt_int155 = bitcast %union.rtunion_def* %arrayidx154 to i32*, !dbg !4012
  %93 = load i32, i32* %rt_int155, align 8, !dbg !4012
  %cmp156 = icmp ne i32 %93, 8, !dbg !4012
  br i1 %cmp156, label %cond.false159, label %cond.true158, !dbg !4012

cond.true158:                                     ; preds = %land.lhs.true151, %if.then144
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4012
  br label %cond.end160, !dbg !4012

cond.false159:                                    ; preds = %land.lhs.true151
  br label %cond.end160, !dbg !4012

cond.end160:                                      ; preds = %cond.false159, %cond.true158
  %cond161 = phi i32 [ 0, %cond.true158 ], [ 0, %cond.false159 ], !dbg !4012
  br label %if.end162, !dbg !4012

if.end162:                                        ; preds = %cond.end160, %if.end139
  %94 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4013
  %finish_insn = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %94, i32 0, i32 2, !dbg !4015
  %95 = load void ()*, void ()** %finish_insn, align 8, !dbg !4015
  %tobool163 = icmp ne void ()* %95, null, !dbg !4013
  br i1 %tobool163, label %if.then164, label %if.end166, !dbg !4016

if.then164:                                       ; preds = %if.end162
  %96 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4017
  %finish_insn165 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %96, i32 0, i32 2, !dbg !4018
  %97 = load void ()*, void ()** %finish_insn165, align 8, !dbg !4018
  call void %97(), !dbg !4017
  br label %if.end166, !dbg !4017

if.end166:                                        ; preds = %if.then164, %if.end162
  %98 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4019
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !4019
  %bf.load167 = load i32, i32* %99, align 8, !dbg !4019
  %bf.clear168 = and i32 %bf.load167, 65535, !dbg !4019
  %cmp169 = icmp eq i32 %bf.clear168, 8, !dbg !4019
  br i1 %cmp169, label %land.lhs.true176, label %lor.lhs.false171, !dbg !4021

lor.lhs.false171:                                 ; preds = %if.end166
  %100 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4022
  %101 = bitcast %struct.rtx_def* %100 to i32*, !dbg !4022
  %bf.load172 = load i32, i32* %101, align 8, !dbg !4022
  %bf.clear173 = and i32 %bf.load172, 65535, !dbg !4022
  %cmp174 = icmp eq i32 %bf.clear173, 9, !dbg !4022
  br i1 %cmp174, label %land.lhs.true176, label %if.end185, !dbg !4023

land.lhs.true176:                                 ; preds = %lor.lhs.false171, %if.end166
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4024
  %103 = bitcast %struct.rtx_def* %102 to i32*, !dbg !4024
  %bf.load177 = load i32, i32* %103, align 8, !dbg !4024
  %bf.lshr178 = lshr i32 %bf.load177, 28, !dbg !4024
  %bf.clear179 = and i32 %bf.lshr178, 1, !dbg !4024
  %tobool180 = icmp ne i32 %bf.clear179, 0, !dbg !4024
  br i1 %tobool180, label %land.lhs.true181, label %if.end185, !dbg !4025

land.lhs.true181:                                 ; preds = %land.lhs.true176
  %call182 = call zeroext i8 @sel_sched_p(), !dbg !4026
  %tobool183 = icmp ne i8 %call182, 0, !dbg !4026
  br i1 %tobool183, label %if.end185, label %if.then184, !dbg !4027

if.then184:                                       ; preds = %land.lhs.true181
  %104 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4028
  call void @fixup_sched_groups(%struct.rtx_def* %104), !dbg !4029
  br label %if.end185, !dbg !4029

if.end185:                                        ; preds = %if.then184, %land.lhs.true181, %land.lhs.true176, %lor.lhs.false171
  ret void, !dbg !4030
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_pending_lists(%struct.deps* %deps, %struct.rtx_def* %insn, i32 %for_read, i32 %for_write) #0 !dbg !4031 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %for_read.addr = alloca i32, align 4
  %for_write.addr = alloca i32, align 4
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !4034, metadata !DIExpression()), !dbg !4035
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4036, metadata !DIExpression()), !dbg !4037
  store i32 %for_read, i32* %for_read.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %for_read.addr, metadata !4038, metadata !DIExpression()), !dbg !4039
  store i32 %for_write, i32* %for_write.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %for_write.addr, metadata !4040, metadata !DIExpression()), !dbg !4041
  %0 = load i32, i32* %for_write.addr, align 4, !dbg !4042
  %tobool = icmp ne i32 %0, 0, !dbg !4042
  br i1 %tobool, label %if.then, label %if.end3, !dbg !4044

if.then:                                          ; preds = %entry
  %1 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4045
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4047
  %3 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4048
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %3, i32 0, i32 0, !dbg !4049
  call void @add_dependence_list_and_free(%struct.deps* %1, %struct.rtx_def* %2, %struct.rtx_def** %pending_read_insns, i32 1, i32 12), !dbg !4050
  %4 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4051
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %4, i32 0, i32 18, !dbg !4053
  %bf.load = load i8, i8* %readonly, align 4, !dbg !4053
  %bf.clear = and i8 %bf.load, 1, !dbg !4053
  %bf.cast = zext i8 %bf.clear to i32, !dbg !4053
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !4051
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !4054

if.then2:                                         ; preds = %if.then
  %5 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4055
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %5, i32 0, i32 1, !dbg !4057
  call void @free_EXPR_LIST_list(%struct.rtx_def** %pending_read_mems), !dbg !4058
  %6 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4059
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %6, i32 0, i32 4, !dbg !4060
  store i32 0, i32* %pending_read_list_length, align 8, !dbg !4061
  br label %if.end, !dbg !4062

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !4063

if.end3:                                          ; preds = %if.end, %entry
  %7 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4064
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4065
  %9 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4066
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %9, i32 0, i32 2, !dbg !4067
  %10 = load i32, i32* %for_read.addr, align 4, !dbg !4068
  %tobool4 = icmp ne i32 %10, 0, !dbg !4068
  %11 = zext i1 %tobool4 to i64, !dbg !4068
  %cond = select i1 %tobool4, i32 12, i32 11, !dbg !4068
  call void @add_dependence_list_and_free(%struct.deps* %7, %struct.rtx_def* %8, %struct.rtx_def** %pending_write_insns, i32 1, i32 %cond), !dbg !4069
  %12 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4070
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4071
  %14 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4072
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %14, i32 0, i32 7, !dbg !4073
  %15 = load i32, i32* %for_read.addr, align 4, !dbg !4074
  %tobool5 = icmp ne i32 %15, 0, !dbg !4074
  %16 = zext i1 %tobool5 to i64, !dbg !4074
  %cond6 = select i1 %tobool5, i32 12, i32 11, !dbg !4074
  call void @add_dependence_list_and_free(%struct.deps* %12, %struct.rtx_def* %13, %struct.rtx_def** %last_pending_memory_flush, i32 1, i32 %cond6), !dbg !4075
  %17 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4076
  %readonly7 = getelementptr inbounds %struct.deps, %struct.deps* %17, i32 0, i32 18, !dbg !4078
  %bf.load8 = load i8, i8* %readonly7, align 4, !dbg !4078
  %bf.clear9 = and i8 %bf.load8, 1, !dbg !4078
  %bf.cast10 = zext i8 %bf.clear9 to i32, !dbg !4078
  %tobool11 = icmp ne i32 %bf.cast10, 0, !dbg !4076
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !4079

if.then12:                                        ; preds = %if.end3
  %18 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4080
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %18, i32 0, i32 3, !dbg !4082
  call void @free_EXPR_LIST_list(%struct.rtx_def** %pending_write_mems), !dbg !4083
  %19 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4084
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %19, i32 0, i32 5, !dbg !4085
  store i32 0, i32* %pending_write_list_length, align 4, !dbg !4086
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4087
  %call = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %20, %struct.rtx_def* null), !dbg !4088
  %21 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4089
  %last_pending_memory_flush13 = getelementptr inbounds %struct.deps, %struct.deps* %21, i32 0, i32 7, !dbg !4090
  store %struct.rtx_def* %call, %struct.rtx_def** %last_pending_memory_flush13, align 8, !dbg !4091
  %22 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4092
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %22, i32 0, i32 6, !dbg !4093
  store i32 1, i32* %pending_flush_length, align 8, !dbg !4094
  br label %if.end14, !dbg !4095

if.end14:                                         ; preds = %if.then12, %if.end3
  ret void, !dbg !4096
}

declare dso_local %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sched_analyze_insn(%struct.deps* %deps, %struct.rtx_def* %x, %struct.rtx_def* %insn) #0 !dbg !4097 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %link = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  %temp = alloca i64, align 8
  %sub = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %pending = alloca %struct.rtx_def*, align 8
  %pending_mem = alloca %struct.rtx_def*, align 8
  %tmp_uses = alloca %struct.bitmap_head_def, align 8
  %tmp_sets = alloca %struct.bitmap_head_def, align 8
  %reg_last = alloca %struct.deps_reg*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %u239 = alloca %struct.rtx_def*, align 8
  %reg_last283 = alloca %struct.deps_reg*, align 8
  %reg_last338 = alloca %struct.deps_reg*, align 8
  %reg_last366 = alloca %struct.deps_reg*, align 8
  %reg_last396 = alloca %struct.deps_reg*, align 8
  %reg_last420 = alloca %struct.deps_reg*, align 8
  %reg_last447 = alloca %struct.deps_reg*, align 8
  %reg_last501 = alloca %struct.deps_reg*, align 8
  %reg_last536 = alloca %struct.deps_reg*, align 8
  %reg_last599 = alloca %struct.deps_reg*, align 8
  %reg_last620 = alloca %struct.deps_reg*, align 8
  %reg_last656 = alloca %struct.deps_reg*, align 8
  %tmp = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %src_regno = alloca i32, align 4
  %dest_regno = alloca i32, align 4
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp887 = alloca %struct._sd_iterator, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !4100, metadata !DIExpression()), !dbg !4101
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4102, metadata !DIExpression()), !dbg !4103
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4104, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.declare(metadata i32* %code, metadata !4106, metadata !DIExpression()), !dbg !4107
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4108
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4108
  %bf.load = load i32, i32* %1, align 8, !dbg !4108
  %bf.clear = and i32 %bf.load, 65535, !dbg !4108
  store i32 %bf.clear, i32* %code, align 4, !dbg !4107
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !4109, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4111, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !4113, metadata !DIExpression()), !dbg !4122
  %2 = load i32, i32* @reload_completed, align 4, !dbg !4123
  %tobool = icmp ne i32 %2, 0, !dbg !4123
  br i1 %tobool, label %if.end, label %if.then, !dbg !4125

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %temp, metadata !4126, metadata !DIExpression()), !dbg !4128
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4129
  call void @extract_insn(%struct.rtx_def* %3), !dbg !4130
  call void @preprocess_constraints(), !dbg !4131
  call void @ira_implicitly_set_insn_hard_regs(i64* %temp), !dbg !4132
  %4 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !4133
  %neg = xor i64 %4, -1, !dbg !4133
  %5 = load i64, i64* %temp, align 8, !dbg !4133
  %and = and i64 %5, %neg, !dbg !4133
  store i64 %and, i64* %temp, align 8, !dbg !4133
  %6 = load i64, i64* %temp, align 8, !dbg !4134
  %7 = load i64, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4134
  %or = or i64 %7, %6, !dbg !4134
  store i64 %or, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4134
  br label %if.end, !dbg !4135

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4136
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !4136
  %bf.load1 = load i32, i32* %9, align 8, !dbg !4136
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4136
  %cmp = icmp eq i32 %bf.clear2, 8, !dbg !4136
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4137

land.rhs:                                         ; preds = %if.end
  %10 = load i32, i32* %code, align 4, !dbg !4138
  %cmp3 = icmp eq i32 %10, 23, !dbg !4139
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %11 = phi i1 [ false, %if.end ], [ %cmp3, %land.rhs ], !dbg !4140
  %land.ext = zext i1 %11 to i32, !dbg !4137
  %conv = trunc i32 %land.ext to i8, !dbg !4141
  store i8 %conv, i8* @can_start_lhs_rhs_p, align 1, !dbg !4142
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4143
  %call = call i32 @may_trap_p(%struct.rtx_def* %12), !dbg !4145
  %tobool4 = icmp ne i32 %call, 0, !dbg !4145
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4146

if.then5:                                         ; preds = %land.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4147
  %14 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4148
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %14, i32 0, i32 9, !dbg !4149
  %15 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call_may_noreturn, align 8, !dbg !4149
  call void @add_dependence_list(%struct.rtx_def* %13, %struct.rtx_def* %15, i32 1, i32 12), !dbg !4150
  br label %if.end6, !dbg !4150

if.end6:                                          ; preds = %if.then5, %land.end
  %16 = load i32, i32* %code, align 4, !dbg !4151
  %cmp7 = icmp eq i32 %16, 14, !dbg !4153
  br i1 %cmp7, label %if.then9, label %if.end16, !dbg !4154

if.then9:                                         ; preds = %if.end6
  %17 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4155
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4157
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !4157
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4157
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4157
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4157
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4157
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4158
  call void @sched_analyze_2(%struct.deps* %17, %struct.rtx_def* %19, %struct.rtx_def* %20), !dbg !4159
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4160
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !4160
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !4160
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 1, !dbg !4160
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !4160
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx13, align 8, !dbg !4160
  store %struct.rtx_def* %22, %struct.rtx_def** %x.addr, align 8, !dbg !4161
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4162
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !4162
  %bf.load14 = load i32, i32* %24, align 8, !dbg !4162
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !4162
  store i32 %bf.clear15, i32* %code, align 4, !dbg !4163
  br label %if.end16, !dbg !4164

if.end16:                                         ; preds = %if.then9, %if.end6
  %25 = load i32, i32* %code, align 4, !dbg !4165
  %cmp17 = icmp eq i32 %25, 23, !dbg !4167
  br i1 %cmp17, label %if.then21, label %lor.lhs.false, !dbg !4168

lor.lhs.false:                                    ; preds = %if.end16
  %26 = load i32, i32* %code, align 4, !dbg !4169
  %cmp19 = icmp eq i32 %26, 25, !dbg !4170
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !4171

if.then21:                                        ; preds = %lor.lhs.false, %if.end16
  %27 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4172
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4174
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4175
  call void @sched_analyze_1(%struct.deps* %27, %struct.rtx_def* %28, %struct.rtx_def* %29), !dbg !4176
  %30 = load i32, i32* %code, align 4, !dbg !4177
  %cmp22 = icmp eq i32 %30, 25, !dbg !4179
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !4180

if.then24:                                        ; preds = %if.then21
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4181
  %32 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4182
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %32, i32 0, i32 8, !dbg !4183
  %33 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call, align 8, !dbg !4183
  call void @add_dependence_list(%struct.rtx_def* %31, %struct.rtx_def* %33, i32 1, i32 11), !dbg !4184
  br label %if.end25, !dbg !4184

if.end25:                                         ; preds = %if.then24, %if.then21
  br label %if.end64, !dbg !4185

if.else:                                          ; preds = %lor.lhs.false
  %34 = load i32, i32* %code, align 4, !dbg !4186
  %cmp26 = icmp eq i32 %34, 15, !dbg !4188
  br i1 %cmp26, label %if.then28, label %if.else62, !dbg !4189

if.then28:                                        ; preds = %if.else
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4190
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !4190
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !4190
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !4190
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**, !dbg !4190
  %36 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4190
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %36, i32 0, i32 0, !dbg !4190
  %37 = load i32, i32* %num_elem, align 8, !dbg !4190
  store i32 %37, i32* %i, align 4, !dbg !4193
  br label %for.cond, !dbg !4194

for.cond:                                         ; preds = %if.end61, %if.then28
  %38 = load i32, i32* %i, align 4, !dbg !4195
  %dec = add i32 %38, -1, !dbg !4195
  store i32 %dec, i32* %i, align 4, !dbg !4195
  %tobool32 = icmp ne i32 %38, 0, !dbg !4197
  br i1 %tobool32, label %for.body, label %for.end, !dbg !4197

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %sub, metadata !4198, metadata !DIExpression()), !dbg !4200
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4201
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !4201
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !4201
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !4201
  %rt_rtvec36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtvec_def**, !dbg !4201
  %40 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec36, align 8, !dbg !4201
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %40, i32 0, i32 1, !dbg !4201
  %41 = load i32, i32* %i, align 4, !dbg !4201
  %idxprom = zext i32 %41 to i64, !dbg !4201
  %arrayidx37 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4201
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx37, align 8, !dbg !4201
  store %struct.rtx_def* %42, %struct.rtx_def** %sub, align 8, !dbg !4200
  %43 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4202
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !4202
  %bf.load38 = load i32, i32* %44, align 8, !dbg !4202
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !4202
  store i32 %bf.clear39, i32* %code, align 4, !dbg !4203
  %45 = load i32, i32* %code, align 4, !dbg !4204
  %cmp40 = icmp eq i32 %45, 14, !dbg !4206
  br i1 %cmp40, label %if.then42, label %if.end53, !dbg !4207

if.then42:                                        ; preds = %for.body
  %46 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4208
  %47 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4210
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !4210
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !4210
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !4210
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !4210
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !4210
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4211
  call void @sched_analyze_2(%struct.deps* %46, %struct.rtx_def* %48, %struct.rtx_def* %49), !dbg !4212
  %50 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4213
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !4213
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !4213
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 1, !dbg !4213
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !4213
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !4213
  store %struct.rtx_def* %51, %struct.rtx_def** %sub, align 8, !dbg !4214
  %52 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4215
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !4215
  %bf.load51 = load i32, i32* %53, align 8, !dbg !4215
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !4215
  store i32 %bf.clear52, i32* %code, align 4, !dbg !4216
  br label %if.end53, !dbg !4217

if.end53:                                         ; preds = %if.then42, %for.body
  %54 = load i32, i32* %code, align 4, !dbg !4218
  %cmp54 = icmp eq i32 %54, 23, !dbg !4220
  br i1 %cmp54, label %if.then59, label %lor.lhs.false56, !dbg !4221

lor.lhs.false56:                                  ; preds = %if.end53
  %55 = load i32, i32* %code, align 4, !dbg !4222
  %cmp57 = icmp eq i32 %55, 25, !dbg !4223
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !4224

if.then59:                                        ; preds = %lor.lhs.false56, %if.end53
  %56 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4225
  %57 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4226
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4227
  call void @sched_analyze_1(%struct.deps* %56, %struct.rtx_def* %57, %struct.rtx_def* %58), !dbg !4228
  br label %if.end61, !dbg !4228

if.else60:                                        ; preds = %lor.lhs.false56
  %59 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4229
  %60 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4230
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4231
  call void @sched_analyze_2(%struct.deps* %59, %struct.rtx_def* %60, %struct.rtx_def* %61), !dbg !4232
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.then59
  br label %for.cond, !dbg !4233, !llvm.loop !4234

for.end:                                          ; preds = %for.cond
  br label %if.end63, !dbg !4236

if.else62:                                        ; preds = %if.else
  %62 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4237
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4238
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4239
  call void @sched_analyze_2(%struct.deps* %62, %struct.rtx_def* %63, %struct.rtx_def* %64), !dbg !4240
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %for.end
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end25
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4241
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !4241
  %bf.load65 = load i32, i32* %66, align 8, !dbg !4241
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !4241
  %cmp67 = icmp eq i32 %bf.clear66, 10, !dbg !4241
  br i1 %cmp67, label %if.then69, label %if.end105, !dbg !4243

if.then69:                                        ; preds = %if.end64
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4244
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !4244
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !4244
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 8, !dbg !4244
  %rt_rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !4244
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73, align 8, !dbg !4244
  store %struct.rtx_def* %68, %struct.rtx_def** %link, align 8, !dbg !4247
  br label %for.cond74, !dbg !4248

for.cond74:                                       ; preds = %for.inc, %if.then69
  %69 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4249
  %tobool75 = icmp ne %struct.rtx_def* %69, null, !dbg !4251
  br i1 %tobool75, label %for.body76, label %for.end100, !dbg !4251

for.body76:                                       ; preds = %for.cond74
  %70 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4252
  %u77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !4252
  %fld78 = bitcast %union.u* %u77 to [1 x %union.rtunion_def]*, !dbg !4252
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i64 0, i64 0, !dbg !4252
  %rt_rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**, !dbg !4252
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx80, align 8, !dbg !4252
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !4252
  %bf.load81 = load i32, i32* %72, align 8, !dbg !4252
  %bf.clear82 = and i32 %bf.load81, 65535, !dbg !4252
  %cmp83 = icmp eq i32 %bf.clear82, 25, !dbg !4255
  br i1 %cmp83, label %if.then85, label %if.else90, !dbg !4256

if.then85:                                        ; preds = %for.body76
  %73 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4257
  %74 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4258
  %u86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !4258
  %fld87 = bitcast %union.u* %u86 to [1 x %union.rtunion_def]*, !dbg !4258
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i64 0, i64 0, !dbg !4258
  %rt_rtx89 = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**, !dbg !4258
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx89, align 8, !dbg !4258
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4259
  call void @sched_analyze_1(%struct.deps* %73, %struct.rtx_def* %75, %struct.rtx_def* %76), !dbg !4260
  br label %if.end95, !dbg !4260

if.else90:                                        ; preds = %for.body76
  %77 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4261
  %78 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4262
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !4262
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !4262
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 0, !dbg !4262
  %rt_rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**, !dbg !4262
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !4262
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4263
  call void @sched_analyze_2(%struct.deps* %77, %struct.rtx_def* %79, %struct.rtx_def* %80), !dbg !4264
  br label %if.end95

if.end95:                                         ; preds = %if.else90, %if.then85
  br label %for.inc, !dbg !4265

for.inc:                                          ; preds = %if.end95
  %81 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4266
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !4266
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !4266
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 1, !dbg !4266
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !4266
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !4266
  store %struct.rtx_def* %82, %struct.rtx_def** %link, align 8, !dbg !4267
  br label %for.cond74, !dbg !4268, !llvm.loop !4269

for.end100:                                       ; preds = %for.cond74
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4271
  %call101 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %83, i32 30, %struct.rtx_def* null), !dbg !4273
  %tobool102 = icmp ne %struct.rtx_def* %call101, null, !dbg !4273
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !4274

if.then103:                                       ; preds = %for.end100
  store i32 1, i32* @reg_pending_barrier, align 4, !dbg !4275
  br label %if.end104, !dbg !4276

if.end104:                                        ; preds = %if.then103, %for.end100
  br label %if.end105, !dbg !4277

if.end105:                                        ; preds = %if.end104, %if.end64
  %84 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4278
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !4278
  %bf.load106 = load i32, i32* %85, align 8, !dbg !4278
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !4278
  %cmp108 = icmp eq i32 %bf.clear107, 9, !dbg !4278
  br i1 %cmp108, label %if.then110, label %if.end206, !dbg !4280

if.then110:                                       ; preds = %if.end105
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !4281, metadata !DIExpression()), !dbg !4283
  %86 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4284
  %call111 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %86), !dbg !4285
  store %struct.rtx_def* %call111, %struct.rtx_def** %next, align 8, !dbg !4286
  br label %while.cond, !dbg !4287

while.cond:                                       ; preds = %while.body, %if.then110
  %87 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4288
  %tobool112 = icmp ne %struct.rtx_def* %87, null, !dbg !4288
  br i1 %tobool112, label %land.rhs113, label %land.end118, !dbg !4289

land.rhs113:                                      ; preds = %while.cond
  %88 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4290
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !4290
  %bf.load114 = load i32, i32* %89, align 8, !dbg !4290
  %bf.clear115 = and i32 %bf.load114, 65535, !dbg !4290
  %cmp116 = icmp eq i32 %bf.clear115, 7, !dbg !4290
  br label %land.end118

land.end118:                                      ; preds = %land.rhs113, %while.cond
  %90 = phi i1 [ false, %while.cond ], [ %cmp116, %land.rhs113 ], !dbg !4291
  br i1 %90, label %while.body, label %while.end, !dbg !4287

while.body:                                       ; preds = %land.end118
  %91 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4292
  %call120 = call %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def* %91), !dbg !4293
  store %struct.rtx_def* %call120, %struct.rtx_def** %next, align 8, !dbg !4294
  br label %while.cond, !dbg !4287, !llvm.loop !4295

while.end:                                        ; preds = %land.end118
  %92 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4297
  %tobool121 = icmp ne %struct.rtx_def* %92, null, !dbg !4297
  br i1 %tobool121, label %land.lhs.true, label %if.else127, !dbg !4299

land.lhs.true:                                    ; preds = %while.end
  %93 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4300
  %94 = bitcast %struct.rtx_def* %93 to i32*, !dbg !4300
  %bf.load122 = load i32, i32* %94, align 8, !dbg !4300
  %bf.clear123 = and i32 %bf.load122, 65535, !dbg !4300
  %cmp124 = icmp eq i32 %bf.clear123, 11, !dbg !4300
  br i1 %cmp124, label %if.then126, label %if.else127, !dbg !4301

if.then126:                                       ; preds = %land.lhs.true
  store i32 1, i32* @reg_pending_barrier, align 4, !dbg !4302
  br label %if.end205, !dbg !4303

if.else127:                                       ; preds = %land.lhs.true, %while.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pending, metadata !4304, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pending_mem, metadata !4307, metadata !DIExpression()), !dbg !4308
  %95 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4309
  %compute_jump_reg_dependencies = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %95, i32 0, i32 0, !dbg !4311
  %96 = load void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)** %compute_jump_reg_dependencies, align 8, !dbg !4311
  %tobool128 = icmp ne void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)* %96, null, !dbg !4309
  br i1 %tobool128, label %if.then129, label %if.end148, !dbg !4312

if.then129:                                       ; preds = %if.else127
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def* %tmp_uses, metadata !4313, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def* %tmp_sets, metadata !4316, metadata !DIExpression()), !dbg !4317
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %tmp_uses, %struct.bitmap_obstack* @reg_obstack), !dbg !4318
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %tmp_sets, %struct.bitmap_obstack* @reg_obstack), !dbg !4319
  %97 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !4320
  %compute_jump_reg_dependencies130 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %97, i32 0, i32 0, !dbg !4321
  %98 = load void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)*, void (%struct.rtx_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*)** %compute_jump_reg_dependencies130, align 8, !dbg !4321
  %99 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4322
  %100 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4323
  %reg_conditional_sets = getelementptr inbounds %struct.deps, %struct.deps* %100, i32 0, i32 16, !dbg !4324
  call void %98(%struct.rtx_def* %99, %struct.bitmap_head_def* %reg_conditional_sets, %struct.bitmap_head_def* %tmp_uses, %struct.bitmap_head_def* %tmp_sets), !dbg !4325
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %tmp_uses, i32 0, i32* %i), !dbg !4326
  br label %for.cond131, !dbg !4326

for.cond131:                                      ; preds = %for.inc145, %if.then129
  %call132 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4328
  %tobool133 = icmp ne i8 %call132, 0, !dbg !4326
  br i1 %tobool133, label %for.body134, label %for.end146, !dbg !4326

for.body134:                                      ; preds = %for.cond131
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last, metadata !4330, metadata !DIExpression()), !dbg !4332
  %101 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4333
  %reg_last135 = getelementptr inbounds %struct.deps, %struct.deps* %101, i32 0, i32 14, !dbg !4334
  %102 = load %struct.deps_reg*, %struct.deps_reg** %reg_last135, align 8, !dbg !4334
  %103 = load i32, i32* %i, align 4, !dbg !4335
  %idxprom136 = zext i32 %103 to i64, !dbg !4333
  %arrayidx137 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %102, i64 %idxprom136, !dbg !4333
  store %struct.deps_reg* %arrayidx137, %struct.deps_reg** %reg_last, align 8, !dbg !4332
  %104 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4336
  %105 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !4337
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %105, i32 0, i32 1, !dbg !4338
  %106 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !4338
  call void @add_dependence_list(%struct.rtx_def* %104, %struct.rtx_def* %106, i32 0, i32 12), !dbg !4339
  %107 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4340
  %108 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !4341
  %implicit_sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %108, i32 0, i32 2, !dbg !4342
  %109 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets, align 8, !dbg !4342
  call void @add_dependence_list(%struct.rtx_def* %107, %struct.rtx_def* %109, i32 0, i32 12), !dbg !4343
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4344
  %111 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !4345
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %111, i32 0, i32 3, !dbg !4346
  %112 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !4346
  call void @add_dependence_list(%struct.rtx_def* %110, %struct.rtx_def* %112, i32 0, i32 12), !dbg !4347
  %113 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4348
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %113, i32 0, i32 18, !dbg !4350
  %bf.load138 = load i8, i8* %readonly, align 4, !dbg !4350
  %bf.clear139 = and i8 %bf.load138, 1, !dbg !4350
  %bf.cast = zext i8 %bf.clear139 to i32, !dbg !4350
  %tobool140 = icmp ne i32 %bf.cast, 0, !dbg !4348
  br i1 %tobool140, label %if.end144, label %if.then141, !dbg !4351

if.then141:                                       ; preds = %for.body134
  %114 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !4352
  %uses_length = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %114, i32 0, i32 4, !dbg !4354
  %115 = load i32, i32* %uses_length, align 8, !dbg !4355
  %inc = add nsw i32 %115, 1, !dbg !4355
  store i32 %inc, i32* %uses_length, align 8, !dbg !4355
  %116 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4356
  %117 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !4357
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %117, i32 0, i32 0, !dbg !4358
  %118 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !4358
  %call142 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %116, %struct.rtx_def* %118), !dbg !4359
  %119 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !4360
  %uses143 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %119, i32 0, i32 0, !dbg !4361
  store %struct.rtx_def* %call142, %struct.rtx_def** %uses143, align 8, !dbg !4362
  br label %if.end144, !dbg !4363

if.end144:                                        ; preds = %if.then141, %for.body134
  br label %for.inc145, !dbg !4364

for.inc145:                                       ; preds = %if.end144
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4328
  br label %for.cond131, !dbg !4328, !llvm.loop !4365

for.end146:                                       ; preds = %for.cond131
  %120 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4367
  %call147 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %120, %struct.bitmap_head_def* %tmp_sets), !dbg !4367
  call void @bitmap_clear(%struct.bitmap_head_def* %tmp_uses), !dbg !4368
  call void @bitmap_clear(%struct.bitmap_head_def* %tmp_sets), !dbg !4369
  br label %if.end148, !dbg !4370

if.end148:                                        ; preds = %for.end146, %if.else127
  %121 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4371
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %121, i32 0, i32 2, !dbg !4372
  %122 = load %struct.rtx_def*, %struct.rtx_def** %pending_write_insns, align 8, !dbg !4372
  store %struct.rtx_def* %122, %struct.rtx_def** %pending, align 8, !dbg !4373
  %123 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4374
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %123, i32 0, i32 3, !dbg !4375
  %124 = load %struct.rtx_def*, %struct.rtx_def** %pending_write_mems, align 8, !dbg !4375
  store %struct.rtx_def* %124, %struct.rtx_def** %pending_mem, align 8, !dbg !4376
  br label %while.cond149, !dbg !4377

while.cond149:                                    ; preds = %if.end163, %if.end148
  %125 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !4378
  %tobool150 = icmp ne %struct.rtx_def* %125, null, !dbg !4377
  br i1 %tobool150, label %while.body151, label %while.end172, !dbg !4377

while.body151:                                    ; preds = %while.cond149
  %126 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4379
  %127 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !4382
  %u152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1, !dbg !4382
  %fld153 = bitcast %union.u* %u152 to [1 x %union.rtunion_def]*, !dbg !4382
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i64 0, i64 0, !dbg !4382
  %rt_rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**, !dbg !4382
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx155, align 8, !dbg !4382
  %call156 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %126, %struct.rtx_def* %128), !dbg !4383
  %tobool157 = icmp ne i8 %call156, 0, !dbg !4383
  br i1 %tobool157, label %if.end163, label %if.then158, !dbg !4384

if.then158:                                       ; preds = %while.body151
  %129 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4385
  %130 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !4386
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !4386
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !4386
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 0, !dbg !4386
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !4386
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !4386
  call void @add_dependence(%struct.rtx_def* %129, %struct.rtx_def* %131, i32 11), !dbg !4387
  br label %if.end163, !dbg !4387

if.end163:                                        ; preds = %if.then158, %while.body151
  %132 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !4388
  %u164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !4388
  %fld165 = bitcast %union.u* %u164 to [1 x %union.rtunion_def]*, !dbg !4388
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i64 0, i64 1, !dbg !4388
  %rt_rtx167 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**, !dbg !4388
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx167, align 8, !dbg !4388
  store %struct.rtx_def* %133, %struct.rtx_def** %pending, align 8, !dbg !4389
  %134 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !4390
  %u168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1, !dbg !4390
  %fld169 = bitcast %union.u* %u168 to [1 x %union.rtunion_def]*, !dbg !4390
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i64 0, i64 1, !dbg !4390
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !4390
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !4390
  store %struct.rtx_def* %135, %struct.rtx_def** %pending_mem, align 8, !dbg !4391
  br label %while.cond149, !dbg !4377, !llvm.loop !4392

while.end172:                                     ; preds = %while.cond149
  %136 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4394
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %136, i32 0, i32 0, !dbg !4395
  %137 = load %struct.rtx_def*, %struct.rtx_def** %pending_read_insns, align 8, !dbg !4395
  store %struct.rtx_def* %137, %struct.rtx_def** %pending, align 8, !dbg !4396
  %138 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4397
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %138, i32 0, i32 1, !dbg !4398
  %139 = load %struct.rtx_def*, %struct.rtx_def** %pending_read_mems, align 8, !dbg !4398
  store %struct.rtx_def* %139, %struct.rtx_def** %pending_mem, align 8, !dbg !4399
  br label %while.cond173, !dbg !4400

while.cond173:                                    ; preds = %if.end195, %while.end172
  %140 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !4401
  %tobool174 = icmp ne %struct.rtx_def* %140, null, !dbg !4400
  br i1 %tobool174, label %while.body175, label %while.end204, !dbg !4400

while.body175:                                    ; preds = %while.cond173
  %141 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !4402
  %u176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1, !dbg !4402
  %fld177 = bitcast %union.u* %u176 to [1 x %union.rtunion_def]*, !dbg !4402
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i64 0, i64 0, !dbg !4402
  %rt_rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**, !dbg !4402
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx179, align 8, !dbg !4402
  %143 = bitcast %struct.rtx_def* %142 to i32*, !dbg !4402
  %bf.load180 = load i32, i32* %143, align 8, !dbg !4402
  %bf.lshr = lshr i32 %bf.load180, 27, !dbg !4402
  %bf.clear181 = and i32 %bf.lshr, 1, !dbg !4402
  %tobool182 = icmp ne i32 %bf.clear181, 0, !dbg !4402
  br i1 %tobool182, label %land.lhs.true183, label %if.end195, !dbg !4405

land.lhs.true183:                                 ; preds = %while.body175
  %144 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4406
  %145 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !4407
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1, !dbg !4407
  %fld185 = bitcast %union.u* %u184 to [1 x %union.rtunion_def]*, !dbg !4407
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i64 0, i64 0, !dbg !4407
  %rt_rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**, !dbg !4407
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !4407
  %call188 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %144, %struct.rtx_def* %146), !dbg !4408
  %tobool189 = icmp ne i8 %call188, 0, !dbg !4408
  br i1 %tobool189, label %if.end195, label %if.then190, !dbg !4409

if.then190:                                       ; preds = %land.lhs.true183
  %147 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4410
  %148 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !4411
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !4411
  %fld192 = bitcast %union.u* %u191 to [1 x %union.rtunion_def]*, !dbg !4411
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i64 0, i64 0, !dbg !4411
  %rt_rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**, !dbg !4411
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !4411
  call void @add_dependence(%struct.rtx_def* %147, %struct.rtx_def* %149, i32 11), !dbg !4412
  br label %if.end195, !dbg !4412

if.end195:                                        ; preds = %if.then190, %land.lhs.true183, %while.body175
  %150 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !4413
  %u196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1, !dbg !4413
  %fld197 = bitcast %union.u* %u196 to [1 x %union.rtunion_def]*, !dbg !4413
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i64 0, i64 1, !dbg !4413
  %rt_rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**, !dbg !4413
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx199, align 8, !dbg !4413
  store %struct.rtx_def* %151, %struct.rtx_def** %pending, align 8, !dbg !4414
  %152 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !4415
  %u200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1, !dbg !4415
  %fld201 = bitcast %union.u* %u200 to [1 x %union.rtunion_def]*, !dbg !4415
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i64 0, i64 1, !dbg !4415
  %rt_rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**, !dbg !4415
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx203, align 8, !dbg !4415
  store %struct.rtx_def* %153, %struct.rtx_def** %pending_mem, align 8, !dbg !4416
  br label %while.cond173, !dbg !4400, !llvm.loop !4417

while.end204:                                     ; preds = %while.cond173
  %154 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4419
  %155 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4420
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %155, i32 0, i32 7, !dbg !4421
  %156 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !4421
  call void @add_dependence_list(%struct.rtx_def* %154, %struct.rtx_def* %156, i32 1, i32 12), !dbg !4422
  br label %if.end205

if.end205:                                        ; preds = %while.end204, %if.then126
  br label %if.end206, !dbg !4423

if.end206:                                        ; preds = %if.end205, %if.end105
  %157 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4424
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !4424
  %bf.load207 = load i32, i32* %158, align 8, !dbg !4424
  %bf.clear208 = and i32 %bf.load207, 65535, !dbg !4424
  %cmp209 = icmp eq i32 %bf.clear208, 10, !dbg !4424
  br i1 %cmp209, label %land.lhs.true216, label %lor.lhs.false211, !dbg !4426

lor.lhs.false211:                                 ; preds = %if.end206
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4427
  %160 = bitcast %struct.rtx_def* %159 to i32*, !dbg !4427
  %bf.load212 = load i32, i32* %160, align 8, !dbg !4427
  %bf.clear213 = and i32 %bf.load212, 65535, !dbg !4427
  %cmp214 = icmp eq i32 %bf.clear213, 9, !dbg !4427
  br i1 %cmp214, label %land.lhs.true216, label %lor.lhs.false220, !dbg !4428

land.lhs.true216:                                 ; preds = %lor.lhs.false211, %if.end206
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4429
  %call217 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %161), !dbg !4430
  %conv218 = zext i8 %call217 to i32, !dbg !4430
  %tobool219 = icmp ne i32 %conv218, 0, !dbg !4430
  br i1 %tobool219, label %if.then229, label %lor.lhs.false220, !dbg !4431

lor.lhs.false220:                                 ; preds = %land.lhs.true216, %lor.lhs.false211
  %162 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4432
  %163 = bitcast %struct.rtx_def* %162 to i32*, !dbg !4432
  %bf.load221 = load i32, i32* %163, align 8, !dbg !4432
  %bf.clear222 = and i32 %bf.load221, 65535, !dbg !4432
  %cmp223 = icmp eq i32 %bf.clear222, 8, !dbg !4432
  br i1 %cmp223, label %land.lhs.true225, label %if.end230, !dbg !4433

land.lhs.true225:                                 ; preds = %lor.lhs.false220
  %164 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4434
  %call226 = call zeroext i8 @control_flow_insn_p(%struct.rtx_def* %164), !dbg !4435
  %conv227 = zext i8 %call226 to i32, !dbg !4435
  %tobool228 = icmp ne i32 %conv227, 0, !dbg !4435
  br i1 %tobool228, label %if.then229, label %if.end230, !dbg !4436

if.then229:                                       ; preds = %land.lhs.true225, %land.lhs.true216
  store i32 1, i32* @reg_pending_barrier, align 4, !dbg !4437
  br label %if.end230, !dbg !4438

if.end230:                                        ; preds = %if.then229, %land.lhs.true225, %lor.lhs.false220
  %165 = load i8, i8* @sched_pressure_p, align 1, !dbg !4439
  %tobool231 = icmp ne i8 %165, 0, !dbg !4439
  br i1 %tobool231, label %if.then232, label %if.end233, !dbg !4441

if.then232:                                       ; preds = %if.end230
  %166 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4442
  %167 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4444
  call void @setup_insn_reg_uses(%struct.deps* %166, %struct.rtx_def* %167), !dbg !4445
  %168 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4446
  call void @setup_insn_reg_pressure_info(%struct.rtx_def* %168), !dbg !4447
  br label %if.end233, !dbg !4448

if.end233:                                        ; preds = %if.then232, %if.end230
  %169 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4449
  %170 = bitcast %struct.rtx_def* %169 to i32*, !dbg !4449
  %bf.load234 = load i32, i32* %170, align 8, !dbg !4449
  %bf.clear235 = and i32 %bf.load234, 65535, !dbg !4449
  %cmp236 = icmp eq i32 %bf.clear235, 7, !dbg !4449
  br i1 %cmp236, label %if.then238, label %if.else333, !dbg !4451

if.then238:                                       ; preds = %if.end233
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !4452, metadata !DIExpression()), !dbg !4454
  %171 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4455
  %last_debug_insn = getelementptr inbounds %struct.deps, %struct.deps* %171, i32 0, i32 12, !dbg !4456
  %172 = load %struct.rtx_def*, %struct.rtx_def** %last_debug_insn, align 8, !dbg !4456
  store %struct.rtx_def* %172, %struct.rtx_def** %prev, align 8, !dbg !4454
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %u239, metadata !4457, metadata !DIExpression()), !dbg !4458
  %173 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4459
  %readonly240 = getelementptr inbounds %struct.deps, %struct.deps* %173, i32 0, i32 18, !dbg !4461
  %bf.load241 = load i8, i8* %readonly240, align 4, !dbg !4461
  %bf.clear242 = and i8 %bf.load241, 1, !dbg !4461
  %bf.cast243 = zext i8 %bf.clear242 to i32, !dbg !4461
  %tobool244 = icmp ne i32 %bf.cast243, 0, !dbg !4459
  br i1 %tobool244, label %if.end247, label %if.then245, !dbg !4462

if.then245:                                       ; preds = %if.then238
  %174 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4463
  %175 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4464
  %last_debug_insn246 = getelementptr inbounds %struct.deps, %struct.deps* %175, i32 0, i32 12, !dbg !4465
  store %struct.rtx_def* %174, %struct.rtx_def** %last_debug_insn246, align 8, !dbg !4466
  br label %if.end247, !dbg !4464

if.end247:                                        ; preds = %if.then245, %if.then238
  %176 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4467
  %tobool248 = icmp ne %struct.rtx_def* %176, null, !dbg !4467
  br i1 %tobool248, label %if.then249, label %if.end250, !dbg !4469

if.then249:                                       ; preds = %if.end247
  %177 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4470
  %178 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4471
  call void @add_dependence(%struct.rtx_def* %177, %struct.rtx_def* %178, i32 12), !dbg !4472
  br label %if.end250, !dbg !4472

if.end250:                                        ; preds = %if.then249, %if.end247
  %179 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4473
  %180 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4474
  %last_function_call251 = getelementptr inbounds %struct.deps, %struct.deps* %180, i32 0, i32 8, !dbg !4475
  %181 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call251, align 8, !dbg !4475
  call void @add_dependence_list(%struct.rtx_def* %179, %struct.rtx_def* %181, i32 1, i32 12), !dbg !4476
  %182 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4477
  %last_pending_memory_flush252 = getelementptr inbounds %struct.deps, %struct.deps* %182, i32 0, i32 7, !dbg !4479
  %183 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush252, align 8, !dbg !4479
  store %struct.rtx_def* %183, %struct.rtx_def** %u239, align 8, !dbg !4480
  br label %for.cond253, !dbg !4481

for.cond253:                                      ; preds = %for.inc273, %if.end250
  %184 = load %struct.rtx_def*, %struct.rtx_def** %u239, align 8, !dbg !4482
  %tobool254 = icmp ne %struct.rtx_def* %184, null, !dbg !4484
  br i1 %tobool254, label %for.body255, label %for.end278, !dbg !4484

for.body255:                                      ; preds = %for.cond253
  %185 = load %struct.rtx_def*, %struct.rtx_def** %u239, align 8, !dbg !4485
  %u256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1, !dbg !4485
  %fld257 = bitcast %union.u* %u256 to [1 x %union.rtunion_def]*, !dbg !4485
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i64 0, i64 0, !dbg !4485
  %rt_rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**, !dbg !4485
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx259, align 8, !dbg !4485
  %187 = bitcast %struct.rtx_def* %186 to i32*, !dbg !4485
  %bf.load260 = load i32, i32* %187, align 8, !dbg !4485
  %bf.clear261 = and i32 %bf.load260, 65535, !dbg !4485
  %cmp262 = icmp eq i32 %bf.clear261, 9, !dbg !4485
  br i1 %cmp262, label %lor.lhs.false264, label %if.then267, !dbg !4487

lor.lhs.false264:                                 ; preds = %for.body255
  %call265 = call zeroext i8 @sel_sched_p(), !dbg !4488
  %tobool266 = icmp ne i8 %call265, 0, !dbg !4488
  br i1 %tobool266, label %if.end272, label %if.then267, !dbg !4489

if.then267:                                       ; preds = %lor.lhs.false264, %for.body255
  %188 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4490
  %189 = load %struct.rtx_def*, %struct.rtx_def** %u239, align 8, !dbg !4491
  %u268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1, !dbg !4491
  %fld269 = bitcast %union.u* %u268 to [1 x %union.rtunion_def]*, !dbg !4491
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i64 0, i64 0, !dbg !4491
  %rt_rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**, !dbg !4491
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx271, align 8, !dbg !4491
  call void @add_dependence(%struct.rtx_def* %188, %struct.rtx_def* %190, i32 12), !dbg !4492
  br label %if.end272, !dbg !4492

if.end272:                                        ; preds = %if.then267, %lor.lhs.false264
  br label %for.inc273, !dbg !4493

for.inc273:                                       ; preds = %if.end272
  %191 = load %struct.rtx_def*, %struct.rtx_def** %u239, align 8, !dbg !4494
  %u274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1, !dbg !4494
  %fld275 = bitcast %union.u* %u274 to [1 x %union.rtunion_def]*, !dbg !4494
  %arrayidx276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld275, i64 0, i64 1, !dbg !4494
  %rt_rtx277 = bitcast %union.rtunion_def* %arrayidx276 to %struct.rtx_def**, !dbg !4494
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx277, align 8, !dbg !4494
  store %struct.rtx_def* %192, %struct.rtx_def** %u239, align 8, !dbg !4495
  br label %for.cond253, !dbg !4496, !llvm.loop !4497

for.end278:                                       ; preds = %for.cond253
  %193 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4499
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %193, i32 0, i32* %i), !dbg !4499
  br label %for.cond279, !dbg !4499

for.cond279:                                      ; preds = %for.inc299, %for.end278
  %call280 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4501
  %tobool281 = icmp ne i8 %call280, 0, !dbg !4499
  br i1 %tobool281, label %for.body282, label %for.end300, !dbg !4499

for.body282:                                      ; preds = %for.cond279
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last283, metadata !4503, metadata !DIExpression()), !dbg !4505
  %194 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4506
  %reg_last284 = getelementptr inbounds %struct.deps, %struct.deps* %194, i32 0, i32 14, !dbg !4507
  %195 = load %struct.deps_reg*, %struct.deps_reg** %reg_last284, align 8, !dbg !4507
  %196 = load i32, i32* %i, align 4, !dbg !4508
  %idxprom285 = zext i32 %196 to i64, !dbg !4506
  %arrayidx286 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %195, i64 %idxprom285, !dbg !4506
  store %struct.deps_reg* %arrayidx286, %struct.deps_reg** %reg_last283, align 8, !dbg !4505
  %197 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4509
  %198 = load %struct.deps_reg*, %struct.deps_reg** %reg_last283, align 8, !dbg !4510
  %sets287 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %198, i32 0, i32 1, !dbg !4511
  %199 = load %struct.rtx_def*, %struct.rtx_def** %sets287, align 8, !dbg !4511
  call void @add_dependence_list(%struct.rtx_def* %197, %struct.rtx_def* %199, i32 1, i32 12), !dbg !4512
  %200 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4513
  %201 = load %struct.deps_reg*, %struct.deps_reg** %reg_last283, align 8, !dbg !4514
  %clobbers288 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %201, i32 0, i32 3, !dbg !4515
  %202 = load %struct.rtx_def*, %struct.rtx_def** %clobbers288, align 8, !dbg !4515
  call void @add_dependence_list(%struct.rtx_def* %200, %struct.rtx_def* %202, i32 1, i32 12), !dbg !4516
  %203 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4517
  %readonly289 = getelementptr inbounds %struct.deps, %struct.deps* %203, i32 0, i32 18, !dbg !4519
  %bf.load290 = load i8, i8* %readonly289, align 4, !dbg !4519
  %bf.clear291 = and i8 %bf.load290, 1, !dbg !4519
  %bf.cast292 = zext i8 %bf.clear291 to i32, !dbg !4519
  %tobool293 = icmp ne i32 %bf.cast292, 0, !dbg !4517
  br i1 %tobool293, label %if.end298, label %if.then294, !dbg !4520

if.then294:                                       ; preds = %for.body282
  %204 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4521
  %205 = load %struct.deps_reg*, %struct.deps_reg** %reg_last283, align 8, !dbg !4522
  %uses295 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %205, i32 0, i32 0, !dbg !4523
  %206 = load %struct.rtx_def*, %struct.rtx_def** %uses295, align 8, !dbg !4523
  %call296 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %204, %struct.rtx_def* %206), !dbg !4524
  %207 = load %struct.deps_reg*, %struct.deps_reg** %reg_last283, align 8, !dbg !4525
  %uses297 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %207, i32 0, i32 0, !dbg !4526
  store %struct.rtx_def* %call296, %struct.rtx_def** %uses297, align 8, !dbg !4527
  br label %if.end298, !dbg !4525

if.end298:                                        ; preds = %if.then294, %for.body282
  br label %for.inc299, !dbg !4528

for.inc299:                                       ; preds = %if.end298
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4501
  br label %for.cond279, !dbg !4501, !llvm.loop !4529

for.end300:                                       ; preds = %for.cond279
  %208 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4531
  call void @bitmap_clear(%struct.bitmap_head_def* %208), !dbg !4531
  %209 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4532
  %u301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1, !dbg !4532
  %fld302 = bitcast %union.u* %u301 to [1 x %union.rtunion_def]*, !dbg !4532
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i64 0, i64 1, !dbg !4532
  %rt_rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**, !dbg !4532
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx304, align 8, !dbg !4532
  store %struct.rtx_def* %210, %struct.rtx_def** %prev, align 8, !dbg !4533
  %211 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4534
  %tobool305 = icmp ne %struct.rtx_def* %211, null, !dbg !4534
  br i1 %tobool305, label %land.lhs.true306, label %if.end332, !dbg !4536

land.lhs.true306:                                 ; preds = %for.end300
  %212 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4537
  %213 = bitcast %struct.rtx_def* %212 to i32*, !dbg !4537
  %bf.load307 = load i32, i32* %213, align 8, !dbg !4537
  %bf.clear308 = and i32 %bf.load307, 65535, !dbg !4537
  %cmp309 = icmp eq i32 %bf.clear308, 8, !dbg !4537
  br i1 %cmp309, label %land.lhs.true326, label %lor.lhs.false311, !dbg !4537

lor.lhs.false311:                                 ; preds = %land.lhs.true306
  %214 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4537
  %215 = bitcast %struct.rtx_def* %214 to i32*, !dbg !4537
  %bf.load312 = load i32, i32* %215, align 8, !dbg !4537
  %bf.clear313 = and i32 %bf.load312, 65535, !dbg !4537
  %cmp314 = icmp eq i32 %bf.clear313, 7, !dbg !4537
  br i1 %cmp314, label %land.lhs.true326, label %lor.lhs.false316, !dbg !4537

lor.lhs.false316:                                 ; preds = %lor.lhs.false311
  %216 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4537
  %217 = bitcast %struct.rtx_def* %216 to i32*, !dbg !4537
  %bf.load317 = load i32, i32* %217, align 8, !dbg !4537
  %bf.clear318 = and i32 %bf.load317, 65535, !dbg !4537
  %cmp319 = icmp eq i32 %bf.clear318, 9, !dbg !4537
  br i1 %cmp319, label %land.lhs.true326, label %lor.lhs.false321, !dbg !4537

lor.lhs.false321:                                 ; preds = %lor.lhs.false316
  %218 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4537
  %219 = bitcast %struct.rtx_def* %218 to i32*, !dbg !4537
  %bf.load322 = load i32, i32* %219, align 8, !dbg !4537
  %bf.clear323 = and i32 %bf.load322, 65535, !dbg !4537
  %cmp324 = icmp eq i32 %bf.clear323, 10, !dbg !4537
  br i1 %cmp324, label %land.lhs.true326, label %if.end332, !dbg !4537

land.lhs.true326:                                 ; preds = %lor.lhs.false321, %lor.lhs.false316, %lor.lhs.false311, %land.lhs.true306
  %220 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4537
  %221 = bitcast %struct.rtx_def* %220 to i32*, !dbg !4537
  %bf.load327 = load i32, i32* %221, align 8, !dbg !4537
  %bf.clear328 = and i32 %bf.load327, 65535, !dbg !4537
  %cmp329 = icmp eq i32 %bf.clear328, 7, !dbg !4537
  br i1 %cmp329, label %if.end332, label %if.then331, !dbg !4538

if.then331:                                       ; preds = %land.lhs.true326
  %222 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4539
  %223 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4540
  call void @add_dependence(%struct.rtx_def* %222, %struct.rtx_def* %223, i32 12), !dbg !4541
  br label %if.end332, !dbg !4541

if.end332:                                        ; preds = %if.then331, %land.lhs.true326, %lor.lhs.false321, %for.end300
  br label %if.end526, !dbg !4542

if.else333:                                       ; preds = %if.end233
  %224 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4543
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %224, i32 0, i32* %i), !dbg !4543
  br label %for.cond334, !dbg !4543

for.cond334:                                      ; preds = %for.inc357, %if.else333
  %call335 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4546
  %tobool336 = icmp ne i8 %call335, 0, !dbg !4543
  br i1 %tobool336, label %for.body337, label %for.end358, !dbg !4543

for.body337:                                      ; preds = %for.cond334
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last338, metadata !4548, metadata !DIExpression()), !dbg !4550
  %225 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4551
  %reg_last339 = getelementptr inbounds %struct.deps, %struct.deps* %225, i32 0, i32 14, !dbg !4552
  %226 = load %struct.deps_reg*, %struct.deps_reg** %reg_last339, align 8, !dbg !4552
  %227 = load i32, i32* %i, align 4, !dbg !4553
  %idxprom340 = zext i32 %227 to i64, !dbg !4551
  %arrayidx341 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %226, i64 %idxprom340, !dbg !4551
  store %struct.deps_reg* %arrayidx341, %struct.deps_reg** %reg_last338, align 8, !dbg !4550
  %228 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4554
  %229 = load %struct.deps_reg*, %struct.deps_reg** %reg_last338, align 8, !dbg !4555
  %sets342 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %229, i32 0, i32 1, !dbg !4556
  %230 = load %struct.rtx_def*, %struct.rtx_def** %sets342, align 8, !dbg !4556
  call void @add_dependence_list(%struct.rtx_def* %228, %struct.rtx_def* %230, i32 0, i32 0), !dbg !4557
  %231 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4558
  %232 = load %struct.deps_reg*, %struct.deps_reg** %reg_last338, align 8, !dbg !4559
  %implicit_sets343 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %232, i32 0, i32 2, !dbg !4560
  %233 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets343, align 8, !dbg !4560
  call void @add_dependence_list(%struct.rtx_def* %231, %struct.rtx_def* %233, i32 0, i32 12), !dbg !4561
  %234 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4562
  %235 = load %struct.deps_reg*, %struct.deps_reg** %reg_last338, align 8, !dbg !4563
  %clobbers344 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %235, i32 0, i32 3, !dbg !4564
  %236 = load %struct.rtx_def*, %struct.rtx_def** %clobbers344, align 8, !dbg !4564
  call void @add_dependence_list(%struct.rtx_def* %234, %struct.rtx_def* %236, i32 0, i32 0), !dbg !4565
  %237 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4566
  %readonly345 = getelementptr inbounds %struct.deps, %struct.deps* %237, i32 0, i32 18, !dbg !4568
  %bf.load346 = load i8, i8* %readonly345, align 4, !dbg !4568
  %bf.clear347 = and i8 %bf.load346, 1, !dbg !4568
  %bf.cast348 = zext i8 %bf.clear347 to i32, !dbg !4568
  %tobool349 = icmp ne i32 %bf.cast348, 0, !dbg !4566
  br i1 %tobool349, label %if.end356, label %if.then350, !dbg !4569

if.then350:                                       ; preds = %for.body337
  %238 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4570
  %239 = load %struct.deps_reg*, %struct.deps_reg** %reg_last338, align 8, !dbg !4572
  %uses351 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %239, i32 0, i32 0, !dbg !4573
  %240 = load %struct.rtx_def*, %struct.rtx_def** %uses351, align 8, !dbg !4573
  %call352 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %238, %struct.rtx_def* %240), !dbg !4574
  %241 = load %struct.deps_reg*, %struct.deps_reg** %reg_last338, align 8, !dbg !4575
  %uses353 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %241, i32 0, i32 0, !dbg !4576
  store %struct.rtx_def* %call352, %struct.rtx_def** %uses353, align 8, !dbg !4577
  %242 = load %struct.deps_reg*, %struct.deps_reg** %reg_last338, align 8, !dbg !4578
  %uses_length354 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %242, i32 0, i32 4, !dbg !4579
  %243 = load i32, i32* %uses_length354, align 8, !dbg !4580
  %inc355 = add nsw i32 %243, 1, !dbg !4580
  store i32 %inc355, i32* %uses_length354, align 8, !dbg !4580
  br label %if.end356, !dbg !4581

if.end356:                                        ; preds = %if.then350, %for.body337
  br label %for.inc357, !dbg !4582

for.inc357:                                       ; preds = %if.end356
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4546
  br label %for.cond334, !dbg !4546, !llvm.loop !4583

for.end358:                                       ; preds = %for.cond334
  store i32 0, i32* %i, align 4, !dbg !4585
  br label %for.cond359, !dbg !4587

for.cond359:                                      ; preds = %for.inc386, %for.end358
  %244 = load i32, i32* %i, align 4, !dbg !4588
  %cmp360 = icmp ult i32 %244, 53, !dbg !4590
  br i1 %cmp360, label %for.body362, label %for.end388, !dbg !4591

for.body362:                                      ; preds = %for.cond359
  %245 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !4592
  %246 = load i32, i32* %i, align 4, !dbg !4592
  %sh_prom = zext i32 %246 to i64, !dbg !4592
  %shl = shl i64 1, %sh_prom, !dbg !4592
  %and363 = and i64 %245, %shl, !dbg !4592
  %tobool364 = icmp ne i64 %and363, 0, !dbg !4592
  br i1 %tobool364, label %if.then365, label %if.end385, !dbg !4594

if.then365:                                       ; preds = %for.body362
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last366, metadata !4595, metadata !DIExpression()), !dbg !4597
  %247 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4598
  %reg_last367 = getelementptr inbounds %struct.deps, %struct.deps* %247, i32 0, i32 14, !dbg !4599
  %248 = load %struct.deps_reg*, %struct.deps_reg** %reg_last367, align 8, !dbg !4599
  %249 = load i32, i32* %i, align 4, !dbg !4600
  %idxprom368 = zext i32 %249 to i64, !dbg !4598
  %arrayidx369 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %248, i64 %idxprom368, !dbg !4598
  store %struct.deps_reg* %arrayidx369, %struct.deps_reg** %reg_last366, align 8, !dbg !4597
  %250 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4601
  %251 = load %struct.deps_reg*, %struct.deps_reg** %reg_last366, align 8, !dbg !4602
  %sets370 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %251, i32 0, i32 1, !dbg !4603
  %252 = load %struct.rtx_def*, %struct.rtx_def** %sets370, align 8, !dbg !4603
  call void @add_dependence_list(%struct.rtx_def* %250, %struct.rtx_def* %252, i32 0, i32 0), !dbg !4604
  %253 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4605
  %254 = load %struct.deps_reg*, %struct.deps_reg** %reg_last366, align 8, !dbg !4606
  %implicit_sets371 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %254, i32 0, i32 2, !dbg !4607
  %255 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets371, align 8, !dbg !4607
  call void @add_dependence_list(%struct.rtx_def* %253, %struct.rtx_def* %255, i32 0, i32 12), !dbg !4608
  %256 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4609
  %257 = load %struct.deps_reg*, %struct.deps_reg** %reg_last366, align 8, !dbg !4610
  %clobbers372 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %257, i32 0, i32 3, !dbg !4611
  %258 = load %struct.rtx_def*, %struct.rtx_def** %clobbers372, align 8, !dbg !4611
  call void @add_dependence_list(%struct.rtx_def* %256, %struct.rtx_def* %258, i32 0, i32 0), !dbg !4612
  %259 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4613
  %readonly373 = getelementptr inbounds %struct.deps, %struct.deps* %259, i32 0, i32 18, !dbg !4615
  %bf.load374 = load i8, i8* %readonly373, align 4, !dbg !4615
  %bf.clear375 = and i8 %bf.load374, 1, !dbg !4615
  %bf.cast376 = zext i8 %bf.clear375 to i32, !dbg !4615
  %tobool377 = icmp ne i32 %bf.cast376, 0, !dbg !4613
  br i1 %tobool377, label %if.end384, label %if.then378, !dbg !4616

if.then378:                                       ; preds = %if.then365
  %260 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4617
  %261 = load %struct.deps_reg*, %struct.deps_reg** %reg_last366, align 8, !dbg !4619
  %uses379 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %261, i32 0, i32 0, !dbg !4620
  %262 = load %struct.rtx_def*, %struct.rtx_def** %uses379, align 8, !dbg !4620
  %call380 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %260, %struct.rtx_def* %262), !dbg !4621
  %263 = load %struct.deps_reg*, %struct.deps_reg** %reg_last366, align 8, !dbg !4622
  %uses381 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %263, i32 0, i32 0, !dbg !4623
  store %struct.rtx_def* %call380, %struct.rtx_def** %uses381, align 8, !dbg !4624
  %264 = load %struct.deps_reg*, %struct.deps_reg** %reg_last366, align 8, !dbg !4625
  %uses_length382 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %264, i32 0, i32 4, !dbg !4626
  %265 = load i32, i32* %uses_length382, align 8, !dbg !4627
  %inc383 = add nsw i32 %265, 1, !dbg !4627
  store i32 %inc383, i32* %uses_length382, align 8, !dbg !4627
  br label %if.end384, !dbg !4628

if.end384:                                        ; preds = %if.then378, %if.then365
  br label %if.end385, !dbg !4629

if.end385:                                        ; preds = %if.end384, %for.body362
  br label %for.inc386, !dbg !4592

for.inc386:                                       ; preds = %if.end385
  %266 = load i32, i32* %i, align 4, !dbg !4630
  %inc387 = add i32 %266, 1, !dbg !4630
  store i32 %inc387, i32* %i, align 4, !dbg !4630
  br label %for.cond359, !dbg !4631, !llvm.loop !4632

for.end388:                                       ; preds = %for.cond359
  %267 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4634
  %call389 = call zeroext i8 @sched_has_condition_p(%struct.rtx_def* %267), !dbg !4636
  %tobool390 = icmp ne i8 %call389, 0, !dbg !4636
  br i1 %tobool390, label %if.then391, label %if.else442, !dbg !4637

if.then391:                                       ; preds = %for.end388
  %268 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !4638
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %268, i32 0, i32* %i), !dbg !4638
  br label %for.cond392, !dbg !4638

for.cond392:                                      ; preds = %for.inc414, %if.then391
  %call393 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4641
  %tobool394 = icmp ne i8 %call393, 0, !dbg !4638
  br i1 %tobool394, label %for.body395, label %for.end415, !dbg !4638

for.body395:                                      ; preds = %for.cond392
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last396, metadata !4643, metadata !DIExpression()), !dbg !4645
  %269 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4646
  %reg_last397 = getelementptr inbounds %struct.deps, %struct.deps* %269, i32 0, i32 14, !dbg !4647
  %270 = load %struct.deps_reg*, %struct.deps_reg** %reg_last397, align 8, !dbg !4647
  %271 = load i32, i32* %i, align 4, !dbg !4648
  %idxprom398 = zext i32 %271 to i64, !dbg !4646
  %arrayidx399 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %270, i64 %idxprom398, !dbg !4646
  store %struct.deps_reg* %arrayidx399, %struct.deps_reg** %reg_last396, align 8, !dbg !4645
  %272 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4649
  %273 = load %struct.deps_reg*, %struct.deps_reg** %reg_last396, align 8, !dbg !4650
  %sets400 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %273, i32 0, i32 1, !dbg !4651
  %274 = load %struct.rtx_def*, %struct.rtx_def** %sets400, align 8, !dbg !4651
  call void @add_dependence_list(%struct.rtx_def* %272, %struct.rtx_def* %274, i32 0, i32 11), !dbg !4652
  %275 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4653
  %276 = load %struct.deps_reg*, %struct.deps_reg** %reg_last396, align 8, !dbg !4654
  %implicit_sets401 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %276, i32 0, i32 2, !dbg !4655
  %277 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets401, align 8, !dbg !4655
  call void @add_dependence_list(%struct.rtx_def* %275, %struct.rtx_def* %277, i32 0, i32 12), !dbg !4656
  %278 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4657
  %279 = load %struct.deps_reg*, %struct.deps_reg** %reg_last396, align 8, !dbg !4658
  %uses402 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %279, i32 0, i32 0, !dbg !4659
  %280 = load %struct.rtx_def*, %struct.rtx_def** %uses402, align 8, !dbg !4659
  call void @add_dependence_list(%struct.rtx_def* %278, %struct.rtx_def* %280, i32 0, i32 12), !dbg !4660
  %281 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4661
  %readonly403 = getelementptr inbounds %struct.deps, %struct.deps* %281, i32 0, i32 18, !dbg !4663
  %bf.load404 = load i8, i8* %readonly403, align 4, !dbg !4663
  %bf.clear405 = and i8 %bf.load404, 1, !dbg !4663
  %bf.cast406 = zext i8 %bf.clear405 to i32, !dbg !4663
  %tobool407 = icmp ne i32 %bf.cast406, 0, !dbg !4661
  br i1 %tobool407, label %if.end413, label %if.then408, !dbg !4664

if.then408:                                       ; preds = %for.body395
  %282 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4665
  %283 = load %struct.deps_reg*, %struct.deps_reg** %reg_last396, align 8, !dbg !4667
  %clobbers409 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %283, i32 0, i32 3, !dbg !4668
  %284 = load %struct.rtx_def*, %struct.rtx_def** %clobbers409, align 8, !dbg !4668
  %call410 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %282, %struct.rtx_def* %284), !dbg !4669
  %285 = load %struct.deps_reg*, %struct.deps_reg** %reg_last396, align 8, !dbg !4670
  %clobbers411 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %285, i32 0, i32 3, !dbg !4671
  store %struct.rtx_def* %call410, %struct.rtx_def** %clobbers411, align 8, !dbg !4672
  %286 = load %struct.deps_reg*, %struct.deps_reg** %reg_last396, align 8, !dbg !4673
  %clobbers_length = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %286, i32 0, i32 5, !dbg !4674
  %287 = load i32, i32* %clobbers_length, align 4, !dbg !4675
  %inc412 = add nsw i32 %287, 1, !dbg !4675
  store i32 %inc412, i32* %clobbers_length, align 4, !dbg !4675
  br label %if.end413, !dbg !4676

if.end413:                                        ; preds = %if.then408, %for.body395
  br label %for.inc414, !dbg !4677

for.inc414:                                       ; preds = %if.end413
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4641
  br label %for.cond392, !dbg !4641, !llvm.loop !4678

for.end415:                                       ; preds = %for.cond392
  %288 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4680
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %288, i32 0, i32* %i), !dbg !4680
  br label %for.cond416, !dbg !4680

for.cond416:                                      ; preds = %for.inc440, %for.end415
  %call417 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4682
  %tobool418 = icmp ne i8 %call417, 0, !dbg !4680
  br i1 %tobool418, label %for.body419, label %for.end441, !dbg !4680

for.body419:                                      ; preds = %for.cond416
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last420, metadata !4684, metadata !DIExpression()), !dbg !4686
  %289 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4687
  %reg_last421 = getelementptr inbounds %struct.deps, %struct.deps* %289, i32 0, i32 14, !dbg !4688
  %290 = load %struct.deps_reg*, %struct.deps_reg** %reg_last421, align 8, !dbg !4688
  %291 = load i32, i32* %i, align 4, !dbg !4689
  %idxprom422 = zext i32 %291 to i64, !dbg !4687
  %arrayidx423 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %290, i64 %idxprom422, !dbg !4687
  store %struct.deps_reg* %arrayidx423, %struct.deps_reg** %reg_last420, align 8, !dbg !4686
  %292 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4690
  %293 = load %struct.deps_reg*, %struct.deps_reg** %reg_last420, align 8, !dbg !4691
  %sets424 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %293, i32 0, i32 1, !dbg !4692
  %294 = load %struct.rtx_def*, %struct.rtx_def** %sets424, align 8, !dbg !4692
  call void @add_dependence_list(%struct.rtx_def* %292, %struct.rtx_def* %294, i32 0, i32 11), !dbg !4693
  %295 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4694
  %296 = load %struct.deps_reg*, %struct.deps_reg** %reg_last420, align 8, !dbg !4695
  %implicit_sets425 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %296, i32 0, i32 2, !dbg !4696
  %297 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets425, align 8, !dbg !4696
  call void @add_dependence_list(%struct.rtx_def* %295, %struct.rtx_def* %297, i32 0, i32 12), !dbg !4697
  %298 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4698
  %299 = load %struct.deps_reg*, %struct.deps_reg** %reg_last420, align 8, !dbg !4699
  %clobbers426 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %299, i32 0, i32 3, !dbg !4700
  %300 = load %struct.rtx_def*, %struct.rtx_def** %clobbers426, align 8, !dbg !4700
  call void @add_dependence_list(%struct.rtx_def* %298, %struct.rtx_def* %300, i32 0, i32 11), !dbg !4701
  %301 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4702
  %302 = load %struct.deps_reg*, %struct.deps_reg** %reg_last420, align 8, !dbg !4703
  %uses427 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %302, i32 0, i32 0, !dbg !4704
  %303 = load %struct.rtx_def*, %struct.rtx_def** %uses427, align 8, !dbg !4704
  call void @add_dependence_list(%struct.rtx_def* %301, %struct.rtx_def* %303, i32 0, i32 12), !dbg !4705
  %304 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4706
  %readonly428 = getelementptr inbounds %struct.deps, %struct.deps* %304, i32 0, i32 18, !dbg !4708
  %bf.load429 = load i8, i8* %readonly428, align 4, !dbg !4708
  %bf.clear430 = and i8 %bf.load429, 1, !dbg !4708
  %bf.cast431 = zext i8 %bf.clear430 to i32, !dbg !4708
  %tobool432 = icmp ne i32 %bf.cast431, 0, !dbg !4706
  br i1 %tobool432, label %if.end439, label %if.then433, !dbg !4709

if.then433:                                       ; preds = %for.body419
  %305 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4710
  %306 = load %struct.deps_reg*, %struct.deps_reg** %reg_last420, align 8, !dbg !4712
  %sets434 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %306, i32 0, i32 1, !dbg !4713
  %307 = load %struct.rtx_def*, %struct.rtx_def** %sets434, align 8, !dbg !4713
  %call435 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %305, %struct.rtx_def* %307), !dbg !4714
  %308 = load %struct.deps_reg*, %struct.deps_reg** %reg_last420, align 8, !dbg !4715
  %sets436 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %308, i32 0, i32 1, !dbg !4716
  store %struct.rtx_def* %call435, %struct.rtx_def** %sets436, align 8, !dbg !4717
  %309 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4718
  %reg_conditional_sets437 = getelementptr inbounds %struct.deps, %struct.deps* %309, i32 0, i32 16, !dbg !4718
  %310 = load i32, i32* %i, align 4, !dbg !4718
  %call438 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %reg_conditional_sets437, i32 %310), !dbg !4718
  br label %if.end439, !dbg !4719

if.end439:                                        ; preds = %if.then433, %for.body419
  br label %for.inc440, !dbg !4720

for.inc440:                                       ; preds = %if.end439
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4682
  br label %for.cond416, !dbg !4682, !llvm.loop !4721

for.end441:                                       ; preds = %for.cond416
  br label %if.end525, !dbg !4723

if.else442:                                       ; preds = %for.end388
  %311 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !4724
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %311, i32 0, i32* %i), !dbg !4724
  br label %for.cond443, !dbg !4724

for.cond443:                                      ; preds = %for.inc495, %if.else442
  %call444 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4727
  %tobool445 = icmp ne i8 %call444, 0, !dbg !4724
  br i1 %tobool445, label %for.body446, label %for.end496, !dbg !4724

for.body446:                                      ; preds = %for.cond443
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last447, metadata !4729, metadata !DIExpression()), !dbg !4731
  %312 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4732
  %reg_last448 = getelementptr inbounds %struct.deps, %struct.deps* %312, i32 0, i32 14, !dbg !4733
  %313 = load %struct.deps_reg*, %struct.deps_reg** %reg_last448, align 8, !dbg !4733
  %314 = load i32, i32* %i, align 4, !dbg !4734
  %idxprom449 = zext i32 %314 to i64, !dbg !4732
  %arrayidx450 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %313, i64 %idxprom449, !dbg !4732
  store %struct.deps_reg* %arrayidx450, %struct.deps_reg** %reg_last447, align 8, !dbg !4731
  %315 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4735
  %uses_length451 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %315, i32 0, i32 4, !dbg !4737
  %316 = load i32, i32* %uses_length451, align 8, !dbg !4737
  %317 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4738
  %arrayidx452 = getelementptr inbounds %struct.param_info, %struct.param_info* %317, i64 14, !dbg !4738
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx452, i32 0, i32 1, !dbg !4738
  %318 = load i32, i32* %value, align 8, !dbg !4738
  %cmp453 = icmp sgt i32 %316, %318, !dbg !4739
  br i1 %cmp453, label %if.then461, label %lor.lhs.false455, !dbg !4740

lor.lhs.false455:                                 ; preds = %for.body446
  %319 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4741
  %clobbers_length456 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %319, i32 0, i32 5, !dbg !4742
  %320 = load i32, i32* %clobbers_length456, align 4, !dbg !4742
  %321 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4743
  %arrayidx457 = getelementptr inbounds %struct.param_info, %struct.param_info* %321, i64 14, !dbg !4743
  %value458 = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx457, i32 0, i32 1, !dbg !4743
  %322 = load i32, i32* %value458, align 8, !dbg !4743
  %cmp459 = icmp sgt i32 %320, %322, !dbg !4744
  br i1 %cmp459, label %if.then461, label %if.else478, !dbg !4745

if.then461:                                       ; preds = %lor.lhs.false455, %for.body446
  %323 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4746
  %324 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4748
  %325 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4749
  %sets462 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %325, i32 0, i32 1, !dbg !4750
  call void @add_dependence_list_and_free(%struct.deps* %323, %struct.rtx_def* %324, %struct.rtx_def** %sets462, i32 0, i32 11), !dbg !4751
  %326 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4752
  %327 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4753
  %328 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4754
  %implicit_sets463 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %328, i32 0, i32 2, !dbg !4755
  call void @add_dependence_list_and_free(%struct.deps* %326, %struct.rtx_def* %327, %struct.rtx_def** %implicit_sets463, i32 0, i32 12), !dbg !4756
  %329 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4757
  %330 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4758
  %331 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4759
  %uses464 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %331, i32 0, i32 0, !dbg !4760
  call void @add_dependence_list_and_free(%struct.deps* %329, %struct.rtx_def* %330, %struct.rtx_def** %uses464, i32 0, i32 12), !dbg !4761
  %332 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4762
  %333 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4763
  %334 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4764
  %clobbers465 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %334, i32 0, i32 3, !dbg !4765
  call void @add_dependence_list_and_free(%struct.deps* %332, %struct.rtx_def* %333, %struct.rtx_def** %clobbers465, i32 0, i32 11), !dbg !4766
  %335 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4767
  %readonly466 = getelementptr inbounds %struct.deps, %struct.deps* %335, i32 0, i32 18, !dbg !4769
  %bf.load467 = load i8, i8* %readonly466, align 4, !dbg !4769
  %bf.clear468 = and i8 %bf.load467, 1, !dbg !4769
  %bf.cast469 = zext i8 %bf.clear468 to i32, !dbg !4769
  %tobool470 = icmp ne i32 %bf.cast469, 0, !dbg !4767
  br i1 %tobool470, label %if.end477, label %if.then471, !dbg !4770

if.then471:                                       ; preds = %if.then461
  %336 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4771
  %337 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4773
  %sets472 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %337, i32 0, i32 1, !dbg !4774
  %338 = load %struct.rtx_def*, %struct.rtx_def** %sets472, align 8, !dbg !4774
  %call473 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %336, %struct.rtx_def* %338), !dbg !4775
  %339 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4776
  %sets474 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %339, i32 0, i32 1, !dbg !4777
  store %struct.rtx_def* %call473, %struct.rtx_def** %sets474, align 8, !dbg !4778
  %340 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4779
  %clobbers_length475 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %340, i32 0, i32 5, !dbg !4780
  store i32 0, i32* %clobbers_length475, align 4, !dbg !4781
  %341 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4782
  %uses_length476 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %341, i32 0, i32 4, !dbg !4783
  store i32 0, i32* %uses_length476, align 8, !dbg !4784
  br label %if.end477, !dbg !4785

if.end477:                                        ; preds = %if.then471, %if.then461
  br label %if.end482, !dbg !4786

if.else478:                                       ; preds = %lor.lhs.false455
  %342 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4787
  %343 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4789
  %sets479 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %343, i32 0, i32 1, !dbg !4790
  %344 = load %struct.rtx_def*, %struct.rtx_def** %sets479, align 8, !dbg !4790
  call void @add_dependence_list(%struct.rtx_def* %342, %struct.rtx_def* %344, i32 0, i32 11), !dbg !4791
  %345 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4792
  %346 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4793
  %implicit_sets480 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %346, i32 0, i32 2, !dbg !4794
  %347 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets480, align 8, !dbg !4794
  call void @add_dependence_list(%struct.rtx_def* %345, %struct.rtx_def* %347, i32 0, i32 12), !dbg !4795
  %348 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4796
  %349 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4797
  %uses481 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %349, i32 0, i32 0, !dbg !4798
  %350 = load %struct.rtx_def*, %struct.rtx_def** %uses481, align 8, !dbg !4798
  call void @add_dependence_list(%struct.rtx_def* %348, %struct.rtx_def* %350, i32 0, i32 12), !dbg !4799
  br label %if.end482

if.end482:                                        ; preds = %if.else478, %if.end477
  %351 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4800
  %readonly483 = getelementptr inbounds %struct.deps, %struct.deps* %351, i32 0, i32 18, !dbg !4802
  %bf.load484 = load i8, i8* %readonly483, align 4, !dbg !4802
  %bf.clear485 = and i8 %bf.load484, 1, !dbg !4802
  %bf.cast486 = zext i8 %bf.clear485 to i32, !dbg !4802
  %tobool487 = icmp ne i32 %bf.cast486, 0, !dbg !4800
  br i1 %tobool487, label %if.end494, label %if.then488, !dbg !4803

if.then488:                                       ; preds = %if.end482
  %352 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4804
  %clobbers_length489 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %352, i32 0, i32 5, !dbg !4806
  %353 = load i32, i32* %clobbers_length489, align 4, !dbg !4807
  %inc490 = add nsw i32 %353, 1, !dbg !4807
  store i32 %inc490, i32* %clobbers_length489, align 4, !dbg !4807
  %354 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4808
  %355 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4809
  %clobbers491 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %355, i32 0, i32 3, !dbg !4810
  %356 = load %struct.rtx_def*, %struct.rtx_def** %clobbers491, align 8, !dbg !4810
  %call492 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %354, %struct.rtx_def* %356), !dbg !4811
  %357 = load %struct.deps_reg*, %struct.deps_reg** %reg_last447, align 8, !dbg !4812
  %clobbers493 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %357, i32 0, i32 3, !dbg !4813
  store %struct.rtx_def* %call492, %struct.rtx_def** %clobbers493, align 8, !dbg !4814
  br label %if.end494, !dbg !4815

if.end494:                                        ; preds = %if.then488, %if.end482
  br label %for.inc495, !dbg !4816

for.inc495:                                       ; preds = %if.end494
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4727
  br label %for.cond443, !dbg !4727, !llvm.loop !4817

for.end496:                                       ; preds = %for.cond443
  %358 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4819
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %358, i32 0, i32* %i), !dbg !4819
  br label %for.cond497, !dbg !4819

for.cond497:                                      ; preds = %for.inc523, %for.end496
  %call498 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4821
  %tobool499 = icmp ne i8 %call498, 0, !dbg !4819
  br i1 %tobool499, label %for.body500, label %for.end524, !dbg !4819

for.body500:                                      ; preds = %for.cond497
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last501, metadata !4823, metadata !DIExpression()), !dbg !4825
  %359 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4826
  %reg_last502 = getelementptr inbounds %struct.deps, %struct.deps* %359, i32 0, i32 14, !dbg !4827
  %360 = load %struct.deps_reg*, %struct.deps_reg** %reg_last502, align 8, !dbg !4827
  %361 = load i32, i32* %i, align 4, !dbg !4828
  %idxprom503 = zext i32 %361 to i64, !dbg !4826
  %arrayidx504 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %360, i64 %idxprom503, !dbg !4826
  store %struct.deps_reg* %arrayidx504, %struct.deps_reg** %reg_last501, align 8, !dbg !4825
  %362 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4829
  %363 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4830
  %364 = load %struct.deps_reg*, %struct.deps_reg** %reg_last501, align 8, !dbg !4831
  %sets505 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %364, i32 0, i32 1, !dbg !4832
  call void @add_dependence_list_and_free(%struct.deps* %362, %struct.rtx_def* %363, %struct.rtx_def** %sets505, i32 0, i32 11), !dbg !4833
  %365 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4834
  %366 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4835
  %367 = load %struct.deps_reg*, %struct.deps_reg** %reg_last501, align 8, !dbg !4836
  %implicit_sets506 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %367, i32 0, i32 2, !dbg !4837
  call void @add_dependence_list_and_free(%struct.deps* %365, %struct.rtx_def* %366, %struct.rtx_def** %implicit_sets506, i32 0, i32 12), !dbg !4838
  %368 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4839
  %369 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4840
  %370 = load %struct.deps_reg*, %struct.deps_reg** %reg_last501, align 8, !dbg !4841
  %clobbers507 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %370, i32 0, i32 3, !dbg !4842
  call void @add_dependence_list_and_free(%struct.deps* %368, %struct.rtx_def* %369, %struct.rtx_def** %clobbers507, i32 0, i32 11), !dbg !4843
  %371 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4844
  %372 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4845
  %373 = load %struct.deps_reg*, %struct.deps_reg** %reg_last501, align 8, !dbg !4846
  %uses508 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %373, i32 0, i32 0, !dbg !4847
  call void @add_dependence_list_and_free(%struct.deps* %371, %struct.rtx_def* %372, %struct.rtx_def** %uses508, i32 0, i32 12), !dbg !4848
  %374 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4849
  %readonly509 = getelementptr inbounds %struct.deps, %struct.deps* %374, i32 0, i32 18, !dbg !4851
  %bf.load510 = load i8, i8* %readonly509, align 4, !dbg !4851
  %bf.clear511 = and i8 %bf.load510, 1, !dbg !4851
  %bf.cast512 = zext i8 %bf.clear511 to i32, !dbg !4851
  %tobool513 = icmp ne i32 %bf.cast512, 0, !dbg !4849
  br i1 %tobool513, label %if.end522, label %if.then514, !dbg !4852

if.then514:                                       ; preds = %for.body500
  %375 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4853
  %376 = load %struct.deps_reg*, %struct.deps_reg** %reg_last501, align 8, !dbg !4855
  %sets515 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %376, i32 0, i32 1, !dbg !4856
  %377 = load %struct.rtx_def*, %struct.rtx_def** %sets515, align 8, !dbg !4856
  %call516 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %375, %struct.rtx_def* %377), !dbg !4857
  %378 = load %struct.deps_reg*, %struct.deps_reg** %reg_last501, align 8, !dbg !4858
  %sets517 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %378, i32 0, i32 1, !dbg !4859
  store %struct.rtx_def* %call516, %struct.rtx_def** %sets517, align 8, !dbg !4860
  %379 = load %struct.deps_reg*, %struct.deps_reg** %reg_last501, align 8, !dbg !4861
  %uses_length518 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %379, i32 0, i32 4, !dbg !4862
  store i32 0, i32* %uses_length518, align 8, !dbg !4863
  %380 = load %struct.deps_reg*, %struct.deps_reg** %reg_last501, align 8, !dbg !4864
  %clobbers_length519 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %380, i32 0, i32 5, !dbg !4865
  store i32 0, i32* %clobbers_length519, align 4, !dbg !4866
  %381 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4867
  %reg_conditional_sets520 = getelementptr inbounds %struct.deps, %struct.deps* %381, i32 0, i32 16, !dbg !4867
  %382 = load i32, i32* %i, align 4, !dbg !4867
  %call521 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %reg_conditional_sets520, i32 %382), !dbg !4867
  br label %if.end522, !dbg !4868

if.end522:                                        ; preds = %if.then514, %for.body500
  br label %for.inc523, !dbg !4869

for.inc523:                                       ; preds = %if.end522
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4821
  br label %for.cond497, !dbg !4821, !llvm.loop !4870

for.end524:                                       ; preds = %for.cond497
  br label %if.end525

if.end525:                                        ; preds = %for.end524, %for.end441
  br label %if.end526

if.end526:                                        ; preds = %if.end525, %if.end332
  store i32 0, i32* %i, align 4, !dbg !4872
  br label %for.cond527, !dbg !4874

for.cond527:                                      ; preds = %for.inc554, %if.end526
  %383 = load i32, i32* %i, align 4, !dbg !4875
  %cmp528 = icmp ult i32 %383, 53, !dbg !4877
  br i1 %cmp528, label %for.body530, label %for.end556, !dbg !4878

for.body530:                                      ; preds = %for.cond527
  %384 = load i64, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4879
  %385 = load i32, i32* %i, align 4, !dbg !4879
  %sh_prom531 = zext i32 %385 to i64, !dbg !4879
  %shl532 = shl i64 1, %sh_prom531, !dbg !4879
  %and533 = and i64 %384, %shl532, !dbg !4879
  %tobool534 = icmp ne i64 %and533, 0, !dbg !4879
  br i1 %tobool534, label %if.then535, label %if.end553, !dbg !4881

if.then535:                                       ; preds = %for.body530
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last536, metadata !4882, metadata !DIExpression()), !dbg !4884
  %386 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4885
  %reg_last537 = getelementptr inbounds %struct.deps, %struct.deps* %386, i32 0, i32 14, !dbg !4886
  %387 = load %struct.deps_reg*, %struct.deps_reg** %reg_last537, align 8, !dbg !4886
  %388 = load i32, i32* %i, align 4, !dbg !4887
  %idxprom538 = zext i32 %388 to i64, !dbg !4885
  %arrayidx539 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %387, i64 %idxprom538, !dbg !4885
  store %struct.deps_reg* %arrayidx539, %struct.deps_reg** %reg_last536, align 8, !dbg !4884
  %389 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4888
  %390 = load %struct.deps_reg*, %struct.deps_reg** %reg_last536, align 8, !dbg !4889
  %sets540 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %390, i32 0, i32 1, !dbg !4890
  %391 = load %struct.rtx_def*, %struct.rtx_def** %sets540, align 8, !dbg !4890
  call void @add_dependence_list(%struct.rtx_def* %389, %struct.rtx_def* %391, i32 0, i32 12), !dbg !4891
  %392 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4892
  %393 = load %struct.deps_reg*, %struct.deps_reg** %reg_last536, align 8, !dbg !4893
  %clobbers541 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %393, i32 0, i32 3, !dbg !4894
  %394 = load %struct.rtx_def*, %struct.rtx_def** %clobbers541, align 8, !dbg !4894
  call void @add_dependence_list(%struct.rtx_def* %392, %struct.rtx_def* %394, i32 0, i32 12), !dbg !4895
  %395 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4896
  %396 = load %struct.deps_reg*, %struct.deps_reg** %reg_last536, align 8, !dbg !4897
  %uses542 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %396, i32 0, i32 0, !dbg !4898
  %397 = load %struct.rtx_def*, %struct.rtx_def** %uses542, align 8, !dbg !4898
  call void @add_dependence_list(%struct.rtx_def* %395, %struct.rtx_def* %397, i32 0, i32 12), !dbg !4899
  %398 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4900
  %readonly543 = getelementptr inbounds %struct.deps, %struct.deps* %398, i32 0, i32 18, !dbg !4902
  %bf.load544 = load i8, i8* %readonly543, align 4, !dbg !4902
  %bf.clear545 = and i8 %bf.load544, 1, !dbg !4902
  %bf.cast546 = zext i8 %bf.clear545 to i32, !dbg !4902
  %tobool547 = icmp ne i32 %bf.cast546, 0, !dbg !4900
  br i1 %tobool547, label %if.end552, label %if.then548, !dbg !4903

if.then548:                                       ; preds = %if.then535
  %399 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4904
  %400 = load %struct.deps_reg*, %struct.deps_reg** %reg_last536, align 8, !dbg !4905
  %implicit_sets549 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %400, i32 0, i32 2, !dbg !4906
  %401 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets549, align 8, !dbg !4906
  %call550 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %399, %struct.rtx_def* %401), !dbg !4907
  %402 = load %struct.deps_reg*, %struct.deps_reg** %reg_last536, align 8, !dbg !4908
  %implicit_sets551 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %402, i32 0, i32 2, !dbg !4909
  store %struct.rtx_def* %call550, %struct.rtx_def** %implicit_sets551, align 8, !dbg !4910
  br label %if.end552, !dbg !4908

if.end552:                                        ; preds = %if.then548, %if.then535
  br label %if.end553, !dbg !4911

if.end553:                                        ; preds = %if.end552, %for.body530
  br label %for.inc554, !dbg !4879

for.inc554:                                       ; preds = %if.end553
  %403 = load i32, i32* %i, align 4, !dbg !4912
  %inc555 = add i32 %403, 1, !dbg !4912
  store i32 %inc555, i32* %i, align 4, !dbg !4912
  br label %for.cond527, !dbg !4913, !llvm.loop !4914

for.end556:                                       ; preds = %for.cond527
  %404 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4916
  %readonly557 = getelementptr inbounds %struct.deps, %struct.deps* %404, i32 0, i32 18, !dbg !4918
  %bf.load558 = load i8, i8* %readonly557, align 4, !dbg !4918
  %bf.clear559 = and i8 %bf.load558, 1, !dbg !4918
  %bf.cast560 = zext i8 %bf.clear559 to i32, !dbg !4918
  %tobool561 = icmp ne i32 %bf.cast560, 0, !dbg !4916
  br i1 %tobool561, label %if.end588, label %if.then562, !dbg !4919

if.then562:                                       ; preds = %for.end556
  %405 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4920
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %405, i32 0, i32 15, !dbg !4920
  %406 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4920
  %call563 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %reg_last_in_use, %struct.bitmap_head_def* %406), !dbg !4920
  %407 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4922
  %reg_last_in_use564 = getelementptr inbounds %struct.deps, %struct.deps* %407, i32 0, i32 15, !dbg !4922
  %408 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !4922
  %call565 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %reg_last_in_use564, %struct.bitmap_head_def* %408), !dbg !4922
  %409 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4923
  %reg_last_in_use566 = getelementptr inbounds %struct.deps, %struct.deps* %409, i32 0, i32 15, !dbg !4923
  %410 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4923
  %call567 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %reg_last_in_use566, %struct.bitmap_head_def* %410), !dbg !4923
  store i32 0, i32* %i, align 4, !dbg !4924
  br label %for.cond568, !dbg !4926

for.cond568:                                      ; preds = %for.inc585, %if.then562
  %411 = load i32, i32* %i, align 4, !dbg !4927
  %cmp569 = icmp ult i32 %411, 53, !dbg !4929
  br i1 %cmp569, label %for.body571, label %for.end587, !dbg !4930

for.body571:                                      ; preds = %for.cond568
  %412 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !4931
  %413 = load i32, i32* %i, align 4, !dbg !4931
  %sh_prom572 = zext i32 %413 to i64, !dbg !4931
  %shl573 = shl i64 1, %sh_prom572, !dbg !4931
  %and574 = and i64 %412, %shl573, !dbg !4931
  %tobool575 = icmp ne i64 %and574, 0, !dbg !4931
  br i1 %tobool575, label %if.then581, label %lor.lhs.false576, !dbg !4933

lor.lhs.false576:                                 ; preds = %for.body571
  %414 = load i64, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4934
  %415 = load i32, i32* %i, align 4, !dbg !4934
  %sh_prom577 = zext i32 %415 to i64, !dbg !4934
  %shl578 = shl i64 1, %sh_prom577, !dbg !4934
  %and579 = and i64 %414, %shl578, !dbg !4934
  %tobool580 = icmp ne i64 %and579, 0, !dbg !4934
  br i1 %tobool580, label %if.then581, label %if.end584, !dbg !4935

if.then581:                                       ; preds = %lor.lhs.false576, %for.body571
  %416 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4936
  %reg_last_in_use582 = getelementptr inbounds %struct.deps, %struct.deps* %416, i32 0, i32 15, !dbg !4936
  %417 = load i32, i32* %i, align 4, !dbg !4936
  %call583 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %reg_last_in_use582, i32 %417), !dbg !4936
  br label %if.end584, !dbg !4936

if.end584:                                        ; preds = %if.then581, %lor.lhs.false576
  br label %for.inc585, !dbg !4934

for.inc585:                                       ; preds = %if.end584
  %418 = load i32, i32* %i, align 4, !dbg !4937
  %inc586 = add i32 %418, 1, !dbg !4937
  store i32 %inc586, i32* %i, align 4, !dbg !4937
  br label %for.cond568, !dbg !4938, !llvm.loop !4939

for.end587:                                       ; preds = %for.cond568
  %419 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4941
  %420 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4942
  %last_reg_pending_barrier = getelementptr inbounds %struct.deps, %struct.deps* %420, i32 0, i32 17, !dbg !4943
  store i32 %419, i32* %last_reg_pending_barrier, align 8, !dbg !4944
  br label %if.end588, !dbg !4945

if.end588:                                        ; preds = %for.end587, %for.end556
  %421 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !4946
  call void @bitmap_clear(%struct.bitmap_head_def* %421), !dbg !4946
  %422 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !4947
  call void @bitmap_clear(%struct.bitmap_head_def* %422), !dbg !4947
  %423 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !4948
  call void @bitmap_clear(%struct.bitmap_head_def* %423), !dbg !4948
  store i64 0, i64* @implicit_reg_pending_clobbers, align 8, !dbg !4949
  store i64 0, i64* @implicit_reg_pending_uses, align 8, !dbg !4950
  %424 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4951
  %tobool589 = icmp ne i32 %424, 0, !dbg !4951
  br i1 %tobool589, label %if.then590, label %if.end691, !dbg !4953

if.then590:                                       ; preds = %if.end588
  %425 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4954
  %call591 = call zeroext i8 @sched_has_condition_p(%struct.rtx_def* %425), !dbg !4957
  %tobool592 = icmp ne i8 %call591, 0, !dbg !4957
  br i1 %tobool592, label %if.then593, label %if.else614, !dbg !4958

if.then593:                                       ; preds = %if.then590
  %426 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4959
  %reg_last_in_use594 = getelementptr inbounds %struct.deps, %struct.deps* %426, i32 0, i32 15, !dbg !4959
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %reg_last_in_use594, i32 0, i32* %i), !dbg !4959
  br label %for.cond595, !dbg !4959

for.cond595:                                      ; preds = %for.inc612, %if.then593
  %call596 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4962
  %tobool597 = icmp ne i8 %call596, 0, !dbg !4959
  br i1 %tobool597, label %for.body598, label %for.end613, !dbg !4959

for.body598:                                      ; preds = %for.cond595
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last599, metadata !4964, metadata !DIExpression()), !dbg !4966
  %427 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4967
  %reg_last600 = getelementptr inbounds %struct.deps, %struct.deps* %427, i32 0, i32 14, !dbg !4968
  %428 = load %struct.deps_reg*, %struct.deps_reg** %reg_last600, align 8, !dbg !4968
  %429 = load i32, i32* %i, align 4, !dbg !4969
  %idxprom601 = zext i32 %429 to i64, !dbg !4967
  %arrayidx602 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %428, i64 %idxprom601, !dbg !4967
  store %struct.deps_reg* %arrayidx602, %struct.deps_reg** %reg_last599, align 8, !dbg !4966
  %430 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4970
  %431 = load %struct.deps_reg*, %struct.deps_reg** %reg_last599, align 8, !dbg !4971
  %uses603 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %431, i32 0, i32 0, !dbg !4972
  %432 = load %struct.rtx_def*, %struct.rtx_def** %uses603, align 8, !dbg !4972
  call void @add_dependence_list(%struct.rtx_def* %430, %struct.rtx_def* %432, i32 0, i32 12), !dbg !4973
  %433 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4974
  %434 = load %struct.deps_reg*, %struct.deps_reg** %reg_last599, align 8, !dbg !4975
  %sets604 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %434, i32 0, i32 1, !dbg !4976
  %435 = load %struct.rtx_def*, %struct.rtx_def** %sets604, align 8, !dbg !4976
  %436 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4977
  %cmp605 = icmp eq i32 %436, 2, !dbg !4978
  %437 = zext i1 %cmp605 to i64, !dbg !4977
  %cond = select i1 %cmp605, i32 0, i32 12, !dbg !4977
  call void @add_dependence_list(%struct.rtx_def* %433, %struct.rtx_def* %435, i32 0, i32 %cond), !dbg !4979
  %438 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4980
  %439 = load %struct.deps_reg*, %struct.deps_reg** %reg_last599, align 8, !dbg !4981
  %implicit_sets607 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %439, i32 0, i32 2, !dbg !4982
  %440 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets607, align 8, !dbg !4982
  call void @add_dependence_list(%struct.rtx_def* %438, %struct.rtx_def* %440, i32 0, i32 12), !dbg !4983
  %441 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4984
  %442 = load %struct.deps_reg*, %struct.deps_reg** %reg_last599, align 8, !dbg !4985
  %clobbers608 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %442, i32 0, i32 3, !dbg !4986
  %443 = load %struct.rtx_def*, %struct.rtx_def** %clobbers608, align 8, !dbg !4986
  %444 = load i32, i32* @reg_pending_barrier, align 4, !dbg !4987
  %cmp609 = icmp eq i32 %444, 2, !dbg !4988
  %445 = zext i1 %cmp609 to i64, !dbg !4987
  %cond611 = select i1 %cmp609, i32 0, i32 12, !dbg !4987
  call void @add_dependence_list(%struct.rtx_def* %441, %struct.rtx_def* %443, i32 0, i32 %cond611), !dbg !4989
  br label %for.inc612, !dbg !4990

for.inc612:                                       ; preds = %for.body598
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4962
  br label %for.cond595, !dbg !4962, !llvm.loop !4991

for.end613:                                       ; preds = %for.cond595
  br label %if.end645, !dbg !4993

if.else614:                                       ; preds = %if.then590
  %446 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !4994
  %reg_last_in_use615 = getelementptr inbounds %struct.deps, %struct.deps* %446, i32 0, i32 15, !dbg !4994
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %reg_last_in_use615, i32 0, i32* %i), !dbg !4994
  br label %for.cond616, !dbg !4994

for.cond616:                                      ; preds = %for.inc643, %if.else614
  %call617 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4997
  %tobool618 = icmp ne i8 %call617, 0, !dbg !4994
  br i1 %tobool618, label %for.body619, label %for.end644, !dbg !4994

for.body619:                                      ; preds = %for.cond616
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last620, metadata !4999, metadata !DIExpression()), !dbg !5001
  %447 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5002
  %reg_last621 = getelementptr inbounds %struct.deps, %struct.deps* %447, i32 0, i32 14, !dbg !5003
  %448 = load %struct.deps_reg*, %struct.deps_reg** %reg_last621, align 8, !dbg !5003
  %449 = load i32, i32* %i, align 4, !dbg !5004
  %idxprom622 = zext i32 %449 to i64, !dbg !5002
  %arrayidx623 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %448, i64 %idxprom622, !dbg !5002
  store %struct.deps_reg* %arrayidx623, %struct.deps_reg** %reg_last620, align 8, !dbg !5001
  %450 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5005
  %451 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5006
  %452 = load %struct.deps_reg*, %struct.deps_reg** %reg_last620, align 8, !dbg !5007
  %uses624 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %452, i32 0, i32 0, !dbg !5008
  call void @add_dependence_list_and_free(%struct.deps* %450, %struct.rtx_def* %451, %struct.rtx_def** %uses624, i32 0, i32 12), !dbg !5009
  %453 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5010
  %454 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5011
  %455 = load %struct.deps_reg*, %struct.deps_reg** %reg_last620, align 8, !dbg !5012
  %sets625 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %455, i32 0, i32 1, !dbg !5013
  %456 = load i32, i32* @reg_pending_barrier, align 4, !dbg !5014
  %cmp626 = icmp eq i32 %456, 2, !dbg !5015
  %457 = zext i1 %cmp626 to i64, !dbg !5014
  %cond628 = select i1 %cmp626, i32 0, i32 12, !dbg !5014
  call void @add_dependence_list_and_free(%struct.deps* %453, %struct.rtx_def* %454, %struct.rtx_def** %sets625, i32 0, i32 %cond628), !dbg !5016
  %458 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5017
  %459 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5018
  %460 = load %struct.deps_reg*, %struct.deps_reg** %reg_last620, align 8, !dbg !5019
  %implicit_sets629 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %460, i32 0, i32 2, !dbg !5020
  call void @add_dependence_list_and_free(%struct.deps* %458, %struct.rtx_def* %459, %struct.rtx_def** %implicit_sets629, i32 0, i32 12), !dbg !5021
  %461 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5022
  %462 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5023
  %463 = load %struct.deps_reg*, %struct.deps_reg** %reg_last620, align 8, !dbg !5024
  %clobbers630 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %463, i32 0, i32 3, !dbg !5025
  %464 = load i32, i32* @reg_pending_barrier, align 4, !dbg !5026
  %cmp631 = icmp eq i32 %464, 2, !dbg !5027
  %465 = zext i1 %cmp631 to i64, !dbg !5026
  %cond633 = select i1 %cmp631, i32 0, i32 12, !dbg !5026
  call void @add_dependence_list_and_free(%struct.deps* %461, %struct.rtx_def* %462, %struct.rtx_def** %clobbers630, i32 0, i32 %cond633), !dbg !5028
  %466 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5029
  %readonly634 = getelementptr inbounds %struct.deps, %struct.deps* %466, i32 0, i32 18, !dbg !5031
  %bf.load635 = load i8, i8* %readonly634, align 4, !dbg !5031
  %bf.clear636 = and i8 %bf.load635, 1, !dbg !5031
  %bf.cast637 = zext i8 %bf.clear636 to i32, !dbg !5031
  %tobool638 = icmp ne i32 %bf.cast637, 0, !dbg !5029
  br i1 %tobool638, label %if.end642, label %if.then639, !dbg !5032

if.then639:                                       ; preds = %for.body619
  %467 = load %struct.deps_reg*, %struct.deps_reg** %reg_last620, align 8, !dbg !5033
  %uses_length640 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %467, i32 0, i32 4, !dbg !5035
  store i32 0, i32* %uses_length640, align 8, !dbg !5036
  %468 = load %struct.deps_reg*, %struct.deps_reg** %reg_last620, align 8, !dbg !5037
  %clobbers_length641 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %468, i32 0, i32 5, !dbg !5038
  store i32 0, i32* %clobbers_length641, align 4, !dbg !5039
  br label %if.end642, !dbg !5040

if.end642:                                        ; preds = %if.then639, %for.body619
  br label %for.inc643, !dbg !5041

for.inc643:                                       ; preds = %if.end642
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !4997
  br label %for.cond616, !dbg !4997, !llvm.loop !5042

for.end644:                                       ; preds = %for.cond616
  br label %if.end645

if.end645:                                        ; preds = %for.end644, %for.end613
  %469 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5044
  %readonly646 = getelementptr inbounds %struct.deps, %struct.deps* %469, i32 0, i32 18, !dbg !5046
  %bf.load647 = load i8, i8* %readonly646, align 4, !dbg !5046
  %bf.clear648 = and i8 %bf.load647, 1, !dbg !5046
  %bf.cast649 = zext i8 %bf.clear648 to i32, !dbg !5046
  %tobool650 = icmp ne i32 %bf.cast649, 0, !dbg !5044
  br i1 %tobool650, label %if.end668, label %if.then651, !dbg !5047

if.then651:                                       ; preds = %if.end645
  store i32 0, i32* %i, align 4, !dbg !5048
  br label %for.cond652, !dbg !5050

for.cond652:                                      ; preds = %for.inc665, %if.then651
  %470 = load i32, i32* %i, align 4, !dbg !5051
  %471 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5053
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %471, i32 0, i32 13, !dbg !5054
  %472 = load i32, i32* %max_reg, align 8, !dbg !5054
  %cmp653 = icmp ult i32 %470, %472, !dbg !5055
  br i1 %cmp653, label %for.body655, label %for.end667, !dbg !5056

for.body655:                                      ; preds = %for.cond652
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last656, metadata !5057, metadata !DIExpression()), !dbg !5059
  %473 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5060
  %reg_last657 = getelementptr inbounds %struct.deps, %struct.deps* %473, i32 0, i32 14, !dbg !5061
  %474 = load %struct.deps_reg*, %struct.deps_reg** %reg_last657, align 8, !dbg !5061
  %475 = load i32, i32* %i, align 4, !dbg !5062
  %idxprom658 = zext i32 %475 to i64, !dbg !5060
  %arrayidx659 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %474, i64 %idxprom658, !dbg !5060
  store %struct.deps_reg* %arrayidx659, %struct.deps_reg** %reg_last656, align 8, !dbg !5059
  %476 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5063
  %477 = load %struct.deps_reg*, %struct.deps_reg** %reg_last656, align 8, !dbg !5064
  %sets660 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %477, i32 0, i32 1, !dbg !5065
  %478 = load %struct.rtx_def*, %struct.rtx_def** %sets660, align 8, !dbg !5065
  %call661 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %476, %struct.rtx_def* %478), !dbg !5066
  %479 = load %struct.deps_reg*, %struct.deps_reg** %reg_last656, align 8, !dbg !5067
  %sets662 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %479, i32 0, i32 1, !dbg !5068
  store %struct.rtx_def* %call661, %struct.rtx_def** %sets662, align 8, !dbg !5069
  %480 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5070
  %reg_last_in_use663 = getelementptr inbounds %struct.deps, %struct.deps* %480, i32 0, i32 15, !dbg !5070
  %481 = load i32, i32* %i, align 4, !dbg !5070
  %call664 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %reg_last_in_use663, i32 %481), !dbg !5070
  br label %for.inc665, !dbg !5071

for.inc665:                                       ; preds = %for.body655
  %482 = load i32, i32* %i, align 4, !dbg !5072
  %inc666 = add i32 %482, 1, !dbg !5072
  store i32 %inc666, i32* %i, align 4, !dbg !5072
  br label %for.cond652, !dbg !5073, !llvm.loop !5074

for.end667:                                       ; preds = %for.cond652
  br label %if.end668, !dbg !5075

if.end668:                                        ; preds = %for.end667, %if.end645
  %483 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5076
  %484 = bitcast %struct.rtx_def* %483 to i32*, !dbg !5076
  %bf.load669 = load i32, i32* %484, align 8, !dbg !5076
  %bf.clear670 = and i32 %bf.load669, 65535, !dbg !5076
  %cmp671 = icmp eq i32 %bf.clear670, 9, !dbg !5076
  br i1 %cmp671, label %land.lhs.true673, label %if.end682, !dbg !5078

land.lhs.true673:                                 ; preds = %if.end668
  %call674 = call zeroext i8 @sel_sched_p(), !dbg !5079
  %conv675 = zext i8 %call674 to i32, !dbg !5079
  %tobool676 = icmp ne i32 %conv675, 0, !dbg !5079
  br i1 %tobool676, label %land.lhs.true677, label %if.then681, !dbg !5080

land.lhs.true677:                                 ; preds = %land.lhs.true673
  %485 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5081
  %call678 = call zeroext i8 @sel_insn_is_speculation_check(%struct.rtx_def* %485), !dbg !5082
  %conv679 = zext i8 %call678 to i32, !dbg !5082
  %tobool680 = icmp ne i32 %conv679, 0, !dbg !5082
  br i1 %tobool680, label %if.end682, label %if.then681, !dbg !5083

if.then681:                                       ; preds = %land.lhs.true677, %land.lhs.true673
  %486 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5084
  %487 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5085
  call void @flush_pending_lists(%struct.deps* %486, %struct.rtx_def* %487, i32 1, i32 1), !dbg !5086
  br label %if.end682, !dbg !5086

if.end682:                                        ; preds = %if.then681, %land.lhs.true677, %if.end668
  %488 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5087
  %readonly683 = getelementptr inbounds %struct.deps, %struct.deps* %488, i32 0, i32 18, !dbg !5089
  %bf.load684 = load i8, i8* %readonly683, align 4, !dbg !5089
  %bf.clear685 = and i8 %bf.load684, 1, !dbg !5089
  %bf.cast686 = zext i8 %bf.clear685 to i32, !dbg !5089
  %tobool687 = icmp ne i32 %bf.cast686, 0, !dbg !5087
  br i1 %tobool687, label %if.end690, label %if.then688, !dbg !5090

if.then688:                                       ; preds = %if.end682
  %489 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5091
  %reg_conditional_sets689 = getelementptr inbounds %struct.deps, %struct.deps* %489, i32 0, i32 16, !dbg !5091
  call void @bitmap_clear(%struct.bitmap_head_def* %reg_conditional_sets689), !dbg !5091
  br label %if.end690, !dbg !5091

if.end690:                                        ; preds = %if.then688, %if.end682
  store i32 0, i32* @reg_pending_barrier, align 4, !dbg !5092
  br label %if.end691, !dbg !5093

if.end691:                                        ; preds = %if.end690, %if.end588
  %490 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5094
  %in_post_call_group_p = getelementptr inbounds %struct.deps, %struct.deps* %490, i32 0, i32 11, !dbg !5096
  %491 = load i32, i32* %in_post_call_group_p, align 8, !dbg !5096
  %tobool692 = icmp ne i32 %491, 0, !dbg !5094
  br i1 %tobool692, label %if.then693, label %if.end876, !dbg !5097

if.then693:                                       ; preds = %if.end691
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp, metadata !5098, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !5101, metadata !DIExpression()), !dbg !5102
  %492 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5103
  %493 = bitcast %struct.rtx_def* %492 to i32*, !dbg !5103
  %bf.load694 = load i32, i32* %493, align 8, !dbg !5103
  %bf.clear695 = and i32 %bf.load694, 65535, !dbg !5103
  %cmp696 = icmp eq i32 %bf.clear695, 8, !dbg !5103
  br i1 %cmp696, label %cond.true, label %lor.lhs.false698, !dbg !5103

lor.lhs.false698:                                 ; preds = %if.then693
  %494 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5103
  %495 = bitcast %struct.rtx_def* %494 to i32*, !dbg !5103
  %bf.load699 = load i32, i32* %495, align 8, !dbg !5103
  %bf.clear700 = and i32 %bf.load699, 65535, !dbg !5103
  %cmp701 = icmp eq i32 %bf.clear700, 7, !dbg !5103
  br i1 %cmp701, label %cond.true, label %lor.lhs.false703, !dbg !5103

lor.lhs.false703:                                 ; preds = %lor.lhs.false698
  %496 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5103
  %497 = bitcast %struct.rtx_def* %496 to i32*, !dbg !5103
  %bf.load704 = load i32, i32* %497, align 8, !dbg !5103
  %bf.clear705 = and i32 %bf.load704, 65535, !dbg !5103
  %cmp706 = icmp eq i32 %bf.clear705, 9, !dbg !5103
  br i1 %cmp706, label %cond.true, label %lor.lhs.false708, !dbg !5103

lor.lhs.false708:                                 ; preds = %lor.lhs.false703
  %498 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5103
  %499 = bitcast %struct.rtx_def* %498 to i32*, !dbg !5103
  %bf.load709 = load i32, i32* %499, align 8, !dbg !5103
  %bf.clear710 = and i32 %bf.load709, 65535, !dbg !5103
  %cmp711 = icmp eq i32 %bf.clear710, 10, !dbg !5103
  br i1 %cmp711, label %cond.true, label %cond.false732, !dbg !5103

cond.true:                                        ; preds = %lor.lhs.false708, %lor.lhs.false703, %lor.lhs.false698, %if.then693
  %500 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5103
  %u713 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %500, i32 0, i32 1, !dbg !5103
  %fld714 = bitcast %union.u* %u713 to [1 x %union.rtunion_def]*, !dbg !5103
  %arrayidx715 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld714, i64 0, i64 5, !dbg !5103
  %rt_rtx716 = bitcast %union.rtunion_def* %arrayidx715 to %struct.rtx_def**, !dbg !5103
  %501 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx716, align 8, !dbg !5103
  %502 = bitcast %struct.rtx_def* %501 to i32*, !dbg !5103
  %bf.load717 = load i32, i32* %502, align 8, !dbg !5103
  %bf.clear718 = and i32 %bf.load717, 65535, !dbg !5103
  %cmp719 = icmp eq i32 %bf.clear718, 23, !dbg !5103
  br i1 %cmp719, label %cond.true721, label %cond.false, !dbg !5103

cond.true721:                                     ; preds = %cond.true
  %503 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5103
  %u722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %503, i32 0, i32 1, !dbg !5103
  %fld723 = bitcast %union.u* %u722 to [1 x %union.rtunion_def]*, !dbg !5103
  %arrayidx724 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld723, i64 0, i64 5, !dbg !5103
  %rt_rtx725 = bitcast %union.rtunion_def* %arrayidx724 to %struct.rtx_def**, !dbg !5103
  %504 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx725, align 8, !dbg !5103
  br label %cond.end, !dbg !5103

cond.false:                                       ; preds = %cond.true
  %505 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5103
  %506 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5103
  %u726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %506, i32 0, i32 1, !dbg !5103
  %fld727 = bitcast %union.u* %u726 to [1 x %union.rtunion_def]*, !dbg !5103
  %arrayidx728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i64 0, i64 5, !dbg !5103
  %rt_rtx729 = bitcast %union.rtunion_def* %arrayidx728 to %struct.rtx_def**, !dbg !5103
  %507 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx729, align 8, !dbg !5103
  %call730 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %505, %struct.rtx_def* %507), !dbg !5103
  br label %cond.end, !dbg !5103

cond.end:                                         ; preds = %cond.false, %cond.true721
  %cond731 = phi %struct.rtx_def* [ %504, %cond.true721 ], [ %call730, %cond.false ], !dbg !5103
  br label %cond.end733, !dbg !5103

cond.false732:                                    ; preds = %lor.lhs.false708
  br label %cond.end733, !dbg !5103

cond.end733:                                      ; preds = %cond.false732, %cond.end
  %cond734 = phi %struct.rtx_def* [ %cond731, %cond.end ], [ null, %cond.false732 ], !dbg !5103
  store %struct.rtx_def* %cond734, %struct.rtx_def** %set, align 8, !dbg !5102
  call void @llvm.dbg.declare(metadata i32* %src_regno, metadata !5104, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.declare(metadata i32* %dest_regno, metadata !5106, metadata !DIExpression()), !dbg !5107
  %508 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !5108
  %cmp735 = icmp eq %struct.rtx_def* %508, null, !dbg !5110
  br i1 %cmp735, label %if.then737, label %if.end744, !dbg !5111

if.then737:                                       ; preds = %cond.end733
  %509 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5112
  %510 = bitcast %struct.rtx_def* %509 to i32*, !dbg !5112
  %bf.load738 = load i32, i32* %510, align 8, !dbg !5112
  %bf.clear739 = and i32 %bf.load738, 65535, !dbg !5112
  %cmp740 = icmp eq i32 %bf.clear739, 7, !dbg !5112
  br i1 %cmp740, label %if.then742, label %if.else743, !dbg !5115

if.then742:                                       ; preds = %if.then737
  br label %debug_dont_end_call_group, !dbg !5116

if.else743:                                       ; preds = %if.then737
  br label %end_call_group, !dbg !5117

if.end744:                                        ; preds = %cond.end733
  %511 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !5118
  %u745 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %511, i32 0, i32 1, !dbg !5118
  %fld746 = bitcast %union.u* %u745 to [1 x %union.rtunion_def]*, !dbg !5118
  %arrayidx747 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld746, i64 0, i64 0, !dbg !5118
  %rt_rtx748 = bitcast %union.rtunion_def* %arrayidx747 to %struct.rtx_def**, !dbg !5118
  %512 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx748, align 8, !dbg !5118
  store %struct.rtx_def* %512, %struct.rtx_def** %tmp, align 8, !dbg !5119
  %513 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5120
  %514 = bitcast %struct.rtx_def* %513 to i32*, !dbg !5120
  %bf.load749 = load i32, i32* %514, align 8, !dbg !5120
  %bf.clear750 = and i32 %bf.load749, 65535, !dbg !5120
  %cmp751 = icmp eq i32 %bf.clear750, 39, !dbg !5122
  br i1 %cmp751, label %if.then753, label %if.end758, !dbg !5123

if.then753:                                       ; preds = %if.end744
  %515 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5124
  %u754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %515, i32 0, i32 1, !dbg !5124
  %fld755 = bitcast %union.u* %u754 to [1 x %union.rtunion_def]*, !dbg !5124
  %arrayidx756 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld755, i64 0, i64 0, !dbg !5124
  %rt_rtx757 = bitcast %union.rtunion_def* %arrayidx756 to %struct.rtx_def**, !dbg !5124
  %516 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx757, align 8, !dbg !5124
  store %struct.rtx_def* %516, %struct.rtx_def** %tmp, align 8, !dbg !5125
  br label %if.end758, !dbg !5126

if.end758:                                        ; preds = %if.then753, %if.end744
  %517 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5127
  %518 = bitcast %struct.rtx_def* %517 to i32*, !dbg !5127
  %bf.load759 = load i32, i32* %518, align 8, !dbg !5127
  %bf.clear760 = and i32 %bf.load759, 65535, !dbg !5127
  %cmp761 = icmp eq i32 %bf.clear760, 37, !dbg !5127
  br i1 %cmp761, label %if.then763, label %if.else765, !dbg !5129

if.then763:                                       ; preds = %if.end758
  %519 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5130
  %call764 = call i32 @rhs_regno(%struct.rtx_def* %519), !dbg !5130
  store i32 %call764, i32* %dest_regno, align 4, !dbg !5131
  br label %if.end766, !dbg !5132

if.else765:                                       ; preds = %if.end758
  br label %end_call_group, !dbg !5133

if.end766:                                        ; preds = %if.then763
  %520 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !5134
  %u767 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %520, i32 0, i32 1, !dbg !5134
  %fld768 = bitcast %union.u* %u767 to [1 x %union.rtunion_def]*, !dbg !5134
  %arrayidx769 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld768, i64 0, i64 1, !dbg !5134
  %rt_rtx770 = bitcast %union.rtunion_def* %arrayidx769 to %struct.rtx_def**, !dbg !5134
  %521 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx770, align 8, !dbg !5134
  store %struct.rtx_def* %521, %struct.rtx_def** %tmp, align 8, !dbg !5135
  %522 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5136
  %523 = bitcast %struct.rtx_def* %522 to i32*, !dbg !5136
  %bf.load771 = load i32, i32* %523, align 8, !dbg !5136
  %bf.clear772 = and i32 %bf.load771, 65535, !dbg !5136
  %cmp773 = icmp eq i32 %bf.clear772, 39, !dbg !5138
  br i1 %cmp773, label %if.then775, label %if.end780, !dbg !5139

if.then775:                                       ; preds = %if.end766
  %524 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5140
  %u776 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %524, i32 0, i32 1, !dbg !5140
  %fld777 = bitcast %union.u* %u776 to [1 x %union.rtunion_def]*, !dbg !5140
  %arrayidx778 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld777, i64 0, i64 0, !dbg !5140
  %rt_rtx779 = bitcast %union.rtunion_def* %arrayidx778 to %struct.rtx_def**, !dbg !5140
  %525 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx779, align 8, !dbg !5140
  store %struct.rtx_def* %525, %struct.rtx_def** %tmp, align 8, !dbg !5141
  br label %if.end780, !dbg !5142

if.end780:                                        ; preds = %if.then775, %if.end766
  %526 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5143
  %527 = bitcast %struct.rtx_def* %526 to i32*, !dbg !5143
  %bf.load781 = load i32, i32* %527, align 8, !dbg !5143
  %bf.clear782 = and i32 %bf.load781, 65535, !dbg !5143
  %cmp783 = icmp eq i32 %bf.clear782, 49, !dbg !5145
  br i1 %cmp783, label %land.lhs.true790, label %lor.lhs.false785, !dbg !5146

lor.lhs.false785:                                 ; preds = %if.end780
  %528 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5147
  %529 = bitcast %struct.rtx_def* %528 to i32*, !dbg !5147
  %bf.load786 = load i32, i32* %529, align 8, !dbg !5147
  %bf.clear787 = and i32 %bf.load786, 65535, !dbg !5147
  %cmp788 = icmp eq i32 %bf.clear787, 50, !dbg !5148
  br i1 %cmp788, label %land.lhs.true790, label %if.else811, !dbg !5149

land.lhs.true790:                                 ; preds = %lor.lhs.false785, %if.end780
  %530 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5150
  %u791 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %530, i32 0, i32 1, !dbg !5150
  %fld792 = bitcast %union.u* %u791 to [1 x %union.rtunion_def]*, !dbg !5150
  %arrayidx793 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld792, i64 0, i64 0, !dbg !5150
  %rt_rtx794 = bitcast %union.rtunion_def* %arrayidx793 to %struct.rtx_def**, !dbg !5150
  %531 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx794, align 8, !dbg !5150
  %532 = bitcast %struct.rtx_def* %531 to i32*, !dbg !5150
  %bf.load795 = load i32, i32* %532, align 8, !dbg !5150
  %bf.clear796 = and i32 %bf.load795, 65535, !dbg !5150
  %cmp797 = icmp eq i32 %bf.clear796, 37, !dbg !5150
  br i1 %cmp797, label %land.lhs.true799, label %if.else811, !dbg !5151

land.lhs.true799:                                 ; preds = %land.lhs.true790
  %533 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5152
  %u800 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %533, i32 0, i32 1, !dbg !5152
  %fld801 = bitcast %union.u* %u800 to [1 x %union.rtunion_def]*, !dbg !5152
  %arrayidx802 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld801, i64 0, i64 0, !dbg !5152
  %rt_rtx803 = bitcast %union.rtunion_def* %arrayidx802 to %struct.rtx_def**, !dbg !5152
  %534 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx803, align 8, !dbg !5152
  %call804 = call i32 @rhs_regno(%struct.rtx_def* %534), !dbg !5152
  %cmp805 = icmp eq i32 %call804, 7, !dbg !5153
  br i1 %cmp805, label %land.lhs.true807, label %if.else811, !dbg !5154

land.lhs.true807:                                 ; preds = %land.lhs.true799
  %535 = load i32, i32* %dest_regno, align 4, !dbg !5155
  %cmp808 = icmp eq i32 %535, 7, !dbg !5156
  br i1 %cmp808, label %if.then810, label %if.else811, !dbg !5157

if.then810:                                       ; preds = %land.lhs.true807
  store i32 7, i32* %src_regno, align 4, !dbg !5158
  br label %if.end820, !dbg !5159

if.else811:                                       ; preds = %land.lhs.true807, %land.lhs.true799, %land.lhs.true790, %lor.lhs.false785
  %536 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5160
  %537 = bitcast %struct.rtx_def* %536 to i32*, !dbg !5160
  %bf.load812 = load i32, i32* %537, align 8, !dbg !5160
  %bf.clear813 = and i32 %bf.load812, 65535, !dbg !5160
  %cmp814 = icmp eq i32 %bf.clear813, 37, !dbg !5160
  br i1 %cmp814, label %if.then816, label %if.else818, !dbg !5162

if.then816:                                       ; preds = %if.else811
  %538 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5163
  %call817 = call i32 @rhs_regno(%struct.rtx_def* %538), !dbg !5163
  store i32 %call817, i32* %src_regno, align 4, !dbg !5164
  br label %if.end819, !dbg !5165

if.else818:                                       ; preds = %if.else811
  br label %end_call_group, !dbg !5166

if.end819:                                        ; preds = %if.then816
  br label %if.end820

if.end820:                                        ; preds = %if.end819, %if.then810
  %539 = load i32, i32* %src_regno, align 4, !dbg !5167
  %cmp821 = icmp slt i32 %539, 53, !dbg !5169
  br i1 %cmp821, label %if.then826, label %lor.lhs.false823, !dbg !5170

lor.lhs.false823:                                 ; preds = %if.end820
  %540 = load i32, i32* %dest_regno, align 4, !dbg !5171
  %cmp824 = icmp slt i32 %540, 53, !dbg !5172
  br i1 %cmp824, label %if.then826, label %if.else866, !dbg !5173

if.then826:                                       ; preds = %lor.lhs.false823, %if.end820
  %541 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5174
  %readonly827 = getelementptr inbounds %struct.deps, %struct.deps* %541, i32 0, i32 18, !dbg !5177
  %bf.load828 = load i8, i8* %readonly827, align 4, !dbg !5177
  %bf.clear829 = and i8 %bf.load828, 1, !dbg !5177
  %bf.cast830 = zext i8 %bf.clear829 to i32, !dbg !5177
  %tobool831 = icmp ne i32 %bf.cast830, 0, !dbg !5174
  br i1 %tobool831, label %if.end838, label %land.lhs.true832, !dbg !5178

land.lhs.true832:                                 ; preds = %if.then826
  %542 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5179
  %in_post_call_group_p833 = getelementptr inbounds %struct.deps, %struct.deps* %542, i32 0, i32 11, !dbg !5180
  %543 = load i32, i32* %in_post_call_group_p833, align 8, !dbg !5180
  %cmp834 = icmp eq i32 %543, 2, !dbg !5181
  br i1 %cmp834, label %if.then836, label %if.end838, !dbg !5182

if.then836:                                       ; preds = %land.lhs.true832
  %544 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5183
  %in_post_call_group_p837 = getelementptr inbounds %struct.deps, %struct.deps* %544, i32 0, i32 11, !dbg !5184
  store i32 1, i32* %in_post_call_group_p837, align 8, !dbg !5185
  br label %if.end838, !dbg !5183

if.end838:                                        ; preds = %if.then836, %land.lhs.true832, %if.then826
  %call839 = call zeroext i8 @sel_sched_p(), !dbg !5186
  %tobool840 = icmp ne i8 %call839, 0, !dbg !5186
  br i1 %tobool840, label %lor.lhs.false841, label %if.then843, !dbg !5188

lor.lhs.false841:                                 ; preds = %if.end838
  %545 = load i32, i32* @sched_emulate_haifa_p, align 4, !dbg !5189
  %tobool842 = icmp ne i32 %545, 0, !dbg !5189
  br i1 %tobool842, label %if.then843, label %if.end865, !dbg !5190

if.then843:                                       ; preds = %lor.lhs.false841, %if.end838
  %546 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5191
  %547 = bitcast %struct.rtx_def* %546 to i32*, !dbg !5191
  %bf.load844 = load i32, i32* %547, align 8, !dbg !5193
  %bf.clear845 = and i32 %bf.load844, -268435457, !dbg !5193
  %bf.set = or i32 %bf.clear845, 268435456, !dbg !5193
  store i32 %bf.set, i32* %547, align 8, !dbg !5193
  %548 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5194
  %tobool846 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %548, null, !dbg !5194
  br i1 %tobool846, label %cond.true847, label %cond.false848, !dbg !5194

cond.true847:                                     ; preds = %if.then843
  %549 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5194
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %549, i32 0, i32 0, !dbg !5194
  br label %cond.end849, !dbg !5194

cond.false848:                                    ; preds = %if.then843
  br label %cond.end849, !dbg !5194

cond.end849:                                      ; preds = %cond.false848, %cond.true847
  %cond850 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true847 ], [ null, %cond.false848 ], !dbg !5194
  %550 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5194
  %tobool851 = icmp ne %struct.VEC_int_heap* %550, null, !dbg !5194
  br i1 %tobool851, label %cond.true852, label %cond.false854, !dbg !5194

cond.true852:                                     ; preds = %cond.end849
  %551 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5194
  %base853 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %551, i32 0, i32 0, !dbg !5194
  br label %cond.end855, !dbg !5194

cond.false854:                                    ; preds = %cond.end849
  br label %cond.end855, !dbg !5194

cond.end855:                                      ; preds = %cond.false854, %cond.true852
  %cond856 = phi %struct.VEC_int_base* [ %base853, %cond.true852 ], [ null, %cond.false854 ], !dbg !5194
  %552 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5194
  %u857 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %552, i32 0, i32 1, !dbg !5194
  %fld858 = bitcast %union.u* %u857 to [1 x %union.rtunion_def]*, !dbg !5194
  %arrayidx859 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld858, i64 0, i64 0, !dbg !5194
  %rt_int = bitcast %union.rtunion_def* %arrayidx859 to i32*, !dbg !5194
  %553 = load i32, i32* %rt_int, align 8, !dbg !5194
  %call860 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond856, i32 %553), !dbg !5194
  %call861 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond850, i32 %call860), !dbg !5194
  %cant_move = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call861, i32 0, i32 7, !dbg !5194
  %bf.load862 = load i8, i8* %cant_move, align 8, !dbg !5195
  %bf.clear863 = and i8 %bf.load862, -2, !dbg !5195
  %bf.set864 = or i8 %bf.clear863, 1, !dbg !5195
  store i8 %bf.set864, i8* %cant_move, align 8, !dbg !5195
  br label %if.end865, !dbg !5196

if.end865:                                        ; preds = %cond.end855, %lor.lhs.false841
  br label %if.end875, !dbg !5197

if.else866:                                       ; preds = %lor.lhs.false823
  br label %end_call_group, !dbg !5198

end_call_group:                                   ; preds = %if.else866, %if.else818, %if.else765, %if.else743
  call void @llvm.dbg.label(metadata !5199), !dbg !5201
  %554 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5202
  %readonly867 = getelementptr inbounds %struct.deps, %struct.deps* %554, i32 0, i32 18, !dbg !5204
  %bf.load868 = load i8, i8* %readonly867, align 4, !dbg !5204
  %bf.clear869 = and i8 %bf.load868, 1, !dbg !5204
  %bf.cast870 = zext i8 %bf.clear869 to i32, !dbg !5204
  %tobool871 = icmp ne i32 %bf.cast870, 0, !dbg !5202
  br i1 %tobool871, label %if.end874, label %if.then872, !dbg !5205

if.then872:                                       ; preds = %end_call_group
  %555 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5206
  %in_post_call_group_p873 = getelementptr inbounds %struct.deps, %struct.deps* %555, i32 0, i32 11, !dbg !5207
  store i32 0, i32* %in_post_call_group_p873, align 8, !dbg !5208
  br label %if.end874, !dbg !5206

if.end874:                                        ; preds = %if.then872, %end_call_group
  br label %if.end875

if.end875:                                        ; preds = %if.end874, %if.end865
  br label %if.end876, !dbg !5209

if.end876:                                        ; preds = %if.end875, %if.end691
  br label %debug_dont_end_call_group, !dbg !5096

debug_dont_end_call_group:                        ; preds = %if.end876, %if.then742
  call void @llvm.dbg.label(metadata !5210), !dbg !5211
  %556 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !5212
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %556, i32 0, i32 17, !dbg !5214
  %557 = load i32, i32* %flags, align 8, !dbg !5214
  %and877 = and i32 %557, 2, !dbg !5215
  %tobool878 = icmp ne i32 %and877, 0, !dbg !5215
  br i1 %tobool878, label %land.lhs.true879, label %if.end894, !dbg !5216

land.lhs.true879:                                 ; preds = %debug_dont_end_call_group
  %558 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5217
  %call880 = call zeroext i8 @sched_insn_is_legitimate_for_speculation_p(%struct.rtx_def* %558, i32 0), !dbg !5218
  %tobool881 = icmp ne i8 %call880, 0, !dbg !5218
  br i1 %tobool881, label %if.end894, label %if.then882, !dbg !5219

if.then882:                                       ; preds = %land.lhs.true879
  %call883 = call zeroext i8 @sel_sched_p(), !dbg !5220
  %tobool884 = icmp ne i8 %call883, 0, !dbg !5220
  br i1 %tobool884, label %if.then885, label %if.else886, !dbg !5223

if.then885:                                       ; preds = %if.then882
  %559 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5224
  call void @sel_mark_hard_insn(%struct.rtx_def* %559), !dbg !5225
  br label %if.end893, !dbg !5225

if.else886:                                       ; preds = %if.then882
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !5226, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !5229, metadata !DIExpression()), !dbg !5230
  %560 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5231
  call void @sd_iterator_start(%struct._sd_iterator* sret %tmp887, %struct.rtx_def* %560, i32 2), !dbg !5233
  %561 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !5233
  %562 = bitcast %struct._sd_iterator* %tmp887 to i8*, !dbg !5233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %561, i8* align 8 %562, i64 32, i1 false), !dbg !5233
  br label %for.cond888, !dbg !5234

for.cond888:                                      ; preds = %for.body891, %if.else886
  %call889 = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %sd_it, %struct._dep** %dep), !dbg !5235
  %tobool890 = icmp ne i8 %call889, 0, !dbg !5237
  br i1 %tobool890, label %for.body891, label %for.end892, !dbg !5237

for.body891:                                      ; preds = %for.cond888
  call void @change_spec_dep_to_hard(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it), !dbg !5238
  br label %for.cond888, !dbg !5239, !llvm.loop !5240

for.end892:                                       ; preds = %for.cond888
  br label %if.end893

if.end893:                                        ; preds = %for.end892, %if.then885
  br label %if.end894, !dbg !5242

if.end894:                                        ; preds = %if.end893, %land.lhs.true879, %debug_dont_end_call_group
  ret void, !dbg !5243
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_dependence_list_and_free(%struct.deps* %deps, %struct.rtx_def* %insn, %struct.rtx_def** %listp, i32 %uncond, i32 %dep_type) #0 !dbg !5244 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %listp.addr = alloca %struct.rtx_def**, align 8
  %uncond.addr = alloca i32, align 4
  %dep_type.addr = alloca i32, align 4
  %list = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !5248, metadata !DIExpression()), !dbg !5249
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5250, metadata !DIExpression()), !dbg !5251
  store %struct.rtx_def** %listp, %struct.rtx_def*** %listp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %listp.addr, metadata !5252, metadata !DIExpression()), !dbg !5253
  store i32 %uncond, i32* %uncond.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uncond.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  store i32 %dep_type, i32* %dep_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dep_type.addr, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %list, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !5260, metadata !DIExpression()), !dbg !5261
  %0 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5262
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %0, i32 0, i32 18, !dbg !5264
  %bf.load = load i8, i8* %readonly, align 4, !dbg !5264
  %bf.clear = and i8 %bf.load, 1, !dbg !5264
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5264
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5262
  br i1 %tobool, label %if.then, label %if.end, !dbg !5265

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5266
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !5268
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !5269
  %4 = load i32, i32* %uncond.addr, align 4, !dbg !5270
  %5 = load i32, i32* %dep_type.addr, align 4, !dbg !5271
  call void @add_dependence_list(%struct.rtx_def* %1, %struct.rtx_def* %3, i32 %4, i32 %5), !dbg !5272
  br label %for.end, !dbg !5273

if.end:                                           ; preds = %entry
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !5274
  %7 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8, !dbg !5276
  store %struct.rtx_def* %7, %struct.rtx_def** %list, align 8, !dbg !5277
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !5278
  store %struct.rtx_def* null, %struct.rtx_def** %8, align 8, !dbg !5279
  br label %for.cond, !dbg !5280

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !5281
  %tobool1 = icmp ne %struct.rtx_def* %9, null, !dbg !5283
  br i1 %tobool1, label %for.body, label %for.end, !dbg !5283

for.body:                                         ; preds = %for.cond
  %10 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !5284
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5284
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5284
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !5284
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5284
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5284
  store %struct.rtx_def* %11, %struct.rtx_def** %next, align 8, !dbg !5286
  %12 = load i32, i32* %uncond.addr, align 4, !dbg !5287
  %tobool2 = icmp ne i32 %12, 0, !dbg !5287
  br i1 %tobool2, label %if.then8, label %lor.lhs.false, !dbg !5289

lor.lhs.false:                                    ; preds = %for.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5290
  %14 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !5291
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !5291
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !5291
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 0, !dbg !5291
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !5291
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !5291
  %call = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %13, %struct.rtx_def* %15), !dbg !5292
  %tobool7 = icmp ne i8 %call, 0, !dbg !5292
  br i1 %tobool7, label %if.end13, label %if.then8, !dbg !5293

if.then8:                                         ; preds = %lor.lhs.false, %for.body
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5294
  %17 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !5295
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !5295
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !5295
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !5295
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5295
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !5295
  %19 = load i32, i32* %dep_type.addr, align 4, !dbg !5296
  call void @add_dependence(%struct.rtx_def* %16, %struct.rtx_def* %18, i32 %19), !dbg !5297
  br label %if.end13, !dbg !5297

if.end13:                                         ; preds = %if.then8, %lor.lhs.false
  %20 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !5298
  call void @free_INSN_LIST_node(%struct.rtx_def* %20), !dbg !5299
  br label %for.inc, !dbg !5300

for.inc:                                          ; preds = %if.end13
  %21 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !5301
  store %struct.rtx_def* %21, %struct.rtx_def** %list, align 8, !dbg !5302
  br label %for.cond, !dbg !5303, !llvm.loop !5304

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5306
}

declare dso_local void @free_INSN_LIST_list(%struct.rtx_def**) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @call_may_noreturn_p(%struct.rtx_def* %insn) #0 !dbg !5307 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %call = alloca %struct.rtx_def*, align 8
  %symbol = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5310, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %call, metadata !5312, metadata !DIExpression()), !dbg !5313
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5314
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5314
  %bf.load = load i32, i32* %1, align 8, !dbg !5314
  %bf.lshr = lshr i32 %bf.load, 26, !dbg !5314
  %bf.clear = and i32 %bf.lshr, 1, !dbg !5314
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !5314
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !5314

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5314
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5314
  %bf.load1 = load i32, i32* %3, align 8, !dbg !5314
  %bf.lshr2 = lshr i32 %bf.load1, 31, !dbg !5314
  %tobool3 = icmp ne i32 %bf.lshr2, 0, !dbg !5314
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !5316

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5317
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5317
  %bf.load4 = load i32, i32* %5, align 8, !dbg !5317
  %bf.lshr5 = lshr i32 %bf.load4, 25, !dbg !5317
  %bf.clear6 = and i32 %bf.lshr5, 1, !dbg !5317
  %tobool7 = icmp ne i32 %bf.clear6, 0, !dbg !5317
  br i1 %tobool7, label %if.end, label %if.then, !dbg !5318

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !5319
  br label %return, !dbg !5319

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5320
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5320
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5320
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !5320
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5320
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5320
  store %struct.rtx_def* %7, %struct.rtx_def** %call, align 8, !dbg !5321
  %8 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5322
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5322
  %bf.load8 = load i32, i32* %9, align 8, !dbg !5322
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !5322
  %cmp = icmp eq i32 %bf.clear9, 15, !dbg !5324
  br i1 %cmp, label %if.then10, label %if.end15, !dbg !5325

if.then10:                                        ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5326
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5326
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !5326
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !5326
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**, !dbg !5326
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5326
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i32 0, i32 1, !dbg !5326
  %arrayidx14 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 0, !dbg !5326
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx14, align 8, !dbg !5326
  store %struct.rtx_def* %12, %struct.rtx_def** %call, align 8, !dbg !5327
  br label %if.end15, !dbg !5328

if.end15:                                         ; preds = %if.then10, %if.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5329
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !5329
  %bf.load16 = load i32, i32* %14, align 8, !dbg !5329
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !5329
  %cmp18 = icmp eq i32 %bf.clear17, 23, !dbg !5331
  br i1 %cmp18, label %if.then19, label %if.end24, !dbg !5332

if.then19:                                        ; preds = %if.end15
  %15 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5333
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !5333
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !5333
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 1, !dbg !5333
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !5333
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !5333
  store %struct.rtx_def* %16, %struct.rtx_def** %call, align 8, !dbg !5334
  br label %if.end24, !dbg !5335

if.end24:                                         ; preds = %if.then19, %if.end15
  %17 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5336
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !5336
  %bf.load25 = load i32, i32* %18, align 8, !dbg !5336
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !5336
  %cmp27 = icmp eq i32 %bf.clear26, 26, !dbg !5338
  br i1 %cmp27, label %land.lhs.true28, label %if.end114, !dbg !5339

land.lhs.true28:                                  ; preds = %if.end24
  %19 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5340
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !5340
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !5340
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !5340
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !5340
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !5340
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !5340
  %bf.load33 = load i32, i32* %21, align 8, !dbg !5340
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !5340
  %cmp35 = icmp eq i32 %bf.clear34, 43, !dbg !5340
  br i1 %cmp35, label %land.lhs.true36, label %if.end114, !dbg !5341

land.lhs.true36:                                  ; preds = %land.lhs.true28
  %22 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5342
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !5342
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !5342
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 0, !dbg !5342
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !5342
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !5342
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !5342
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !5342
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 0, !dbg !5342
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !5342
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !5342
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !5342
  %bf.load45 = load i32, i32* %25, align 8, !dbg !5342
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !5342
  %cmp47 = icmp eq i32 %bf.clear46, 45, !dbg !5343
  br i1 %cmp47, label %if.then48, label %if.end114, !dbg !5344

if.then48:                                        ; preds = %land.lhs.true36
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %symbol, metadata !5345, metadata !DIExpression()), !dbg !5347
  %26 = load %struct.rtx_def*, %struct.rtx_def** %call, align 8, !dbg !5348
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !5348
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !5348
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !5348
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !5348
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !5348
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !5348
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !5348
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 0, !dbg !5348
  %rt_rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**, !dbg !5348
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !5348
  store %struct.rtx_def* %28, %struct.rtx_def** %symbol, align 8, !dbg !5347
  %29 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !5349
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !5349
  %bf.load57 = load i32, i32* %30, align 8, !dbg !5349
  %bf.lshr58 = lshr i32 %bf.load57, 26, !dbg !5349
  %bf.clear59 = and i32 %bf.lshr58, 1, !dbg !5349
  %tobool60 = icmp ne i32 %bf.clear59, 0, !dbg !5349
  br i1 %tobool60, label %cond.true, label %cond.false, !dbg !5351

cond.true:                                        ; preds = %if.then48
  br i1 false, label %land.lhs.true65, label %if.end113, !dbg !5349

cond.false:                                       ; preds = %if.then48
  %31 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !5349
  %u61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !5349
  %fld62 = bitcast %union.u* %u61 to [1 x %union.rtunion_def]*, !dbg !5349
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i64 0, i64 2, !dbg !5349
  %rt_tree = bitcast %union.rtunion_def* %arrayidx63 to %union.tree_node**, !dbg !5349
  %32 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !5349
  %tobool64 = icmp ne %union.tree_node* %32, null, !dbg !5349
  br i1 %tobool64, label %land.lhs.true65, label %if.end113, !dbg !5351

land.lhs.true65:                                  ; preds = %cond.false, %cond.true
  %33 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !5352
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !5352
  %bf.load66 = load i32, i32* %34, align 8, !dbg !5352
  %bf.lshr67 = lshr i32 %bf.load66, 26, !dbg !5352
  %bf.clear68 = and i32 %bf.lshr67, 1, !dbg !5352
  %tobool69 = icmp ne i32 %bf.clear68, 0, !dbg !5352
  br i1 %tobool69, label %cond.true70, label %cond.false71, !dbg !5352

cond.true70:                                      ; preds = %land.lhs.true65
  br label %cond.end, !dbg !5352

cond.false71:                                     ; preds = %land.lhs.true65
  %35 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !5352
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5352
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !5352
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 2, !dbg !5352
  %rt_tree75 = bitcast %union.rtunion_def* %arrayidx74 to %union.tree_node**, !dbg !5352
  %36 = load %union.tree_node*, %union.tree_node** %rt_tree75, align 8, !dbg !5352
  br label %cond.end, !dbg !5352

cond.end:                                         ; preds = %cond.false71, %cond.true70
  %cond = phi %union.tree_node* [ null, %cond.true70 ], [ %36, %cond.false71 ], !dbg !5352
  %base = bitcast %union.tree_node* %cond to %struct.tree_base*, !dbg !5352
  %37 = bitcast %struct.tree_base* %base to i64*, !dbg !5352
  %bf.load76 = load i64, i64* %37, align 8, !dbg !5352
  %bf.clear77 = and i64 %bf.load76, 65535, !dbg !5352
  %bf.cast = trunc i64 %bf.clear77 to i32, !dbg !5352
  %cmp78 = icmp eq i32 %bf.cast, 29, !dbg !5353
  br i1 %cmp78, label %if.then79, label %if.end113, !dbg !5354

if.then79:                                        ; preds = %cond.end
  %38 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !5355
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !5355
  %bf.load80 = load i32, i32* %39, align 8, !dbg !5355
  %bf.lshr81 = lshr i32 %bf.load80, 26, !dbg !5355
  %bf.clear82 = and i32 %bf.lshr81, 1, !dbg !5355
  %tobool83 = icmp ne i32 %bf.clear82, 0, !dbg !5355
  br i1 %tobool83, label %cond.true84, label %cond.false85, !dbg !5355

cond.true84:                                      ; preds = %if.then79
  br label %cond.end90, !dbg !5355

cond.false85:                                     ; preds = %if.then79
  %40 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !5355
  %u86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !5355
  %fld87 = bitcast %union.u* %u86 to [1 x %union.rtunion_def]*, !dbg !5355
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i64 0, i64 2, !dbg !5355
  %rt_tree89 = bitcast %union.rtunion_def* %arrayidx88 to %union.tree_node**, !dbg !5355
  %41 = load %union.tree_node*, %union.tree_node** %rt_tree89, align 8, !dbg !5355
  br label %cond.end90, !dbg !5355

cond.end90:                                       ; preds = %cond.false85, %cond.true84
  %cond91 = phi %union.tree_node* [ null, %cond.true84 ], [ %41, %cond.false85 ], !dbg !5355
  %function_decl = bitcast %union.tree_node* %cond91 to %struct.tree_function_decl*, !dbg !5355
  %built_in_class = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %function_decl, i32 0, i32 5, !dbg !5355
  %bf.load92 = load i32, i32* %built_in_class, align 8, !dbg !5355
  %bf.lshr93 = lshr i32 %bf.load92, 11, !dbg !5355
  %bf.clear94 = and i32 %bf.lshr93, 3, !dbg !5355
  %cmp95 = icmp eq i32 %bf.clear94, 3, !dbg !5358
  br i1 %cmp95, label %if.then96, label %if.end112, !dbg !5359

if.then96:                                        ; preds = %cond.end90
  %42 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !5360
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !5360
  %bf.load97 = load i32, i32* %43, align 8, !dbg !5360
  %bf.lshr98 = lshr i32 %bf.load97, 26, !dbg !5360
  %bf.clear99 = and i32 %bf.lshr98, 1, !dbg !5360
  %tobool100 = icmp ne i32 %bf.clear99, 0, !dbg !5360
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !5360

cond.true101:                                     ; preds = %if.then96
  br label %cond.end107, !dbg !5360

cond.false102:                                    ; preds = %if.then96
  %44 = load %struct.rtx_def*, %struct.rtx_def** %symbol, align 8, !dbg !5360
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !5360
  %fld104 = bitcast %union.u* %u103 to [1 x %union.rtunion_def]*, !dbg !5360
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i64 0, i64 2, !dbg !5360
  %rt_tree106 = bitcast %union.rtunion_def* %arrayidx105 to %union.tree_node**, !dbg !5360
  %45 = load %union.tree_node*, %union.tree_node** %rt_tree106, align 8, !dbg !5360
  br label %cond.end107, !dbg !5360

cond.end107:                                      ; preds = %cond.false102, %cond.true101
  %cond108 = phi %union.tree_node* [ null, %cond.true101 ], [ %45, %cond.false102 ], !dbg !5360
  %function_decl109 = bitcast %union.tree_node* %cond108 to %struct.tree_function_decl*, !dbg !5360
  %function_code = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %function_decl109, i32 0, i32 5, !dbg !5360
  %bf.load110 = load i32, i32* %function_code, align 8, !dbg !5360
  %bf.clear111 = and i32 %bf.load110, 2047, !dbg !5360
  switch i32 %bf.clear111, label %sw.default [
    i32 324, label %sw.bb
    i32 325, label %sw.bb
    i32 326, label %sw.bb
    i32 327, label %sw.bb
    i32 328, label %sw.bb
    i32 329, label %sw.bb
    i32 330, label %sw.bb
    i32 331, label %sw.bb
    i32 332, label %sw.bb
    i32 333, label %sw.bb
    i32 334, label %sw.bb
    i32 335, label %sw.bb
    i32 336, label %sw.bb
    i32 338, label %sw.bb
    i32 339, label %sw.bb
    i32 340, label %sw.bb
    i32 341, label %sw.bb
    i32 342, label %sw.bb
    i32 345, label %sw.bb
    i32 347, label %sw.bb
    i32 348, label %sw.bb
    i32 349, label %sw.bb
    i32 350, label %sw.bb
    i32 351, label %sw.bb
    i32 352, label %sw.bb
    i32 353, label %sw.bb
  ], !dbg !5361

sw.bb:                                            ; preds = %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107, %cond.end107
  store i8 0, i8* %retval, align 1, !dbg !5362
  br label %return, !dbg !5362

sw.default:                                       ; preds = %cond.end107
  br label %sw.epilog, !dbg !5364

sw.epilog:                                        ; preds = %sw.default
  br label %if.end112, !dbg !5365

if.end112:                                        ; preds = %sw.epilog, %cond.end90
  br label %if.end113, !dbg !5366

if.end113:                                        ; preds = %if.end112, %cond.end, %cond.false, %cond.true
  br label %if.end114, !dbg !5367

if.end114:                                        ; preds = %if.end113, %land.lhs.true36, %land.lhs.true28, %if.end24
  store i8 1, i8* %retval, align 1, !dbg !5368
  br label %return, !dbg !5368

return:                                           ; preds = %if.end114, %sw.bb, %if.then
  %46 = load i8, i8* %retval, align 1, !dbg !5369
  ret i8 %46, !dbg !5369
}

declare dso_local void @cselib_process_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @fixup_sched_groups(%struct.rtx_def* %insn) #0 !dbg !5370 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %prev_nonnote = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  %i = alloca %struct.rtx_def*, align 8
  %pro = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5371, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !5373, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !5375, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev_nonnote, metadata !5377, metadata !DIExpression()), !dbg !5378
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5379
  call void @sd_iterator_start(%struct._sd_iterator* sret %tmp, %struct.rtx_def* %0, i32 3), !dbg !5379
  %1 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !5379
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !5379
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false), !dbg !5379
  br label %for.cond, !dbg !5379

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %sd_it, %struct._dep** %dep), !dbg !5381
  %tobool = icmp ne i8 %call, 0, !dbg !5379
  br i1 %tobool, label %for.body, label %for.end, !dbg !5379

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %i, metadata !5383, metadata !DIExpression()), !dbg !5385
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5386
  store %struct.rtx_def* %3, %struct.rtx_def** %i, align 8, !dbg !5385
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pro, metadata !5387, metadata !DIExpression()), !dbg !5388
  %4 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5389
  %pro1 = getelementptr inbounds %struct._dep, %struct._dep* %4, i32 0, i32 0, !dbg !5389
  %5 = load %struct.rtx_def*, %struct.rtx_def** %pro1, align 8, !dbg !5389
  store %struct.rtx_def* %5, %struct.rtx_def** %pro, align 8, !dbg !5388
  br label %do.body, !dbg !5390

do.body:                                          ; preds = %lor.end, %for.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** %i, align 8, !dbg !5391
  %call2 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %6), !dbg !5393
  store %struct.rtx_def* %call2, %struct.rtx_def** %i, align 8, !dbg !5394
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !5395
  %8 = load %struct.rtx_def*, %struct.rtx_def** %i, align 8, !dbg !5397
  %cmp = icmp eq %struct.rtx_def* %7, %8, !dbg !5398
  br i1 %cmp, label %if.then, label %if.end, !dbg !5399

if.then:                                          ; preds = %do.body
  br label %next_link, !dbg !5400

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !5401

do.cond:                                          ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %i, align 8, !dbg !5402
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !5402
  %bf.load = load i32, i32* %10, align 8, !dbg !5402
  %bf.lshr = lshr i32 %bf.load, 28, !dbg !5402
  %bf.clear = and i32 %bf.lshr, 1, !dbg !5402
  %tobool3 = icmp ne i32 %bf.clear, 0, !dbg !5402
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !5403

lor.rhs:                                          ; preds = %do.cond
  %11 = load %struct.rtx_def*, %struct.rtx_def** %i, align 8, !dbg !5404
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5404
  %bf.load4 = load i32, i32* %12, align 8, !dbg !5404
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !5404
  %cmp6 = icmp eq i32 %bf.clear5, 7, !dbg !5404
  br label %lor.end, !dbg !5403

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %13 = phi i1 [ true, %do.cond ], [ %cmp6, %lor.rhs ]
  br i1 %13, label %do.body, label %do.end, !dbg !5401, !llvm.loop !5405

do.end:                                           ; preds = %lor.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %i, align 8, !dbg !5407
  %15 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !5409
  %call7 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %14, %struct.rtx_def* %15), !dbg !5410
  %tobool8 = icmp ne i8 %call7, 0, !dbg !5410
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !5411

if.then9:                                         ; preds = %do.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %i, align 8, !dbg !5412
  %17 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !5413
  %18 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5414
  %type = getelementptr inbounds %struct._dep, %struct._dep* %18, i32 0, i32 2, !dbg !5414
  %19 = load i32, i32* %type, align 8, !dbg !5414
  call void @add_dependence(%struct.rtx_def* %16, %struct.rtx_def* %17, i32 %19), !dbg !5415
  br label %if.end10, !dbg !5415

if.end10:                                         ; preds = %if.then9, %do.end
  br label %next_link, !dbg !5416

next_link:                                        ; preds = %if.end10, %if.then
  call void @llvm.dbg.label(metadata !5417), !dbg !5418
  br label %for.inc, !dbg !5419

for.inc:                                          ; preds = %next_link
  call void @sd_iterator_next(%struct._sd_iterator* %sd_it), !dbg !5381
  br label %for.cond, !dbg !5381, !llvm.loop !5420

for.end:                                          ; preds = %for.cond
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5422
  call void @delete_all_dependences(%struct.rtx_def* %20), !dbg !5423
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5424
  %call11 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %21), !dbg !5425
  store %struct.rtx_def* %call11, %struct.rtx_def** %prev_nonnote, align 8, !dbg !5426
  br label %while.cond, !dbg !5427

while.cond:                                       ; preds = %while.body, %for.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %prev_nonnote, align 8, !dbg !5428
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !5428
  %bf.load12 = load i32, i32* %23, align 8, !dbg !5428
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !5428
  %cmp14 = icmp eq i32 %bf.clear13, 7, !dbg !5428
  br i1 %cmp14, label %while.body, label %while.end, !dbg !5427

while.body:                                       ; preds = %while.cond
  %24 = load %struct.rtx_def*, %struct.rtx_def** %prev_nonnote, align 8, !dbg !5429
  %call15 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %24), !dbg !5430
  store %struct.rtx_def* %call15, %struct.rtx_def** %prev_nonnote, align 8, !dbg !5431
  br label %while.cond, !dbg !5427, !llvm.loop !5432

while.end:                                        ; preds = %while.cond
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5434
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !5434
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5434
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !5434
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !5434
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !5434
  %27 = load %struct.rtx_def*, %struct.rtx_def** %prev_nonnote, align 8, !dbg !5436
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !5436
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !5436
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 3, !dbg !5436
  %rt_bb19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.basic_block_def**, !dbg !5436
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb19, align 8, !dbg !5436
  %cmp20 = icmp eq %struct.basic_block_def* %26, %28, !dbg !5437
  br i1 %cmp20, label %land.lhs.true, label %if.end24, !dbg !5438

land.lhs.true:                                    ; preds = %while.end
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5439
  %30 = load %struct.rtx_def*, %struct.rtx_def** %prev_nonnote, align 8, !dbg !5440
  %call21 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %29, %struct.rtx_def* %30), !dbg !5441
  %tobool22 = icmp ne i8 %call21, 0, !dbg !5441
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !5442

if.then23:                                        ; preds = %land.lhs.true
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5443
  %32 = load %struct.rtx_def*, %struct.rtx_def** %prev_nonnote, align 8, !dbg !5444
  call void @add_dependence(%struct.rtx_def* %31, %struct.rtx_def* %32, i32 12), !dbg !5445
  br label %if.end24, !dbg !5445

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %while.end
  ret void, !dbg !5446
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @deps_start_bb(%struct.deps* %deps, %struct.rtx_def* %head) #0 !dbg !5447 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %head.addr = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !5448, metadata !DIExpression()), !dbg !5449
  store %struct.rtx_def* %head, %struct.rtx_def** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %head.addr, metadata !5450, metadata !DIExpression()), !dbg !5451
  %0 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5452
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %0, i32 0, i32 18, !dbg !5452
  %bf.load = load i8, i8* %readonly, align 4, !dbg !5452
  %bf.clear = and i8 %bf.load, 1, !dbg !5452
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5452
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5452
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5452

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3362, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5452
  br label %cond.end, !dbg !5452

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5452

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5452
  %1 = load i32, i32* @reload_completed, align 4, !dbg !5453
  %tobool1 = icmp ne i32 %1, 0, !dbg !5453
  br i1 %tobool1, label %if.end15, label %land.lhs.true, !dbg !5455

land.lhs.true:                                    ; preds = %cond.end
  %2 = load %struct.rtx_def*, %struct.rtx_def** %head.addr, align 8, !dbg !5456
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5456
  %bf.load2 = load i32, i32* %3, align 8, !dbg !5456
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5456
  %cmp = icmp eq i32 %bf.clear3, 12, !dbg !5456
  br i1 %cmp, label %if.end15, label %if.then, !dbg !5457

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !5458, metadata !DIExpression()), !dbg !5460
  %4 = load %struct.rtx_def*, %struct.rtx_def** %head.addr, align 8, !dbg !5461
  %call = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %4), !dbg !5462
  store %struct.rtx_def* %call, %struct.rtx_def** %insn, align 8, !dbg !5460
  br label %while.cond, !dbg !5463

while.cond:                                       ; preds = %while.body, %if.then
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5464
  %tobool4 = icmp ne %struct.rtx_def* %5, null, !dbg !5464
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !5465

land.rhs:                                         ; preds = %while.cond
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5466
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5466
  %bf.load5 = load i32, i32* %7, align 8, !dbg !5466
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5466
  %cmp7 = icmp eq i32 %bf.clear6, 7, !dbg !5466
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp7, %land.rhs ], !dbg !5467
  br i1 %8, label %while.body, label %while.end, !dbg !5463

while.body:                                       ; preds = %land.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5468
  %call8 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %9), !dbg !5469
  store %struct.rtx_def* %call8, %struct.rtx_def** %insn, align 8, !dbg !5470
  br label %while.cond, !dbg !5463, !llvm.loop !5471

while.end:                                        ; preds = %land.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5473
  %tobool9 = icmp ne %struct.rtx_def* %10, null, !dbg !5473
  br i1 %tobool9, label %land.lhs.true10, label %if.end, !dbg !5475

land.lhs.true10:                                  ; preds = %while.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5476
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5476
  %bf.load11 = load i32, i32* %12, align 8, !dbg !5476
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !5476
  %cmp13 = icmp eq i32 %bf.clear12, 10, !dbg !5476
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !5477

if.then14:                                        ; preds = %land.lhs.true10
  %13 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5478
  %in_post_call_group_p = getelementptr inbounds %struct.deps, %struct.deps* %13, i32 0, i32 11, !dbg !5479
  store i32 2, i32* %in_post_call_group_p, align 8, !dbg !5480
  br label %if.end, !dbg !5478

if.end:                                           ; preds = %if.then14, %land.lhs.true10, %while.end
  br label %if.end15, !dbg !5481

if.end15:                                         ; preds = %if.end, %land.lhs.true, %cond.end
  ret void, !dbg !5482
}

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sched_analyze(%struct.deps* %deps, %struct.rtx_def* %head, %struct.rtx_def* %tail) #0 !dbg !5483 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %head.addr = alloca %struct.rtx_def*, align 8
  %tail.addr = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !5484, metadata !DIExpression()), !dbg !5485
  store %struct.rtx_def* %head, %struct.rtx_def** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %head.addr, metadata !5486, metadata !DIExpression()), !dbg !5487
  store %struct.rtx_def* %tail, %struct.rtx_def** %tail.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tail.addr, metadata !5488, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !5490, metadata !DIExpression()), !dbg !5491
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !5492
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i32 0, i32 12, !dbg !5494
  %bf.load = load i8, i8* %use_cselib, align 8, !dbg !5494
  %bf.clear = and i8 %bf.load, 1, !dbg !5494
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5494
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5492
  br i1 %tobool, label %if.then, label %if.end, !dbg !5495

if.then:                                          ; preds = %entry
  call void @cselib_init(i32 1), !dbg !5496
  br label %if.end, !dbg !5496

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5497
  %2 = load %struct.rtx_def*, %struct.rtx_def** %head.addr, align 8, !dbg !5498
  call void @deps_start_bb(%struct.deps* %1, %struct.rtx_def* %2), !dbg !5499
  %3 = load %struct.rtx_def*, %struct.rtx_def** %head.addr, align 8, !dbg !5500
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8, !dbg !5502
  br label %for.cond, !dbg !5503

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5504
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5504
  %bf.load1 = load i32, i32* %5, align 8, !dbg !5504
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !5504
  %cmp = icmp eq i32 %bf.clear2, 8, !dbg !5504
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !5504

lor.lhs.false:                                    ; preds = %for.cond
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5504
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5504
  %bf.load3 = load i32, i32* %7, align 8, !dbg !5504
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !5504
  %cmp5 = icmp eq i32 %bf.clear4, 7, !dbg !5504
  br i1 %cmp5, label %if.then14, label %lor.lhs.false6, !dbg !5504

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5504
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5504
  %bf.load7 = load i32, i32* %9, align 8, !dbg !5504
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5504
  %cmp9 = icmp eq i32 %bf.clear8, 9, !dbg !5504
  br i1 %cmp9, label %if.then14, label %lor.lhs.false10, !dbg !5504

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5504
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !5504
  %bf.load11 = load i32, i32* %11, align 8, !dbg !5504
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !5504
  %cmp13 = icmp eq i32 %bf.clear12, 10, !dbg !5504
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5508

if.then14:                                        ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.cond
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5509
  call void @sd_init_insn(%struct.rtx_def* %12), !dbg !5511
  br label %if.end15, !dbg !5512

if.end15:                                         ; preds = %if.then14, %lor.lhs.false10
  %13 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5513
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5514
  call void @deps_analyze_insn(%struct.deps* %13, %struct.rtx_def* %14), !dbg !5515
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5516
  %16 = load %struct.rtx_def*, %struct.rtx_def** %tail.addr, align 8, !dbg !5518
  %cmp16 = icmp eq %struct.rtx_def* %15, %16, !dbg !5519
  br i1 %cmp16, label %if.then17, label %if.end25, !dbg !5520

if.then17:                                        ; preds = %if.end15
  %17 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !5521
  %use_cselib18 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %17, i32 0, i32 12, !dbg !5524
  %bf.load19 = load i8, i8* %use_cselib18, align 8, !dbg !5524
  %bf.clear20 = and i8 %bf.load19, 1, !dbg !5524
  %bf.cast21 = zext i8 %bf.clear20 to i32, !dbg !5524
  %tobool22 = icmp ne i32 %bf.cast21, 0, !dbg !5521
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5525

if.then23:                                        ; preds = %if.then17
  call void @cselib_finish(), !dbg !5526
  br label %if.end24, !dbg !5526

if.end24:                                         ; preds = %if.then23, %if.then17
  ret void, !dbg !5527

if.end25:                                         ; preds = %if.end15
  br label %for.inc, !dbg !5528

for.inc:                                          ; preds = %if.end25
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5529
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !5529
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5529
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !5529
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5529
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5529
  store %struct.rtx_def* %19, %struct.rtx_def** %insn, align 8, !dbg !5530
  br label %for.cond, !dbg !5531, !llvm.loop !5532
}

declare dso_local void @cselib_init(i32) #2

declare dso_local void @cselib_finish() #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sched_free_deps(%struct.rtx_def* %head, %struct.rtx_def* %tail, i8 zeroext %resolved_p) #0 !dbg !5535 {
entry:
  %head.addr = alloca %struct.rtx_def*, align 8
  %tail.addr = alloca %struct.rtx_def*, align 8
  %resolved_p.addr = alloca i8, align 1
  %insn = alloca %struct.rtx_def*, align 8
  %next_tail = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %head, %struct.rtx_def** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %head.addr, metadata !5536, metadata !DIExpression()), !dbg !5537
  store %struct.rtx_def* %tail, %struct.rtx_def** %tail.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tail.addr, metadata !5538, metadata !DIExpression()), !dbg !5539
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !5540, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !5542, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next_tail, metadata !5544, metadata !DIExpression()), !dbg !5545
  %0 = load %struct.rtx_def*, %struct.rtx_def** %tail.addr, align 8, !dbg !5546
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5546
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5546
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !5546
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5546
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5546
  store %struct.rtx_def* %1, %struct.rtx_def** %next_tail, align 8, !dbg !5545
  %2 = load %struct.rtx_def*, %struct.rtx_def** %head.addr, align 8, !dbg !5547
  store %struct.rtx_def* %2, %struct.rtx_def** %insn, align 8, !dbg !5549
  br label %for.cond, !dbg !5550

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5551
  %4 = load %struct.rtx_def*, %struct.rtx_def** %next_tail, align 8, !dbg !5553
  %cmp = icmp ne %struct.rtx_def* %3, %4, !dbg !5554
  br i1 %cmp, label %for.body, label %for.end, !dbg !5555

for.body:                                         ; preds = %for.cond
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5556
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !5556
  %bf.load = load i32, i32* %6, align 8, !dbg !5556
  %bf.clear = and i32 %bf.load, 65535, !dbg !5556
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !5556
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !5556

lor.lhs.false:                                    ; preds = %for.body
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5556
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !5556
  %bf.load2 = load i32, i32* %8, align 8, !dbg !5556
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5556
  %cmp4 = icmp eq i32 %bf.clear3, 7, !dbg !5556
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false5, !dbg !5556

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5556
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !5556
  %bf.load6 = load i32, i32* %10, align 8, !dbg !5556
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !5556
  %cmp8 = icmp eq i32 %bf.clear7, 9, !dbg !5556
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false9, !dbg !5556

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5556
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5556
  %bf.load10 = load i32, i32* %12, align 8, !dbg !5556
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !5556
  %cmp12 = icmp eq i32 %bf.clear11, 10, !dbg !5556
  br i1 %cmp12, label %land.lhs.true, label %if.end55, !dbg !5558

land.lhs.true:                                    ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5559
  %tobool = icmp ne %struct.VEC_int_heap* %13, null, !dbg !5559
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5559

cond.true:                                        ; preds = %land.lhs.true
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5559
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i32 0, i32 0, !dbg !5559
  br label %cond.end, !dbg !5559

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !5559

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5559
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5559
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !5559
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !5559
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 0, !dbg !5559
  %rt_int = bitcast %union.rtunion_def* %arrayidx15 to i32*, !dbg !5559
  %16 = load i32, i32* %rt_int, align 8, !dbg !5559
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond, i32 %16), !dbg !5559
  %cmp16 = icmp sgt i32 %call, 0, !dbg !5560
  br i1 %cmp16, label %if.then, label %if.end55, !dbg !5561

if.then:                                          ; preds = %cond.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5562
  %18 = load i8, i8* %resolved_p.addr, align 1, !dbg !5564
  call void @delete_dep_nodes_in_back_deps(%struct.rtx_def* %17, i8 zeroext %18), !dbg !5565
  %19 = load i8, i8* %resolved_p.addr, align 1, !dbg !5566
  %tobool17 = icmp ne i8 %19, 0, !dbg !5566
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !5568

if.then18:                                        ; preds = %if.then
  %20 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5569
  %tobool19 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %20, null, !dbg !5569
  br i1 %tobool19, label %cond.true20, label %cond.false22, !dbg !5569

cond.true20:                                      ; preds = %if.then18
  %21 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5569
  %base21 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %21, i32 0, i32 0, !dbg !5569
  br label %cond.end23, !dbg !5569

cond.false22:                                     ; preds = %if.then18
  br label %cond.end23, !dbg !5569

cond.end23:                                       ; preds = %cond.false22, %cond.true20
  %cond24 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base21, %cond.true20 ], [ null, %cond.false22 ], !dbg !5569
  %22 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5569
  %tobool25 = icmp ne %struct.VEC_int_heap* %22, null, !dbg !5569
  br i1 %tobool25, label %cond.true26, label %cond.false28, !dbg !5569

cond.true26:                                      ; preds = %cond.end23
  %23 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5569
  %base27 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %23, i32 0, i32 0, !dbg !5569
  br label %cond.end29, !dbg !5569

cond.false28:                                     ; preds = %cond.end23
  br label %cond.end29, !dbg !5569

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi %struct.VEC_int_base* [ %base27, %cond.true26 ], [ null, %cond.false28 ], !dbg !5569
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5569
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !5569
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !5569
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !5569
  %rt_int34 = bitcast %union.rtunion_def* %arrayidx33 to i32*, !dbg !5569
  %25 = load i32, i32* %rt_int34, align 8, !dbg !5569
  %call35 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond30, i32 %25), !dbg !5569
  %call36 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond24, i32 %call35), !dbg !5569
  %resolved_forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call36, i32 0, i32 6, !dbg !5569
  %26 = load %struct._deps_list*, %struct._deps_list** %resolved_forw_deps, align 8, !dbg !5569
  call void @clear_deps_list(%struct._deps_list* %26), !dbg !5570
  br label %if.end, !dbg !5570

if.else:                                          ; preds = %if.then
  %27 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5571
  %tobool37 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %27, null, !dbg !5571
  br i1 %tobool37, label %cond.true38, label %cond.false40, !dbg !5571

cond.true38:                                      ; preds = %if.else
  %28 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !5571
  %base39 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %28, i32 0, i32 0, !dbg !5571
  br label %cond.end41, !dbg !5571

cond.false40:                                     ; preds = %if.else
  br label %cond.end41, !dbg !5571

cond.end41:                                       ; preds = %cond.false40, %cond.true38
  %cond42 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base39, %cond.true38 ], [ null, %cond.false40 ], !dbg !5571
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5571
  %tobool43 = icmp ne %struct.VEC_int_heap* %29, null, !dbg !5571
  br i1 %tobool43, label %cond.true44, label %cond.false46, !dbg !5571

cond.true44:                                      ; preds = %cond.end41
  %30 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !5571
  %base45 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %30, i32 0, i32 0, !dbg !5571
  br label %cond.end47, !dbg !5571

cond.false46:                                     ; preds = %cond.end41
  br label %cond.end47, !dbg !5571

cond.end47:                                       ; preds = %cond.false46, %cond.true44
  %cond48 = phi %struct.VEC_int_base* [ %base45, %cond.true44 ], [ null, %cond.false46 ], !dbg !5571
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5571
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !5571
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !5571
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !5571
  %rt_int52 = bitcast %union.rtunion_def* %arrayidx51 to i32*, !dbg !5571
  %32 = load i32, i32* %rt_int52, align 8, !dbg !5571
  %call53 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond48, i32 %32), !dbg !5571
  %call54 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond42, i32 %call53), !dbg !5571
  %forw_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call54, i32 0, i32 4, !dbg !5571
  %33 = load %struct._deps_list*, %struct._deps_list** %forw_deps, align 8, !dbg !5571
  call void @clear_deps_list(%struct._deps_list* %33), !dbg !5572
  br label %if.end

if.end:                                           ; preds = %cond.end47, %cond.end29
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5573
  call void @sd_finish_insn(%struct.rtx_def* %34), !dbg !5574
  br label %if.end55, !dbg !5575

if.end55:                                         ; preds = %if.end, %cond.end, %lor.lhs.false9
  br label %for.inc, !dbg !5576

for.inc:                                          ; preds = %if.end55
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5577
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5577
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !5577
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 2, !dbg !5577
  %rt_rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**, !dbg !5577
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !5577
  store %struct.rtx_def* %36, %struct.rtx_def** %insn, align 8, !dbg !5578
  br label %for.cond, !dbg !5579, !llvm.loop !5580

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5582
}

; Function Attrs: noinline nounwind uwtable
define internal void @delete_dep_nodes_in_back_deps(%struct.rtx_def* %insn, i8 zeroext %resolved_p) #0 !dbg !5583 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %resolved_p.addr = alloca i8, align 1
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %types = alloca i32, align 4
  %tmp = alloca %struct._sd_iterator, align 8
  %link = alloca %struct._dep_link*, align 8
  %node = alloca %struct._dep_node*, align 8
  %back_list = alloca %struct._deps_list*, align 8
  %forw_list = alloca %struct._deps_list*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5586, metadata !DIExpression()), !dbg !5587
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !5588, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !5590, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !5592, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.declare(metadata i32* %types, metadata !5594, metadata !DIExpression()), !dbg !5595
  %0 = load i8, i8* %resolved_p.addr, align 1, !dbg !5596
  %tobool = icmp ne i8 %0, 0, !dbg !5596
  br i1 %tobool, label %if.then, label %if.else, !dbg !5598

if.then:                                          ; preds = %entry
  store i32 8, i32* %types, align 4, !dbg !5599
  br label %if.end, !dbg !5600

if.else:                                          ; preds = %entry
  store i32 3, i32* %types, align 4, !dbg !5601
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5602
  %2 = load i32, i32* %types, align 4, !dbg !5604
  call void @sd_iterator_start(%struct._sd_iterator* sret %tmp, %struct.rtx_def* %1, i32 %2), !dbg !5605
  %3 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !5605
  %4 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !5605
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false), !dbg !5605
  br label %for.cond, !dbg !5606

for.cond:                                         ; preds = %for.body, %if.end
  %call = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %sd_it, %struct._dep** %dep), !dbg !5607
  %tobool1 = icmp ne i8 %call, 0, !dbg !5609
  br i1 %tobool1, label %for.body, label %for.end, !dbg !5609

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._dep_link** %link, metadata !5610, metadata !DIExpression()), !dbg !5612
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i32 0, i32 2, !dbg !5613
  %5 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !5613
  %6 = load %struct._dep_link*, %struct._dep_link** %5, align 8, !dbg !5614
  store %struct._dep_link* %6, %struct._dep_link** %link, align 8, !dbg !5612
  call void @llvm.dbg.declare(metadata %struct._dep_node** %node, metadata !5615, metadata !DIExpression()), !dbg !5616
  %7 = load %struct._dep_link*, %struct._dep_link** %link, align 8, !dbg !5617
  %node2 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %7, i32 0, i32 0, !dbg !5617
  %8 = load %struct._dep_node*, %struct._dep_node** %node2, align 8, !dbg !5617
  store %struct._dep_node* %8, %struct._dep_node** %node, align 8, !dbg !5616
  call void @llvm.dbg.declare(metadata %struct._deps_list** %back_list, metadata !5618, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.declare(metadata %struct._deps_list** %forw_list, metadata !5620, metadata !DIExpression()), !dbg !5621
  %9 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !5622
  %10 = load i8, i8* %resolved_p.addr, align 1, !dbg !5623
  call void @get_back_and_forw_lists(%struct._dep* %9, i8 zeroext %10, %struct._deps_list** %back_list, %struct._deps_list** %forw_list), !dbg !5624
  %11 = load %struct._dep_link*, %struct._dep_link** %link, align 8, !dbg !5625
  %12 = load %struct._deps_list*, %struct._deps_list** %back_list, align 8, !dbg !5626
  call void @remove_from_deps_list(%struct._dep_link* %11, %struct._deps_list* %12), !dbg !5627
  %13 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !5628
  call void @delete_dep_node(%struct._dep_node* %13), !dbg !5629
  br label %for.cond, !dbg !5630, !llvm.loop !5631

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5633
}

; Function Attrs: noinline nounwind uwtable
define internal void @clear_deps_list(%struct._deps_list* %l) #0 !dbg !5634 {
entry:
  %l.addr = alloca %struct._deps_list*, align 8
  %link = alloca %struct._dep_link*, align 8
  store %struct._deps_list* %l, %struct._deps_list** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._deps_list** %l.addr, metadata !5635, metadata !DIExpression()), !dbg !5636
  br label %do.body, !dbg !5637

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct._dep_link** %link, metadata !5638, metadata !DIExpression()), !dbg !5640
  %0 = load %struct._deps_list*, %struct._deps_list** %l.addr, align 8, !dbg !5641
  %first = getelementptr inbounds %struct._deps_list, %struct._deps_list* %0, i32 0, i32 0, !dbg !5641
  %1 = load %struct._dep_link*, %struct._dep_link** %first, align 8, !dbg !5641
  store %struct._dep_link* %1, %struct._dep_link** %link, align 8, !dbg !5640
  %2 = load %struct._dep_link*, %struct._dep_link** %link, align 8, !dbg !5642
  %cmp = icmp eq %struct._dep_link* %2, null, !dbg !5644
  br i1 %cmp, label %if.then, label %if.end, !dbg !5645

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !5646

if.end:                                           ; preds = %do.body
  %3 = load %struct._dep_link*, %struct._dep_link** %link, align 8, !dbg !5647
  %4 = load %struct._deps_list*, %struct._deps_list** %l.addr, align 8, !dbg !5648
  call void @remove_from_deps_list(%struct._dep_link* %3, %struct._deps_list* %4), !dbg !5649
  br label %do.cond, !dbg !5650

do.cond:                                          ; preds = %if.end
  br i1 true, label %do.body, label %do.end, !dbg !5650, !llvm.loop !5651

do.end:                                           ; preds = %do.cond, %if.then
  ret void, !dbg !5653
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_deps(%struct.deps* %deps, i8 zeroext %lazy_reg_last) #0 !dbg !5654 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %lazy_reg_last.addr = alloca i8, align 1
  %max_reg = alloca i32, align 4
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !5657, metadata !DIExpression()), !dbg !5658
  store i8 %lazy_reg_last, i8* %lazy_reg_last.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lazy_reg_last.addr, metadata !5659, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.declare(metadata i32* %max_reg, metadata !5661, metadata !DIExpression()), !dbg !5662
  %0 = load i32, i32* @reload_completed, align 4, !dbg !5663
  %tobool = icmp ne i32 %0, 0, !dbg !5663
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5663

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !5663

cond.false:                                       ; preds = %entry
  %call = call i32 @max_reg_num(), !dbg !5664
  br label %cond.end, !dbg !5663

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 53, %cond.true ], [ %call, %cond.false ], !dbg !5663
  store i32 %cond, i32* %max_reg, align 4, !dbg !5662
  %1 = load i32, i32* %max_reg, align 4, !dbg !5665
  %2 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5666
  %max_reg1 = getelementptr inbounds %struct.deps, %struct.deps* %2, i32 0, i32 13, !dbg !5667
  store i32 %1, i32* %max_reg1, align 8, !dbg !5668
  %3 = load i8, i8* %lazy_reg_last.addr, align 1, !dbg !5669
  %tobool2 = icmp ne i8 %3, 0, !dbg !5669
  br i1 %tobool2, label %if.then, label %if.else, !dbg !5671

if.then:                                          ; preds = %cond.end
  %4 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5672
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %4, i32 0, i32 14, !dbg !5673
  store %struct.deps_reg* null, %struct.deps_reg** %reg_last, align 8, !dbg !5674
  br label %if.end, !dbg !5672

if.else:                                          ; preds = %cond.end
  %5 = load i32, i32* %max_reg, align 4, !dbg !5675
  %conv = sext i32 %5 to i64, !dbg !5675
  %call3 = call i8* @xcalloc(i64 %conv, i64 40), !dbg !5675
  %6 = bitcast i8* %call3 to %struct.deps_reg*, !dbg !5675
  %7 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5676
  %reg_last4 = getelementptr inbounds %struct.deps, %struct.deps* %7, i32 0, i32 14, !dbg !5677
  store %struct.deps_reg* %6, %struct.deps_reg** %reg_last4, align 8, !dbg !5678
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5679
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %8, i32 0, i32 15, !dbg !5679
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %reg_last_in_use, %struct.bitmap_obstack* @reg_obstack), !dbg !5679
  %9 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5680
  %reg_conditional_sets = getelementptr inbounds %struct.deps, %struct.deps* %9, i32 0, i32 16, !dbg !5680
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %reg_conditional_sets, %struct.bitmap_obstack* @reg_obstack), !dbg !5680
  %10 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5681
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %10, i32 0, i32 0, !dbg !5682
  store %struct.rtx_def* null, %struct.rtx_def** %pending_read_insns, align 8, !dbg !5683
  %11 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5684
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %11, i32 0, i32 1, !dbg !5685
  store %struct.rtx_def* null, %struct.rtx_def** %pending_read_mems, align 8, !dbg !5686
  %12 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5687
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %12, i32 0, i32 2, !dbg !5688
  store %struct.rtx_def* null, %struct.rtx_def** %pending_write_insns, align 8, !dbg !5689
  %13 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5690
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %13, i32 0, i32 3, !dbg !5691
  store %struct.rtx_def* null, %struct.rtx_def** %pending_write_mems, align 8, !dbg !5692
  %14 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5693
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %14, i32 0, i32 4, !dbg !5694
  store i32 0, i32* %pending_read_list_length, align 8, !dbg !5695
  %15 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5696
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %15, i32 0, i32 5, !dbg !5697
  store i32 0, i32* %pending_write_list_length, align 4, !dbg !5698
  %16 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5699
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %16, i32 0, i32 6, !dbg !5700
  store i32 0, i32* %pending_flush_length, align 8, !dbg !5701
  %17 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5702
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %17, i32 0, i32 7, !dbg !5703
  store %struct.rtx_def* null, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !5704
  %18 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5705
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %18, i32 0, i32 8, !dbg !5706
  store %struct.rtx_def* null, %struct.rtx_def** %last_function_call, align 8, !dbg !5707
  %19 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5708
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %19, i32 0, i32 9, !dbg !5709
  store %struct.rtx_def* null, %struct.rtx_def** %last_function_call_may_noreturn, align 8, !dbg !5710
  %20 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5711
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %20, i32 0, i32 10, !dbg !5712
  store %struct.rtx_def* null, %struct.rtx_def** %sched_before_next_call, align 8, !dbg !5713
  %21 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5714
  %in_post_call_group_p = getelementptr inbounds %struct.deps, %struct.deps* %21, i32 0, i32 11, !dbg !5715
  store i32 0, i32* %in_post_call_group_p, align 8, !dbg !5716
  %22 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5717
  %last_debug_insn = getelementptr inbounds %struct.deps, %struct.deps* %22, i32 0, i32 12, !dbg !5718
  store %struct.rtx_def* null, %struct.rtx_def** %last_debug_insn, align 8, !dbg !5719
  %23 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5720
  %last_reg_pending_barrier = getelementptr inbounds %struct.deps, %struct.deps* %23, i32 0, i32 17, !dbg !5721
  store i32 0, i32* %last_reg_pending_barrier, align 8, !dbg !5722
  %24 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5723
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %24, i32 0, i32 18, !dbg !5724
  %bf.load = load i8, i8* %readonly, align 4, !dbg !5725
  %bf.clear = and i8 %bf.load, -2, !dbg !5725
  store i8 %bf.clear, i8* %readonly, align 4, !dbg !5725
  ret void, !dbg !5726
}

declare dso_local i32 @max_reg_num() #2

declare dso_local i8* @xcalloc(i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) #0 !dbg !5727 {
entry:
  %head.addr = alloca %struct.bitmap_head_def*, align 8
  %obstack.addr = alloca %struct.bitmap_obstack*, align 8
  store %struct.bitmap_head_def* %head, %struct.bitmap_head_def** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %head.addr, metadata !5730, metadata !DIExpression()), !dbg !5731
  store %struct.bitmap_obstack* %obstack, %struct.bitmap_obstack** %obstack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_obstack** %obstack.addr, metadata !5732, metadata !DIExpression()), !dbg !5733
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !5734
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 1, !dbg !5735
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !5736
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !5737
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %1, i32 0, i32 0, !dbg !5738
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !5739
  %2 = load %struct.bitmap_obstack*, %struct.bitmap_obstack** %obstack.addr, align 8, !dbg !5740
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !5741
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %3, i32 0, i32 3, !dbg !5742
  store %struct.bitmap_obstack* %2, %struct.bitmap_obstack** %obstack1, align 8, !dbg !5743
  ret void, !dbg !5744
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_deps_reg_last(%struct.deps* %deps) #0 !dbg !5745 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !5748, metadata !DIExpression()), !dbg !5749
  %0 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5750
  %tobool = icmp ne %struct.deps* %0, null, !dbg !5750
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !5750

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5750
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %1, i32 0, i32 13, !dbg !5750
  %2 = load i32, i32* %max_reg, align 8, !dbg !5750
  %cmp = icmp sgt i32 %2, 0, !dbg !5750
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !5750

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3503, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5750
  br label %cond.end, !dbg !5750

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !5750

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5750
  %3 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5751
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %3, i32 0, i32 14, !dbg !5751
  %4 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !5751
  %cmp1 = icmp eq %struct.deps_reg* %4, null, !dbg !5751
  br i1 %cmp1, label %cond.false3, label %cond.true2, !dbg !5751

cond.true2:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3504, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5751
  br label %cond.end4, !dbg !5751

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !5751

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ 0, %cond.true2 ], [ 0, %cond.false3 ], !dbg !5751
  %5 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5752
  %max_reg6 = getelementptr inbounds %struct.deps, %struct.deps* %5, i32 0, i32 13, !dbg !5752
  %6 = load i32, i32* %max_reg6, align 8, !dbg !5752
  %conv = sext i32 %6 to i64, !dbg !5752
  %call = call i8* @xcalloc(i64 %conv, i64 40), !dbg !5752
  %7 = bitcast i8* %call to %struct.deps_reg*, !dbg !5752
  %8 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5753
  %reg_last7 = getelementptr inbounds %struct.deps, %struct.deps* %8, i32 0, i32 14, !dbg !5754
  store %struct.deps_reg* %7, %struct.deps_reg** %reg_last7, align 8, !dbg !5755
  ret void, !dbg !5756
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_deps(%struct.deps* %deps) #0 !dbg !5757 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  %reg_last3 = alloca %struct.deps_reg*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !5758, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5760, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !5762, metadata !DIExpression()), !dbg !5763
  %0 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5764
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %0, i32 0, i32 13, !dbg !5766
  %1 = load i32, i32* %max_reg, align 8, !dbg !5766
  %cmp = icmp eq i32 %1, 0, !dbg !5767
  br i1 %cmp, label %if.then, label %if.end, !dbg !5768

if.then:                                          ; preds = %entry
  %2 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5769
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %2, i32 0, i32 14, !dbg !5769
  %3 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !5769
  %cmp1 = icmp eq %struct.deps_reg* %3, null, !dbg !5769
  br i1 %cmp1, label %cond.false, label %cond.true, !dbg !5769

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3521, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5769
  br label %cond.end, !dbg !5769

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5769

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5769
  br label %return, !dbg !5771

if.end:                                           ; preds = %entry
  %4 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5772
  %max_reg2 = getelementptr inbounds %struct.deps, %struct.deps* %4, i32 0, i32 13, !dbg !5773
  store i32 0, i32* %max_reg2, align 8, !dbg !5774
  %5 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5775
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %5, i32 0, i32 0, !dbg !5776
  call void @free_INSN_LIST_list(%struct.rtx_def** %pending_read_insns), !dbg !5777
  %6 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5778
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %6, i32 0, i32 1, !dbg !5779
  call void @free_EXPR_LIST_list(%struct.rtx_def** %pending_read_mems), !dbg !5780
  %7 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5781
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %7, i32 0, i32 2, !dbg !5782
  call void @free_INSN_LIST_list(%struct.rtx_def** %pending_write_insns), !dbg !5783
  %8 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5784
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %8, i32 0, i32 3, !dbg !5785
  call void @free_EXPR_LIST_list(%struct.rtx_def** %pending_write_mems), !dbg !5786
  %9 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5787
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %9, i32 0, i32 7, !dbg !5788
  call void @free_INSN_LIST_list(%struct.rtx_def** %last_pending_memory_flush), !dbg !5789
  %10 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5790
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %10, i32 0, i32 15, !dbg !5790
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %reg_last_in_use, i32 0, i32* %i), !dbg !5790
  br label %for.cond, !dbg !5790

for.cond:                                         ; preds = %for.inc, %if.end
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !5792
  %tobool = icmp ne i8 %call, 0, !dbg !5790
  br i1 %tobool, label %for.body, label %for.end, !dbg !5790

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last3, metadata !5794, metadata !DIExpression()), !dbg !5796
  %11 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5797
  %reg_last4 = getelementptr inbounds %struct.deps, %struct.deps* %11, i32 0, i32 14, !dbg !5798
  %12 = load %struct.deps_reg*, %struct.deps_reg** %reg_last4, align 8, !dbg !5798
  %13 = load i32, i32* %i, align 4, !dbg !5799
  %idxprom = zext i32 %13 to i64, !dbg !5797
  %arrayidx = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %12, i64 %idxprom, !dbg !5797
  store %struct.deps_reg* %arrayidx, %struct.deps_reg** %reg_last3, align 8, !dbg !5796
  %14 = load %struct.deps_reg*, %struct.deps_reg** %reg_last3, align 8, !dbg !5800
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %14, i32 0, i32 0, !dbg !5802
  %15 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !5802
  %tobool5 = icmp ne %struct.rtx_def* %15, null, !dbg !5800
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !5803

if.then6:                                         ; preds = %for.body
  %16 = load %struct.deps_reg*, %struct.deps_reg** %reg_last3, align 8, !dbg !5804
  %uses7 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %16, i32 0, i32 0, !dbg !5805
  call void @free_INSN_LIST_list(%struct.rtx_def** %uses7), !dbg !5806
  br label %if.end8, !dbg !5806

if.end8:                                          ; preds = %if.then6, %for.body
  %17 = load %struct.deps_reg*, %struct.deps_reg** %reg_last3, align 8, !dbg !5807
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %17, i32 0, i32 1, !dbg !5809
  %18 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !5809
  %tobool9 = icmp ne %struct.rtx_def* %18, null, !dbg !5807
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !5810

if.then10:                                        ; preds = %if.end8
  %19 = load %struct.deps_reg*, %struct.deps_reg** %reg_last3, align 8, !dbg !5811
  %sets11 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %19, i32 0, i32 1, !dbg !5812
  call void @free_INSN_LIST_list(%struct.rtx_def** %sets11), !dbg !5813
  br label %if.end12, !dbg !5813

if.end12:                                         ; preds = %if.then10, %if.end8
  %20 = load %struct.deps_reg*, %struct.deps_reg** %reg_last3, align 8, !dbg !5814
  %implicit_sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %20, i32 0, i32 2, !dbg !5816
  %21 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets, align 8, !dbg !5816
  %tobool13 = icmp ne %struct.rtx_def* %21, null, !dbg !5814
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !5817

if.then14:                                        ; preds = %if.end12
  %22 = load %struct.deps_reg*, %struct.deps_reg** %reg_last3, align 8, !dbg !5818
  %implicit_sets15 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %22, i32 0, i32 2, !dbg !5819
  call void @free_INSN_LIST_list(%struct.rtx_def** %implicit_sets15), !dbg !5820
  br label %if.end16, !dbg !5820

if.end16:                                         ; preds = %if.then14, %if.end12
  %23 = load %struct.deps_reg*, %struct.deps_reg** %reg_last3, align 8, !dbg !5821
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %23, i32 0, i32 3, !dbg !5823
  %24 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !5823
  %tobool17 = icmp ne %struct.rtx_def* %24, null, !dbg !5821
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !5824

if.then18:                                        ; preds = %if.end16
  %25 = load %struct.deps_reg*, %struct.deps_reg** %reg_last3, align 8, !dbg !5825
  %clobbers19 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %25, i32 0, i32 3, !dbg !5826
  call void @free_INSN_LIST_list(%struct.rtx_def** %clobbers19), !dbg !5827
  br label %if.end20, !dbg !5827

if.end20:                                         ; preds = %if.then18, %if.end16
  br label %for.inc, !dbg !5828

for.inc:                                          ; preds = %if.end20
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !5792
  br label %for.cond, !dbg !5792, !llvm.loop !5829

for.end:                                          ; preds = %for.cond
  %26 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5831
  %reg_last_in_use21 = getelementptr inbounds %struct.deps, %struct.deps* %26, i32 0, i32 15, !dbg !5831
  call void @bitmap_clear(%struct.bitmap_head_def* %reg_last_in_use21), !dbg !5831
  %27 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5832
  %reg_conditional_sets = getelementptr inbounds %struct.deps, %struct.deps* %27, i32 0, i32 16, !dbg !5832
  call void @bitmap_clear(%struct.bitmap_head_def* %reg_conditional_sets), !dbg !5832
  %28 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5833
  %reg_last22 = getelementptr inbounds %struct.deps, %struct.deps* %28, i32 0, i32 14, !dbg !5835
  %29 = load %struct.deps_reg*, %struct.deps_reg** %reg_last22, align 8, !dbg !5835
  %tobool23 = icmp ne %struct.deps_reg* %29, null, !dbg !5833
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !5836

if.then24:                                        ; preds = %for.end
  %30 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5837
  %reg_last25 = getelementptr inbounds %struct.deps, %struct.deps* %30, i32 0, i32 14, !dbg !5838
  %31 = load %struct.deps_reg*, %struct.deps_reg** %reg_last25, align 8, !dbg !5838
  %32 = bitcast %struct.deps_reg* %31 to i8*, !dbg !5837
  call void @free(i8* %32), !dbg !5839
  br label %if.end26, !dbg !5839

if.end26:                                         ; preds = %if.then24, %for.end
  %33 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !5840
  %reg_last27 = getelementptr inbounds %struct.deps, %struct.deps* %33, i32 0, i32 14, !dbg !5841
  store %struct.deps_reg* null, %struct.deps_reg** %reg_last27, align 8, !dbg !5842
  store %struct.deps* null, %struct.deps** %deps.addr, align 8, !dbg !5843
  br label %return, !dbg !5844

return:                                           ; preds = %if.end26, %cond.end
  ret void, !dbg !5844
}

declare dso_local void @free_EXPR_LIST_list(%struct.rtx_def**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) #0 !dbg !5845 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %map.addr = alloca %struct.bitmap_head_def*, align 8
  %start_bit.addr = alloca i32, align 4
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  store %struct.bitmap_head_def* %map, %struct.bitmap_head_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %map.addr, metadata !5855, metadata !DIExpression()), !dbg !5856
  store i32 %start_bit, i32* %start_bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_bit.addr, metadata !5857, metadata !DIExpression()), !dbg !5858
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !5859, metadata !DIExpression()), !dbg !5860
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %map.addr, align 8, !dbg !5861
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 0, !dbg !5862
  %1 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !5862
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5863
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 0, !dbg !5864
  store %struct.bitmap_element_def* %1, %struct.bitmap_element_def** %elt1, align 8, !dbg !5865
  %3 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5866
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %3, i32 0, i32 1, !dbg !5867
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !5868
  br label %while.body, !dbg !5869

while.body:                                       ; preds = %entry, %if.end5
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5870
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 0, !dbg !5873
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt11, align 8, !dbg !5873
  %tobool = icmp ne %struct.bitmap_element_def* %5, null, !dbg !5870
  br i1 %tobool, label %if.end, label %if.then, !dbg !5874

if.then:                                          ; preds = %while.body
  %6 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5875
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %6, i32 0, i32 0, !dbg !5877
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !5878
  br label %while.end, !dbg !5879

if.end:                                           ; preds = %while.body
  %7 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5880
  %elt13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %7, i32 0, i32 0, !dbg !5882
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt13, align 8, !dbg !5882
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %8, i32 0, i32 2, !dbg !5883
  %9 = load i32, i32* %indx, align 8, !dbg !5883
  %10 = load i32, i32* %start_bit.addr, align 4, !dbg !5884
  %div = udiv i32 %10, 128, !dbg !5885
  %cmp = icmp uge i32 %9, %div, !dbg !5886
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5887

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !5888

if.end5:                                          ; preds = %if.end
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5889
  %elt16 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 0, !dbg !5890
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt16, align 8, !dbg !5890
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i32 0, i32 0, !dbg !5891
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !5891
  %14 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5892
  %elt17 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %14, i32 0, i32 0, !dbg !5893
  store %struct.bitmap_element_def* %13, %struct.bitmap_element_def** %elt17, align 8, !dbg !5894
  br label %while.body, !dbg !5869, !llvm.loop !5895

while.end:                                        ; preds = %if.then4, %if.then
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5897
  %elt18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !5899
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt18, align 8, !dbg !5899
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 2, !dbg !5900
  %17 = load i32, i32* %indx9, align 8, !dbg !5900
  %18 = load i32, i32* %start_bit.addr, align 4, !dbg !5901
  %div10 = udiv i32 %18, 128, !dbg !5902
  %cmp11 = icmp ne i32 %17, %div10, !dbg !5903
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !5904

if.then12:                                        ; preds = %while.end
  %19 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5905
  %elt113 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %19, i32 0, i32 0, !dbg !5906
  %20 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt113, align 8, !dbg !5906
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %20, i32 0, i32 2, !dbg !5907
  %21 = load i32, i32* %indx14, align 8, !dbg !5907
  %mul = mul i32 %21, 128, !dbg !5908
  store i32 %mul, i32* %start_bit.addr, align 4, !dbg !5909
  br label %if.end15, !dbg !5910

if.end15:                                         ; preds = %if.then12, %while.end
  %22 = load i32, i32* %start_bit.addr, align 4, !dbg !5911
  %div16 = udiv i32 %22, 64, !dbg !5912
  %rem = urem i32 %div16, 2, !dbg !5913
  %23 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5914
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %23, i32 0, i32 2, !dbg !5915
  store i32 %rem, i32* %word_no, align 8, !dbg !5916
  %24 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5917
  %elt117 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %24, i32 0, i32 0, !dbg !5918
  %25 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt117, align 8, !dbg !5918
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %25, i32 0, i32 3, !dbg !5919
  %26 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5920
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %26, i32 0, i32 2, !dbg !5921
  %27 = load i32, i32* %word_no18, align 8, !dbg !5921
  %idxprom = zext i32 %27 to i64, !dbg !5917
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i64 0, i64 %idxprom, !dbg !5917
  %28 = load i64, i64* %arrayidx, align 8, !dbg !5917
  %29 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5922
  %bits19 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %29, i32 0, i32 3, !dbg !5923
  store i64 %28, i64* %bits19, align 8, !dbg !5924
  %30 = load i32, i32* %start_bit.addr, align 4, !dbg !5925
  %rem20 = urem i32 %30, 64, !dbg !5926
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5927
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 3, !dbg !5928
  %32 = load i64, i64* %bits21, align 8, !dbg !5929
  %sh_prom = zext i32 %rem20 to i64, !dbg !5929
  %shr = lshr i64 %32, %sh_prom, !dbg !5929
  store i64 %shr, i64* %bits21, align 8, !dbg !5929
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5930
  %bits22 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 3, !dbg !5931
  %34 = load i64, i64* %bits22, align 8, !dbg !5931
  %tobool23 = icmp ne i64 %34, 0, !dbg !5932
  %lnot = xor i1 %tobool23, true, !dbg !5932
  %lnot.ext = zext i1 %lnot to i32, !dbg !5932
  %35 = load i32, i32* %start_bit.addr, align 4, !dbg !5933
  %add = add i32 %35, %lnot.ext, !dbg !5933
  store i32 %add, i32* %start_bit.addr, align 4, !dbg !5933
  %36 = load i32, i32* %start_bit.addr, align 4, !dbg !5934
  %37 = load i32*, i32** %bit_no.addr, align 8, !dbg !5935
  store i32 %36, i32* %37, align 4, !dbg !5936
  ret void, !dbg !5937
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !5938 {
entry:
  %retval = alloca i8, align 1
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !5941, metadata !DIExpression()), !dbg !5942
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !5943, metadata !DIExpression()), !dbg !5944
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5945
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !5947
  %1 = load i64, i64* %bits, align 8, !dbg !5947
  %tobool = icmp ne i64 %1, 0, !dbg !5945
  br i1 %tobool, label %if.then, label %if.end, !dbg !5948

if.then:                                          ; preds = %entry
  br label %next_bit, !dbg !5949

next_bit:                                         ; preds = %if.then15, %if.then
  call void @llvm.dbg.label(metadata !5950), !dbg !5952
  br label %while.cond, !dbg !5953

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5954
  %bits1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 3, !dbg !5955
  %3 = load i64, i64* %bits1, align 8, !dbg !5955
  %and = and i64 %3, 1, !dbg !5956
  %tobool2 = icmp ne i64 %and, 0, !dbg !5957
  %lnot = xor i1 %tobool2, true, !dbg !5957
  br i1 %lnot, label %while.body, label %while.end, !dbg !5953

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5958
  %bits3 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 3, !dbg !5960
  %5 = load i64, i64* %bits3, align 8, !dbg !5961
  %shr = lshr i64 %5, 1, !dbg !5961
  store i64 %shr, i64* %bits3, align 8, !dbg !5961
  %6 = load i32*, i32** %bit_no.addr, align 8, !dbg !5962
  %7 = load i32, i32* %6, align 4, !dbg !5963
  %add = add i32 %7, 1, !dbg !5963
  store i32 %add, i32* %6, align 4, !dbg !5963
  br label %while.cond, !dbg !5953, !llvm.loop !5964

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !5966
  br label %return, !dbg !5966

if.end:                                           ; preds = %entry
  %8 = load i32*, i32** %bit_no.addr, align 8, !dbg !5967
  %9 = load i32, i32* %8, align 4, !dbg !5968
  %add4 = add i32 %9, 64, !dbg !5969
  %sub = sub i32 %add4, 1, !dbg !5970
  %div = udiv i32 %sub, 64, !dbg !5971
  %mul = mul i32 %div, 64, !dbg !5972
  %10 = load i32*, i32** %bit_no.addr, align 8, !dbg !5973
  store i32 %mul, i32* %10, align 4, !dbg !5974
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5975
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 2, !dbg !5976
  %12 = load i32, i32* %word_no, align 8, !dbg !5977
  %inc = add i32 %12, 1, !dbg !5977
  store i32 %inc, i32* %word_no, align 8, !dbg !5977
  br label %while.body6, !dbg !5978

while.body6:                                      ; preds = %if.end, %if.end26
  br label %while.cond7, !dbg !5979

while.cond7:                                      ; preds = %if.end16, %while.body6
  %13 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5981
  %word_no8 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %13, i32 0, i32 2, !dbg !5982
  %14 = load i32, i32* %word_no8, align 8, !dbg !5982
  %cmp = icmp ne i32 %14, 2, !dbg !5983
  br i1 %cmp, label %while.body9, label %while.end20, !dbg !5979

while.body9:                                      ; preds = %while.cond7
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5984
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !5986
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !5986
  %bits10 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 3, !dbg !5987
  %17 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5988
  %word_no11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %17, i32 0, i32 2, !dbg !5989
  %18 = load i32, i32* %word_no11, align 8, !dbg !5989
  %idxprom = zext i32 %18 to i64, !dbg !5984
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits10, i64 0, i64 %idxprom, !dbg !5984
  %19 = load i64, i64* %arrayidx, align 8, !dbg !5984
  %20 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5990
  %bits12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %20, i32 0, i32 3, !dbg !5991
  store i64 %19, i64* %bits12, align 8, !dbg !5992
  %21 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !5993
  %bits13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %21, i32 0, i32 3, !dbg !5995
  %22 = load i64, i64* %bits13, align 8, !dbg !5995
  %tobool14 = icmp ne i64 %22, 0, !dbg !5993
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !5996

if.then15:                                        ; preds = %while.body9
  br label %next_bit, !dbg !5997

if.end16:                                         ; preds = %while.body9
  %23 = load i32*, i32** %bit_no.addr, align 8, !dbg !5998
  %24 = load i32, i32* %23, align 4, !dbg !5999
  %add17 = add i32 %24, 64, !dbg !5999
  store i32 %add17, i32* %23, align 4, !dbg !5999
  %25 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !6000
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %25, i32 0, i32 2, !dbg !6001
  %26 = load i32, i32* %word_no18, align 8, !dbg !6002
  %inc19 = add i32 %26, 1, !dbg !6002
  store i32 %inc19, i32* %word_no18, align 8, !dbg !6002
  br label %while.cond7, !dbg !5979, !llvm.loop !6003

while.end20:                                      ; preds = %while.cond7
  %27 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !6005
  %elt121 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %27, i32 0, i32 0, !dbg !6006
  %28 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt121, align 8, !dbg !6006
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %28, i32 0, i32 0, !dbg !6007
  %29 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !6007
  %30 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !6008
  %elt122 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %30, i32 0, i32 0, !dbg !6009
  store %struct.bitmap_element_def* %29, %struct.bitmap_element_def** %elt122, align 8, !dbg !6010
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !6011
  %elt123 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 0, !dbg !6013
  %32 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt123, align 8, !dbg !6013
  %tobool24 = icmp ne %struct.bitmap_element_def* %32, null, !dbg !6011
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !6014

if.then25:                                        ; preds = %while.end20
  store i8 0, i8* %retval, align 1, !dbg !6015
  br label %return, !dbg !6015

if.end26:                                         ; preds = %while.end20
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !6016
  %elt127 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 0, !dbg !6017
  %34 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt127, align 8, !dbg !6017
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %34, i32 0, i32 2, !dbg !6018
  %35 = load i32, i32* %indx, align 8, !dbg !6018
  %mul28 = mul i32 %35, 128, !dbg !6019
  %36 = load i32*, i32** %bit_no.addr, align 8, !dbg !6020
  store i32 %mul28, i32* %36, align 4, !dbg !6021
  %37 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !6022
  %word_no29 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %37, i32 0, i32 2, !dbg !6023
  store i32 0, i32* %word_no29, align 8, !dbg !6024
  br label %while.body6, !dbg !5978, !llvm.loop !6025

return:                                           ; preds = %if.then25, %while.end
  %38 = load i8, i8* %retval, align 1, !dbg !6027
  ret i8 %38, !dbg !6027
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !6028 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !6031, metadata !DIExpression()), !dbg !6032
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !6033, metadata !DIExpression()), !dbg !6034
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !6035
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !6036
  %1 = load i64, i64* %bits, align 8, !dbg !6037
  %shr = lshr i64 %1, 1, !dbg !6037
  store i64 %shr, i64* %bits, align 8, !dbg !6037
  %2 = load i32*, i32** %bit_no.addr, align 8, !dbg !6038
  %3 = load i32, i32* %2, align 4, !dbg !6039
  %add = add i32 %3, 1, !dbg !6039
  store i32 %add, i32* %2, align 4, !dbg !6039
  ret void, !dbg !6040
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) #2

declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @remove_from_deps(%struct.deps* %deps, %struct.rtx_def* %insn) #0 !dbg !6041 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %removed = alloca i32, align 4
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  %reg_last = alloca %struct.deps_reg*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !6042, metadata !DIExpression()), !dbg !6043
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata i32* %removed, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6048, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !6050, metadata !DIExpression()), !dbg !6051
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6052
  %1 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6053
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %1, i32 0, i32 0, !dbg !6054
  %2 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6055
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %2, i32 0, i32 1, !dbg !6056
  %call = call i32 @remove_from_both_dependence_lists(%struct.rtx_def* %0, %struct.rtx_def** %pending_read_insns, %struct.rtx_def** %pending_read_mems), !dbg !6057
  store i32 %call, i32* %removed, align 4, !dbg !6058
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6059
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !6059
  %bf.load = load i32, i32* %4, align 8, !dbg !6059
  %bf.clear = and i32 %bf.load, 65535, !dbg !6059
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !6059
  br i1 %cmp, label %if.end, label %if.then, !dbg !6061

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %removed, align 4, !dbg !6062
  %6 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6063
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %6, i32 0, i32 4, !dbg !6064
  %7 = load i32, i32* %pending_read_list_length, align 8, !dbg !6065
  %sub = sub nsw i32 %7, %5, !dbg !6065
  store i32 %sub, i32* %pending_read_list_length, align 8, !dbg !6065
  br label %if.end, !dbg !6063

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6066
  %9 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6067
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %9, i32 0, i32 2, !dbg !6068
  %10 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6069
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %10, i32 0, i32 3, !dbg !6070
  %call1 = call i32 @remove_from_both_dependence_lists(%struct.rtx_def* %8, %struct.rtx_def** %pending_write_insns, %struct.rtx_def** %pending_write_mems), !dbg !6071
  store i32 %call1, i32* %removed, align 4, !dbg !6072
  %11 = load i32, i32* %removed, align 4, !dbg !6073
  %12 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6074
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %12, i32 0, i32 5, !dbg !6075
  %13 = load i32, i32* %pending_write_list_length, align 4, !dbg !6076
  %sub2 = sub nsw i32 %13, %11, !dbg !6076
  store i32 %sub2, i32* %pending_write_list_length, align 4, !dbg !6076
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6077
  %15 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6078
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %15, i32 0, i32 7, !dbg !6079
  %call3 = call i32 @remove_from_dependence_list(%struct.rtx_def* %14, %struct.rtx_def** %last_pending_memory_flush), !dbg !6080
  store i32 %call3, i32* %removed, align 4, !dbg !6081
  %16 = load i32, i32* %removed, align 4, !dbg !6082
  %17 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6083
  %pending_flush_length = getelementptr inbounds %struct.deps, %struct.deps* %17, i32 0, i32 6, !dbg !6084
  %18 = load i32, i32* %pending_flush_length, align 8, !dbg !6085
  %sub4 = sub nsw i32 %18, %16, !dbg !6085
  store i32 %sub4, i32* %pending_flush_length, align 8, !dbg !6085
  %19 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6086
  %reg_last_in_use = getelementptr inbounds %struct.deps, %struct.deps* %19, i32 0, i32 15, !dbg !6086
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %reg_last_in_use, i32 0, i32* %i), !dbg !6086
  br label %for.cond, !dbg !6086

for.cond:                                         ; preds = %for.inc, %if.end
  %call5 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !6088
  %tobool = icmp ne i8 %call5, 0, !dbg !6086
  br i1 %tobool, label %for.body, label %for.end, !dbg !6086

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last, metadata !6090, metadata !DIExpression()), !dbg !6092
  %20 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6093
  %reg_last6 = getelementptr inbounds %struct.deps, %struct.deps* %20, i32 0, i32 14, !dbg !6094
  %21 = load %struct.deps_reg*, %struct.deps_reg** %reg_last6, align 8, !dbg !6094
  %22 = load i32, i32* %i, align 4, !dbg !6095
  %idxprom = zext i32 %22 to i64, !dbg !6093
  %arrayidx = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %21, i64 %idxprom, !dbg !6093
  store %struct.deps_reg* %arrayidx, %struct.deps_reg** %reg_last, align 8, !dbg !6092
  %23 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6096
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %23, i32 0, i32 0, !dbg !6098
  %24 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !6098
  %tobool7 = icmp ne %struct.rtx_def* %24, null, !dbg !6096
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !6099

if.then8:                                         ; preds = %for.body
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6100
  %26 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6101
  %uses9 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %26, i32 0, i32 0, !dbg !6102
  %call10 = call i32 @remove_from_dependence_list(%struct.rtx_def* %25, %struct.rtx_def** %uses9), !dbg !6103
  br label %if.end11, !dbg !6103

if.end11:                                         ; preds = %if.then8, %for.body
  %27 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6104
  %sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %27, i32 0, i32 1, !dbg !6106
  %28 = load %struct.rtx_def*, %struct.rtx_def** %sets, align 8, !dbg !6106
  %tobool12 = icmp ne %struct.rtx_def* %28, null, !dbg !6104
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !6107

if.then13:                                        ; preds = %if.end11
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6108
  %30 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6109
  %sets14 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %30, i32 0, i32 1, !dbg !6110
  %call15 = call i32 @remove_from_dependence_list(%struct.rtx_def* %29, %struct.rtx_def** %sets14), !dbg !6111
  br label %if.end16, !dbg !6111

if.end16:                                         ; preds = %if.then13, %if.end11
  %31 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6112
  %implicit_sets = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %31, i32 0, i32 2, !dbg !6114
  %32 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets, align 8, !dbg !6114
  %tobool17 = icmp ne %struct.rtx_def* %32, null, !dbg !6112
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !6115

if.then18:                                        ; preds = %if.end16
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6116
  %34 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6117
  %implicit_sets19 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %34, i32 0, i32 2, !dbg !6118
  %call20 = call i32 @remove_from_dependence_list(%struct.rtx_def* %33, %struct.rtx_def** %implicit_sets19), !dbg !6119
  br label %if.end21, !dbg !6119

if.end21:                                         ; preds = %if.then18, %if.end16
  %35 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6120
  %clobbers = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %35, i32 0, i32 3, !dbg !6122
  %36 = load %struct.rtx_def*, %struct.rtx_def** %clobbers, align 8, !dbg !6122
  %tobool22 = icmp ne %struct.rtx_def* %36, null, !dbg !6120
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !6123

if.then23:                                        ; preds = %if.end21
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6124
  %38 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6125
  %clobbers24 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %38, i32 0, i32 3, !dbg !6126
  %call25 = call i32 @remove_from_dependence_list(%struct.rtx_def* %37, %struct.rtx_def** %clobbers24), !dbg !6127
  br label %if.end26, !dbg !6127

if.end26:                                         ; preds = %if.then23, %if.end21
  %39 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6128
  %uses27 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %39, i32 0, i32 0, !dbg !6130
  %40 = load %struct.rtx_def*, %struct.rtx_def** %uses27, align 8, !dbg !6130
  %tobool28 = icmp ne %struct.rtx_def* %40, null, !dbg !6128
  br i1 %tobool28, label %if.end40, label %land.lhs.true, !dbg !6131

land.lhs.true:                                    ; preds = %if.end26
  %41 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6132
  %sets29 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %41, i32 0, i32 1, !dbg !6133
  %42 = load %struct.rtx_def*, %struct.rtx_def** %sets29, align 8, !dbg !6133
  %tobool30 = icmp ne %struct.rtx_def* %42, null, !dbg !6132
  br i1 %tobool30, label %if.end40, label %land.lhs.true31, !dbg !6134

land.lhs.true31:                                  ; preds = %land.lhs.true
  %43 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6135
  %implicit_sets32 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %43, i32 0, i32 2, !dbg !6136
  %44 = load %struct.rtx_def*, %struct.rtx_def** %implicit_sets32, align 8, !dbg !6136
  %tobool33 = icmp ne %struct.rtx_def* %44, null, !dbg !6135
  br i1 %tobool33, label %if.end40, label %land.lhs.true34, !dbg !6137

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %45 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !6138
  %clobbers35 = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %45, i32 0, i32 3, !dbg !6139
  %46 = load %struct.rtx_def*, %struct.rtx_def** %clobbers35, align 8, !dbg !6139
  %tobool36 = icmp ne %struct.rtx_def* %46, null, !dbg !6138
  br i1 %tobool36, label %if.end40, label %if.then37, !dbg !6140

if.then37:                                        ; preds = %land.lhs.true34
  %47 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6141
  %reg_last_in_use38 = getelementptr inbounds %struct.deps, %struct.deps* %47, i32 0, i32 15, !dbg !6141
  %48 = load i32, i32* %i, align 4, !dbg !6141
  %call39 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %reg_last_in_use38, i32 %48), !dbg !6141
  br label %if.end40, !dbg !6141

if.end40:                                         ; preds = %if.then37, %land.lhs.true34, %land.lhs.true31, %land.lhs.true, %if.end26
  br label %for.inc, !dbg !6142

for.inc:                                          ; preds = %if.end40
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !6088
  br label %for.cond, !dbg !6088, !llvm.loop !6143

for.end:                                          ; preds = %for.cond
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6145
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !6145
  %bf.load41 = load i32, i32* %50, align 8, !dbg !6145
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !6145
  %cmp43 = icmp eq i32 %bf.clear42, 10, !dbg !6145
  br i1 %cmp43, label %if.then44, label %if.end47, !dbg !6147

if.then44:                                        ; preds = %for.end
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6148
  %52 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6150
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %52, i32 0, i32 8, !dbg !6151
  %call45 = call i32 @remove_from_dependence_list(%struct.rtx_def* %51, %struct.rtx_def** %last_function_call), !dbg !6152
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6153
  %54 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6154
  %last_function_call_may_noreturn = getelementptr inbounds %struct.deps, %struct.deps* %54, i32 0, i32 9, !dbg !6155
  %call46 = call i32 @remove_from_dependence_list(%struct.rtx_def* %53, %struct.rtx_def** %last_function_call_may_noreturn), !dbg !6156
  br label %if.end47, !dbg !6157

if.end47:                                         ; preds = %if.then44, %for.end
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6158
  %56 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !6159
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %56, i32 0, i32 10, !dbg !6160
  %call48 = call i32 @remove_from_dependence_list(%struct.rtx_def* %55, %struct.rtx_def** %sched_before_next_call), !dbg !6161
  ret void, !dbg !6162
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @remove_from_both_dependence_lists(%struct.rtx_def* %insn, %struct.rtx_def** %listp, %struct.rtx_def** %exprp) #0 !dbg !6163 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %listp.addr = alloca %struct.rtx_def**, align 8
  %exprp.addr = alloca %struct.rtx_def**, align 8
  %removed = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  store %struct.rtx_def** %listp, %struct.rtx_def*** %listp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %listp.addr, metadata !6168, metadata !DIExpression()), !dbg !6169
  store %struct.rtx_def** %exprp, %struct.rtx_def*** %exprp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %exprp.addr, metadata !6170, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.declare(metadata i32* %removed, metadata !6172, metadata !DIExpression()), !dbg !6173
  store i32 0, i32* %removed, align 4, !dbg !6173
  br label %while.cond, !dbg !6174

while.cond:                                       ; preds = %if.end, %if.then, %entry
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !6175
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !6176
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !6174
  br i1 %tobool, label %while.body, label %while.end, !dbg !6174

while.body:                                       ; preds = %while.cond
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !6177
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !6177
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !6177
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6177
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6177
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6177
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6177
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6180
  %cmp = icmp eq %struct.rtx_def* %4, %5, !dbg !6181
  br i1 %cmp, label %if.then, label %if.end, !dbg !6182

if.then:                                          ; preds = %while.body
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !6183
  %call = call %struct.rtx_def* @remove_free_INSN_LIST_node(%struct.rtx_def** %6), !dbg !6185
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %exprp.addr, align 8, !dbg !6186
  %call1 = call %struct.rtx_def* @remove_free_EXPR_LIST_node(%struct.rtx_def** %7), !dbg !6187
  %8 = load i32, i32* %removed, align 4, !dbg !6188
  %inc = add nsw i32 %8, 1, !dbg !6188
  store i32 %inc, i32* %removed, align 4, !dbg !6188
  br label %while.cond, !dbg !6189, !llvm.loop !6190

if.end:                                           ; preds = %while.body
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !6192
  %10 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8, !dbg !6192
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !6192
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !6192
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 1, !dbg !6192
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !6192
  store %struct.rtx_def** %rt_rtx5, %struct.rtx_def*** %listp.addr, align 8, !dbg !6193
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %exprp.addr, align 8, !dbg !6194
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8, !dbg !6194
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !6194
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !6194
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 1, !dbg !6194
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !6194
  store %struct.rtx_def** %rt_rtx9, %struct.rtx_def*** %exprp.addr, align 8, !dbg !6195
  br label %while.cond, !dbg !6174, !llvm.loop !6190

while.end:                                        ; preds = %while.cond
  %13 = load i32, i32* %removed, align 4, !dbg !6196
  ret i32 %13, !dbg !6197
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @remove_from_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def** %listp) #0 !dbg !6198 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %listp.addr = alloca %struct.rtx_def**, align 8
  %removed = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6201, metadata !DIExpression()), !dbg !6202
  store %struct.rtx_def** %listp, %struct.rtx_def*** %listp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %listp.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.declare(metadata i32* %removed, metadata !6205, metadata !DIExpression()), !dbg !6206
  store i32 0, i32* %removed, align 4, !dbg !6206
  br label %while.cond, !dbg !6207

while.cond:                                       ; preds = %if.end, %if.then, %entry
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !6208
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !6209
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !6207
  br i1 %tobool, label %while.body, label %while.end, !dbg !6207

while.body:                                       ; preds = %while.cond
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !6210
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !6210
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !6210
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6210
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6210
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6210
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6210
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6213
  %cmp = icmp eq %struct.rtx_def* %4, %5, !dbg !6214
  br i1 %cmp, label %if.then, label %if.end, !dbg !6215

if.then:                                          ; preds = %while.body
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !6216
  %call = call %struct.rtx_def* @remove_free_INSN_LIST_node(%struct.rtx_def** %6), !dbg !6218
  %7 = load i32, i32* %removed, align 4, !dbg !6219
  %inc = add nsw i32 %7, 1, !dbg !6219
  store i32 %inc, i32* %removed, align 4, !dbg !6219
  br label %while.cond, !dbg !6220, !llvm.loop !6221

if.end:                                           ; preds = %while.body
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %listp.addr, align 8, !dbg !6223
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !6223
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !6223
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !6223
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !6223
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !6223
  store %struct.rtx_def** %rt_rtx4, %struct.rtx_def*** %listp.addr, align 8, !dbg !6224
  br label %while.cond, !dbg !6207, !llvm.loop !6221

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %removed, align 4, !dbg !6225
  ret i32 %10, !dbg !6226
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sched_deps_init(i8 zeroext %global_p) #0 !dbg !6227 {
entry:
  %global_p.addr = alloca i8, align 1
  %insns_in_block = alloca i32, align 4
  store i8 %global_p, i8* %global_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %global_p.addr, metadata !6230, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.declare(metadata i32* %insns_in_block, metadata !6232, metadata !DIExpression()), !dbg !6233
  %0 = load i32, i32* @sched_max_luid, align 4, !dbg !6234
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6235
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, !dbg !6235
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !6235
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6235
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i32 0, i32 3, !dbg !6235
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !6235
  %div = sdiv i32 %0, %3, !dbg !6236
  %add = add nsw i32 %div, 1, !dbg !6237
  store i32 %add, i32* %insns_in_block, align 4, !dbg !6233
  call void @init_deps_data_vector(), !dbg !6238
  %call = call zeroext i8 @sel_sched_p(), !dbg !6239
  %tobool = icmp ne i8 %call, 0, !dbg !6239
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6241

land.lhs.true:                                    ; preds = %entry
  %4 = load i8, i8* %global_p.addr, align 1, !dbg !6242
  %conv = zext i8 %4 to i32, !dbg !6242
  %tobool1 = icmp ne i32 %conv, 0, !dbg !6242
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !6243

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load i32, i32* %insns_in_block, align 4, !dbg !6244
  %cmp = icmp sgt i32 %5, 500, !dbg !6245
  br i1 %cmp, label %if.then, label %if.end, !dbg !6246

if.then:                                          ; preds = %land.lhs.true2
  store i32 0, i32* @cache_size, align 4, !dbg !6247
  %6 = load i32, i32* @sched_max_luid, align 4, !dbg !6249
  call void @extend_dependency_caches(i32 %6, i8 zeroext 1), !dbg !6250
  br label %if.end, !dbg !6251

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  %7 = load i8, i8* %global_p.addr, align 1, !dbg !6252
  %tobool4 = icmp ne i8 %7, 0, !dbg !6252
  br i1 %tobool4, label %if.then5, label %if.end10, !dbg !6254

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %insns_in_block, align 4, !dbg !6255
  %conv6 = sext i32 %8 to i64, !dbg !6255
  %call7 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 16, i64 %conv6), !dbg !6257
  store %struct.alloc_pool_def* %call7, %struct.alloc_pool_def** @dl_pool, align 8, !dbg !6258
  %9 = load i32, i32* %insns_in_block, align 4, !dbg !6259
  %mul = mul nsw i32 5, %9, !dbg !6260
  %conv8 = sext i32 %mul to i64, !dbg !6261
  %call9 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 72, i64 %conv8), !dbg !6262
  store %struct.alloc_pool_def* %call9, %struct.alloc_pool_def** @dn_pool, align 8, !dbg !6263
  br label %if.end10, !dbg !6264

if.end10:                                         ; preds = %if.then5, %if.end
  ret void, !dbg !6265
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_deps_data_vector() #0 !dbg !6266 {
entry:
  %reserve = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %reserve, metadata !6267, metadata !DIExpression()), !dbg !6268
  %0 = load i32, i32* @sched_max_luid, align 4, !dbg !6269
  %add = add nsw i32 %0, 1, !dbg !6270
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6271
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %1, null, !dbg !6271
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6271

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6271
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %2, i32 0, i32 0, !dbg !6271
  br label %cond.end, !dbg !6271

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6271

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6271
  %call = call i32 @VEC_haifa_deps_insn_data_def_base_length(%struct.VEC_haifa_deps_insn_data_def_base* %cond), !dbg !6271
  %sub = sub i32 %add, %call, !dbg !6272
  store i32 %sub, i32* %reserve, align 4, !dbg !6268
  %3 = load i32, i32* %reserve, align 4, !dbg !6273
  %cmp = icmp sgt i32 %3, 0, !dbg !6275
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6276

land.lhs.true:                                    ; preds = %cond.end
  %4 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6277
  %tobool1 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %4, null, !dbg !6277
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !6277

cond.true2:                                       ; preds = %land.lhs.true
  %5 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !6277
  %base3 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %5, i32 0, i32 0, !dbg !6277
  br label %cond.end5, !dbg !6277

cond.false4:                                      ; preds = %land.lhs.true
  br label %cond.end5, !dbg !6277

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !6277
  %6 = load i32, i32* %reserve, align 4, !dbg !6277
  %call7 = call i32 @VEC_haifa_deps_insn_data_def_base_space(%struct.VEC_haifa_deps_insn_data_def_base* %cond6, i32 %6), !dbg !6277
  %tobool8 = icmp ne i32 %call7, 0, !dbg !6277
  br i1 %tobool8, label %if.end, label %if.then, !dbg !6278

if.then:                                          ; preds = %cond.end5
  %7 = load i32, i32* @sched_max_luid, align 4, !dbg !6279
  %mul = mul nsw i32 3, %7, !dbg !6279
  %div = sdiv i32 %mul, 2, !dbg !6279
  call void @VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared(%struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, i32 %div), !dbg !6279
  br label %if.end, !dbg !6279

if.end:                                           ; preds = %if.then, %cond.end5, %cond.end
  ret void, !dbg !6280
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @extend_dependency_caches(i32 %n, i8 zeroext %create_p) #0 !dbg !6281 {
entry:
  %n.addr = alloca i32, align 4
  %create_p.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %luid = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6284, metadata !DIExpression()), !dbg !6285
  store i8 %create_p, i8* %create_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %create_p.addr, metadata !6286, metadata !DIExpression()), !dbg !6287
  %0 = load i8, i8* %create_p.addr, align 1, !dbg !6288
  %conv = zext i8 %0 to i32, !dbg !6288
  %tobool = icmp ne i32 %conv, 0, !dbg !6288
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6290

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6291
  %tobool1 = icmp ne %struct.bitmap_head_def* %1, null, !dbg !6291
  br i1 %tobool1, label %if.then, label %if.end26, !dbg !6292

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6293, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.declare(metadata i32* %luid, metadata !6296, metadata !DIExpression()), !dbg !6297
  %2 = load i32, i32* @cache_size, align 4, !dbg !6298
  %3 = load i32, i32* %n.addr, align 4, !dbg !6299
  %add = add nsw i32 %2, %3, !dbg !6300
  store i32 %add, i32* %luid, align 4, !dbg !6297
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6301
  %5 = bitcast %struct.bitmap_head_def* %4 to i8*, !dbg !6301
  %6 = load i32, i32* %luid, align 4, !dbg !6301
  %conv2 = sext i32 %6 to i64, !dbg !6301
  %mul = mul i64 32, %conv2, !dbg !6301
  %call = call i8* @xrealloc(i8* %5, i64 %mul), !dbg !6301
  %7 = bitcast i8* %call to %struct.bitmap_head_def*, !dbg !6301
  store %struct.bitmap_head_def* %7, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6302
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6303
  %9 = bitcast %struct.bitmap_head_def* %8 to i8*, !dbg !6303
  %10 = load i32, i32* %luid, align 4, !dbg !6303
  %conv3 = sext i32 %10 to i64, !dbg !6303
  %mul4 = mul i64 32, %conv3, !dbg !6303
  %call5 = call i8* @xrealloc(i8* %9, i64 %mul4), !dbg !6303
  %11 = bitcast i8* %call5 to %struct.bitmap_head_def*, !dbg !6303
  store %struct.bitmap_head_def* %11, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6304
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6305
  %13 = bitcast %struct.bitmap_head_def* %12 to i8*, !dbg !6305
  %14 = load i32, i32* %luid, align 4, !dbg !6305
  %conv6 = sext i32 %14 to i64, !dbg !6305
  %mul7 = mul i64 32, %conv6, !dbg !6305
  %call8 = call i8* @xrealloc(i8* %13, i64 %mul7), !dbg !6305
  %15 = bitcast i8* %call8 to %struct.bitmap_head_def*, !dbg !6305
  store %struct.bitmap_head_def* %15, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6306
  %16 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6307
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %16, i32 0, i32 17, !dbg !6309
  %17 = load i32, i32* %flags, align 8, !dbg !6309
  %and = and i32 %17, 2, !dbg !6310
  %tobool9 = icmp ne i32 %and, 0, !dbg !6310
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !6311

if.then10:                                        ; preds = %if.then
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !6312
  %19 = bitcast %struct.bitmap_head_def* %18 to i8*, !dbg !6312
  %20 = load i32, i32* %luid, align 4, !dbg !6312
  %conv11 = sext i32 %20 to i64, !dbg !6312
  %mul12 = mul i64 32, %conv11, !dbg !6312
  %call13 = call i8* @xrealloc(i8* %19, i64 %mul12), !dbg !6312
  %21 = bitcast i8* %call13 to %struct.bitmap_head_def*, !dbg !6312
  store %struct.bitmap_head_def* %21, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !6313
  br label %if.end, !dbg !6314

if.end:                                           ; preds = %if.then10, %if.then
  %22 = load i32, i32* @cache_size, align 4, !dbg !6315
  store i32 %22, i32* %i, align 4, !dbg !6317
  br label %for.cond, !dbg !6318

for.cond:                                         ; preds = %for.inc, %if.end
  %23 = load i32, i32* %i, align 4, !dbg !6319
  %24 = load i32, i32* %luid, align 4, !dbg !6321
  %cmp = icmp slt i32 %23, %24, !dbg !6322
  br i1 %cmp, label %for.body, label %for.end, !dbg !6323

for.body:                                         ; preds = %for.cond
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6324
  %26 = load i32, i32* %i, align 4, !dbg !6324
  %idxprom = sext i32 %26 to i64, !dbg !6324
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %25, i64 %idxprom, !dbg !6324
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %arrayidx, %struct.bitmap_obstack* null), !dbg !6324
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6326
  %28 = load i32, i32* %i, align 4, !dbg !6326
  %idxprom15 = sext i32 %28 to i64, !dbg !6326
  %arrayidx16 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %27, i64 %idxprom15, !dbg !6326
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %arrayidx16, %struct.bitmap_obstack* null), !dbg !6326
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6327
  %30 = load i32, i32* %i, align 4, !dbg !6327
  %idxprom17 = sext i32 %30 to i64, !dbg !6327
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %29, i64 %idxprom17, !dbg !6327
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %arrayidx18, %struct.bitmap_obstack* null), !dbg !6327
  %31 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6328
  %flags19 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %31, i32 0, i32 17, !dbg !6330
  %32 = load i32, i32* %flags19, align 8, !dbg !6330
  %and20 = and i32 %32, 2, !dbg !6331
  %tobool21 = icmp ne i32 %and20, 0, !dbg !6331
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !6332

if.then22:                                        ; preds = %for.body
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !6333
  %34 = load i32, i32* %i, align 4, !dbg !6333
  %idxprom23 = sext i32 %34 to i64, !dbg !6333
  %arrayidx24 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %33, i64 %idxprom23, !dbg !6333
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %arrayidx24, %struct.bitmap_obstack* null), !dbg !6333
  br label %if.end25, !dbg !6333

if.end25:                                         ; preds = %if.then22, %for.body
  br label %for.inc, !dbg !6334

for.inc:                                          ; preds = %if.end25
  %35 = load i32, i32* %i, align 4, !dbg !6335
  %inc = add nsw i32 %35, 1, !dbg !6335
  store i32 %inc, i32* %i, align 4, !dbg !6335
  br label %for.cond, !dbg !6336, !llvm.loop !6337

for.end:                                          ; preds = %for.cond
  %36 = load i32, i32* %luid, align 4, !dbg !6339
  store i32 %36, i32* @cache_size, align 4, !dbg !6340
  br label %if.end26, !dbg !6341

if.end26:                                         ; preds = %for.end, %lor.lhs.false
  ret void, !dbg !6342
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) #2

declare dso_local i8* @xrealloc(i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @sched_deps_finish() #0 !dbg !6343 {
entry:
  %i = alloca i32, align 4
  %call = call zeroext i8 @deps_pools_are_empty_p(), !dbg !6344
  %tobool = icmp ne i8 %call, 0, !dbg !6344
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6344

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3691, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6344
  br label %cond.end, !dbg !6344

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6344

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6344
  call void @free_alloc_pool_if_empty(%struct.alloc_pool_def** @dn_pool), !dbg !6345
  call void @free_alloc_pool_if_empty(%struct.alloc_pool_def** @dl_pool), !dbg !6346
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dn_pool, align 8, !dbg !6347
  %cmp = icmp eq %struct.alloc_pool_def* %0, null, !dbg !6347
  br i1 %cmp, label %land.lhs.true, label %cond.true2, !dbg !6347

land.lhs.true:                                    ; preds = %cond.end
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @dl_pool, align 8, !dbg !6347
  %cmp1 = icmp eq %struct.alloc_pool_def* %1, null, !dbg !6347
  br i1 %cmp1, label %cond.false3, label %cond.true2, !dbg !6347

cond.true2:                                       ; preds = %land.lhs.true, %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3694, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6347
  br label %cond.end4, !dbg !6347

cond.false3:                                      ; preds = %land.lhs.true
  br label %cond.end4, !dbg !6347

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ 0, %cond.true2 ], [ 0, %cond.false3 ], !dbg !6347
  call void @VEC_haifa_deps_insn_data_def_heap_free(%struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d), !dbg !6348
  store i32 0, i32* @cache_size, align 4, !dbg !6349
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6350
  %tobool6 = icmp ne %struct.bitmap_head_def* %2, null, !dbg !6350
  br i1 %tobool6, label %if.then, label %if.end24, !dbg !6352

if.then:                                          ; preds = %cond.end4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6353, metadata !DIExpression()), !dbg !6355
  store i32 0, i32* %i, align 4, !dbg !6356
  br label %for.cond, !dbg !6358

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !6359
  %4 = load i32, i32* @cache_size, align 4, !dbg !6361
  %cmp7 = icmp slt i32 %3, %4, !dbg !6362
  br i1 %cmp7, label %for.body, label %for.end, !dbg !6363

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6364
  %6 = load i32, i32* %i, align 4, !dbg !6366
  %idxprom = sext i32 %6 to i64, !dbg !6364
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %5, i64 %idxprom, !dbg !6364
  call void @bitmap_clear(%struct.bitmap_head_def* %arrayidx), !dbg !6367
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6368
  %8 = load i32, i32* %i, align 4, !dbg !6369
  %idxprom8 = sext i32 %8 to i64, !dbg !6368
  %arrayidx9 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %7, i64 %idxprom8, !dbg !6368
  call void @bitmap_clear(%struct.bitmap_head_def* %arrayidx9), !dbg !6370
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6371
  %10 = load i32, i32* %i, align 4, !dbg !6372
  %idxprom10 = sext i32 %10 to i64, !dbg !6371
  %arrayidx11 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %9, i64 %idxprom10, !dbg !6371
  call void @bitmap_clear(%struct.bitmap_head_def* %arrayidx11), !dbg !6373
  %11 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6374
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %11, i32 0, i32 12, !dbg !6376
  %bf.load = load i8, i8* %generate_spec_deps, align 8, !dbg !6376
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !6376
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6376
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6376
  %tobool12 = icmp ne i32 %bf.cast, 0, !dbg !6374
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !6377

if.then13:                                        ; preds = %for.body
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !6378
  %13 = load i32, i32* %i, align 4, !dbg !6379
  %idxprom14 = sext i32 %13 to i64, !dbg !6378
  %arrayidx15 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %12, i64 %idxprom14, !dbg !6378
  call void @bitmap_clear(%struct.bitmap_head_def* %arrayidx15), !dbg !6380
  br label %if.end, !dbg !6380

if.end:                                           ; preds = %if.then13, %for.body
  br label %for.inc, !dbg !6381

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !6382
  %inc = add nsw i32 %14, 1, !dbg !6382
  store i32 %inc, i32* %i, align 4, !dbg !6382
  br label %for.cond, !dbg !6383, !llvm.loop !6384

for.end:                                          ; preds = %for.cond
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6386
  %16 = bitcast %struct.bitmap_head_def* %15 to i8*, !dbg !6386
  call void @free(i8* %16), !dbg !6387
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !6388
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6389
  %18 = bitcast %struct.bitmap_head_def* %17 to i8*, !dbg !6389
  call void @free(i8* %18), !dbg !6390
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !6391
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6392
  %20 = bitcast %struct.bitmap_head_def* %19 to i8*, !dbg !6392
  call void @free(i8* %20), !dbg !6393
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !6394
  %21 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6395
  %generate_spec_deps16 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %21, i32 0, i32 12, !dbg !6397
  %bf.load17 = load i8, i8* %generate_spec_deps16, align 8, !dbg !6397
  %bf.lshr18 = lshr i8 %bf.load17, 2, !dbg !6397
  %bf.clear19 = and i8 %bf.lshr18, 1, !dbg !6397
  %bf.cast20 = zext i8 %bf.clear19 to i32, !dbg !6397
  %tobool21 = icmp ne i32 %bf.cast20, 0, !dbg !6395
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !6398

if.then22:                                        ; preds = %for.end
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !6399
  %23 = bitcast %struct.bitmap_head_def* %22 to i8*, !dbg !6399
  call void @free(i8* %23), !dbg !6401
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !6402
  br label %if.end23, !dbg !6403

if.end23:                                         ; preds = %if.then22, %for.end
  br label %if.end24, !dbg !6404

if.end24:                                         ; preds = %if.end23, %cond.end4
  ret void, !dbg !6405
}

declare dso_local void @free_alloc_pool_if_empty(%struct.alloc_pool_def**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_haifa_deps_insn_data_def_heap_free(%struct.VEC_haifa_deps_insn_data_def_heap** %vec_) #0 !dbg !6406 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_deps_insn_data_def_heap**, align 8
  store %struct.VEC_haifa_deps_insn_data_def_heap** %vec_, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, metadata !6410, metadata !DIExpression()), !dbg !6411
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !6412
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %0, align 8, !dbg !6412
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %1, null, !dbg !6412
  br i1 %tobool, label %if.then, label %if.end, !dbg !6411

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !6412
  %3 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %2, align 8, !dbg !6412
  %4 = bitcast %struct.VEC_haifa_deps_insn_data_def_heap* %3 to i8*, !dbg !6412
  call void @free(i8* %4), !dbg !6412
  br label %if.end, !dbg !6412

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !6411
  store %struct.VEC_haifa_deps_insn_data_def_heap* null, %struct.VEC_haifa_deps_insn_data_def_heap** %5, align 8, !dbg !6411
  ret void, !dbg !6411
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_deps_global() #0 !dbg !6414 {
entry:
  store i64 0, i64* @implicit_reg_pending_clobbers, align 8, !dbg !6415
  store i64 0, i64* @implicit_reg_pending_uses, align 8, !dbg !6416
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @reg_obstack), !dbg !6417
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !6418
  %call1 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @reg_obstack), !dbg !6419
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !6420
  %call2 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @reg_obstack), !dbg !6421
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !6422
  store i32 0, i32* @reg_pending_barrier, align 4, !dbg !6423
  %call3 = call zeroext i8 @sel_sched_p(), !dbg !6424
  %tobool = icmp ne i8 %call3, 0, !dbg !6424
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6426

lor.lhs.false:                                    ; preds = %entry
  %0 = load i32, i32* @sched_emulate_haifa_p, align 4, !dbg !6427
  %tobool4 = icmp ne i32 %0, 0, !dbg !6427
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6428

if.then:                                          ; preds = %lor.lhs.false, %entry
  %1 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6429
  %start_insn = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %1, i32 0, i32 1, !dbg !6431
  store void (%struct.rtx_def*)* @haifa_start_insn, void (%struct.rtx_def*)** %start_insn, align 8, !dbg !6432
  %2 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6433
  %finish_insn = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %2, i32 0, i32 2, !dbg !6434
  store void ()* @haifa_finish_insn, void ()** %finish_insn, align 8, !dbg !6435
  %3 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6436
  %note_reg_set = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %3, i32 0, i32 7, !dbg !6437
  store void (i32)* @haifa_note_reg_set, void (i32)** %note_reg_set, align 8, !dbg !6438
  %4 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6439
  %note_reg_clobber = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %4, i32 0, i32 8, !dbg !6440
  store void (i32)* @haifa_note_reg_clobber, void (i32)** %note_reg_clobber, align 8, !dbg !6441
  %5 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6442
  %note_reg_use = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %5, i32 0, i32 9, !dbg !6443
  store void (i32)* @haifa_note_reg_use, void (i32)** %note_reg_use, align 8, !dbg !6444
  %6 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6445
  %note_mem_dep = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %6, i32 0, i32 10, !dbg !6446
  store void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* @haifa_note_mem_dep, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)** %note_mem_dep, align 8, !dbg !6447
  %7 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6448
  %note_dep = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %7, i32 0, i32 11, !dbg !6449
  store void (%struct.rtx_def*, i32)* @haifa_note_dep, void (%struct.rtx_def*, i32)** %note_dep, align 8, !dbg !6450
  br label %if.end, !dbg !6451

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !6452
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @haifa_start_insn(%struct.rtx_def* %insn) #0 !dbg !6453 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6454, metadata !DIExpression()), !dbg !6455
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6456
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !6456
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !6456

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !6456
  %tobool1 = icmp ne %struct.rtx_def* %1, null, !dbg !6456
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !6456

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1621, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6456
  br label %cond.end, !dbg !6456

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !6456

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6456
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6457
  store %struct.rtx_def* %2, %struct.rtx_def** @cur_insn, align 8, !dbg !6458
  ret void, !dbg !6459
}

; Function Attrs: noinline nounwind uwtable
define internal void @haifa_finish_insn() #0 !dbg !6460 {
entry:
  store %struct.rtx_def* null, %struct.rtx_def** @cur_insn, align 8, !dbg !6461
  ret void, !dbg !6462
}

; Function Attrs: noinline nounwind uwtable
define internal void @haifa_note_mem_dep(%struct.rtx_def* %mem, %struct.rtx_def* %pending_mem, %struct.rtx_def* %pending_insn, i32 %ds) #0 !dbg !6463 {
entry:
  %mem.addr = alloca %struct.rtx_def*, align 8
  %pending_mem.addr = alloca %struct.rtx_def*, align 8
  %pending_insn.addr = alloca %struct.rtx_def*, align 8
  %ds.addr = alloca i32, align 4
  %_dep = alloca %struct._dep, align 8
  %dep = alloca %struct._dep*, align 8
  store %struct.rtx_def* %mem, %struct.rtx_def** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  store %struct.rtx_def* %pending_mem, %struct.rtx_def** %pending_mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pending_mem.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  store %struct.rtx_def* %pending_insn, %struct.rtx_def** %pending_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pending_insn.addr, metadata !6468, metadata !DIExpression()), !dbg !6469
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6470, metadata !DIExpression()), !dbg !6471
  %0 = load i32, i32* %ds.addr, align 4, !dbg !6472
  %and = and i32 %0, 16777215, !dbg !6474
  %tobool = icmp ne i32 %and, 0, !dbg !6474
  br i1 %tobool, label %if.else, label %if.then, !dbg !6475

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %mem.addr, align 8, !dbg !6476
  store %struct.rtx_def* null, %struct.rtx_def** %pending_mem.addr, align 8, !dbg !6478
  br label %if.end, !dbg !6479

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %ds.addr, align 4, !dbg !6480
  %and1 = and i32 %1, 63, !dbg !6480
  %tobool2 = icmp ne i32 %and1, 0, !dbg !6480
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !6480

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1659, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6480
  br label %cond.end, !dbg !6480

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !6480

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6480
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then
  call void @llvm.dbg.declare(metadata %struct._dep* %_dep, metadata !6481, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !6484, metadata !DIExpression()), !dbg !6485
  store %struct._dep* %_dep, %struct._dep** %dep, align 8, !dbg !6485
  %2 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6486
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pending_insn.addr, align 8, !dbg !6487
  %4 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !6488
  %5 = load i32, i32* %ds.addr, align 4, !dbg !6489
  %call = call i32 @ds_to_dt(i32 %5), !dbg !6490
  %6 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !6491
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %6, i32 0, i32 17, !dbg !6492
  %7 = load i32, i32* %flags, align 8, !dbg !6492
  %and3 = and i32 %7, 1, !dbg !6493
  %tobool4 = icmp ne i32 %and3, 0, !dbg !6493
  br i1 %tobool4, label %cond.true5, label %cond.false6, !dbg !6491

cond.true5:                                       ; preds = %if.end
  %8 = load i32, i32* %ds.addr, align 4, !dbg !6494
  br label %cond.end7, !dbg !6491

cond.false6:                                      ; preds = %if.end
  br label %cond.end7, !dbg !6491

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ %8, %cond.true5 ], [ -1, %cond.false6 ], !dbg !6491
  call void @init_dep_1(%struct._dep* %2, %struct.rtx_def* %3, %struct.rtx_def* %4, i32 %call, i32 %cond8), !dbg !6495
  %9 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6496
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem.addr, align 8, !dbg !6497
  %11 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !6498
  %call9 = call i32 @maybe_add_or_update_dep_1(%struct._dep* %9, i8 zeroext 0, %struct.rtx_def* %10, %struct.rtx_def* %11), !dbg !6499
  ret void, !dbg !6500
}

; Function Attrs: noinline nounwind uwtable
define internal void @haifa_note_dep(%struct.rtx_def* %elem, i32 %ds) #0 !dbg !6501 {
entry:
  %elem.addr = alloca %struct.rtx_def*, align 8
  %ds.addr = alloca i32, align 4
  %_dep = alloca %struct._dep, align 8
  %dep = alloca %struct._dep*, align 8
  store %struct.rtx_def* %elem, %struct.rtx_def** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elem.addr, metadata !6502, metadata !DIExpression()), !dbg !6503
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6504, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.declare(metadata %struct._dep* %_dep, metadata !6506, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !6508, metadata !DIExpression()), !dbg !6509
  store %struct._dep* %_dep, %struct._dep** %dep, align 8, !dbg !6509
  %0 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6510
  %1 = load %struct.rtx_def*, %struct.rtx_def** %elem.addr, align 8, !dbg !6511
  %2 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !6512
  %3 = load i32, i32* %ds.addr, align 4, !dbg !6513
  %call = call i32 @ds_to_dt(i32 %3), !dbg !6514
  call void @init_dep(%struct._dep* %0, %struct.rtx_def* %1, %struct.rtx_def* %2, i32 %call), !dbg !6515
  %4 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !6516
  %call1 = call i32 @maybe_add_or_update_dep_1(%struct._dep* %4, i8 zeroext 0, %struct.rtx_def* null, %struct.rtx_def* null), !dbg !6517
  ret void, !dbg !6518
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @finish_deps_global() #0 !dbg !6519 {
entry:
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !6520
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %0), !dbg !6520
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !6520
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !6521
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %1), !dbg !6521
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !6521
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !6522
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %2), !dbg !6522
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !6522
  ret void, !dbg !6523
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @estimate_dep_weak(%struct.rtx_def* %mem1, %struct.rtx_def* %mem2) #0 !dbg !6524 {
entry:
  %retval = alloca i32, align 4
  %mem1.addr = alloca %struct.rtx_def*, align 8
  %mem2.addr = alloca %struct.rtx_def*, align 8
  %r1 = alloca %struct.rtx_def*, align 8
  %r2 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %mem1, %struct.rtx_def** %mem1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem1.addr, metadata !6527, metadata !DIExpression()), !dbg !6528
  store %struct.rtx_def* %mem2, %struct.rtx_def** %mem2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem2.addr, metadata !6529, metadata !DIExpression()), !dbg !6530
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %r1, metadata !6531, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %r2, metadata !6533, metadata !DIExpression()), !dbg !6534
  %0 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !6535
  %1 = load %struct.rtx_def*, %struct.rtx_def** %mem2.addr, align 8, !dbg !6537
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !6538
  br i1 %cmp, label %if.then, label %if.end, !dbg !6539

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !6540
  br label %return, !dbg !6540

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !6541
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6541
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6541
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6541
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6541
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6541
  store %struct.rtx_def* %3, %struct.rtx_def** %r1, align 8, !dbg !6542
  %4 = load %struct.rtx_def*, %struct.rtx_def** %mem2.addr, align 8, !dbg !6543
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !6543
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !6543
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !6543
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !6543
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !6543
  store %struct.rtx_def* %5, %struct.rtx_def** %r2, align 8, !dbg !6544
  %6 = load %struct.rtx_def*, %struct.rtx_def** %r1, align 8, !dbg !6545
  %7 = load %struct.rtx_def*, %struct.rtx_def** %r2, align 8, !dbg !6547
  %cmp5 = icmp eq %struct.rtx_def* %6, %7, !dbg !6548
  br i1 %cmp5, label %if.then13, label %lor.lhs.false, !dbg !6549

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %r1, align 8, !dbg !6550
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !6550
  %bf.load = load i32, i32* %9, align 8, !dbg !6550
  %bf.clear = and i32 %bf.load, 65535, !dbg !6550
  %cmp6 = icmp eq i32 %bf.clear, 37, !dbg !6550
  br i1 %cmp6, label %land.lhs.true, label %if.else, !dbg !6551

land.lhs.true:                                    ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %r2, align 8, !dbg !6552
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !6552
  %bf.load7 = load i32, i32* %11, align 8, !dbg !6552
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !6552
  %cmp9 = icmp eq i32 %bf.clear8, 37, !dbg !6552
  br i1 %cmp9, label %land.lhs.true10, label %if.else, !dbg !6553

land.lhs.true10:                                  ; preds = %land.lhs.true
  %12 = load %struct.rtx_def*, %struct.rtx_def** %r1, align 8, !dbg !6554
  %call = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !6554
  %13 = load %struct.rtx_def*, %struct.rtx_def** %r2, align 8, !dbg !6555
  %call11 = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !6555
  %cmp12 = icmp eq i32 %call, %call11, !dbg !6556
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !6557

if.then13:                                        ; preds = %land.lhs.true10, %if.end
  store i32 1, i32* %retval, align 4, !dbg !6558
  br label %return, !dbg !6558

if.else:                                          ; preds = %land.lhs.true10, %land.lhs.true, %lor.lhs.false
  %14 = load %struct.rtx_def*, %struct.rtx_def** %r1, align 8, !dbg !6559
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !6559
  %bf.load14 = load i32, i32* %15, align 8, !dbg !6559
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !6559
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !6559
  br i1 %cmp16, label %land.lhs.true17, label %lor.lhs.false21, !dbg !6561

land.lhs.true17:                                  ; preds = %if.else
  %16 = load %struct.rtx_def*, %struct.rtx_def** %r2, align 8, !dbg !6562
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !6562
  %bf.load18 = load i32, i32* %17, align 8, !dbg !6562
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !6562
  %cmp20 = icmp eq i32 %bf.clear19, 37, !dbg !6562
  br i1 %cmp20, label %lor.lhs.false21, label %if.then29, !dbg !6563

lor.lhs.false21:                                  ; preds = %land.lhs.true17, %if.else
  %18 = load %struct.rtx_def*, %struct.rtx_def** %r1, align 8, !dbg !6564
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !6564
  %bf.load22 = load i32, i32* %19, align 8, !dbg !6564
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !6564
  %cmp24 = icmp eq i32 %bf.clear23, 37, !dbg !6564
  br i1 %cmp24, label %if.else30, label %land.lhs.true25, !dbg !6565

land.lhs.true25:                                  ; preds = %lor.lhs.false21
  %20 = load %struct.rtx_def*, %struct.rtx_def** %r2, align 8, !dbg !6566
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !6566
  %bf.load26 = load i32, i32* %21, align 8, !dbg !6566
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !6566
  %cmp28 = icmp eq i32 %bf.clear27, 37, !dbg !6566
  br i1 %cmp28, label %if.then29, label %if.else30, !dbg !6567

if.then29:                                        ; preds = %land.lhs.true25, %land.lhs.true17
  store i32 55, i32* %retval, align 4, !dbg !6568
  br label %return, !dbg !6568

if.else30:                                        ; preds = %land.lhs.true25, %lor.lhs.false21
  store i32 47, i32* %retval, align 4, !dbg !6569
  br label %return, !dbg !6569

return:                                           ; preds = %if.else30, %if.then29, %if.then13, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !6570
  ret i32 %22, !dbg !6570
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !6571 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6574, metadata !DIExpression()), !dbg !6575
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6576
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !6576
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6576
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6576
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6576
  %1 = load i32, i32* %rt_uint, align 8, !dbg !6576
  ret i32 %1, !dbg !6577
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @add_dependence(%struct.rtx_def* %insn, %struct.rtx_def* %elem, i32 %dep_type) #0 !dbg !6578 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %elem.addr = alloca %struct.rtx_def*, align 8
  %dep_type.addr = alloca i32, align 4
  %ds = alloca i32, align 4
  %internal = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6581, metadata !DIExpression()), !dbg !6582
  store %struct.rtx_def* %elem, %struct.rtx_def** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elem.addr, metadata !6583, metadata !DIExpression()), !dbg !6584
  store i32 %dep_type, i32* %dep_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dep_type.addr, metadata !6585, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.declare(metadata i32* %ds, metadata !6587, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.declare(metadata i8* %internal, metadata !6589, metadata !DIExpression()), !dbg !6590
  %0 = load i32, i32* %dep_type.addr, align 4, !dbg !6591
  %cmp = icmp eq i32 %0, 0, !dbg !6593
  br i1 %cmp, label %if.then, label %if.else, !dbg !6594

if.then:                                          ; preds = %entry
  store i32 16777216, i32* %ds, align 4, !dbg !6595
  br label %if.end5, !dbg !6596

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %dep_type.addr, align 4, !dbg !6597
  %cmp1 = icmp eq i32 %1, 11, !dbg !6599
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !6600

if.then2:                                         ; preds = %if.else
  store i32 33554432, i32* %ds, align 4, !dbg !6601
  br label %if.end, !dbg !6602

if.else3:                                         ; preds = %if.else
  %2 = load i32, i32* %dep_type.addr, align 4, !dbg !6603
  %cmp4 = icmp eq i32 %2, 12, !dbg !6603
  br i1 %cmp4, label %cond.false, label %cond.true, !dbg !6603

cond.true:                                        ; preds = %if.else3
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3808, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6603
  br label %cond.end, !dbg !6603

cond.false:                                       ; preds = %if.else3
  br label %cond.end, !dbg !6603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6603
  store i32 67108864, i32* %ds, align 4, !dbg !6605
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then2
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %3 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !6606
  %cmp6 = icmp ne %struct.rtx_def* %3, null, !dbg !6607
  %conv = zext i1 %cmp6 to i32, !dbg !6607
  %conv7 = trunc i32 %conv to i8, !dbg !6606
  store i8 %conv7, i8* %internal, align 1, !dbg !6608
  %4 = load i8, i8* %internal, align 1, !dbg !6609
  %tobool = icmp ne i8 %4, 0, !dbg !6609
  br i1 %tobool, label %if.then8, label %if.else15, !dbg !6611

if.then8:                                         ; preds = %if.end5
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6612
  %6 = load %struct.rtx_def*, %struct.rtx_def** @cur_insn, align 8, !dbg !6612
  %cmp9 = icmp eq %struct.rtx_def* %5, %6, !dbg !6612
  br i1 %cmp9, label %cond.false12, label %cond.true11, !dbg !6612

cond.true11:                                      ; preds = %if.then8
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3816, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6612
  br label %cond.end13, !dbg !6612

cond.false12:                                     ; preds = %if.then8
  br label %cond.end13, !dbg !6612

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ 0, %cond.true11 ], [ 0, %cond.false12 ], !dbg !6612
  br label %if.end16, !dbg !6612

if.else15:                                        ; preds = %if.end5
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6613
  store %struct.rtx_def* %7, %struct.rtx_def** @cur_insn, align 8, !dbg !6614
  br label %if.end16

if.end16:                                         ; preds = %if.else15, %cond.end13
  %8 = load %struct.rtx_def*, %struct.rtx_def** %elem.addr, align 8, !dbg !6615
  %9 = load i32, i32* %ds, align 4, !dbg !6616
  call void @note_dep(%struct.rtx_def* %8, i32 %9), !dbg !6617
  %10 = load i8, i8* %internal, align 1, !dbg !6618
  %tobool17 = icmp ne i8 %10, 0, !dbg !6618
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !6620

if.then18:                                        ; preds = %if.end16
  store %struct.rtx_def* null, %struct.rtx_def** @cur_insn, align 8, !dbg !6621
  br label %if.end19, !dbg !6622

if.end19:                                         ; preds = %if.then18, %if.end16
  ret void, !dbg !6623
}

; Function Attrs: noinline nounwind uwtable
define internal void @note_dep(%struct.rtx_def* %e, i32 %ds) #0 !dbg !6624 {
entry:
  %e.addr = alloca %struct.rtx_def*, align 8
  %ds.addr = alloca i32, align 4
  store %struct.rtx_def* %e, %struct.rtx_def** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %e.addr, metadata !6625, metadata !DIExpression()), !dbg !6626
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6627, metadata !DIExpression()), !dbg !6628
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6629
  %note_dep = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i32 0, i32 11, !dbg !6631
  %1 = load void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)** %note_dep, align 8, !dbg !6631
  %tobool = icmp ne void (%struct.rtx_def*, i32)* %1, null, !dbg !6629
  br i1 %tobool, label %if.then, label %if.end, !dbg !6632

if.then:                                          ; preds = %entry
  %2 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !6633
  %note_dep1 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %2, i32 0, i32 11, !dbg !6634
  %3 = load void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)** %note_dep1, align 8, !dbg !6634
  %4 = load %struct.rtx_def*, %struct.rtx_def** %e.addr, align 8, !dbg !6635
  %5 = load i32, i32* %ds.addr, align 4, !dbg !6636
  call void %3(%struct.rtx_def* %4, i32 %5), !dbg !6633
  br label %if.end, !dbg !6633

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6637
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @get_dep_weak_1(i32 %ds, i32 %type) #0 !dbg !6638 {
entry:
  %ds.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6643, metadata !DIExpression()), !dbg !6644
  %0 = load i32, i32* %ds.addr, align 4, !dbg !6645
  %1 = load i32, i32* %type.addr, align 4, !dbg !6646
  %and = and i32 %0, %1, !dbg !6647
  store i32 %and, i32* %ds.addr, align 4, !dbg !6648
  %2 = load i32, i32* %type.addr, align 4, !dbg !6649
  switch i32 %2, label %sw.default [
    i32 63, label %sw.bb
    i32 4032, label %sw.bb1
    i32 258048, label %sw.bb3
    i32 16515072, label %sw.bb5
  ], !dbg !6650

sw.bb:                                            ; preds = %entry
  %3 = load i32, i32* %ds.addr, align 4, !dbg !6651
  %shr = ashr i32 %3, 0, !dbg !6651
  store i32 %shr, i32* %ds.addr, align 4, !dbg !6651
  br label %sw.epilog, !dbg !6653

sw.bb1:                                           ; preds = %entry
  %4 = load i32, i32* %ds.addr, align 4, !dbg !6654
  %shr2 = ashr i32 %4, 6, !dbg !6654
  store i32 %shr2, i32* %ds.addr, align 4, !dbg !6654
  br label %sw.epilog, !dbg !6655

sw.bb3:                                           ; preds = %entry
  %5 = load i32, i32* %ds.addr, align 4, !dbg !6656
  %shr4 = ashr i32 %5, 12, !dbg !6656
  store i32 %shr4, i32* %ds.addr, align 4, !dbg !6656
  br label %sw.epilog, !dbg !6657

sw.bb5:                                           ; preds = %entry
  %6 = load i32, i32* %ds.addr, align 4, !dbg !6658
  %shr6 = ashr i32 %6, 18, !dbg !6658
  store i32 %shr6, i32* %ds.addr, align 4, !dbg !6658
  br label %sw.epilog, !dbg !6659

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3837, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6660
  br label %sw.epilog, !dbg !6661

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %7 = load i32, i32* %ds.addr, align 4, !dbg !6662
  ret i32 %7, !dbg !6663
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @get_dep_weak(i32 %ds, i32 %type) #0 !dbg !6664 {
entry:
  %ds.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %dw = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6665, metadata !DIExpression()), !dbg !6666
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6667, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %dw, metadata !6669, metadata !DIExpression()), !dbg !6670
  %0 = load i32, i32* %ds.addr, align 4, !dbg !6671
  %1 = load i32, i32* %type.addr, align 4, !dbg !6672
  %call = call i32 @get_dep_weak_1(i32 %0, i32 %1), !dbg !6673
  store i32 %call, i32* %dw, align 4, !dbg !6670
  %2 = load i32, i32* %dw, align 4, !dbg !6674
  %cmp = icmp sle i32 1, %2, !dbg !6674
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !6674

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %dw, align 4, !dbg !6674
  %cmp1 = icmp sle i32 %3, 62, !dbg !6674
  br i1 %cmp1, label %cond.false, label %cond.true, !dbg !6674

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6674
  br label %cond.end, !dbg !6674

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !6674

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6674
  %4 = load i32, i32* %dw, align 4, !dbg !6675
  ret i32 %4, !dbg !6676
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @set_dep_weak(i32 %ds, i32 %type, i32 %dw) #0 !dbg !6677 {
entry:
  %ds.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %dw.addr = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6680, metadata !DIExpression()), !dbg !6681
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6682, metadata !DIExpression()), !dbg !6683
  store i32 %dw, i32* %dw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dw.addr, metadata !6684, metadata !DIExpression()), !dbg !6685
  %0 = load i32, i32* %dw.addr, align 4, !dbg !6686
  %cmp = icmp sle i32 1, %0, !dbg !6686
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !6686

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %dw.addr, align 4, !dbg !6686
  %cmp1 = icmp sle i32 %1, 62, !dbg !6686
  br i1 %cmp1, label %cond.false, label %cond.true, !dbg !6686

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3857, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6686
  br label %cond.end, !dbg !6686

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !6686

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6686
  %2 = load i32, i32* %type.addr, align 4, !dbg !6687
  %neg = xor i32 %2, -1, !dbg !6688
  %3 = load i32, i32* %ds.addr, align 4, !dbg !6689
  %and = and i32 %3, %neg, !dbg !6689
  store i32 %and, i32* %ds.addr, align 4, !dbg !6689
  %4 = load i32, i32* %type.addr, align 4, !dbg !6690
  switch i32 %4, label %sw.default [
    i32 63, label %sw.bb
    i32 4032, label %sw.bb2
    i32 258048, label %sw.bb5
    i32 16515072, label %sw.bb8
  ], !dbg !6691

sw.bb:                                            ; preds = %cond.end
  %5 = load i32, i32* %dw.addr, align 4, !dbg !6692
  %shl = shl i32 %5, 0, !dbg !6694
  %6 = load i32, i32* %ds.addr, align 4, !dbg !6695
  %or = or i32 %6, %shl, !dbg !6695
  store i32 %or, i32* %ds.addr, align 4, !dbg !6695
  br label %sw.epilog, !dbg !6696

sw.bb2:                                           ; preds = %cond.end
  %7 = load i32, i32* %dw.addr, align 4, !dbg !6697
  %shl3 = shl i32 %7, 6, !dbg !6698
  %8 = load i32, i32* %ds.addr, align 4, !dbg !6699
  %or4 = or i32 %8, %shl3, !dbg !6699
  store i32 %or4, i32* %ds.addr, align 4, !dbg !6699
  br label %sw.epilog, !dbg !6700

sw.bb5:                                           ; preds = %cond.end
  %9 = load i32, i32* %dw.addr, align 4, !dbg !6701
  %shl6 = shl i32 %9, 12, !dbg !6702
  %10 = load i32, i32* %ds.addr, align 4, !dbg !6703
  %or7 = or i32 %10, %shl6, !dbg !6703
  store i32 %or7, i32* %ds.addr, align 4, !dbg !6703
  br label %sw.epilog, !dbg !6704

sw.bb8:                                           ; preds = %cond.end
  %11 = load i32, i32* %dw.addr, align 4, !dbg !6705
  %shl9 = shl i32 %11, 18, !dbg !6706
  %12 = load i32, i32* %ds.addr, align 4, !dbg !6707
  %or10 = or i32 %12, %shl9, !dbg !6707
  store i32 %or10, i32* %ds.addr, align 4, !dbg !6707
  br label %sw.epilog, !dbg !6708

sw.default:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3866, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6709
  br label %sw.epilog, !dbg !6710

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb5, %sw.bb2, %sw.bb
  %13 = load i32, i32* %ds.addr, align 4, !dbg !6711
  ret i32 %13, !dbg !6712
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ds_merge(i32 %ds1, i32 %ds2) #0 !dbg !6713 {
entry:
  %ds1.addr = alloca i32, align 4
  %ds2.addr = alloca i32, align 4
  store i32 %ds1, i32* %ds1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds1.addr, metadata !6716, metadata !DIExpression()), !dbg !6717
  store i32 %ds2, i32* %ds2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds2.addr, metadata !6718, metadata !DIExpression()), !dbg !6719
  %0 = load i32, i32* %ds1.addr, align 4, !dbg !6720
  %1 = load i32, i32* %ds2.addr, align 4, !dbg !6721
  %call = call i32 @ds_merge_1(i32 %0, i32 %1, i8 zeroext 0), !dbg !6722
  ret i32 %call, !dbg !6723
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ds_merge_1(i32 %ds1, i32 %ds2, i8 zeroext %max_p) #0 !dbg !6724 {
entry:
  %ds1.addr = alloca i32, align 4
  %ds2.addr = alloca i32, align 4
  %max_p.addr = alloca i8, align 1
  %ds = alloca i32, align 4
  %t = alloca i32, align 4
  %dw1 = alloca i32, align 4
  %dw2 = alloca i32, align 4
  %dw = alloca i32, align 4
  store i32 %ds1, i32* %ds1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds1.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  store i32 %ds2, i32* %ds2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds2.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  store i8 %max_p, i8* %max_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %max_p.addr, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.declare(metadata i32* %ds, metadata !6733, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.declare(metadata i32* %t, metadata !6735, metadata !DIExpression()), !dbg !6736
  %0 = load i32, i32* %ds1.addr, align 4, !dbg !6737
  %and = and i32 %0, 16777215, !dbg !6737
  %tobool = icmp ne i32 %and, 0, !dbg !6737
  br i1 %tobool, label %land.lhs.true, label %cond.true, !dbg !6737

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ds2.addr, align 4, !dbg !6737
  %and1 = and i32 %1, 16777215, !dbg !6737
  %tobool2 = icmp ne i32 %and1, 0, !dbg !6737
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !6737

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 3880, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6737
  br label %cond.end, !dbg !6737

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !6737

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6737
  %2 = load i32, i32* %ds1.addr, align 4, !dbg !6738
  %and3 = and i32 %2, 117440512, !dbg !6739
  %3 = load i32, i32* %ds2.addr, align 4, !dbg !6740
  %and4 = and i32 %3, 117440512, !dbg !6741
  %or = or i32 %and3, %and4, !dbg !6742
  store i32 %or, i32* %ds, align 4, !dbg !6743
  store i32 63, i32* %t, align 4, !dbg !6744
  br label %do.body, !dbg !6745

do.body:                                          ; preds = %do.cond, %cond.end
  %4 = load i32, i32* %ds1.addr, align 4, !dbg !6746
  %5 = load i32, i32* %t, align 4, !dbg !6749
  %and5 = and i32 %4, %5, !dbg !6750
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6750
  br i1 %tobool6, label %land.lhs.true7, label %if.else, !dbg !6751

land.lhs.true7:                                   ; preds = %do.body
  %6 = load i32, i32* %ds2.addr, align 4, !dbg !6752
  %7 = load i32, i32* %t, align 4, !dbg !6753
  %and8 = and i32 %6, %7, !dbg !6754
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6754
  br i1 %tobool9, label %if.else, label %if.then, !dbg !6755

if.then:                                          ; preds = %land.lhs.true7
  %8 = load i32, i32* %ds1.addr, align 4, !dbg !6756
  %9 = load i32, i32* %t, align 4, !dbg !6757
  %and10 = and i32 %8, %9, !dbg !6758
  %10 = load i32, i32* %ds, align 4, !dbg !6759
  %or11 = or i32 %10, %and10, !dbg !6759
  store i32 %or11, i32* %ds, align 4, !dbg !6759
  br label %if.end40, !dbg !6760

if.else:                                          ; preds = %land.lhs.true7, %do.body
  %11 = load i32, i32* %ds1.addr, align 4, !dbg !6761
  %12 = load i32, i32* %t, align 4, !dbg !6763
  %and12 = and i32 %11, %12, !dbg !6764
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6764
  br i1 %tobool13, label %if.else20, label %land.lhs.true14, !dbg !6765

land.lhs.true14:                                  ; preds = %if.else
  %13 = load i32, i32* %ds2.addr, align 4, !dbg !6766
  %14 = load i32, i32* %t, align 4, !dbg !6767
  %and15 = and i32 %13, %14, !dbg !6768
  %tobool16 = icmp ne i32 %and15, 0, !dbg !6768
  br i1 %tobool16, label %if.then17, label %if.else20, !dbg !6769

if.then17:                                        ; preds = %land.lhs.true14
  %15 = load i32, i32* %ds2.addr, align 4, !dbg !6770
  %16 = load i32, i32* %t, align 4, !dbg !6771
  %and18 = and i32 %15, %16, !dbg !6772
  %17 = load i32, i32* %ds, align 4, !dbg !6773
  %or19 = or i32 %17, %and18, !dbg !6773
  store i32 %or19, i32* %ds, align 4, !dbg !6773
  br label %if.end39, !dbg !6774

if.else20:                                        ; preds = %land.lhs.true14, %if.else
  %18 = load i32, i32* %ds1.addr, align 4, !dbg !6775
  %19 = load i32, i32* %t, align 4, !dbg !6777
  %and21 = and i32 %18, %19, !dbg !6778
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6778
  br i1 %tobool22, label %land.lhs.true23, label %if.end38, !dbg !6779

land.lhs.true23:                                  ; preds = %if.else20
  %20 = load i32, i32* %ds2.addr, align 4, !dbg !6780
  %21 = load i32, i32* %t, align 4, !dbg !6781
  %and24 = and i32 %20, %21, !dbg !6782
  %tobool25 = icmp ne i32 %and24, 0, !dbg !6782
  br i1 %tobool25, label %if.then26, label %if.end38, !dbg !6783

if.then26:                                        ; preds = %land.lhs.true23
  call void @llvm.dbg.declare(metadata i32* %dw1, metadata !6784, metadata !DIExpression()), !dbg !6786
  %22 = load i32, i32* %ds1.addr, align 4, !dbg !6787
  %23 = load i32, i32* %t, align 4, !dbg !6788
  %call = call i32 @get_dep_weak(i32 %22, i32 %23), !dbg !6789
  store i32 %call, i32* %dw1, align 4, !dbg !6786
  call void @llvm.dbg.declare(metadata i32* %dw2, metadata !6790, metadata !DIExpression()), !dbg !6791
  %24 = load i32, i32* %ds2.addr, align 4, !dbg !6792
  %25 = load i32, i32* %t, align 4, !dbg !6793
  %call27 = call i32 @get_dep_weak(i32 %24, i32 %25), !dbg !6794
  store i32 %call27, i32* %dw2, align 4, !dbg !6791
  call void @llvm.dbg.declare(metadata i32* %dw, metadata !6795, metadata !DIExpression()), !dbg !6796
  %26 = load i8, i8* %max_p.addr, align 1, !dbg !6797
  %tobool28 = icmp ne i8 %26, 0, !dbg !6797
  br i1 %tobool28, label %if.else31, label %if.then29, !dbg !6799

if.then29:                                        ; preds = %if.then26
  %27 = load i32, i32* %dw1, align 4, !dbg !6800
  %28 = load i32, i32* %dw2, align 4, !dbg !6802
  %mul = mul nsw i32 %27, %28, !dbg !6803
  store i32 %mul, i32* %dw, align 4, !dbg !6804
  %29 = load i32, i32* %dw, align 4, !dbg !6805
  %div = sdiv i32 %29, 62, !dbg !6805
  store i32 %div, i32* %dw, align 4, !dbg !6805
  %30 = load i32, i32* %dw, align 4, !dbg !6806
  %cmp = icmp slt i32 %30, 1, !dbg !6808
  br i1 %cmp, label %if.then30, label %if.end, !dbg !6809

if.then30:                                        ; preds = %if.then29
  store i32 1, i32* %dw, align 4, !dbg !6810
  br label %if.end, !dbg !6811

if.end:                                           ; preds = %if.then30, %if.then29
  br label %if.end36, !dbg !6812

if.else31:                                        ; preds = %if.then26
  %31 = load i32, i32* %dw1, align 4, !dbg !6813
  %32 = load i32, i32* %dw2, align 4, !dbg !6816
  %cmp32 = icmp sge i32 %31, %32, !dbg !6817
  br i1 %cmp32, label %if.then33, label %if.else34, !dbg !6818

if.then33:                                        ; preds = %if.else31
  %33 = load i32, i32* %dw1, align 4, !dbg !6819
  store i32 %33, i32* %dw, align 4, !dbg !6820
  br label %if.end35, !dbg !6821

if.else34:                                        ; preds = %if.else31
  %34 = load i32, i32* %dw2, align 4, !dbg !6822
  store i32 %34, i32* %dw, align 4, !dbg !6823
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then33
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end
  %35 = load i32, i32* %ds, align 4, !dbg !6824
  %36 = load i32, i32* %t, align 4, !dbg !6825
  %37 = load i32, i32* %dw, align 4, !dbg !6826
  %call37 = call i32 @set_dep_weak(i32 %35, i32 %36, i32 %37), !dbg !6827
  store i32 %call37, i32* %ds, align 4, !dbg !6828
  br label %if.end38, !dbg !6829

if.end38:                                         ; preds = %if.end36, %land.lhs.true23, %if.else20
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then17
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then
  %38 = load i32, i32* %t, align 4, !dbg !6830
  %cmp41 = icmp eq i32 %38, 16515072, !dbg !6832
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !6833

if.then42:                                        ; preds = %if.end40
  br label %do.end, !dbg !6834

if.end43:                                         ; preds = %if.end40
  %39 = load i32, i32* %t, align 4, !dbg !6835
  %shl = shl i32 %39, 6, !dbg !6835
  store i32 %shl, i32* %t, align 4, !dbg !6835
  br label %do.cond, !dbg !6836

do.cond:                                          ; preds = %if.end43
  br i1 true, label %do.body, label %do.end, !dbg !6836, !llvm.loop !6837

do.end:                                           ; preds = %do.cond, %if.then42
  %40 = load i32, i32* %ds, align 4, !dbg !6839
  ret i32 %40, !dbg !6840
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ds_full_merge(i32 %ds, i32 %ds2, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) #0 !dbg !6841 {
entry:
  %ds.addr = alloca i32, align 4
  %ds2.addr = alloca i32, align 4
  %mem1.addr = alloca %struct.rtx_def*, align 8
  %mem2.addr = alloca %struct.rtx_def*, align 8
  %new_status = alloca i32, align 4
  %dw = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6844, metadata !DIExpression()), !dbg !6845
  store i32 %ds2, i32* %ds2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds2.addr, metadata !6846, metadata !DIExpression()), !dbg !6847
  store %struct.rtx_def* %mem1, %struct.rtx_def** %mem1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem1.addr, metadata !6848, metadata !DIExpression()), !dbg !6849
  store %struct.rtx_def* %mem2, %struct.rtx_def** %mem2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem2.addr, metadata !6850, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.declare(metadata i32* %new_status, metadata !6852, metadata !DIExpression()), !dbg !6853
  %0 = load i32, i32* %ds.addr, align 4, !dbg !6854
  %1 = load i32, i32* %ds2.addr, align 4, !dbg !6855
  %or = or i32 %0, %1, !dbg !6856
  store i32 %or, i32* %new_status, align 4, !dbg !6853
  %2 = load i32, i32* %new_status, align 4, !dbg !6857
  %and = and i32 %2, 16777215, !dbg !6859
  %tobool = icmp ne i32 %and, 0, !dbg !6859
  br i1 %tobool, label %if.then, label %if.end23, !dbg !6860

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ds.addr, align 4, !dbg !6861
  %tobool1 = icmp ne i32 %3, 0, !dbg !6861
  br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false, !dbg !6864

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %ds.addr, align 4, !dbg !6865
  %and2 = and i32 %4, 16777215, !dbg !6866
  %tobool3 = icmp ne i32 %and2, 0, !dbg !6866
  br i1 %tobool3, label %lor.lhs.false, label %if.then8, !dbg !6867

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then
  %5 = load i32, i32* %ds2.addr, align 4, !dbg !6868
  %tobool4 = icmp ne i32 %5, 0, !dbg !6868
  br i1 %tobool4, label %land.lhs.true5, label %if.else, !dbg !6869

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* %ds2.addr, align 4, !dbg !6870
  %and6 = and i32 %6, 16777215, !dbg !6871
  %tobool7 = icmp ne i32 %and6, 0, !dbg !6871
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !6872

if.then8:                                         ; preds = %land.lhs.true5, %land.lhs.true
  %7 = load i32, i32* %new_status, align 4, !dbg !6873
  %and9 = and i32 %7, -16777216, !dbg !6873
  store i32 %and9, i32* %new_status, align 4, !dbg !6873
  br label %if.end22, !dbg !6874

if.else:                                          ; preds = %land.lhs.true5, %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !6875
  %tobool10 = icmp ne %struct.rtx_def* %8, null, !dbg !6875
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !6878

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %dw, metadata !6879, metadata !DIExpression()), !dbg !6881
  %9 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !6882
  %10 = load %struct.rtx_def*, %struct.rtx_def** %mem2.addr, align 8, !dbg !6883
  %call = call i32 @estimate_dep_weak(%struct.rtx_def* %9, %struct.rtx_def* %10), !dbg !6884
  store i32 %call, i32* %dw, align 4, !dbg !6885
  %11 = load i32, i32* %ds.addr, align 4, !dbg !6886
  %12 = load i32, i32* %dw, align 4, !dbg !6887
  %call12 = call i32 @set_dep_weak(i32 %11, i32 63, i32 %12), !dbg !6888
  store i32 %call12, i32* %ds.addr, align 4, !dbg !6889
  br label %if.end, !dbg !6890

if.end:                                           ; preds = %if.then11, %if.else
  %13 = load i32, i32* %ds.addr, align 4, !dbg !6891
  %tobool13 = icmp ne i32 %13, 0, !dbg !6891
  br i1 %tobool13, label %if.else15, label %if.then14, !dbg !6893

if.then14:                                        ; preds = %if.end
  %14 = load i32, i32* %ds2.addr, align 4, !dbg !6894
  store i32 %14, i32* %new_status, align 4, !dbg !6895
  br label %if.end21, !dbg !6896

if.else15:                                        ; preds = %if.end
  %15 = load i32, i32* %ds2.addr, align 4, !dbg !6897
  %tobool16 = icmp ne i32 %15, 0, !dbg !6897
  br i1 %tobool16, label %if.else18, label %if.then17, !dbg !6899

if.then17:                                        ; preds = %if.else15
  %16 = load i32, i32* %ds.addr, align 4, !dbg !6900
  store i32 %16, i32* %new_status, align 4, !dbg !6901
  br label %if.end20, !dbg !6902

if.else18:                                        ; preds = %if.else15
  %17 = load i32, i32* %ds2.addr, align 4, !dbg !6903
  %18 = load i32, i32* %ds.addr, align 4, !dbg !6904
  %call19 = call i32 @ds_merge(i32 %17, i32 %18), !dbg !6905
  store i32 %call19, i32* %new_status, align 4, !dbg !6906
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then17
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then14
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then8
  br label %if.end23, !dbg !6907

if.end23:                                         ; preds = %if.end22, %entry
  %19 = load i32, i32* %new_status, align 4, !dbg !6908
  ret i32 %19, !dbg !6909
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ds_max_merge(i32 %ds1, i32 %ds2) #0 !dbg !6910 {
entry:
  %retval = alloca i32, align 4
  %ds1.addr = alloca i32, align 4
  %ds2.addr = alloca i32, align 4
  store i32 %ds1, i32* %ds1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds1.addr, metadata !6911, metadata !DIExpression()), !dbg !6912
  store i32 %ds2, i32* %ds2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds2.addr, metadata !6913, metadata !DIExpression()), !dbg !6914
  %0 = load i32, i32* %ds1.addr, align 4, !dbg !6915
  %cmp = icmp eq i32 %0, 0, !dbg !6917
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6918

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ds2.addr, align 4, !dbg !6919
  %cmp1 = icmp eq i32 %1, 0, !dbg !6920
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6921

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !6922
  br label %return, !dbg !6922

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %ds1.addr, align 4, !dbg !6923
  %cmp2 = icmp eq i32 %2, 0, !dbg !6925
  br i1 %cmp2, label %land.lhs.true3, label %if.end6, !dbg !6926

land.lhs.true3:                                   ; preds = %if.end
  %3 = load i32, i32* %ds2.addr, align 4, !dbg !6927
  %cmp4 = icmp ne i32 %3, 0, !dbg !6928
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6929

if.then5:                                         ; preds = %land.lhs.true3
  %4 = load i32, i32* %ds2.addr, align 4, !dbg !6930
  store i32 %4, i32* %retval, align 4, !dbg !6931
  br label %return, !dbg !6931

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %5 = load i32, i32* %ds1.addr, align 4, !dbg !6932
  %cmp7 = icmp ne i32 %5, 0, !dbg !6934
  br i1 %cmp7, label %land.lhs.true8, label %if.end11, !dbg !6935

land.lhs.true8:                                   ; preds = %if.end6
  %6 = load i32, i32* %ds2.addr, align 4, !dbg !6936
  %cmp9 = icmp eq i32 %6, 0, !dbg !6937
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6938

if.then10:                                        ; preds = %land.lhs.true8
  %7 = load i32, i32* %ds1.addr, align 4, !dbg !6939
  store i32 %7, i32* %retval, align 4, !dbg !6940
  br label %return, !dbg !6940

if.end11:                                         ; preds = %land.lhs.true8, %if.end6
  %8 = load i32, i32* %ds1.addr, align 4, !dbg !6941
  %9 = load i32, i32* %ds2.addr, align 4, !dbg !6942
  %call = call i32 @ds_merge_1(i32 %8, i32 %9, i8 zeroext 1), !dbg !6943
  store i32 %call, i32* %retval, align 4, !dbg !6944
  br label %return, !dbg !6944

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6945
  ret i32 %10, !dbg !6945
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ds_weak(i32 %ds) #0 !dbg !6946 {
entry:
  %ds.addr = alloca i32, align 4
  %res = alloca i32, align 4
  %dt = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6949, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.declare(metadata i32* %res, metadata !6951, metadata !DIExpression()), !dbg !6952
  store i32 1, i32* %res, align 4, !dbg !6952
  call void @llvm.dbg.declare(metadata i32* %dt, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6955, metadata !DIExpression()), !dbg !6956
  store i32 0, i32* %n, align 4, !dbg !6956
  store i32 63, i32* %dt, align 4, !dbg !6957
  br label %do.body, !dbg !6958

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i32, i32* %ds.addr, align 4, !dbg !6959
  %1 = load i32, i32* %dt, align 4, !dbg !6962
  %and = and i32 %0, %1, !dbg !6963
  %tobool = icmp ne i32 %and, 0, !dbg !6963
  br i1 %tobool, label %if.then, label %if.end, !dbg !6964

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %ds.addr, align 4, !dbg !6965
  %3 = load i32, i32* %dt, align 4, !dbg !6967
  %call = call i32 @get_dep_weak(i32 %2, i32 %3), !dbg !6968
  %4 = load i32, i32* %res, align 4, !dbg !6969
  %mul = mul nsw i32 %4, %call, !dbg !6969
  store i32 %mul, i32* %res, align 4, !dbg !6969
  %5 = load i32, i32* %n, align 4, !dbg !6970
  %inc = add nsw i32 %5, 1, !dbg !6970
  store i32 %inc, i32* %n, align 4, !dbg !6970
  br label %if.end, !dbg !6971

if.end:                                           ; preds = %if.then, %do.body
  %6 = load i32, i32* %dt, align 4, !dbg !6972
  %cmp = icmp eq i32 %6, 16515072, !dbg !6974
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6975

if.then1:                                         ; preds = %if.end
  br label %do.end, !dbg !6976

if.end2:                                          ; preds = %if.end
  %7 = load i32, i32* %dt, align 4, !dbg !6977
  %shl = shl i32 %7, 6, !dbg !6977
  store i32 %shl, i32* %dt, align 4, !dbg !6977
  br label %do.cond, !dbg !6978

do.cond:                                          ; preds = %if.end2
  br i1 true, label %do.body, label %do.end, !dbg !6978, !llvm.loop !6979

do.end:                                           ; preds = %do.cond, %if.then1
  %8 = load i32, i32* %n, align 4, !dbg !6981
  %tobool3 = icmp ne i32 %8, 0, !dbg !6981
  br i1 %tobool3, label %cond.false, label %cond.true, !dbg !6981

cond.true:                                        ; preds = %do.end
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 4007, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6981
  br label %cond.end, !dbg !6981

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !6981

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6981
  br label %while.cond, !dbg !6982

while.cond:                                       ; preds = %while.body, %cond.end
  %9 = load i32, i32* %n, align 4, !dbg !6983
  %dec = add nsw i32 %9, -1, !dbg !6983
  store i32 %dec, i32* %n, align 4, !dbg !6983
  %tobool4 = icmp ne i32 %dec, 0, !dbg !6982
  br i1 %tobool4, label %while.body, label %while.end, !dbg !6982

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %res, align 4, !dbg !6984
  %div = sdiv i32 %10, 62, !dbg !6984
  store i32 %div, i32* %res, align 4, !dbg !6984
  br label %while.cond, !dbg !6982, !llvm.loop !6985

while.end:                                        ; preds = %while.cond
  %11 = load i32, i32* %res, align 4, !dbg !6987
  %cmp5 = icmp slt i32 %11, 1, !dbg !6989
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6990

if.then6:                                         ; preds = %while.end
  store i32 1, i32* %res, align 4, !dbg !6991
  br label %if.end7, !dbg !6992

if.end7:                                          ; preds = %if.then6, %while.end
  %12 = load i32, i32* %res, align 4, !dbg !6993
  %cmp8 = icmp sle i32 %12, 62, !dbg !6993
  br i1 %cmp8, label %cond.false10, label %cond.true9, !dbg !6993

cond.true9:                                       ; preds = %if.end7
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 4014, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6993
  br label %cond.end11, !dbg !6993

cond.false10:                                     ; preds = %if.end7
  br label %cond.end11, !dbg !6993

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi i32 [ 0, %cond.true9 ], [ 0, %cond.false10 ], !dbg !6993
  %13 = load i32, i32* %res, align 4, !dbg !6994
  ret i32 %13, !dbg !6995
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ds_get_speculation_types(i32 %ds) #0 !dbg !6996 {
entry:
  %ds.addr = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !6999, metadata !DIExpression()), !dbg !7000
  %0 = load i32, i32* %ds.addr, align 4, !dbg !7001
  %and = and i32 %0, 63, !dbg !7003
  %tobool = icmp ne i32 %and, 0, !dbg !7003
  br i1 %tobool, label %if.then, label %if.end, !dbg !7004

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ds.addr, align 4, !dbg !7005
  %or = or i32 %1, 63, !dbg !7005
  store i32 %or, i32* %ds.addr, align 4, !dbg !7005
  br label %if.end, !dbg !7006

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %ds.addr, align 4, !dbg !7007
  %and1 = and i32 %2, 4032, !dbg !7009
  %tobool2 = icmp ne i32 %and1, 0, !dbg !7009
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !7010

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %ds.addr, align 4, !dbg !7011
  %or4 = or i32 %3, 4032, !dbg !7011
  store i32 %or4, i32* %ds.addr, align 4, !dbg !7011
  br label %if.end5, !dbg !7012

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %ds.addr, align 4, !dbg !7013
  %and6 = and i32 %4, 258048, !dbg !7015
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7015
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !7016

if.then8:                                         ; preds = %if.end5
  %5 = load i32, i32* %ds.addr, align 4, !dbg !7017
  %or9 = or i32 %5, 258048, !dbg !7017
  store i32 %or9, i32* %ds.addr, align 4, !dbg !7017
  br label %if.end10, !dbg !7018

if.end10:                                         ; preds = %if.then8, %if.end5
  %6 = load i32, i32* %ds.addr, align 4, !dbg !7019
  %and11 = and i32 %6, 16515072, !dbg !7021
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7021
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !7022

if.then13:                                        ; preds = %if.end10
  %7 = load i32, i32* %ds.addr, align 4, !dbg !7023
  %or14 = or i32 %7, 16515072, !dbg !7023
  store i32 %or14, i32* %ds.addr, align 4, !dbg !7023
  br label %if.end15, !dbg !7024

if.end15:                                         ; preds = %if.then13, %if.end10
  %8 = load i32, i32* %ds.addr, align 4, !dbg !7025
  %and16 = and i32 %8, 16777215, !dbg !7026
  ret i32 %and16, !dbg !7027
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ds_get_max_dep_weak(i32 %ds) #0 !dbg !7028 {
entry:
  %ds.addr = alloca i32, align 4
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !7029, metadata !DIExpression()), !dbg !7030
  %0 = load i32, i32* %ds.addr, align 4, !dbg !7031
  %and = and i32 %0, 63, !dbg !7033
  %tobool = icmp ne i32 %and, 0, !dbg !7033
  br i1 %tobool, label %if.then, label %if.end, !dbg !7034

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ds.addr, align 4, !dbg !7035
  %call = call i32 @set_dep_weak(i32 %1, i32 63, i32 62), !dbg !7036
  store i32 %call, i32* %ds.addr, align 4, !dbg !7037
  br label %if.end, !dbg !7038

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %ds.addr, align 4, !dbg !7039
  %and1 = and i32 %2, 4032, !dbg !7041
  %tobool2 = icmp ne i32 %and1, 0, !dbg !7041
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !7042

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %ds.addr, align 4, !dbg !7043
  %call4 = call i32 @set_dep_weak(i32 %3, i32 4032, i32 62), !dbg !7044
  store i32 %call4, i32* %ds.addr, align 4, !dbg !7045
  br label %if.end5, !dbg !7046

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %ds.addr, align 4, !dbg !7047
  %and6 = and i32 %4, 258048, !dbg !7049
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7049
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !7050

if.then8:                                         ; preds = %if.end5
  %5 = load i32, i32* %ds.addr, align 4, !dbg !7051
  %call9 = call i32 @set_dep_weak(i32 %5, i32 258048, i32 62), !dbg !7052
  store i32 %call9, i32* %ds.addr, align 4, !dbg !7053
  br label %if.end10, !dbg !7054

if.end10:                                         ; preds = %if.then8, %if.end5
  %6 = load i32, i32* %ds.addr, align 4, !dbg !7055
  %and11 = and i32 %6, 16515072, !dbg !7057
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7057
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !7058

if.then13:                                        ; preds = %if.end10
  %7 = load i32, i32* %ds.addr, align 4, !dbg !7059
  %call14 = call i32 @set_dep_weak(i32 %7, i32 16515072, i32 62), !dbg !7060
  store i32 %call14, i32* %ds.addr, align 4, !dbg !7061
  br label %if.end15, !dbg !7062

if.end15:                                         ; preds = %if.then13, %if.end10
  %8 = load i32, i32* %ds.addr, align 4, !dbg !7063
  ret i32 %8, !dbg !7064
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @debug_ds(i32 %s) #0 !dbg !7065 {
entry:
  %s.addr = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7070
  %1 = load i32, i32* %s.addr, align 4, !dbg !7071
  call void @dump_ds(%struct._IO_FILE* %0, i32 %1), !dbg !7072
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7073
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7074
  ret void, !dbg !7075
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_ds(%struct._IO_FILE* %f, i32 %s) #0 !dbg !7076 {
entry:
  %f.addr = alloca %struct._IO_FILE*, align 8
  %s.addr = alloca i32, align 4
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %f.addr, metadata !7079, metadata !DIExpression()), !dbg !7080
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !7081, metadata !DIExpression()), !dbg !7082
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7083
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)), !dbg !7084
  %1 = load i32, i32* %s.addr, align 4, !dbg !7085
  %and = and i32 %1, 63, !dbg !7087
  %tobool = icmp ne i32 %and, 0, !dbg !7087
  br i1 %tobool, label %if.then, label %if.end, !dbg !7088

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7089
  %3 = load i32, i32* %s.addr, align 4, !dbg !7090
  %call1 = call i32 @get_dep_weak_1(i32 %3, i32 63), !dbg !7091
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i32 %call1), !dbg !7092
  br label %if.end, !dbg !7092

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %s.addr, align 4, !dbg !7093
  %and3 = and i32 %4, 4032, !dbg !7095
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7095
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !7096

if.then5:                                         ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7097
  %6 = load i32, i32* %s.addr, align 4, !dbg !7098
  %call6 = call i32 @get_dep_weak_1(i32 %6, i32 4032), !dbg !7099
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %call6), !dbg !7100
  br label %if.end8, !dbg !7100

if.end8:                                          ; preds = %if.then5, %if.end
  %7 = load i32, i32* %s.addr, align 4, !dbg !7101
  %and9 = and i32 %7, 258048, !dbg !7103
  %tobool10 = icmp ne i32 %and9, 0, !dbg !7103
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !7104

if.then11:                                        ; preds = %if.end8
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7105
  %9 = load i32, i32* %s.addr, align 4, !dbg !7106
  %call12 = call i32 @get_dep_weak_1(i32 %9, i32 258048), !dbg !7107
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i32 %call12), !dbg !7108
  br label %if.end14, !dbg !7108

if.end14:                                         ; preds = %if.then11, %if.end8
  %10 = load i32, i32* %s.addr, align 4, !dbg !7109
  %and15 = and i32 %10, 16515072, !dbg !7111
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7111
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !7112

if.then17:                                        ; preds = %if.end14
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7113
  %12 = load i32, i32* %s.addr, align 4, !dbg !7114
  %call18 = call i32 @get_dep_weak_1(i32 %12, i32 16515072), !dbg !7115
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0), i32 %call18), !dbg !7116
  br label %if.end20, !dbg !7116

if.end20:                                         ; preds = %if.then17, %if.end14
  %13 = load i32, i32* %s.addr, align 4, !dbg !7117
  %and21 = and i32 %13, 134217728, !dbg !7119
  %tobool22 = icmp ne i32 %and21, 0, !dbg !7119
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !7120

if.then23:                                        ; preds = %if.end20
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7121
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0)), !dbg !7122
  br label %if.end25, !dbg !7122

if.end25:                                         ; preds = %if.then23, %if.end20
  %15 = load i32, i32* %s.addr, align 4, !dbg !7123
  %and26 = and i32 %15, 16777216, !dbg !7125
  %tobool27 = icmp ne i32 %and26, 0, !dbg !7125
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !7126

if.then28:                                        ; preds = %if.end25
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7127
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0)), !dbg !7128
  br label %if.end30, !dbg !7128

if.end30:                                         ; preds = %if.then28, %if.end25
  %17 = load i32, i32* %s.addr, align 4, !dbg !7129
  %and31 = and i32 %17, 67108864, !dbg !7131
  %tobool32 = icmp ne i32 %and31, 0, !dbg !7131
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !7132

if.then33:                                        ; preds = %if.end30
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7133
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0)), !dbg !7134
  br label %if.end35, !dbg !7134

if.end35:                                         ; preds = %if.then33, %if.end30
  %19 = load i32, i32* %s.addr, align 4, !dbg !7135
  %and36 = and i32 %19, 33554432, !dbg !7137
  %tobool37 = icmp ne i32 %and36, 0, !dbg !7137
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !7138

if.then38:                                        ; preds = %if.end35
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7139
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)), !dbg !7140
  br label %if.end40, !dbg !7140

if.end40:                                         ; preds = %if.then38, %if.end35
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !7141
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)), !dbg !7142
  ret void, !dbg !7143
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) #2

declare dso_local i32 @onlyjump_p(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @pc_set(%struct.rtx_def*) #2

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) #2

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @attach_dep_link(%struct._dep_link* %l, %struct._dep_link** %prev_nextp) #0 !dbg !7144 {
entry:
  %l.addr = alloca %struct._dep_link*, align 8
  %prev_nextp.addr = alloca %struct._dep_link**, align 8
  %next = alloca %struct._dep_link*, align 8
  store %struct._dep_link* %l, %struct._dep_link** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_link** %l.addr, metadata !7147, metadata !DIExpression()), !dbg !7148
  store %struct._dep_link** %prev_nextp, %struct._dep_link*** %prev_nextp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_link*** %prev_nextp.addr, metadata !7149, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.declare(metadata %struct._dep_link** %next, metadata !7151, metadata !DIExpression()), !dbg !7152
  %0 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp.addr, align 8, !dbg !7153
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !7154
  store %struct._dep_link* %1, %struct._dep_link** %next, align 8, !dbg !7152
  %2 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7155
  %prev_nextp1 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %2, i32 0, i32 2, !dbg !7155
  %3 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp1, align 8, !dbg !7155
  %cmp = icmp eq %struct._dep_link** %3, null, !dbg !7155
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !7155

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7155
  %next2 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %4, i32 0, i32 1, !dbg !7155
  %5 = load %struct._dep_link*, %struct._dep_link** %next2, align 8, !dbg !7155
  %cmp3 = icmp eq %struct._dep_link* %5, null, !dbg !7155
  br i1 %cmp3, label %cond.false, label %cond.true, !dbg !7155

cond.true:                                        ; preds = %land.lhs.true, %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 236, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7155
  br label %cond.end, !dbg !7155

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !7155

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7155
  %6 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp.addr, align 8, !dbg !7156
  %7 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7157
  %prev_nextp4 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %7, i32 0, i32 2, !dbg !7157
  store %struct._dep_link** %6, %struct._dep_link*** %prev_nextp4, align 8, !dbg !7158
  %8 = load %struct._dep_link*, %struct._dep_link** %next, align 8, !dbg !7159
  %9 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7160
  %next5 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %9, i32 0, i32 1, !dbg !7160
  store %struct._dep_link* %8, %struct._dep_link** %next5, align 8, !dbg !7161
  %10 = load %struct._dep_link*, %struct._dep_link** %next, align 8, !dbg !7162
  %cmp6 = icmp ne %struct._dep_link* %10, null, !dbg !7164
  br i1 %cmp6, label %if.then, label %if.end, !dbg !7165

if.then:                                          ; preds = %cond.end
  %11 = load %struct._dep_link*, %struct._dep_link** %next, align 8, !dbg !7166
  %prev_nextp7 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %11, i32 0, i32 2, !dbg !7166
  %12 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp7, align 8, !dbg !7166
  %13 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp.addr, align 8, !dbg !7166
  %cmp8 = icmp eq %struct._dep_link** %12, %13, !dbg !7166
  br i1 %cmp8, label %cond.false10, label %cond.true9, !dbg !7166

cond.true9:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7166
  br label %cond.end11, !dbg !7166

cond.false10:                                     ; preds = %if.then
  br label %cond.end11, !dbg !7166

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi i32 [ 0, %cond.true9 ], [ 0, %cond.false10 ], !dbg !7166
  %14 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7168
  %next13 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %14, i32 0, i32 1, !dbg !7168
  %15 = load %struct._dep_link*, %struct._dep_link** %next, align 8, !dbg !7169
  %prev_nextp14 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %15, i32 0, i32 2, !dbg !7169
  store %struct._dep_link** %next13, %struct._dep_link*** %prev_nextp14, align 8, !dbg !7170
  br label %if.end, !dbg !7171

if.end:                                           ; preds = %cond.end11, %cond.end
  %16 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7172
  %17 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp.addr, align 8, !dbg !7173
  store %struct._dep_link* %16, %struct._dep_link** %17, align 8, !dbg !7174
  ret void, !dbg !7175
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @depl_on_debug_p(%struct._dep_link* %dep) #0 !dbg !7176 {
entry:
  %dep.addr = alloca %struct._dep_link*, align 8
  store %struct._dep_link* %dep, %struct._dep_link** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_link** %dep.addr, metadata !7179, metadata !DIExpression()), !dbg !7180
  %0 = load %struct._dep_link*, %struct._dep_link** %dep.addr, align 8, !dbg !7181
  %node = getelementptr inbounds %struct._dep_link, %struct._dep_link* %0, i32 0, i32 0, !dbg !7181
  %1 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !7181
  %dep1 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %1, i32 0, i32 1, !dbg !7181
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %dep1, i32 0, i32 0, !dbg !7181
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !7181
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !7181
  %bf.load = load i32, i32* %3, align 8, !dbg !7181
  %bf.clear = and i32 %bf.load, 65535, !dbg !7181
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7181
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7182

land.rhs:                                         ; preds = %entry
  %4 = load %struct._dep_link*, %struct._dep_link** %dep.addr, align 8, !dbg !7183
  %node2 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %4, i32 0, i32 0, !dbg !7183
  %5 = load %struct._dep_node*, %struct._dep_node** %node2, align 8, !dbg !7183
  %dep3 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %5, i32 0, i32 1, !dbg !7183
  %con = getelementptr inbounds %struct._dep, %struct._dep* %dep3, i32 0, i32 1, !dbg !7183
  %6 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !7183
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !7183
  %bf.load4 = load i32, i32* %7, align 8, !dbg !7183
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !7183
  %cmp6 = icmp eq i32 %bf.clear5, 7, !dbg !7183
  %lnot = xor i1 %cmp6, true, !dbg !7184
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !7185
  %land.ext = zext i1 %8 to i32, !dbg !7182
  %conv = trunc i32 %land.ext to i8, !dbg !7186
  ret i8 %conv, !dbg !7187
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ask_dependency_caches(%struct._dep* %dep) #0 !dbg !7188 {
entry:
  %retval = alloca i32, align 4
  %dep.addr = alloca %struct._dep*, align 8
  %elem_luid = alloca i32, align 4
  %insn_luid = alloca i32, align 4
  %present_dep_type = alloca i32, align 4
  %present_dep_types = alloca i32, align 4
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !7191, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.declare(metadata i32* %elem_luid, metadata !7193, metadata !DIExpression()), !dbg !7194
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7195
  %tobool = icmp ne %struct.VEC_int_heap* %0, null, !dbg !7195
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7195

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7195
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i32 0, i32 0, !dbg !7195
  br label %cond.end, !dbg !7195

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7195

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7195
  %2 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7195
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %2, i32 0, i32 0, !dbg !7195
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !7195
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !7195
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7195
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7195
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7195
  %4 = load i32, i32* %rt_int, align 8, !dbg !7195
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond, i32 %4), !dbg !7195
  store i32 %call, i32* %elem_luid, align 4, !dbg !7194
  call void @llvm.dbg.declare(metadata i32* %insn_luid, metadata !7196, metadata !DIExpression()), !dbg !7197
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7198
  %tobool1 = icmp ne %struct.VEC_int_heap* %5, null, !dbg !7198
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !7198

cond.true2:                                       ; preds = %cond.end
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7198
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i32 0, i32 0, !dbg !7198
  br label %cond.end5, !dbg !7198

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !7198

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !7198
  %7 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7198
  %con = getelementptr inbounds %struct._dep, %struct._dep* %7, i32 0, i32 1, !dbg !7198
  %8 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !7198
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !7198
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !7198
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 0, !dbg !7198
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !7198
  %9 = load i32, i32* %rt_int10, align 8, !dbg !7198
  %call11 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %9), !dbg !7198
  store i32 %call11, i32* %insn_luid, align 4, !dbg !7197
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !7199
  %cmp = icmp ne %struct.bitmap_head_def* %10, null, !dbg !7199
  br i1 %cmp, label %land.lhs.true, label %cond.true15, !dbg !7199

land.lhs.true:                                    ; preds = %cond.end5
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !7199
  %cmp12 = icmp ne %struct.bitmap_head_def* %11, null, !dbg !7199
  br i1 %cmp12, label %land.lhs.true13, label %cond.true15, !dbg !7199

land.lhs.true13:                                  ; preds = %land.lhs.true
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !7199
  %cmp14 = icmp ne %struct.bitmap_head_def* %12, null, !dbg !7199
  br i1 %cmp14, label %cond.false16, label %cond.true15, !dbg !7199

cond.true15:                                      ; preds = %land.lhs.true13, %land.lhs.true, %cond.end5
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7199
  br label %cond.end17, !dbg !7199

cond.false16:                                     ; preds = %land.lhs.true13
  br label %cond.end17, !dbg !7199

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi i32 [ 0, %cond.true15 ], [ 0, %cond.false16 ], !dbg !7199
  %13 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !7200
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %13, i32 0, i32 17, !dbg !7202
  %14 = load i32, i32* %flags, align 8, !dbg !7202
  %and = and i32 %14, 1, !dbg !7203
  %tobool19 = icmp ne i32 %and, 0, !dbg !7203
  br i1 %tobool19, label %if.else41, label %if.then, !dbg !7204

if.then:                                          ; preds = %cond.end17
  call void @llvm.dbg.declare(metadata i32* %present_dep_type, metadata !7205, metadata !DIExpression()), !dbg !7207
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !7208
  %16 = load i32, i32* %insn_luid, align 4, !dbg !7210
  %idxprom = sext i32 %16 to i64, !dbg !7208
  %arrayidx20 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %15, i64 %idxprom, !dbg !7208
  %17 = load i32, i32* %elem_luid, align 4, !dbg !7211
  %call21 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx20, i32 %17), !dbg !7212
  %tobool22 = icmp ne i32 %call21, 0, !dbg !7212
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !7213

if.then23:                                        ; preds = %if.then
  store i32 0, i32* %present_dep_type, align 4, !dbg !7214
  br label %if.end37, !dbg !7215

if.else:                                          ; preds = %if.then
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !7216
  %19 = load i32, i32* %insn_luid, align 4, !dbg !7218
  %idxprom24 = sext i32 %19 to i64, !dbg !7216
  %arrayidx25 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %18, i64 %idxprom24, !dbg !7216
  %20 = load i32, i32* %elem_luid, align 4, !dbg !7219
  %call26 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx25, i32 %20), !dbg !7220
  %tobool27 = icmp ne i32 %call26, 0, !dbg !7220
  br i1 %tobool27, label %if.then28, label %if.else29, !dbg !7221

if.then28:                                        ; preds = %if.else
  store i32 11, i32* %present_dep_type, align 4, !dbg !7222
  br label %if.end36, !dbg !7223

if.else29:                                        ; preds = %if.else
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !7224
  %22 = load i32, i32* %insn_luid, align 4, !dbg !7226
  %idxprom30 = sext i32 %22 to i64, !dbg !7224
  %arrayidx31 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %21, i64 %idxprom30, !dbg !7224
  %23 = load i32, i32* %elem_luid, align 4, !dbg !7227
  %call32 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx31, i32 %23), !dbg !7228
  %tobool33 = icmp ne i32 %call32, 0, !dbg !7228
  br i1 %tobool33, label %if.then34, label %if.else35, !dbg !7229

if.then34:                                        ; preds = %if.else29
  store i32 12, i32* %present_dep_type, align 4, !dbg !7230
  br label %if.end, !dbg !7231

if.else35:                                        ; preds = %if.else29
  store i32 3, i32* %retval, align 4, !dbg !7232
  br label %return, !dbg !7232

if.end:                                           ; preds = %if.then34
  br label %if.end36

if.end36:                                         ; preds = %if.end, %if.then28
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then23
  %24 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7233
  %type = getelementptr inbounds %struct._dep, %struct._dep* %24, i32 0, i32 2, !dbg !7233
  %25 = load i32, i32* %type, align 8, !dbg !7233
  %26 = load i32, i32* %present_dep_type, align 4, !dbg !7235
  %cmp38 = icmp sge i32 %25, %26, !dbg !7236
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !7237

if.then39:                                        ; preds = %if.end37
  store i32 1, i32* %retval, align 4, !dbg !7238
  br label %return, !dbg !7238

if.end40:                                         ; preds = %if.end37
  br label %if.end86, !dbg !7239

if.else41:                                        ; preds = %cond.end17
  call void @llvm.dbg.declare(metadata i32* %present_dep_types, metadata !7240, metadata !DIExpression()), !dbg !7242
  store i32 0, i32* %present_dep_types, align 4, !dbg !7242
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !7243
  %28 = load i32, i32* %insn_luid, align 4, !dbg !7245
  %idxprom42 = sext i32 %28 to i64, !dbg !7243
  %arrayidx43 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %27, i64 %idxprom42, !dbg !7243
  %29 = load i32, i32* %elem_luid, align 4, !dbg !7246
  %call44 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx43, i32 %29), !dbg !7247
  %tobool45 = icmp ne i32 %call44, 0, !dbg !7247
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !7248

if.then46:                                        ; preds = %if.else41
  %30 = load i32, i32* %present_dep_types, align 4, !dbg !7249
  %or = or i32 %30, 16777216, !dbg !7249
  store i32 %or, i32* %present_dep_types, align 4, !dbg !7249
  br label %if.end47, !dbg !7250

if.end47:                                         ; preds = %if.then46, %if.else41
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !7251
  %32 = load i32, i32* %insn_luid, align 4, !dbg !7253
  %idxprom48 = sext i32 %32 to i64, !dbg !7251
  %arrayidx49 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %31, i64 %idxprom48, !dbg !7251
  %33 = load i32, i32* %elem_luid, align 4, !dbg !7254
  %call50 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx49, i32 %33), !dbg !7255
  %tobool51 = icmp ne i32 %call50, 0, !dbg !7255
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !7256

if.then52:                                        ; preds = %if.end47
  %34 = load i32, i32* %present_dep_types, align 4, !dbg !7257
  %or53 = or i32 %34, 33554432, !dbg !7257
  store i32 %or53, i32* %present_dep_types, align 4, !dbg !7257
  br label %if.end54, !dbg !7258

if.end54:                                         ; preds = %if.then52, %if.end47
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !7259
  %36 = load i32, i32* %insn_luid, align 4, !dbg !7261
  %idxprom55 = sext i32 %36 to i64, !dbg !7259
  %arrayidx56 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %35, i64 %idxprom55, !dbg !7259
  %37 = load i32, i32* %elem_luid, align 4, !dbg !7262
  %call57 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx56, i32 %37), !dbg !7263
  %tobool58 = icmp ne i32 %call57, 0, !dbg !7263
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !7264

if.then59:                                        ; preds = %if.end54
  %38 = load i32, i32* %present_dep_types, align 4, !dbg !7265
  %or60 = or i32 %38, 67108864, !dbg !7265
  store i32 %or60, i32* %present_dep_types, align 4, !dbg !7265
  br label %if.end61, !dbg !7266

if.end61:                                         ; preds = %if.then59, %if.end54
  %39 = load i32, i32* %present_dep_types, align 4, !dbg !7267
  %cmp62 = icmp eq i32 %39, 0, !dbg !7269
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !7270

if.then63:                                        ; preds = %if.end61
  store i32 3, i32* %retval, align 4, !dbg !7271
  br label %return, !dbg !7271

if.end64:                                         ; preds = %if.end61
  %40 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !7272
  %flags65 = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %40, i32 0, i32 17, !dbg !7274
  %41 = load i32, i32* %flags65, align 8, !dbg !7274
  %and66 = and i32 %41, 2, !dbg !7275
  %tobool67 = icmp ne i32 %and66, 0, !dbg !7275
  br i1 %tobool67, label %lor.lhs.false, label %if.then72, !dbg !7276

lor.lhs.false:                                    ; preds = %if.end64
  %42 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !7277
  %43 = load i32, i32* %insn_luid, align 4, !dbg !7278
  %idxprom68 = sext i32 %43 to i64, !dbg !7277
  %arrayidx69 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %42, i64 %idxprom68, !dbg !7277
  %44 = load i32, i32* %elem_luid, align 4, !dbg !7279
  %call70 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %arrayidx69, i32 %44), !dbg !7280
  %tobool71 = icmp ne i32 %call70, 0, !dbg !7280
  br i1 %tobool71, label %if.else78, label %if.then72, !dbg !7281

if.then72:                                        ; preds = %lor.lhs.false, %if.end64
  %45 = load i32, i32* %present_dep_types, align 4, !dbg !7282
  %46 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7285
  %status = getelementptr inbounds %struct._dep, %struct._dep* %46, i32 0, i32 3, !dbg !7285
  %47 = load i32, i32* %status, align 4, !dbg !7285
  %and73 = and i32 %47, 117440512, !dbg !7286
  %or74 = or i32 %45, %and73, !dbg !7287
  %48 = load i32, i32* %present_dep_types, align 4, !dbg !7288
  %cmp75 = icmp eq i32 %or74, %48, !dbg !7289
  br i1 %cmp75, label %if.then76, label %if.end77, !dbg !7290

if.then76:                                        ; preds = %if.then72
  store i32 1, i32* %retval, align 4, !dbg !7291
  br label %return, !dbg !7291

if.end77:                                         ; preds = %if.then72
  br label %if.end85, !dbg !7292

if.else78:                                        ; preds = %lor.lhs.false
  %49 = load i32, i32* %present_dep_types, align 4, !dbg !7293
  %and79 = and i32 %49, 83886080, !dbg !7293
  %50 = load i32, i32* %present_dep_types, align 4, !dbg !7293
  %cmp80 = icmp eq i32 %and79, %50, !dbg !7293
  br i1 %cmp80, label %cond.false82, label %cond.true81, !dbg !7293

cond.true81:                                      ; preds = %if.else78
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7293
  br label %cond.end83, !dbg !7293

cond.false82:                                     ; preds = %if.else78
  br label %cond.end83, !dbg !7293

cond.end83:                                       ; preds = %cond.false82, %cond.true81
  %cond84 = phi i32 [ 0, %cond.true81 ], [ 0, %cond.false82 ], !dbg !7293
  br label %if.end85

if.end85:                                         ; preds = %cond.end83, %if.end77
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end40
  store i32 2, i32* %retval, align 4, !dbg !7295
  br label %return, !dbg !7295

return:                                           ; preds = %if.end86, %if.then76, %if.then63, %if.then39, %if.else35
  %51 = load i32, i32* %retval, align 4, !dbg !7296
  ret i32 %51, !dbg !7296
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @update_dep(%struct._dep* %dep, %struct._dep* %new_dep, %struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) #0 !dbg !7297 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  %new_dep.addr = alloca %struct._dep*, align 8
  %mem1.addr = alloca %struct.rtx_def*, align 8
  %mem2.addr = alloca %struct.rtx_def*, align 8
  %res = alloca i32, align 4
  %old_type = alloca i32, align 4
  %dep_status = alloca i32, align 4
  %ds = alloca i32, align 4
  %new_status = alloca i32, align 4
  %dw = alloca i32, align 4
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !7300, metadata !DIExpression()), !dbg !7301
  store %struct._dep* %new_dep, %struct._dep** %new_dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %new_dep.addr, metadata !7302, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !7304, metadata !DIExpression()), !dbg !7305
  store %struct.rtx_def* %mem1, %struct.rtx_def** %mem1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem1.addr, metadata !7306, metadata !DIExpression()), !dbg !7307
  store %struct.rtx_def* %mem2, %struct.rtx_def** %mem2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem2.addr, metadata !7308, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7310, metadata !DIExpression()), !dbg !7311
  store i32 1, i32* %res, align 4, !dbg !7311
  call void @llvm.dbg.declare(metadata i32* %old_type, metadata !7312, metadata !DIExpression()), !dbg !7313
  %0 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7314
  %type = getelementptr inbounds %struct._dep, %struct._dep* %0, i32 0, i32 2, !dbg !7314
  %1 = load i32, i32* %type, align 8, !dbg !7314
  store i32 %1, i32* %old_type, align 4, !dbg !7313
  %2 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !7315
  %type1 = getelementptr inbounds %struct._dep, %struct._dep* %2, i32 0, i32 2, !dbg !7315
  %3 = load i32, i32* %type1, align 8, !dbg !7315
  %4 = load i32, i32* %old_type, align 4, !dbg !7317
  %cmp = icmp slt i32 %3, %4, !dbg !7318
  br i1 %cmp, label %if.then, label %if.end, !dbg !7319

if.then:                                          ; preds = %entry
  %5 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !7320
  %type2 = getelementptr inbounds %struct._dep, %struct._dep* %5, i32 0, i32 2, !dbg !7320
  %6 = load i32, i32* %type2, align 8, !dbg !7320
  %7 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7322
  %type3 = getelementptr inbounds %struct._dep, %struct._dep* %7, i32 0, i32 2, !dbg !7322
  store i32 %6, i32* %type3, align 8, !dbg !7323
  store i32 2, i32* %res, align 4, !dbg !7324
  br label %if.end, !dbg !7325

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !7326
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %8, i32 0, i32 17, !dbg !7328
  %9 = load i32, i32* %flags, align 8, !dbg !7328
  %and = and i32 %9, 1, !dbg !7329
  %tobool = icmp ne i32 %and, 0, !dbg !7329
  br i1 %tobool, label %if.then4, label %if.end30, !dbg !7330

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %dep_status, metadata !7331, metadata !DIExpression()), !dbg !7333
  %10 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7334
  %status = getelementptr inbounds %struct._dep, %struct._dep* %10, i32 0, i32 3, !dbg !7334
  %11 = load i32, i32* %status, align 4, !dbg !7334
  store i32 %11, i32* %dep_status, align 4, !dbg !7333
  call void @llvm.dbg.declare(metadata i32* %ds, metadata !7335, metadata !DIExpression()), !dbg !7336
  %12 = load %struct._dep*, %struct._dep** %new_dep.addr, align 8, !dbg !7337
  %status5 = getelementptr inbounds %struct._dep, %struct._dep* %12, i32 0, i32 3, !dbg !7337
  %13 = load i32, i32* %status5, align 4, !dbg !7337
  store i32 %13, i32* %ds, align 4, !dbg !7336
  call void @llvm.dbg.declare(metadata i32* %new_status, metadata !7338, metadata !DIExpression()), !dbg !7339
  %14 = load i32, i32* %ds, align 4, !dbg !7340
  %15 = load i32, i32* %dep_status, align 4, !dbg !7341
  %or = or i32 %14, %15, !dbg !7342
  store i32 %or, i32* %new_status, align 4, !dbg !7339
  %16 = load i32, i32* %new_status, align 4, !dbg !7343
  %and6 = and i32 %16, 16777215, !dbg !7345
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7345
  br i1 %tobool7, label %if.then8, label %if.end25, !dbg !7346

if.then8:                                         ; preds = %if.then4
  %17 = load i32, i32* %ds, align 4, !dbg !7347
  %and9 = and i32 %17, 16777215, !dbg !7350
  %tobool10 = icmp ne i32 %and9, 0, !dbg !7350
  br i1 %tobool10, label %lor.lhs.false, label %if.then13, !dbg !7351

lor.lhs.false:                                    ; preds = %if.then8
  %18 = load i32, i32* %dep_status, align 4, !dbg !7352
  %and11 = and i32 %18, 16777215, !dbg !7353
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7353
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !7354

if.then13:                                        ; preds = %lor.lhs.false, %if.then8
  %19 = load i32, i32* %new_status, align 4, !dbg !7355
  %and14 = and i32 %19, -16777216, !dbg !7355
  store i32 %and14, i32* %new_status, align 4, !dbg !7355
  %20 = load i32, i32* %dep_status, align 4, !dbg !7357
  %and15 = and i32 %20, 16777215, !dbg !7359
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7359
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !7360

if.then17:                                        ; preds = %if.then13
  call void @change_spec_dep_to_hard(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it), !dbg !7361
  br label %if.end18, !dbg !7361

if.end18:                                         ; preds = %if.then17, %if.then13
  br label %if.end24, !dbg !7362

if.else:                                          ; preds = %lor.lhs.false
  %21 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !7363
  %cmp19 = icmp ne %struct.rtx_def* %21, null, !dbg !7366
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !7367

if.then20:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %dw, metadata !7368, metadata !DIExpression()), !dbg !7370
  %22 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !7371
  %23 = load %struct.rtx_def*, %struct.rtx_def** %mem2.addr, align 8, !dbg !7372
  %call = call i32 @estimate_dep_weak(%struct.rtx_def* %22, %struct.rtx_def* %23), !dbg !7373
  store i32 %call, i32* %dw, align 4, !dbg !7374
  %24 = load i32, i32* %ds, align 4, !dbg !7375
  %25 = load i32, i32* %dw, align 4, !dbg !7376
  %call21 = call i32 @set_dep_weak(i32 %24, i32 63, i32 %25), !dbg !7377
  store i32 %call21, i32* %ds, align 4, !dbg !7378
  br label %if.end22, !dbg !7379

if.end22:                                         ; preds = %if.then20, %if.else
  %26 = load i32, i32* %dep_status, align 4, !dbg !7380
  %27 = load i32, i32* %ds, align 4, !dbg !7381
  %call23 = call i32 @ds_merge(i32 %26, i32 %27), !dbg !7382
  store i32 %call23, i32* %new_status, align 4, !dbg !7383
  br label %if.end24

if.end24:                                         ; preds = %if.end22, %if.end18
  br label %if.end25, !dbg !7384

if.end25:                                         ; preds = %if.end24, %if.then4
  %28 = load i32, i32* %new_status, align 4, !dbg !7385
  store i32 %28, i32* %ds, align 4, !dbg !7386
  %29 = load i32, i32* %dep_status, align 4, !dbg !7387
  %30 = load i32, i32* %ds, align 4, !dbg !7389
  %cmp26 = icmp ne i32 %29, %30, !dbg !7390
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !7391

if.then27:                                        ; preds = %if.end25
  %31 = load i32, i32* %ds, align 4, !dbg !7392
  %32 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7394
  %status28 = getelementptr inbounds %struct._dep, %struct._dep* %32, i32 0, i32 3, !dbg !7394
  store i32 %31, i32* %status28, align 4, !dbg !7395
  store i32 2, i32* %res, align 4, !dbg !7396
  br label %if.end29, !dbg !7397

if.end29:                                         ; preds = %if.then27, %if.end25
  br label %if.end30, !dbg !7398

if.end30:                                         ; preds = %if.end29, %if.end
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !7399
  %cmp31 = icmp ne %struct.bitmap_head_def* %33, null, !dbg !7401
  br i1 %cmp31, label %land.lhs.true, label %if.end34, !dbg !7402

land.lhs.true:                                    ; preds = %if.end30
  %34 = load i32, i32* %res, align 4, !dbg !7403
  %cmp32 = icmp eq i32 %34, 2, !dbg !7404
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !7405

if.then33:                                        ; preds = %land.lhs.true
  %35 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7406
  %36 = load i32, i32* %old_type, align 4, !dbg !7407
  call void @update_dependency_caches(%struct._dep* %35, i32 %36), !dbg !7408
  br label %if.end34, !dbg !7408

if.end34:                                         ; preds = %if.then33, %land.lhs.true, %if.end30
  %37 = load i32, i32* %res, align 4, !dbg !7409
  ret i32 %37, !dbg !7410
}

; Function Attrs: noinline nounwind uwtable
define internal void @change_spec_dep_to_hard(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it) #0 !dbg !7411 {
entry:
  %node = alloca %struct._dep_node*, align 8
  %link = alloca %struct._dep_link*, align 8
  %dep = alloca %struct._dep*, align 8
  %elem = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !7412, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.declare(metadata %struct._dep_node** %node, metadata !7414, metadata !DIExpression()), !dbg !7415
  %linkp = getelementptr inbounds %struct._sd_iterator, %struct._sd_iterator* %sd_it, i32 0, i32 2, !dbg !7416
  %0 = load %struct._dep_link**, %struct._dep_link*** %linkp, align 8, !dbg !7416
  %1 = load %struct._dep_link*, %struct._dep_link** %0, align 8, !dbg !7416
  %node1 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %1, i32 0, i32 0, !dbg !7416
  %2 = load %struct._dep_node*, %struct._dep_node** %node1, align 8, !dbg !7416
  store %struct._dep_node* %2, %struct._dep_node** %node, align 8, !dbg !7415
  call void @llvm.dbg.declare(metadata %struct._dep_link** %link, metadata !7417, metadata !DIExpression()), !dbg !7418
  %3 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !7419
  %back = getelementptr inbounds %struct._dep_node, %struct._dep_node* %3, i32 0, i32 0, !dbg !7419
  store %struct._dep_link* %back, %struct._dep_link** %link, align 8, !dbg !7418
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !7420, metadata !DIExpression()), !dbg !7421
  %4 = load %struct._dep_node*, %struct._dep_node** %node, align 8, !dbg !7422
  %dep2 = getelementptr inbounds %struct._dep_node, %struct._dep_node* %4, i32 0, i32 1, !dbg !7422
  store %struct._dep* %dep2, %struct._dep** %dep, align 8, !dbg !7421
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elem, metadata !7423, metadata !DIExpression()), !dbg !7424
  %5 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !7425
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %5, i32 0, i32 0, !dbg !7425
  %6 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !7425
  store %struct.rtx_def* %6, %struct.rtx_def** %elem, align 8, !dbg !7424
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7426, metadata !DIExpression()), !dbg !7427
  %7 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !7428
  %con = getelementptr inbounds %struct._dep, %struct._dep* %7, i32 0, i32 1, !dbg !7428
  %8 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !7428
  store %struct.rtx_def* %8, %struct.rtx_def** %insn, align 8, !dbg !7427
  %9 = load %struct._dep_link*, %struct._dep_link** %link, align 8, !dbg !7429
  %10 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7430
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %10, null, !dbg !7430
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7430

cond.true:                                        ; preds = %entry
  %11 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7430
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %11, i32 0, i32 0, !dbg !7430
  br label %cond.end, !dbg !7430

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7430

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7430
  %12 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7430
  %tobool3 = icmp ne %struct.VEC_int_heap* %12, null, !dbg !7430
  br i1 %tobool3, label %cond.true4, label %cond.false6, !dbg !7430

cond.true4:                                       ; preds = %cond.end
  %13 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7430
  %base5 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %13, i32 0, i32 0, !dbg !7430
  br label %cond.end7, !dbg !7430

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !7430

cond.end7:                                        ; preds = %cond.false6, %cond.true4
  %cond8 = phi %struct.VEC_int_base* [ %base5, %cond.true4 ], [ null, %cond.false6 ], !dbg !7430
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7430
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !7430
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7430
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7430
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7430
  %15 = load i32, i32* %rt_int, align 8, !dbg !7430
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond8, i32 %15), !dbg !7430
  %call9 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %call), !dbg !7430
  %spec_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call9, i32 0, i32 3, !dbg !7430
  %16 = load %struct._deps_list*, %struct._deps_list** %spec_back_deps, align 8, !dbg !7430
  %17 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7431
  %tobool10 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %17, null, !dbg !7431
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !7431

cond.true11:                                      ; preds = %cond.end7
  %18 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !7431
  %base12 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %18, i32 0, i32 0, !dbg !7431
  br label %cond.end14, !dbg !7431

cond.false13:                                     ; preds = %cond.end7
  br label %cond.end14, !dbg !7431

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base12, %cond.true11 ], [ null, %cond.false13 ], !dbg !7431
  %19 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7431
  %tobool16 = icmp ne %struct.VEC_int_heap* %19, null, !dbg !7431
  br i1 %tobool16, label %cond.true17, label %cond.false19, !dbg !7431

cond.true17:                                      ; preds = %cond.end14
  %20 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7431
  %base18 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %20, i32 0, i32 0, !dbg !7431
  br label %cond.end20, !dbg !7431

cond.false19:                                     ; preds = %cond.end14
  br label %cond.end20, !dbg !7431

cond.end20:                                       ; preds = %cond.false19, %cond.true17
  %cond21 = phi %struct.VEC_int_base* [ %base18, %cond.true17 ], [ null, %cond.false19 ], !dbg !7431
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7431
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !7431
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !7431
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 0, !dbg !7431
  %rt_int25 = bitcast %union.rtunion_def* %arrayidx24 to i32*, !dbg !7431
  %22 = load i32, i32* %rt_int25, align 8, !dbg !7431
  %call26 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond21, i32 %22), !dbg !7431
  %call27 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond15, i32 %call26), !dbg !7431
  %hard_back_deps = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call27, i32 0, i32 2, !dbg !7431
  %23 = load %struct._deps_list*, %struct._deps_list** %hard_back_deps, align 8, !dbg !7431
  call void @move_dep_link(%struct._dep_link* %9, %struct._deps_list* %16, %struct._deps_list* %23), !dbg !7432
  %24 = load %struct._dep*, %struct._dep** %dep, align 8, !dbg !7433
  %status = getelementptr inbounds %struct._dep, %struct._dep* %24, i32 0, i32 3, !dbg !7433
  %25 = load i32, i32* %status, align 4, !dbg !7434
  %and = and i32 %25, -16777216, !dbg !7434
  store i32 %and, i32* %status, align 4, !dbg !7434
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @true_dependency_cache, align 8, !dbg !7435
  %cmp = icmp ne %struct.bitmap_head_def* %26, null, !dbg !7437
  br i1 %cmp, label %if.then, label %if.end, !dbg !7438

if.then:                                          ; preds = %cond.end20
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @spec_dependency_cache, align 8, !dbg !7439
  %28 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7440
  %tobool28 = icmp ne %struct.VEC_int_heap* %28, null, !dbg !7440
  br i1 %tobool28, label %cond.true29, label %cond.false31, !dbg !7440

cond.true29:                                      ; preds = %if.then
  %29 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7440
  %base30 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %29, i32 0, i32 0, !dbg !7440
  br label %cond.end32, !dbg !7440

cond.false31:                                     ; preds = %if.then
  br label %cond.end32, !dbg !7440

cond.end32:                                       ; preds = %cond.false31, %cond.true29
  %cond33 = phi %struct.VEC_int_base* [ %base30, %cond.true29 ], [ null, %cond.false31 ], !dbg !7440
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7440
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !7440
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !7440
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 0, !dbg !7440
  %rt_int37 = bitcast %union.rtunion_def* %arrayidx36 to i32*, !dbg !7440
  %31 = load i32, i32* %rt_int37, align 8, !dbg !7440
  %call38 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond33, i32 %31), !dbg !7440
  %idxprom = sext i32 %call38 to i64, !dbg !7439
  %arrayidx39 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %27, i64 %idxprom, !dbg !7439
  %32 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7441
  %tobool40 = icmp ne %struct.VEC_int_heap* %32, null, !dbg !7441
  br i1 %tobool40, label %cond.true41, label %cond.false43, !dbg !7441

cond.true41:                                      ; preds = %cond.end32
  %33 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7441
  %base42 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %33, i32 0, i32 0, !dbg !7441
  br label %cond.end44, !dbg !7441

cond.false43:                                     ; preds = %cond.end32
  br label %cond.end44, !dbg !7441

cond.end44:                                       ; preds = %cond.false43, %cond.true41
  %cond45 = phi %struct.VEC_int_base* [ %base42, %cond.true41 ], [ null, %cond.false43 ], !dbg !7441
  %34 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !7441
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !7441
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !7441
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !7441
  %rt_int49 = bitcast %union.rtunion_def* %arrayidx48 to i32*, !dbg !7441
  %35 = load i32, i32* %rt_int49, align 8, !dbg !7441
  %call50 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond45, i32 %35), !dbg !7441
  %call51 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx39, i32 %call50), !dbg !7442
  br label %if.end, !dbg !7442

if.end:                                           ; preds = %cond.end44, %cond.end20
  ret void, !dbg !7443
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_dependency_caches(%struct._dep* %dep, i32 %old_type) #0 !dbg !7444 {
entry:
  %dep.addr = alloca %struct._dep*, align 8
  %old_type.addr = alloca i32, align 4
  %elem_luid = alloca i32, align 4
  %insn_luid = alloca i32, align 4
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !7447, metadata !DIExpression()), !dbg !7448
  store i32 %old_type, i32* %old_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_type.addr, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.declare(metadata i32* %elem_luid, metadata !7451, metadata !DIExpression()), !dbg !7452
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7453
  %tobool = icmp ne %struct.VEC_int_heap* %0, null, !dbg !7453
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7453

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7453
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i32 0, i32 0, !dbg !7453
  br label %cond.end, !dbg !7453

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7453

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7453
  %2 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7453
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %2, i32 0, i32 0, !dbg !7453
  %3 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !7453
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !7453
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7453
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7453
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7453
  %4 = load i32, i32* %rt_int, align 8, !dbg !7453
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond, i32 %4), !dbg !7453
  store i32 %call, i32* %elem_luid, align 4, !dbg !7452
  call void @llvm.dbg.declare(metadata i32* %insn_luid, metadata !7454, metadata !DIExpression()), !dbg !7455
  %5 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7456
  %tobool1 = icmp ne %struct.VEC_int_heap* %5, null, !dbg !7456
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !7456

cond.true2:                                       ; preds = %cond.end
  %6 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !7456
  %base3 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %6, i32 0, i32 0, !dbg !7456
  br label %cond.end5, !dbg !7456

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !7456

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_int_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !7456
  %7 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7456
  %con = getelementptr inbounds %struct._dep, %struct._dep* %7, i32 0, i32 1, !dbg !7456
  %8 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !7456
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !7456
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !7456
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 0, !dbg !7456
  %rt_int10 = bitcast %union.rtunion_def* %arrayidx9 to i32*, !dbg !7456
  %9 = load i32, i32* %rt_int10, align 8, !dbg !7456
  %call11 = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond6, i32 %9), !dbg !7456
  store i32 %call11, i32* %insn_luid, align 4, !dbg !7455
  %10 = load %struct.haifa_sched_info*, %struct.haifa_sched_info** @current_sched_info, align 8, !dbg !7457
  %flags = getelementptr inbounds %struct.haifa_sched_info, %struct.haifa_sched_info* %10, i32 0, i32 17, !dbg !7459
  %11 = load i32, i32* %flags, align 8, !dbg !7459
  %and = and i32 %11, 1, !dbg !7460
  %tobool12 = icmp ne i32 %and, 0, !dbg !7460
  br i1 %tobool12, label %if.end, label %if.then, !dbg !7461

if.then:                                          ; preds = %cond.end5
  %12 = load i32, i32* %old_type.addr, align 4, !dbg !7462
  switch i32 %12, label %sw.default [
    i32 11, label %sw.bb
    i32 12, label %sw.bb15
  ], !dbg !7464

sw.bb:                                            ; preds = %if.then
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @output_dependency_cache, align 8, !dbg !7465
  %14 = load i32, i32* %insn_luid, align 4, !dbg !7467
  %idxprom = sext i32 %14 to i64, !dbg !7465
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %13, i64 %idxprom, !dbg !7465
  %15 = load i32, i32* %elem_luid, align 4, !dbg !7468
  %call14 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx13, i32 %15), !dbg !7469
  br label %sw.epilog, !dbg !7470

sw.bb15:                                          ; preds = %if.then
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @anti_dependency_cache, align 8, !dbg !7471
  %17 = load i32, i32* %insn_luid, align 4, !dbg !7472
  %idxprom16 = sext i32 %17 to i64, !dbg !7471
  %arrayidx17 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %16, i64 %idxprom16, !dbg !7471
  %18 = load i32, i32* %elem_luid, align 4, !dbg !7473
  %call18 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %arrayidx17, i32 %18), !dbg !7474
  br label %sw.epilog, !dbg !7475

sw.default:                                       ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1008, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7476
  br label %sw.epilog, !dbg !7477

sw.epilog:                                        ; preds = %sw.default, %sw.bb15, %sw.bb
  br label %if.end, !dbg !7478

if.end:                                           ; preds = %sw.epilog, %cond.end5
  %19 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !7479
  call void @set_dependency_caches(%struct._dep* %19), !dbg !7480
  ret void, !dbg !7481
}

; Function Attrs: noinline nounwind uwtable
define internal void @detach_dep_link(%struct._dep_link* %l) #0 !dbg !7482 {
entry:
  %l.addr = alloca %struct._dep_link*, align 8
  %prev_nextp = alloca %struct._dep_link**, align 8
  %next = alloca %struct._dep_link*, align 8
  store %struct._dep_link* %l, %struct._dep_link** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_link** %l.addr, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.declare(metadata %struct._dep_link*** %prev_nextp, metadata !7487, metadata !DIExpression()), !dbg !7488
  %0 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7489
  %prev_nextp1 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %0, i32 0, i32 2, !dbg !7489
  %1 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp1, align 8, !dbg !7489
  store %struct._dep_link** %1, %struct._dep_link*** %prev_nextp, align 8, !dbg !7488
  call void @llvm.dbg.declare(metadata %struct._dep_link** %next, metadata !7490, metadata !DIExpression()), !dbg !7491
  %2 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7492
  %next2 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %2, i32 0, i32 1, !dbg !7492
  %3 = load %struct._dep_link*, %struct._dep_link** %next2, align 8, !dbg !7492
  store %struct._dep_link* %3, %struct._dep_link** %next, align 8, !dbg !7491
  %4 = load %struct._dep_link*, %struct._dep_link** %next, align 8, !dbg !7493
  %5 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp, align 8, !dbg !7494
  store %struct._dep_link* %4, %struct._dep_link** %5, align 8, !dbg !7495
  %6 = load %struct._dep_link*, %struct._dep_link** %next, align 8, !dbg !7496
  %cmp = icmp ne %struct._dep_link* %6, null, !dbg !7498
  br i1 %cmp, label %if.then, label %if.end, !dbg !7499

if.then:                                          ; preds = %entry
  %7 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp, align 8, !dbg !7500
  %8 = load %struct._dep_link*, %struct._dep_link** %next, align 8, !dbg !7501
  %prev_nextp3 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %8, i32 0, i32 2, !dbg !7501
  store %struct._dep_link** %7, %struct._dep_link*** %prev_nextp3, align 8, !dbg !7502
  br label %if.end, !dbg !7501

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7503
  %prev_nextp4 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %9, i32 0, i32 2, !dbg !7503
  store %struct._dep_link** null, %struct._dep_link*** %prev_nextp4, align 8, !dbg !7504
  %10 = load %struct._dep_link*, %struct._dep_link** %l.addr, align 8, !dbg !7505
  %next5 = getelementptr inbounds %struct._dep_link, %struct._dep_link* %10, i32 0, i32 1, !dbg !7505
  store %struct._dep_link* null, %struct._dep_link** %next5, align 8, !dbg !7506
  ret void, !dbg !7507
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @dep_link_is_detached_p(%struct._dep_link* %link) #0 !dbg !7508 {
entry:
  %link.addr = alloca %struct._dep_link*, align 8
  store %struct._dep_link* %link, %struct._dep_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep_link** %link.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  %0 = load %struct._dep_link*, %struct._dep_link** %link.addr, align 8, !dbg !7511
  %prev_nextp = getelementptr inbounds %struct._dep_link, %struct._dep_link* %0, i32 0, i32 2, !dbg !7511
  %1 = load %struct._dep_link**, %struct._dep_link*** %prev_nextp, align 8, !dbg !7511
  %cmp = icmp eq %struct._dep_link** %1, null, !dbg !7512
  %conv = zext i1 %cmp to i32, !dbg !7512
  %conv1 = trunc i32 %conv to i8, !dbg !7511
  ret i8 %conv1, !dbg !7513
}

declare dso_local void @extract_insn(%struct.rtx_def*) #2

declare dso_local void @preprocess_constraints() #2

declare dso_local void @ira_implicitly_set_insn_hard_regs(i64*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_dependence_list(%struct.rtx_def* %insn, %struct.rtx_def* %list, i32 %uncond, i32 %dep_type) #0 !dbg !7514 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %list.addr = alloca %struct.rtx_def*, align 8
  %uncond.addr = alloca i32, align 4
  %dep_type.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7517, metadata !DIExpression()), !dbg !7518
  store %struct.rtx_def* %list, %struct.rtx_def** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %list.addr, metadata !7519, metadata !DIExpression()), !dbg !7520
  store i32 %uncond, i32* %uncond.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uncond.addr, metadata !7521, metadata !DIExpression()), !dbg !7522
  store i32 %dep_type, i32* %dep_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dep_type.addr, metadata !7523, metadata !DIExpression()), !dbg !7524
  br label %for.cond, !dbg !7525

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %list.addr, align 8, !dbg !7526
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !7529
  br i1 %tobool, label %for.body, label %for.end, !dbg !7529

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %uncond.addr, align 4, !dbg !7530
  %tobool1 = icmp ne i32 %1, 0, !dbg !7530
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !7533

lor.lhs.false:                                    ; preds = %for.body
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7534
  %3 = load %struct.rtx_def*, %struct.rtx_def** %list.addr, align 8, !dbg !7535
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !7535
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7535
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7535
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7535
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7535
  %call = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %2, %struct.rtx_def* %4), !dbg !7536
  %tobool2 = icmp ne i8 %call, 0, !dbg !7536
  br i1 %tobool2, label %if.end, label %if.then, !dbg !7537

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7538
  %6 = load %struct.rtx_def*, %struct.rtx_def** %list.addr, align 8, !dbg !7539
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !7539
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !7539
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 0, !dbg !7539
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !7539
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !7539
  %8 = load i32, i32* %dep_type.addr, align 4, !dbg !7540
  call void @add_dependence(%struct.rtx_def* %5, %struct.rtx_def* %7, i32 %8), !dbg !7541
  br label %if.end, !dbg !7541

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !7542

for.inc:                                          ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %list.addr, align 8, !dbg !7543
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !7543
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !7543
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !7543
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !7543
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10, align 8, !dbg !7543
  store %struct.rtx_def* %10, %struct.rtx_def** %list.addr, align 8, !dbg !7544
  br label %for.cond, !dbg !7545, !llvm.loop !7546

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7548
}

; Function Attrs: noinline nounwind uwtable
define internal void @sched_analyze_2(%struct.deps* %deps, %struct.rtx_def* %x, %struct.rtx_def* %insn) #0 !dbg !7549 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %cslr_p = alloca i8, align 1
  %regno = alloca i32, align 4
  %mode = alloca i32, align 4
  %u = alloca %struct.rtx_def*, align 8
  %pending = alloca %struct.rtx_def*, align 8
  %pending_mem = alloca %struct.rtx_def*, align 8
  %t = alloca %struct.rtx_def*, align 8
  %address_mode = alloca i32, align 4
  %ds = alloca i32, align 4
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7552, metadata !DIExpression()), !dbg !7553
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7554, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7556, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7558, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7560, metadata !DIExpression()), !dbg !7561
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !7562, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.declare(metadata i8* %cslr_p, metadata !7564, metadata !DIExpression()), !dbg !7565
  %0 = load i8, i8* @can_start_lhs_rhs_p, align 1, !dbg !7566
  store i8 %0, i8* %cslr_p, align 1, !dbg !7565
  store i8 0, i8* @can_start_lhs_rhs_p, align 1, !dbg !7567
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7568
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !7568
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7568

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2371, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7568
  br label %cond.end, !dbg !7568

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7568

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7568
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7569
  %cmp = icmp eq %struct.rtx_def* %2, null, !dbg !7571
  br i1 %cmp, label %if.then, label %if.end, !dbg !7572

if.then:                                          ; preds = %cond.end
  br label %if.end347, !dbg !7573

if.end:                                           ; preds = %cond.end
  %3 = load i8, i8* %cslr_p, align 1, !dbg !7574
  %conv = zext i8 %3 to i32, !dbg !7574
  %tobool1 = icmp ne i32 %conv, 0, !dbg !7574
  br i1 %tobool1, label %land.lhs.true, label %if.end5, !dbg !7576

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7577
  %start_rhs = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %4, i32 0, i32 5, !dbg !7578
  %5 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_rhs, align 8, !dbg !7578
  %tobool2 = icmp ne void (%struct.rtx_def*)* %5, null, !dbg !7577
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !7579

if.then3:                                         ; preds = %land.lhs.true
  %6 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7580
  %start_rhs4 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %6, i32 0, i32 5, !dbg !7581
  %7 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_rhs4, align 8, !dbg !7581
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7582
  call void %7(%struct.rtx_def* %8), !dbg !7580
  br label %if.end5, !dbg !7580

if.end5:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7583
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !7583
  %bf.load = load i32, i32* %10, align 8, !dbg !7583
  %bf.clear = and i32 %bf.load, 65535, !dbg !7583
  store i32 %bf.clear, i32* %code, align 4, !dbg !7584
  %11 = load i32, i32* %code, align 4, !dbg !7585
  switch i32 %11, label %sw.default [
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 45, label %sw.bb
    i32 35, label %sw.bb
    i32 44, label %sw.bb
    i32 37, label %sw.bb13
    i32 43, label %sw.bb35
    i32 29, label %sw.bb214
    i32 22, label %sw.bb215
    i32 19, label %sw.bb222
    i32 17, label %sw.bb223
    i32 16, label %sw.bb223
    i32 74, label %sw.bb258
    i32 76, label %sw.bb258
    i32 75, label %sw.bb258
    i32 77, label %sw.bb258
    i32 79, label %sw.bb271
    i32 78, label %sw.bb271
  ], !dbg !7586

sw.bb:                                            ; preds = %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5, %if.end5
  %12 = load i8, i8* %cslr_p, align 1, !dbg !7587
  %conv6 = zext i8 %12 to i32, !dbg !7587
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !7587
  br i1 %tobool7, label %land.lhs.true8, label %if.end12, !dbg !7590

land.lhs.true8:                                   ; preds = %sw.bb
  %13 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7591
  %finish_rhs = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %13, i32 0, i32 6, !dbg !7592
  %14 = load void ()*, void ()** %finish_rhs, align 8, !dbg !7592
  %tobool9 = icmp ne void ()* %14, null, !dbg !7591
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !7593

if.then10:                                        ; preds = %land.lhs.true8
  %15 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7594
  %finish_rhs11 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %15, i32 0, i32 6, !dbg !7595
  %16 = load void ()*, void ()** %finish_rhs11, align 8, !dbg !7595
  call void %16(), !dbg !7594
  br label %if.end12, !dbg !7594

if.end12:                                         ; preds = %if.then10, %land.lhs.true8, %sw.bb
  br label %if.end347, !dbg !7596

sw.bb13:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !7597, metadata !DIExpression()), !dbg !7599
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7600
  %call = call i32 @rhs_regno(%struct.rtx_def* %17), !dbg !7600
  store i32 %call, i32* %regno, align 4, !dbg !7599
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7601, metadata !DIExpression()), !dbg !7602
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7603
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !7603
  %bf.load14 = load i32, i32* %19, align 8, !dbg !7603
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !7603
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !7603
  store i32 %bf.clear15, i32* %mode, align 4, !dbg !7602
  %20 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7604
  %21 = load i32, i32* %regno, align 4, !dbg !7605
  %22 = load i32, i32* %mode, align 4, !dbg !7606
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7607
  call void @sched_analyze_reg(%struct.deps* %20, i32 %21, i32 %22, i32 24, %struct.rtx_def* %23), !dbg !7608
  %24 = load i32, i32* %regno, align 4, !dbg !7609
  %cmp16 = icmp sge i32 %24, 8, !dbg !7611
  br i1 %cmp16, label %land.lhs.true18, label %if.end26, !dbg !7612

land.lhs.true18:                                  ; preds = %sw.bb13
  %25 = load i32, i32* %regno, align 4, !dbg !7613
  %cmp19 = icmp sle i32 %25, 15, !dbg !7614
  br i1 %cmp19, label %if.then21, label %if.end26, !dbg !7615

if.then21:                                        ; preds = %land.lhs.true18
  %26 = load i32, i32* %regno, align 4, !dbg !7616
  %cmp22 = icmp ne i32 %26, 8, !dbg !7619
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !7620

if.then24:                                        ; preds = %if.then21
  %27 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7621
  %28 = load i32, i32* %mode, align 4, !dbg !7622
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7623
  call void @sched_analyze_reg(%struct.deps* %27, i32 8, i32 %28, i32 24, %struct.rtx_def* %29), !dbg !7624
  br label %if.end25, !dbg !7624

if.end25:                                         ; preds = %if.then24, %if.then21
  %30 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7625
  %31 = load i32, i32* %mode, align 4, !dbg !7626
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7627
  call void @sched_analyze_reg(%struct.deps* %30, i32 8, i32 %31, i32 23, %struct.rtx_def* %32), !dbg !7628
  br label %if.end26, !dbg !7629

if.end26:                                         ; preds = %if.end25, %land.lhs.true18, %sw.bb13
  %33 = load i8, i8* %cslr_p, align 1, !dbg !7630
  %conv27 = zext i8 %33 to i32, !dbg !7630
  %tobool28 = icmp ne i32 %conv27, 0, !dbg !7630
  br i1 %tobool28, label %land.lhs.true29, label %if.end34, !dbg !7632

land.lhs.true29:                                  ; preds = %if.end26
  %34 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7633
  %finish_rhs30 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %34, i32 0, i32 6, !dbg !7634
  %35 = load void ()*, void ()** %finish_rhs30, align 8, !dbg !7634
  %tobool31 = icmp ne void ()* %35, null, !dbg !7633
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !7635

if.then32:                                        ; preds = %land.lhs.true29
  %36 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7636
  %finish_rhs33 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %36, i32 0, i32 6, !dbg !7637
  %37 = load void ()*, void ()** %finish_rhs33, align 8, !dbg !7637
  call void %37(), !dbg !7636
  br label %if.end34, !dbg !7636

if.end34:                                         ; preds = %if.then32, %land.lhs.true29, %if.end26
  br label %if.end347, !dbg !7638

sw.bb35:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %u, metadata !7639, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pending, metadata !7642, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pending_mem, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %t, metadata !7646, metadata !DIExpression()), !dbg !7647
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7648
  store %struct.rtx_def* %38, %struct.rtx_def** %t, align 8, !dbg !7647
  %39 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7649
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %39, i32 0, i32 12, !dbg !7651
  %bf.load36 = load i8, i8* %use_cselib, align 8, !dbg !7651
  %bf.clear37 = and i8 %bf.load36, 1, !dbg !7651
  %bf.cast = zext i8 %bf.clear37 to i32, !dbg !7651
  %tobool38 = icmp ne i32 %bf.cast, 0, !dbg !7649
  br i1 %tobool38, label %if.then39, label %if.end68, !dbg !7652

if.then39:                                        ; preds = %sw.bb35
  call void @llvm.dbg.declare(metadata i32* %address_mode, metadata !7653, metadata !DIExpression()), !dbg !7655
  %40 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 57, i32 1), align 8, !dbg !7656
  %41 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7657
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !7657
  %fld = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !7657
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !7657
  %rt_mem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !7657
  %42 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !7657
  %cmp41 = icmp eq %struct.mem_attrs* %42, null, !dbg !7657
  br i1 %cmp41, label %cond.true43, label %cond.false44, !dbg !7657

cond.true43:                                      ; preds = %if.then39
  br label %cond.end50, !dbg !7657

cond.false44:                                     ; preds = %if.then39
  %43 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7657
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !7657
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !7657
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 1, !dbg !7657
  %rt_mem48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.mem_attrs**, !dbg !7657
  %44 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem48, align 8, !dbg !7657
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %44, i32 0, i32 5, !dbg !7657
  %45 = load i8, i8* %addrspace, align 8, !dbg !7657
  %conv49 = zext i8 %45 to i32, !dbg !7657
  br label %cond.end50, !dbg !7657

cond.end50:                                       ; preds = %cond.false44, %cond.true43
  %cond51 = phi i32 [ 0, %cond.true43 ], [ %conv49, %cond.false44 ], !dbg !7657
  %conv52 = trunc i32 %cond51 to i8, !dbg !7657
  %call53 = call i32 %40(i8 zeroext %conv52), !dbg !7658
  store i32 %call53, i32* %address_mode, align 4, !dbg !7655
  %46 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7659
  %call54 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %46), !dbg !7659
  store %struct.rtx_def* %call54, %struct.rtx_def** %t, align 8, !dbg !7660
  %47 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7661
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !7661
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !7661
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 0, !dbg !7661
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !7661
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7661
  %49 = load i32, i32* %address_mode, align 4, !dbg !7662
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7663
  %call58 = call %struct.cselib_val_struct* @cselib_lookup_from_insn(%struct.rtx_def* %48, i32 %49, i32 1, %struct.rtx_def* %50), !dbg !7664
  %51 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7665
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !7665
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !7665
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !7665
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !7665
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !7665
  %call63 = call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %52), !dbg !7666
  %53 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7667
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !7667
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !7667
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !7667
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !7667
  store %struct.rtx_def* %call63, %struct.rtx_def** %rt_rtx67, align 8, !dbg !7668
  br label %if.end68, !dbg !7669

if.end68:                                         ; preds = %cond.end50, %sw.bb35
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7670
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !7670
  %bf.load69 = load i32, i32* %55, align 8, !dbg !7670
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !7670
  %cmp71 = icmp eq i32 %bf.clear70, 7, !dbg !7670
  br i1 %cmp71, label %if.end195, label %if.then73, !dbg !7672

if.then73:                                        ; preds = %if.end68
  %56 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7673
  %call74 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %56), !dbg !7675
  store %struct.rtx_def* %call74, %struct.rtx_def** %t, align 8, !dbg !7676
  %57 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7677
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %57, i32 0, i32 0, !dbg !7678
  %58 = load %struct.rtx_def*, %struct.rtx_def** %pending_read_insns, align 8, !dbg !7678
  store %struct.rtx_def* %58, %struct.rtx_def** %pending, align 8, !dbg !7679
  %59 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7680
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %59, i32 0, i32 1, !dbg !7681
  %60 = load %struct.rtx_def*, %struct.rtx_def** %pending_read_mems, align 8, !dbg !7681
  store %struct.rtx_def* %60, %struct.rtx_def** %pending_mem, align 8, !dbg !7682
  br label %while.cond, !dbg !7683

while.cond:                                       ; preds = %if.end98, %if.then73
  %61 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !7684
  %tobool75 = icmp ne %struct.rtx_def* %61, null, !dbg !7683
  br i1 %tobool75, label %while.body, label %while.end, !dbg !7683

while.body:                                       ; preds = %while.cond
  %62 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !7685
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !7685
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !7685
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !7685
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !7685
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !7685
  %64 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7688
  %call80 = call i32 @read_dependence(%struct.rtx_def* %63, %struct.rtx_def* %64), !dbg !7689
  %tobool81 = icmp ne i32 %call80, 0, !dbg !7689
  br i1 %tobool81, label %land.lhs.true82, label %if.end98, !dbg !7690

land.lhs.true82:                                  ; preds = %while.body
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7691
  %66 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !7692
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !7692
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !7692
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !7692
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !7692
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !7692
  %call87 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %65, %struct.rtx_def* %67), !dbg !7693
  %tobool88 = icmp ne i8 %call87, 0, !dbg !7693
  br i1 %tobool88, label %if.end98, label %if.then89, !dbg !7694

if.then89:                                        ; preds = %land.lhs.true82
  %68 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7695
  %69 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !7696
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !7696
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !7696
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 0, !dbg !7696
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !7696
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !7696
  %71 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !7697
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !7697
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !7697
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !7697
  %rt_rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**, !dbg !7697
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !7697
  call void @note_mem_dep(%struct.rtx_def* %68, %struct.rtx_def* %70, %struct.rtx_def* %72, i32 67108864), !dbg !7698
  br label %if.end98, !dbg !7698

if.end98:                                         ; preds = %if.then89, %land.lhs.true82, %while.body
  %73 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !7699
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !7699
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !7699
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 1, !dbg !7699
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !7699
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !7699
  store %struct.rtx_def* %74, %struct.rtx_def** %pending, align 8, !dbg !7700
  %75 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !7701
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !7701
  %fld104 = bitcast %union.u* %u103 to [1 x %union.rtunion_def]*, !dbg !7701
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i64 0, i64 1, !dbg !7701
  %rt_rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**, !dbg !7701
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !7701
  store %struct.rtx_def* %76, %struct.rtx_def** %pending_mem, align 8, !dbg !7702
  br label %while.cond, !dbg !7683, !llvm.loop !7703

while.end:                                        ; preds = %while.cond
  %77 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7705
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %77, i32 0, i32 2, !dbg !7706
  %78 = load %struct.rtx_def*, %struct.rtx_def** %pending_write_insns, align 8, !dbg !7706
  store %struct.rtx_def* %78, %struct.rtx_def** %pending, align 8, !dbg !7707
  %79 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7708
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %79, i32 0, i32 3, !dbg !7709
  %80 = load %struct.rtx_def*, %struct.rtx_def** %pending_write_mems, align 8, !dbg !7709
  store %struct.rtx_def* %80, %struct.rtx_def** %pending_mem, align 8, !dbg !7710
  br label %while.cond107, !dbg !7711

while.cond107:                                    ; preds = %if.end138, %while.end
  %81 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !7712
  %tobool108 = icmp ne %struct.rtx_def* %81, null, !dbg !7711
  br i1 %tobool108, label %while.body109, label %while.end147, !dbg !7711

while.body109:                                    ; preds = %while.cond107
  %82 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !7713
  %u110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !7713
  %fld111 = bitcast %union.u* %u110 to [1 x %union.rtunion_def]*, !dbg !7713
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i64 0, i64 0, !dbg !7713
  %rt_rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**, !dbg !7713
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !7713
  %84 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7716
  %call114 = call i32 @true_dependence(%struct.rtx_def* %83, i32 0, %struct.rtx_def* %84, i8 (%struct.rtx_def*, i8)* @rtx_varies_p), !dbg !7717
  %tobool115 = icmp ne i32 %call114, 0, !dbg !7717
  br i1 %tobool115, label %land.lhs.true116, label %if.end138, !dbg !7718

land.lhs.true116:                                 ; preds = %while.body109
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7719
  %86 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !7720
  %u117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !7720
  %fld118 = bitcast %union.u* %u117 to [1 x %union.rtunion_def]*, !dbg !7720
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i64 0, i64 0, !dbg !7720
  %rt_rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**, !dbg !7720
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !7720
  %call121 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %85, %struct.rtx_def* %87), !dbg !7721
  %tobool122 = icmp ne i8 %call121, 0, !dbg !7721
  br i1 %tobool122, label %if.end138, label %if.then123, !dbg !7722

if.then123:                                       ; preds = %land.lhs.true116
  %88 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !7723
  %89 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !7724
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !7724
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !7724
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 0, !dbg !7724
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !7724
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !7724
  %91 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !7725
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !7725
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !7725
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 0, !dbg !7725
  %rt_rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**, !dbg !7725
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !7725
  %93 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7726
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %93, i32 0, i32 12, !dbg !7727
  %bf.load132 = load i8, i8* %generate_spec_deps, align 8, !dbg !7727
  %bf.lshr133 = lshr i8 %bf.load132, 2, !dbg !7727
  %bf.clear134 = and i8 %bf.lshr133, 1, !dbg !7727
  %bf.cast135 = zext i8 %bf.clear134 to i32, !dbg !7727
  %tobool136 = icmp ne i32 %bf.cast135, 0, !dbg !7726
  %94 = zext i1 %tobool136 to i64, !dbg !7726
  %cond137 = select i1 %tobool136, i32 16777279, i32 16777216, !dbg !7726
  call void @note_mem_dep(%struct.rtx_def* %88, %struct.rtx_def* %90, %struct.rtx_def* %92, i32 %cond137), !dbg !7728
  br label %if.end138, !dbg !7728

if.end138:                                        ; preds = %if.then123, %land.lhs.true116, %while.body109
  %95 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !7729
  %u139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !7729
  %fld140 = bitcast %union.u* %u139 to [1 x %union.rtunion_def]*, !dbg !7729
  %arrayidx141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld140, i64 0, i64 1, !dbg !7729
  %rt_rtx142 = bitcast %union.rtunion_def* %arrayidx141 to %struct.rtx_def**, !dbg !7729
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx142, align 8, !dbg !7729
  store %struct.rtx_def* %96, %struct.rtx_def** %pending, align 8, !dbg !7730
  %97 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !7731
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !7731
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !7731
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 1, !dbg !7731
  %rt_rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**, !dbg !7731
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx146, align 8, !dbg !7731
  store %struct.rtx_def* %98, %struct.rtx_def** %pending_mem, align 8, !dbg !7732
  br label %while.cond107, !dbg !7711, !llvm.loop !7733

while.end147:                                     ; preds = %while.cond107
  %99 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7735
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %99, i32 0, i32 7, !dbg !7737
  %100 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !7737
  store %struct.rtx_def* %100, %struct.rtx_def** %u, align 8, !dbg !7738
  br label %for.cond, !dbg !7739

for.cond:                                         ; preds = %for.inc, %while.end147
  %101 = load %struct.rtx_def*, %struct.rtx_def** %u, align 8, !dbg !7740
  %tobool148 = icmp ne %struct.rtx_def* %101, null, !dbg !7742
  br i1 %tobool148, label %for.body, label %for.end, !dbg !7742

for.body:                                         ; preds = %for.cond
  %102 = load %struct.rtx_def*, %struct.rtx_def** %u, align 8, !dbg !7743
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !7743
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !7743
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 0, !dbg !7743
  %rt_rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**, !dbg !7743
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx152, align 8, !dbg !7743
  %104 = bitcast %struct.rtx_def* %103 to i32*, !dbg !7743
  %bf.load153 = load i32, i32* %104, align 8, !dbg !7743
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !7743
  %cmp155 = icmp eq i32 %bf.clear154, 9, !dbg !7743
  br i1 %cmp155, label %if.else, label %if.then157, !dbg !7746

if.then157:                                       ; preds = %for.body
  %105 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7747
  %106 = load %struct.rtx_def*, %struct.rtx_def** %u, align 8, !dbg !7748
  %u158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !7748
  %fld159 = bitcast %union.u* %u158 to [1 x %union.rtunion_def]*, !dbg !7748
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i64 0, i64 0, !dbg !7748
  %rt_rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**, !dbg !7748
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx161, align 8, !dbg !7748
  call void @add_dependence(%struct.rtx_def* %105, %struct.rtx_def* %107, i32 12), !dbg !7749
  br label %if.end190, !dbg !7749

if.else:                                          ; preds = %for.body
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7750
  %call162 = call i32 @deps_may_trap_p(%struct.rtx_def* %108), !dbg !7752
  %tobool163 = icmp ne i32 %call162, 0, !dbg !7752
  br i1 %tobool163, label %if.then164, label %if.end189, !dbg !7753

if.then164:                                       ; preds = %if.else
  %109 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7754
  %generate_spec_deps165 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %109, i32 0, i32 12, !dbg !7757
  %bf.load166 = load i8, i8* %generate_spec_deps165, align 8, !dbg !7757
  %bf.lshr167 = lshr i8 %bf.load166, 2, !dbg !7757
  %bf.clear168 = and i8 %bf.lshr167, 1, !dbg !7757
  %bf.cast169 = zext i8 %bf.clear168 to i32, !dbg !7757
  %tobool170 = icmp ne i32 %bf.cast169, 0, !dbg !7758
  br i1 %tobool170, label %land.lhs.true171, label %if.else183, !dbg !7759

land.lhs.true171:                                 ; preds = %if.then164
  %call172 = call zeroext i8 @sel_sched_p(), !dbg !7760
  %conv173 = zext i8 %call172 to i32, !dbg !7760
  %tobool174 = icmp ne i32 %conv173, 0, !dbg !7760
  br i1 %tobool174, label %land.lhs.true175, label %if.else183, !dbg !7761

land.lhs.true175:                                 ; preds = %land.lhs.true171
  %110 = load %struct.spec_info_def*, %struct.spec_info_def** @spec_info, align 8, !dbg !7762
  %mask = getelementptr inbounds %struct.spec_info_def, %struct.spec_info_def* %110, i32 0, i32 0, !dbg !7763
  %111 = load i32, i32* %mask, align 8, !dbg !7763
  %and = and i32 %111, 258048, !dbg !7764
  %tobool176 = icmp ne i32 %and, 0, !dbg !7764
  br i1 %tobool176, label %if.then177, label %if.else183, !dbg !7765

if.then177:                                       ; preds = %land.lhs.true175
  call void @llvm.dbg.declare(metadata i32* %ds, metadata !7766, metadata !DIExpression()), !dbg !7768
  %call178 = call i32 @set_dep_weak(i32 67108864, i32 258048, i32 62), !dbg !7769
  store i32 %call178, i32* %ds, align 4, !dbg !7768
  %112 = load %struct.rtx_def*, %struct.rtx_def** %u, align 8, !dbg !7770
  %u179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1, !dbg !7770
  %fld180 = bitcast %union.u* %u179 to [1 x %union.rtunion_def]*, !dbg !7770
  %arrayidx181 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld180, i64 0, i64 0, !dbg !7770
  %rt_rtx182 = bitcast %union.rtunion_def* %arrayidx181 to %struct.rtx_def**, !dbg !7770
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx182, align 8, !dbg !7770
  %114 = load i32, i32* %ds, align 4, !dbg !7771
  call void @note_dep(%struct.rtx_def* %113, i32 %114), !dbg !7772
  br label %if.end188, !dbg !7773

if.else183:                                       ; preds = %land.lhs.true175, %land.lhs.true171, %if.then164
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7774
  %116 = load %struct.rtx_def*, %struct.rtx_def** %u, align 8, !dbg !7775
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1, !dbg !7775
  %fld185 = bitcast %union.u* %u184 to [1 x %union.rtunion_def]*, !dbg !7775
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i64 0, i64 0, !dbg !7775
  %rt_rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**, !dbg !7775
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !7775
  call void @add_dependence(%struct.rtx_def* %115, %struct.rtx_def* %117, i32 12), !dbg !7776
  br label %if.end188

if.end188:                                        ; preds = %if.else183, %if.then177
  br label %if.end189, !dbg !7777

if.end189:                                        ; preds = %if.end188, %if.else
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then157
  br label %for.inc, !dbg !7778

for.inc:                                          ; preds = %if.end190
  %118 = load %struct.rtx_def*, %struct.rtx_def** %u, align 8, !dbg !7779
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !7779
  %fld192 = bitcast %union.u* %u191 to [1 x %union.rtunion_def]*, !dbg !7779
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i64 0, i64 1, !dbg !7779
  %rt_rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**, !dbg !7779
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !7779
  store %struct.rtx_def* %119, %struct.rtx_def** %u, align 8, !dbg !7780
  br label %for.cond, !dbg !7781, !llvm.loop !7782

for.end:                                          ; preds = %for.cond
  br label %if.end195, !dbg !7784

if.end195:                                        ; preds = %for.end, %if.end68
  %120 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7785
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %120, i32 0, i32 18, !dbg !7787
  %bf.load196 = load i8, i8* %readonly, align 4, !dbg !7787
  %bf.clear197 = and i8 %bf.load196, 1, !dbg !7787
  %bf.cast198 = zext i8 %bf.clear197 to i32, !dbg !7787
  %tobool199 = icmp ne i32 %bf.cast198, 0, !dbg !7785
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !7788

if.then200:                                       ; preds = %if.end195
  %121 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7789
  %122 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7790
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7791
  call void @add_insn_mem_dependence(%struct.deps* %121, i8 zeroext 1, %struct.rtx_def* %122, %struct.rtx_def* %123), !dbg !7792
  br label %if.end201, !dbg !7792

if.end201:                                        ; preds = %if.then200, %if.end195
  %124 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7793
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7794
  %u202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1, !dbg !7794
  %fld203 = bitcast %union.u* %u202 to [1 x %union.rtunion_def]*, !dbg !7794
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i64 0, i64 0, !dbg !7794
  %rt_rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**, !dbg !7794
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx205, align 8, !dbg !7794
  %127 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7795
  call void @sched_analyze_2(%struct.deps* %124, %struct.rtx_def* %126, %struct.rtx_def* %127), !dbg !7796
  %128 = load i8, i8* %cslr_p, align 1, !dbg !7797
  %conv206 = zext i8 %128 to i32, !dbg !7797
  %tobool207 = icmp ne i32 %conv206, 0, !dbg !7797
  br i1 %tobool207, label %land.lhs.true208, label %if.end213, !dbg !7799

land.lhs.true208:                                 ; preds = %if.end201
  %129 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7800
  %finish_rhs209 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %129, i32 0, i32 6, !dbg !7801
  %130 = load void ()*, void ()** %finish_rhs209, align 8, !dbg !7801
  %tobool210 = icmp ne void ()* %130, null, !dbg !7800
  br i1 %tobool210, label %if.then211, label %if.end213, !dbg !7802

if.then211:                                       ; preds = %land.lhs.true208
  %131 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7803
  %finish_rhs212 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %131, i32 0, i32 6, !dbg !7804
  %132 = load void ()*, void ()** %finish_rhs212, align 8, !dbg !7804
  call void %132(), !dbg !7803
  br label %if.end213, !dbg !7803

if.end213:                                        ; preds = %if.then211, %land.lhs.true208, %if.end201
  br label %if.end347, !dbg !7805

sw.bb214:                                         ; preds = %if.end5
  %133 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7806
  %134 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7807
  call void @flush_pending_lists(%struct.deps* %133, %struct.rtx_def* %134, i32 1, i32 0), !dbg !7808
  br label %sw.epilog, !dbg !7809

sw.bb215:                                         ; preds = %if.end5
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7810
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !7810
  %bf.load216 = load i32, i32* %136, align 8, !dbg !7810
  %bf.lshr217 = lshr i32 %bf.load216, 27, !dbg !7810
  %bf.clear218 = and i32 %bf.lshr217, 1, !dbg !7810
  %tobool219 = icmp ne i32 %bf.clear218, 0, !dbg !7810
  br i1 %tobool219, label %if.then220, label %if.end221, !dbg !7812

if.then220:                                       ; preds = %sw.bb215
  store i32 2, i32* @reg_pending_barrier, align 4, !dbg !7813
  br label %if.end221, !dbg !7814

if.end221:                                        ; preds = %if.then220, %sw.bb215
  br label %sw.epilog, !dbg !7815

sw.bb222:                                         ; preds = %if.end5
  %137 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7816
  %138 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7817
  call void @flush_pending_lists(%struct.deps* %137, %struct.rtx_def* %138, i32 1, i32 1), !dbg !7818
  br label %sw.bb223, !dbg !7818

sw.bb223:                                         ; preds = %if.end5, %if.end5, %sw.bb222
  %139 = load i32, i32* %code, align 4, !dbg !7819
  %cmp224 = icmp ne i32 %139, 17, !dbg !7822
  br i1 %cmp224, label %if.then230, label %lor.lhs.false, !dbg !7823

lor.lhs.false:                                    ; preds = %sw.bb223
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7824
  %141 = bitcast %struct.rtx_def* %140 to i32*, !dbg !7824
  %bf.load226 = load i32, i32* %141, align 8, !dbg !7824
  %bf.lshr227 = lshr i32 %bf.load226, 27, !dbg !7824
  %bf.clear228 = and i32 %bf.lshr227, 1, !dbg !7824
  %tobool229 = icmp ne i32 %bf.clear228, 0, !dbg !7824
  br i1 %tobool229, label %if.then230, label %if.end231, !dbg !7825

if.then230:                                       ; preds = %lor.lhs.false, %sw.bb223
  store i32 2, i32* @reg_pending_barrier, align 4, !dbg !7826
  br label %if.end231, !dbg !7827

if.end231:                                        ; preds = %if.then230, %lor.lhs.false
  %142 = load i32, i32* %code, align 4, !dbg !7828
  %cmp232 = icmp eq i32 %142, 17, !dbg !7830
  br i1 %cmp232, label %if.then234, label %if.end257, !dbg !7831

if.then234:                                       ; preds = %if.end231
  store i32 0, i32* %j, align 4, !dbg !7832
  br label %for.cond235, !dbg !7835

for.cond235:                                      ; preds = %for.inc247, %if.then234
  %143 = load i32, i32* %j, align 4, !dbg !7836
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7838
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !7838
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !7838
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 3, !dbg !7838
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtvec_def**, !dbg !7838
  %145 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7838
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %145, i32 0, i32 0, !dbg !7838
  %146 = load i32, i32* %num_elem, align 8, !dbg !7838
  %cmp239 = icmp slt i32 %143, %146, !dbg !7839
  br i1 %cmp239, label %for.body241, label %for.end248, !dbg !7840

for.body241:                                      ; preds = %for.cond235
  %147 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7841
  %148 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7842
  %u242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !7842
  %fld243 = bitcast %union.u* %u242 to [1 x %union.rtunion_def]*, !dbg !7842
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i64 0, i64 3, !dbg !7842
  %rt_rtvec245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtvec_def**, !dbg !7842
  %149 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec245, align 8, !dbg !7842
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %149, i32 0, i32 1, !dbg !7842
  %150 = load i32, i32* %j, align 4, !dbg !7842
  %idxprom = sext i32 %150 to i64, !dbg !7842
  %arrayidx246 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !7842
  %151 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx246, align 8, !dbg !7842
  %152 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7843
  call void @sched_analyze_2(%struct.deps* %147, %struct.rtx_def* %151, %struct.rtx_def* %152), !dbg !7844
  br label %for.inc247, !dbg !7844

for.inc247:                                       ; preds = %for.body241
  %153 = load i32, i32* %j, align 4, !dbg !7845
  %inc = add nsw i32 %153, 1, !dbg !7845
  store i32 %inc, i32* %j, align 4, !dbg !7845
  br label %for.cond235, !dbg !7846, !llvm.loop !7847

for.end248:                                       ; preds = %for.cond235
  %154 = load i8, i8* %cslr_p, align 1, !dbg !7849
  %conv249 = zext i8 %154 to i32, !dbg !7849
  %tobool250 = icmp ne i32 %conv249, 0, !dbg !7849
  br i1 %tobool250, label %land.lhs.true251, label %if.end256, !dbg !7851

land.lhs.true251:                                 ; preds = %for.end248
  %155 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7852
  %finish_rhs252 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %155, i32 0, i32 6, !dbg !7853
  %156 = load void ()*, void ()** %finish_rhs252, align 8, !dbg !7853
  %tobool253 = icmp ne void ()* %156, null, !dbg !7852
  br i1 %tobool253, label %if.then254, label %if.end256, !dbg !7854

if.then254:                                       ; preds = %land.lhs.true251
  %157 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7855
  %finish_rhs255 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %157, i32 0, i32 6, !dbg !7856
  %158 = load void ()*, void ()** %finish_rhs255, align 8, !dbg !7856
  call void %158(), !dbg !7855
  br label %if.end256, !dbg !7855

if.end256:                                        ; preds = %if.then254, %land.lhs.true251, %for.end248
  br label %if.end347, !dbg !7857

if.end257:                                        ; preds = %if.end231
  br label %sw.epilog, !dbg !7858

sw.bb258:                                         ; preds = %if.end5, %if.end5, %if.end5, %if.end5
  %159 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7859
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7860
  %u259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !7860
  %fld260 = bitcast %union.u* %u259 to [1 x %union.rtunion_def]*, !dbg !7860
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i64 0, i64 0, !dbg !7860
  %rt_rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**, !dbg !7860
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx262, align 8, !dbg !7860
  %162 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7861
  call void @sched_analyze_2(%struct.deps* %159, %struct.rtx_def* %161, %struct.rtx_def* %162), !dbg !7862
  %163 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7863
  %164 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7864
  %165 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7865
  call void @sched_analyze_1(%struct.deps* %163, %struct.rtx_def* %164, %struct.rtx_def* %165), !dbg !7866
  %166 = load i8, i8* %cslr_p, align 1, !dbg !7867
  %conv263 = zext i8 %166 to i32, !dbg !7867
  %tobool264 = icmp ne i32 %conv263, 0, !dbg !7867
  br i1 %tobool264, label %land.lhs.true265, label %if.end270, !dbg !7869

land.lhs.true265:                                 ; preds = %sw.bb258
  %167 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7870
  %finish_rhs266 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %167, i32 0, i32 6, !dbg !7871
  %168 = load void ()*, void ()** %finish_rhs266, align 8, !dbg !7871
  %tobool267 = icmp ne void ()* %168, null, !dbg !7870
  br i1 %tobool267, label %if.then268, label %if.end270, !dbg !7872

if.then268:                                       ; preds = %land.lhs.true265
  %169 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7873
  %finish_rhs269 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %169, i32 0, i32 6, !dbg !7874
  %170 = load void ()*, void ()** %finish_rhs269, align 8, !dbg !7874
  call void %170(), !dbg !7873
  br label %if.end270, !dbg !7873

if.end270:                                        ; preds = %if.then268, %land.lhs.true265, %sw.bb258
  br label %if.end347, !dbg !7875

sw.bb271:                                         ; preds = %if.end5, %if.end5
  %171 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7876
  %172 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7877
  %u272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !7877
  %fld273 = bitcast %union.u* %u272 to [1 x %union.rtunion_def]*, !dbg !7877
  %arrayidx274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i64 0, i64 0, !dbg !7877
  %rt_rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**, !dbg !7877
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx275, align 8, !dbg !7877
  %174 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7878
  call void @sched_analyze_2(%struct.deps* %171, %struct.rtx_def* %173, %struct.rtx_def* %174), !dbg !7879
  %175 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7880
  %176 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7881
  %u276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1, !dbg !7881
  %fld277 = bitcast %union.u* %u276 to [1 x %union.rtunion_def]*, !dbg !7881
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i64 0, i64 1, !dbg !7881
  %rt_rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**, !dbg !7881
  %177 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx279, align 8, !dbg !7881
  %178 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7882
  call void @sched_analyze_2(%struct.deps* %175, %struct.rtx_def* %177, %struct.rtx_def* %178), !dbg !7883
  %179 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7884
  %180 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7885
  %181 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7886
  call void @sched_analyze_1(%struct.deps* %179, %struct.rtx_def* %180, %struct.rtx_def* %181), !dbg !7887
  %182 = load i8, i8* %cslr_p, align 1, !dbg !7888
  %conv280 = zext i8 %182 to i32, !dbg !7888
  %tobool281 = icmp ne i32 %conv280, 0, !dbg !7888
  br i1 %tobool281, label %land.lhs.true282, label %if.end287, !dbg !7890

land.lhs.true282:                                 ; preds = %sw.bb271
  %183 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7891
  %finish_rhs283 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %183, i32 0, i32 6, !dbg !7892
  %184 = load void ()*, void ()** %finish_rhs283, align 8, !dbg !7892
  %tobool284 = icmp ne void ()* %184, null, !dbg !7891
  br i1 %tobool284, label %if.then285, label %if.end287, !dbg !7893

if.then285:                                       ; preds = %land.lhs.true282
  %185 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7894
  %finish_rhs286 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %185, i32 0, i32 6, !dbg !7895
  %186 = load void ()*, void ()** %finish_rhs286, align 8, !dbg !7895
  call void %186(), !dbg !7894
  br label %if.end287, !dbg !7894

if.end287:                                        ; preds = %if.then285, %land.lhs.true282, %sw.bb271
  br label %if.end347, !dbg !7896

sw.default:                                       ; preds = %if.end5
  br label %sw.epilog, !dbg !7897

sw.epilog:                                        ; preds = %sw.default, %if.end257, %if.end221, %sw.bb214
  %187 = load i32, i32* %code, align 4, !dbg !7898
  %idxprom288 = sext i32 %187 to i64, !dbg !7898
  %arrayidx289 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom288, !dbg !7898
  %188 = load i8*, i8** %arrayidx289, align 8, !dbg !7898
  store i8* %188, i8** %fmt, align 8, !dbg !7899
  %189 = load i32, i32* %code, align 4, !dbg !7900
  %idxprom290 = sext i32 %189 to i64, !dbg !7900
  %arrayidx291 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom290, !dbg !7900
  %190 = load i8, i8* %arrayidx291, align 1, !dbg !7900
  %conv292 = zext i8 %190 to i32, !dbg !7900
  %sub = sub nsw i32 %conv292, 1, !dbg !7902
  store i32 %sub, i32* %i, align 4, !dbg !7903
  br label %for.cond293, !dbg !7904

for.cond293:                                      ; preds = %for.inc338, %sw.epilog
  %191 = load i32, i32* %i, align 4, !dbg !7905
  %cmp294 = icmp sge i32 %191, 0, !dbg !7907
  br i1 %cmp294, label %for.body296, label %for.end339, !dbg !7908

for.body296:                                      ; preds = %for.cond293
  %192 = load i8*, i8** %fmt, align 8, !dbg !7909
  %193 = load i32, i32* %i, align 4, !dbg !7912
  %idxprom297 = sext i32 %193 to i64, !dbg !7909
  %arrayidx298 = getelementptr inbounds i8, i8* %192, i64 %idxprom297, !dbg !7909
  %194 = load i8, i8* %arrayidx298, align 1, !dbg !7909
  %conv299 = sext i8 %194 to i32, !dbg !7909
  %cmp300 = icmp eq i32 %conv299, 101, !dbg !7913
  br i1 %cmp300, label %if.then302, label %if.else308, !dbg !7914

if.then302:                                       ; preds = %for.body296
  %195 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7915
  %196 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7916
  %u303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1, !dbg !7916
  %fld304 = bitcast %union.u* %u303 to [1 x %union.rtunion_def]*, !dbg !7916
  %197 = load i32, i32* %i, align 4, !dbg !7916
  %idxprom305 = sext i32 %197 to i64, !dbg !7916
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld304, i64 0, i64 %idxprom305, !dbg !7916
  %rt_rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**, !dbg !7916
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx307, align 8, !dbg !7916
  %199 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7917
  call void @sched_analyze_2(%struct.deps* %195, %struct.rtx_def* %198, %struct.rtx_def* %199), !dbg !7918
  br label %if.end337, !dbg !7918

if.else308:                                       ; preds = %for.body296
  %200 = load i8*, i8** %fmt, align 8, !dbg !7919
  %201 = load i32, i32* %i, align 4, !dbg !7921
  %idxprom309 = sext i32 %201 to i64, !dbg !7919
  %arrayidx310 = getelementptr inbounds i8, i8* %200, i64 %idxprom309, !dbg !7919
  %202 = load i8, i8* %arrayidx310, align 1, !dbg !7919
  %conv311 = sext i8 %202 to i32, !dbg !7919
  %cmp312 = icmp eq i32 %conv311, 69, !dbg !7922
  br i1 %cmp312, label %if.then314, label %if.end336, !dbg !7923

if.then314:                                       ; preds = %if.else308
  store i32 0, i32* %j, align 4, !dbg !7924
  br label %for.cond315, !dbg !7926

for.cond315:                                      ; preds = %for.inc333, %if.then314
  %203 = load i32, i32* %j, align 4, !dbg !7927
  %204 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7929
  %u316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1, !dbg !7929
  %fld317 = bitcast %union.u* %u316 to [1 x %union.rtunion_def]*, !dbg !7929
  %205 = load i32, i32* %i, align 4, !dbg !7929
  %idxprom318 = sext i32 %205 to i64, !dbg !7929
  %arrayidx319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld317, i64 0, i64 %idxprom318, !dbg !7929
  %rt_rtvec320 = bitcast %union.rtunion_def* %arrayidx319 to %struct.rtvec_def**, !dbg !7929
  %206 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec320, align 8, !dbg !7929
  %num_elem321 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %206, i32 0, i32 0, !dbg !7929
  %207 = load i32, i32* %num_elem321, align 8, !dbg !7929
  %cmp322 = icmp slt i32 %203, %207, !dbg !7930
  br i1 %cmp322, label %for.body324, label %for.end335, !dbg !7931

for.body324:                                      ; preds = %for.cond315
  %208 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !7932
  %209 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7933
  %u325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1, !dbg !7933
  %fld326 = bitcast %union.u* %u325 to [1 x %union.rtunion_def]*, !dbg !7933
  %210 = load i32, i32* %i, align 4, !dbg !7933
  %idxprom327 = sext i32 %210 to i64, !dbg !7933
  %arrayidx328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i64 0, i64 %idxprom327, !dbg !7933
  %rt_rtvec329 = bitcast %union.rtunion_def* %arrayidx328 to %struct.rtvec_def**, !dbg !7933
  %211 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec329, align 8, !dbg !7933
  %elem330 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %211, i32 0, i32 1, !dbg !7933
  %212 = load i32, i32* %j, align 4, !dbg !7933
  %idxprom331 = sext i32 %212 to i64, !dbg !7933
  %arrayidx332 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem330, i64 0, i64 %idxprom331, !dbg !7933
  %213 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx332, align 8, !dbg !7933
  %214 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7934
  call void @sched_analyze_2(%struct.deps* %208, %struct.rtx_def* %213, %struct.rtx_def* %214), !dbg !7935
  br label %for.inc333, !dbg !7935

for.inc333:                                       ; preds = %for.body324
  %215 = load i32, i32* %j, align 4, !dbg !7936
  %inc334 = add nsw i32 %215, 1, !dbg !7936
  store i32 %inc334, i32* %j, align 4, !dbg !7936
  br label %for.cond315, !dbg !7937, !llvm.loop !7938

for.end335:                                       ; preds = %for.cond315
  br label %if.end336, !dbg !7939

if.end336:                                        ; preds = %for.end335, %if.else308
  br label %if.end337

if.end337:                                        ; preds = %if.end336, %if.then302
  br label %for.inc338, !dbg !7940

for.inc338:                                       ; preds = %if.end337
  %216 = load i32, i32* %i, align 4, !dbg !7941
  %dec = add nsw i32 %216, -1, !dbg !7941
  store i32 %dec, i32* %i, align 4, !dbg !7941
  br label %for.cond293, !dbg !7942, !llvm.loop !7943

for.end339:                                       ; preds = %for.cond293
  %217 = load i8, i8* %cslr_p, align 1, !dbg !7945
  %conv340 = zext i8 %217 to i32, !dbg !7945
  %tobool341 = icmp ne i32 %conv340, 0, !dbg !7945
  br i1 %tobool341, label %land.lhs.true342, label %if.end347, !dbg !7947

land.lhs.true342:                                 ; preds = %for.end339
  %218 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7948
  %finish_rhs343 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %218, i32 0, i32 6, !dbg !7949
  %219 = load void ()*, void ()** %finish_rhs343, align 8, !dbg !7949
  %tobool344 = icmp ne void ()* %219, null, !dbg !7948
  br i1 %tobool344, label %if.then345, label %if.end347, !dbg !7950

if.then345:                                       ; preds = %land.lhs.true342
  %220 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7951
  %finish_rhs346 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %220, i32 0, i32 6, !dbg !7952
  %221 = load void ()*, void ()** %finish_rhs346, align 8, !dbg !7952
  call void %221(), !dbg !7951
  br label %if.end347, !dbg !7951

if.end347:                                        ; preds = %if.then, %if.end12, %if.end34, %if.end213, %if.end256, %if.end270, %if.end287, %if.then345, %land.lhs.true342, %for.end339
  ret void, !dbg !7953
}

; Function Attrs: noinline nounwind uwtable
define internal void @sched_analyze_1(%struct.deps* %deps, %struct.rtx_def* %x, %struct.rtx_def* %insn) #0 !dbg !7954 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %cslr_p = alloca i8, align 1
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %mode = alloca i32, align 4
  %nregs = alloca i32, align 4
  %t = alloca %struct.rtx_def*, align 8
  %address_mode = alloca i32, align 4
  %pending = alloca %struct.rtx_def*, align 8
  %pending_mem = alloca %struct.rtx_def*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !7955, metadata !DIExpression()), !dbg !7956
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7957, metadata !DIExpression()), !dbg !7958
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7959, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest, metadata !7961, metadata !DIExpression()), !dbg !7962
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7963
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !7963
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7963
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7963
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7963
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7963
  store %struct.rtx_def* %1, %struct.rtx_def** %dest, align 8, !dbg !7962
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7964, metadata !DIExpression()), !dbg !7965
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7966
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !7966
  %bf.load = load i32, i32* %3, align 8, !dbg !7966
  %bf.clear = and i32 %bf.load, 65535, !dbg !7966
  store i32 %bf.clear, i32* %code, align 4, !dbg !7965
  call void @llvm.dbg.declare(metadata i8* %cslr_p, metadata !7967, metadata !DIExpression()), !dbg !7968
  %4 = load i8, i8* @can_start_lhs_rhs_p, align 1, !dbg !7969
  store i8 %4, i8* %cslr_p, align 1, !dbg !7968
  store i8 0, i8* @can_start_lhs_rhs_p, align 1, !dbg !7970
  %5 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !7971
  %tobool = icmp ne %struct.rtx_def* %5, null, !dbg !7971
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7971

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7971
  br label %cond.end, !dbg !7971

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7971

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7971
  %6 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !7972
  %cmp = icmp eq %struct.rtx_def* %6, null, !dbg !7974
  br i1 %cmp, label %if.then, label %if.end, !dbg !7975

if.then:                                          ; preds = %cond.end
  br label %if.end287, !dbg !7976

if.end:                                           ; preds = %cond.end
  %7 = load i8, i8* %cslr_p, align 1, !dbg !7977
  %conv = zext i8 %7 to i32, !dbg !7977
  %tobool1 = icmp ne i32 %conv, 0, !dbg !7977
  br i1 %tobool1, label %land.lhs.true, label %if.end5, !dbg !7979

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7980
  %start_lhs = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %8, i32 0, i32 3, !dbg !7981
  %9 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_lhs, align 8, !dbg !7981
  %tobool2 = icmp ne void (%struct.rtx_def*)* %9, null, !dbg !7980
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !7982

if.then3:                                         ; preds = %land.lhs.true
  %10 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !7983
  %start_lhs4 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %10, i32 0, i32 3, !dbg !7984
  %11 = load void (%struct.rtx_def*)*, void (%struct.rtx_def*)** %start_lhs4, align 8, !dbg !7984
  %12 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !7985
  call void %11(%struct.rtx_def* %12), !dbg !7983
  br label %if.end5, !dbg !7983

if.end5:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !7986
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !7986
  %bf.load6 = load i32, i32* %14, align 8, !dbg !7986
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !7986
  %cmp8 = icmp eq i32 %bf.clear7, 15, !dbg !7988
  br i1 %cmp8, label %if.then10, label %if.end55, !dbg !7989

if.then10:                                        ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7990, metadata !DIExpression()), !dbg !7992
  %15 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !7993
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !7993
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !7993
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !7993
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtvec_def**, !dbg !7993
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7993
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i32 0, i32 0, !dbg !7993
  %17 = load i32, i32* %num_elem, align 8, !dbg !7993
  %sub = sub nsw i32 %17, 1, !dbg !7995
  store i32 %sub, i32* %i, align 4, !dbg !7996
  br label %for.cond, !dbg !7997

for.cond:                                         ; preds = %for.inc, %if.then10
  %18 = load i32, i32* %i, align 4, !dbg !7998
  %cmp14 = icmp sge i32 %18, 0, !dbg !8000
  br i1 %cmp14, label %for.body, label %for.end, !dbg !8001

for.body:                                         ; preds = %for.cond
  %19 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8002
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !8002
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !8002
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !8002
  %rt_rtvec19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtvec_def**, !dbg !8002
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec19, align 8, !dbg !8002
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i32 0, i32 1, !dbg !8002
  %21 = load i32, i32* %i, align 4, !dbg !8002
  %idxprom = sext i32 %21 to i64, !dbg !8002
  %arrayidx20 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !8002
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx20, align 8, !dbg !8002
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !8002
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !8002
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !8002
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !8002
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !8002
  %cmp25 = icmp ne %struct.rtx_def* %23, null, !dbg !8004
  br i1 %cmp25, label %if.then27, label %if.end39, !dbg !8005

if.then27:                                        ; preds = %for.body
  %24 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8006
  %25 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8007
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !8007
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !8007
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !8007
  %rt_rtvec31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !8007
  %26 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec31, align 8, !dbg !8007
  %elem32 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i32 0, i32 1, !dbg !8007
  %27 = load i32, i32* %i, align 4, !dbg !8007
  %idxprom33 = sext i32 %27 to i64, !dbg !8007
  %arrayidx34 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem32, i64 0, i64 %idxprom33, !dbg !8007
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx34, align 8, !dbg !8007
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !8007
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !8007
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 0, !dbg !8007
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !8007
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !8007
  %call = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %29), !dbg !8007
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8008
  call void @sched_analyze_1(%struct.deps* %24, %struct.rtx_def* %call, %struct.rtx_def* %30), !dbg !8009
  br label %if.end39, !dbg !8009

if.end39:                                         ; preds = %if.then27, %for.body
  br label %for.inc, !dbg !8010

for.inc:                                          ; preds = %if.end39
  %31 = load i32, i32* %i, align 4, !dbg !8011
  %dec = add nsw i32 %31, -1, !dbg !8011
  store i32 %dec, i32* %i, align 4, !dbg !8011
  br label %for.cond, !dbg !8012, !llvm.loop !8013

for.end:                                          ; preds = %for.cond
  %32 = load i8, i8* %cslr_p, align 1, !dbg !8015
  %conv40 = zext i8 %32 to i32, !dbg !8015
  %tobool41 = icmp ne i32 %conv40, 0, !dbg !8015
  br i1 %tobool41, label %land.lhs.true42, label %if.end46, !dbg !8017

land.lhs.true42:                                  ; preds = %for.end
  %33 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8018
  %finish_lhs = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %33, i32 0, i32 4, !dbg !8019
  %34 = load void ()*, void ()** %finish_lhs, align 8, !dbg !8019
  %tobool43 = icmp ne void ()* %34, null, !dbg !8018
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !8020

if.then44:                                        ; preds = %land.lhs.true42
  %35 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8021
  %finish_lhs45 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %35, i32 0, i32 4, !dbg !8022
  %36 = load void ()*, void ()** %finish_lhs45, align 8, !dbg !8022
  call void %36(), !dbg !8021
  br label %if.end46, !dbg !8021

if.end46:                                         ; preds = %if.then44, %land.lhs.true42, %for.end
  %37 = load i32, i32* %code, align 4, !dbg !8023
  %cmp47 = icmp eq i32 %37, 23, !dbg !8025
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !8026

if.then49:                                        ; preds = %if.end46
  %38 = load i8, i8* %cslr_p, align 1, !dbg !8027
  store i8 %38, i8* @can_start_lhs_rhs_p, align 1, !dbg !8029
  %39 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8030
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8031
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !8031
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !8031
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 1, !dbg !8031
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !8031
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !8031
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8032
  call void @sched_analyze_2(%struct.deps* %39, %struct.rtx_def* %41, %struct.rtx_def* %42), !dbg !8033
  store i8 0, i8* @can_start_lhs_rhs_p, align 1, !dbg !8034
  br label %if.end54, !dbg !8035

if.end54:                                         ; preds = %if.then49, %if.end46
  br label %if.end287, !dbg !8036

if.end55:                                         ; preds = %if.end5
  br label %while.cond, !dbg !8037

while.cond:                                       ; preds = %if.end100, %if.end55
  %43 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8038
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !8038
  %bf.load56 = load i32, i32* %44, align 8, !dbg !8038
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !8038
  %cmp58 = icmp eq i32 %bf.clear57, 40, !dbg !8039
  br i1 %cmp58, label %lor.end, label %lor.lhs.false, !dbg !8040

lor.lhs.false:                                    ; preds = %while.cond
  %45 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8041
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !8041
  %bf.load60 = load i32, i32* %46, align 8, !dbg !8041
  %bf.clear61 = and i32 %bf.load60, 65535, !dbg !8041
  %cmp62 = icmp eq i32 %bf.clear61, 39, !dbg !8042
  br i1 %cmp62, label %lor.end, label %lor.rhs, !dbg !8043

lor.rhs:                                          ; preds = %lor.lhs.false
  %47 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8044
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !8044
  %bf.load64 = load i32, i32* %48, align 8, !dbg !8044
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !8044
  %cmp66 = icmp eq i32 %bf.clear65, 120, !dbg !8045
  br label %lor.end, !dbg !8043

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %while.cond
  %49 = phi i1 [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp66, %lor.rhs ]
  br i1 %49, label %while.body, label %while.end, !dbg !8037

while.body:                                       ; preds = %lor.end
  %50 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8046
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !8046
  %bf.load68 = load i32, i32* %51, align 8, !dbg !8046
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !8046
  %cmp70 = icmp eq i32 %bf.clear69, 40, !dbg !8049
  br i1 %cmp70, label %if.then81, label %lor.lhs.false72, !dbg !8050

lor.lhs.false72:                                  ; preds = %while.body
  %52 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8051
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !8051
  %bf.load73 = load i32, i32* %53, align 8, !dbg !8051
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !8051
  %cmp75 = icmp eq i32 %bf.clear74, 120, !dbg !8052
  br i1 %cmp75, label %if.then81, label %lor.lhs.false77, !dbg !8053

lor.lhs.false77:                                  ; preds = %lor.lhs.false72
  %54 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8054
  %call78 = call zeroext i8 @df_read_modify_subreg_p(%struct.rtx_def* %54), !dbg !8055
  %conv79 = zext i8 %call78 to i32, !dbg !8055
  %tobool80 = icmp ne i32 %conv79, 0, !dbg !8055
  br i1 %tobool80, label %if.then81, label %if.end86, !dbg !8056

if.then81:                                        ; preds = %lor.lhs.false77, %lor.lhs.false72, %while.body
  %55 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8057
  %56 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8059
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !8059
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !8059
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !8059
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !8059
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !8059
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8060
  call void @sched_analyze_2(%struct.deps* %55, %struct.rtx_def* %57, %struct.rtx_def* %58), !dbg !8061
  br label %if.end86, !dbg !8062

if.end86:                                         ; preds = %if.then81, %lor.lhs.false77
  %59 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8063
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !8063
  %bf.load87 = load i32, i32* %60, align 8, !dbg !8063
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !8063
  %cmp89 = icmp eq i32 %bf.clear88, 120, !dbg !8065
  br i1 %cmp89, label %if.then91, label %if.end100, !dbg !8066

if.then91:                                        ; preds = %if.end86
  %61 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8067
  %62 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8069
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !8069
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !8069
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 1, !dbg !8069
  %rt_rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**, !dbg !8069
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !8069
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8070
  call void @sched_analyze_2(%struct.deps* %61, %struct.rtx_def* %63, %struct.rtx_def* %64), !dbg !8071
  %65 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8072
  %66 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8073
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !8073
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !8073
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 2, !dbg !8073
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !8073
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !8073
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8074
  call void @sched_analyze_2(%struct.deps* %65, %struct.rtx_def* %67, %struct.rtx_def* %68), !dbg !8075
  br label %if.end100, !dbg !8076

if.end100:                                        ; preds = %if.then91, %if.end86
  %69 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8077
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !8077
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !8077
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 0, !dbg !8077
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !8077
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !8077
  store %struct.rtx_def* %70, %struct.rtx_def** %dest, align 8, !dbg !8078
  br label %while.cond, !dbg !8037, !llvm.loop !8079

while.end:                                        ; preds = %lor.end
  %71 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8081
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !8081
  %bf.load105 = load i32, i32* %72, align 8, !dbg !8081
  %bf.clear106 = and i32 %bf.load105, 65535, !dbg !8081
  %cmp107 = icmp eq i32 %bf.clear106, 37, !dbg !8081
  br i1 %cmp107, label %if.then109, label %if.else, !dbg !8083

if.then109:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8084, metadata !DIExpression()), !dbg !8086
  %73 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8087
  %call110 = call i32 @rhs_regno(%struct.rtx_def* %73), !dbg !8087
  store i32 %call110, i32* %regno, align 4, !dbg !8086
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !8088, metadata !DIExpression()), !dbg !8089
  %74 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8090
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !8090
  %bf.load111 = load i32, i32* %75, align 8, !dbg !8090
  %bf.lshr = lshr i32 %bf.load111, 16, !dbg !8090
  %bf.clear112 = and i32 %bf.lshr, 255, !dbg !8090
  store i32 %bf.clear112, i32* %mode, align 4, !dbg !8089
  %76 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8091
  %77 = load i32, i32* %regno, align 4, !dbg !8092
  %78 = load i32, i32* %mode, align 4, !dbg !8093
  %79 = load i32, i32* %code, align 4, !dbg !8094
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8095
  call void @sched_analyze_reg(%struct.deps* %76, i32 %77, i32 %78, i32 %79, %struct.rtx_def* %80), !dbg !8096
  %81 = load i32, i32* %regno, align 4, !dbg !8097
  %cmp113 = icmp sge i32 %81, 8, !dbg !8099
  br i1 %cmp113, label %land.lhs.true115, label %if.end132, !dbg !8100

land.lhs.true115:                                 ; preds = %if.then109
  %82 = load i32, i32* %regno, align 4, !dbg !8101
  %cmp116 = icmp sle i32 %82, 15, !dbg !8102
  br i1 %cmp116, label %if.then118, label %if.end132, !dbg !8103

if.then118:                                       ; preds = %land.lhs.true115
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !8104, metadata !DIExpression()), !dbg !8106
  %83 = load i32, i32* %regno, align 4, !dbg !8107
  %cmp119 = icmp ne i32 %83, 8, !dbg !8109
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !8110

if.then121:                                       ; preds = %if.then118
  %84 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8111
  %85 = load i32, i32* %mode, align 4, !dbg !8112
  %86 = load i32, i32* %code, align 4, !dbg !8113
  %87 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8114
  call void @sched_analyze_reg(%struct.deps* %84, i32 8, i32 %85, i32 %86, %struct.rtx_def* %87), !dbg !8115
  br label %if.end122, !dbg !8115

if.end122:                                        ; preds = %if.then121, %if.then118
  %88 = load i32, i32* %mode, align 4, !dbg !8116
  %idxprom123 = zext i32 %88 to i64, !dbg !8117
  %arrayidx124 = getelementptr inbounds [87 x i8], [87 x i8]* getelementptr inbounds ([53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 8), i64 0, i64 %idxprom123, !dbg !8117
  %89 = load i8, i8* %arrayidx124, align 1, !dbg !8117
  %conv125 = zext i8 %89 to i32, !dbg !8117
  store i32 %conv125, i32* %nregs, align 4, !dbg !8118
  br label %while.cond126, !dbg !8119

while.cond126:                                    ; preds = %while.body130, %if.end122
  %90 = load i32, i32* %nregs, align 4, !dbg !8120
  %dec127 = add nsw i32 %90, -1, !dbg !8120
  store i32 %dec127, i32* %nregs, align 4, !dbg !8120
  %cmp128 = icmp sge i32 %dec127, 0, !dbg !8121
  br i1 %cmp128, label %while.body130, label %while.end131, !dbg !8119

while.body130:                                    ; preds = %while.cond126
  %91 = load i32, i32* %nregs, align 4, !dbg !8122
  %add = add nsw i32 8, %91, !dbg !8122
  %sh_prom = zext i32 %add to i64, !dbg !8122
  %shl = shl i64 1, %sh_prom, !dbg !8122
  %92 = load i64, i64* @implicit_reg_pending_uses, align 8, !dbg !8122
  %or = or i64 %92, %shl, !dbg !8122
  store i64 %or, i64* @implicit_reg_pending_uses, align 8, !dbg !8122
  br label %while.cond126, !dbg !8119, !llvm.loop !8123

while.end131:                                     ; preds = %while.cond126
  br label %if.end132, !dbg !8124

if.end132:                                        ; preds = %while.end131, %land.lhs.true115, %if.then109
  br label %if.end269, !dbg !8125

if.else:                                          ; preds = %while.end
  %93 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8126
  %94 = bitcast %struct.rtx_def* %93 to i32*, !dbg !8126
  %bf.load133 = load i32, i32* %94, align 8, !dbg !8126
  %bf.clear134 = and i32 %bf.load133, 65535, !dbg !8126
  %cmp135 = icmp eq i32 %bf.clear134, 43, !dbg !8126
  br i1 %cmp135, label %if.then137, label %if.end268, !dbg !8128

if.then137:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %t, metadata !8129, metadata !DIExpression()), !dbg !8131
  %95 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8132
  store %struct.rtx_def* %95, %struct.rtx_def** %t, align 8, !dbg !8131
  %96 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8133
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %96, i32 0, i32 12, !dbg !8135
  %bf.load138 = load i8, i8* %use_cselib, align 8, !dbg !8135
  %bf.clear139 = and i8 %bf.load138, 1, !dbg !8135
  %bf.cast = zext i8 %bf.clear139 to i32, !dbg !8135
  %tobool140 = icmp ne i32 %bf.cast, 0, !dbg !8133
  br i1 %tobool140, label %if.then141, label %if.end173, !dbg !8136

if.then141:                                       ; preds = %if.then137
  call void @llvm.dbg.declare(metadata i32* %address_mode, metadata !8137, metadata !DIExpression()), !dbg !8139
  %97 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 57, i32 1), align 8, !dbg !8140
  %98 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8141
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !8141
  %fld143 = bitcast %union.u* %u142 to [1 x %union.rtunion_def]*, !dbg !8141
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i64 0, i64 1, !dbg !8141
  %rt_mem = bitcast %union.rtunion_def* %arrayidx144 to %struct.mem_attrs**, !dbg !8141
  %99 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8141
  %cmp145 = icmp eq %struct.mem_attrs* %99, null, !dbg !8141
  br i1 %cmp145, label %cond.true147, label %cond.false148, !dbg !8141

cond.true147:                                     ; preds = %if.then141
  br label %cond.end154, !dbg !8141

cond.false148:                                    ; preds = %if.then141
  %100 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8141
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1, !dbg !8141
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !8141
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 1, !dbg !8141
  %rt_mem152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.mem_attrs**, !dbg !8141
  %101 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem152, align 8, !dbg !8141
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %101, i32 0, i32 5, !dbg !8141
  %102 = load i8, i8* %addrspace, align 8, !dbg !8141
  %conv153 = zext i8 %102 to i32, !dbg !8141
  br label %cond.end154, !dbg !8141

cond.end154:                                      ; preds = %cond.false148, %cond.true147
  %cond155 = phi i32 [ 0, %cond.true147 ], [ %conv153, %cond.false148 ], !dbg !8141
  %conv156 = trunc i32 %cond155 to i8, !dbg !8141
  %call157 = call i32 %97(i8 zeroext %conv156), !dbg !8142
  store i32 %call157, i32* %address_mode, align 4, !dbg !8139
  %103 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8143
  %call158 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %103), !dbg !8143
  store %struct.rtx_def* %call158, %struct.rtx_def** %t, align 8, !dbg !8144
  %104 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8145
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !8145
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !8145
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 0, !dbg !8145
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !8145
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !8145
  %106 = load i32, i32* %address_mode, align 4, !dbg !8146
  %107 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8147
  %call163 = call %struct.cselib_val_struct* @cselib_lookup_from_insn(%struct.rtx_def* %105, i32 %106, i32 1, %struct.rtx_def* %107), !dbg !8148
  %108 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8149
  %u164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1, !dbg !8149
  %fld165 = bitcast %union.u* %u164 to [1 x %union.rtunion_def]*, !dbg !8149
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i64 0, i64 0, !dbg !8149
  %rt_rtx167 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**, !dbg !8149
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx167, align 8, !dbg !8149
  %call168 = call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %109), !dbg !8150
  %110 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8151
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1, !dbg !8151
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !8151
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 0, !dbg !8151
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !8151
  store %struct.rtx_def* %call168, %struct.rtx_def** %rt_rtx172, align 8, !dbg !8152
  br label %if.end173, !dbg !8153

if.end173:                                        ; preds = %cond.end154, %if.then137
  %111 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8154
  %call174 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %111), !dbg !8155
  store %struct.rtx_def* %call174, %struct.rtx_def** %t, align 8, !dbg !8156
  %112 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8157
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %112, i32 0, i32 18, !dbg !8159
  %bf.load175 = load i8, i8* %readonly, align 4, !dbg !8159
  %bf.clear176 = and i8 %bf.load175, 1, !dbg !8159
  %bf.cast177 = zext i8 %bf.clear176 to i32, !dbg !8159
  %tobool178 = icmp ne i32 %bf.cast177, 0, !dbg !8157
  br i1 %tobool178, label %if.else185, label %land.lhs.true179, !dbg !8160

land.lhs.true179:                                 ; preds = %if.end173
  %113 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8161
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %113, i32 0, i32 4, !dbg !8162
  %114 = load i32, i32* %pending_read_list_length, align 8, !dbg !8162
  %115 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8163
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %115, i32 0, i32 5, !dbg !8164
  %116 = load i32, i32* %pending_write_list_length, align 4, !dbg !8164
  %add180 = add nsw i32 %114, %116, !dbg !8165
  %117 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !8166
  %arrayidx181 = getelementptr inbounds %struct.param_info, %struct.param_info* %117, i64 14, !dbg !8166
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx181, i32 0, i32 1, !dbg !8166
  %118 = load i32, i32* %value, align 8, !dbg !8166
  %cmp182 = icmp sgt i32 %add180, %118, !dbg !8167
  br i1 %cmp182, label %if.then184, label %if.else185, !dbg !8168

if.then184:                                       ; preds = %land.lhs.true179
  %119 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8169
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8171
  call void @flush_pending_lists(%struct.deps* %119, %struct.rtx_def* %120, i32 0, i32 1), !dbg !8172
  br label %if.end263, !dbg !8173

if.else185:                                       ; preds = %land.lhs.true179, %if.end173
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pending, metadata !8174, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pending_mem, metadata !8177, metadata !DIExpression()), !dbg !8178
  %121 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8179
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %121, i32 0, i32 0, !dbg !8180
  %122 = load %struct.rtx_def*, %struct.rtx_def** %pending_read_insns, align 8, !dbg !8180
  store %struct.rtx_def* %122, %struct.rtx_def** %pending, align 8, !dbg !8181
  %123 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8182
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %123, i32 0, i32 1, !dbg !8183
  %124 = load %struct.rtx_def*, %struct.rtx_def** %pending_read_mems, align 8, !dbg !8183
  store %struct.rtx_def* %124, %struct.rtx_def** %pending_mem, align 8, !dbg !8184
  br label %while.cond186, !dbg !8185

while.cond186:                                    ; preds = %if.end211, %if.else185
  %125 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !8186
  %tobool187 = icmp ne %struct.rtx_def* %125, null, !dbg !8185
  br i1 %tobool187, label %while.body188, label %while.end220, !dbg !8185

while.body188:                                    ; preds = %while.cond186
  %126 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !8187
  %u189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !8187
  %fld190 = bitcast %union.u* %u189 to [1 x %union.rtunion_def]*, !dbg !8187
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i64 0, i64 0, !dbg !8187
  %rt_rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**, !dbg !8187
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx192, align 8, !dbg !8187
  %128 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8190
  %call193 = call i32 @anti_dependence(%struct.rtx_def* %127, %struct.rtx_def* %128), !dbg !8191
  %tobool194 = icmp ne i32 %call193, 0, !dbg !8191
  br i1 %tobool194, label %land.lhs.true195, label %if.end211, !dbg !8192

land.lhs.true195:                                 ; preds = %while.body188
  %129 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8193
  %130 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !8194
  %u196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !8194
  %fld197 = bitcast %union.u* %u196 to [1 x %union.rtunion_def]*, !dbg !8194
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i64 0, i64 0, !dbg !8194
  %rt_rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**, !dbg !8194
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx199, align 8, !dbg !8194
  %call200 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %129, %struct.rtx_def* %131), !dbg !8195
  %tobool201 = icmp ne i8 %call200, 0, !dbg !8195
  br i1 %tobool201, label %if.end211, label %if.then202, !dbg !8196

if.then202:                                       ; preds = %land.lhs.true195
  %132 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8197
  %133 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !8198
  %u203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !8198
  %fld204 = bitcast %union.u* %u203 to [1 x %union.rtunion_def]*, !dbg !8198
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i64 0, i64 0, !dbg !8198
  %rt_rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**, !dbg !8198
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx206, align 8, !dbg !8198
  %135 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !8199
  %u207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1, !dbg !8199
  %fld208 = bitcast %union.u* %u207 to [1 x %union.rtunion_def]*, !dbg !8199
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i64 0, i64 0, !dbg !8199
  %rt_rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**, !dbg !8199
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx210, align 8, !dbg !8199
  call void @note_mem_dep(%struct.rtx_def* %132, %struct.rtx_def* %134, %struct.rtx_def* %136, i32 67108864), !dbg !8200
  br label %if.end211, !dbg !8200

if.end211:                                        ; preds = %if.then202, %land.lhs.true195, %while.body188
  %137 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !8201
  %u212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1, !dbg !8201
  %fld213 = bitcast %union.u* %u212 to [1 x %union.rtunion_def]*, !dbg !8201
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i64 0, i64 1, !dbg !8201
  %rt_rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**, !dbg !8201
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx215, align 8, !dbg !8201
  store %struct.rtx_def* %138, %struct.rtx_def** %pending, align 8, !dbg !8202
  %139 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !8203
  %u216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !8203
  %fld217 = bitcast %union.u* %u216 to [1 x %union.rtunion_def]*, !dbg !8203
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i64 0, i64 1, !dbg !8203
  %rt_rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**, !dbg !8203
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx219, align 8, !dbg !8203
  store %struct.rtx_def* %140, %struct.rtx_def** %pending_mem, align 8, !dbg !8204
  br label %while.cond186, !dbg !8185, !llvm.loop !8205

while.end220:                                     ; preds = %while.cond186
  %141 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8207
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %141, i32 0, i32 2, !dbg !8208
  %142 = load %struct.rtx_def*, %struct.rtx_def** %pending_write_insns, align 8, !dbg !8208
  store %struct.rtx_def* %142, %struct.rtx_def** %pending, align 8, !dbg !8209
  %143 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8210
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %143, i32 0, i32 3, !dbg !8211
  %144 = load %struct.rtx_def*, %struct.rtx_def** %pending_write_mems, align 8, !dbg !8211
  store %struct.rtx_def* %144, %struct.rtx_def** %pending_mem, align 8, !dbg !8212
  br label %while.cond221, !dbg !8213

while.cond221:                                    ; preds = %if.end246, %while.end220
  %145 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !8214
  %tobool222 = icmp ne %struct.rtx_def* %145, null, !dbg !8213
  br i1 %tobool222, label %while.body223, label %while.end255, !dbg !8213

while.body223:                                    ; preds = %while.cond221
  %146 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !8215
  %u224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !8215
  %fld225 = bitcast %union.u* %u224 to [1 x %union.rtunion_def]*, !dbg !8215
  %arrayidx226 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld225, i64 0, i64 0, !dbg !8215
  %rt_rtx227 = bitcast %union.rtunion_def* %arrayidx226 to %struct.rtx_def**, !dbg !8215
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx227, align 8, !dbg !8215
  %148 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8218
  %call228 = call i32 @output_dependence(%struct.rtx_def* %147, %struct.rtx_def* %148), !dbg !8219
  %tobool229 = icmp ne i32 %call228, 0, !dbg !8219
  br i1 %tobool229, label %land.lhs.true230, label %if.end246, !dbg !8220

land.lhs.true230:                                 ; preds = %while.body223
  %149 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8221
  %150 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !8222
  %u231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1, !dbg !8222
  %fld232 = bitcast %union.u* %u231 to [1 x %union.rtunion_def]*, !dbg !8222
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i64 0, i64 0, !dbg !8222
  %rt_rtx234 = bitcast %union.rtunion_def* %arrayidx233 to %struct.rtx_def**, !dbg !8222
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx234, align 8, !dbg !8222
  %call235 = call zeroext i8 @sched_insns_conditions_mutex_p(%struct.rtx_def* %149, %struct.rtx_def* %151), !dbg !8223
  %tobool236 = icmp ne i8 %call235, 0, !dbg !8223
  br i1 %tobool236, label %if.end246, label %if.then237, !dbg !8224

if.then237:                                       ; preds = %land.lhs.true230
  %152 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8225
  %153 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !8226
  %u238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !8226
  %fld239 = bitcast %union.u* %u238 to [1 x %union.rtunion_def]*, !dbg !8226
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i64 0, i64 0, !dbg !8226
  %rt_rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**, !dbg !8226
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx241, align 8, !dbg !8226
  %155 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !8227
  %u242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1, !dbg !8227
  %fld243 = bitcast %union.u* %u242 to [1 x %union.rtunion_def]*, !dbg !8227
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i64 0, i64 0, !dbg !8227
  %rt_rtx245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**, !dbg !8227
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx245, align 8, !dbg !8227
  call void @note_mem_dep(%struct.rtx_def* %152, %struct.rtx_def* %154, %struct.rtx_def* %156, i32 33554432), !dbg !8228
  br label %if.end246, !dbg !8228

if.end246:                                        ; preds = %if.then237, %land.lhs.true230, %while.body223
  %157 = load %struct.rtx_def*, %struct.rtx_def** %pending, align 8, !dbg !8229
  %u247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1, !dbg !8229
  %fld248 = bitcast %union.u* %u247 to [1 x %union.rtunion_def]*, !dbg !8229
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i64 0, i64 1, !dbg !8229
  %rt_rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**, !dbg !8229
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx250, align 8, !dbg !8229
  store %struct.rtx_def* %158, %struct.rtx_def** %pending, align 8, !dbg !8230
  %159 = load %struct.rtx_def*, %struct.rtx_def** %pending_mem, align 8, !dbg !8231
  %u251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1, !dbg !8231
  %fld252 = bitcast %union.u* %u251 to [1 x %union.rtunion_def]*, !dbg !8231
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i64 0, i64 1, !dbg !8231
  %rt_rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**, !dbg !8231
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx254, align 8, !dbg !8231
  store %struct.rtx_def* %160, %struct.rtx_def** %pending_mem, align 8, !dbg !8232
  br label %while.cond221, !dbg !8213, !llvm.loop !8233

while.end255:                                     ; preds = %while.cond221
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8235
  %162 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8236
  %last_pending_memory_flush = getelementptr inbounds %struct.deps, %struct.deps* %162, i32 0, i32 7, !dbg !8237
  %163 = load %struct.rtx_def*, %struct.rtx_def** %last_pending_memory_flush, align 8, !dbg !8237
  call void @add_dependence_list(%struct.rtx_def* %161, %struct.rtx_def* %163, i32 1, i32 12), !dbg !8238
  %164 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8239
  %readonly256 = getelementptr inbounds %struct.deps, %struct.deps* %164, i32 0, i32 18, !dbg !8241
  %bf.load257 = load i8, i8* %readonly256, align 4, !dbg !8241
  %bf.clear258 = and i8 %bf.load257, 1, !dbg !8241
  %bf.cast259 = zext i8 %bf.clear258 to i32, !dbg !8241
  %tobool260 = icmp ne i32 %bf.cast259, 0, !dbg !8239
  br i1 %tobool260, label %if.end262, label %if.then261, !dbg !8242

if.then261:                                       ; preds = %while.end255
  %165 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8243
  %166 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8244
  %167 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8245
  call void @add_insn_mem_dependence(%struct.deps* %165, i8 zeroext 0, %struct.rtx_def* %166, %struct.rtx_def* %167), !dbg !8246
  br label %if.end262, !dbg !8246

if.end262:                                        ; preds = %if.then261, %while.end255
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.then184
  %168 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8247
  %169 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8248
  %u264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !8248
  %fld265 = bitcast %union.u* %u264 to [1 x %union.rtunion_def]*, !dbg !8248
  %arrayidx266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld265, i64 0, i64 0, !dbg !8248
  %rt_rtx267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.rtx_def**, !dbg !8248
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx267, align 8, !dbg !8248
  %171 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8249
  call void @sched_analyze_2(%struct.deps* %168, %struct.rtx_def* %170, %struct.rtx_def* %171), !dbg !8250
  br label %if.end268, !dbg !8251

if.end268:                                        ; preds = %if.end263, %if.else
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.end132
  %172 = load i8, i8* %cslr_p, align 1, !dbg !8252
  %conv270 = zext i8 %172 to i32, !dbg !8252
  %tobool271 = icmp ne i32 %conv270, 0, !dbg !8252
  br i1 %tobool271, label %land.lhs.true272, label %if.end277, !dbg !8254

land.lhs.true272:                                 ; preds = %if.end269
  %173 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8255
  %finish_lhs273 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %173, i32 0, i32 4, !dbg !8256
  %174 = load void ()*, void ()** %finish_lhs273, align 8, !dbg !8256
  %tobool274 = icmp ne void ()* %174, null, !dbg !8255
  br i1 %tobool274, label %if.then275, label %if.end277, !dbg !8257

if.then275:                                       ; preds = %land.lhs.true272
  %175 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8258
  %finish_lhs276 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %175, i32 0, i32 4, !dbg !8259
  %176 = load void ()*, void ()** %finish_lhs276, align 8, !dbg !8259
  call void %176(), !dbg !8258
  br label %if.end277, !dbg !8258

if.end277:                                        ; preds = %if.then275, %land.lhs.true272, %if.end269
  %177 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8260
  %178 = bitcast %struct.rtx_def* %177 to i32*, !dbg !8260
  %bf.load278 = load i32, i32* %178, align 8, !dbg !8260
  %bf.clear279 = and i32 %bf.load278, 65535, !dbg !8260
  %cmp280 = icmp eq i32 %bf.clear279, 23, !dbg !8262
  br i1 %cmp280, label %if.then282, label %if.end287, !dbg !8263

if.then282:                                       ; preds = %if.end277
  %179 = load i8, i8* %cslr_p, align 1, !dbg !8264
  store i8 %179, i8* @can_start_lhs_rhs_p, align 1, !dbg !8266
  %180 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8267
  %181 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8268
  %u283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1, !dbg !8268
  %fld284 = bitcast %union.u* %u283 to [1 x %union.rtunion_def]*, !dbg !8268
  %arrayidx285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld284, i64 0, i64 1, !dbg !8268
  %rt_rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**, !dbg !8268
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx286, align 8, !dbg !8268
  %183 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8269
  call void @sched_analyze_2(%struct.deps* %180, %struct.rtx_def* %182, %struct.rtx_def* %183), !dbg !8270
  store i8 0, i8* @can_start_lhs_rhs_p, align 1, !dbg !8271
  br label %if.end287, !dbg !8272

if.end287:                                        ; preds = %if.then, %if.end54, %if.then282, %if.end277
  ret void, !dbg !8273
}

declare dso_local %struct.rtx_def* @next_nonnote_insn(%struct.rtx_def*) #2

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) #2

declare dso_local zeroext i8 @control_flow_insn_p(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @setup_insn_reg_uses(%struct.deps* %deps, %struct.rtx_def* %insn) #0 !dbg !8274 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  %list = alloca %struct.rtx_def*, align 8
  %use = alloca %struct.reg_use_data*, align 8
  %use2 = alloca %struct.reg_use_data*, align 8
  %next = alloca %struct.reg_use_data*, align 8
  %reg_last = alloca %struct.deps_reg*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8277, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8279, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !8281, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %list, metadata !8283, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.declare(metadata %struct.reg_use_data** %use, metadata !8285, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata %struct.reg_use_data** %use2, metadata !8287, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.declare(metadata %struct.reg_use_data** %next, metadata !8289, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata %struct.deps_reg** %reg_last, metadata !8291, metadata !DIExpression()), !dbg !8292
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_uses, align 8, !dbg !8293
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %0, i32 0, i32* %i), !dbg !8293
  br label %for.cond, !dbg !8293

for.cond:                                         ; preds = %for.inc26, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !8295
  %tobool = icmp ne i8 %call, 0, !dbg !8293
  br i1 %tobool, label %for.body, label %for.end27, !dbg !8293

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !8297
  %cmp = icmp ult i32 %1, 53, !dbg !8300
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8301

land.lhs.true:                                    ; preds = %for.body
  %2 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !8302
  %3 = load i32, i32* %i, align 4, !dbg !8302
  %sh_prom = zext i32 %3 to i64, !dbg !8302
  %shl = shl i64 1, %sh_prom, !dbg !8302
  %and = and i64 %2, %shl, !dbg !8302
  %tobool1 = icmp ne i64 %and, 0, !dbg !8302
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8303

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc26, !dbg !8304

if.end:                                           ; preds = %land.lhs.true, %for.body
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8305
  %5 = load i32, i32* %i, align 4, !dbg !8307
  %call2 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %4, i32 1, i32 %5), !dbg !8308
  %cmp3 = icmp eq %struct.rtx_def* %call2, null, !dbg !8309
  br i1 %cmp3, label %land.lhs.true4, label %if.end11, !dbg !8310

land.lhs.true4:                                   ; preds = %if.end
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_sets, align 8, !dbg !8311
  %7 = load i32, i32* %i, align 4, !dbg !8311
  %call5 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %7), !dbg !8311
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8311
  br i1 %tobool6, label %if.end11, label %land.lhs.true7, !dbg !8312

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @reg_pending_clobbers, align 8, !dbg !8313
  %9 = load i32, i32* %i, align 4, !dbg !8313
  %call8 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9), !dbg !8313
  %tobool9 = icmp ne i32 %call8, 0, !dbg !8313
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !8314

if.then10:                                        ; preds = %land.lhs.true7
  br label %for.inc26, !dbg !8315

if.end11:                                         ; preds = %land.lhs.true7, %land.lhs.true4, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !8316
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8317
  %call12 = call %struct.reg_use_data* @create_insn_reg_use(i32 %10, %struct.rtx_def* %11), !dbg !8318
  store %struct.reg_use_data* %call12, %struct.reg_use_data** %use, align 8, !dbg !8319
  %12 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8320
  %13 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8321
  %next_regno_use = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %13, i32 0, i32 2, !dbg !8322
  store %struct.reg_use_data* %12, %struct.reg_use_data** %next_regno_use, align 8, !dbg !8323
  %14 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8324
  %reg_last13 = getelementptr inbounds %struct.deps, %struct.deps* %14, i32 0, i32 14, !dbg !8325
  %15 = load %struct.deps_reg*, %struct.deps_reg** %reg_last13, align 8, !dbg !8325
  %16 = load i32, i32* %i, align 4, !dbg !8326
  %idxprom = zext i32 %16 to i64, !dbg !8324
  %arrayidx = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %15, i64 %idxprom, !dbg !8324
  store %struct.deps_reg* %arrayidx, %struct.deps_reg** %reg_last, align 8, !dbg !8327
  %17 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !8328
  %uses = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %17, i32 0, i32 0, !dbg !8330
  %18 = load %struct.rtx_def*, %struct.rtx_def** %uses, align 8, !dbg !8330
  store %struct.rtx_def* %18, %struct.rtx_def** %list, align 8, !dbg !8331
  br label %for.cond14, !dbg !8332

for.cond14:                                       ; preds = %for.inc, %if.end11
  %19 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !8333
  %tobool15 = icmp ne %struct.rtx_def* %19, null, !dbg !8335
  br i1 %tobool15, label %for.body16, label %for.end, !dbg !8335

for.body16:                                       ; preds = %for.cond14
  %20 = load i32, i32* %i, align 4, !dbg !8336
  %21 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !8338
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !8338
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8338
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8338
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !8338
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8338
  %call18 = call %struct.reg_use_data* @create_insn_reg_use(i32 %20, %struct.rtx_def* %22), !dbg !8339
  store %struct.reg_use_data* %call18, %struct.reg_use_data** %use2, align 8, !dbg !8340
  %23 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8341
  %next_regno_use19 = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %23, i32 0, i32 2, !dbg !8342
  %24 = load %struct.reg_use_data*, %struct.reg_use_data** %next_regno_use19, align 8, !dbg !8342
  store %struct.reg_use_data* %24, %struct.reg_use_data** %next, align 8, !dbg !8343
  %25 = load %struct.reg_use_data*, %struct.reg_use_data** %use2, align 8, !dbg !8344
  %26 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8345
  %next_regno_use20 = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %26, i32 0, i32 2, !dbg !8346
  store %struct.reg_use_data* %25, %struct.reg_use_data** %next_regno_use20, align 8, !dbg !8347
  %27 = load %struct.reg_use_data*, %struct.reg_use_data** %next, align 8, !dbg !8348
  %28 = load %struct.reg_use_data*, %struct.reg_use_data** %use2, align 8, !dbg !8349
  %next_regno_use21 = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %28, i32 0, i32 2, !dbg !8350
  store %struct.reg_use_data* %27, %struct.reg_use_data** %next_regno_use21, align 8, !dbg !8351
  br label %for.inc, !dbg !8352

for.inc:                                          ; preds = %for.body16
  %29 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !8353
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !8353
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !8353
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 1, !dbg !8353
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !8353
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !8353
  store %struct.rtx_def* %30, %struct.rtx_def** %list, align 8, !dbg !8354
  br label %for.cond14, !dbg !8355, !llvm.loop !8356

for.end:                                          ; preds = %for.cond14
  br label %for.inc26, !dbg !8358

for.inc26:                                        ; preds = %for.end, %if.then10, %if.then
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !8295
  br label %for.cond, !dbg !8295, !llvm.loop !8359

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !8361
}

; Function Attrs: noinline nounwind uwtable
define internal void @setup_insn_reg_pressure_info(%struct.rtx_def* %insn) #0 !dbg !2185 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %cl = alloca i32, align 4
  %link = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8364, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8366, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !8368, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !8370, metadata !DIExpression()), !dbg !8371
  %0 = load i8, i8* @sched_pressure_p, align 1, !dbg !8372
  %tobool = icmp ne i8 %0, 0, !dbg !8372
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !8372

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2005, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8372
  br label %cond.end, !dbg !8372

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8372

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8372
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8373
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !8373
  %bf.load = load i32, i32* %2, align 8, !dbg !8373
  %bf.clear = and i32 %bf.load, 65535, !dbg !8373
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !8373
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !8373

lor.lhs.false:                                    ; preds = %cond.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8373
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !8373
  %bf.load1 = load i32, i32* %4, align 8, !dbg !8373
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8373
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !8373
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !8373

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8373
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !8373
  %bf.load5 = load i32, i32* %6, align 8, !dbg !8373
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !8373
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !8373
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !8373

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8373
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !8373
  %bf.load9 = load i32, i32* %8, align 8, !dbg !8373
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !8373
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !8373
  br i1 %cmp11, label %if.end, label %if.then, !dbg !8375

if.then:                                          ; preds = %lor.lhs.false8
  br label %for.end130, !dbg !8376

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %cond.end
  store i32 0, i32* %i, align 4, !dbg !8377
  br label %for.cond, !dbg !8379

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !8380
  %10 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !8382
  %cmp12 = icmp slt i32 %9, %10, !dbg !8383
  br i1 %cmp12, label %for.body, label %for.end, !dbg !8384

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !8385
  %idxprom = sext i32 %11 to i64, !dbg !8387
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %idxprom, !dbg !8387
  %12 = load i32, i32* %arrayidx, align 4, !dbg !8387
  store i32 %12, i32* %cl, align 4, !dbg !8388
  %13 = load i32, i32* %cl, align 4, !dbg !8389
  %idxprom13 = zext i32 %13 to i64, !dbg !8390
  %arrayidx14 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom13, !dbg !8390
  %14 = bitcast %struct.reg_pressure_data* %arrayidx14 to i32*, !dbg !8391
  %bf.load15 = load i32, i32* %14, align 4, !dbg !8392
  %bf.clear16 = and i32 %bf.load15, -256, !dbg !8392
  store i32 %bf.clear16, i32* %14, align 4, !dbg !8392
  %15 = load i32, i32* %cl, align 4, !dbg !8393
  %idxprom17 = zext i32 %15 to i64, !dbg !8394
  %arrayidx18 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom17, !dbg !8394
  %16 = bitcast %struct.reg_pressure_data* %arrayidx18 to i32*, !dbg !8395
  %bf.load19 = load i32, i32* %16, align 4, !dbg !8396
  %bf.clear20 = and i32 %bf.load19, -65281, !dbg !8396
  store i32 %bf.clear20, i32* %16, align 4, !dbg !8396
  %17 = load i32, i32* %cl, align 4, !dbg !8397
  %idxprom21 = zext i32 %17 to i64, !dbg !8398
  %arrayidx22 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom21, !dbg !8398
  %18 = bitcast %struct.reg_pressure_data* %arrayidx22 to i32*, !dbg !8399
  %bf.load23 = load i32, i32* %18, align 4, !dbg !8400
  %bf.clear24 = and i32 %bf.load23, -16711681, !dbg !8400
  store i32 %bf.clear24, i32* %18, align 4, !dbg !8400
  %19 = load i32, i32* %cl, align 4, !dbg !8401
  %idxprom25 = zext i32 %19 to i64, !dbg !8402
  %arrayidx26 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom25, !dbg !8402
  %20 = bitcast %struct.reg_pressure_data* %arrayidx26 to i32*, !dbg !8403
  %bf.load27 = load i32, i32* %20, align 4, !dbg !8404
  %bf.clear28 = and i32 %bf.load27, 16777215, !dbg !8404
  store i32 %bf.clear28, i32* %20, align 4, !dbg !8404
  br label %for.inc, !dbg !8405

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !8406
  %inc = add nsw i32 %21, 1, !dbg !8406
  store i32 %inc, i32* %i, align 4, !dbg !8406
  br label %for.cond, !dbg !8407, !llvm.loop !8408

for.end:                                          ; preds = %for.cond
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8410
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !8410
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8410
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !8410
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !8410
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8410
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8411
  %25 = bitcast %struct.rtx_def* %24 to i8*, !dbg !8411
  call void @note_stores(%struct.rtx_def* %23, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @mark_insn_reg_clobber, i8* %25), !dbg !8412
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8413
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !8413
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !8413
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 5, !dbg !8413
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !8413
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !8413
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8414
  %29 = bitcast %struct.rtx_def* %28 to i8*, !dbg !8414
  call void @note_stores(%struct.rtx_def* %27, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @mark_insn_reg_store, i8* %29), !dbg !8415
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8416
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !8416
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !8416
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 7, !dbg !8416
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !8416
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !8416
  store %struct.rtx_def* %31, %struct.rtx_def** %link, align 8, !dbg !8418
  br label %for.cond38, !dbg !8419

for.cond38:                                       ; preds = %for.inc50, %for.end
  %32 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8420
  %tobool39 = icmp ne %struct.rtx_def* %32, null, !dbg !8422
  br i1 %tobool39, label %for.body40, label %for.end55, !dbg !8422

for.body40:                                       ; preds = %for.cond38
  %33 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8423
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !8423
  %bf.load41 = load i32, i32* %34, align 8, !dbg !8423
  %bf.lshr = lshr i32 %bf.load41, 16, !dbg !8423
  %bf.clear42 = and i32 %bf.lshr, 255, !dbg !8423
  %cmp43 = icmp eq i32 %bf.clear42, 1, !dbg !8425
  br i1 %cmp43, label %if.then44, label %if.end49, !dbg !8426

if.then44:                                        ; preds = %for.body40
  %35 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8427
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !8427
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !8427
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 0, !dbg !8427
  %rt_rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !8427
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !8427
  call void @mark_reg_death(%struct.rtx_def* %36), !dbg !8428
  br label %if.end49, !dbg !8428

if.end49:                                         ; preds = %if.then44, %for.body40
  br label %for.inc50, !dbg !8429

for.inc50:                                        ; preds = %if.end49
  %37 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8430
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !8430
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !8430
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 1, !dbg !8430
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !8430
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !8430
  store %struct.rtx_def* %38, %struct.rtx_def** %link, align 8, !dbg !8431
  br label %for.cond38, !dbg !8432, !llvm.loop !8433

for.end55:                                        ; preds = %for.cond38
  %39 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !8435
  %conv = sext i32 %39 to i64, !dbg !8435
  %mul = mul i64 4, %conv, !dbg !8436
  %conv56 = trunc i64 %mul to i32, !dbg !8437
  store i32 %conv56, i32* %len, align 4, !dbg !8438
  %40 = load i32, i32* %len, align 4, !dbg !8439
  %conv57 = sext i32 %40 to i64, !dbg !8439
  %call = call i8* @xmalloc(i64 %conv57), !dbg !8440
  %41 = bitcast i8* %call to %struct.reg_pressure_data*, !dbg !8441
  %42 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8442
  %tobool58 = icmp ne %struct.VEC_haifa_insn_data_def_heap* %42, null, !dbg !8442
  br i1 %tobool58, label %cond.true59, label %cond.false60, !dbg !8442

cond.true59:                                      ; preds = %for.end55
  %43 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8442
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %43, i32 0, i32 0, !dbg !8442
  br label %cond.end61, !dbg !8442

cond.false60:                                     ; preds = %for.end55
  br label %cond.end61, !dbg !8442

cond.end61:                                       ; preds = %cond.false60, %cond.true59
  %cond62 = phi %struct.VEC_haifa_insn_data_def_base* [ %base, %cond.true59 ], [ null, %cond.false60 ], !dbg !8442
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8442
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !8442
  %fld64 = bitcast %union.u* %u63 to [1 x %union.rtunion_def]*, !dbg !8442
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i64 0, i64 0, !dbg !8442
  %rt_int = bitcast %union.rtunion_def* %arrayidx65 to i32*, !dbg !8442
  %45 = load i32, i32* %rt_int, align 8, !dbg !8442
  %call66 = call %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %cond62, i32 %45), !dbg !8442
  %reg_pressure = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call66, i32 0, i32 13, !dbg !8442
  store %struct.reg_pressure_data* %41, %struct.reg_pressure_data** %reg_pressure, align 8, !dbg !8443
  store %struct.reg_pressure_data* %41, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !8444
  %46 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !8445
  %conv67 = sext i32 %46 to i64, !dbg !8445
  %mul68 = mul i64 %conv67, 4, !dbg !8446
  %call69 = call i8* @xcalloc(i64 %mul68, i64 1), !dbg !8447
  %47 = bitcast i8* %call69 to i32*, !dbg !8448
  %48 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8449
  %tobool70 = icmp ne %struct.VEC_haifa_insn_data_def_heap* %48, null, !dbg !8449
  br i1 %tobool70, label %cond.true71, label %cond.false73, !dbg !8449

cond.true71:                                      ; preds = %cond.end61
  %49 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8449
  %base72 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %49, i32 0, i32 0, !dbg !8449
  br label %cond.end74, !dbg !8449

cond.false73:                                     ; preds = %cond.end61
  br label %cond.end74, !dbg !8449

cond.end74:                                       ; preds = %cond.false73, %cond.true71
  %cond75 = phi %struct.VEC_haifa_insn_data_def_base* [ %base72, %cond.true71 ], [ null, %cond.false73 ], !dbg !8449
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8449
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !8449
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !8449
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !8449
  %rt_int79 = bitcast %union.rtunion_def* %arrayidx78 to i32*, !dbg !8449
  %51 = load i32, i32* %rt_int79, align 8, !dbg !8449
  %call80 = call %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %cond75, i32 %51), !dbg !8449
  %max_reg_pressure = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call80, i32 0, i32 14, !dbg !8449
  store i32* %47, i32** %max_reg_pressure, align 8, !dbg !8450
  store i32 0, i32* %i, align 4, !dbg !8451
  br label %for.cond81, !dbg !8453

for.cond81:                                       ; preds = %for.inc128, %cond.end74
  %52 = load i32, i32* %i, align 4, !dbg !8454
  %53 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !8456
  %cmp82 = icmp slt i32 %52, %53, !dbg !8457
  br i1 %cmp82, label %for.body84, label %for.end130, !dbg !8458

for.body84:                                       ; preds = %for.cond81
  %54 = load i32, i32* %i, align 4, !dbg !8459
  %idxprom85 = sext i32 %54 to i64, !dbg !8461
  %arrayidx86 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %idxprom85, !dbg !8461
  %55 = load i32, i32* %arrayidx86, align 4, !dbg !8461
  store i32 %55, i32* %cl, align 4, !dbg !8462
  %56 = load i32, i32* %cl, align 4, !dbg !8463
  %idxprom87 = zext i32 %56 to i64, !dbg !8464
  %arrayidx88 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom87, !dbg !8464
  %57 = bitcast %struct.reg_pressure_data* %arrayidx88 to i32*, !dbg !8465
  %bf.load89 = load i32, i32* %57, align 4, !dbg !8465
  %bf.clear90 = and i32 %bf.load89, 255, !dbg !8465
  %58 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !8466
  %59 = load i32, i32* %i, align 4, !dbg !8467
  %idxprom91 = sext i32 %59 to i64, !dbg !8466
  %arrayidx92 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %58, i64 %idxprom91, !dbg !8466
  %60 = bitcast %struct.reg_pressure_data* %arrayidx92 to i32*, !dbg !8468
  %bf.load93 = load i32, i32* %60, align 4, !dbg !8469
  %bf.value = and i32 %bf.clear90, 255, !dbg !8469
  %bf.clear94 = and i32 %bf.load93, -256, !dbg !8469
  %bf.set = or i32 %bf.clear94, %bf.value, !dbg !8469
  store i32 %bf.set, i32* %60, align 4, !dbg !8469
  %61 = load i32, i32* %cl, align 4, !dbg !8470
  %idxprom95 = zext i32 %61 to i64, !dbg !8471
  %arrayidx96 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom95, !dbg !8471
  %62 = bitcast %struct.reg_pressure_data* %arrayidx96 to i32*, !dbg !8472
  %bf.load97 = load i32, i32* %62, align 4, !dbg !8472
  %bf.lshr98 = lshr i32 %bf.load97, 8, !dbg !8472
  %bf.clear99 = and i32 %bf.lshr98, 255, !dbg !8472
  %63 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !8473
  %64 = load i32, i32* %i, align 4, !dbg !8474
  %idxprom100 = sext i32 %64 to i64, !dbg !8473
  %arrayidx101 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %63, i64 %idxprom100, !dbg !8473
  %65 = bitcast %struct.reg_pressure_data* %arrayidx101 to i32*, !dbg !8475
  %bf.load102 = load i32, i32* %65, align 4, !dbg !8476
  %bf.value103 = and i32 %bf.clear99, 255, !dbg !8476
  %bf.shl = shl i32 %bf.value103, 8, !dbg !8476
  %bf.clear104 = and i32 %bf.load102, -65281, !dbg !8476
  %bf.set105 = or i32 %bf.clear104, %bf.shl, !dbg !8476
  store i32 %bf.set105, i32* %65, align 4, !dbg !8476
  %66 = load i32, i32* %cl, align 4, !dbg !8477
  %idxprom106 = zext i32 %66 to i64, !dbg !8478
  %arrayidx107 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom106, !dbg !8478
  %67 = bitcast %struct.reg_pressure_data* %arrayidx107 to i32*, !dbg !8479
  %bf.load108 = load i32, i32* %67, align 4, !dbg !8479
  %bf.lshr109 = lshr i32 %bf.load108, 16, !dbg !8479
  %bf.clear110 = and i32 %bf.lshr109, 255, !dbg !8479
  %68 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !8480
  %69 = load i32, i32* %i, align 4, !dbg !8481
  %idxprom111 = sext i32 %69 to i64, !dbg !8480
  %arrayidx112 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %68, i64 %idxprom111, !dbg !8480
  %70 = bitcast %struct.reg_pressure_data* %arrayidx112 to i32*, !dbg !8482
  %bf.load113 = load i32, i32* %70, align 4, !dbg !8483
  %bf.value114 = and i32 %bf.clear110, 255, !dbg !8483
  %bf.shl115 = shl i32 %bf.value114, 16, !dbg !8483
  %bf.clear116 = and i32 %bf.load113, -16711681, !dbg !8483
  %bf.set117 = or i32 %bf.clear116, %bf.shl115, !dbg !8483
  store i32 %bf.set117, i32* %70, align 4, !dbg !8483
  %71 = load i32, i32* %cl, align 4, !dbg !8484
  %idxprom118 = zext i32 %71 to i64, !dbg !8485
  %arrayidx119 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom118, !dbg !8485
  %72 = bitcast %struct.reg_pressure_data* %arrayidx119 to i32*, !dbg !8486
  %bf.load120 = load i32, i32* %72, align 4, !dbg !8486
  %bf.ashr = ashr i32 %bf.load120, 24, !dbg !8486
  %73 = load %struct.reg_pressure_data*, %struct.reg_pressure_data** @setup_insn_reg_pressure_info.pressure_info, align 8, !dbg !8487
  %74 = load i32, i32* %i, align 4, !dbg !8488
  %idxprom121 = sext i32 %74 to i64, !dbg !8487
  %arrayidx122 = getelementptr inbounds %struct.reg_pressure_data, %struct.reg_pressure_data* %73, i64 %idxprom121, !dbg !8487
  %75 = bitcast %struct.reg_pressure_data* %arrayidx122 to i32*, !dbg !8489
  %bf.load123 = load i32, i32* %75, align 4, !dbg !8490
  %bf.value124 = and i32 %bf.ashr, 255, !dbg !8490
  %bf.shl125 = shl i32 %bf.value124, 24, !dbg !8490
  %bf.clear126 = and i32 %bf.load123, 16777215, !dbg !8490
  %bf.set127 = or i32 %bf.clear126, %bf.shl125, !dbg !8490
  store i32 %bf.set127, i32* %75, align 4, !dbg !8490
  %bf.result.shl = shl i32 %bf.value124, 24, !dbg !8490
  %bf.result.ashr = ashr i32 %bf.result.shl, 24, !dbg !8490
  br label %for.inc128, !dbg !8491

for.inc128:                                       ; preds = %for.body84
  %76 = load i32, i32* %i, align 4, !dbg !8492
  %inc129 = add nsw i32 %76, 1, !dbg !8492
  store i32 %inc129, i32* %i, align 4, !dbg !8492
  br label %for.cond81, !dbg !8493, !llvm.loop !8494

for.end130:                                       ; preds = %if.then, %for.cond81
  ret void, !dbg !8496
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @sel_mark_hard_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sched_analyze_reg(%struct.deps* %deps, i32 %regno, i32 %mode, i32 %ref, %struct.rtx_def* %insn) #0 !dbg !8497 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %regno.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ref.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %t = alloca %struct.rtx_def*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !8500, metadata !DIExpression()), !dbg !8501
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !8502, metadata !DIExpression()), !dbg !8503
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  store i32 %ref, i32* %ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8508, metadata !DIExpression()), !dbg !8509
  %0 = load i32, i32* @reload_completed, align 4, !dbg !8510
  %tobool = icmp ne i32 %0, 0, !dbg !8510
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8512

land.lhs.true:                                    ; preds = %entry
  %call = call zeroext i8 @sel_sched_p(), !dbg !8513
  %conv = zext i8 %call to i32, !dbg !8513
  %tobool1 = icmp ne i32 %conv, 0, !dbg !8513
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !8514

land.lhs.true2:                                   ; preds = %land.lhs.true
  %1 = load i32, i32* %regno.addr, align 4, !dbg !8515
  %call3 = call i32 @max_reg_num(), !dbg !8516
  %sub = sub nsw i32 %call3, 1, !dbg !8517
  %cmp = icmp sge i32 %1, %sub, !dbg !8518
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8519

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %2 = load i32, i32* %regno.addr, align 4, !dbg !8520
  %3 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8521
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %3, i32 0, i32 13, !dbg !8522
  %4 = load i32, i32* %max_reg, align 8, !dbg !8522
  %cmp5 = icmp sge i32 %2, %4, !dbg !8523
  br i1 %cmp5, label %if.then, label %if.end, !dbg !8524

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true2
  %5 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8525
  %6 = load i32, i32* %regno.addr, align 4, !dbg !8526
  call void @extend_deps_reg_info(%struct.deps* %5, i32 %6), !dbg !8527
  br label %if.end, !dbg !8527

if.end:                                           ; preds = %if.then, %lor.lhs.false, %land.lhs.true, %entry
  call void @maybe_extend_reg_info_p(), !dbg !8528
  %7 = load i32, i32* %regno.addr, align 4, !dbg !8529
  %cmp7 = icmp slt i32 %7, 53, !dbg !8531
  br i1 %cmp7, label %if.then9, label %if.else38, !dbg !8532

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8533, metadata !DIExpression()), !dbg !8535
  %8 = load i32, i32* %regno.addr, align 4, !dbg !8536
  %idxprom = sext i32 %8 to i64, !dbg !8537
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !8537
  %9 = load i32, i32* %mode.addr, align 4, !dbg !8538
  %idxprom10 = zext i32 %9 to i64, !dbg !8537
  %arrayidx11 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom10, !dbg !8537
  %10 = load i8, i8* %arrayidx11, align 1, !dbg !8537
  %conv12 = zext i8 %10 to i32, !dbg !8537
  store i32 %conv12, i32* %i, align 4, !dbg !8535
  %11 = load i32, i32* %ref.addr, align 4, !dbg !8539
  %cmp13 = icmp eq i32 %11, 23, !dbg !8541
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !8542

if.then15:                                        ; preds = %if.then9
  br label %while.cond, !dbg !8543

while.cond:                                       ; preds = %while.body, %if.then15
  %12 = load i32, i32* %i, align 4, !dbg !8545
  %dec = add nsw i32 %12, -1, !dbg !8545
  store i32 %dec, i32* %i, align 4, !dbg !8545
  %cmp16 = icmp sge i32 %dec, 0, !dbg !8546
  br i1 %cmp16, label %while.body, label %while.end, !dbg !8543

while.body:                                       ; preds = %while.cond
  %13 = load i32, i32* %regno.addr, align 4, !dbg !8547
  %14 = load i32, i32* %i, align 4, !dbg !8548
  %add = add nsw i32 %13, %14, !dbg !8549
  call void @note_reg_set(i32 %add), !dbg !8550
  br label %while.cond, !dbg !8543, !llvm.loop !8551

while.end:                                        ; preds = %while.cond
  br label %if.end37, !dbg !8553

if.else:                                          ; preds = %if.then9
  %15 = load i32, i32* %ref.addr, align 4, !dbg !8554
  %cmp18 = icmp eq i32 %15, 24, !dbg !8556
  br i1 %cmp18, label %if.then20, label %if.else28, !dbg !8557

if.then20:                                        ; preds = %if.else
  br label %while.cond21, !dbg !8558

while.cond21:                                     ; preds = %while.body25, %if.then20
  %16 = load i32, i32* %i, align 4, !dbg !8560
  %dec22 = add nsw i32 %16, -1, !dbg !8560
  store i32 %dec22, i32* %i, align 4, !dbg !8560
  %cmp23 = icmp sge i32 %dec22, 0, !dbg !8561
  br i1 %cmp23, label %while.body25, label %while.end27, !dbg !8558

while.body25:                                     ; preds = %while.cond21
  %17 = load i32, i32* %regno.addr, align 4, !dbg !8562
  %18 = load i32, i32* %i, align 4, !dbg !8563
  %add26 = add nsw i32 %17, %18, !dbg !8564
  call void @note_reg_use(i32 %add26), !dbg !8565
  br label %while.cond21, !dbg !8558, !llvm.loop !8566

while.end27:                                      ; preds = %while.cond21
  br label %if.end36, !dbg !8568

if.else28:                                        ; preds = %if.else
  br label %while.cond29, !dbg !8569

while.cond29:                                     ; preds = %while.body33, %if.else28
  %19 = load i32, i32* %i, align 4, !dbg !8571
  %dec30 = add nsw i32 %19, -1, !dbg !8571
  store i32 %dec30, i32* %i, align 4, !dbg !8571
  %cmp31 = icmp sge i32 %dec30, 0, !dbg !8572
  br i1 %cmp31, label %while.body33, label %while.end35, !dbg !8569

while.body33:                                     ; preds = %while.cond29
  %20 = load i32, i32* %regno.addr, align 4, !dbg !8573
  %21 = load i32, i32* %i, align 4, !dbg !8574
  %add34 = add nsw i32 %20, %21, !dbg !8575
  call void @note_reg_clobber(i32 %add34), !dbg !8576
  br label %while.cond29, !dbg !8569, !llvm.loop !8577

while.end35:                                      ; preds = %while.cond29
  br label %if.end36

if.end36:                                         ; preds = %while.end35, %while.end27
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %while.end
  br label %if.end101, !dbg !8579

if.else38:                                        ; preds = %if.end
  %22 = load i32, i32* %regno.addr, align 4, !dbg !8580
  %23 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8582
  %max_reg39 = getelementptr inbounds %struct.deps, %struct.deps* %23, i32 0, i32 13, !dbg !8583
  %24 = load i32, i32* %max_reg39, align 8, !dbg !8583
  %cmp40 = icmp sge i32 %22, %24, !dbg !8584
  br i1 %cmp40, label %if.then42, label %if.else49, !dbg !8585

if.then42:                                        ; preds = %if.else38
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8586, metadata !DIExpression()), !dbg !8588
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8589
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !8589
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8589
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !8589
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !8589
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8589
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !8589
  %bf.load = load i32, i32* %27, align 8, !dbg !8589
  %bf.clear = and i32 %bf.load, 65535, !dbg !8589
  store i32 %bf.clear, i32* %code, align 4, !dbg !8588
  %28 = load i32, i32* %code, align 4, !dbg !8590
  %cmp44 = icmp eq i32 %28, 24, !dbg !8590
  br i1 %cmp44, label %cond.false, label %lor.lhs.false46, !dbg !8590

lor.lhs.false46:                                  ; preds = %if.then42
  %29 = load i32, i32* %code, align 4, !dbg !8590
  %cmp47 = icmp eq i32 %29, 25, !dbg !8590
  br i1 %cmp47, label %cond.false, label %cond.true, !dbg !8590

cond.true:                                        ; preds = %lor.lhs.false46
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8590
  br label %cond.end, !dbg !8590

cond.false:                                       ; preds = %lor.lhs.false46, %if.then42
  br label %cond.end, !dbg !8590

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8590
  br label %if.end100, !dbg !8591

if.else49:                                        ; preds = %if.else38
  %30 = load i32, i32* %ref.addr, align 4, !dbg !8592
  %cmp50 = icmp eq i32 %30, 23, !dbg !8595
  br i1 %cmp50, label %if.then52, label %if.else53, !dbg !8596

if.then52:                                        ; preds = %if.else49
  %31 = load i32, i32* %regno.addr, align 4, !dbg !8597
  call void @note_reg_set(i32 %31), !dbg !8598
  br label %if.end59, !dbg !8598

if.else53:                                        ; preds = %if.else49
  %32 = load i32, i32* %ref.addr, align 4, !dbg !8599
  %cmp54 = icmp eq i32 %32, 24, !dbg !8601
  br i1 %cmp54, label %if.then56, label %if.else57, !dbg !8602

if.then56:                                        ; preds = %if.else53
  %33 = load i32, i32* %regno.addr, align 4, !dbg !8603
  call void @note_reg_use(i32 %33), !dbg !8604
  br label %if.end58, !dbg !8604

if.else57:                                        ; preds = %if.else53
  %34 = load i32, i32* %regno.addr, align 4, !dbg !8605
  call void @note_reg_clobber(i32 %34), !dbg !8606
  br label %if.end58

if.end58:                                         ; preds = %if.else57, %if.then56
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then52
  %35 = load i32, i32* @reload_completed, align 4, !dbg !8607
  %tobool60 = icmp ne i32 %35, 0, !dbg !8607
  br i1 %tobool60, label %if.end77, label %land.lhs.true61, !dbg !8609

land.lhs.true61:                                  ; preds = %if.end59
  %36 = load i32, i32* %regno.addr, align 4, !dbg !8610
  %call62 = call zeroext i8 @get_reg_known_equiv_p(i32 %36), !dbg !8611
  %conv63 = zext i8 %call62 to i32, !dbg !8611
  %tobool64 = icmp ne i32 %conv63, 0, !dbg !8611
  br i1 %tobool64, label %if.then65, label %if.end77, !dbg !8612

if.then65:                                        ; preds = %land.lhs.true61
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %t, metadata !8613, metadata !DIExpression()), !dbg !8615
  %37 = load i32, i32* %regno.addr, align 4, !dbg !8616
  %call66 = call %struct.rtx_def* @get_reg_known_value(i32 %37), !dbg !8617
  store %struct.rtx_def* %call66, %struct.rtx_def** %t, align 8, !dbg !8615
  %38 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8618
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !8618
  %bf.load67 = load i32, i32* %39, align 8, !dbg !8618
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !8618
  %cmp69 = icmp eq i32 %bf.clear68, 43, !dbg !8618
  br i1 %cmp69, label %if.then71, label %if.end76, !dbg !8620

if.then71:                                        ; preds = %if.then65
  %40 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8621
  %41 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8622
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !8622
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !8622
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !8622
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !8622
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !8622
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8623
  call void @sched_analyze_2(%struct.deps* %40, %struct.rtx_def* %42, %struct.rtx_def* %43), !dbg !8624
  br label %if.end76, !dbg !8624

if.end76:                                         ; preds = %if.then71, %if.then65
  br label %if.end77, !dbg !8625

if.end77:                                         ; preds = %if.end76, %land.lhs.true61, %if.end59
  %44 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !8626
  %45 = load i32, i32* %regno.addr, align 4, !dbg !8626
  %idxprom78 = sext i32 %45 to i64, !dbg !8626
  %arrayidx79 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %44, i64 %idxprom78, !dbg !8626
  %calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx79, i32 0, i32 3, !dbg !8626
  %46 = load i32, i32* %calls_crossed, align 4, !dbg !8626
  %cmp80 = icmp eq i32 %46, 0, !dbg !8628
  br i1 %cmp80, label %if.then82, label %if.end99, !dbg !8629

if.then82:                                        ; preds = %if.end77
  %47 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8630
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %47, i32 0, i32 18, !dbg !8633
  %bf.load83 = load i8, i8* %readonly, align 4, !dbg !8633
  %bf.clear84 = and i8 %bf.load83, 1, !dbg !8633
  %bf.cast = zext i8 %bf.clear84 to i32, !dbg !8633
  %tobool85 = icmp ne i32 %bf.cast, 0, !dbg !8630
  br i1 %tobool85, label %if.else97, label %land.lhs.true86, !dbg !8634

land.lhs.true86:                                  ; preds = %if.then82
  %48 = load i32, i32* %ref.addr, align 4, !dbg !8635
  %cmp87 = icmp eq i32 %48, 24, !dbg !8636
  br i1 %cmp87, label %land.lhs.true89, label %if.else97, !dbg !8637

land.lhs.true89:                                  ; preds = %land.lhs.true86
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8638
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !8638
  %bf.load90 = load i32, i32* %50, align 8, !dbg !8638
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !8638
  %cmp92 = icmp eq i32 %bf.clear91, 7, !dbg !8638
  br i1 %cmp92, label %if.else97, label %if.then94, !dbg !8639

if.then94:                                        ; preds = %land.lhs.true89
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8640
  %52 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8641
  %sched_before_next_call = getelementptr inbounds %struct.deps, %struct.deps* %52, i32 0, i32 10, !dbg !8642
  %53 = load %struct.rtx_def*, %struct.rtx_def** %sched_before_next_call, align 8, !dbg !8642
  %call95 = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %51, %struct.rtx_def* %53), !dbg !8643
  %54 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8644
  %sched_before_next_call96 = getelementptr inbounds %struct.deps, %struct.deps* %54, i32 0, i32 10, !dbg !8645
  store %struct.rtx_def* %call95, %struct.rtx_def** %sched_before_next_call96, align 8, !dbg !8646
  br label %if.end98, !dbg !8644

if.else97:                                        ; preds = %land.lhs.true89, %land.lhs.true86, %if.then82
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8647
  %56 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8648
  %last_function_call = getelementptr inbounds %struct.deps, %struct.deps* %56, i32 0, i32 8, !dbg !8649
  %57 = load %struct.rtx_def*, %struct.rtx_def** %last_function_call, align 8, !dbg !8649
  call void @add_dependence_list(%struct.rtx_def* %55, %struct.rtx_def* %57, i32 1, i32 12), !dbg !8650
  br label %if.end98

if.end98:                                         ; preds = %if.else97, %if.then94
  br label %if.end99, !dbg !8651

if.end99:                                         ; preds = %if.end98, %if.end77
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %cond.end
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end37
  ret void, !dbg !8652
}

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) #2

declare dso_local %struct.cselib_val_struct* @cselib_lookup_from_insn(%struct.rtx_def*, i32, i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @canon_rtx(%struct.rtx_def*) #2

declare dso_local i32 @read_dependence(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @note_mem_dep(%struct.rtx_def* %m1, %struct.rtx_def* %m2, %struct.rtx_def* %e, i32 %ds) #0 !dbg !8653 {
entry:
  %m1.addr = alloca %struct.rtx_def*, align 8
  %m2.addr = alloca %struct.rtx_def*, align 8
  %e.addr = alloca %struct.rtx_def*, align 8
  %ds.addr = alloca i32, align 4
  store %struct.rtx_def* %m1, %struct.rtx_def** %m1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %m1.addr, metadata !8654, metadata !DIExpression()), !dbg !8655
  store %struct.rtx_def* %m2, %struct.rtx_def** %m2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %m2.addr, metadata !8656, metadata !DIExpression()), !dbg !8657
  store %struct.rtx_def* %e, %struct.rtx_def** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %e.addr, metadata !8658, metadata !DIExpression()), !dbg !8659
  store i32 %ds, i32* %ds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ds.addr, metadata !8660, metadata !DIExpression()), !dbg !8661
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8662
  %note_mem_dep = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i32 0, i32 10, !dbg !8664
  %1 = load void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)** %note_mem_dep, align 8, !dbg !8664
  %tobool = icmp ne void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)* %1, null, !dbg !8662
  br i1 %tobool, label %if.then, label %if.end, !dbg !8665

if.then:                                          ; preds = %entry
  %2 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8666
  %note_mem_dep1 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %2, i32 0, i32 10, !dbg !8667
  %3 = load void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)** %note_mem_dep1, align 8, !dbg !8667
  %4 = load %struct.rtx_def*, %struct.rtx_def** %m1.addr, align 8, !dbg !8668
  %5 = load %struct.rtx_def*, %struct.rtx_def** %m2.addr, align 8, !dbg !8669
  %6 = load %struct.rtx_def*, %struct.rtx_def** %e.addr, align 8, !dbg !8670
  %7 = load i32, i32* %ds.addr, align 4, !dbg !8671
  call void %3(%struct.rtx_def* %4, %struct.rtx_def* %5, %struct.rtx_def* %6, i32 %7), !dbg !8666
  br label %if.end, !dbg !8666

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8672
}

declare dso_local i32 @true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, i8 (%struct.rtx_def*, i8)*) #2

declare dso_local zeroext i8 @rtx_varies_p(%struct.rtx_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @deps_may_trap_p(%struct.rtx_def* %mem) #0 !dbg !8673 {
entry:
  %mem.addr = alloca %struct.rtx_def*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %t = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %mem, %struct.rtx_def** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem.addr, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %addr, metadata !8678, metadata !DIExpression()), !dbg !8679
  %0 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !8680
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !8680
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8680
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8680
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8680
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8680
  store %struct.rtx_def* %1, %struct.rtx_def** %addr, align 8, !dbg !8679
  %2 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !8681
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !8681
  %bf.load = load i32, i32* %3, align 8, !dbg !8681
  %bf.clear = and i32 %bf.load, 65535, !dbg !8681
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !8681
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !8683

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !8684
  %call = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !8684
  %cmp1 = icmp uge i32 %call, 53, !dbg !8685
  br i1 %cmp1, label %if.then, label %if.end5, !dbg !8686

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %t, metadata !8687, metadata !DIExpression()), !dbg !8689
  %5 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !8690
  %call2 = call i32 @rhs_regno(%struct.rtx_def* %5), !dbg !8690
  %call3 = call %struct.rtx_def* @get_reg_known_value(i32 %call2), !dbg !8691
  store %struct.rtx_def* %call3, %struct.rtx_def** %t, align 8, !dbg !8689
  %6 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8692
  %tobool = icmp ne %struct.rtx_def* %6, null, !dbg !8692
  br i1 %tobool, label %if.then4, label %if.end, !dbg !8694

if.then4:                                         ; preds = %if.then
  %7 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !8695
  store %struct.rtx_def* %7, %struct.rtx_def** %addr, align 8, !dbg !8696
  br label %if.end, !dbg !8697

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !8698

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !8699
  %call6 = call i32 @rtx_addr_can_trap_p(%struct.rtx_def* %8), !dbg !8700
  ret i32 %call6, !dbg !8701
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_insn_mem_dependence(%struct.deps* %deps, i8 zeroext %read_p, %struct.rtx_def* %insn, %struct.rtx_def* %mem) #0 !dbg !8702 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %read_p.addr = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %mem.addr = alloca %struct.rtx_def*, align 8
  %insn_list = alloca %struct.rtx_def**, align 8
  %mem_list = alloca %struct.rtx_def**, align 8
  %link = alloca %struct.rtx_def*, align 8
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !8705, metadata !DIExpression()), !dbg !8706
  store i8 %read_p, i8* %read_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %read_p.addr, metadata !8707, metadata !DIExpression()), !dbg !8708
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8709, metadata !DIExpression()), !dbg !8710
  store %struct.rtx_def* %mem, %struct.rtx_def** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %insn_list, metadata !8713, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %mem_list, metadata !8715, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !8717, metadata !DIExpression()), !dbg !8718
  %0 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8719
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %0, i32 0, i32 18, !dbg !8719
  %bf.load = load i8, i8* %readonly, align 4, !dbg !8719
  %bf.clear = and i8 %bf.load, 1, !dbg !8719
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8719
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8719
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8719

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1551, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8719
  br label %cond.end, !dbg !8719

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8719

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8719
  %1 = load i8, i8* %read_p.addr, align 1, !dbg !8720
  %tobool1 = icmp ne i8 %1, 0, !dbg !8720
  br i1 %tobool1, label %if.then, label %if.else, !dbg !8722

if.then:                                          ; preds = %cond.end
  %2 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8723
  %pending_read_insns = getelementptr inbounds %struct.deps, %struct.deps* %2, i32 0, i32 0, !dbg !8725
  store %struct.rtx_def** %pending_read_insns, %struct.rtx_def*** %insn_list, align 8, !dbg !8726
  %3 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8727
  %pending_read_mems = getelementptr inbounds %struct.deps, %struct.deps* %3, i32 0, i32 1, !dbg !8728
  store %struct.rtx_def** %pending_read_mems, %struct.rtx_def*** %mem_list, align 8, !dbg !8729
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8730
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !8730
  %bf.load2 = load i32, i32* %5, align 8, !dbg !8730
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !8730
  %cmp = icmp eq i32 %bf.clear3, 7, !dbg !8730
  br i1 %cmp, label %if.end, label %if.then4, !dbg !8732

if.then4:                                         ; preds = %if.then
  %6 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8733
  %pending_read_list_length = getelementptr inbounds %struct.deps, %struct.deps* %6, i32 0, i32 4, !dbg !8734
  %7 = load i32, i32* %pending_read_list_length, align 8, !dbg !8735
  %inc = add nsw i32 %7, 1, !dbg !8735
  store i32 %inc, i32* %pending_read_list_length, align 8, !dbg !8735
  br label %if.end, !dbg !8733

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end6, !dbg !8736

if.else:                                          ; preds = %cond.end
  %8 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8737
  %pending_write_insns = getelementptr inbounds %struct.deps, %struct.deps* %8, i32 0, i32 2, !dbg !8739
  store %struct.rtx_def** %pending_write_insns, %struct.rtx_def*** %insn_list, align 8, !dbg !8740
  %9 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8741
  %pending_write_mems = getelementptr inbounds %struct.deps, %struct.deps* %9, i32 0, i32 3, !dbg !8742
  store %struct.rtx_def** %pending_write_mems, %struct.rtx_def*** %mem_list, align 8, !dbg !8743
  %10 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8744
  %pending_write_list_length = getelementptr inbounds %struct.deps, %struct.deps* %10, i32 0, i32 5, !dbg !8745
  %11 = load i32, i32* %pending_write_list_length, align 4, !dbg !8746
  %inc5 = add nsw i32 %11, 1, !dbg !8746
  store i32 %inc5, i32* %pending_write_list_length, align 4, !dbg !8746
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8747
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %insn_list, align 8, !dbg !8748
  %14 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8, !dbg !8749
  %call = call %struct.rtx_def* @alloc_INSN_LIST(%struct.rtx_def* %12, %struct.rtx_def* %14), !dbg !8750
  store %struct.rtx_def* %call, %struct.rtx_def** %link, align 8, !dbg !8751
  %15 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8752
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %insn_list, align 8, !dbg !8753
  store %struct.rtx_def* %15, %struct.rtx_def** %16, align 8, !dbg !8754
  %17 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8755
  %use_cselib = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %17, i32 0, i32 12, !dbg !8757
  %bf.load7 = load i8, i8* %use_cselib, align 8, !dbg !8757
  %bf.clear8 = and i8 %bf.load7, 1, !dbg !8757
  %bf.cast9 = zext i8 %bf.clear8 to i32, !dbg !8757
  %tobool10 = icmp ne i32 %bf.cast9, 0, !dbg !8755
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !8758

if.then11:                                        ; preds = %if.end6
  %18 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !8759
  %call12 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %18), !dbg !8759
  store %struct.rtx_def* %call12, %struct.rtx_def** %mem.addr, align 8, !dbg !8761
  %19 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !8762
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !8762
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8762
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8762
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8762
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8762
  %call13 = call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %20), !dbg !8763
  %21 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !8764
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !8764
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !8764
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 0, !dbg !8764
  %rt_rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**, !dbg !8764
  store %struct.rtx_def* %call13, %struct.rtx_def** %rt_rtx17, align 8, !dbg !8765
  br label %if.end18, !dbg !8766

if.end18:                                         ; preds = %if.then11, %if.end6
  %22 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !8767
  %call19 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %22), !dbg !8768
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %mem_list, align 8, !dbg !8769
  %24 = load %struct.rtx_def*, %struct.rtx_def** %23, align 8, !dbg !8770
  %call20 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call19, %struct.rtx_def* %24), !dbg !8771
  store %struct.rtx_def* %call20, %struct.rtx_def** %link, align 8, !dbg !8772
  %25 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8773
  %26 = load %struct.rtx_def**, %struct.rtx_def*** %mem_list, align 8, !dbg !8774
  store %struct.rtx_def* %25, %struct.rtx_def** %26, align 8, !dbg !8775
  ret void, !dbg !8776
}

; Function Attrs: noinline nounwind uwtable
define internal void @extend_deps_reg_info(%struct.deps* %deps, i32 %regno) #0 !dbg !8777 {
entry:
  %deps.addr = alloca %struct.deps*, align 8
  %regno.addr = alloca i32, align 4
  %max_regno = alloca i32, align 4
  store %struct.deps* %deps, %struct.deps** %deps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.deps** %deps.addr, metadata !8780, metadata !DIExpression()), !dbg !8781
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !8782, metadata !DIExpression()), !dbg !8783
  call void @llvm.dbg.declare(metadata i32* %max_regno, metadata !8784, metadata !DIExpression()), !dbg !8785
  %0 = load i32, i32* %regno.addr, align 4, !dbg !8786
  %add = add nsw i32 %0, 1, !dbg !8787
  store i32 %add, i32* %max_regno, align 4, !dbg !8785
  %1 = load i32, i32* @reload_completed, align 4, !dbg !8788
  %tobool = icmp ne i32 %1, 0, !dbg !8788
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8788

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 2065, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8788
  br label %cond.end, !dbg !8788

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8788

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8788
  %2 = load i32, i32* @reload_completed, align 4, !dbg !8789
  %tobool1 = icmp ne i32 %2, 0, !dbg !8789
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !8791

land.lhs.true:                                    ; preds = %cond.end
  %3 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8792
  %readonly = getelementptr inbounds %struct.deps, %struct.deps* %3, i32 0, i32 18, !dbg !8793
  %bf.load = load i8, i8* %readonly, align 4, !dbg !8793
  %bf.clear = and i8 %bf.load, 1, !dbg !8793
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8793
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !8792
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8794

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %max_regno, align 4, !dbg !8795
  %5 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8797
  %max_reg = getelementptr inbounds %struct.deps, %struct.deps* %5, i32 0, i32 13, !dbg !8798
  store i32 %4, i32* %max_reg, align 8, !dbg !8799
  br label %if.end12, !dbg !8800

if.end:                                           ; preds = %land.lhs.true, %cond.end
  %6 = load i32, i32* %max_regno, align 4, !dbg !8801
  %7 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8803
  %max_reg3 = getelementptr inbounds %struct.deps, %struct.deps* %7, i32 0, i32 13, !dbg !8804
  %8 = load i32, i32* %max_reg3, align 8, !dbg !8804
  %cmp = icmp sgt i32 %6, %8, !dbg !8805
  br i1 %cmp, label %if.then4, label %if.end12, !dbg !8806

if.then4:                                         ; preds = %if.end
  %9 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8807
  %reg_last = getelementptr inbounds %struct.deps, %struct.deps* %9, i32 0, i32 14, !dbg !8807
  %10 = load %struct.deps_reg*, %struct.deps_reg** %reg_last, align 8, !dbg !8807
  %11 = bitcast %struct.deps_reg* %10 to i8*, !dbg !8807
  %12 = load i32, i32* %max_regno, align 4, !dbg !8807
  %conv = sext i32 %12 to i64, !dbg !8807
  %mul = mul i64 40, %conv, !dbg !8807
  %call = call i8* @xrealloc(i8* %11, i64 %mul), !dbg !8807
  %13 = bitcast i8* %call to %struct.deps_reg*, !dbg !8807
  %14 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8809
  %reg_last5 = getelementptr inbounds %struct.deps, %struct.deps* %14, i32 0, i32 14, !dbg !8810
  store %struct.deps_reg* %13, %struct.deps_reg** %reg_last5, align 8, !dbg !8811
  %15 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8812
  %reg_last6 = getelementptr inbounds %struct.deps, %struct.deps* %15, i32 0, i32 14, !dbg !8813
  %16 = load %struct.deps_reg*, %struct.deps_reg** %reg_last6, align 8, !dbg !8813
  %17 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8814
  %max_reg7 = getelementptr inbounds %struct.deps, %struct.deps* %17, i32 0, i32 13, !dbg !8815
  %18 = load i32, i32* %max_reg7, align 8, !dbg !8815
  %idxprom = sext i32 %18 to i64, !dbg !8812
  %arrayidx = getelementptr inbounds %struct.deps_reg, %struct.deps_reg* %16, i64 %idxprom, !dbg !8812
  %19 = bitcast %struct.deps_reg* %arrayidx to i8*, !dbg !8816
  %20 = load i32, i32* %max_regno, align 4, !dbg !8817
  %21 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8818
  %max_reg8 = getelementptr inbounds %struct.deps, %struct.deps* %21, i32 0, i32 13, !dbg !8819
  %22 = load i32, i32* %max_reg8, align 8, !dbg !8819
  %sub = sub nsw i32 %20, %22, !dbg !8820
  %conv9 = sext i32 %sub to i64, !dbg !8821
  %mul10 = mul i64 %conv9, 40, !dbg !8822
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 %mul10, i1 false), !dbg !8816
  %23 = load i32, i32* %max_regno, align 4, !dbg !8823
  %24 = load %struct.deps*, %struct.deps** %deps.addr, align 8, !dbg !8824
  %max_reg11 = getelementptr inbounds %struct.deps, %struct.deps* %24, i32 0, i32 13, !dbg !8825
  store i32 %23, i32* %max_reg11, align 8, !dbg !8826
  br label %if.end12, !dbg !8827

if.end12:                                         ; preds = %if.then, %if.then4, %if.end
  ret void, !dbg !8828
}

; Function Attrs: noinline nounwind uwtable
define internal void @note_reg_set(i32 %r) #0 !dbg !8829 {
entry:
  %r.addr = alloca i32, align 4
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8832
  %note_reg_set = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i32 0, i32 7, !dbg !8834
  %1 = load void (i32)*, void (i32)** %note_reg_set, align 8, !dbg !8834
  %tobool = icmp ne void (i32)* %1, null, !dbg !8832
  br i1 %tobool, label %if.then, label %if.end, !dbg !8835

if.then:                                          ; preds = %entry
  %2 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8836
  %note_reg_set1 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %2, i32 0, i32 7, !dbg !8837
  %3 = load void (i32)*, void (i32)** %note_reg_set1, align 8, !dbg !8837
  %4 = load i32, i32* %r.addr, align 4, !dbg !8838
  call void %3(i32 %4), !dbg !8836
  br label %if.end, !dbg !8836

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8839
}

; Function Attrs: noinline nounwind uwtable
define internal void @note_reg_use(i32 %r) #0 !dbg !8840 {
entry:
  %r.addr = alloca i32, align 4
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !8841, metadata !DIExpression()), !dbg !8842
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8843
  %note_reg_use = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i32 0, i32 9, !dbg !8845
  %1 = load void (i32)*, void (i32)** %note_reg_use, align 8, !dbg !8845
  %tobool = icmp ne void (i32)* %1, null, !dbg !8843
  br i1 %tobool, label %if.then, label %if.end, !dbg !8846

if.then:                                          ; preds = %entry
  %2 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8847
  %note_reg_use1 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %2, i32 0, i32 9, !dbg !8848
  %3 = load void (i32)*, void (i32)** %note_reg_use1, align 8, !dbg !8848
  %4 = load i32, i32* %r.addr, align 4, !dbg !8849
  call void %3(i32 %4), !dbg !8847
  br label %if.end, !dbg !8847

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8850
}

; Function Attrs: noinline nounwind uwtable
define internal void @note_reg_clobber(i32 %r) #0 !dbg !8851 {
entry:
  %r.addr = alloca i32, align 4
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  %0 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8854
  %note_reg_clobber = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %0, i32 0, i32 8, !dbg !8856
  %1 = load void (i32)*, void (i32)** %note_reg_clobber, align 8, !dbg !8856
  %tobool = icmp ne void (i32)* %1, null, !dbg !8854
  br i1 %tobool, label %if.then, label %if.end, !dbg !8857

if.then:                                          ; preds = %entry
  %2 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !8858
  %note_reg_clobber1 = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %2, i32 0, i32 8, !dbg !8859
  %3 = load void (i32)*, void (i32)** %note_reg_clobber1, align 8, !dbg !8859
  %4 = load i32, i32* %r.addr, align 4, !dbg !8860
  call void %3(i32 %4), !dbg !8858
  br label %if.end, !dbg !8858

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8861
}

declare dso_local zeroext i8 @get_reg_known_equiv_p(i32) #2

declare dso_local %struct.rtx_def* @get_reg_known_value(i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local i32 @rtx_addr_can_trap_p(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) #2

declare dso_local zeroext i8 @df_read_modify_subreg_p(%struct.rtx_def*) #2

declare dso_local i32 @anti_dependence(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @output_dependence(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.reg_use_data* @create_insn_reg_use(i32 %regno, %struct.rtx_def* %insn) #0 !dbg !8862 {
entry:
  %regno.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %use = alloca %struct.reg_use_data*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !8865, metadata !DIExpression()), !dbg !8866
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8867, metadata !DIExpression()), !dbg !8868
  call void @llvm.dbg.declare(metadata %struct.reg_use_data** %use, metadata !8869, metadata !DIExpression()), !dbg !8870
  %call = call i8* @xmalloc(i64 32), !dbg !8871
  %0 = bitcast i8* %call to %struct.reg_use_data*, !dbg !8872
  store %struct.reg_use_data* %0, %struct.reg_use_data** %use, align 8, !dbg !8873
  %1 = load i32, i32* %regno.addr, align 4, !dbg !8874
  %2 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8875
  %regno1 = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %2, i32 0, i32 0, !dbg !8876
  store i32 %1, i32* %regno1, align 8, !dbg !8877
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8878
  %4 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8879
  %insn2 = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %4, i32 0, i32 1, !dbg !8880
  store %struct.rtx_def* %3, %struct.rtx_def** %insn2, align 8, !dbg !8881
  %5 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8882
  %tobool = icmp ne %struct.VEC_haifa_insn_data_def_heap* %5, null, !dbg !8882
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8882

cond.true:                                        ; preds = %entry
  %6 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8882
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %6, i32 0, i32 0, !dbg !8882
  br label %cond.end, !dbg !8882

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8882

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8882
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8882
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !8882
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8882
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8882
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8882
  %8 = load i32, i32* %rt_int, align 8, !dbg !8882
  %call3 = call %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %cond, i32 %8), !dbg !8882
  %reg_use_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call3, i32 0, i32 15, !dbg !8882
  %9 = load %struct.reg_use_data*, %struct.reg_use_data** %reg_use_list, align 8, !dbg !8882
  %10 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8883
  %next_insn_use = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %10, i32 0, i32 3, !dbg !8884
  store %struct.reg_use_data* %9, %struct.reg_use_data** %next_insn_use, align 8, !dbg !8885
  %11 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8886
  %12 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8887
  %tobool4 = icmp ne %struct.VEC_haifa_insn_data_def_heap* %12, null, !dbg !8887
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !8887

cond.true5:                                       ; preds = %cond.end
  %13 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !8887
  %base6 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %13, i32 0, i32 0, !dbg !8887
  br label %cond.end8, !dbg !8887

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8, !dbg !8887

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi %struct.VEC_haifa_insn_data_def_base* [ %base6, %cond.true5 ], [ null, %cond.false7 ], !dbg !8887
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8887
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !8887
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !8887
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !8887
  %rt_int13 = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !8887
  %15 = load i32, i32* %rt_int13, align 8, !dbg !8887
  %call14 = call %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %cond9, i32 %15), !dbg !8887
  %reg_use_list15 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call14, i32 0, i32 15, !dbg !8887
  store %struct.reg_use_data* %11, %struct.reg_use_data** %reg_use_list15, align 8, !dbg !8888
  %16 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !8889
  ret %struct.reg_use_data* %16, !dbg !8890
}

declare dso_local i8* @xmalloc(i64) #2

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mark_insn_reg_clobber(%struct.rtx_def* %reg, %struct.rtx_def* %setter, i8* %data) #0 !dbg !8891 {
entry:
  %reg.addr = alloca %struct.rtx_def*, align 8
  %setter.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !8894, metadata !DIExpression()), !dbg !8895
  store %struct.rtx_def* %setter, %struct.rtx_def** %setter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %setter.addr, metadata !8896, metadata !DIExpression()), !dbg !8897
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8898, metadata !DIExpression()), !dbg !8899
  %0 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8, !dbg !8900
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8900
  %bf.load = load i32, i32* %1, align 8, !dbg !8900
  %bf.clear = and i32 %bf.load, 65535, !dbg !8900
  %cmp = icmp eq i32 %bf.clear, 25, !dbg !8902
  br i1 %cmp, label %if.then, label %if.end, !dbg !8903

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %data.addr, align 8, !dbg !8904
  %3 = bitcast i8* %2 to %struct.rtx_def*, !dbg !8905
  %4 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8906
  call void @mark_insn_reg_birth(%struct.rtx_def* %3, %struct.rtx_def* %4, i8 zeroext 1, i8 zeroext 0), !dbg !8907
  br label %if.end, !dbg !8907

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8908
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_insn_reg_store(%struct.rtx_def* %reg, %struct.rtx_def* %setter, i8* %data) #0 !dbg !8909 {
entry:
  %reg.addr = alloca %struct.rtx_def*, align 8
  %setter.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !8910, metadata !DIExpression()), !dbg !8911
  store %struct.rtx_def* %setter, %struct.rtx_def** %setter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %setter.addr, metadata !8912, metadata !DIExpression()), !dbg !8913
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  %0 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8, !dbg !8916
  %cmp = icmp ne %struct.rtx_def* %0, null, !dbg !8918
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8919

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %setter.addr, align 8, !dbg !8920
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !8920
  %bf.load = load i32, i32* %2, align 8, !dbg !8920
  %bf.clear = and i32 %bf.load, 65535, !dbg !8920
  %cmp1 = icmp ne i32 %bf.clear, 23, !dbg !8921
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8922

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !8923

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %data.addr, align 8, !dbg !8924
  %4 = bitcast i8* %3 to %struct.rtx_def*, !dbg !8925
  %5 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8926
  %6 = load i8*, i8** %data.addr, align 8, !dbg !8927
  %7 = bitcast i8* %6 to %struct.rtx_def*, !dbg !8928
  %8 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8929
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %7, i32 6, %struct.rtx_def* %8), !dbg !8930
  %cmp2 = icmp ne %struct.rtx_def* %call, null, !dbg !8931
  %conv = zext i1 %cmp2 to i32, !dbg !8931
  %conv3 = trunc i32 %conv to i8, !dbg !8930
  call void @mark_insn_reg_birth(%struct.rtx_def* %4, %struct.rtx_def* %5, i8 zeroext 0, i8 zeroext %conv3), !dbg !8932
  br label %return, !dbg !8933

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8933
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_reg_death(%struct.rtx_def* %reg) #0 !dbg !8934 {
entry:
  %reg.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8937, metadata !DIExpression()), !dbg !8938
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8939
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8939
  %bf.load = load i32, i32* %1, align 8, !dbg !8939
  %bf.clear = and i32 %bf.load, 65535, !dbg !8939
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !8941
  br i1 %cmp, label %if.then, label %if.end, !dbg !8942

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8943
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !8943
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8943
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8943
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8943
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8943
  store %struct.rtx_def* %3, %struct.rtx_def** %reg.addr, align 8, !dbg !8944
  br label %if.end, !dbg !8945

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8946
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !8946
  %bf.load1 = load i32, i32* %5, align 8, !dbg !8946
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8946
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !8946
  br i1 %cmp3, label %if.end5, label %if.then4, !dbg !8948

if.then4:                                         ; preds = %if.end
  br label %if.end13, !dbg !8949

if.end5:                                          ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8950
  %call = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !8950
  store i32 %call, i32* %regno, align 4, !dbg !8951
  %7 = load i32, i32* %regno, align 4, !dbg !8952
  %cmp6 = icmp slt i32 %7, 53, !dbg !8954
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !8955

if.then7:                                         ; preds = %if.end5
  %8 = load i32, i32* %regno, align 4, !dbg !8956
  %9 = load i32, i32* %regno, align 4, !dbg !8957
  %idxprom = sext i32 %9 to i64, !dbg !8958
  %arrayidx8 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !8958
  %10 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8959
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !8959
  %bf.load9 = load i32, i32* %11, align 8, !dbg !8959
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !8959
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !8959
  %idxprom11 = zext i32 %bf.clear10 to i64, !dbg !8958
  %arrayidx12 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx8, i64 0, i64 %idxprom11, !dbg !8958
  %12 = load i8, i8* %arrayidx12, align 1, !dbg !8958
  %conv = zext i8 %12 to i32, !dbg !8958
  call void @mark_hard_regno_death(i32 %8, i32 %conv), !dbg !8960
  br label %if.end13, !dbg !8960

if.else:                                          ; preds = %if.end5
  %13 = load i32, i32* %regno, align 4, !dbg !8961
  call void @mark_pseudo_death(i32 %13), !dbg !8962
  br label %if.end13

if.end13:                                         ; preds = %if.then4, %if.else, %if.then7
  ret void, !dbg !8963
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_insn_reg_birth(%struct.rtx_def* %insn, %struct.rtx_def* %reg, i8 zeroext %clobber_p, i8 zeroext %unused_p) #0 !dbg !8964 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %reg.addr = alloca %struct.rtx_def*, align 8
  %clobber_p.addr = alloca i8, align 1
  %unused_p.addr = alloca i8, align 1
  %regno = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  store i8 %clobber_p, i8* %clobber_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clobber_p.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  store i8 %unused_p, i8* %unused_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unused_p.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8975, metadata !DIExpression()), !dbg !8976
  %0 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8977
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8977
  %bf.load = load i32, i32* %1, align 8, !dbg !8977
  %bf.clear = and i32 %bf.load, 65535, !dbg !8977
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !8979
  br i1 %cmp, label %if.then, label %if.end, !dbg !8980

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8981
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !8981
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8981
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8981
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8981
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8981
  store %struct.rtx_def* %3, %struct.rtx_def** %reg.addr, align 8, !dbg !8982
  br label %if.end, !dbg !8983

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8984
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !8984
  %bf.load1 = load i32, i32* %5, align 8, !dbg !8984
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8984
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !8984
  br i1 %cmp3, label %if.end5, label %if.then4, !dbg !8986

if.then4:                                         ; preds = %if.end
  br label %if.end13, !dbg !8987

if.end5:                                          ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8988
  %call = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !8988
  store i32 %call, i32* %regno, align 4, !dbg !8989
  %7 = load i32, i32* %regno, align 4, !dbg !8990
  %cmp6 = icmp slt i32 %7, 53, !dbg !8992
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !8993

if.then7:                                         ; preds = %if.end5
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8994
  %9 = load i32, i32* %regno, align 4, !dbg !8995
  %10 = load i32, i32* %regno, align 4, !dbg !8996
  %idxprom = sext i32 %10 to i64, !dbg !8997
  %arrayidx8 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !8997
  %11 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8998
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !8998
  %bf.load9 = load i32, i32* %12, align 8, !dbg !8998
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !8998
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !8998
  %idxprom11 = zext i32 %bf.clear10 to i64, !dbg !8997
  %arrayidx12 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx8, i64 0, i64 %idxprom11, !dbg !8997
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !8997
  %conv = zext i8 %13 to i32, !dbg !8997
  %14 = load i8, i8* %clobber_p.addr, align 1, !dbg !8999
  %15 = load i8, i8* %unused_p.addr, align 1, !dbg !9000
  call void @mark_insn_hard_regno_birth(%struct.rtx_def* %8, i32 %9, i32 %conv, i8 zeroext %14, i8 zeroext %15), !dbg !9001
  br label %if.end13, !dbg !9001

if.else:                                          ; preds = %if.end5
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9002
  %17 = load i32, i32* %regno, align 4, !dbg !9003
  %18 = load i8, i8* %clobber_p.addr, align 1, !dbg !9004
  %19 = load i8, i8* %unused_p.addr, align 1, !dbg !9005
  call void @mark_insn_pseudo_birth(%struct.rtx_def* %16, i32 %17, i8 zeroext %18, i8 zeroext %19), !dbg !9006
  br label %if.end13

if.end13:                                         ; preds = %if.then4, %if.else, %if.then7
  ret void, !dbg !9007
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_insn_hard_regno_birth(%struct.rtx_def* %insn, i32 %regno, i32 %nregs, i8 zeroext %clobber_p, i8 zeroext %unused_p) #0 !dbg !9008 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %regno.addr = alloca i32, align 4
  %nregs.addr = alloca i32, align 4
  %clobber_p.addr = alloca i8, align 1
  %unused_p.addr = alloca i8, align 1
  %cl = alloca i32, align 4
  %new_incr = alloca i32, align 4
  %last = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9011, metadata !DIExpression()), !dbg !9012
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !9013, metadata !DIExpression()), !dbg !9014
  store i32 %nregs, i32* %nregs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nregs.addr, metadata !9015, metadata !DIExpression()), !dbg !9016
  store i8 %clobber_p, i8* %clobber_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clobber_p.addr, metadata !9017, metadata !DIExpression()), !dbg !9018
  store i8 %unused_p, i8* %unused_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unused_p.addr, metadata !9019, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !9021, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.declare(metadata i32* %new_incr, metadata !9023, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.declare(metadata i32* %last, metadata !9025, metadata !DIExpression()), !dbg !9026
  %0 = load i32, i32* %regno.addr, align 4, !dbg !9027
  %1 = load i32, i32* %nregs.addr, align 4, !dbg !9028
  %add = add nsw i32 %0, %1, !dbg !9029
  store i32 %add, i32* %last, align 4, !dbg !9026
  br label %while.cond, !dbg !9030

while.cond:                                       ; preds = %if.end60, %entry
  %2 = load i32, i32* %regno.addr, align 4, !dbg !9031
  %3 = load i32, i32* %last, align 4, !dbg !9032
  %cmp = icmp slt i32 %2, %3, !dbg !9033
  br i1 %cmp, label %while.body, label %while.end, !dbg !9030

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %regno.addr, align 4, !dbg !9034
  %cmp1 = icmp slt i32 %4, 53, !dbg !9034
  br i1 %cmp1, label %cond.false, label %cond.true, !dbg !9034

cond.true:                                        ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9034
  br label %cond.end, !dbg !9034

cond.false:                                       ; preds = %while.body
  br label %cond.end, !dbg !9034

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9034
  %5 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !9036
  %6 = load i32, i32* %regno.addr, align 4, !dbg !9036
  %sh_prom = zext i32 %6 to i64, !dbg !9036
  %shl = shl i64 1, %sh_prom, !dbg !9036
  %and = and i64 %5, %shl, !dbg !9036
  %tobool = icmp ne i64 %and, 0, !dbg !9036
  br i1 %tobool, label %if.end60, label %if.then, !dbg !9038

if.then:                                          ; preds = %cond.end
  %7 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !9039
  %8 = load i32, i32* %regno.addr, align 4, !dbg !9041
  %idxprom = sext i32 %8 to i64, !dbg !9039
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !9039
  %9 = load i32, i32* %arrayidx, align 4, !dbg !9039
  store i32 %9, i32* %cl, align 4, !dbg !9042
  %10 = load i32, i32* %cl, align 4, !dbg !9043
  %cmp2 = icmp ne i32 %10, 0, !dbg !9045
  br i1 %cmp2, label %if.then3, label %if.end59, !dbg !9046

if.then3:                                         ; preds = %if.then
  %11 = load i8, i8* %clobber_p.addr, align 1, !dbg !9047
  %tobool4 = icmp ne i8 %11, 0, !dbg !9047
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !9050

if.then5:                                         ; preds = %if.then3
  %12 = load i32, i32* %cl, align 4, !dbg !9051
  %idxprom6 = zext i32 %12 to i64, !dbg !9053
  %arrayidx7 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom6, !dbg !9053
  %13 = bitcast %struct.reg_pressure_data* %arrayidx7 to i32*, !dbg !9054
  %bf.load = load i32, i32* %13, align 4, !dbg !9054
  %bf.clear = and i32 %bf.load, 255, !dbg !9054
  %add8 = add nsw i32 %bf.clear, 1, !dbg !9055
  store i32 %add8, i32* %new_incr, align 4, !dbg !9056
  %14 = load i32, i32* %new_incr, align 4, !dbg !9057
  %15 = load i32, i32* %cl, align 4, !dbg !9058
  %idxprom9 = zext i32 %15 to i64, !dbg !9059
  %arrayidx10 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom9, !dbg !9059
  %16 = bitcast %struct.reg_pressure_data* %arrayidx10 to i32*, !dbg !9060
  %bf.load11 = load i32, i32* %16, align 4, !dbg !9061
  %bf.value = and i32 %14, 255, !dbg !9061
  %bf.clear12 = and i32 %bf.load11, -256, !dbg !9061
  %bf.set = or i32 %bf.clear12, %bf.value, !dbg !9061
  store i32 %bf.set, i32* %16, align 4, !dbg !9061
  br label %if.end53, !dbg !9062

if.else:                                          ; preds = %if.then3
  %17 = load i8, i8* %unused_p.addr, align 1, !dbg !9063
  %tobool13 = icmp ne i8 %17, 0, !dbg !9063
  br i1 %tobool13, label %if.then14, label %if.else26, !dbg !9065

if.then14:                                        ; preds = %if.else
  %18 = load i32, i32* %cl, align 4, !dbg !9066
  %idxprom15 = zext i32 %18 to i64, !dbg !9068
  %arrayidx16 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom15, !dbg !9068
  %19 = bitcast %struct.reg_pressure_data* %arrayidx16 to i32*, !dbg !9069
  %bf.load17 = load i32, i32* %19, align 4, !dbg !9069
  %bf.lshr = lshr i32 %bf.load17, 16, !dbg !9069
  %bf.clear18 = and i32 %bf.lshr, 255, !dbg !9069
  %add19 = add nsw i32 %bf.clear18, 1, !dbg !9070
  store i32 %add19, i32* %new_incr, align 4, !dbg !9071
  %20 = load i32, i32* %new_incr, align 4, !dbg !9072
  %21 = load i32, i32* %cl, align 4, !dbg !9073
  %idxprom20 = zext i32 %21 to i64, !dbg !9074
  %arrayidx21 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom20, !dbg !9074
  %22 = bitcast %struct.reg_pressure_data* %arrayidx21 to i32*, !dbg !9075
  %bf.load22 = load i32, i32* %22, align 4, !dbg !9076
  %bf.value23 = and i32 %20, 255, !dbg !9076
  %bf.shl = shl i32 %bf.value23, 16, !dbg !9076
  %bf.clear24 = and i32 %bf.load22, -16711681, !dbg !9076
  %bf.set25 = or i32 %bf.clear24, %bf.shl, !dbg !9076
  store i32 %bf.set25, i32* %22, align 4, !dbg !9076
  br label %if.end52, !dbg !9077

if.else26:                                        ; preds = %if.else
  %23 = load i32, i32* %cl, align 4, !dbg !9078
  %idxprom27 = zext i32 %23 to i64, !dbg !9080
  %arrayidx28 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom27, !dbg !9080
  %24 = bitcast %struct.reg_pressure_data* %arrayidx28 to i32*, !dbg !9081
  %bf.load29 = load i32, i32* %24, align 4, !dbg !9081
  %bf.lshr30 = lshr i32 %bf.load29, 8, !dbg !9081
  %bf.clear31 = and i32 %bf.lshr30, 255, !dbg !9081
  %add32 = add nsw i32 %bf.clear31, 1, !dbg !9082
  store i32 %add32, i32* %new_incr, align 4, !dbg !9083
  %25 = load i32, i32* %new_incr, align 4, !dbg !9084
  %26 = load i32, i32* %cl, align 4, !dbg !9085
  %idxprom33 = zext i32 %26 to i64, !dbg !9086
  %arrayidx34 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom33, !dbg !9086
  %27 = bitcast %struct.reg_pressure_data* %arrayidx34 to i32*, !dbg !9087
  %bf.load35 = load i32, i32* %27, align 4, !dbg !9088
  %bf.value36 = and i32 %25, 255, !dbg !9088
  %bf.shl37 = shl i32 %bf.value36, 8, !dbg !9088
  %bf.clear38 = and i32 %bf.load35, -65281, !dbg !9088
  %bf.set39 = or i32 %bf.clear38, %bf.shl37, !dbg !9088
  store i32 %bf.set39, i32* %27, align 4, !dbg !9088
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9089
  %29 = load i32, i32* %regno.addr, align 4, !dbg !9091
  %call = call zeroext i8 @insn_use_p(%struct.rtx_def* %28, i32 %29), !dbg !9092
  %tobool40 = icmp ne i8 %call, 0, !dbg !9092
  br i1 %tobool40, label %if.end, label %if.then41, !dbg !9093

if.then41:                                        ; preds = %if.else26
  %30 = load i32, i32* %cl, align 4, !dbg !9094
  %idxprom42 = zext i32 %30 to i64, !dbg !9095
  %arrayidx43 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom42, !dbg !9095
  %31 = bitcast %struct.reg_pressure_data* %arrayidx43 to i32*, !dbg !9096
  %bf.load44 = load i32, i32* %31, align 4, !dbg !9097
  %bf.ashr = ashr i32 %bf.load44, 24, !dbg !9097
  %add45 = add nsw i32 %bf.ashr, 1, !dbg !9097
  %bf.load46 = load i32, i32* %31, align 4, !dbg !9097
  %bf.value47 = and i32 %add45, 255, !dbg !9097
  %bf.shl48 = shl i32 %bf.value47, 24, !dbg !9097
  %bf.clear49 = and i32 %bf.load46, 16777215, !dbg !9097
  %bf.set50 = or i32 %bf.clear49, %bf.shl48, !dbg !9097
  store i32 %bf.set50, i32* %31, align 4, !dbg !9097
  %bf.result.shl = shl i32 %bf.value47, 24, !dbg !9097
  %bf.result.ashr = ashr i32 %bf.result.shl, 24, !dbg !9097
  br label %if.end, !dbg !9095

if.end:                                           ; preds = %if.then41, %if.else26
  %32 = load i32, i32* %regno.addr, align 4, !dbg !9098
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9099
  %call51 = call %struct.reg_set_data* @create_insn_reg_set(i32 %32, %struct.rtx_def* %33), !dbg !9100
  br label %if.end52

if.end52:                                         ; preds = %if.end, %if.then14
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then5
  %34 = load i32, i32* %new_incr, align 4, !dbg !9101
  %cmp54 = icmp slt i32 %34, 256, !dbg !9101
  br i1 %cmp54, label %cond.false56, label %cond.true55, !dbg !9101

cond.true55:                                      ; preds = %if.end53
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1888, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9101
  br label %cond.end57, !dbg !9101

cond.false56:                                     ; preds = %if.end53
  br label %cond.end57, !dbg !9101

cond.end57:                                       ; preds = %cond.false56, %cond.true55
  %cond58 = phi i32 [ 0, %cond.true55 ], [ 0, %cond.false56 ], !dbg !9101
  br label %if.end59, !dbg !9102

if.end59:                                         ; preds = %cond.end57, %if.then
  br label %if.end60, !dbg !9103

if.end60:                                         ; preds = %if.end59, %cond.end
  %35 = load i32, i32* %regno.addr, align 4, !dbg !9104
  %inc = add nsw i32 %35, 1, !dbg !9104
  store i32 %inc, i32* %regno.addr, align 4, !dbg !9104
  br label %while.cond, !dbg !9030, !llvm.loop !9105

while.end:                                        ; preds = %while.cond
  ret void, !dbg !9107
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_insn_pseudo_birth(%struct.rtx_def* %insn, i32 %regno, i8 zeroext %clobber_p, i8 zeroext %unused_p) #0 !dbg !9108 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %regno.addr = alloca i32, align 4
  %clobber_p.addr = alloca i8, align 1
  %unused_p.addr = alloca i8, align 1
  %incr = alloca i32, align 4
  %new_incr = alloca i32, align 4
  %cl = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9111, metadata !DIExpression()), !dbg !9112
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !9113, metadata !DIExpression()), !dbg !9114
  store i8 %clobber_p, i8* %clobber_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clobber_p.addr, metadata !9115, metadata !DIExpression()), !dbg !9116
  store i8 %unused_p, i8* %unused_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unused_p.addr, metadata !9117, metadata !DIExpression()), !dbg !9118
  call void @llvm.dbg.declare(metadata i32* %incr, metadata !9119, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.declare(metadata i32* %new_incr, metadata !9121, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !9123, metadata !DIExpression()), !dbg !9124
  %0 = load i32, i32* %regno.addr, align 4, !dbg !9125
  %cmp = icmp sge i32 %0, 53, !dbg !9125
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !9125

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1826, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9125
  br label %cond.end, !dbg !9125

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9125

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9125
  %1 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !9126
  %2 = load i32, i32* %regno.addr, align 4, !dbg !9127
  %idxprom = sext i32 %2 to i64, !dbg !9126
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !9126
  %3 = load i32, i32* %arrayidx, align 4, !dbg !9126
  store i32 %3, i32* %cl, align 4, !dbg !9128
  %4 = load i32, i32* %cl, align 4, !dbg !9129
  %cmp1 = icmp ne i32 %4, 0, !dbg !9131
  br i1 %cmp1, label %if.then, label %if.end64, !dbg !9132

if.then:                                          ; preds = %cond.end
  %5 = load i32, i32* %cl, align 4, !dbg !9133
  %idxprom2 = zext i32 %5 to i64, !dbg !9135
  %arrayidx3 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom2, !dbg !9135
  %6 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9136
  %7 = load i32, i32* %regno.addr, align 4, !dbg !9136
  %idxprom4 = sext i32 %7 to i64, !dbg !9136
  %arrayidx5 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %6, i64 %idxprom4, !dbg !9136
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8, !dbg !9136
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !9136
  %bf.load = load i32, i32* %9, align 8, !dbg !9136
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !9136
  %bf.clear = and i32 %bf.lshr, 255, !dbg !9136
  %idxprom6 = zext i32 %bf.clear to i64, !dbg !9135
  %arrayidx7 = getelementptr inbounds [87 x i32], [87 x i32]* %arrayidx3, i64 0, i64 %idxprom6, !dbg !9135
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !9135
  store i32 %10, i32* %incr, align 4, !dbg !9137
  %11 = load i8, i8* %clobber_p.addr, align 1, !dbg !9138
  %tobool = icmp ne i8 %11, 0, !dbg !9138
  br i1 %tobool, label %if.then8, label %if.else, !dbg !9140

if.then8:                                         ; preds = %if.then
  %12 = load i32, i32* %cl, align 4, !dbg !9141
  %idxprom9 = zext i32 %12 to i64, !dbg !9143
  %arrayidx10 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom9, !dbg !9143
  %13 = bitcast %struct.reg_pressure_data* %arrayidx10 to i32*, !dbg !9144
  %bf.load11 = load i32, i32* %13, align 4, !dbg !9144
  %bf.clear12 = and i32 %bf.load11, 255, !dbg !9144
  %14 = load i32, i32* %incr, align 4, !dbg !9145
  %add = add nsw i32 %bf.clear12, %14, !dbg !9146
  store i32 %add, i32* %new_incr, align 4, !dbg !9147
  %15 = load i32, i32* %new_incr, align 4, !dbg !9148
  %16 = load i32, i32* %cl, align 4, !dbg !9149
  %idxprom13 = zext i32 %16 to i64, !dbg !9150
  %arrayidx14 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom13, !dbg !9150
  %17 = bitcast %struct.reg_pressure_data* %arrayidx14 to i32*, !dbg !9151
  %bf.load15 = load i32, i32* %17, align 4, !dbg !9152
  %bf.value = and i32 %15, 255, !dbg !9152
  %bf.clear16 = and i32 %bf.load15, -256, !dbg !9152
  %bf.set = or i32 %bf.clear16, %bf.value, !dbg !9152
  store i32 %bf.set, i32* %17, align 4, !dbg !9152
  br label %if.end58, !dbg !9153

if.else:                                          ; preds = %if.then
  %18 = load i8, i8* %unused_p.addr, align 1, !dbg !9154
  %tobool17 = icmp ne i8 %18, 0, !dbg !9154
  br i1 %tobool17, label %if.then18, label %if.else31, !dbg !9156

if.then18:                                        ; preds = %if.else
  %19 = load i32, i32* %cl, align 4, !dbg !9157
  %idxprom19 = zext i32 %19 to i64, !dbg !9159
  %arrayidx20 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom19, !dbg !9159
  %20 = bitcast %struct.reg_pressure_data* %arrayidx20 to i32*, !dbg !9160
  %bf.load21 = load i32, i32* %20, align 4, !dbg !9160
  %bf.lshr22 = lshr i32 %bf.load21, 16, !dbg !9160
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !9160
  %21 = load i32, i32* %incr, align 4, !dbg !9161
  %add24 = add nsw i32 %bf.clear23, %21, !dbg !9162
  store i32 %add24, i32* %new_incr, align 4, !dbg !9163
  %22 = load i32, i32* %new_incr, align 4, !dbg !9164
  %23 = load i32, i32* %cl, align 4, !dbg !9165
  %idxprom25 = zext i32 %23 to i64, !dbg !9166
  %arrayidx26 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom25, !dbg !9166
  %24 = bitcast %struct.reg_pressure_data* %arrayidx26 to i32*, !dbg !9167
  %bf.load27 = load i32, i32* %24, align 4, !dbg !9168
  %bf.value28 = and i32 %22, 255, !dbg !9168
  %bf.shl = shl i32 %bf.value28, 16, !dbg !9168
  %bf.clear29 = and i32 %bf.load27, -16711681, !dbg !9168
  %bf.set30 = or i32 %bf.clear29, %bf.shl, !dbg !9168
  store i32 %bf.set30, i32* %24, align 4, !dbg !9168
  br label %if.end57, !dbg !9169

if.else31:                                        ; preds = %if.else
  %25 = load i32, i32* %cl, align 4, !dbg !9170
  %idxprom32 = zext i32 %25 to i64, !dbg !9172
  %arrayidx33 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom32, !dbg !9172
  %26 = bitcast %struct.reg_pressure_data* %arrayidx33 to i32*, !dbg !9173
  %bf.load34 = load i32, i32* %26, align 4, !dbg !9173
  %bf.lshr35 = lshr i32 %bf.load34, 8, !dbg !9173
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !9173
  %27 = load i32, i32* %incr, align 4, !dbg !9174
  %add37 = add nsw i32 %bf.clear36, %27, !dbg !9175
  store i32 %add37, i32* %new_incr, align 4, !dbg !9176
  %28 = load i32, i32* %new_incr, align 4, !dbg !9177
  %29 = load i32, i32* %cl, align 4, !dbg !9178
  %idxprom38 = zext i32 %29 to i64, !dbg !9179
  %arrayidx39 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom38, !dbg !9179
  %30 = bitcast %struct.reg_pressure_data* %arrayidx39 to i32*, !dbg !9180
  %bf.load40 = load i32, i32* %30, align 4, !dbg !9181
  %bf.value41 = and i32 %28, 255, !dbg !9181
  %bf.shl42 = shl i32 %bf.value41, 8, !dbg !9181
  %bf.clear43 = and i32 %bf.load40, -65281, !dbg !9181
  %bf.set44 = or i32 %bf.clear43, %bf.shl42, !dbg !9181
  store i32 %bf.set44, i32* %30, align 4, !dbg !9181
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9182
  %32 = load i32, i32* %regno.addr, align 4, !dbg !9184
  %call = call zeroext i8 @insn_use_p(%struct.rtx_def* %31, i32 %32), !dbg !9185
  %tobool45 = icmp ne i8 %call, 0, !dbg !9185
  br i1 %tobool45, label %if.end, label %if.then46, !dbg !9186

if.then46:                                        ; preds = %if.else31
  %33 = load i32, i32* %incr, align 4, !dbg !9187
  %34 = load i32, i32* %cl, align 4, !dbg !9188
  %idxprom47 = zext i32 %34 to i64, !dbg !9189
  %arrayidx48 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom47, !dbg !9189
  %35 = bitcast %struct.reg_pressure_data* %arrayidx48 to i32*, !dbg !9190
  %bf.load49 = load i32, i32* %35, align 4, !dbg !9191
  %bf.ashr = ashr i32 %bf.load49, 24, !dbg !9191
  %add50 = add nsw i32 %bf.ashr, %33, !dbg !9191
  %bf.load51 = load i32, i32* %35, align 4, !dbg !9191
  %bf.value52 = and i32 %add50, 255, !dbg !9191
  %bf.shl53 = shl i32 %bf.value52, 24, !dbg !9191
  %bf.clear54 = and i32 %bf.load51, 16777215, !dbg !9191
  %bf.set55 = or i32 %bf.clear54, %bf.shl53, !dbg !9191
  store i32 %bf.set55, i32* %35, align 4, !dbg !9191
  %bf.result.shl = shl i32 %bf.value52, 24, !dbg !9191
  %bf.result.ashr = ashr i32 %bf.result.shl, 24, !dbg !9191
  br label %if.end, !dbg !9189

if.end:                                           ; preds = %if.then46, %if.else31
  %36 = load i32, i32* %regno.addr, align 4, !dbg !9192
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9193
  %call56 = call %struct.reg_set_data* @create_insn_reg_set(i32 %36, %struct.rtx_def* %37), !dbg !9194
  br label %if.end57

if.end57:                                         ; preds = %if.end, %if.then18
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then8
  %38 = load i32, i32* %new_incr, align 4, !dbg !9195
  %cmp59 = icmp slt i32 %38, 256, !dbg !9195
  br i1 %cmp59, label %cond.false61, label %cond.true60, !dbg !9195

cond.true60:                                      ; preds = %if.end58
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1849, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9195
  br label %cond.end62, !dbg !9195

cond.false61:                                     ; preds = %if.end58
  br label %cond.end62, !dbg !9195

cond.end62:                                       ; preds = %cond.false61, %cond.true60
  %cond63 = phi i32 [ 0, %cond.true60 ], [ 0, %cond.false61 ], !dbg !9195
  br label %if.end64, !dbg !9196

if.end64:                                         ; preds = %cond.end62, %cond.end
  ret void, !dbg !9197
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @insn_use_p(%struct.rtx_def* %insn, i32 %regno) #0 !dbg !9198 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %regno.addr = alloca i32, align 4
  %use = alloca %struct.reg_use_data*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !9203, metadata !DIExpression()), !dbg !9204
  call void @llvm.dbg.declare(metadata %struct.reg_use_data** %use, metadata !9205, metadata !DIExpression()), !dbg !9206
  %0 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9207
  %tobool = icmp ne %struct.VEC_haifa_insn_data_def_heap* %0, null, !dbg !9207
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9207

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9207
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %1, i32 0, i32 0, !dbg !9207
  br label %cond.end, !dbg !9207

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9207

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9207
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9207
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !9207
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9207
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9207
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9207
  %3 = load i32, i32* %rt_int, align 8, !dbg !9207
  %call = call %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %cond, i32 %3), !dbg !9207
  %reg_use_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call, i32 0, i32 15, !dbg !9207
  %4 = load %struct.reg_use_data*, %struct.reg_use_data** %reg_use_list, align 8, !dbg !9207
  store %struct.reg_use_data* %4, %struct.reg_use_data** %use, align 8, !dbg !9209
  br label %for.cond, !dbg !9210

for.cond:                                         ; preds = %for.inc, %cond.end
  %5 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !9211
  %cmp = icmp ne %struct.reg_use_data* %5, null, !dbg !9213
  br i1 %cmp, label %for.body, label %for.end, !dbg !9214

for.body:                                         ; preds = %for.cond
  %6 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !9215
  %regno1 = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %6, i32 0, i32 0, !dbg !9217
  %7 = load i32, i32* %regno1, align 8, !dbg !9217
  %8 = load i32, i32* %regno.addr, align 4, !dbg !9218
  %cmp2 = icmp eq i32 %7, %8, !dbg !9219
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9220

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !9221
  br label %return, !dbg !9221

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9218

for.inc:                                          ; preds = %if.end
  %9 = load %struct.reg_use_data*, %struct.reg_use_data** %use, align 8, !dbg !9222
  %next_insn_use = getelementptr inbounds %struct.reg_use_data, %struct.reg_use_data* %9, i32 0, i32 3, !dbg !9223
  %10 = load %struct.reg_use_data*, %struct.reg_use_data** %next_insn_use, align 8, !dbg !9223
  store %struct.reg_use_data* %10, %struct.reg_use_data** %use, align 8, !dbg !9224
  br label %for.cond, !dbg !9225, !llvm.loop !9226

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !9228
  br label %return, !dbg !9228

return:                                           ; preds = %for.end, %if.then
  %11 = load i8, i8* %retval, align 1, !dbg !9229
  ret i8 %11, !dbg !9229
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.reg_set_data* @create_insn_reg_set(i32 %regno, %struct.rtx_def* %insn) #0 !dbg !9230 {
entry:
  %regno.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.reg_set_data*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !9233, metadata !DIExpression()), !dbg !9234
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9235, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.declare(metadata %struct.reg_set_data** %set, metadata !9237, metadata !DIExpression()), !dbg !9238
  %call = call i8* @xmalloc(i64 24), !dbg !9239
  %0 = bitcast i8* %call to %struct.reg_set_data*, !dbg !9240
  store %struct.reg_set_data* %0, %struct.reg_set_data** %set, align 8, !dbg !9241
  %1 = load i32, i32* %regno.addr, align 4, !dbg !9242
  %2 = load %struct.reg_set_data*, %struct.reg_set_data** %set, align 8, !dbg !9243
  %regno1 = getelementptr inbounds %struct.reg_set_data, %struct.reg_set_data* %2, i32 0, i32 0, !dbg !9244
  store i32 %1, i32* %regno1, align 8, !dbg !9245
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9246
  %4 = load %struct.reg_set_data*, %struct.reg_set_data** %set, align 8, !dbg !9247
  %insn2 = getelementptr inbounds %struct.reg_set_data, %struct.reg_set_data* %4, i32 0, i32 1, !dbg !9248
  store %struct.rtx_def* %3, %struct.rtx_def** %insn2, align 8, !dbg !9249
  %5 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9250
  %tobool = icmp ne %struct.VEC_haifa_insn_data_def_heap* %5, null, !dbg !9250
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9250

cond.true:                                        ; preds = %entry
  %6 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9250
  %base = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %6, i32 0, i32 0, !dbg !9250
  br label %cond.end, !dbg !9250

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9250

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9250
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9250
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !9250
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9250
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9250
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9250
  %8 = load i32, i32* %rt_int, align 8, !dbg !9250
  %call3 = call %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %cond, i32 %8), !dbg !9250
  %reg_set_list = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call3, i32 0, i32 16, !dbg !9250
  %9 = load %struct.reg_set_data*, %struct.reg_set_data** %reg_set_list, align 8, !dbg !9250
  %10 = load %struct.reg_set_data*, %struct.reg_set_data** %set, align 8, !dbg !9251
  %next_insn_set = getelementptr inbounds %struct.reg_set_data, %struct.reg_set_data* %10, i32 0, i32 2, !dbg !9252
  store %struct.reg_set_data* %9, %struct.reg_set_data** %next_insn_set, align 8, !dbg !9253
  %11 = load %struct.reg_set_data*, %struct.reg_set_data** %set, align 8, !dbg !9254
  %12 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9255
  %tobool4 = icmp ne %struct.VEC_haifa_insn_data_def_heap* %12, null, !dbg !9255
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !9255

cond.true5:                                       ; preds = %cond.end
  %13 = load %struct.VEC_haifa_insn_data_def_heap*, %struct.VEC_haifa_insn_data_def_heap** @h_i_d, align 8, !dbg !9255
  %base6 = getelementptr inbounds %struct.VEC_haifa_insn_data_def_heap, %struct.VEC_haifa_insn_data_def_heap* %13, i32 0, i32 0, !dbg !9255
  br label %cond.end8, !dbg !9255

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8, !dbg !9255

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi %struct.VEC_haifa_insn_data_def_base* [ %base6, %cond.true5 ], [ null, %cond.false7 ], !dbg !9255
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9255
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !9255
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !9255
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !9255
  %rt_int13 = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !9255
  %15 = load i32, i32* %rt_int13, align 8, !dbg !9255
  %call14 = call %struct._haifa_insn_data* @VEC_haifa_insn_data_def_base_index(%struct.VEC_haifa_insn_data_def_base* %cond9, i32 %15), !dbg !9255
  %reg_set_list15 = getelementptr inbounds %struct._haifa_insn_data, %struct._haifa_insn_data* %call14, i32 0, i32 16, !dbg !9255
  store %struct.reg_set_data* %11, %struct.reg_set_data** %reg_set_list15, align 8, !dbg !9256
  %16 = load %struct.reg_set_data*, %struct.reg_set_data** %set, align 8, !dbg !9257
  ret %struct.reg_set_data* %16, !dbg !9258
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_hard_regno_death(i32 %regno, i32 %nregs) #0 !dbg !9259 {
entry:
  %regno.addr = alloca i32, align 4
  %nregs.addr = alloca i32, align 4
  %cl = alloca i32, align 4
  %last = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !9262, metadata !DIExpression()), !dbg !9263
  store i32 %nregs, i32* %nregs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nregs.addr, metadata !9264, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !9266, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.declare(metadata i32* %last, metadata !9268, metadata !DIExpression()), !dbg !9269
  %0 = load i32, i32* %regno.addr, align 4, !dbg !9270
  %1 = load i32, i32* %nregs.addr, align 4, !dbg !9271
  %add = add nsw i32 %0, %1, !dbg !9272
  store i32 %add, i32* %last, align 4, !dbg !9269
  br label %while.cond, !dbg !9273

while.cond:                                       ; preds = %if.end7, %entry
  %2 = load i32, i32* %regno.addr, align 4, !dbg !9274
  %3 = load i32, i32* %last, align 4, !dbg !9275
  %cmp = icmp slt i32 %2, %3, !dbg !9276
  br i1 %cmp, label %while.body, label %while.end, !dbg !9273

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %regno.addr, align 4, !dbg !9277
  %cmp1 = icmp slt i32 %4, 53, !dbg !9277
  br i1 %cmp1, label %cond.false, label %cond.true, !dbg !9277

cond.true:                                        ; preds = %while.body
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1946, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9277
  br label %cond.end, !dbg !9277

cond.false:                                       ; preds = %while.body
  br label %cond.end, !dbg !9277

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9277
  %5 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !9279
  %6 = load i32, i32* %regno.addr, align 4, !dbg !9279
  %sh_prom = zext i32 %6 to i64, !dbg !9279
  %shl = shl i64 1, %sh_prom, !dbg !9279
  %and = and i64 %5, %shl, !dbg !9279
  %tobool = icmp ne i64 %and, 0, !dbg !9279
  br i1 %tobool, label %if.end7, label %if.then, !dbg !9281

if.then:                                          ; preds = %cond.end
  %7 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !9282
  %8 = load i32, i32* %regno.addr, align 4, !dbg !9284
  %idxprom = sext i32 %8 to i64, !dbg !9282
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !9282
  %9 = load i32, i32* %arrayidx, align 4, !dbg !9282
  store i32 %9, i32* %cl, align 4, !dbg !9285
  %10 = load i32, i32* %cl, align 4, !dbg !9286
  %cmp2 = icmp ne i32 %10, 0, !dbg !9288
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !9289

if.then3:                                         ; preds = %if.then
  %11 = load i32, i32* %cl, align 4, !dbg !9290
  %idxprom4 = zext i32 %11 to i64, !dbg !9291
  %arrayidx5 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom4, !dbg !9291
  %12 = bitcast %struct.reg_pressure_data* %arrayidx5 to i32*, !dbg !9292
  %bf.load = load i32, i32* %12, align 4, !dbg !9293
  %bf.ashr = ashr i32 %bf.load, 24, !dbg !9293
  %sub = sub nsw i32 %bf.ashr, 1, !dbg !9293
  %bf.load6 = load i32, i32* %12, align 4, !dbg !9293
  %bf.value = and i32 %sub, 255, !dbg !9293
  %bf.shl = shl i32 %bf.value, 24, !dbg !9293
  %bf.clear = and i32 %bf.load6, 16777215, !dbg !9293
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !9293
  store i32 %bf.set, i32* %12, align 4, !dbg !9293
  %bf.result.shl = shl i32 %bf.value, 24, !dbg !9293
  %bf.result.ashr = ashr i32 %bf.result.shl, 24, !dbg !9293
  br label %if.end, !dbg !9291

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end7, !dbg !9294

if.end7:                                          ; preds = %if.end, %cond.end
  %13 = load i32, i32* %regno.addr, align 4, !dbg !9295
  %inc = add nsw i32 %13, 1, !dbg !9295
  store i32 %inc, i32* %regno.addr, align 4, !dbg !9295
  br label %while.cond, !dbg !9273, !llvm.loop !9296

while.end:                                        ; preds = %while.cond
  ret void, !dbg !9298
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_pseudo_death(i32 %regno) #0 !dbg !9299 {
entry:
  %regno.addr = alloca i32, align 4
  %incr = alloca i32, align 4
  %cl = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !9300, metadata !DIExpression()), !dbg !9301
  call void @llvm.dbg.declare(metadata i32* %incr, metadata !9302, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !9304, metadata !DIExpression()), !dbg !9305
  %0 = load i32, i32* %regno.addr, align 4, !dbg !9306
  %cmp = icmp sge i32 %0, 53, !dbg !9306
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !9306

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 1927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9306
  br label %cond.end, !dbg !9306

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9306

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9306
  %1 = load i32*, i32** @sched_regno_cover_class, align 8, !dbg !9307
  %2 = load i32, i32* %regno.addr, align 4, !dbg !9308
  %idxprom = sext i32 %2 to i64, !dbg !9307
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !9307
  %3 = load i32, i32* %arrayidx, align 4, !dbg !9307
  store i32 %3, i32* %cl, align 4, !dbg !9309
  %4 = load i32, i32* %cl, align 4, !dbg !9310
  %cmp1 = icmp ne i32 %4, 0, !dbg !9312
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9313

if.then:                                          ; preds = %cond.end
  %5 = load i32, i32* %cl, align 4, !dbg !9314
  %idxprom2 = zext i32 %5 to i64, !dbg !9316
  %arrayidx3 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %idxprom2, !dbg !9316
  %6 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9317
  %7 = load i32, i32* %regno.addr, align 4, !dbg !9317
  %idxprom4 = sext i32 %7 to i64, !dbg !9317
  %arrayidx5 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %6, i64 %idxprom4, !dbg !9317
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5, align 8, !dbg !9317
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !9317
  %bf.load = load i32, i32* %9, align 8, !dbg !9317
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !9317
  %bf.clear = and i32 %bf.lshr, 255, !dbg !9317
  %idxprom6 = zext i32 %bf.clear to i64, !dbg !9316
  %arrayidx7 = getelementptr inbounds [87 x i32], [87 x i32]* %arrayidx3, i64 0, i64 %idxprom6, !dbg !9316
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !9316
  store i32 %10, i32* %incr, align 4, !dbg !9318
  %11 = load i32, i32* %incr, align 4, !dbg !9319
  %12 = load i32, i32* %cl, align 4, !dbg !9320
  %idxprom8 = zext i32 %12 to i64, !dbg !9321
  %arrayidx9 = getelementptr inbounds [27 x %struct.reg_pressure_data], [27 x %struct.reg_pressure_data]* @reg_pressure_info, i64 0, i64 %idxprom8, !dbg !9321
  %13 = bitcast %struct.reg_pressure_data* %arrayidx9 to i32*, !dbg !9322
  %bf.load10 = load i32, i32* %13, align 4, !dbg !9323
  %bf.ashr = ashr i32 %bf.load10, 24, !dbg !9323
  %sub = sub nsw i32 %bf.ashr, %11, !dbg !9323
  %bf.load11 = load i32, i32* %13, align 4, !dbg !9323
  %bf.value = and i32 %sub, 255, !dbg !9323
  %bf.shl = shl i32 %bf.value, 24, !dbg !9323
  %bf.clear12 = and i32 %bf.load11, 16777215, !dbg !9323
  %bf.set = or i32 %bf.clear12, %bf.shl, !dbg !9323
  store i32 %bf.set, i32* %13, align 4, !dbg !9323
  %bf.result.shl = shl i32 %bf.value, 24, !dbg !9323
  %bf.result.ashr = ashr i32 %bf.result.shl, 24, !dbg !9323
  br label %if.end, !dbg !9324

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !9325
}

declare dso_local void @free_INSN_LIST_node(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @delete_all_dependences(%struct.rtx_def* %insn) #0 !dbg !9326 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %sd_it = alloca %struct._sd_iterator, align 8
  %dep = alloca %struct._dep*, align 8
  %tmp = alloca %struct._sd_iterator, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9327, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.declare(metadata %struct._sd_iterator* %sd_it, metadata !9329, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.declare(metadata %struct._dep** %dep, metadata !9331, metadata !DIExpression()), !dbg !9332
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9333
  call void @sd_iterator_start(%struct._sd_iterator* sret %tmp, %struct.rtx_def* %0, i32 3), !dbg !9335
  %1 = bitcast %struct._sd_iterator* %sd_it to i8*, !dbg !9335
  %2 = bitcast %struct._sd_iterator* %tmp to i8*, !dbg !9335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 32, i1 false), !dbg !9335
  br label %for.cond, !dbg !9336

for.cond:                                         ; preds = %for.body, %entry
  %call = call zeroext i8 @sd_iterator_cond(%struct._sd_iterator* %sd_it, %struct._dep** %dep), !dbg !9337
  %tobool = icmp ne i8 %call, 0, !dbg !9339
  br i1 %tobool, label %for.body, label %for.end, !dbg !9339

for.body:                                         ; preds = %for.cond
  call void @sd_delete_dep(%struct._sd_iterator* byval(%struct._sd_iterator) align 8 %sd_it), !dbg !9340
  br label %for.cond, !dbg !9341, !llvm.loop !9342

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9344
}

declare dso_local %struct.rtx_def* @remove_free_INSN_LIST_node(%struct.rtx_def**) #2

declare dso_local %struct.rtx_def* @remove_free_EXPR_LIST_node(%struct.rtx_def**) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_haifa_deps_insn_data_def_base_length(%struct.VEC_haifa_deps_insn_data_def_base* %vec_) #0 !dbg !9345 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_deps_insn_data_def_base*, align 8
  store %struct.VEC_haifa_deps_insn_data_def_base* %vec_, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, metadata !9350, metadata !DIExpression()), !dbg !9351
  %0 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !9351
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_base* %0, null, !dbg !9351
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9351

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !9351
  %num = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %1, i32 0, i32 0, !dbg !9351
  %2 = load i32, i32* %num, align 8, !dbg !9351
  br label %cond.end, !dbg !9351

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !9351
  ret i32 %cond, !dbg !9351
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_haifa_deps_insn_data_def_base_space(%struct.VEC_haifa_deps_insn_data_def_base* %vec_, i32 %alloc_) #0 !dbg !9352 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_deps_insn_data_def_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_haifa_deps_insn_data_def_base* %vec_, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !9357, metadata !DIExpression()), !dbg !9356
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !9356
  %cmp = icmp sge i32 %0, 0, !dbg !9356
  %conv = zext i1 %cmp to i32, !dbg !9356
  %1 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !9356
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_base* %1, null, !dbg !9356
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9356

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !9356
  %alloc = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %2, i32 0, i32 1, !dbg !9356
  %3 = load i32, i32* %alloc, align 4, !dbg !9356
  %4 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !9356
  %num = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %4, i32 0, i32 0, !dbg !9356
  %5 = load i32, i32* %num, align 8, !dbg !9356
  %sub = sub i32 %3, %5, !dbg !9356
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !9356
  %cmp1 = icmp uge i32 %sub, %6, !dbg !9356
  %conv2 = zext i1 %cmp1 to i32, !dbg !9356
  br label %cond.end, !dbg !9356

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !9356
  %tobool3 = icmp ne i32 %7, 0, !dbg !9356
  %lnot = xor i1 %tobool3, true, !dbg !9356
  %lnot.ext = zext i1 %lnot to i32, !dbg !9356
  br label %cond.end, !dbg !9356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !9356
  ret i32 %cond, !dbg !9356
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared(%struct.VEC_haifa_deps_insn_data_def_heap** %vec_, i32 %size_) #0 !dbg !9358 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_deps_insn_data_def_heap**, align 8
  %size_.addr = alloca i32, align 4
  %oldsize = alloca i32, align 4
  store %struct.VEC_haifa_deps_insn_data_def_heap** %vec_, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, metadata !9361, metadata !DIExpression()), !dbg !9362
  store i32 %size_, i32* %size_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size_.addr, metadata !9363, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.declare(metadata i32* %oldsize, metadata !9364, metadata !DIExpression()), !dbg !9362
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9362
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %0, align 8, !dbg !9362
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %1, null, !dbg !9362
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9362

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9362
  %3 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %2, align 8, !dbg !9362
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %3, i32 0, i32 0, !dbg !9362
  br label %cond.end, !dbg !9362

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9362

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9362
  %call = call i32 @VEC_haifa_deps_insn_data_def_base_length(%struct.VEC_haifa_deps_insn_data_def_base* %cond), !dbg !9362
  store i32 %call, i32* %oldsize, align 4, !dbg !9362
  %4 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9362
  %5 = load i32, i32* %size_.addr, align 4, !dbg !9362
  call void @VEC_haifa_deps_insn_data_def_heap_safe_grow(%struct.VEC_haifa_deps_insn_data_def_heap** %4, i32 %5), !dbg !9362
  %6 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9362
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %6, align 8, !dbg !9362
  %tobool1 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %7, null, !dbg !9362
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !9362

cond.true2:                                       ; preds = %cond.end
  %8 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9362
  %9 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %8, align 8, !dbg !9362
  %base3 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %9, i32 0, i32 0, !dbg !9362
  br label %cond.end5, !dbg !9362

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !9362

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base3, %cond.true2 ], [ null, %cond.false4 ], !dbg !9362
  %call7 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_address(%struct.VEC_haifa_deps_insn_data_def_base* %cond6), !dbg !9362
  %10 = load i32, i32* %oldsize, align 4, !dbg !9362
  %idxprom = sext i32 %10 to i64, !dbg !9362
  %arrayidx = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call7, i64 %idxprom, !dbg !9362
  %11 = bitcast %struct._haifa_deps_insn_data* %arrayidx to i8*, !dbg !9362
  %12 = load i32, i32* %size_.addr, align 4, !dbg !9362
  %13 = load i32, i32* %oldsize, align 4, !dbg !9362
  %sub = sub nsw i32 %12, %13, !dbg !9362
  %conv = sext i32 %sub to i64, !dbg !9362
  %mul = mul i64 56, %conv, !dbg !9362
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 %mul, i1 false), !dbg !9362
  ret void, !dbg !9362
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_haifa_deps_insn_data_def_heap_safe_grow(%struct.VEC_haifa_deps_insn_data_def_heap** %vec_, i32 %size_) #0 !dbg !9365 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_deps_insn_data_def_heap**, align 8
  %size_.addr = alloca i32, align 4
  store %struct.VEC_haifa_deps_insn_data_def_heap** %vec_, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  store i32 %size_, i32* %size_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size_.addr, metadata !9368, metadata !DIExpression()), !dbg !9367
  %0 = load i32, i32* %size_.addr, align 4, !dbg !9367
  %cmp = icmp sge i32 %0, 0, !dbg !9367
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9367

land.rhs:                                         ; preds = %entry
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9367
  %2 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %1, align 8, !dbg !9367
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %2, null, !dbg !9367
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9367

cond.true:                                        ; preds = %land.rhs
  %3 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9367
  %4 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %3, align 8, !dbg !9367
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %4, i32 0, i32 0, !dbg !9367
  br label %cond.end, !dbg !9367

cond.false:                                       ; preds = %land.rhs
  br label %cond.end, !dbg !9367

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9367
  %call = call i32 @VEC_haifa_deps_insn_data_def_base_length(%struct.VEC_haifa_deps_insn_data_def_base* %cond), !dbg !9367
  %5 = load i32, i32* %size_.addr, align 4, !dbg !9367
  %cmp1 = icmp ule i32 %call, %5, !dbg !9367
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %cond.end ], !dbg !9369
  %land.ext = zext i1 %6 to i32, !dbg !9367
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9367
  %8 = load i32, i32* %size_.addr, align 4, !dbg !9367
  %9 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9367
  %10 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %9, align 8, !dbg !9367
  %tobool2 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %10, null, !dbg !9367
  br i1 %tobool2, label %cond.true3, label %cond.false10, !dbg !9367

cond.true3:                                       ; preds = %land.end
  %11 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9367
  %12 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %11, align 8, !dbg !9367
  %tobool4 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %12, null, !dbg !9367
  br i1 %tobool4, label %cond.true5, label %cond.false7, !dbg !9367

cond.true5:                                       ; preds = %cond.true3
  %13 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9367
  %14 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %13, align 8, !dbg !9367
  %base6 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %14, i32 0, i32 0, !dbg !9367
  br label %cond.end8, !dbg !9367

cond.false7:                                      ; preds = %cond.true3
  br label %cond.end8, !dbg !9367

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base6, %cond.true5 ], [ null, %cond.false7 ], !dbg !9367
  %num = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %cond9, i32 0, i32 0, !dbg !9367
  %15 = load i32, i32* %num, align 8, !dbg !9367
  br label %cond.end11, !dbg !9367

cond.false10:                                     ; preds = %land.end
  br label %cond.end11, !dbg !9367

cond.end11:                                       ; preds = %cond.false10, %cond.end8
  %cond12 = phi i32 [ %15, %cond.end8 ], [ 0, %cond.false10 ], !dbg !9367
  %sub = sub nsw i32 %8, %cond12, !dbg !9367
  %call13 = call i32 @VEC_haifa_deps_insn_data_def_heap_reserve_exact(%struct.VEC_haifa_deps_insn_data_def_heap** %7, i32 %sub), !dbg !9367
  %16 = load i32, i32* %size_.addr, align 4, !dbg !9367
  %17 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9367
  %18 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %17, align 8, !dbg !9367
  %tobool14 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %18, null, !dbg !9367
  br i1 %tobool14, label %cond.true15, label %cond.false17, !dbg !9367

cond.true15:                                      ; preds = %cond.end11
  %19 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9367
  %20 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %19, align 8, !dbg !9367
  %base16 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %20, i32 0, i32 0, !dbg !9367
  br label %cond.end18, !dbg !9367

cond.false17:                                     ; preds = %cond.end11
  br label %cond.end18, !dbg !9367

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base16, %cond.true15 ], [ null, %cond.false17 ], !dbg !9367
  %num20 = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %cond19, i32 0, i32 0, !dbg !9367
  store i32 %16, i32* %num20, align 8, !dbg !9367
  ret void, !dbg !9367
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_address(%struct.VEC_haifa_deps_insn_data_def_base* %vec_) #0 !dbg !9370 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_deps_insn_data_def_base*, align 8
  store %struct.VEC_haifa_deps_insn_data_def_base* %vec_, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  %0 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !9374
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_base* %0, null, !dbg !9374
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9374

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_haifa_deps_insn_data_def_base*, %struct.VEC_haifa_deps_insn_data_def_base** %vec_.addr, align 8, !dbg !9374
  %vec = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_base, %struct.VEC_haifa_deps_insn_data_def_base* %1, i32 0, i32 2, !dbg !9374
  %arraydecay = getelementptr inbounds [1 x %struct._haifa_deps_insn_data], [1 x %struct._haifa_deps_insn_data]* %vec, i64 0, i64 0, !dbg !9374
  br label %cond.end, !dbg !9374

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9374

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._haifa_deps_insn_data* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !9374
  ret %struct._haifa_deps_insn_data* %cond, !dbg !9374
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_haifa_deps_insn_data_def_heap_reserve_exact(%struct.VEC_haifa_deps_insn_data_def_heap** %vec_, i32 %alloc_) #0 !dbg !9375 {
entry:
  %vec_.addr = alloca %struct.VEC_haifa_deps_insn_data_def_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_haifa_deps_insn_data_def_heap** %vec_, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, metadata !9378, metadata !DIExpression()), !dbg !9379
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !9380, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !9381, metadata !DIExpression()), !dbg !9379
  %0 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9379
  %1 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %0, align 8, !dbg !9379
  %tobool = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %1, null, !dbg !9379
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9379

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9379
  %3 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %2, align 8, !dbg !9379
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %3, i32 0, i32 0, !dbg !9379
  br label %cond.end, !dbg !9379

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9379

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9379
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !9379
  %call = call i32 @VEC_haifa_deps_insn_data_def_base_space(%struct.VEC_haifa_deps_insn_data_def_base* %cond, i32 %4), !dbg !9379
  %tobool1 = icmp ne i32 %call, 0, !dbg !9379
  %lnot = xor i1 %tobool1, true, !dbg !9379
  %lnot.ext = zext i1 %lnot to i32, !dbg !9379
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !9379
  %5 = load i32, i32* %extend, align 4, !dbg !9382
  %tobool2 = icmp ne i32 %5, 0, !dbg !9382
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9379

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9382
  %7 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** %6, align 8, !dbg !9382
  %8 = bitcast %struct.VEC_haifa_deps_insn_data_def_heap* %7 to i8*, !dbg !9382
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !9382
  %call3 = call i8* @vec_heap_o_reserve_exact(i8* %8, i32 %9, i64 8, i64 56), !dbg !9382
  %10 = bitcast i8* %call3 to %struct.VEC_haifa_deps_insn_data_def_heap*, !dbg !9382
  %11 = load %struct.VEC_haifa_deps_insn_data_def_heap**, %struct.VEC_haifa_deps_insn_data_def_heap*** %vec_.addr, align 8, !dbg !9382
  store %struct.VEC_haifa_deps_insn_data_def_heap* %10, %struct.VEC_haifa_deps_insn_data_def_heap** %11, align 8, !dbg !9382
  br label %if.end, !dbg !9382

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !9379
  ret i32 %12, !dbg !9379
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @maybe_add_or_update_dep_1(%struct._dep* %dep, i8 zeroext %resolved_p, %struct.rtx_def* %mem1, %struct.rtx_def* %mem2) #0 !dbg !9384 {
entry:
  %retval = alloca i32, align 4
  %dep.addr = alloca %struct._dep*, align 8
  %resolved_p.addr = alloca i8, align 1
  %mem1.addr = alloca %struct.rtx_def*, align 8
  %mem2.addr = alloca %struct.rtx_def*, align 8
  %elem = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct._dep* %dep, %struct._dep** %dep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._dep** %dep.addr, metadata !9385, metadata !DIExpression()), !dbg !9386
  store i8 %resolved_p, i8* %resolved_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resolved_p.addr, metadata !9387, metadata !DIExpression()), !dbg !9388
  store %struct.rtx_def* %mem1, %struct.rtx_def** %mem1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem1.addr, metadata !9389, metadata !DIExpression()), !dbg !9390
  store %struct.rtx_def* %mem2, %struct.rtx_def** %mem2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem2.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elem, metadata !9393, metadata !DIExpression()), !dbg !9394
  %0 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !9395
  %pro = getelementptr inbounds %struct._dep, %struct._dep* %0, i32 0, i32 0, !dbg !9395
  %1 = load %struct.rtx_def*, %struct.rtx_def** %pro, align 8, !dbg !9395
  store %struct.rtx_def* %1, %struct.rtx_def** %elem, align 8, !dbg !9394
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !9396, metadata !DIExpression()), !dbg !9397
  %2 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !9398
  %con = getelementptr inbounds %struct._dep, %struct._dep* %2, i32 0, i32 1, !dbg !9398
  %3 = load %struct.rtx_def*, %struct.rtx_def** %con, align 8, !dbg !9398
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8, !dbg !9397
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9399
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !9399
  %bf.load = load i32, i32* %5, align 8, !dbg !9399
  %bf.clear = and i32 %bf.load, 65535, !dbg !9399
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !9399
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !9399

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9399
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !9399
  %bf.load1 = load i32, i32* %7, align 8, !dbg !9399
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !9399
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !9399
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !9399

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9399
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !9399
  %bf.load5 = load i32, i32* %9, align 8, !dbg !9399
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !9399
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !9399
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !9399

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9399
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !9399
  %bf.load9 = load i32, i32* %11, align 8, !dbg !9399
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !9399
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !9399
  br i1 %cmp11, label %land.lhs.true, label %cond.true, !dbg !9399

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !9399
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !9399
  %bf.load12 = load i32, i32* %13, align 8, !dbg !9399
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !9399
  %cmp14 = icmp eq i32 %bf.clear13, 8, !dbg !9399
  br i1 %cmp14, label %cond.false, label %lor.lhs.false15, !dbg !9399

lor.lhs.false15:                                  ; preds = %land.lhs.true
  %14 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !9399
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !9399
  %bf.load16 = load i32, i32* %15, align 8, !dbg !9399
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !9399
  %cmp18 = icmp eq i32 %bf.clear17, 7, !dbg !9399
  br i1 %cmp18, label %cond.false, label %lor.lhs.false19, !dbg !9399

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %16 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !9399
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !9399
  %bf.load20 = load i32, i32* %17, align 8, !dbg !9399
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !9399
  %cmp22 = icmp eq i32 %bf.clear21, 9, !dbg !9399
  br i1 %cmp22, label %cond.false, label %lor.lhs.false23, !dbg !9399

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %18 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !9399
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !9399
  %bf.load24 = load i32, i32* %19, align 8, !dbg !9399
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !9399
  %cmp26 = icmp eq i32 %bf.clear25, 10, !dbg !9399
  br i1 %cmp26, label %cond.false, label %cond.true, !dbg !9399

cond.true:                                        ; preds = %lor.lhs.false23, %lor.lhs.false8
  call void @fancy_abort(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 849, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9399
  br label %cond.end, !dbg !9399

cond.false:                                       ; preds = %lor.lhs.false23, %lor.lhs.false19, %lor.lhs.false15, %land.lhs.true
  br label %cond.end, !dbg !9399

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9399
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9400
  %21 = load %struct.rtx_def*, %struct.rtx_def** %elem, align 8, !dbg !9402
  %cmp27 = icmp eq %struct.rtx_def* %20, %21, !dbg !9403
  br i1 %cmp27, label %if.then, label %if.end43, !dbg !9404

if.then:                                          ; preds = %cond.end
  %22 = load %struct.sched_deps_info_def*, %struct.sched_deps_info_def** @sched_deps_info, align 8, !dbg !9405
  %generate_spec_deps = getelementptr inbounds %struct.sched_deps_info_def, %struct.sched_deps_info_def* %22, i32 0, i32 12, !dbg !9408
  %bf.load28 = load i8, i8* %generate_spec_deps, align 8, !dbg !9408
  %bf.lshr = lshr i8 %bf.load28, 2, !dbg !9408
  %bf.clear29 = and i8 %bf.lshr, 1, !dbg !9408
  %bf.cast = zext i8 %bf.clear29 to i32, !dbg !9408
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9405
  br i1 %tobool, label %if.then30, label %if.end, !dbg !9409

if.then30:                                        ; preds = %if.then
  %23 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !9410
  %tobool31 = icmp ne %struct.VEC_haifa_deps_insn_data_def_heap* %23, null, !dbg !9410
  br i1 %tobool31, label %cond.true32, label %cond.false33, !dbg !9410

cond.true32:                                      ; preds = %if.then30
  %24 = load %struct.VEC_haifa_deps_insn_data_def_heap*, %struct.VEC_haifa_deps_insn_data_def_heap** @h_d_i_d, align 8, !dbg !9410
  %base = getelementptr inbounds %struct.VEC_haifa_deps_insn_data_def_heap, %struct.VEC_haifa_deps_insn_data_def_heap* %24, i32 0, i32 0, !dbg !9410
  br label %cond.end34, !dbg !9410

cond.false33:                                     ; preds = %if.then30
  br label %cond.end34, !dbg !9410

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond35 = phi %struct.VEC_haifa_deps_insn_data_def_base* [ %base, %cond.true32 ], [ null, %cond.false33 ], !dbg !9410
  %25 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9410
  %tobool36 = icmp ne %struct.VEC_int_heap* %25, null, !dbg !9410
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !9410

cond.true37:                                      ; preds = %cond.end34
  %26 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** @sched_luids, align 8, !dbg !9410
  %base38 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %26, i32 0, i32 0, !dbg !9410
  br label %cond.end40, !dbg !9410

cond.false39:                                     ; preds = %cond.end34
  br label %cond.end40, !dbg !9410

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi %struct.VEC_int_base* [ %base38, %cond.true37 ], [ null, %cond.false39 ], !dbg !9410
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9410
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !9410
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9410
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9410
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9410
  %28 = load i32, i32* %rt_int, align 8, !dbg !9410
  %call = call i32 @VEC_int_base_index(%struct.VEC_int_base* %cond41, i32 %28), !dbg !9410
  %call42 = call %struct._haifa_deps_insn_data* @VEC_haifa_deps_insn_data_def_base_index(%struct.VEC_haifa_deps_insn_data_def_base* %cond35, i32 %call), !dbg !9410
  %has_internal_dep = getelementptr inbounds %struct._haifa_deps_insn_data, %struct._haifa_deps_insn_data* %call42, i32 0, i32 1, !dbg !9410
  store i32 1, i32* %has_internal_dep, align 4, !dbg !9411
  br label %if.end, !dbg !9410

if.end:                                           ; preds = %cond.end40, %if.then
  store i32 0, i32* %retval, align 4, !dbg !9412
  br label %return, !dbg !9412

if.end43:                                         ; preds = %cond.end
  %29 = load %struct._dep*, %struct._dep** %dep.addr, align 8, !dbg !9413
  %30 = load i8, i8* %resolved_p.addr, align 1, !dbg !9414
  %31 = load %struct.rtx_def*, %struct.rtx_def** %mem1.addr, align 8, !dbg !9415
  %32 = load %struct.rtx_def*, %struct.rtx_def** %mem2.addr, align 8, !dbg !9416
  %call44 = call i32 @add_or_update_dep_1(%struct._dep* %29, i8 zeroext %30, %struct.rtx_def* %31, %struct.rtx_def* %32), !dbg !9417
  store i32 %call44, i32* %retval, align 4, !dbg !9418
  br label %return, !dbg !9418

return:                                           ; preds = %if.end43, %if.end
  %33 = load i32, i32* %retval, align 4, !dbg !9419
  ret i32 %33, !dbg !9419
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2193, !2194, !2195}
!llvm.ident = !{!2196}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "h_d_i_d", scope: !2, file: !3, line: 59, type: !2050, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !808, globals: !2073, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "sched-deps.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !419, !426, !434, !576, !582, !587, !592, !715, !731, !736, !750, !765, !772, !802}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !385, line: 836, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418}
!387 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!419 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SPEC_TYPES_OFFSETS", file: !420, line: 958, baseType: !7, size: 32, elements: !421)
!420 = !DIFile(filename: "./sched-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!421 = !{!422, !423, !424, !425}
!422 = !DIEnumerator(name: "BEGIN_DATA_BITS_OFFSET", value: 0, isUnsigned: true)
!423 = !DIEnumerator(name: "BE_IN_DATA_BITS_OFFSET", value: 6, isUnsigned: true)
!424 = !DIEnumerator(name: "BEGIN_CONTROL_BITS_OFFSET", value: 12, isUnsigned: true)
!425 = !DIEnumerator(name: "BE_IN_CONTROL_BITS_OFFSET", value: 18, isUnsigned: true)
!426 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SCHED_FLAGS", file: !420, line: 1029, baseType: !7, size: 32, elements: !427)
!427 = !{!428, !429, !430, !431, !432, !433}
!428 = !DIEnumerator(name: "USE_DEPS_LIST", value: 1, isUnsigned: true)
!429 = !DIEnumerator(name: "DO_SPECULATION", value: 2, isUnsigned: true)
!430 = !DIEnumerator(name: "SCHED_RGN", value: 4, isUnsigned: true)
!431 = !DIEnumerator(name: "SCHED_EBB", value: 8, isUnsigned: true)
!432 = !DIEnumerator(name: "NEW_BBS", value: 16, isUnsigned: true)
!433 = !DIEnumerator(name: "SEL_SCHED", value: 32, isUnsigned: true)
!434 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !385, line: 45, baseType: !7, size: 32, elements: !435)
!435 = !{!436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575}
!436 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!437 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!438 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!439 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!440 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!441 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!442 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!443 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!444 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!445 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!446 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!447 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!448 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!449 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!450 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!451 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!452 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!453 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!454 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!455 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!456 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!457 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!458 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!459 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!460 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!461 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!462 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!463 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!464 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!465 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!466 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!467 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!468 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!469 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!470 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!471 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!472 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!473 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!474 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!475 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!476 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!477 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!478 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!479 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!480 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!481 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!482 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!483 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!484 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!485 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!486 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!487 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!488 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!489 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!490 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!491 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!492 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!493 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!494 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!495 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!496 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!497 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!498 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!499 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!500 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!501 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!502 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!503 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!504 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!505 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!506 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!507 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!508 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!509 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!510 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!511 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!512 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!513 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!514 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!515 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!516 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!517 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!518 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!519 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!520 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!521 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!522 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!523 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!524 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!525 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!526 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!527 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!528 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!529 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!530 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!531 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!532 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!533 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!534 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!535 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!536 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!537 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!538 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!539 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!540 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!541 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!542 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!543 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!544 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!545 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!546 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!547 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!548 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!549 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!550 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!551 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!552 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!553 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!554 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!555 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!556 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!557 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!558 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!559 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!560 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!561 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!562 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!563 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!564 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!565 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!566 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!567 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!568 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!569 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!570 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!571 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!572 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!573 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!574 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!575 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!576 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DEPS_ADJUST_RESULT", file: !420, line: 1016, baseType: !7, size: 32, elements: !577)
!577 = !{!578, !579, !580, !581}
!578 = !DIEnumerator(name: "DEP_NODEP", value: 0, isUnsigned: true)
!579 = !DIEnumerator(name: "DEP_PRESENT", value: 1, isUnsigned: true)
!580 = !DIEnumerator(name: "DEP_CHANGED", value: 2, isUnsigned: true)
!581 = !DIEnumerator(name: "DEP_CREATED", value: 3, isUnsigned: true)
!582 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "post_call_group", file: !420, line: 432, baseType: !7, size: 32, elements: !583)
!583 = !{!584, !585, !586}
!584 = !DIEnumerator(name: "not_post_call", value: 0, isUnsigned: true)
!585 = !DIEnumerator(name: "post_call", value: 1, isUnsigned: true)
!586 = !DIEnumerator(name: "post_call_initial", value: 2, isUnsigned: true)
!587 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_pending_barrier_mode", file: !420, line: 424, baseType: !7, size: 32, elements: !588)
!588 = !{!589, !590, !591}
!589 = !DIEnumerator(name: "NOT_A_BARRIER", value: 0, isUnsigned: true)
!590 = !DIEnumerator(name: "MOVE_BARRIER", value: 1, isUnsigned: true)
!591 = !DIEnumerator(name: "TRUE_BARRIER", value: 2, isUnsigned: true)
!592 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "compiler_param", file: !593, line: 82, baseType: !7, size: 32, elements: !594)
!593 = !DIFile(filename: "./params.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!594 = !{!595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714}
!595 = !DIEnumerator(name: "PARAM_STRUCT_REORG_COLD_STRUCT_RATIO", value: 0, isUnsigned: true)
!596 = !DIEnumerator(name: "PARAM_PREDICTABLE_BRANCH_OUTCOME", value: 1, isUnsigned: true)
!597 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_SINGLE", value: 2, isUnsigned: true)
!598 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_AUTO", value: 3, isUnsigned: true)
!599 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_RECURSIVE", value: 4, isUnsigned: true)
!600 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_RECURSIVE_AUTO", value: 5, isUnsigned: true)
!601 = !DIEnumerator(name: "PARAM_MAX_INLINE_RECURSIVE_DEPTH", value: 6, isUnsigned: true)
!602 = !DIEnumerator(name: "PARAM_MAX_INLINE_RECURSIVE_DEPTH_AUTO", value: 7, isUnsigned: true)
!603 = !DIEnumerator(name: "PARAM_MIN_INLINE_RECURSIVE_PROBABILITY", value: 8, isUnsigned: true)
!604 = !DIEnumerator(name: "PARAM_EARLY_INLINER_MAX_ITERATIONS", value: 9, isUnsigned: true)
!605 = !DIEnumerator(name: "PARAM_MAX_VARIABLE_EXPANSIONS", value: 10, isUnsigned: true)
!606 = !DIEnumerator(name: "PARAM_MIN_VECT_LOOP_BOUND", value: 11, isUnsigned: true)
!607 = !DIEnumerator(name: "PARAM_MAX_DELAY_SLOT_INSN_SEARCH", value: 12, isUnsigned: true)
!608 = !DIEnumerator(name: "PARAM_MAX_DELAY_SLOT_LIVE_SEARCH", value: 13, isUnsigned: true)
!609 = !DIEnumerator(name: "PARAM_MAX_PENDING_LIST_LENGTH", value: 14, isUnsigned: true)
!610 = !DIEnumerator(name: "PARAM_LARGE_FUNCTION_INSNS", value: 15, isUnsigned: true)
!611 = !DIEnumerator(name: "PARAM_LARGE_FUNCTION_GROWTH", value: 16, isUnsigned: true)
!612 = !DIEnumerator(name: "PARAM_LARGE_UNIT_INSNS", value: 17, isUnsigned: true)
!613 = !DIEnumerator(name: "PARAM_INLINE_UNIT_GROWTH", value: 18, isUnsigned: true)
!614 = !DIEnumerator(name: "PARAM_IPCP_UNIT_GROWTH", value: 19, isUnsigned: true)
!615 = !DIEnumerator(name: "PARAM_EARLY_INLINING_INSNS", value: 20, isUnsigned: true)
!616 = !DIEnumerator(name: "PARAM_LARGE_STACK_FRAME", value: 21, isUnsigned: true)
!617 = !DIEnumerator(name: "PARAM_STACK_FRAME_GROWTH", value: 22, isUnsigned: true)
!618 = !DIEnumerator(name: "PARAM_MAX_GCSE_MEMORY", value: 23, isUnsigned: true)
!619 = !DIEnumerator(name: "PARAM_GCSE_AFTER_RELOAD_PARTIAL_FRACTION", value: 24, isUnsigned: true)
!620 = !DIEnumerator(name: "PARAM_GCSE_AFTER_RELOAD_CRITICAL_FRACTION", value: 25, isUnsigned: true)
!621 = !DIEnumerator(name: "PARAM_MAX_UNROLLED_INSNS", value: 26, isUnsigned: true)
!622 = !DIEnumerator(name: "PARAM_MAX_AVERAGE_UNROLLED_INSNS", value: 27, isUnsigned: true)
!623 = !DIEnumerator(name: "PARAM_MAX_UNROLL_TIMES", value: 28, isUnsigned: true)
!624 = !DIEnumerator(name: "PARAM_MAX_PEELED_INSNS", value: 29, isUnsigned: true)
!625 = !DIEnumerator(name: "PARAM_MAX_PEEL_TIMES", value: 30, isUnsigned: true)
!626 = !DIEnumerator(name: "PARAM_MAX_COMPLETELY_PEELED_INSNS", value: 31, isUnsigned: true)
!627 = !DIEnumerator(name: "PARAM_MAX_COMPLETELY_PEEL_TIMES", value: 32, isUnsigned: true)
!628 = !DIEnumerator(name: "PARAM_MAX_ONCE_PEELED_INSNS", value: 33, isUnsigned: true)
!629 = !DIEnumerator(name: "PARAM_MAX_UNROLL_ITERATIONS", value: 34, isUnsigned: true)
!630 = !DIEnumerator(name: "PARAM_MAX_UNSWITCH_INSNS", value: 35, isUnsigned: true)
!631 = !DIEnumerator(name: "PARAM_MAX_UNSWITCH_LEVEL", value: 36, isUnsigned: true)
!632 = !DIEnumerator(name: "PARAM_MAX_ITERATIONS_TO_TRACK", value: 37, isUnsigned: true)
!633 = !DIEnumerator(name: "PARAM_MAX_ITERATIONS_COMPUTATION_COST", value: 38, isUnsigned: true)
!634 = !DIEnumerator(name: "PARAM_SMS_MAX_II_FACTOR", value: 39, isUnsigned: true)
!635 = !DIEnumerator(name: "PARAM_SMS_DFA_HISTORY", value: 40, isUnsigned: true)
!636 = !DIEnumerator(name: "PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD", value: 41, isUnsigned: true)
!637 = !DIEnumerator(name: "HOT_BB_COUNT_FRACTION", value: 42, isUnsigned: true)
!638 = !DIEnumerator(name: "HOT_BB_FREQUENCY_FRACTION", value: 43, isUnsigned: true)
!639 = !DIEnumerator(name: "PARAM_ALIGN_THRESHOLD", value: 44, isUnsigned: true)
!640 = !DIEnumerator(name: "PARAM_ALIGN_LOOP_ITERATIONS", value: 45, isUnsigned: true)
!641 = !DIEnumerator(name: "PARAM_MAX_PREDICTED_ITERATIONS", value: 46, isUnsigned: true)
!642 = !DIEnumerator(name: "TRACER_DYNAMIC_COVERAGE_FEEDBACK", value: 47, isUnsigned: true)
!643 = !DIEnumerator(name: "TRACER_DYNAMIC_COVERAGE", value: 48, isUnsigned: true)
!644 = !DIEnumerator(name: "TRACER_MAX_CODE_GROWTH", value: 49, isUnsigned: true)
!645 = !DIEnumerator(name: "TRACER_MIN_BRANCH_RATIO", value: 50, isUnsigned: true)
!646 = !DIEnumerator(name: "TRACER_MIN_BRANCH_PROBABILITY_FEEDBACK", value: 51, isUnsigned: true)
!647 = !DIEnumerator(name: "TRACER_MIN_BRANCH_PROBABILITY", value: 52, isUnsigned: true)
!648 = !DIEnumerator(name: "PARAM_MAX_CROSSJUMP_EDGES", value: 53, isUnsigned: true)
!649 = !DIEnumerator(name: "PARAM_MIN_CROSSJUMP_INSNS", value: 54, isUnsigned: true)
!650 = !DIEnumerator(name: "PARAM_MAX_GROW_COPY_BB_INSNS", value: 55, isUnsigned: true)
!651 = !DIEnumerator(name: "PARAM_MAX_GOTO_DUPLICATION_INSNS", value: 56, isUnsigned: true)
!652 = !DIEnumerator(name: "PARAM_MAX_CSE_PATH_LENGTH", value: 57, isUnsigned: true)
!653 = !DIEnumerator(name: "PARAM_MAX_CSE_INSNS", value: 58, isUnsigned: true)
!654 = !DIEnumerator(name: "PARAM_LIM_EXPENSIVE", value: 59, isUnsigned: true)
!655 = !DIEnumerator(name: "PARAM_IV_CONSIDER_ALL_CANDIDATES_BOUND", value: 60, isUnsigned: true)
!656 = !DIEnumerator(name: "PARAM_IV_MAX_CONSIDERED_USES", value: 61, isUnsigned: true)
!657 = !DIEnumerator(name: "PARAM_IV_ALWAYS_PRUNE_CAND_SET_BOUND", value: 62, isUnsigned: true)
!658 = !DIEnumerator(name: "PARAM_SCEV_MAX_EXPR_SIZE", value: 63, isUnsigned: true)
!659 = !DIEnumerator(name: "PARAM_OMEGA_MAX_VARS", value: 64, isUnsigned: true)
!660 = !DIEnumerator(name: "PARAM_OMEGA_MAX_GEQS", value: 65, isUnsigned: true)
!661 = !DIEnumerator(name: "PARAM_OMEGA_MAX_EQS", value: 66, isUnsigned: true)
!662 = !DIEnumerator(name: "PARAM_OMEGA_MAX_WILD_CARDS", value: 67, isUnsigned: true)
!663 = !DIEnumerator(name: "PARAM_OMEGA_HASH_TABLE_SIZE", value: 68, isUnsigned: true)
!664 = !DIEnumerator(name: "PARAM_OMEGA_MAX_KEYS", value: 69, isUnsigned: true)
!665 = !DIEnumerator(name: "PARAM_OMEGA_ELIMINATE_REDUNDANT_CONSTRAINTS", value: 70, isUnsigned: true)
!666 = !DIEnumerator(name: "PARAM_VECT_MAX_VERSION_FOR_ALIGNMENT_CHECKS", value: 71, isUnsigned: true)
!667 = !DIEnumerator(name: "PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS", value: 72, isUnsigned: true)
!668 = !DIEnumerator(name: "PARAM_MAX_CSELIB_MEMORY_LOCATIONS", value: 73, isUnsigned: true)
!669 = !DIEnumerator(name: "GGC_MIN_EXPAND", value: 74, isUnsigned: true)
!670 = !DIEnumerator(name: "GGC_MIN_HEAPSIZE", value: 75, isUnsigned: true)
!671 = !DIEnumerator(name: "PARAM_MAX_RELOAD_SEARCH_INSNS", value: 76, isUnsigned: true)
!672 = !DIEnumerator(name: "PARAM_MAX_SCHED_REGION_BLOCKS", value: 77, isUnsigned: true)
!673 = !DIEnumerator(name: "PARAM_MAX_SCHED_REGION_INSNS", value: 78, isUnsigned: true)
!674 = !DIEnumerator(name: "PARAM_MAX_PIPELINE_REGION_BLOCKS", value: 79, isUnsigned: true)
!675 = !DIEnumerator(name: "PARAM_MAX_PIPELINE_REGION_INSNS", value: 80, isUnsigned: true)
!676 = !DIEnumerator(name: "PARAM_MIN_SPEC_PROB", value: 81, isUnsigned: true)
!677 = !DIEnumerator(name: "PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS", value: 82, isUnsigned: true)
!678 = !DIEnumerator(name: "PARAM_MAX_SCHED_INSN_CONFLICT_DELAY", value: 83, isUnsigned: true)
!679 = !DIEnumerator(name: "PARAM_SCHED_SPEC_PROB_CUTOFF", value: 84, isUnsigned: true)
!680 = !DIEnumerator(name: "PARAM_SELSCHED_MAX_LOOKAHEAD", value: 85, isUnsigned: true)
!681 = !DIEnumerator(name: "PARAM_SELSCHED_MAX_SCHED_TIMES", value: 86, isUnsigned: true)
!682 = !DIEnumerator(name: "PARAM_SELSCHED_INSNS_TO_RENAME", value: 87, isUnsigned: true)
!683 = !DIEnumerator(name: "PARAM_SCHED_MEM_TRUE_DEP_COST", value: 88, isUnsigned: true)
!684 = !DIEnumerator(name: "PARAM_MAX_LAST_VALUE_RTL", value: 89, isUnsigned: true)
!685 = !DIEnumerator(name: "PARAM_INTEGER_SHARE_LIMIT", value: 90, isUnsigned: true)
!686 = !DIEnumerator(name: "PARAM_MIN_VIRTUAL_MAPPINGS", value: 91, isUnsigned: true)
!687 = !DIEnumerator(name: "PARAM_VIRTUAL_MAPPINGS_TO_SYMS_RATIO", value: 92, isUnsigned: true)
!688 = !DIEnumerator(name: "PARAM_SSP_BUFFER_SIZE", value: 93, isUnsigned: true)
!689 = !DIEnumerator(name: "PARAM_MAX_JUMP_THREAD_DUPLICATION_STMTS", value: 94, isUnsigned: true)
!690 = !DIEnumerator(name: "PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE", value: 95, isUnsigned: true)
!691 = !DIEnumerator(name: "PARAM_MAX_SCHED_READY_INSNS", value: 96, isUnsigned: true)
!692 = !DIEnumerator(name: "PARAM_PREFETCH_LATENCY", value: 97, isUnsigned: true)
!693 = !DIEnumerator(name: "PARAM_SIMULTANEOUS_PREFETCHES", value: 98, isUnsigned: true)
!694 = !DIEnumerator(name: "PARAM_L1_CACHE_SIZE", value: 99, isUnsigned: true)
!695 = !DIEnumerator(name: "PARAM_L1_CACHE_LINE_SIZE", value: 100, isUnsigned: true)
!696 = !DIEnumerator(name: "PARAM_L2_CACHE_SIZE", value: 101, isUnsigned: true)
!697 = !DIEnumerator(name: "PARAM_USE_CANONICAL_TYPES", value: 102, isUnsigned: true)
!698 = !DIEnumerator(name: "PARAM_MAX_PARTIAL_ANTIC_LENGTH", value: 103, isUnsigned: true)
!699 = !DIEnumerator(name: "PARAM_SCCVN_MAX_SCC_SIZE", value: 104, isUnsigned: true)
!700 = !DIEnumerator(name: "PARAM_IRA_MAX_LOOPS_NUM", value: 105, isUnsigned: true)
!701 = !DIEnumerator(name: "PARAM_IRA_MAX_CONFLICT_TABLE_SIZE", value: 106, isUnsigned: true)
!702 = !DIEnumerator(name: "PARAM_IRA_LOOP_RESERVED_REGS", value: 107, isUnsigned: true)
!703 = !DIEnumerator(name: "PARAM_SWITCH_CONVERSION_BRANCH_RATIO", value: 108, isUnsigned: true)
!704 = !DIEnumerator(name: "PARAM_LOOP_BLOCK_TILE_SIZE", value: 109, isUnsigned: true)
!705 = !DIEnumerator(name: "PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS", value: 110, isUnsigned: true)
!706 = !DIEnumerator(name: "PARAM_GRAPHITE_MAX_BBS_PER_FUNCTION", value: 111, isUnsigned: true)
!707 = !DIEnumerator(name: "PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP", value: 112, isUnsigned: true)
!708 = !DIEnumerator(name: "PARAM_SLP_MAX_INSNS_IN_BB", value: 113, isUnsigned: true)
!709 = !DIEnumerator(name: "PARAM_MIN_INSN_TO_PREFETCH_RATIO", value: 114, isUnsigned: true)
!710 = !DIEnumerator(name: "PARAM_PREFETCH_MIN_INSN_TO_MEM_RATIO", value: 115, isUnsigned: true)
!711 = !DIEnumerator(name: "PARAM_MAX_VARTRACK_SIZE", value: 116, isUnsigned: true)
!712 = !DIEnumerator(name: "PARAM_MIN_NONDEBUG_INSN_UID", value: 117, isUnsigned: true)
!713 = !DIEnumerator(name: "PARAM_IPA_SRA_PTR_GROWTH_FACTOR", value: 118, isUnsigned: true)
!714 = !DIEnumerator(name: "LAST_PARAM", value: 119, isUnsigned: true)
!715 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_note", file: !385, line: 956, baseType: !7, size: 32, elements: !716)
!716 = !{!717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730}
!717 = !DIEnumerator(name: "NOTE_INSN_DELETED", value: 0, isUnsigned: true)
!718 = !DIEnumerator(name: "NOTE_INSN_DELETED_LABEL", value: 1, isUnsigned: true)
!719 = !DIEnumerator(name: "NOTE_INSN_BLOCK_BEG", value: 2, isUnsigned: true)
!720 = !DIEnumerator(name: "NOTE_INSN_BLOCK_END", value: 3, isUnsigned: true)
!721 = !DIEnumerator(name: "NOTE_INSN_FUNCTION_BEG", value: 4, isUnsigned: true)
!722 = !DIEnumerator(name: "NOTE_INSN_PROLOGUE_END", value: 5, isUnsigned: true)
!723 = !DIEnumerator(name: "NOTE_INSN_EPILOGUE_BEG", value: 6, isUnsigned: true)
!724 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_BEG", value: 7, isUnsigned: true)
!725 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_END", value: 8, isUnsigned: true)
!726 = !DIEnumerator(name: "NOTE_INSN_VAR_LOCATION", value: 9, isUnsigned: true)
!727 = !DIEnumerator(name: "NOTE_INSN_BASIC_BLOCK", value: 10, isUnsigned: true)
!728 = !DIEnumerator(name: "NOTE_INSN_SWITCH_TEXT_SECTIONS", value: 11, isUnsigned: true)
!729 = !DIEnumerator(name: "NOTE_INSN_CFA_RESTORE_STATE", value: 12, isUnsigned: true)
!730 = !DIEnumerator(name: "NOTE_INSN_MAX", value: 13, isUnsigned: true)
!731 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cselib_record_what", file: !732, line: 69, baseType: !7, size: 32, elements: !733)
!732 = !DIFile(filename: "./cselib.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!733 = !{!734, !735}
!734 = !DIEnumerator(name: "CSELIB_RECORD_MEMORY", value: 1, isUnsigned: true)
!735 = !DIEnumerator(name: "CSELIB_PRESERVE_CONSTANTS", value: 2, isUnsigned: true)
!736 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "global_rtl_index", file: !385, line: 1994, baseType: !7, size: 32, elements: !737)
!737 = !{!738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749}
!738 = !DIEnumerator(name: "GR_PC", value: 0, isUnsigned: true)
!739 = !DIEnumerator(name: "GR_CC0", value: 1, isUnsigned: true)
!740 = !DIEnumerator(name: "GR_STACK_POINTER", value: 2, isUnsigned: true)
!741 = !DIEnumerator(name: "GR_FRAME_POINTER", value: 3, isUnsigned: true)
!742 = !DIEnumerator(name: "GR_HARD_FRAME_POINTER", value: 4, isUnsigned: true)
!743 = !DIEnumerator(name: "GR_ARG_POINTER", value: 5, isUnsigned: true)
!744 = !DIEnumerator(name: "GR_VIRTUAL_INCOMING_ARGS", value: 6, isUnsigned: true)
!745 = !DIEnumerator(name: "GR_VIRTUAL_STACK_ARGS", value: 7, isUnsigned: true)
!746 = !DIEnumerator(name: "GR_VIRTUAL_STACK_DYNAMIC", value: 8, isUnsigned: true)
!747 = !DIEnumerator(name: "GR_VIRTUAL_OUTGOING_ARGS", value: 9, isUnsigned: true)
!748 = !DIEnumerator(name: "GR_VIRTUAL_CFA", value: 10, isUnsigned: true)
!749 = !DIEnumerator(name: "GR_MAX", value: 11, isUnsigned: true)
!750 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_class", file: !385, line: 60, baseType: !7, size: 32, elements: !751)
!751 = !{!752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764}
!752 = !DIEnumerator(name: "RTX_COMPARE", value: 0, isUnsigned: true)
!753 = !DIEnumerator(name: "RTX_COMM_COMPARE", value: 1, isUnsigned: true)
!754 = !DIEnumerator(name: "RTX_BIN_ARITH", value: 2, isUnsigned: true)
!755 = !DIEnumerator(name: "RTX_COMM_ARITH", value: 3, isUnsigned: true)
!756 = !DIEnumerator(name: "RTX_UNARY", value: 4, isUnsigned: true)
!757 = !DIEnumerator(name: "RTX_EXTRA", value: 5, isUnsigned: true)
!758 = !DIEnumerator(name: "RTX_MATCH", value: 6, isUnsigned: true)
!759 = !DIEnumerator(name: "RTX_INSN", value: 7, isUnsigned: true)
!760 = !DIEnumerator(name: "RTX_OBJ", value: 8, isUnsigned: true)
!761 = !DIEnumerator(name: "RTX_CONST_OBJ", value: 9, isUnsigned: true)
!762 = !DIEnumerator(name: "RTX_TERNARY", value: 10, isUnsigned: true)
!763 = !DIEnumerator(name: "RTX_BITFIELD_OPS", value: 11, isUnsigned: true)
!764 = !DIEnumerator(name: "RTX_AUTOINC", value: 12, isUnsigned: true)
!765 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sched_pass_id_t", file: !420, line: 37, baseType: !7, size: 32, elements: !766)
!766 = !{!767, !768, !769, !770, !771}
!767 = !DIEnumerator(name: "SCHED_PASS_UNKNOWN", value: 0, isUnsigned: true)
!768 = !DIEnumerator(name: "SCHED_RGN_PASS", value: 1, isUnsigned: true)
!769 = !DIEnumerator(name: "SCHED_EBB_PASS", value: 2, isUnsigned: true)
!770 = !DIEnumerator(name: "SCHED_SMS_PASS", value: 3, isUnsigned: true)
!771 = !DIEnumerator(name: "SCHED_SEL_PASS", value: 4, isUnsigned: true)
!772 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !153, line: 1188, baseType: !7, size: 32, elements: !773)
!773 = !{!774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801}
!774 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!775 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!776 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!777 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!778 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!779 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!780 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!781 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!782 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!783 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!784 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!785 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!786 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!787 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!788 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!789 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!790 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!791 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!792 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!793 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!794 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!795 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!796 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!797 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!798 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!799 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!800 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!801 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!802 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "built_in_class", file: !158, line: 205, baseType: !7, size: 32, elements: !803)
!803 = !{!804, !805, !806, !807}
!804 = !DIEnumerator(name: "NOT_BUILT_IN", value: 0, isUnsigned: true)
!805 = !DIEnumerator(name: "BUILT_IN_FRONTEND", value: 1, isUnsigned: true)
!806 = !DIEnumerator(name: "BUILT_IN_MD", value: 2, isUnsigned: true)
!807 = !DIEnumerator(name: "BUILT_IN_NORMAL", value: 3, isUnsigned: true)
!808 = !{!809, !434, !811, !1973, !942, !839, !7, !1975, !810, !1986, !1988, !1997, !1999, !2000, !2001, !2011, !5, !2028, !384, !2035, !2042, !2043, !2049, !190, !2050}
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "ds_t", file: !420, line: 218, baseType: !810)
!810 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !385, line: 240, size: 384, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !812, file: !385, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !812, file: !385, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !812, file: !385, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !812, file: !385, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !812, file: !385, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !812, file: !385, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !812, file: !385, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !812, file: !385, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !812, file: !385, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !812, file: !385, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !812, file: !385, line: 321, baseType: !825, size: 320, offset: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !385, line: 315, size: 320, elements: !826)
!826 = !{!827, !1940, !1942, !1971, !1972}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !825, file: !385, line: 316, baseType: !828, size: 64)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 64, elements: !849)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !385, line: 183, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !385, line: 166, size: 64, elements: !831)
!831 = !{!832, !833, !834, !838, !841, !851, !852, !864, !887, !951, !1918, !1919, !1930, !1937}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !830, file: !385, line: 168, baseType: !810, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !830, file: !385, line: 169, baseType: !7, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !830, file: !385, line: 170, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !837)
!837 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !830, file: !385, line: 171, baseType: !839, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !840, line: 50, baseType: !811)
!840 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !830, file: !385, line: 172, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !840, line: 53, baseType: !843)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !385, line: 359, size: 128, elements: !845)
!845 = !{!846, !847}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !844, file: !385, line: 360, baseType: !810, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !844, file: !385, line: 361, baseType: !848, size: 64, offset: 64)
!848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !839, size: 64, elements: !849)
!849 = !{!850}
!850 = !DISubrange(count: 1)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !830, file: !385, line: 173, baseType: !5, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !830, file: !385, line: 174, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !385, line: 133, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 115, size: 32, elements: !855)
!855 = !{!856, !857, !858, !859, !860, !861, !862, !863}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !854, file: !385, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !854, file: !385, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !854, file: !385, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !854, file: !385, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !854, file: !385, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !854, file: !385, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !854, file: !385, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !854, file: !385, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !830, file: !385, line: 175, baseType: !865, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !732, line: 23, size: 320, elements: !867)
!867 = !{!868, !869, !870, !871, !878, !886}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !866, file: !732, line: 25, baseType: !7, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !866, file: !732, line: 28, baseType: !810, size: 32, offset: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "val_rtx", scope: !866, file: !732, line: 31, baseType: !839, size: 64, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "locs", scope: !866, file: !732, line: 35, baseType: !872, size: 64, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_loc_list", file: !732, line: 45, size: 192, elements: !874)
!874 = !{!875, !876, !877}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !873, file: !732, line: 47, baseType: !872, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !873, file: !732, line: 49, baseType: !839, size: 64, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "setting_insn", scope: !873, file: !732, line: 51, baseType: !839, size: 64, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !866, file: !732, line: 39, baseType: !879, size: 64, offset: 192)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_list", file: !732, line: 55, size: 128, elements: !881)
!881 = !{!882, !883}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !880, file: !732, line: 56, baseType: !879, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "elt", scope: !880, file: !732, line: 57, baseType: !884, size: 64, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "cselib_val", file: !732, line: 42, baseType: !866)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "next_containing_mem", scope: !866, file: !732, line: 41, baseType: !865, size: 64, offset: 256)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !830, file: !385, line: 176, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !890, line: 75, size: 256, elements: !891)
!890 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!891 = !{!892, !907, !908, !909}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !889, file: !890, line: 76, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !890, line: 68, baseType: !895)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !890, line: 63, size: 320, elements: !896)
!896 = !{!897, !899, !900, !901}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !895, file: !890, line: 64, baseType: !898, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !895, file: !890, line: 65, baseType: !898, size: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !895, file: !890, line: 66, baseType: !7, size: 32, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !895, file: !890, line: 67, baseType: !902, size: 128, offset: 192)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !903, size: 128, elements: !905)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !890, line: 29, baseType: !904)
!904 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!905 = !{!906}
!906 = !DISubrange(count: 2)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !889, file: !890, line: 77, baseType: !893, size: 64, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !889, file: !890, line: 78, baseType: !7, size: 32, offset: 128)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !889, file: !890, line: 79, baseType: !910, size: 64, offset: 192)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !890, line: 49, baseType: !912)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !890, line: 45, size: 832, elements: !913)
!913 = !{!914, !915, !916}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !912, file: !890, line: 46, baseType: !898, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !912, file: !890, line: 47, baseType: !888, size: 64, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !912, file: !890, line: 48, baseType: !917, size: 704, offset: 128)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !918, line: 164, size: 704, elements: !919)
!918 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!919 = !{!920, !922, !933, !934, !935, !936, !937, !938, !943, !947, !948, !949, !950}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !917, file: !918, line: 166, baseType: !921, size: 64)
!921 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !917, file: !918, line: 167, baseType: !923, size: 64, offset: 64)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !918, line: 157, size: 192, elements: !925)
!925 = !{!926, !928, !929}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !924, file: !918, line: 159, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !924, file: !918, line: 160, baseType: !923, size: 64, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !924, file: !918, line: 161, baseType: !930, size: 32, offset: 128)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 32, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 4)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !917, file: !918, line: 168, baseType: !927, size: 64, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !917, file: !918, line: 169, baseType: !927, size: 64, offset: 192)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !917, file: !918, line: 170, baseType: !927, size: 64, offset: 256)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !917, file: !918, line: 171, baseType: !921, size: 64, offset: 320)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !917, file: !918, line: 172, baseType: !810, size: 32, offset: 384)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !917, file: !918, line: 176, baseType: !939, size: 64, offset: 448)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!923, !942, !921}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !917, file: !918, line: 177, baseType: !944, size: 64, offset: 512)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DISubroutineType(types: !946)
!946 = !{null, !942, !923}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !917, file: !918, line: 178, baseType: !942, size: 64, offset: 576)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !917, file: !918, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !917, file: !918, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !917, file: !918, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !830, file: !385, line: 177, baseType: !952, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !840, line: 56, baseType: !953)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !955)
!955 = !{!956, !989, !995, !1006, !1025, !1036, !1041, !1048, !1054, !1068, !1080, !1118, !1123, !1151, !1159, !1160, !1165, !1174, !1180, !1185, !1189, !1193, !1554, !1603, !1609, !1615, !1622, !1648, !1662, !1679, !1691, !1713, !1728, !1900}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !954, file: !158, line: 3372, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !958)
!958 = !{!959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !957, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !957, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !957, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !957, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !957, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !957, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !957, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !957, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !957, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !957, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !957, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !957, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !957, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !957, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !957, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !957, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !957, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !957, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !957, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !957, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !957, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !957, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !957, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !957, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !957, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !957, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !957, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !957, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !957, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !957, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !954, file: !158, line: 3373, baseType: !990, size: 192)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !991)
!991 = !{!992, !993, !994}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !990, file: !158, line: 403, baseType: !957, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !990, file: !158, line: 404, baseType: !952, size: 64, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !990, file: !158, line: 405, baseType: !952, size: 64, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !954, file: !158, line: 3374, baseType: !996, size: 320)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !997)
!997 = !{!998, !999}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !996, file: !158, line: 1385, baseType: !990, size: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !996, file: !158, line: 1386, baseType: !1000, size: 128, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1001, line: 58, baseType: !1002)
!1001 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1001, line: 54, size: 128, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1002, file: !1001, line: 56, baseType: !904, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1002, file: !1001, line: 57, baseType: !921, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !954, file: !158, line: 3375, baseType: !1007, size: 256)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !1008)
!1008 = !{!1009, !1010}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1007, file: !158, line: 1398, baseType: !990, size: 192)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1007, file: !158, line: 1399, baseType: !1011, size: 64, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1013, line: 52, size: 256, elements: !1014)
!1013 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1014 = !{!1015, !1016, !1017, !1018, !1019, !1020, !1021}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1012, file: !1013, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1012, file: !1013, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1012, file: !1013, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1012, file: !1013, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1012, file: !1013, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1012, file: !1013, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1012, file: !1013, line: 62, baseType: !1022, size: 192, offset: 64)
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 192, elements: !1023)
!1023 = !{!1024}
!1024 = !DISubrange(count: 3)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !954, file: !158, line: 3376, baseType: !1026, size: 256)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !1027)
!1027 = !{!1028, !1029}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1026, file: !158, line: 1409, baseType: !990, size: 192)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1026, file: !158, line: 1410, baseType: !1030, size: 64, offset: 192)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1032, line: 27, size: 192, elements: !1033)
!1032 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1031, file: !1032, line: 29, baseType: !1000, size: 128)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1031, file: !1032, line: 30, baseType: !5, size: 32, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !954, file: !158, line: 3377, baseType: !1037, size: 256)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !1038)
!1038 = !{!1039, !1040}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1037, file: !158, line: 1438, baseType: !990, size: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1037, file: !158, line: 1439, baseType: !952, size: 64, offset: 192)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !954, file: !158, line: 3378, baseType: !1042, size: 256)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !1043)
!1043 = !{!1044, !1045, !1046}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1042, file: !158, line: 1419, baseType: !990, size: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1042, file: !158, line: 1420, baseType: !810, size: 32, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1042, file: !158, line: 1421, baseType: !1047, size: 8, offset: 224)
!1047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 8, elements: !849)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !954, file: !158, line: 3379, baseType: !1049, size: 320)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !1050)
!1050 = !{!1051, !1052, !1053}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1049, file: !158, line: 1429, baseType: !990, size: 192)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1049, file: !158, line: 1430, baseType: !952, size: 64, offset: 192)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1049, file: !158, line: 1431, baseType: !952, size: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !954, file: !158, line: 3380, baseType: !1055, size: 320)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !1056)
!1056 = !{!1057, !1058}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1055, file: !158, line: 1461, baseType: !990, size: 192)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1055, file: !158, line: 1462, baseType: !1059, size: 128, offset: 192)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1060, line: 31, size: 128, elements: !1061)
!1060 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1061 = !{!1062, !1066, !1067}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1059, file: !1060, line: 32, baseType: !1063, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!1065 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1059, file: !1060, line: 33, baseType: !7, size: 32, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1059, file: !1060, line: 34, baseType: !7, size: 32, offset: 96)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !954, file: !158, line: 3381, baseType: !1069, size: 384)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !1070)
!1070 = !{!1071, !1072, !1077, !1078, !1079}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1069, file: !158, line: 2508, baseType: !990, size: 192)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1069, file: !158, line: 2509, baseType: !1073, size: 32, offset: 192)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1074, line: 58, baseType: !1075)
!1074 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1076, line: 44, baseType: !7)
!1076 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1069, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1069, file: !158, line: 2511, baseType: !952, size: 64, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1069, file: !158, line: 2512, baseType: !952, size: 64, offset: 320)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !954, file: !158, line: 3382, baseType: !1081, size: 896)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1081, file: !158, line: 2653, baseType: !1069, size: 384)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1081, file: !158, line: 2654, baseType: !952, size: 64, offset: 384)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1081, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1081, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1081, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1081, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1081, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1081, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1081, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1081, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1081, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1081, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1081, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1081, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1081, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1081, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1081, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1081, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1081, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1081, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1081, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1081, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1081, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1081, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1081, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1081, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1081, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1081, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1081, file: !158, line: 2705, baseType: !952, size: 64, offset: 576)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1081, file: !158, line: 2706, baseType: !952, size: 64, offset: 640)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1081, file: !158, line: 2707, baseType: !952, size: 64, offset: 704)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1081, file: !158, line: 2708, baseType: !952, size: 64, offset: 768)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1081, file: !158, line: 2711, baseType: !1116, size: 64, offset: 832)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !954, file: !158, line: 3383, baseType: !1119, size: 960)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1119, file: !158, line: 2757, baseType: !1081, size: 896)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1119, file: !158, line: 2758, baseType: !839, size: 64, offset: 896)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !954, file: !158, line: 3384, baseType: !1124, size: 1472)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !1125)
!1125 = !{!1126, !1147, !1148, !1149, !1150}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1124, file: !158, line: 3115, baseType: !1127, size: 1216)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !1128)
!1128 = !{!1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1127, file: !158, line: 2985, baseType: !1119, size: 960)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1127, file: !158, line: 2986, baseType: !952, size: 64, offset: 960)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1127, file: !158, line: 2987, baseType: !952, size: 64, offset: 1024)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1127, file: !158, line: 2988, baseType: !952, size: 64, offset: 1088)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1127, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1127, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1127, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1127, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1127, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1127, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1127, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1127, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1127, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1127, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1127, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1127, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1127, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1127, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1124, file: !158, line: 3117, baseType: !952, size: 64, offset: 1216)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1124, file: !158, line: 3119, baseType: !952, size: 64, offset: 1280)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1124, file: !158, line: 3121, baseType: !952, size: 64, offset: 1344)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1124, file: !158, line: 3123, baseType: !952, size: 64, offset: 1408)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !954, file: !158, line: 3385, baseType: !1152, size: 1088)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !1153)
!1153 = !{!1154, !1155, !1156}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1152, file: !158, line: 2875, baseType: !1119, size: 960)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1152, file: !158, line: 2876, baseType: !839, size: 64, offset: 960)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1152, file: !158, line: 2877, baseType: !1157, size: 64, offset: 1024)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !954, file: !158, line: 3386, baseType: !1127, size: 1216)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !954, file: !158, line: 3387, baseType: !1161, size: 1280)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !1162)
!1162 = !{!1163, !1164}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1161, file: !158, line: 3094, baseType: !1127, size: 1216)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1161, file: !158, line: 3095, baseType: !1157, size: 64, offset: 1216)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !954, file: !158, line: 3388, baseType: !1166, size: 1216)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1173}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1166, file: !158, line: 2825, baseType: !1081, size: 896)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1166, file: !158, line: 2827, baseType: !952, size: 64, offset: 896)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1166, file: !158, line: 2828, baseType: !952, size: 64, offset: 960)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1166, file: !158, line: 2829, baseType: !952, size: 64, offset: 1024)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1166, file: !158, line: 2830, baseType: !952, size: 64, offset: 1088)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1166, file: !158, line: 2831, baseType: !952, size: 64, offset: 1152)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !954, file: !158, line: 3389, baseType: !1175, size: 1024)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !1176)
!1176 = !{!1177, !1178, !1179}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1175, file: !158, line: 2851, baseType: !1119, size: 960)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1175, file: !158, line: 2852, baseType: !810, size: 32, offset: 960)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1175, file: !158, line: 2853, baseType: !810, size: 32, offset: 992)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !954, file: !158, line: 3390, baseType: !1181, size: 1024)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !1182)
!1182 = !{!1183, !1184}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1181, file: !158, line: 2858, baseType: !1119, size: 960)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1181, file: !158, line: 2859, baseType: !1157, size: 64, offset: 960)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !954, file: !158, line: 3391, baseType: !1186, size: 960)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !1187)
!1187 = !{!1188}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1186, file: !158, line: 2863, baseType: !1119, size: 960)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !954, file: !158, line: 3392, baseType: !1190, size: 1472)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !1191)
!1191 = !{!1192}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1190, file: !158, line: 3305, baseType: !1124, size: 1472)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !954, file: !158, line: 3393, baseType: !1194, size: 1792)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !1195)
!1195 = !{!1196, !1197, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1194, file: !158, line: 3249, baseType: !1124, size: 1472)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1194, file: !158, line: 3251, baseType: !1198, size: 64, offset: 1472)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1200, line: 463, size: 1152, elements: !1201)
!1200 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1201 = !{!1202, !1366, !1470, !1471, !1474, !1477, !1478, !1479, !1480, !1481, !1482, !1506, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1199, file: !1200, line: 464, baseType: !1203, size: 64)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1205)
!1205 = !{!1206, !1255, !1268, !1282, !1334, !1347}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1204, file: !135, line: 197, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1208)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1243, !1252, !1253, !1254}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1209, file: !135, line: 119, baseType: !1208, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1209, file: !135, line: 122, baseType: !1208, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1209, file: !135, line: 123, baseType: !1208, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1209, file: !135, line: 126, baseType: !810, size: 32, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1209, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1209, file: !135, line: 165, baseType: !1217, size: 192, offset: 256)
!1217 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1218)
!1218 = !{!1219, !1232, !1238}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1217, file: !135, line: 137, baseType: !1220, size: 128)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1221)
!1221 = !{!1222, !1231}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1220, file: !135, line: 135, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229, !1230}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1224, file: !135, line: 96, baseType: !1223, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1224, file: !135, line: 97, baseType: !1223, size: 64, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1224, file: !135, line: 101, baseType: !952, size: 64, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1224, file: !135, line: 106, baseType: !952, size: 64, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1224, file: !135, line: 111, baseType: !952, size: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1220, file: !135, line: 136, baseType: !1223, size: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1217, file: !135, line: 151, baseType: !1233, size: 192)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1234)
!1234 = !{!1235, !1236, !1237}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1233, file: !135, line: 141, baseType: !952, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1233, file: !135, line: 145, baseType: !952, size: 64, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1233, file: !135, line: 150, baseType: !810, size: 32, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1217, file: !135, line: 164, baseType: !1239, size: 128)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1240)
!1240 = !{!1241, !1242}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1239, file: !135, line: 161, baseType: !952, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1239, file: !135, line: 163, baseType: !1073, size: 32, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1209, file: !135, line: 168, baseType: !1244, size: 64, offset: 448)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1251}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1245, file: !135, line: 70, baseType: !1244, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1245, file: !135, line: 73, baseType: !1208, size: 64, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1245, file: !135, line: 78, baseType: !952, size: 64, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1245, file: !135, line: 85, baseType: !839, size: 64, offset: 192)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1245, file: !135, line: 88, baseType: !810, size: 32, offset: 256)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1209, file: !135, line: 173, baseType: !839, size: 64, offset: 512)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1209, file: !135, line: 173, baseType: !839, size: 64, offset: 576)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1209, file: !135, line: 177, baseType: !1065, size: 8, offset: 640)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1204, file: !135, line: 200, baseType: !1256, size: 64, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1258, file: !135, line: 185, baseType: !1261, size: 128)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1263)
!1263 = !{!1264, !1265, !1266}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1262, file: !135, line: 184, baseType: !7, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1262, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1262, file: !135, line: 184, baseType: !1267, size: 64, offset: 64)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 64, elements: !849)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1204, file: !135, line: 203, baseType: !1269, size: 64, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1272)
!1272 = !{!1273}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1271, file: !135, line: 189, baseType: !1274, size: 128)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1276)
!1276 = !{!1277, !1278, !1279}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1275, file: !135, line: 188, baseType: !7, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1275, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1275, file: !135, line: 188, baseType: !1280, size: 64, offset: 64)
!1280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1281, size: 64, elements: !849)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1244)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1204, file: !135, line: 207, baseType: !1283, size: 64, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1284, line: 144, baseType: !1285)
!1284 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1284, line: 100, size: 896, elements: !1287)
!1287 = !{!1288, !1296, !1301, !1306, !1308, !1311, !1312, !1313, !1314, !1315, !1320, !1322, !1323, !1328, !1333}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1286, file: !1284, line: 102, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1284, line: 52, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1284, line: 47, baseType: !7)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1286, file: !1284, line: 105, baseType: !1297, size: 64, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1284, line: 59, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!810, !1294, !1294}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1286, file: !1284, line: 108, baseType: !1302, size: 64, offset: 128)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1284, line: 63, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !942}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1286, file: !1284, line: 111, baseType: !1307, size: 64, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1286, file: !1284, line: 114, baseType: !1309, size: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1310, line: 46, baseType: !904)
!1310 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1286, file: !1284, line: 117, baseType: !1309, size: 64, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1286, file: !1284, line: 120, baseType: !1309, size: 64, offset: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1286, file: !1284, line: 124, baseType: !7, size: 32, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1286, file: !1284, line: 128, baseType: !7, size: 32, offset: 480)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1286, file: !1284, line: 131, baseType: !1316, size: 64, offset: 512)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1284, line: 75, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!942, !1309, !1309}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1286, file: !1284, line: 132, baseType: !1321, size: 64, offset: 576)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1284, line: 78, baseType: !1303)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1286, file: !1284, line: 135, baseType: !942, size: 64, offset: 640)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1286, file: !1284, line: 136, baseType: !1324, size: 64, offset: 704)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1284, line: 82, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!942, !942, !1309, !1309}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1286, file: !1284, line: 137, baseType: !1329, size: 64, offset: 768)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1284, line: 83, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{null, !942, !942}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1286, file: !1284, line: 141, baseType: !7, size: 32, offset: 832)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1204, file: !135, line: 211, baseType: !1335, size: 64, offset: 256)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !1338)
!1338 = !{!1339}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1337, file: !158, line: 183, baseType: !1340, size: 128)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !1342)
!1342 = !{!1343, !1344, !1345}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1341, file: !158, line: 182, baseType: !7, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1341, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1341, file: !158, line: 182, baseType: !1346, size: 64, offset: 64)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 64, elements: !849)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1204, file: !135, line: 220, baseType: !1348, size: 64, offset: 320)
!1348 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1349)
!1349 = !{!1350, !1351}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1348, file: !135, line: 218, baseType: !1335, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1348, file: !135, line: 219, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1354, line: 29, baseType: !1355)
!1354 = !DIFile(filename: "./vecprim.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1354, line: 29, size: 96, elements: !1356)
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1355, file: !1354, line: 29, baseType: !1358, size: 96)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1354, line: 27, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1354, line: 27, size: 96, elements: !1360)
!1360 = !{!1361, !1362, !1363}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1359, file: !1354, line: 27, baseType: !7, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1359, file: !1354, line: 27, baseType: !7, size: 32, offset: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1359, file: !1354, line: 27, baseType: !1364, size: 8, offset: 64)
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 8, elements: !849)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1354, line: 26, baseType: !1065)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1199, file: !1200, line: 467, baseType: !1367, size: 64, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !1369)
!1369 = !{!1370, !1445, !1446, !1459, !1460, !1461, !1462, !1463, !1464, !1466, !1468, !1469}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1368, file: !142, line: 377, baseType: !1371, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !840, line: 111, baseType: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !1374)
!1374 = !{!1375, !1410, !1411, !1412, !1415, !1419, !1420, !1421, !1439, !1440, !1441, !1442, !1443, !1444}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1373, file: !142, line: 219, baseType: !1376, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1378, file: !142, line: 151, baseType: !1381, size: 128)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !1383)
!1383 = !{!1384, !1385, !1386}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1382, file: !142, line: 150, baseType: !7, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1382, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1382, file: !142, line: 150, baseType: !1387, size: 64, offset: 64)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1388, size: 64, elements: !849)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !840, line: 108, baseType: !1389)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1402, !1403, !1404, !1405, !1406, !1407, !1408}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1390, file: !142, line: 124, baseType: !1372, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1390, file: !142, line: 125, baseType: !1372, size: 64, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1390, file: !142, line: 131, baseType: !1395, size: 64, offset: 128)
!1395 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !1396)
!1396 = !{!1397, !1401}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1395, file: !142, line: 129, baseType: !1398, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !840, line: 66, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !840, line: 65, flags: DIFlagFwdDecl)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1395, file: !142, line: 130, baseType: !839, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1390, file: !142, line: 134, baseType: !942, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1390, file: !142, line: 137, baseType: !952, size: 64, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1390, file: !142, line: 138, baseType: !1073, size: 32, offset: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1390, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1390, file: !142, line: 144, baseType: !810, size: 32, offset: 384)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1390, file: !142, line: 145, baseType: !810, size: 32, offset: 416)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1390, file: !142, line: 146, baseType: !1409, size: 64, offset: 448)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !921)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1373, file: !142, line: 220, baseType: !1376, size: 64, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1373, file: !142, line: 223, baseType: !942, size: 64, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1373, file: !142, line: 226, baseType: !1413, size: 64, offset: 192)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1373, file: !142, line: 229, baseType: !1416, size: 128, offset: 256)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1417, size: 128, elements: !905)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1373, file: !142, line: 232, baseType: !1372, size: 64, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1373, file: !142, line: 233, baseType: !1372, size: 64, offset: 448)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1373, file: !142, line: 238, baseType: !1422, size: 64, offset: 512)
!1422 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !1423)
!1423 = !{!1424, !1430}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1422, file: !142, line: 236, baseType: !1425, size: 64)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !1427)
!1427 = !{!1428, !1429}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1426, file: !142, line: 275, baseType: !1398, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1426, file: !142, line: 278, baseType: !1398, size: 64, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1422, file: !142, line: 237, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437, !1438}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1432, file: !142, line: 261, baseType: !839, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1432, file: !142, line: 262, baseType: !839, size: 64, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1432, file: !142, line: 266, baseType: !839, size: 64, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1432, file: !142, line: 267, baseType: !839, size: 64, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1432, file: !142, line: 270, baseType: !810, size: 32, offset: 256)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1373, file: !142, line: 241, baseType: !1409, size: 64, offset: 576)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1373, file: !142, line: 244, baseType: !810, size: 32, offset: 640)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1373, file: !142, line: 247, baseType: !810, size: 32, offset: 672)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1373, file: !142, line: 250, baseType: !810, size: 32, offset: 704)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1373, file: !142, line: 253, baseType: !810, size: 32, offset: 736)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1373, file: !142, line: 256, baseType: !810, size: 32, offset: 768)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1368, file: !142, line: 378, baseType: !1371, size: 64, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1368, file: !142, line: 381, baseType: !1447, size: 64, offset: 128)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !1450)
!1450 = !{!1451}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1449, file: !142, line: 282, baseType: !1452, size: 128)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !1454)
!1454 = !{!1455, !1456, !1457}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1453, file: !142, line: 281, baseType: !7, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1453, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1453, file: !142, line: 281, baseType: !1458, size: 64, offset: 64)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1371, size: 64, elements: !849)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1368, file: !142, line: 384, baseType: !810, size: 32, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1368, file: !142, line: 387, baseType: !810, size: 32, offset: 224)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1368, file: !142, line: 390, baseType: !810, size: 32, offset: 256)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1368, file: !142, line: 394, baseType: !1447, size: 64, offset: 320)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1368, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1368, file: !142, line: 399, baseType: !1465, size: 64, offset: 416)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !905)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1368, file: !142, line: 402, baseType: !1467, size: 64, offset: 480)
!1467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !905)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1368, file: !142, line: 406, baseType: !810, size: 32, offset: 544)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1368, file: !142, line: 409, baseType: !810, size: 32, offset: 576)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1199, file: !1200, line: 470, baseType: !1399, size: 64, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1199, file: !1200, line: 473, baseType: !1472, size: 64, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1200, line: 166, flags: DIFlagFwdDecl)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1199, file: !1200, line: 476, baseType: !1475, size: 64, offset: 256)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1200, line: 476, flags: DIFlagFwdDecl)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1199, file: !1200, line: 479, baseType: !1283, size: 64, offset: 320)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1199, file: !1200, line: 484, baseType: !952, size: 64, offset: 384)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1199, file: !1200, line: 488, baseType: !952, size: 64, offset: 448)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1199, file: !1200, line: 493, baseType: !952, size: 64, offset: 512)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1199, file: !1200, line: 496, baseType: !952, size: 64, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1199, file: !1200, line: 501, baseType: !1483, size: 64, offset: 640)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !1485)
!1485 = !{!1486, !1489, !1490, !1491, !1492, !1494, !1495, !1500, !1501, !1502, !1503, !1504, !1505}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1484, file: !153, line: 2356, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1484, file: !153, line: 2357, baseType: !835, size: 64, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1484, file: !153, line: 2358, baseType: !810, size: 32, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1484, file: !153, line: 2359, baseType: !810, size: 32, offset: 160)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1484, file: !153, line: 2360, baseType: !1493, size: 128, offset: 192)
!1493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !810, size: 128, elements: !931)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1484, file: !153, line: 2364, baseType: !810, size: 32, offset: 320)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1484, file: !153, line: 2367, baseType: !1496, size: 128, offset: 384)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !1497)
!1497 = !{!1498, !1499}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1496, file: !153, line: 2351, baseType: !839, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1496, file: !153, line: 2352, baseType: !921, size: 64, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1484, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1484, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1484, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1484, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1484, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1484, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1199, file: !1200, line: 504, baseType: !1507, size: 64, offset: 704)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1200, line: 504, flags: DIFlagFwdDecl)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1199, file: !1200, line: 507, baseType: !1283, size: 64, offset: 768)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1199, file: !1200, line: 510, baseType: !810, size: 32, offset: 832)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1199, file: !1200, line: 513, baseType: !810, size: 32, offset: 864)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1199, file: !1200, line: 516, baseType: !1073, size: 32, offset: 896)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1199, file: !1200, line: 519, baseType: !1073, size: 32, offset: 928)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1199, file: !1200, line: 522, baseType: !7, size: 32, offset: 960)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1199, file: !1200, line: 523, baseType: !7, size: 32, offset: 992)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1199, file: !1200, line: 528, baseType: !835, size: 64, offset: 1024)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1199, file: !1200, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1199, file: !1200, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1199, file: !1200, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1199, file: !1200, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1199, file: !1200, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1199, file: !1200, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1199, file: !1200, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1199, file: !1200, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1199, file: !1200, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1199, file: !1200, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1199, file: !1200, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1199, file: !1200, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1199, file: !1200, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1199, file: !1200, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1199, file: !1200, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1199, file: !1200, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1194, file: !158, line: 3254, baseType: !952, size: 64, offset: 1536)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1194, file: !158, line: 3257, baseType: !952, size: 64, offset: 1600)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1194, file: !158, line: 3258, baseType: !952, size: 64, offset: 1664)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1194, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1194, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1194, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1194, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1194, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1194, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1194, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1194, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1194, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1194, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1194, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1194, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1194, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1194, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1194, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1194, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1194, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1194, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !954, file: !158, line: 3394, baseType: !1555, size: 1344)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1582, !1583, !1584, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1555, file: !158, line: 2280, baseType: !990, size: 192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1555, file: !158, line: 2281, baseType: !952, size: 64, offset: 192)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1555, file: !158, line: 2282, baseType: !952, size: 64, offset: 256)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1555, file: !158, line: 2283, baseType: !952, size: 64, offset: 320)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1555, file: !158, line: 2284, baseType: !952, size: 64, offset: 384)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1555, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1555, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1555, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1555, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1555, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1555, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1555, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1555, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1555, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1555, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1555, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1555, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1555, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1555, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1555, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1555, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1555, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1555, file: !158, line: 2306, baseType: !1580, size: 32, offset: 544)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1581, line: 31, baseType: !810)
!1581 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1555, file: !158, line: 2307, baseType: !952, size: 64, offset: 576)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1555, file: !158, line: 2308, baseType: !952, size: 64, offset: 640)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1555, file: !158, line: 2314, baseType: !1585, size: 64, offset: 704)
!1585 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !1586)
!1586 = !{!1587, !1588, !1589}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1585, file: !158, line: 2310, baseType: !810, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1585, file: !158, line: 2311, baseType: !835, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1585, file: !158, line: 2312, baseType: !1590, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !158, line: 2315, baseType: !952, size: 64, offset: 768)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1555, file: !158, line: 2316, baseType: !952, size: 64, offset: 832)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1555, file: !158, line: 2317, baseType: !952, size: 64, offset: 896)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1555, file: !158, line: 2318, baseType: !952, size: 64, offset: 960)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1555, file: !158, line: 2319, baseType: !952, size: 64, offset: 1024)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1555, file: !158, line: 2320, baseType: !952, size: 64, offset: 1088)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1555, file: !158, line: 2321, baseType: !952, size: 64, offset: 1152)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1555, file: !158, line: 2322, baseType: !952, size: 64, offset: 1216)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1555, file: !158, line: 2324, baseType: !1601, size: 64, offset: 1280)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !954, file: !158, line: 3395, baseType: !1604, size: 320)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !1605)
!1605 = !{!1606, !1607, !1608}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1604, file: !158, line: 1470, baseType: !990, size: 192)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1604, file: !158, line: 1471, baseType: !952, size: 64, offset: 192)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1604, file: !158, line: 1472, baseType: !952, size: 64, offset: 256)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !954, file: !158, line: 3396, baseType: !1610, size: 320)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !1611)
!1611 = !{!1612, !1613, !1614}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1610, file: !158, line: 1483, baseType: !990, size: 192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1610, file: !158, line: 1484, baseType: !810, size: 32, offset: 192)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1610, file: !158, line: 1485, baseType: !1346, size: 64, offset: 256)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !954, file: !158, line: 3397, baseType: !1616, size: 384)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1621}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1616, file: !158, line: 1830, baseType: !990, size: 192)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1616, file: !158, line: 1831, baseType: !1073, size: 32, offset: 192)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1616, file: !158, line: 1832, baseType: !952, size: 64, offset: 256)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1616, file: !158, line: 1835, baseType: !1346, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !954, file: !158, line: 3398, baseType: !1623, size: 704)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !1624)
!1624 = !{!1625, !1626, !1627, !1631, !1632, !1635}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1623, file: !158, line: 1899, baseType: !990, size: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1623, file: !158, line: 1902, baseType: !952, size: 64, offset: 192)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1623, file: !158, line: 1905, baseType: !1628, size: 64, offset: 256)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !840, line: 58, baseType: !1629)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !840, line: 57, flags: DIFlagFwdDecl)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1623, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1623, file: !158, line: 1911, baseType: !1633, size: 64, offset: 384)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1623, file: !158, line: 1914, baseType: !1636, size: 256, offset: 448)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !1637)
!1637 = !{!1638, !1640, !1641, !1646}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1636, file: !158, line: 1884, baseType: !1639, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1636, file: !158, line: 1885, baseType: !1639, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1636, file: !158, line: 1891, baseType: !1642, size: 64, offset: 128)
!1642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1636, file: !158, line: 1891, size: 64, elements: !1643)
!1643 = !{!1644, !1645}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1642, file: !158, line: 1891, baseType: !1628, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1642, file: !158, line: 1891, baseType: !952, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1636, file: !158, line: 1892, baseType: !1647, size: 64, offset: 192)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !954, file: !158, line: 3399, baseType: !1649, size: 704)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !1650)
!1650 = !{!1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1649, file: !158, line: 2009, baseType: !990, size: 192)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1649, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1649, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1649, file: !158, line: 2014, baseType: !1073, size: 32, offset: 224)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1649, file: !158, line: 2016, baseType: !952, size: 64, offset: 256)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1649, file: !158, line: 2017, baseType: !1335, size: 64, offset: 320)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1649, file: !158, line: 2019, baseType: !952, size: 64, offset: 384)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1649, file: !158, line: 2020, baseType: !952, size: 64, offset: 448)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1649, file: !158, line: 2021, baseType: !952, size: 64, offset: 512)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1649, file: !158, line: 2022, baseType: !952, size: 64, offset: 576)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1649, file: !158, line: 2023, baseType: !952, size: 64, offset: 640)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !954, file: !158, line: 3400, baseType: !1663, size: 832)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1663, file: !158, line: 2431, baseType: !990, size: 192)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1663, file: !158, line: 2433, baseType: !952, size: 64, offset: 192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1663, file: !158, line: 2434, baseType: !952, size: 64, offset: 256)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1663, file: !158, line: 2435, baseType: !952, size: 64, offset: 320)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1663, file: !158, line: 2436, baseType: !952, size: 64, offset: 384)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1663, file: !158, line: 2437, baseType: !1335, size: 64, offset: 448)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1663, file: !158, line: 2438, baseType: !952, size: 64, offset: 512)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1663, file: !158, line: 2440, baseType: !952, size: 64, offset: 576)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1663, file: !158, line: 2441, baseType: !952, size: 64, offset: 640)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1663, file: !158, line: 2443, baseType: !1675, size: 128, offset: 704)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !1677)
!1677 = !{!1678}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1676, file: !158, line: 182, baseType: !1340, size: 128)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !954, file: !158, line: 3401, baseType: !1680, size: 320)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !1681)
!1681 = !{!1682, !1683, !1690}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1680, file: !158, line: 3329, baseType: !990, size: 192)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1680, file: !158, line: 3330, baseType: !1684, size: 64, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !1686)
!1686 = !{!1687, !1688, !1689}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1685, file: !158, line: 3322, baseType: !1684, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1685, file: !158, line: 3323, baseType: !1684, size: 64, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1685, file: !158, line: 3324, baseType: !952, size: 64, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1680, file: !158, line: 3331, baseType: !1684, size: 64, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !954, file: !158, line: 3402, baseType: !1692, size: 256)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !1693)
!1693 = !{!1694, !1695}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1692, file: !158, line: 1541, baseType: !990, size: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1692, file: !158, line: 1542, baseType: !1696, size: 64, offset: 192)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !1698)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !1699)
!1699 = !{!1700}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1698, file: !158, line: 1538, baseType: !1701, size: 192)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !1703)
!1703 = !{!1704, !1705, !1706}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1702, file: !158, line: 1537, baseType: !7, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1702, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1702, file: !158, line: 1537, baseType: !1707, size: 128, offset: 64)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 128, elements: !849)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !1710)
!1710 = !{!1711, !1712}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1709, file: !158, line: 1533, baseType: !952, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1709, file: !158, line: 1534, baseType: !952, size: 64, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !954, file: !158, line: 3403, baseType: !1714, size: 512)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !1715)
!1715 = !{!1716, !1717, !1718, !1719, !1725, !1726, !1727}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1714, file: !158, line: 1939, baseType: !990, size: 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1714, file: !158, line: 1940, baseType: !1073, size: 32, offset: 192)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1714, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1714, file: !158, line: 1946, baseType: !1720, size: 32, offset: 256)
!1720 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !1721)
!1721 = !{!1722, !1723, !1724}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1720, file: !158, line: 1943, baseType: !176, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1720, file: !158, line: 1944, baseType: !183, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1720, file: !158, line: 1945, baseType: !190, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1714, file: !158, line: 1950, baseType: !1398, size: 64, offset: 320)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1714, file: !158, line: 1951, baseType: !1398, size: 64, offset: 384)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1714, file: !158, line: 1953, baseType: !1346, size: 64, offset: 448)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !954, file: !158, line: 3404, baseType: !1729, size: 1664)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !1730)
!1730 = !{!1731, !1732}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1729, file: !158, line: 3338, baseType: !990, size: 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1729, file: !158, line: 3341, baseType: !1733, size: 1472, offset: 192)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1734, line: 410, size: 1472, elements: !1735)
!1734 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1735 = !{!1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1733, file: !1734, line: 412, baseType: !810, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1733, file: !1734, line: 413, baseType: !810, size: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1733, file: !1734, line: 414, baseType: !810, size: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1733, file: !1734, line: 415, baseType: !810, size: 32, offset: 96)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1733, file: !1734, line: 416, baseType: !810, size: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1733, file: !1734, line: 417, baseType: !810, size: 32, offset: 160)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1733, file: !1734, line: 418, baseType: !1065, size: 8, offset: 192)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1733, file: !1734, line: 419, baseType: !1065, size: 8, offset: 200)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1733, file: !1734, line: 420, baseType: !1745, size: 8, offset: 208)
!1745 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1733, file: !1734, line: 421, baseType: !1745, size: 8, offset: 216)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1733, file: !1734, line: 422, baseType: !1745, size: 8, offset: 224)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1733, file: !1734, line: 423, baseType: !1745, size: 8, offset: 232)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1733, file: !1734, line: 424, baseType: !1745, size: 8, offset: 240)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1733, file: !1734, line: 425, baseType: !1745, size: 8, offset: 248)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1733, file: !1734, line: 426, baseType: !1745, size: 8, offset: 256)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1733, file: !1734, line: 427, baseType: !1745, size: 8, offset: 264)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1733, file: !1734, line: 428, baseType: !1745, size: 8, offset: 272)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1733, file: !1734, line: 429, baseType: !1745, size: 8, offset: 280)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1733, file: !1734, line: 430, baseType: !1745, size: 8, offset: 288)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1733, file: !1734, line: 431, baseType: !1745, size: 8, offset: 296)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1733, file: !1734, line: 432, baseType: !1745, size: 8, offset: 304)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1733, file: !1734, line: 433, baseType: !1745, size: 8, offset: 312)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1733, file: !1734, line: 434, baseType: !1745, size: 8, offset: 320)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1733, file: !1734, line: 435, baseType: !1745, size: 8, offset: 328)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1733, file: !1734, line: 436, baseType: !1745, size: 8, offset: 336)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1733, file: !1734, line: 437, baseType: !1745, size: 8, offset: 344)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1733, file: !1734, line: 438, baseType: !1745, size: 8, offset: 352)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1733, file: !1734, line: 439, baseType: !1745, size: 8, offset: 360)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1733, file: !1734, line: 440, baseType: !1745, size: 8, offset: 368)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1733, file: !1734, line: 441, baseType: !1745, size: 8, offset: 376)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1733, file: !1734, line: 442, baseType: !1745, size: 8, offset: 384)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1733, file: !1734, line: 443, baseType: !1745, size: 8, offset: 392)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1733, file: !1734, line: 444, baseType: !1745, size: 8, offset: 400)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1733, file: !1734, line: 445, baseType: !1745, size: 8, offset: 408)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1733, file: !1734, line: 446, baseType: !1745, size: 8, offset: 416)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1733, file: !1734, line: 447, baseType: !1745, size: 8, offset: 424)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1733, file: !1734, line: 448, baseType: !1745, size: 8, offset: 432)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1733, file: !1734, line: 449, baseType: !1745, size: 8, offset: 440)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1733, file: !1734, line: 450, baseType: !1745, size: 8, offset: 448)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1733, file: !1734, line: 451, baseType: !1745, size: 8, offset: 456)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1733, file: !1734, line: 452, baseType: !1745, size: 8, offset: 464)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1733, file: !1734, line: 453, baseType: !1745, size: 8, offset: 472)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1733, file: !1734, line: 454, baseType: !1745, size: 8, offset: 480)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1733, file: !1734, line: 455, baseType: !1745, size: 8, offset: 488)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1733, file: !1734, line: 456, baseType: !1745, size: 8, offset: 496)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1733, file: !1734, line: 457, baseType: !1745, size: 8, offset: 504)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1733, file: !1734, line: 458, baseType: !1745, size: 8, offset: 512)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1733, file: !1734, line: 459, baseType: !1745, size: 8, offset: 520)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1733, file: !1734, line: 460, baseType: !1745, size: 8, offset: 528)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1733, file: !1734, line: 461, baseType: !1745, size: 8, offset: 536)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1733, file: !1734, line: 462, baseType: !1745, size: 8, offset: 544)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1733, file: !1734, line: 463, baseType: !1745, size: 8, offset: 552)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1733, file: !1734, line: 464, baseType: !1745, size: 8, offset: 560)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1733, file: !1734, line: 465, baseType: !1745, size: 8, offset: 568)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1733, file: !1734, line: 466, baseType: !1745, size: 8, offset: 576)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1733, file: !1734, line: 467, baseType: !1745, size: 8, offset: 584)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1733, file: !1734, line: 468, baseType: !1745, size: 8, offset: 592)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1733, file: !1734, line: 469, baseType: !1745, size: 8, offset: 600)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1733, file: !1734, line: 470, baseType: !1745, size: 8, offset: 608)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1733, file: !1734, line: 471, baseType: !1745, size: 8, offset: 616)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1733, file: !1734, line: 472, baseType: !1745, size: 8, offset: 624)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1733, file: !1734, line: 473, baseType: !1745, size: 8, offset: 632)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1733, file: !1734, line: 474, baseType: !1745, size: 8, offset: 640)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1733, file: !1734, line: 475, baseType: !1745, size: 8, offset: 648)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1733, file: !1734, line: 476, baseType: !1745, size: 8, offset: 656)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1733, file: !1734, line: 477, baseType: !1745, size: 8, offset: 664)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1733, file: !1734, line: 478, baseType: !1745, size: 8, offset: 672)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1733, file: !1734, line: 479, baseType: !1745, size: 8, offset: 680)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1733, file: !1734, line: 480, baseType: !1745, size: 8, offset: 688)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1733, file: !1734, line: 481, baseType: !1745, size: 8, offset: 696)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1733, file: !1734, line: 482, baseType: !1745, size: 8, offset: 704)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1733, file: !1734, line: 483, baseType: !1745, size: 8, offset: 712)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1733, file: !1734, line: 484, baseType: !1745, size: 8, offset: 720)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1733, file: !1734, line: 485, baseType: !1745, size: 8, offset: 728)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1733, file: !1734, line: 486, baseType: !1745, size: 8, offset: 736)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1733, file: !1734, line: 487, baseType: !1745, size: 8, offset: 744)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1733, file: !1734, line: 488, baseType: !1745, size: 8, offset: 752)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1733, file: !1734, line: 489, baseType: !1745, size: 8, offset: 760)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1733, file: !1734, line: 490, baseType: !1745, size: 8, offset: 768)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1733, file: !1734, line: 491, baseType: !1745, size: 8, offset: 776)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1733, file: !1734, line: 492, baseType: !1745, size: 8, offset: 784)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1733, file: !1734, line: 493, baseType: !1745, size: 8, offset: 792)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1733, file: !1734, line: 494, baseType: !1745, size: 8, offset: 800)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1733, file: !1734, line: 495, baseType: !1745, size: 8, offset: 808)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1733, file: !1734, line: 496, baseType: !1745, size: 8, offset: 816)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1733, file: !1734, line: 497, baseType: !1745, size: 8, offset: 824)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1733, file: !1734, line: 498, baseType: !1745, size: 8, offset: 832)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1733, file: !1734, line: 499, baseType: !1745, size: 8, offset: 840)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1733, file: !1734, line: 500, baseType: !1745, size: 8, offset: 848)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1733, file: !1734, line: 501, baseType: !1745, size: 8, offset: 856)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1733, file: !1734, line: 502, baseType: !1745, size: 8, offset: 864)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1733, file: !1734, line: 503, baseType: !1745, size: 8, offset: 872)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1733, file: !1734, line: 504, baseType: !1745, size: 8, offset: 880)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1733, file: !1734, line: 505, baseType: !1745, size: 8, offset: 888)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1733, file: !1734, line: 506, baseType: !1745, size: 8, offset: 896)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1733, file: !1734, line: 507, baseType: !1745, size: 8, offset: 904)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1733, file: !1734, line: 508, baseType: !1745, size: 8, offset: 912)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1733, file: !1734, line: 509, baseType: !1745, size: 8, offset: 920)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1733, file: !1734, line: 510, baseType: !1745, size: 8, offset: 928)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1733, file: !1734, line: 511, baseType: !1745, size: 8, offset: 936)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1733, file: !1734, line: 512, baseType: !1745, size: 8, offset: 944)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1733, file: !1734, line: 513, baseType: !1745, size: 8, offset: 952)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1733, file: !1734, line: 514, baseType: !1745, size: 8, offset: 960)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1733, file: !1734, line: 515, baseType: !1745, size: 8, offset: 968)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1733, file: !1734, line: 516, baseType: !1745, size: 8, offset: 976)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1733, file: !1734, line: 517, baseType: !1745, size: 8, offset: 984)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1733, file: !1734, line: 518, baseType: !1745, size: 8, offset: 992)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1733, file: !1734, line: 519, baseType: !1745, size: 8, offset: 1000)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1733, file: !1734, line: 520, baseType: !1745, size: 8, offset: 1008)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1733, file: !1734, line: 521, baseType: !1745, size: 8, offset: 1016)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1733, file: !1734, line: 522, baseType: !1745, size: 8, offset: 1024)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1733, file: !1734, line: 523, baseType: !1745, size: 8, offset: 1032)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1733, file: !1734, line: 524, baseType: !1745, size: 8, offset: 1040)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1733, file: !1734, line: 525, baseType: !1745, size: 8, offset: 1048)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1733, file: !1734, line: 526, baseType: !1745, size: 8, offset: 1056)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1733, file: !1734, line: 527, baseType: !1745, size: 8, offset: 1064)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1733, file: !1734, line: 528, baseType: !1745, size: 8, offset: 1072)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1733, file: !1734, line: 529, baseType: !1745, size: 8, offset: 1080)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1733, file: !1734, line: 530, baseType: !1745, size: 8, offset: 1088)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1733, file: !1734, line: 531, baseType: !1745, size: 8, offset: 1096)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1733, file: !1734, line: 532, baseType: !1745, size: 8, offset: 1104)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1733, file: !1734, line: 533, baseType: !1745, size: 8, offset: 1112)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1733, file: !1734, line: 534, baseType: !1745, size: 8, offset: 1120)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1733, file: !1734, line: 535, baseType: !1745, size: 8, offset: 1128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1733, file: !1734, line: 536, baseType: !1745, size: 8, offset: 1136)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1733, file: !1734, line: 537, baseType: !1745, size: 8, offset: 1144)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1733, file: !1734, line: 538, baseType: !1745, size: 8, offset: 1152)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1733, file: !1734, line: 539, baseType: !1745, size: 8, offset: 1160)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1733, file: !1734, line: 540, baseType: !1745, size: 8, offset: 1168)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1733, file: !1734, line: 541, baseType: !1745, size: 8, offset: 1176)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1733, file: !1734, line: 542, baseType: !1745, size: 8, offset: 1184)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1733, file: !1734, line: 543, baseType: !1745, size: 8, offset: 1192)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1733, file: !1734, line: 544, baseType: !1745, size: 8, offset: 1200)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1733, file: !1734, line: 545, baseType: !1745, size: 8, offset: 1208)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1733, file: !1734, line: 546, baseType: !1745, size: 8, offset: 1216)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1733, file: !1734, line: 547, baseType: !1745, size: 8, offset: 1224)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1733, file: !1734, line: 548, baseType: !1745, size: 8, offset: 1232)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1733, file: !1734, line: 549, baseType: !1745, size: 8, offset: 1240)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1733, file: !1734, line: 550, baseType: !1745, size: 8, offset: 1248)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1733, file: !1734, line: 551, baseType: !1745, size: 8, offset: 1256)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1733, file: !1734, line: 552, baseType: !1745, size: 8, offset: 1264)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1733, file: !1734, line: 553, baseType: !1745, size: 8, offset: 1272)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1733, file: !1734, line: 554, baseType: !1745, size: 8, offset: 1280)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1733, file: !1734, line: 555, baseType: !1745, size: 8, offset: 1288)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1733, file: !1734, line: 556, baseType: !1745, size: 8, offset: 1296)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1733, file: !1734, line: 557, baseType: !1745, size: 8, offset: 1304)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1733, file: !1734, line: 558, baseType: !1745, size: 8, offset: 1312)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1733, file: !1734, line: 559, baseType: !1745, size: 8, offset: 1320)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1733, file: !1734, line: 560, baseType: !1745, size: 8, offset: 1328)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1733, file: !1734, line: 561, baseType: !1745, size: 8, offset: 1336)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1733, file: !1734, line: 562, baseType: !1745, size: 8, offset: 1344)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1733, file: !1734, line: 563, baseType: !1745, size: 8, offset: 1352)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1733, file: !1734, line: 564, baseType: !1745, size: 8, offset: 1360)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1733, file: !1734, line: 565, baseType: !1745, size: 8, offset: 1368)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1733, file: !1734, line: 566, baseType: !1745, size: 8, offset: 1376)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1733, file: !1734, line: 567, baseType: !1745, size: 8, offset: 1384)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1733, file: !1734, line: 568, baseType: !1745, size: 8, offset: 1392)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1733, file: !1734, line: 569, baseType: !1745, size: 8, offset: 1400)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1733, file: !1734, line: 570, baseType: !1745, size: 8, offset: 1408)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1733, file: !1734, line: 571, baseType: !1745, size: 8, offset: 1416)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1733, file: !1734, line: 572, baseType: !1745, size: 8, offset: 1424)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1733, file: !1734, line: 573, baseType: !1745, size: 8, offset: 1432)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1733, file: !1734, line: 574, baseType: !1745, size: 8, offset: 1440)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !954, file: !158, line: 3405, baseType: !1901, size: 384)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1901, file: !158, line: 3353, baseType: !990, size: 192)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1901, file: !158, line: 3356, baseType: !1905, size: 192, offset: 192)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1734, line: 578, size: 192, elements: !1906)
!1906 = !{!1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1905, file: !1734, line: 580, baseType: !810, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1905, file: !1734, line: 581, baseType: !810, size: 32, offset: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1905, file: !1734, line: 582, baseType: !810, size: 32, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1905, file: !1734, line: 583, baseType: !810, size: 32, offset: 96)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1905, file: !1734, line: 584, baseType: !1065, size: 8, offset: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1905, file: !1734, line: 585, baseType: !1065, size: 8, offset: 136)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1905, file: !1734, line: 586, baseType: !1065, size: 8, offset: 144)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1905, file: !1734, line: 587, baseType: !1065, size: 8, offset: 152)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1905, file: !1734, line: 588, baseType: !1065, size: 8, offset: 160)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1905, file: !1734, line: 589, baseType: !1065, size: 8, offset: 168)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1905, file: !1734, line: 590, baseType: !1065, size: 8, offset: 176)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !830, file: !385, line: 178, baseType: !1372, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !830, file: !385, line: 179, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !385, line: 150, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !385, line: 142, size: 320, elements: !1923)
!1923 = !{!1924, !1925, !1926, !1927, !1928, !1929}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1922, file: !385, line: 144, baseType: !952, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1922, file: !385, line: 145, baseType: !839, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1922, file: !385, line: 146, baseType: !839, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1922, file: !385, line: 147, baseType: !1580, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1922, file: !385, line: 148, baseType: !7, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1922, file: !385, line: 149, baseType: !1065, size: 8, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !830, file: !385, line: 180, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !385, line: 162, baseType: !1933)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !385, line: 159, size: 128, elements: !1934)
!1934 = !{!1935, !1936}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1933, file: !385, line: 160, baseType: !952, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1933, file: !385, line: 161, baseType: !921, size: 64, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !830, file: !385, line: 181, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !385, line: 181, flags: DIFlagFwdDecl)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !825, file: !385, line: 317, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 64, elements: !849)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !825, file: !385, line: 318, baseType: !1943, size: 320)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !385, line: 188, size: 320, elements: !1944)
!1944 = !{!1945, !1947, !1970}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1943, file: !385, line: 190, baseType: !1946, size: 192)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !829, size: 192, elements: !1023)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1943, file: !385, line: 193, baseType: !1948, size: 64, offset: 192)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !385, line: 206, size: 320, elements: !1950)
!1950 = !{!1951, !1955, !1956, !1957, !1969}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1949, file: !385, line: 208, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !840, line: 62, baseType: !1954)
!1954 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !840, line: 61, flags: DIFlagFwdDecl)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1949, file: !385, line: 211, baseType: !7, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1949, file: !385, line: 214, baseType: !921, size: 64, offset: 128)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1949, file: !385, line: 224, baseType: !1958, size: 64, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !385, line: 202, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !385, line: 202, size: 128, elements: !1961)
!1961 = !{!1962}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1960, file: !385, line: 202, baseType: !1963, size: 128)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !385, line: 200, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !385, line: 200, size: 128, elements: !1965)
!1965 = !{!1966, !1967, !1968}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1964, file: !385, line: 200, baseType: !7, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1964, file: !385, line: 200, baseType: !7, size: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1964, file: !385, line: 200, baseType: !848, size: 64, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1949, file: !385, line: 234, baseType: !1958, size: 64, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1943, file: !385, line: 197, baseType: !921, size: 64, offset: 256)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !825, file: !385, line: 319, baseType: !1012, size: 256)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !825, file: !385, line: 320, baseType: !1031, size: 192)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !812)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_info_t", file: !1977, line: 113, size: 224, elements: !1978)
!1977 = !DIFile(filename: "./regs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1978 = !{!1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !1976, file: !1977, line: 115, baseType: !810, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "deaths", scope: !1976, file: !1977, line: 116, baseType: !810, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "live_length", scope: !1976, file: !1977, line: 117, baseType: !810, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "calls_crossed", scope: !1976, file: !1977, line: 118, baseType: !810, size: 32, offset: 96)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "freq_calls_crossed", scope: !1976, file: !1977, line: 119, baseType: !810, size: 32, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "throw_calls_crossed", scope: !1976, file: !1977, line: 120, baseType: !810, size: 32, offset: 160)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "basic_block", scope: !1976, file: !1977, line: 121, baseType: !810, size: 32, offset: 192)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1987, line: 42, baseType: !904)
!1987 = !DIFile(filename: "./hard-reg-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps_reg", file: !420, line: 440, size: 320, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1989, file: !420, line: 442, baseType: !839, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "sets", scope: !1989, file: !420, line: 443, baseType: !839, size: 64, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_sets", scope: !1989, file: !420, line: 444, baseType: !839, size: 64, offset: 128)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers", scope: !1989, file: !420, line: 445, baseType: !839, size: 64, offset: 192)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "uses_length", scope: !1989, file: !420, line: 446, baseType: !810, size: 32, offset: 256)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "clobbers_length", scope: !1989, file: !420, line: 447, baseType: !810, size: 32, offset: 288)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !890, line: 84, baseType: !889)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !840, line: 47, baseType: !888)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "dw_t", file: !420, line: 221, baseType: !810)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "deps_list_t", file: !420, line: 305, baseType: !2002)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_deps_list", file: !420, line: 297, size: 128, elements: !2004)
!2004 = !{!2005, !2027}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2003, file: !420, line: 300, baseType: !2006, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_link_t", file: !420, line: 280, baseType: !2007)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_link", file: !420, line: 265, size: 192, elements: !2009)
!2009 = !{!2010, !2024, !2025}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2008, file: !420, line: 268, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_node_t", file: !420, line: 261, baseType: !2012)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep_node", file: !420, line: 405, size: 576, elements: !2014)
!2014 = !{!2015, !2016, !2023}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2013, file: !420, line: 408, baseType: !2008, size: 192)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "dep", scope: !2013, file: !420, line: 411, baseType: !2017, size: 192, offset: 192)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dep", file: !420, line: 227, size: 192, elements: !2018)
!2018 = !{!2019, !2020, !2021, !2022}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "pro", scope: !2017, file: !420, line: 230, baseType: !839, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !2017, file: !420, line: 233, baseType: !839, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2017, file: !420, line: 237, baseType: !384, size: 32, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2017, file: !420, line: 241, baseType: !809, size: 32, offset: 160)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "forw", scope: !2013, file: !420, line: 414, baseType: !2008, size: 192, offset: 384)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2008, file: !420, line: 271, baseType: !2007, size: 64, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "prev_nextp", scope: !2008, file: !420, line: 278, baseType: !2026, size: 64, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "n_links", scope: !2003, file: !420, line: 303, baseType: !810, size: 32, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_use_data", file: !420, line: 726, size: 256, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !2029, file: !420, line: 729, baseType: !810, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2029, file: !420, line: 731, baseType: !839, size: 64, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "next_regno_use", scope: !2029, file: !420, line: 733, baseType: !2028, size: 64, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_use", scope: !2029, file: !420, line: 735, baseType: !2028, size: 64, offset: 192)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_pressure_data", file: !420, line: 711, size: 32, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2041}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "clobber_increase", scope: !2036, file: !420, line: 714, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "set_increase", scope: !2036, file: !420, line: 717, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "unused_set_increase", scope: !2036, file: !420, line: 720, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !2036, file: !420, line: 722, baseType: !810, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_set_data", file: !420, line: 741, size: 192, elements: !2045)
!2045 = !{!2046, !2047, !2048}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !2044, file: !420, line: 744, baseType: !810, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2044, file: !420, line: 746, baseType: !839, size: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "next_insn_set", scope: !2044, file: !420, line: 748, baseType: !2043, size: 64, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !840, line: 51, baseType: !1973)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_deps_insn_data_def_heap", file: !420, line: 847, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_deps_insn_data_def_heap", file: !420, line: 847, size: 512, elements: !2053)
!2053 = !{!2054}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2052, file: !420, line: 847, baseType: !2055, size: 512)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_deps_insn_data_def_base", file: !420, line: 846, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_deps_insn_data_def_base", file: !420, line: 846, size: 512, elements: !2057)
!2057 = !{!2058, !2059, !2060}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2056, file: !420, line: 846, baseType: !7, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2056, file: !420, line: 846, baseType: !7, size: 32, offset: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2056, file: !420, line: 846, baseType: !2061, size: 448, offset: 64)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2062, size: 448, elements: !849)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_deps_insn_data_def", file: !420, line: 843, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_deps_insn_data", file: !420, line: 663, size: 448, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "dep_count", scope: !2063, file: !420, line: 668, baseType: !810, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "has_internal_dep", scope: !2063, file: !420, line: 672, baseType: !7, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "hard_back_deps", scope: !2063, file: !420, line: 682, baseType: !2001, size: 64, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "spec_back_deps", scope: !2063, file: !420, line: 686, baseType: !2001, size: 64, offset: 128)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "forw_deps", scope: !2063, file: !420, line: 690, baseType: !2001, size: 64, offset: 192)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_back_deps", scope: !2063, file: !420, line: 694, baseType: !2001, size: 64, offset: 256)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_forw_deps", scope: !2063, file: !420, line: 699, baseType: !2001, size: 64, offset: 320)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "cant_move", scope: !2063, file: !420, line: 702, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!2073 = !{!0, !2074, !2113, !2136, !2138, !2140, !2142, !2144, !2146, !2148, !2150, !2152, !2154, !2156, !2158, !2160, !2162, !2177, !2179, !2181, !2183, !2186, !2191}
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "sched_deps_info", scope: !2, file: !3, line: 56, type: !2076, isLocal: false, isDefinition: true)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_deps_info_def", file: !420, line: 1149, size: 832, elements: !2078)
!2078 = !{!2079, !2084, !2088, !2092, !2093, !2094, !2095, !2096, !2100, !2101, !2102, !2106, !2110, !2111, !2112}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "compute_jump_reg_dependencies", scope: !2077, file: !420, line: 1154, baseType: !2080, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !839, !2083, !2083, !2083}
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !142, line: 37, baseType: !1999)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "start_insn", scope: !2077, file: !420, line: 1157, baseType: !2085, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{null, !839}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "finish_insn", scope: !2077, file: !420, line: 1160, baseType: !2089, size: 64, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{null}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "start_lhs", scope: !2077, file: !420, line: 1163, baseType: !2085, size: 64, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "finish_lhs", scope: !2077, file: !420, line: 1166, baseType: !2089, size: 64, offset: 256)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "start_rhs", scope: !2077, file: !420, line: 1169, baseType: !2085, size: 64, offset: 320)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "finish_rhs", scope: !2077, file: !420, line: 1172, baseType: !2089, size: 64, offset: 384)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_set", scope: !2077, file: !420, line: 1175, baseType: !2097, size: 64, offset: 448)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !810}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_clobber", scope: !2077, file: !420, line: 1178, baseType: !2097, size: 64, offset: 512)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "note_reg_use", scope: !2077, file: !420, line: 1181, baseType: !2097, size: 64, offset: 576)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "note_mem_dep", scope: !2077, file: !420, line: 1185, baseType: !2103, size: 64, offset: 640)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{null, !839, !839, !839, !809}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "note_dep", scope: !2077, file: !420, line: 1188, baseType: !2107, size: 64, offset: 704)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{null, !839, !809}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "use_cselib", scope: !2077, file: !420, line: 1194, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "use_deps_list", scope: !2077, file: !420, line: 1198, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "generate_spec_deps", scope: !2077, file: !420, line: 1202, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "dn_pool", scope: !2, file: !3, line: 308, type: !2115, isLocal: true, isDefinition: true)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2116, line: 58, baseType: !2117)
!2116 = !DIFile(filename: "./alloc-pool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2116, line: 32, size: 704, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2118, file: !2116, line: 34, baseType: !835, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2118, file: !2116, line: 38, baseType: !1309, size: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2118, file: !2116, line: 41, baseType: !2123, size: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2116, line: 30, baseType: !2124)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2116, line: 26, size: 64, elements: !2126)
!2126 = !{!2127}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2125, file: !2116, line: 28, baseType: !2124, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2118, file: !2116, line: 45, baseType: !927, size: 64, offset: 192)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2118, file: !2116, line: 49, baseType: !1309, size: 64, offset: 256)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2118, file: !2116, line: 51, baseType: !1309, size: 64, offset: 320)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2118, file: !2116, line: 52, baseType: !1309, size: 64, offset: 384)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2118, file: !2116, line: 53, baseType: !1309, size: 64, offset: 448)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2118, file: !2116, line: 54, baseType: !2123, size: 64, offset: 512)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2118, file: !2116, line: 55, baseType: !1309, size: 64, offset: 576)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2118, file: !2116, line: 56, baseType: !1309, size: 64, offset: 640)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "dl_pool", scope: !2, file: !3, line: 347, type: !2115, isLocal: true, isDefinition: true)
!2138 = !DIGlobalVariableExpression(var: !2139, expr: !DIExpression())
!2139 = distinct !DIGlobalVariable(name: "reg_pending_sets", scope: !2, file: !3, line: 410, type: !2083, isLocal: true, isDefinition: true)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "reg_pending_clobbers", scope: !2, file: !3, line: 411, type: !2083, isLocal: true, isDefinition: true)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "reg_pending_uses", scope: !2, file: !3, line: 412, type: !2083, isLocal: true, isDefinition: true)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "reg_pending_barrier", scope: !2, file: !3, line: 413, type: !587, isLocal: true, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "implicit_reg_pending_clobbers", scope: !2, file: !3, line: 421, type: !1986, isLocal: true, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "implicit_reg_pending_uses", scope: !2, file: !3, line: 422, type: !1986, isLocal: true, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "cache_size", scope: !2, file: !3, line: 441, type: !810, isLocal: true, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "dn_pool_diff", scope: !2, file: !3, line: 311, type: !810, isLocal: true, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "dl_pool_diff", scope: !2, file: !3, line: 350, type: !810, isLocal: true, isDefinition: true)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "true_dependency_cache", scope: !2, file: !3, line: 437, type: !1997, isLocal: true, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "output_dependency_cache", scope: !2, file: !3, line: 438, type: !1997, isLocal: true, isDefinition: true)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "anti_dependency_cache", scope: !2, file: !3, line: 439, type: !1997, isLocal: true, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "null_link", scope: !2164, file: !420, line: 1430, type: !2006, isLocal: true, isDefinition: true)
!2164 = distinct !DISubprogram(name: "sd_iterator_start", scope: !420, file: !420, line: 1427, type: !2165, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!2167, !839, !2171}
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_iterator_def", file: !420, line: 1414, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sd_iterator", file: !420, line: 1395, size: 256, elements: !2169)
!2169 = !{!2170, !2172, !2173, !2175}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2168, file: !420, line: 1398, baseType: !2171, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "sd_list_types_def", file: !420, line: 1390, baseType: !810)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2168, file: !420, line: 1401, baseType: !839, size: 64, offset: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "linkp", scope: !2168, file: !420, line: 1408, baseType: !2174, size: 64, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "resolved_p", scope: !2168, file: !420, line: 1411, baseType: !1065, size: 8, offset: 192)
!2176 = !{}
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "spec_dependency_cache", scope: !2, file: !3, line: 440, type: !1997, isLocal: true, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "dump_dep_flags", scope: !2, file: !3, line: 205, type: !810, isLocal: true, isDefinition: true)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "can_start_lhs_rhs_p", scope: !2, file: !3, line: 2056, type: !1065, isLocal: true, isDefinition: true)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "pressure_info", scope: !2185, file: !3, line: 2002, type: !2035, isLocal: true, isDefinition: true)
!2185 = distinct !DISubprogram(name: "setup_insn_reg_pressure_info", scope: !3, file: !3, line: 1998, type: !2086, scopeLine: 1999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2186 = !DIGlobalVariableExpression(var: !2187, expr: !DIExpression())
!2187 = distinct !DIGlobalVariable(name: "reg_pressure_info", scope: !2, file: !3, line: 1803, type: !2188, isLocal: true, isDefinition: true)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2036, size: 864, elements: !2189)
!2189 = !{!2190}
!2190 = !DISubrange(count: 27)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "cur_insn", scope: !2, file: !3, line: 1614, type: !839, isLocal: true, isDefinition: true)
!2193 = !{i32 7, !"Dwarf Version", i32 4}
!2194 = !{i32 2, !"Debug Info Version", i32 3}
!2195 = !{i32 1, !"wchar_size", i32 4}
!2196 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2197 = distinct !DISubprogram(name: "ds_to_dk", scope: !3, file: !3, line: 63, type: !2198, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!384, !809}
!2200 = !DILocalVariable(name: "ds", arg: 1, scope: !2197, file: !3, line: 63, type: !809)
!2201 = !DILocation(line: 63, column: 16, scope: !2197)
!2202 = !DILocation(line: 65, column: 7, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2197, file: !3, line: 65, column: 7)
!2204 = !DILocation(line: 65, column: 10, scope: !2203)
!2205 = !DILocation(line: 65, column: 7, scope: !2197)
!2206 = !DILocation(line: 66, column: 5, scope: !2203)
!2207 = !DILocation(line: 68, column: 7, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2197, file: !3, line: 68, column: 7)
!2209 = !DILocation(line: 68, column: 10, scope: !2208)
!2210 = !DILocation(line: 68, column: 7, scope: !2197)
!2211 = !DILocation(line: 69, column: 5, scope: !2208)
!2212 = !DILocation(line: 71, column: 3, scope: !2197)
!2213 = !DILocation(line: 73, column: 3, scope: !2197)
!2214 = !DILocation(line: 74, column: 1, scope: !2197)
!2215 = distinct !DISubprogram(name: "dk_to_ds", scope: !3, file: !3, line: 78, type: !2216, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!809, !384}
!2218 = !DILocalVariable(name: "dk", arg: 1, scope: !2215, file: !3, line: 78, type: !384)
!2219 = !DILocation(line: 78, column: 25, scope: !2215)
!2220 = !DILocation(line: 80, column: 11, scope: !2215)
!2221 = !DILocation(line: 80, column: 3, scope: !2215)
!2222 = !DILocation(line: 83, column: 7, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2215, file: !3, line: 81, column: 5)
!2224 = !DILocation(line: 86, column: 7, scope: !2223)
!2225 = !DILocation(line: 89, column: 7, scope: !2223)
!2226 = !DILocation(line: 90, column: 7, scope: !2223)
!2227 = !DILocation(line: 92, column: 1, scope: !2215)
!2228 = distinct !DISubprogram(name: "init_dep_1", scope: !3, file: !3, line: 98, type: !2229, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2229 = !DISubroutineType(types: !2230)
!2230 = !{null, !2231, !839, !839, !384, !809}
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_t", file: !420, line: 245, baseType: !2232)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "dep_def", file: !420, line: 244, baseType: !2017)
!2234 = !DILocalVariable(name: "dep", arg: 1, scope: !2228, file: !3, line: 98, type: !2231)
!2235 = !DILocation(line: 98, column: 19, scope: !2228)
!2236 = !DILocalVariable(name: "pro", arg: 2, scope: !2228, file: !3, line: 98, type: !839)
!2237 = !DILocation(line: 98, column: 28, scope: !2228)
!2238 = !DILocalVariable(name: "con", arg: 3, scope: !2228, file: !3, line: 98, type: !839)
!2239 = !DILocation(line: 98, column: 37, scope: !2228)
!2240 = !DILocalVariable(name: "type", arg: 4, scope: !2228, file: !3, line: 98, type: !384)
!2241 = !DILocation(line: 98, column: 56, scope: !2228)
!2242 = !DILocalVariable(name: "ds", arg: 5, scope: !2228, file: !3, line: 98, type: !809)
!2243 = !DILocation(line: 98, column: 67, scope: !2228)
!2244 = !DILocation(line: 100, column: 19, scope: !2228)
!2245 = !DILocation(line: 100, column: 3, scope: !2228)
!2246 = !DILocation(line: 100, column: 17, scope: !2228)
!2247 = !DILocation(line: 101, column: 19, scope: !2228)
!2248 = !DILocation(line: 101, column: 3, scope: !2228)
!2249 = !DILocation(line: 101, column: 17, scope: !2228)
!2250 = !DILocation(line: 102, column: 20, scope: !2228)
!2251 = !DILocation(line: 102, column: 3, scope: !2228)
!2252 = !DILocation(line: 102, column: 18, scope: !2228)
!2253 = !DILocation(line: 103, column: 22, scope: !2228)
!2254 = !DILocation(line: 103, column: 3, scope: !2228)
!2255 = !DILocation(line: 103, column: 20, scope: !2228)
!2256 = !DILocation(line: 104, column: 1, scope: !2228)
!2257 = distinct !DISubprogram(name: "init_dep", scope: !3, file: !3, line: 110, type: !2258, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{null, !2231, !839, !839, !384}
!2260 = !DILocalVariable(name: "dep", arg: 1, scope: !2257, file: !3, line: 110, type: !2231)
!2261 = !DILocation(line: 110, column: 17, scope: !2257)
!2262 = !DILocalVariable(name: "pro", arg: 2, scope: !2257, file: !3, line: 110, type: !839)
!2263 = !DILocation(line: 110, column: 26, scope: !2257)
!2264 = !DILocalVariable(name: "con", arg: 3, scope: !2257, file: !3, line: 110, type: !839)
!2265 = !DILocation(line: 110, column: 35, scope: !2257)
!2266 = !DILocalVariable(name: "kind", arg: 4, scope: !2257, file: !3, line: 110, type: !384)
!2267 = !DILocation(line: 110, column: 54, scope: !2257)
!2268 = !DILocalVariable(name: "ds", scope: !2257, file: !3, line: 112, type: !809)
!2269 = !DILocation(line: 112, column: 8, scope: !2257)
!2270 = !DILocation(line: 114, column: 8, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 114, column: 7)
!2272 = !DILocation(line: 114, column: 28, scope: !2271)
!2273 = !DILocation(line: 114, column: 34, scope: !2271)
!2274 = !DILocation(line: 114, column: 7, scope: !2257)
!2275 = !DILocation(line: 115, column: 20, scope: !2271)
!2276 = !DILocation(line: 115, column: 10, scope: !2271)
!2277 = !DILocation(line: 115, column: 8, scope: !2271)
!2278 = !DILocation(line: 115, column: 5, scope: !2271)
!2279 = !DILocation(line: 117, column: 8, scope: !2271)
!2280 = !DILocation(line: 119, column: 15, scope: !2257)
!2281 = !DILocation(line: 119, column: 20, scope: !2257)
!2282 = !DILocation(line: 119, column: 25, scope: !2257)
!2283 = !DILocation(line: 119, column: 30, scope: !2257)
!2284 = !DILocation(line: 119, column: 36, scope: !2257)
!2285 = !DILocation(line: 119, column: 3, scope: !2257)
!2286 = !DILocation(line: 120, column: 1, scope: !2257)
!2287 = distinct !DISubprogram(name: "sd_debug_dep", scope: !3, file: !3, line: 209, type: !2288, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{null, !2231}
!2290 = !DILocalVariable(name: "dep", arg: 1, scope: !2287, file: !3, line: 209, type: !2231)
!2291 = !DILocation(line: 209, column: 21, scope: !2287)
!2292 = !DILocation(line: 211, column: 13, scope: !2287)
!2293 = !DILocation(line: 211, column: 21, scope: !2287)
!2294 = !DILocation(line: 211, column: 3, scope: !2287)
!2295 = !DILocation(line: 212, column: 12, scope: !2287)
!2296 = !DILocation(line: 212, column: 3, scope: !2287)
!2297 = !DILocation(line: 213, column: 1, scope: !2287)
!2298 = distinct !DISubprogram(name: "dump_dep", scope: !3, file: !3, line: 155, type: !2299, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{null, !2301, !2231, !810}
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2303, line: 7, baseType: !2304)
!2303 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2305, line: 49, size: 1728, elements: !2306)
!2305 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2306 = !{!2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2322, !2324, !2325, !2326, !2329, !2331, !2332, !2333, !2336, !2338, !2341, !2344, !2345, !2346, !2347, !2348}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2304, file: !2305, line: 51, baseType: !810, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2304, file: !2305, line: 54, baseType: !927, size: 64, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2304, file: !2305, line: 55, baseType: !927, size: 64, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2304, file: !2305, line: 56, baseType: !927, size: 64, offset: 192)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2304, file: !2305, line: 57, baseType: !927, size: 64, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2304, file: !2305, line: 58, baseType: !927, size: 64, offset: 320)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2304, file: !2305, line: 59, baseType: !927, size: 64, offset: 384)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2304, file: !2305, line: 60, baseType: !927, size: 64, offset: 448)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2304, file: !2305, line: 61, baseType: !927, size: 64, offset: 512)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2304, file: !2305, line: 64, baseType: !927, size: 64, offset: 576)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2304, file: !2305, line: 65, baseType: !927, size: 64, offset: 640)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2304, file: !2305, line: 66, baseType: !927, size: 64, offset: 704)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2304, file: !2305, line: 68, baseType: !2320, size: 64, offset: 768)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2305, line: 36, flags: DIFlagFwdDecl)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2304, file: !2305, line: 70, baseType: !2323, size: 64, offset: 832)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2304, file: !2305, line: 72, baseType: !810, size: 32, offset: 896)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2304, file: !2305, line: 73, baseType: !810, size: 32, offset: 928)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2304, file: !2305, line: 74, baseType: !2327, size: 64, offset: 960)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2328, line: 152, baseType: !921)
!2328 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2304, file: !2305, line: 77, baseType: !2330, size: 16, offset: 1024)
!2330 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2304, file: !2305, line: 78, baseType: !1745, size: 8, offset: 1040)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2304, file: !2305, line: 79, baseType: !1047, size: 8, offset: 1048)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2304, file: !2305, line: 81, baseType: !2334, size: 64, offset: 1088)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2305, line: 43, baseType: null)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2304, file: !2305, line: 89, baseType: !2337, size: 64, offset: 1152)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2328, line: 153, baseType: !921)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2304, file: !2305, line: 91, baseType: !2339, size: 64, offset: 1216)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2305, line: 37, flags: DIFlagFwdDecl)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2304, file: !2305, line: 92, baseType: !2342, size: 64, offset: 1280)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2305, line: 38, flags: DIFlagFwdDecl)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2304, file: !2305, line: 93, baseType: !2323, size: 64, offset: 1344)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2304, file: !2305, line: 94, baseType: !942, size: 64, offset: 1408)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2304, file: !2305, line: 95, baseType: !1309, size: 64, offset: 1472)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2304, file: !2305, line: 96, baseType: !810, size: 32, offset: 1536)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2304, file: !2305, line: 98, baseType: !2349, size: 160, offset: 1568)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 160, elements: !2350)
!2350 = !{!2351}
!2351 = !DISubrange(count: 20)
!2352 = !DILocalVariable(name: "dump", arg: 1, scope: !2298, file: !3, line: 155, type: !2301)
!2353 = !DILocation(line: 155, column: 17, scope: !2298)
!2354 = !DILocalVariable(name: "dep", arg: 2, scope: !2298, file: !3, line: 155, type: !2231)
!2355 = !DILocation(line: 155, column: 29, scope: !2298)
!2356 = !DILocalVariable(name: "flags", arg: 3, scope: !2298, file: !3, line: 155, type: !810)
!2357 = !DILocation(line: 155, column: 38, scope: !2298)
!2358 = !DILocation(line: 157, column: 7, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 157, column: 7)
!2360 = !DILocation(line: 157, column: 13, scope: !2359)
!2361 = !DILocation(line: 157, column: 7, scope: !2298)
!2362 = !DILocation(line: 158, column: 11, scope: !2359)
!2363 = !DILocation(line: 158, column: 5, scope: !2359)
!2364 = !DILocation(line: 160, column: 12, scope: !2298)
!2365 = !DILocation(line: 160, column: 3, scope: !2298)
!2366 = !DILocation(line: 162, column: 7, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 162, column: 7)
!2368 = !DILocation(line: 162, column: 13, scope: !2367)
!2369 = !DILocation(line: 162, column: 7, scope: !2298)
!2370 = !DILocation(line: 163, column: 14, scope: !2367)
!2371 = !DILocation(line: 163, column: 28, scope: !2367)
!2372 = !DILocation(line: 163, column: 5, scope: !2367)
!2373 = !DILocation(line: 165, column: 7, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 165, column: 7)
!2375 = !DILocation(line: 165, column: 13, scope: !2374)
!2376 = !DILocation(line: 165, column: 7, scope: !2298)
!2377 = !DILocation(line: 166, column: 14, scope: !2374)
!2378 = !DILocation(line: 166, column: 28, scope: !2374)
!2379 = !DILocation(line: 166, column: 5, scope: !2374)
!2380 = !DILocation(line: 168, column: 7, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 168, column: 7)
!2382 = !DILocation(line: 168, column: 13, scope: !2381)
!2383 = !DILocation(line: 168, column: 7, scope: !2298)
!2384 = !DILocalVariable(name: "t", scope: !2385, file: !3, line: 170, type: !837)
!2385 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 169, column: 5)
!2386 = !DILocation(line: 170, column: 12, scope: !2385)
!2387 = !DILocalVariable(name: "type", scope: !2385, file: !3, line: 171, type: !384)
!2388 = !DILocation(line: 171, column: 21, scope: !2385)
!2389 = !DILocation(line: 171, column: 28, scope: !2385)
!2390 = !DILocation(line: 173, column: 15, scope: !2385)
!2391 = !DILocation(line: 173, column: 7, scope: !2385)
!2392 = !DILocation(line: 176, column: 6, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 174, column: 2)
!2394 = !DILocation(line: 177, column: 4, scope: !2393)
!2395 = !DILocation(line: 180, column: 6, scope: !2393)
!2396 = !DILocation(line: 181, column: 4, scope: !2393)
!2397 = !DILocation(line: 184, column: 6, scope: !2393)
!2398 = !DILocation(line: 185, column: 4, scope: !2393)
!2399 = !DILocation(line: 188, column: 4, scope: !2393)
!2400 = !DILocation(line: 189, column: 4, scope: !2393)
!2401 = !DILocation(line: 192, column: 16, scope: !2385)
!2402 = !DILocation(line: 192, column: 30, scope: !2385)
!2403 = !DILocation(line: 192, column: 7, scope: !2385)
!2404 = !DILocation(line: 193, column: 5, scope: !2385)
!2405 = !DILocation(line: 195, column: 7, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 195, column: 7)
!2407 = !DILocation(line: 195, column: 13, scope: !2406)
!2408 = !DILocation(line: 195, column: 7, scope: !2298)
!2409 = !DILocation(line: 197, column: 11, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 197, column: 11)
!2411 = distinct !DILexicalBlock(scope: !2406, file: !3, line: 196, column: 5)
!2412 = !DILocation(line: 197, column: 31, scope: !2410)
!2413 = !DILocation(line: 197, column: 37, scope: !2410)
!2414 = !DILocation(line: 197, column: 11, scope: !2411)
!2415 = !DILocation(line: 198, column: 11, scope: !2410)
!2416 = !DILocation(line: 198, column: 17, scope: !2410)
!2417 = !DILocation(line: 198, column: 2, scope: !2410)
!2418 = !DILocation(line: 199, column: 5, scope: !2411)
!2419 = !DILocation(line: 201, column: 12, scope: !2298)
!2420 = !DILocation(line: 201, column: 3, scope: !2298)
!2421 = !DILocation(line: 202, column: 1, scope: !2298)
!2422 = distinct !DISubprogram(name: "deps_pools_are_empty_p", scope: !3, file: !3, line: 389, type: !2423, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{!1065}
!2425 = !DILocation(line: 391, column: 10, scope: !2422)
!2426 = !DILocation(line: 391, column: 23, scope: !2422)
!2427 = !DILocation(line: 391, column: 28, scope: !2422)
!2428 = !DILocation(line: 391, column: 31, scope: !2422)
!2429 = !DILocation(line: 391, column: 44, scope: !2422)
!2430 = !DILocation(line: 0, scope: !2422)
!2431 = !DILocation(line: 391, column: 3, scope: !2422)
!2432 = distinct !DISubprogram(name: "sched_insns_conditions_mutex_p", scope: !3, file: !3, line: 552, type: !2433, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{!1065, !2049, !2049}
!2435 = !DILocalVariable(name: "insn1", arg: 1, scope: !2432, file: !3, line: 552, type: !2049)
!2436 = !DILocation(line: 552, column: 43, scope: !2432)
!2437 = !DILocalVariable(name: "insn2", arg: 2, scope: !2432, file: !3, line: 552, type: !2049)
!2438 = !DILocation(line: 552, column: 60, scope: !2432)
!2439 = !DILocalVariable(name: "cond1", scope: !2432, file: !3, line: 554, type: !839)
!2440 = !DILocation(line: 554, column: 7, scope: !2432)
!2441 = !DILocalVariable(name: "cond2", scope: !2432, file: !3, line: 554, type: !839)
!2442 = !DILocation(line: 554, column: 14, scope: !2432)
!2443 = !DILocalVariable(name: "rev1", scope: !2432, file: !3, line: 555, type: !1065)
!2444 = !DILocation(line: 555, column: 8, scope: !2432)
!2445 = !DILocalVariable(name: "rev2", scope: !2432, file: !3, line: 555, type: !1065)
!2446 = !DILocation(line: 555, column: 22, scope: !2432)
!2447 = !DILocation(line: 559, column: 8, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2432, file: !3, line: 559, column: 7)
!2449 = !DILocation(line: 559, column: 23, scope: !2448)
!2450 = !DILocation(line: 559, column: 27, scope: !2448)
!2451 = !DILocation(line: 559, column: 7, scope: !2432)
!2452 = !DILocation(line: 561, column: 45, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 560, column: 5)
!2454 = !DILocation(line: 561, column: 15, scope: !2453)
!2455 = !DILocation(line: 561, column: 13, scope: !2453)
!2456 = !DILocation(line: 562, column: 45, scope: !2453)
!2457 = !DILocation(line: 562, column: 15, scope: !2453)
!2458 = !DILocation(line: 562, column: 13, scope: !2453)
!2459 = !DILocation(line: 563, column: 11, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 563, column: 11)
!2461 = !DILocation(line: 563, column: 17, scope: !2460)
!2462 = !DILocation(line: 563, column: 20, scope: !2460)
!2463 = !DILocation(line: 564, column: 4, scope: !2460)
!2464 = !DILocation(line: 564, column: 27, scope: !2460)
!2465 = !DILocation(line: 564, column: 34, scope: !2460)
!2466 = !DILocation(line: 564, column: 41, scope: !2460)
!2467 = !DILocation(line: 564, column: 47, scope: !2460)
!2468 = !DILocation(line: 564, column: 7, scope: !2460)
!2469 = !DILocation(line: 567, column: 4, scope: !2460)
!2470 = !DILocation(line: 567, column: 23, scope: !2460)
!2471 = !DILocation(line: 567, column: 30, scope: !2460)
!2472 = !DILocation(line: 567, column: 8, scope: !2460)
!2473 = !DILocation(line: 570, column: 4, scope: !2460)
!2474 = !DILocation(line: 570, column: 23, scope: !2460)
!2475 = !DILocation(line: 570, column: 30, scope: !2460)
!2476 = !DILocation(line: 570, column: 8, scope: !2460)
!2477 = !DILocation(line: 563, column: 11, scope: !2453)
!2478 = !DILocation(line: 571, column: 2, scope: !2460)
!2479 = !DILocation(line: 572, column: 5, scope: !2453)
!2480 = !DILocation(line: 573, column: 3, scope: !2432)
!2481 = !DILocation(line: 574, column: 1, scope: !2432)
!2482 = distinct !DISubprogram(name: "sched_get_condition_with_rev", scope: !3, file: !3, line: 487, type: !2483, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!839, !2049, !2485}
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!2486 = !DILocalVariable(name: "insn", arg: 1, scope: !2482, file: !3, line: 487, type: !2049)
!2487 = !DILocation(line: 487, column: 41, scope: !2482)
!2488 = !DILocalVariable(name: "rev", arg: 2, scope: !2482, file: !3, line: 487, type: !2485)
!2489 = !DILocation(line: 487, column: 53, scope: !2482)
!2490 = !DILocalVariable(name: "pat", scope: !2482, file: !3, line: 489, type: !839)
!2491 = !DILocation(line: 489, column: 7, scope: !2482)
!2492 = !DILocation(line: 489, column: 13, scope: !2482)
!2493 = !DILocalVariable(name: "src", scope: !2482, file: !3, line: 490, type: !839)
!2494 = !DILocation(line: 490, column: 7, scope: !2482)
!2495 = !DILocation(line: 492, column: 7, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 492, column: 7)
!2497 = !DILocation(line: 492, column: 11, scope: !2496)
!2498 = !DILocation(line: 492, column: 7, scope: !2482)
!2499 = !DILocation(line: 493, column: 5, scope: !2496)
!2500 = !DILocation(line: 495, column: 7, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 495, column: 7)
!2502 = !DILocation(line: 495, column: 7, scope: !2482)
!2503 = !DILocation(line: 496, column: 6, scope: !2501)
!2504 = !DILocation(line: 496, column: 10, scope: !2501)
!2505 = !DILocation(line: 496, column: 5, scope: !2501)
!2506 = !DILocation(line: 498, column: 7, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 498, column: 7)
!2508 = !DILocation(line: 498, column: 22, scope: !2507)
!2509 = !DILocation(line: 498, column: 7, scope: !2482)
!2510 = !DILocation(line: 499, column: 12, scope: !2507)
!2511 = !DILocation(line: 499, column: 5, scope: !2507)
!2512 = !DILocation(line: 501, column: 24, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 501, column: 7)
!2514 = !DILocation(line: 501, column: 8, scope: !2513)
!2515 = !DILocation(line: 501, column: 30, scope: !2513)
!2516 = !DILocation(line: 501, column: 46, scope: !2513)
!2517 = !DILocation(line: 501, column: 34, scope: !2513)
!2518 = !DILocation(line: 501, column: 7, scope: !2482)
!2519 = !DILocation(line: 502, column: 5, scope: !2513)
!2520 = !DILocation(line: 504, column: 9, scope: !2482)
!2521 = !DILocation(line: 504, column: 7, scope: !2482)
!2522 = !DILocation(line: 506, column: 7, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 506, column: 7)
!2524 = !DILocation(line: 506, column: 24, scope: !2523)
!2525 = !DILocation(line: 506, column: 21, scope: !2523)
!2526 = !DILocation(line: 506, column: 7, scope: !2482)
!2527 = !DILocation(line: 507, column: 12, scope: !2523)
!2528 = !DILocation(line: 507, column: 5, scope: !2523)
!2529 = !DILocation(line: 508, column: 12, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2523, file: !3, line: 508, column: 12)
!2531 = !DILocation(line: 508, column: 29, scope: !2530)
!2532 = !DILocation(line: 508, column: 26, scope: !2530)
!2533 = !DILocation(line: 508, column: 12, scope: !2523)
!2534 = !DILocalVariable(name: "cond", scope: !2535, file: !3, line: 510, type: !839)
!2535 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 509, column: 5)
!2536 = !DILocation(line: 510, column: 11, scope: !2535)
!2537 = !DILocation(line: 510, column: 18, scope: !2535)
!2538 = !DILocalVariable(name: "revcode", scope: !2535, file: !3, line: 511, type: !434)
!2539 = !DILocation(line: 511, column: 21, scope: !2535)
!2540 = !DILocation(line: 511, column: 57, scope: !2535)
!2541 = !DILocation(line: 511, column: 63, scope: !2535)
!2542 = !DILocation(line: 511, column: 31, scope: !2535)
!2543 = !DILocation(line: 513, column: 11, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 513, column: 11)
!2545 = !DILocation(line: 513, column: 19, scope: !2544)
!2546 = !DILocation(line: 513, column: 11, scope: !2535)
!2547 = !DILocation(line: 514, column: 2, scope: !2544)
!2548 = !DILocation(line: 516, column: 11, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 516, column: 11)
!2550 = !DILocation(line: 516, column: 11, scope: !2535)
!2551 = !DILocation(line: 517, column: 3, scope: !2549)
!2552 = !DILocation(line: 517, column: 7, scope: !2549)
!2553 = !DILocation(line: 517, column: 2, scope: !2549)
!2554 = !DILocation(line: 518, column: 14, scope: !2535)
!2555 = !DILocation(line: 518, column: 7, scope: !2535)
!2556 = !DILocation(line: 521, column: 3, scope: !2482)
!2557 = !DILocation(line: 522, column: 1, scope: !2482)
!2558 = distinct !DISubprogram(name: "conditions_mutex_p", scope: !3, file: !3, line: 535, type: !2559, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!810, !2049, !2049, !1065, !1065}
!2561 = !DILocalVariable(name: "cond1", arg: 1, scope: !2558, file: !3, line: 535, type: !2049)
!2562 = !DILocation(line: 535, column: 31, scope: !2558)
!2563 = !DILocalVariable(name: "cond2", arg: 2, scope: !2558, file: !3, line: 535, type: !2049)
!2564 = !DILocation(line: 535, column: 48, scope: !2558)
!2565 = !DILocalVariable(name: "rev1", arg: 3, scope: !2558, file: !3, line: 535, type: !1065)
!2566 = !DILocation(line: 535, column: 60, scope: !2558)
!2567 = !DILocalVariable(name: "rev2", arg: 4, scope: !2558, file: !3, line: 535, type: !1065)
!2568 = !DILocation(line: 535, column: 71, scope: !2558)
!2569 = !DILocation(line: 537, column: 7, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2558, file: !3, line: 537, column: 7)
!2571 = !DILocation(line: 538, column: 7, scope: !2570)
!2572 = !DILocation(line: 538, column: 10, scope: !2570)
!2573 = !DILocation(line: 539, column: 7, scope: !2570)
!2574 = !DILocation(line: 539, column: 10, scope: !2570)
!2575 = !DILocation(line: 540, column: 5, scope: !2570)
!2576 = !DILocation(line: 540, column: 11, scope: !2570)
!2577 = !DILocation(line: 540, column: 9, scope: !2570)
!2578 = !DILocation(line: 541, column: 32, scope: !2570)
!2579 = !DILocation(line: 541, column: 6, scope: !2570)
!2580 = !DILocation(line: 542, column: 6, scope: !2570)
!2581 = !DILocation(line: 539, column: 27, scope: !2570)
!2582 = !DILocation(line: 543, column: 7, scope: !2570)
!2583 = !DILocation(line: 543, column: 10, scope: !2570)
!2584 = !DILocation(line: 543, column: 29, scope: !2570)
!2585 = !DILocation(line: 543, column: 26, scope: !2570)
!2586 = !DILocation(line: 544, column: 7, scope: !2570)
!2587 = !DILocation(line: 544, column: 10, scope: !2570)
!2588 = !DILocation(line: 544, column: 29, scope: !2570)
!2589 = !DILocation(line: 544, column: 26, scope: !2570)
!2590 = !DILocation(line: 537, column: 7, scope: !2558)
!2591 = !DILocation(line: 545, column: 5, scope: !2570)
!2592 = !DILocation(line: 546, column: 3, scope: !2558)
!2593 = !DILocation(line: 547, column: 1, scope: !2558)
!2594 = distinct !DISubprogram(name: "sched_insn_is_legitimate_for_speculation_p", scope: !3, file: !3, line: 579, type: !2595, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!1065, !2049, !809}
!2597 = !DILocalVariable(name: "insn", arg: 1, scope: !2594, file: !3, line: 579, type: !2049)
!2598 = !DILocation(line: 579, column: 55, scope: !2594)
!2599 = !DILocalVariable(name: "ds", arg: 2, scope: !2594, file: !3, line: 579, type: !809)
!2600 = !DILocation(line: 579, column: 66, scope: !2594)
!2601 = !DILocation(line: 581, column: 7, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 581, column: 7)
!2603 = !DILocation(line: 581, column: 7, scope: !2594)
!2604 = !DILocation(line: 582, column: 5, scope: !2602)
!2605 = !DILocation(line: 584, column: 8, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 584, column: 7)
!2607 = !DILocation(line: 584, column: 7, scope: !2594)
!2608 = !DILocation(line: 585, column: 5, scope: !2606)
!2609 = !DILocation(line: 587, column: 7, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 587, column: 7)
!2611 = !DILocation(line: 587, column: 7, scope: !2594)
!2612 = !DILocation(line: 588, column: 5, scope: !2610)
!2613 = !DILocation(line: 590, column: 7, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 590, column: 7)
!2615 = !DILocation(line: 590, column: 7, scope: !2594)
!2616 = !DILocation(line: 591, column: 5, scope: !2614)
!2617 = !DILocation(line: 593, column: 23, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 593, column: 7)
!2619 = !DILocation(line: 593, column: 7, scope: !2618)
!2620 = !DILocation(line: 593, column: 7, scope: !2594)
!2621 = !DILocation(line: 594, column: 5, scope: !2618)
!2622 = !DILocation(line: 596, column: 7, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 596, column: 7)
!2624 = !DILocation(line: 596, column: 10, scope: !2623)
!2625 = !DILocation(line: 596, column: 7, scope: !2594)
!2626 = !DILocation(line: 600, column: 23, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 600, column: 11)
!2628 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 599, column: 5)
!2629 = !DILocation(line: 600, column: 11, scope: !2627)
!2630 = !DILocation(line: 600, column: 11, scope: !2628)
!2631 = !DILocation(line: 605, column: 2, scope: !2627)
!2632 = !DILocation(line: 607, column: 12, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2628, file: !3, line: 607, column: 11)
!2634 = !DILocation(line: 607, column: 15, scope: !2633)
!2635 = !DILocation(line: 608, column: 4, scope: !2633)
!2636 = !DILocation(line: 608, column: 30, scope: !2633)
!2637 = !DILocation(line: 608, column: 7, scope: !2633)
!2638 = !DILocation(line: 607, column: 11, scope: !2628)
!2639 = !DILocation(line: 611, column: 2, scope: !2633)
!2640 = !DILocation(line: 612, column: 5, scope: !2628)
!2641 = !DILocation(line: 614, column: 3, scope: !2594)
!2642 = !DILocation(line: 615, column: 1, scope: !2594)
!2643 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_index", scope: !420, file: !420, line: 846, type: !2644, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!2646, !2647, !7}
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2648 = !DILocalVariable(name: "vec_", arg: 1, scope: !2643, file: !420, line: 846, type: !2647)
!2649 = !DILocation(line: 846, column: 1, scope: !2643)
!2650 = !DILocalVariable(name: "ix_", arg: 2, scope: !2643, file: !420, line: 846, type: !7)
!2651 = !DILocation(line: 0, scope: !2643)
!2652 = distinct !DISubprogram(name: "VEC_int_base_index", scope: !1354, file: !1354, line: 31, type: !2653, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!810, !2655, !7}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2657)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1354, line: 31, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1354, line: 31, size: 96, elements: !2659)
!2659 = !{!2660, !2661, !2662}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2658, file: !1354, line: 31, baseType: !7, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2658, file: !1354, line: 31, baseType: !7, size: 32, offset: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2658, file: !1354, line: 31, baseType: !2663, size: 32, offset: 64)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !810, size: 32, elements: !849)
!2664 = !DILocalVariable(name: "vec_", arg: 1, scope: !2652, file: !1354, line: 31, type: !2655)
!2665 = !DILocation(line: 31, column: 1, scope: !2652)
!2666 = !DILocalVariable(name: "ix_", arg: 2, scope: !2652, file: !1354, line: 31, type: !7)
!2667 = !DILocation(line: 0, scope: !2652)
!2668 = distinct !DISubprogram(name: "sel_sched_p", scope: !420, file: !420, line: 117, type: !2423, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2669 = !DILocation(line: 119, column: 10, scope: !2668)
!2670 = !DILocation(line: 119, column: 29, scope: !2668)
!2671 = !DILocation(line: 119, column: 43, scope: !2668)
!2672 = !DILocation(line: 119, column: 3, scope: !2668)
!2673 = distinct !DISubprogram(name: "VEC_haifa_insn_data_def_base_index", scope: !420, file: !420, line: 825, type: !2674, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{!2676, !2700, !7}
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "haifa_insn_data_def", file: !420, line: 822, baseType: !2678)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_haifa_insn_data", file: !420, line: 751, size: 768, elements: !2679)
!2679 = !{!2680, !2681, !2682, !2683, !2684, !2685, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !2678, file: !420, line: 758, baseType: !810, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2678, file: !420, line: 761, baseType: !810, size: 32, offset: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "tick", scope: !2678, file: !420, line: 765, baseType: !810, size: 32, offset: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "inter_tick", scope: !2678, file: !420, line: 769, baseType: !810, size: 32, offset: 96)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !2678, file: !420, line: 772, baseType: !810, size: 32, offset: 128)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2678, file: !420, line: 774, baseType: !2686, size: 16, offset: 160)
!2686 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "fed_by_spec_load", scope: !2678, file: !420, line: 778, baseType: !7, size: 1, offset: 176, flags: DIFlagBitField, extraData: i64 176)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "is_load_insn", scope: !2678, file: !420, line: 779, baseType: !7, size: 1, offset: 177, flags: DIFlagBitField, extraData: i64 176)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "priority_status", scope: !2678, file: !420, line: 784, baseType: !1745, size: 8, offset: 184)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "todo_spec", scope: !2678, file: !420, line: 787, baseType: !809, size: 32, offset: 192)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "done_spec", scope: !2678, file: !420, line: 790, baseType: !809, size: 32, offset: 224)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "check_spec", scope: !2678, file: !420, line: 793, baseType: !809, size: 32, offset: 256)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_block", scope: !2678, file: !420, line: 796, baseType: !1371, size: 64, offset: 320)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pat", scope: !2678, file: !420, line: 799, baseType: !839, size: 64, offset: 384)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure", scope: !2678, file: !420, line: 804, baseType: !2035, size: 64, offset: 448)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_pressure", scope: !2678, file: !420, line: 810, baseType: !2042, size: 64, offset: 512)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "reg_use_list", scope: !2678, file: !420, line: 813, baseType: !2028, size: 64, offset: 576)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "reg_set_list", scope: !2678, file: !420, line: 816, baseType: !2043, size: 64, offset: 640)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure_excess_cost_change", scope: !2678, file: !420, line: 819, baseType: !810, size: 32, offset: 704)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_haifa_insn_data_def_base", file: !420, line: 825, baseType: !2702)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_haifa_insn_data_def_base", file: !420, line: 825, size: 832, elements: !2703)
!2703 = !{!2704, !2705, !2706}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2702, file: !420, line: 825, baseType: !7, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2702, file: !420, line: 825, baseType: !7, size: 32, offset: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2702, file: !420, line: 825, baseType: !2707, size: 768, offset: 64)
!2707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2677, size: 768, elements: !849)
!2708 = !DILocalVariable(name: "vec_", arg: 1, scope: !2673, file: !420, line: 825, type: !2700)
!2709 = !DILocation(line: 825, column: 1, scope: !2673)
!2710 = !DILocalVariable(name: "ix_", arg: 2, scope: !2673, file: !420, line: 825, type: !7)
!2711 = !DILocation(line: 0, scope: !2673)
!2712 = distinct !DISubprogram(name: "sched_has_condition_p", scope: !3, file: !3, line: 526, type: !2713, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!1065, !2049}
!2715 = !DILocalVariable(name: "insn", arg: 1, scope: !2712, file: !3, line: 526, type: !2049)
!2716 = !DILocation(line: 526, column: 34, scope: !2712)
!2717 = !DILocation(line: 528, column: 43, scope: !2712)
!2718 = !DILocation(line: 528, column: 13, scope: !2712)
!2719 = !DILocation(line: 528, column: 11, scope: !2712)
!2720 = !DILocation(line: 528, column: 10, scope: !2712)
!2721 = !DILocation(line: 528, column: 3, scope: !2712)
!2722 = distinct !DISubprogram(name: "sd_next_list", scope: !3, file: !3, line: 623, type: !2723, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{null, !2049, !2725, !2726, !2485}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2727 = !DILocalVariable(name: "insn", arg: 1, scope: !2722, file: !3, line: 623, type: !2049)
!2728 = !DILocation(line: 623, column: 25, scope: !2722)
!2729 = !DILocalVariable(name: "types_ptr", arg: 2, scope: !2722, file: !3, line: 623, type: !2725)
!2730 = !DILocation(line: 623, column: 50, scope: !2722)
!2731 = !DILocalVariable(name: "list_ptr", arg: 3, scope: !2722, file: !3, line: 624, type: !2726)
!2732 = !DILocation(line: 624, column: 21, scope: !2722)
!2733 = !DILocalVariable(name: "resolved_p_ptr", arg: 4, scope: !2722, file: !3, line: 624, type: !2485)
!2734 = !DILocation(line: 624, column: 37, scope: !2722)
!2735 = !DILocalVariable(name: "types", scope: !2722, file: !3, line: 626, type: !2171)
!2736 = !DILocation(line: 626, column: 21, scope: !2722)
!2737 = !DILocation(line: 626, column: 30, scope: !2722)
!2738 = !DILocation(line: 626, column: 29, scope: !2722)
!2739 = !DILocation(line: 628, column: 7, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 628, column: 7)
!2741 = !DILocation(line: 628, column: 13, scope: !2740)
!2742 = !DILocation(line: 628, column: 7, scope: !2722)
!2743 = !DILocation(line: 630, column: 19, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 629, column: 5)
!2745 = !DILocation(line: 630, column: 8, scope: !2744)
!2746 = !DILocation(line: 630, column: 17, scope: !2744)
!2747 = !DILocation(line: 631, column: 8, scope: !2744)
!2748 = !DILocation(line: 631, column: 23, scope: !2744)
!2749 = !DILocation(line: 632, column: 20, scope: !2744)
!2750 = !DILocation(line: 632, column: 26, scope: !2744)
!2751 = !DILocation(line: 632, column: 8, scope: !2744)
!2752 = !DILocation(line: 632, column: 18, scope: !2744)
!2753 = !DILocation(line: 633, column: 5, scope: !2744)
!2754 = !DILocation(line: 634, column: 12, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 634, column: 12)
!2756 = !DILocation(line: 634, column: 18, scope: !2755)
!2757 = !DILocation(line: 634, column: 12, scope: !2740)
!2758 = !DILocation(line: 636, column: 19, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 635, column: 5)
!2760 = !DILocation(line: 636, column: 8, scope: !2759)
!2761 = !DILocation(line: 636, column: 17, scope: !2759)
!2762 = !DILocation(line: 637, column: 8, scope: !2759)
!2763 = !DILocation(line: 637, column: 23, scope: !2759)
!2764 = !DILocation(line: 638, column: 20, scope: !2759)
!2765 = !DILocation(line: 638, column: 26, scope: !2759)
!2766 = !DILocation(line: 638, column: 8, scope: !2759)
!2767 = !DILocation(line: 638, column: 18, scope: !2759)
!2768 = !DILocation(line: 639, column: 5, scope: !2759)
!2769 = !DILocation(line: 640, column: 12, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 640, column: 12)
!2771 = !DILocation(line: 640, column: 18, scope: !2770)
!2772 = !DILocation(line: 640, column: 12, scope: !2755)
!2773 = !DILocation(line: 642, column: 19, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 641, column: 5)
!2775 = !DILocation(line: 642, column: 8, scope: !2774)
!2776 = !DILocation(line: 642, column: 17, scope: !2774)
!2777 = !DILocation(line: 643, column: 8, scope: !2774)
!2778 = !DILocation(line: 643, column: 23, scope: !2774)
!2779 = !DILocation(line: 644, column: 20, scope: !2774)
!2780 = !DILocation(line: 644, column: 26, scope: !2774)
!2781 = !DILocation(line: 644, column: 8, scope: !2774)
!2782 = !DILocation(line: 644, column: 18, scope: !2774)
!2783 = !DILocation(line: 645, column: 5, scope: !2774)
!2784 = !DILocation(line: 646, column: 12, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 646, column: 12)
!2786 = !DILocation(line: 646, column: 18, scope: !2785)
!2787 = !DILocation(line: 646, column: 12, scope: !2770)
!2788 = !DILocation(line: 648, column: 19, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 647, column: 5)
!2790 = !DILocation(line: 648, column: 8, scope: !2789)
!2791 = !DILocation(line: 648, column: 17, scope: !2789)
!2792 = !DILocation(line: 649, column: 8, scope: !2789)
!2793 = !DILocation(line: 649, column: 23, scope: !2789)
!2794 = !DILocation(line: 650, column: 20, scope: !2789)
!2795 = !DILocation(line: 650, column: 26, scope: !2789)
!2796 = !DILocation(line: 650, column: 8, scope: !2789)
!2797 = !DILocation(line: 650, column: 18, scope: !2789)
!2798 = !DILocation(line: 651, column: 5, scope: !2789)
!2799 = !DILocation(line: 652, column: 12, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 652, column: 12)
!2801 = !DILocation(line: 652, column: 18, scope: !2800)
!2802 = !DILocation(line: 652, column: 12, scope: !2785)
!2803 = !DILocation(line: 654, column: 19, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 653, column: 5)
!2805 = !DILocation(line: 654, column: 8, scope: !2804)
!2806 = !DILocation(line: 654, column: 17, scope: !2804)
!2807 = !DILocation(line: 655, column: 8, scope: !2804)
!2808 = !DILocation(line: 655, column: 23, scope: !2804)
!2809 = !DILocation(line: 656, column: 20, scope: !2804)
!2810 = !DILocation(line: 656, column: 26, scope: !2804)
!2811 = !DILocation(line: 656, column: 8, scope: !2804)
!2812 = !DILocation(line: 656, column: 18, scope: !2804)
!2813 = !DILocation(line: 657, column: 5, scope: !2804)
!2814 = !DILocation(line: 660, column: 8, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 659, column: 5)
!2816 = !DILocation(line: 660, column: 17, scope: !2815)
!2817 = !DILocation(line: 661, column: 8, scope: !2815)
!2818 = !DILocation(line: 661, column: 23, scope: !2815)
!2819 = !DILocation(line: 662, column: 8, scope: !2815)
!2820 = !DILocation(line: 662, column: 18, scope: !2815)
!2821 = !DILocation(line: 664, column: 1, scope: !2722)
!2822 = distinct !DISubprogram(name: "sd_lists_size", scope: !3, file: !3, line: 668, type: !2823, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!810, !2049, !2171}
!2825 = !DILocalVariable(name: "insn", arg: 1, scope: !2822, file: !3, line: 668, type: !2049)
!2826 = !DILocation(line: 668, column: 26, scope: !2822)
!2827 = !DILocalVariable(name: "list_types", arg: 2, scope: !2822, file: !3, line: 668, type: !2171)
!2828 = !DILocation(line: 668, column: 50, scope: !2822)
!2829 = !DILocalVariable(name: "size", scope: !2822, file: !3, line: 670, type: !810)
!2830 = !DILocation(line: 670, column: 7, scope: !2822)
!2831 = !DILocation(line: 672, column: 3, scope: !2822)
!2832 = !DILocation(line: 672, column: 10, scope: !2822)
!2833 = !DILocation(line: 672, column: 21, scope: !2822)
!2834 = !DILocalVariable(name: "list", scope: !2835, file: !3, line: 674, type: !2001)
!2835 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 673, column: 5)
!2836 = !DILocation(line: 674, column: 19, scope: !2835)
!2837 = !DILocalVariable(name: "resolved_p", scope: !2835, file: !3, line: 675, type: !1065)
!2838 = !DILocation(line: 675, column: 12, scope: !2835)
!2839 = !DILocation(line: 677, column: 21, scope: !2835)
!2840 = !DILocation(line: 677, column: 7, scope: !2835)
!2841 = !DILocation(line: 678, column: 11, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 678, column: 11)
!2843 = !DILocation(line: 678, column: 11, scope: !2835)
!2844 = !DILocation(line: 679, column: 10, scope: !2842)
!2845 = !DILocation(line: 679, column: 7, scope: !2842)
!2846 = !DILocation(line: 679, column: 2, scope: !2842)
!2847 = distinct !{!2847, !2831, !2848}
!2848 = !DILocation(line: 680, column: 5, scope: !2822)
!2849 = !DILocation(line: 682, column: 10, scope: !2822)
!2850 = !DILocation(line: 682, column: 3, scope: !2822)
!2851 = distinct !DISubprogram(name: "sd_lists_empty_p", scope: !3, file: !3, line: 688, type: !2852, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{!1065, !2049, !2171}
!2854 = !DILocalVariable(name: "insn", arg: 1, scope: !2851, file: !3, line: 688, type: !2049)
!2855 = !DILocation(line: 688, column: 29, scope: !2851)
!2856 = !DILocalVariable(name: "list_types", arg: 2, scope: !2851, file: !3, line: 688, type: !2171)
!2857 = !DILocation(line: 688, column: 53, scope: !2851)
!2858 = !DILocation(line: 690, column: 3, scope: !2851)
!2859 = !DILocation(line: 690, column: 10, scope: !2851)
!2860 = !DILocation(line: 690, column: 21, scope: !2851)
!2861 = !DILocalVariable(name: "list", scope: !2862, file: !3, line: 692, type: !2001)
!2862 = distinct !DILexicalBlock(scope: !2851, file: !3, line: 691, column: 5)
!2863 = !DILocation(line: 692, column: 19, scope: !2862)
!2864 = !DILocalVariable(name: "resolved_p", scope: !2862, file: !3, line: 693, type: !1065)
!2865 = !DILocation(line: 693, column: 12, scope: !2862)
!2866 = !DILocation(line: 695, column: 21, scope: !2862)
!2867 = !DILocation(line: 695, column: 7, scope: !2862)
!2868 = !DILocation(line: 696, column: 31, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 696, column: 11)
!2870 = !DILocation(line: 696, column: 12, scope: !2869)
!2871 = !DILocation(line: 696, column: 11, scope: !2862)
!2872 = !DILocation(line: 697, column: 2, scope: !2869)
!2873 = distinct !{!2873, !2858, !2874}
!2874 = !DILocation(line: 698, column: 5, scope: !2851)
!2875 = !DILocation(line: 700, column: 3, scope: !2851)
!2876 = !DILocation(line: 701, column: 1, scope: !2851)
!2877 = distinct !DISubprogram(name: "deps_list_empty_p", scope: !3, file: !3, line: 356, type: !2878, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!1065, !2001}
!2880 = !DILocalVariable(name: "l", arg: 1, scope: !2877, file: !3, line: 356, type: !2001)
!2881 = !DILocation(line: 356, column: 32, scope: !2877)
!2882 = !DILocation(line: 358, column: 10, scope: !2877)
!2883 = !DILocation(line: 358, column: 32, scope: !2877)
!2884 = !DILocation(line: 358, column: 3, scope: !2877)
!2885 = distinct !DISubprogram(name: "sd_init_insn", scope: !3, file: !3, line: 705, type: !2086, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2886 = !DILocalVariable(name: "insn", arg: 1, scope: !2885, file: !3, line: 705, type: !839)
!2887 = !DILocation(line: 705, column: 19, scope: !2885)
!2888 = !DILocation(line: 707, column: 32, scope: !2885)
!2889 = !DILocation(line: 707, column: 3, scope: !2885)
!2890 = !DILocation(line: 707, column: 30, scope: !2885)
!2891 = !DILocation(line: 708, column: 32, scope: !2885)
!2892 = !DILocation(line: 708, column: 3, scope: !2885)
!2893 = !DILocation(line: 708, column: 30, scope: !2885)
!2894 = !DILocation(line: 709, column: 36, scope: !2885)
!2895 = !DILocation(line: 709, column: 3, scope: !2885)
!2896 = !DILocation(line: 709, column: 34, scope: !2885)
!2897 = !DILocation(line: 710, column: 27, scope: !2885)
!2898 = !DILocation(line: 710, column: 3, scope: !2885)
!2899 = !DILocation(line: 710, column: 25, scope: !2885)
!2900 = !DILocation(line: 711, column: 36, scope: !2885)
!2901 = !DILocation(line: 711, column: 3, scope: !2885)
!2902 = !DILocation(line: 711, column: 34, scope: !2885)
!2903 = !DILocation(line: 713, column: 7, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 713, column: 7)
!2905 = !DILocation(line: 713, column: 7, scope: !2885)
!2906 = !DILocation(line: 714, column: 5, scope: !2904)
!2907 = !DILocation(line: 714, column: 31, scope: !2904)
!2908 = !DILocation(line: 717, column: 1, scope: !2885)
!2909 = distinct !DISubprogram(name: "create_deps_list", scope: !3, file: !3, line: 363, type: !2910, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!2001}
!2912 = !DILocalVariable(name: "l", scope: !2909, file: !3, line: 365, type: !2001)
!2913 = !DILocation(line: 365, column: 15, scope: !2909)
!2914 = !DILocation(line: 365, column: 45, scope: !2909)
!2915 = !DILocation(line: 365, column: 33, scope: !2909)
!2916 = !DILocation(line: 365, column: 19, scope: !2909)
!2917 = !DILocation(line: 367, column: 3, scope: !2909)
!2918 = !DILocation(line: 367, column: 23, scope: !2909)
!2919 = !DILocation(line: 368, column: 3, scope: !2909)
!2920 = !DILocation(line: 368, column: 25, scope: !2909)
!2921 = !DILocation(line: 370, column: 3, scope: !2909)
!2922 = !DILocation(line: 371, column: 10, scope: !2909)
!2923 = !DILocation(line: 371, column: 3, scope: !2909)
!2924 = distinct !DISubprogram(name: "sd_finish_insn", scope: !3, file: !3, line: 721, type: !2086, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2925 = !DILocalVariable(name: "insn", arg: 1, scope: !2924, file: !3, line: 721, type: !839)
!2926 = !DILocation(line: 721, column: 21, scope: !2924)
!2927 = !DILocation(line: 725, column: 7, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 725, column: 7)
!2929 = !DILocation(line: 725, column: 7, scope: !2924)
!2930 = !DILocation(line: 727, column: 7, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 726, column: 5)
!2932 = !DILocation(line: 728, column: 7, scope: !2931)
!2933 = !DILocation(line: 728, column: 33, scope: !2931)
!2934 = !DILocation(line: 729, column: 5, scope: !2931)
!2935 = !DILocation(line: 731, column: 19, scope: !2924)
!2936 = !DILocation(line: 731, column: 3, scope: !2924)
!2937 = !DILocation(line: 732, column: 3, scope: !2924)
!2938 = !DILocation(line: 732, column: 30, scope: !2924)
!2939 = !DILocation(line: 734, column: 19, scope: !2924)
!2940 = !DILocation(line: 734, column: 3, scope: !2924)
!2941 = !DILocation(line: 735, column: 3, scope: !2924)
!2942 = !DILocation(line: 735, column: 30, scope: !2924)
!2943 = !DILocation(line: 737, column: 19, scope: !2924)
!2944 = !DILocation(line: 737, column: 3, scope: !2924)
!2945 = !DILocation(line: 738, column: 3, scope: !2924)
!2946 = !DILocation(line: 738, column: 34, scope: !2924)
!2947 = !DILocation(line: 740, column: 19, scope: !2924)
!2948 = !DILocation(line: 740, column: 3, scope: !2924)
!2949 = !DILocation(line: 741, column: 3, scope: !2924)
!2950 = !DILocation(line: 741, column: 25, scope: !2924)
!2951 = !DILocation(line: 743, column: 19, scope: !2924)
!2952 = !DILocation(line: 743, column: 3, scope: !2924)
!2953 = !DILocation(line: 744, column: 3, scope: !2924)
!2954 = !DILocation(line: 744, column: 34, scope: !2924)
!2955 = !DILocation(line: 745, column: 1, scope: !2924)
!2956 = distinct !DISubprogram(name: "free_deps_list", scope: !3, file: !3, line: 376, type: !2957, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{null, !2001}
!2959 = !DILocalVariable(name: "l", arg: 1, scope: !2956, file: !3, line: 376, type: !2001)
!2960 = !DILocation(line: 376, column: 29, scope: !2956)
!2961 = !DILocation(line: 378, column: 3, scope: !2956)
!2962 = !DILocation(line: 380, column: 3, scope: !2956)
!2963 = !DILocation(line: 382, column: 14, scope: !2956)
!2964 = !DILocation(line: 382, column: 23, scope: !2956)
!2965 = !DILocation(line: 382, column: 3, scope: !2956)
!2966 = !DILocation(line: 383, column: 1, scope: !2956)
!2967 = distinct !DISubprogram(name: "sd_find_dep_between", scope: !3, file: !3, line: 812, type: !2968, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!2231, !839, !839, !1065}
!2970 = !DILocalVariable(name: "pro", arg: 1, scope: !2967, file: !3, line: 812, type: !839)
!2971 = !DILocation(line: 812, column: 26, scope: !2967)
!2972 = !DILocalVariable(name: "con", arg: 2, scope: !2967, file: !3, line: 812, type: !839)
!2973 = !DILocation(line: 812, column: 35, scope: !2967)
!2974 = !DILocalVariable(name: "resolved_p", arg: 3, scope: !2967, file: !3, line: 812, type: !1065)
!2975 = !DILocation(line: 812, column: 45, scope: !2967)
!2976 = !DILocation(line: 814, column: 7, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 814, column: 7)
!2978 = !DILocation(line: 814, column: 29, scope: !2977)
!2979 = !DILocation(line: 814, column: 7, scope: !2967)
!2980 = !DILocalVariable(name: "elem_luid", scope: !2981, file: !3, line: 818, type: !810)
!2981 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 817, column: 5)
!2982 = !DILocation(line: 818, column: 11, scope: !2981)
!2983 = !DILocation(line: 818, column: 23, scope: !2981)
!2984 = !DILocalVariable(name: "insn_luid", scope: !2981, file: !3, line: 819, type: !810)
!2985 = !DILocation(line: 819, column: 11, scope: !2981)
!2986 = !DILocation(line: 819, column: 23, scope: !2981)
!2987 = !DILocation(line: 821, column: 7, scope: !2981)
!2988 = !DILocation(line: 824, column: 27, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 824, column: 11)
!2990 = !DILocation(line: 824, column: 49, scope: !2989)
!2991 = !DILocation(line: 824, column: 61, scope: !2989)
!2992 = !DILocation(line: 824, column: 12, scope: !2989)
!2993 = !DILocation(line: 825, column: 4, scope: !2989)
!2994 = !DILocation(line: 825, column: 23, scope: !2989)
!2995 = !DILocation(line: 825, column: 47, scope: !2989)
!2996 = !DILocation(line: 825, column: 59, scope: !2989)
!2997 = !DILocation(line: 825, column: 8, scope: !2989)
!2998 = !DILocation(line: 826, column: 4, scope: !2989)
!2999 = !DILocation(line: 826, column: 23, scope: !2989)
!3000 = !DILocation(line: 826, column: 45, scope: !2989)
!3001 = !DILocation(line: 826, column: 57, scope: !2989)
!3002 = !DILocation(line: 826, column: 8, scope: !2989)
!3003 = !DILocation(line: 824, column: 11, scope: !2981)
!3004 = !DILocation(line: 827, column: 2, scope: !2989)
!3005 = !DILocation(line: 828, column: 5, scope: !2981)
!3006 = !DILocation(line: 830, column: 40, scope: !2967)
!3007 = !DILocation(line: 830, column: 45, scope: !2967)
!3008 = !DILocation(line: 830, column: 50, scope: !2967)
!3009 = !DILocation(line: 830, column: 10, scope: !2967)
!3010 = !DILocation(line: 830, column: 3, scope: !2967)
!3011 = !DILocation(line: 831, column: 1, scope: !2967)
!3012 = distinct !DISubprogram(name: "sd_find_dep_between_no_cache", scope: !3, file: !3, line: 753, type: !3013, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!2231, !839, !839, !1065, !3015}
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!3016 = !DILocalVariable(name: "pro", arg: 1, scope: !3012, file: !3, line: 753, type: !839)
!3017 = !DILocation(line: 753, column: 35, scope: !3012)
!3018 = !DILocalVariable(name: "con", arg: 2, scope: !3012, file: !3, line: 753, type: !839)
!3019 = !DILocation(line: 753, column: 44, scope: !3012)
!3020 = !DILocalVariable(name: "resolved_p", arg: 3, scope: !3012, file: !3, line: 753, type: !1065)
!3021 = !DILocation(line: 753, column: 54, scope: !3012)
!3022 = !DILocalVariable(name: "sd_it_ptr", arg: 4, scope: !3012, file: !3, line: 754, type: !3015)
!3023 = !DILocation(line: 754, column: 27, scope: !3012)
!3024 = !DILocalVariable(name: "pro_list_type", scope: !3012, file: !3, line: 756, type: !2171)
!3025 = !DILocation(line: 756, column: 21, scope: !3012)
!3026 = !DILocalVariable(name: "con_list_type", scope: !3012, file: !3, line: 757, type: !2171)
!3027 = !DILocation(line: 757, column: 21, scope: !3012)
!3028 = !DILocalVariable(name: "sd_it", scope: !3012, file: !3, line: 758, type: !2167)
!3029 = !DILocation(line: 758, column: 19, scope: !3012)
!3030 = !DILocalVariable(name: "dep", scope: !3012, file: !3, line: 759, type: !2231)
!3031 = !DILocation(line: 759, column: 9, scope: !3012)
!3032 = !DILocalVariable(name: "found_p", scope: !3012, file: !3, line: 760, type: !1065)
!3033 = !DILocation(line: 760, column: 8, scope: !3012)
!3034 = !DILocation(line: 762, column: 7, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 762, column: 7)
!3036 = !DILocation(line: 762, column: 7, scope: !3012)
!3037 = !DILocation(line: 764, column: 21, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 763, column: 5)
!3039 = !DILocation(line: 765, column: 21, scope: !3038)
!3040 = !DILocation(line: 766, column: 5, scope: !3038)
!3041 = !DILocation(line: 769, column: 21, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 768, column: 5)
!3043 = !DILocation(line: 770, column: 21, scope: !3042)
!3044 = !DILocation(line: 775, column: 22, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 775, column: 7)
!3046 = !DILocation(line: 775, column: 27, scope: !3045)
!3047 = !DILocation(line: 775, column: 7, scope: !3045)
!3048 = !DILocation(line: 775, column: 59, scope: !3045)
!3049 = !DILocation(line: 775, column: 64, scope: !3045)
!3050 = !DILocation(line: 775, column: 44, scope: !3045)
!3051 = !DILocation(line: 775, column: 42, scope: !3045)
!3052 = !DILocation(line: 775, column: 7, scope: !3012)
!3053 = !DILocation(line: 778, column: 7, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 778, column: 7)
!3055 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 776, column: 5)
!3056 = !DILocation(line: 778, column: 7, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 778, column: 7)
!3058 = !DILocation(line: 779, column: 6, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3057, file: !3, line: 779, column: 6)
!3060 = !DILocation(line: 779, column: 23, scope: !3059)
!3061 = !DILocation(line: 779, column: 20, scope: !3059)
!3062 = !DILocation(line: 779, column: 6, scope: !3057)
!3063 = !DILocation(line: 781, column: 14, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 780, column: 4)
!3065 = !DILocation(line: 782, column: 6, scope: !3064)
!3066 = distinct !{!3066, !3053, !3067}
!3067 = !DILocation(line: 783, column: 4, scope: !3054)
!3068 = !DILocation(line: 784, column: 5, scope: !3055)
!3069 = !DILocation(line: 788, column: 7, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !3, line: 788, column: 7)
!3071 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 786, column: 5)
!3072 = !DILocation(line: 788, column: 7, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 788, column: 7)
!3074 = !DILocation(line: 789, column: 6, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 789, column: 6)
!3076 = !DILocation(line: 789, column: 23, scope: !3075)
!3077 = !DILocation(line: 789, column: 20, scope: !3075)
!3078 = !DILocation(line: 789, column: 6, scope: !3073)
!3079 = !DILocation(line: 791, column: 14, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 790, column: 4)
!3081 = !DILocation(line: 792, column: 6, scope: !3080)
!3082 = distinct !{!3082, !3069, !3083}
!3083 = !DILocation(line: 793, column: 4, scope: !3070)
!3084 = !DILocation(line: 796, column: 7, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 796, column: 7)
!3086 = !DILocation(line: 796, column: 7, scope: !3012)
!3087 = !DILocation(line: 798, column: 11, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 798, column: 11)
!3089 = distinct !DILexicalBlock(scope: !3085, file: !3, line: 797, column: 5)
!3090 = !DILocation(line: 798, column: 21, scope: !3088)
!3091 = !DILocation(line: 798, column: 11, scope: !3089)
!3092 = !DILocation(line: 799, column: 3, scope: !3088)
!3093 = !DILocation(line: 799, column: 15, scope: !3088)
!3094 = !DILocation(line: 799, column: 2, scope: !3088)
!3095 = !DILocation(line: 801, column: 14, scope: !3089)
!3096 = !DILocation(line: 801, column: 7, scope: !3089)
!3097 = !DILocation(line: 804, column: 3, scope: !3012)
!3098 = !DILocation(line: 805, column: 1, scope: !3012)
!3099 = distinct !DISubprogram(name: "sd_add_dep", scope: !3, file: !3, line: 1221, type: !3100, scopeLine: 1222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{null, !2231, !1065}
!3102 = !DILocalVariable(name: "dep", arg: 1, scope: !3099, file: !3, line: 1221, type: !2231)
!3103 = !DILocation(line: 1221, column: 19, scope: !3099)
!3104 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !3099, file: !3, line: 1221, type: !1065)
!3105 = !DILocation(line: 1221, column: 29, scope: !3099)
!3106 = !DILocalVariable(name: "n", scope: !3099, file: !3, line: 1223, type: !2011)
!3107 = !DILocation(line: 1223, column: 14, scope: !3099)
!3108 = !DILocation(line: 1223, column: 18, scope: !3099)
!3109 = !DILocalVariable(name: "con_back_deps", scope: !3099, file: !3, line: 1224, type: !2001)
!3110 = !DILocation(line: 1224, column: 15, scope: !3099)
!3111 = !DILocalVariable(name: "pro_forw_deps", scope: !3099, file: !3, line: 1225, type: !2001)
!3112 = !DILocation(line: 1225, column: 15, scope: !3099)
!3113 = !DILocalVariable(name: "elem", scope: !3099, file: !3, line: 1226, type: !839)
!3114 = !DILocation(line: 1226, column: 7, scope: !3099)
!3115 = !DILocation(line: 1226, column: 14, scope: !3099)
!3116 = !DILocalVariable(name: "insn", scope: !3099, file: !3, line: 1227, type: !839)
!3117 = !DILocation(line: 1227, column: 7, scope: !3099)
!3118 = !DILocation(line: 1227, column: 14, scope: !3099)
!3119 = !DILocation(line: 1229, column: 3, scope: !3099)
!3120 = !DILocation(line: 1231, column: 8, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 1231, column: 7)
!3122 = !DILocation(line: 1231, column: 28, scope: !3121)
!3123 = !DILocation(line: 1231, column: 34, scope: !3121)
!3124 = !DILocation(line: 1232, column: 7, scope: !3121)
!3125 = !DILocation(line: 1232, column: 55, scope: !3121)
!3126 = !DILocation(line: 1232, column: 61, scope: !3121)
!3127 = !DILocation(line: 1232, column: 11, scope: !3121)
!3128 = !DILocation(line: 1231, column: 7, scope: !3099)
!3129 = !DILocation(line: 1233, column: 5, scope: !3121)
!3130 = !DILocation(line: 1233, column: 22, scope: !3121)
!3131 = !DILocation(line: 1235, column: 13, scope: !3099)
!3132 = !DILocation(line: 1235, column: 31, scope: !3099)
!3133 = !DILocation(line: 1235, column: 3, scope: !3099)
!3134 = !DILocation(line: 1237, column: 28, scope: !3099)
!3135 = !DILocation(line: 1237, column: 33, scope: !3099)
!3136 = !DILocation(line: 1237, column: 3, scope: !3099)
!3137 = !DILocation(line: 1239, column: 21, scope: !3099)
!3138 = !DILocation(line: 1239, column: 40, scope: !3099)
!3139 = !DILocation(line: 1239, column: 3, scope: !3099)
!3140 = !DILocation(line: 1245, column: 21, scope: !3099)
!3141 = !DILocation(line: 1245, column: 40, scope: !3099)
!3142 = !DILocation(line: 1245, column: 3, scope: !3099)
!3143 = !DILocation(line: 1249, column: 7, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 1249, column: 7)
!3145 = !DILocation(line: 1249, column: 29, scope: !3144)
!3146 = !DILocation(line: 1249, column: 7, scope: !3099)
!3147 = !DILocation(line: 1250, column: 28, scope: !3144)
!3148 = !DILocation(line: 1250, column: 5, scope: !3144)
!3149 = !DILocation(line: 1251, column: 1, scope: !3099)
!3150 = distinct !DISubprogram(name: "create_dep_node", scope: !3, file: !3, line: 315, type: !3151, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{!2011}
!3153 = !DILocalVariable(name: "n", scope: !3150, file: !3, line: 317, type: !2011)
!3154 = !DILocation(line: 317, column: 14, scope: !3150)
!3155 = !DILocation(line: 317, column: 43, scope: !3150)
!3156 = !DILocation(line: 317, column: 31, scope: !3150)
!3157 = !DILocation(line: 317, column: 18, scope: !3150)
!3158 = !DILocalVariable(name: "back", scope: !3150, file: !3, line: 318, type: !2006)
!3159 = !DILocation(line: 318, column: 14, scope: !3150)
!3160 = !DILocation(line: 318, column: 21, scope: !3150)
!3161 = !DILocalVariable(name: "forw", scope: !3150, file: !3, line: 319, type: !2006)
!3162 = !DILocation(line: 319, column: 14, scope: !3150)
!3163 = !DILocation(line: 319, column: 21, scope: !3150)
!3164 = !DILocation(line: 321, column: 26, scope: !3150)
!3165 = !DILocation(line: 321, column: 3, scope: !3150)
!3166 = !DILocation(line: 321, column: 24, scope: !3150)
!3167 = !DILocation(line: 322, column: 3, scope: !3150)
!3168 = !DILocation(line: 322, column: 24, scope: !3150)
!3169 = !DILocation(line: 323, column: 3, scope: !3150)
!3170 = !DILocation(line: 323, column: 30, scope: !3150)
!3171 = !DILocation(line: 325, column: 26, scope: !3150)
!3172 = !DILocation(line: 325, column: 3, scope: !3150)
!3173 = !DILocation(line: 325, column: 24, scope: !3150)
!3174 = !DILocation(line: 326, column: 3, scope: !3150)
!3175 = !DILocation(line: 326, column: 24, scope: !3150)
!3176 = !DILocation(line: 327, column: 3, scope: !3150)
!3177 = !DILocation(line: 327, column: 30, scope: !3150)
!3178 = !DILocation(line: 329, column: 3, scope: !3150)
!3179 = !DILocation(line: 331, column: 10, scope: !3150)
!3180 = !DILocation(line: 331, column: 3, scope: !3150)
!3181 = distinct !DISubprogram(name: "copy_dep", scope: !3, file: !3, line: 124, type: !3182, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{null, !2231, !2231}
!3184 = !DILocalVariable(name: "to", arg: 1, scope: !3181, file: !3, line: 124, type: !2231)
!3185 = !DILocation(line: 124, column: 17, scope: !3181)
!3186 = !DILocalVariable(name: "from", arg: 2, scope: !3181, file: !3, line: 124, type: !2231)
!3187 = !DILocation(line: 124, column: 27, scope: !3181)
!3188 = !DILocation(line: 126, column: 11, scope: !3181)
!3189 = !DILocation(line: 126, column: 3, scope: !3181)
!3190 = !DILocation(line: 126, column: 15, scope: !3181)
!3191 = !DILocation(line: 127, column: 1, scope: !3181)
!3192 = distinct !DISubprogram(name: "get_back_and_forw_lists", scope: !3, file: !3, line: 1195, type: !3193, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{null, !2231, !1065, !2726, !2726}
!3195 = !DILocalVariable(name: "dep", arg: 1, scope: !3192, file: !3, line: 1195, type: !2231)
!3196 = !DILocation(line: 1195, column: 32, scope: !3192)
!3197 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !3192, file: !3, line: 1195, type: !1065)
!3198 = !DILocation(line: 1195, column: 42, scope: !3192)
!3199 = !DILocalVariable(name: "back_list_ptr", arg: 3, scope: !3192, file: !3, line: 1196, type: !2726)
!3200 = !DILocation(line: 1196, column: 18, scope: !3192)
!3201 = !DILocalVariable(name: "forw_list_ptr", arg: 4, scope: !3192, file: !3, line: 1197, type: !2726)
!3202 = !DILocation(line: 1197, column: 18, scope: !3192)
!3203 = !DILocalVariable(name: "con", scope: !3192, file: !3, line: 1199, type: !839)
!3204 = !DILocation(line: 1199, column: 7, scope: !3192)
!3205 = !DILocation(line: 1199, column: 13, scope: !3192)
!3206 = !DILocation(line: 1201, column: 8, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 1201, column: 7)
!3208 = !DILocation(line: 1201, column: 7, scope: !3192)
!3209 = !DILocation(line: 1203, column: 12, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 1203, column: 11)
!3211 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 1202, column: 5)
!3212 = !DILocation(line: 1203, column: 32, scope: !3210)
!3213 = !DILocation(line: 1203, column: 38, scope: !3210)
!3214 = !DILocation(line: 1204, column: 4, scope: !3210)
!3215 = !DILocation(line: 1204, column: 8, scope: !3210)
!3216 = !DILocation(line: 1204, column: 25, scope: !3210)
!3217 = !DILocation(line: 1203, column: 11, scope: !3211)
!3218 = !DILocation(line: 1205, column: 19, scope: !3210)
!3219 = !DILocation(line: 1205, column: 3, scope: !3210)
!3220 = !DILocation(line: 1205, column: 17, scope: !3210)
!3221 = !DILocation(line: 1205, column: 2, scope: !3210)
!3222 = !DILocation(line: 1207, column: 19, scope: !3210)
!3223 = !DILocation(line: 1207, column: 3, scope: !3210)
!3224 = !DILocation(line: 1207, column: 17, scope: !3210)
!3225 = !DILocation(line: 1209, column: 24, scope: !3211)
!3226 = !DILocation(line: 1209, column: 8, scope: !3211)
!3227 = !DILocation(line: 1209, column: 22, scope: !3211)
!3228 = !DILocation(line: 1210, column: 5, scope: !3211)
!3229 = !DILocation(line: 1213, column: 24, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 1212, column: 5)
!3231 = !DILocation(line: 1213, column: 8, scope: !3230)
!3232 = !DILocation(line: 1213, column: 22, scope: !3230)
!3233 = !DILocation(line: 1214, column: 24, scope: !3230)
!3234 = !DILocation(line: 1214, column: 8, scope: !3230)
!3235 = !DILocation(line: 1214, column: 22, scope: !3230)
!3236 = !DILocation(line: 1216, column: 1, scope: !3192)
!3237 = distinct !DISubprogram(name: "add_to_deps_list", scope: !3, file: !3, line: 256, type: !3238, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{null, !2006, !2001}
!3240 = !DILocalVariable(name: "link", arg: 1, scope: !3237, file: !3, line: 256, type: !2006)
!3241 = !DILocation(line: 256, column: 30, scope: !3237)
!3242 = !DILocalVariable(name: "l", arg: 2, scope: !3237, file: !3, line: 256, type: !2001)
!3243 = !DILocation(line: 256, column: 48, scope: !3237)
!3244 = !DILocation(line: 258, column: 20, scope: !3237)
!3245 = !DILocation(line: 258, column: 27, scope: !3237)
!3246 = !DILocation(line: 258, column: 3, scope: !3237)
!3247 = !DILocation(line: 261, column: 25, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 261, column: 7)
!3249 = !DILocation(line: 261, column: 8, scope: !3248)
!3250 = !DILocation(line: 261, column: 7, scope: !3237)
!3251 = !DILocation(line: 262, column: 7, scope: !3248)
!3252 = !DILocation(line: 262, column: 5, scope: !3248)
!3253 = !DILocation(line: 263, column: 1, scope: !3237)
!3254 = distinct !DISubprogram(name: "set_dependency_caches", scope: !3, file: !3, line: 941, type: !2288, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3255 = !DILocalVariable(name: "dep", arg: 1, scope: !3254, file: !3, line: 941, type: !2231)
!3256 = !DILocation(line: 941, column: 30, scope: !3254)
!3257 = !DILocalVariable(name: "elem_luid", scope: !3254, file: !3, line: 943, type: !810)
!3258 = !DILocation(line: 943, column: 7, scope: !3254)
!3259 = !DILocation(line: 943, column: 19, scope: !3254)
!3260 = !DILocalVariable(name: "insn_luid", scope: !3254, file: !3, line: 944, type: !810)
!3261 = !DILocation(line: 944, column: 7, scope: !3254)
!3262 = !DILocation(line: 944, column: 19, scope: !3254)
!3263 = !DILocation(line: 946, column: 9, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 946, column: 7)
!3265 = !DILocation(line: 946, column: 29, scope: !3264)
!3266 = !DILocation(line: 946, column: 35, scope: !3264)
!3267 = !DILocation(line: 946, column: 7, scope: !3254)
!3268 = !DILocation(line: 948, column: 15, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 947, column: 5)
!3270 = !DILocation(line: 948, column: 7, scope: !3269)
!3271 = !DILocation(line: 951, column: 21, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 949, column: 2)
!3273 = !DILocation(line: 951, column: 43, scope: !3272)
!3274 = !DILocation(line: 951, column: 55, scope: !3272)
!3275 = !DILocation(line: 951, column: 4, scope: !3272)
!3276 = !DILocation(line: 952, column: 4, scope: !3272)
!3277 = !DILocation(line: 955, column: 21, scope: !3272)
!3278 = !DILocation(line: 955, column: 45, scope: !3272)
!3279 = !DILocation(line: 955, column: 57, scope: !3272)
!3280 = !DILocation(line: 955, column: 4, scope: !3272)
!3281 = !DILocation(line: 956, column: 4, scope: !3272)
!3282 = !DILocation(line: 959, column: 21, scope: !3272)
!3283 = !DILocation(line: 959, column: 43, scope: !3272)
!3284 = !DILocation(line: 959, column: 55, scope: !3272)
!3285 = !DILocation(line: 959, column: 4, scope: !3272)
!3286 = !DILocation(line: 960, column: 4, scope: !3272)
!3287 = !DILocation(line: 963, column: 4, scope: !3272)
!3288 = !DILocation(line: 964, column: 2, scope: !3272)
!3289 = !DILocation(line: 965, column: 5, scope: !3269)
!3290 = !DILocalVariable(name: "ds", scope: !3291, file: !3, line: 968, type: !809)
!3291 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 967, column: 5)
!3292 = !DILocation(line: 968, column: 12, scope: !3291)
!3293 = !DILocation(line: 968, column: 17, scope: !3291)
!3294 = !DILocation(line: 970, column: 11, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 970, column: 11)
!3296 = !DILocation(line: 970, column: 14, scope: !3295)
!3297 = !DILocation(line: 970, column: 11, scope: !3291)
!3298 = !DILocation(line: 971, column: 19, scope: !3295)
!3299 = !DILocation(line: 971, column: 41, scope: !3295)
!3300 = !DILocation(line: 971, column: 53, scope: !3295)
!3301 = !DILocation(line: 971, column: 2, scope: !3295)
!3302 = !DILocation(line: 972, column: 11, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 972, column: 11)
!3304 = !DILocation(line: 972, column: 14, scope: !3303)
!3305 = !DILocation(line: 972, column: 11, scope: !3291)
!3306 = !DILocation(line: 973, column: 19, scope: !3303)
!3307 = !DILocation(line: 973, column: 43, scope: !3303)
!3308 = !DILocation(line: 973, column: 55, scope: !3303)
!3309 = !DILocation(line: 973, column: 2, scope: !3303)
!3310 = !DILocation(line: 974, column: 11, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 974, column: 11)
!3312 = !DILocation(line: 974, column: 14, scope: !3311)
!3313 = !DILocation(line: 974, column: 11, scope: !3291)
!3314 = !DILocation(line: 975, column: 19, scope: !3311)
!3315 = !DILocation(line: 975, column: 41, scope: !3311)
!3316 = !DILocation(line: 975, column: 53, scope: !3311)
!3317 = !DILocation(line: 975, column: 2, scope: !3311)
!3318 = !DILocation(line: 977, column: 11, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 977, column: 11)
!3320 = !DILocation(line: 977, column: 14, scope: !3319)
!3321 = !DILocation(line: 977, column: 11, scope: !3291)
!3322 = !DILocation(line: 979, column: 4, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 978, column: 2)
!3324 = !DILocation(line: 980, column: 21, scope: !3323)
!3325 = !DILocation(line: 980, column: 43, scope: !3323)
!3326 = !DILocation(line: 980, column: 55, scope: !3323)
!3327 = !DILocation(line: 980, column: 4, scope: !3323)
!3328 = !DILocation(line: 981, column: 2, scope: !3323)
!3329 = !DILocation(line: 983, column: 1, scope: !3254)
!3330 = distinct !DISubprogram(name: "sd_add_or_update_dep", scope: !3, file: !3, line: 1257, type: !3331, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!576, !2231, !1065}
!3333 = !DILocalVariable(name: "dep", arg: 1, scope: !3330, file: !3, line: 1257, type: !2231)
!3334 = !DILocation(line: 1257, column: 29, scope: !3330)
!3335 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !3330, file: !3, line: 1257, type: !1065)
!3336 = !DILocation(line: 1257, column: 39, scope: !3330)
!3337 = !DILocation(line: 1259, column: 31, scope: !3330)
!3338 = !DILocation(line: 1259, column: 36, scope: !3330)
!3339 = !DILocation(line: 1259, column: 10, scope: !3330)
!3340 = !DILocation(line: 1259, column: 3, scope: !3330)
!3341 = distinct !DISubprogram(name: "add_or_update_dep_1", scope: !3, file: !3, line: 1118, type: !3342, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!576, !2231, !1065, !839, !839}
!3344 = !DILocalVariable(name: "new_dep", arg: 1, scope: !3341, file: !3, line: 1118, type: !2231)
!3345 = !DILocation(line: 1118, column: 28, scope: !3341)
!3346 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !3341, file: !3, line: 1118, type: !1065)
!3347 = !DILocation(line: 1118, column: 42, scope: !3341)
!3348 = !DILocalVariable(name: "mem1", arg: 3, scope: !3341, file: !3, line: 1119, type: !839)
!3349 = !DILocation(line: 1119, column: 12, scope: !3341)
!3350 = !DILocalVariable(name: "mem2", arg: 4, scope: !3341, file: !3, line: 1119, type: !839)
!3351 = !DILocation(line: 1119, column: 39, scope: !3341)
!3352 = !DILocalVariable(name: "maybe_present_p", scope: !3341, file: !3, line: 1121, type: !1065)
!3353 = !DILocation(line: 1121, column: 8, scope: !3341)
!3354 = !DILocalVariable(name: "present_p", scope: !3341, file: !3, line: 1122, type: !1065)
!3355 = !DILocation(line: 1122, column: 8, scope: !3341)
!3356 = !DILocation(line: 1124, column: 3, scope: !3341)
!3357 = !DILocation(line: 1131, column: 7, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 1131, column: 7)
!3359 = !DILocation(line: 1131, column: 29, scope: !3358)
!3360 = !DILocation(line: 1131, column: 7, scope: !3341)
!3361 = !DILocation(line: 1133, column: 38, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 1132, column: 5)
!3363 = !DILocation(line: 1133, column: 15, scope: !3362)
!3364 = !DILocation(line: 1133, column: 7, scope: !3362)
!3365 = !DILocation(line: 1136, column: 4, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 1134, column: 2)
!3367 = !DILocation(line: 1139, column: 20, scope: !3366)
!3368 = !DILocation(line: 1140, column: 14, scope: !3366)
!3369 = !DILocation(line: 1141, column: 4, scope: !3366)
!3370 = !DILocation(line: 1144, column: 20, scope: !3366)
!3371 = !DILocation(line: 1145, column: 14, scope: !3366)
!3372 = !DILocation(line: 1146, column: 4, scope: !3366)
!3373 = !DILocation(line: 1149, column: 4, scope: !3366)
!3374 = !DILocation(line: 1150, column: 4, scope: !3366)
!3375 = !DILocation(line: 1152, column: 5, scope: !3362)
!3376 = !DILocation(line: 1155, column: 7, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 1155, column: 7)
!3378 = !DILocation(line: 1155, column: 7, scope: !3341)
!3379 = !DILocalVariable(name: "present_dep", scope: !3380, file: !3, line: 1157, type: !2231)
!3380 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 1156, column: 5)
!3381 = !DILocation(line: 1157, column: 13, scope: !3380)
!3382 = !DILocalVariable(name: "sd_it", scope: !3380, file: !3, line: 1158, type: !2167)
!3383 = !DILocation(line: 1158, column: 23, scope: !3380)
!3384 = !DILocation(line: 1160, column: 7, scope: !3380)
!3385 = !DILocation(line: 1162, column: 51, scope: !3380)
!3386 = !DILocation(line: 1163, column: 9, scope: !3380)
!3387 = !DILocation(line: 1164, column: 9, scope: !3380)
!3388 = !DILocation(line: 1162, column: 21, scope: !3380)
!3389 = !DILocation(line: 1162, column: 19, scope: !3380)
!3390 = !DILocation(line: 1166, column: 11, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 1166, column: 11)
!3392 = !DILocation(line: 1166, column: 23, scope: !3391)
!3393 = !DILocation(line: 1166, column: 11, scope: !3380)
!3394 = !DILocation(line: 1168, column: 21, scope: !3391)
!3395 = !DILocation(line: 1168, column: 34, scope: !3391)
!3396 = !DILocation(line: 1168, column: 50, scope: !3391)
!3397 = !DILocation(line: 1168, column: 56, scope: !3391)
!3398 = !DILocation(line: 1168, column: 9, scope: !3391)
!3399 = !DILocation(line: 1168, column: 2, scope: !3391)
!3400 = !DILocation(line: 1171, column: 2, scope: !3391)
!3401 = !DILocation(line: 1172, column: 5, scope: !3380)
!3402 = !DILocation(line: 1179, column: 7, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 1179, column: 7)
!3404 = !DILocation(line: 1179, column: 12, scope: !3403)
!3405 = !DILocation(line: 1179, column: 7, scope: !3341)
!3406 = !DILocation(line: 1181, column: 7, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 1180, column: 5)
!3408 = !DILocation(line: 1182, column: 44, scope: !3407)
!3409 = !DILocation(line: 1183, column: 28, scope: !3407)
!3410 = !DILocation(line: 1183, column: 34, scope: !3407)
!3411 = !DILocation(line: 1183, column: 9, scope: !3407)
!3412 = !DILocation(line: 1182, column: 30, scope: !3407)
!3413 = !DILocation(line: 1182, column: 7, scope: !3407)
!3414 = !DILocation(line: 1182, column: 28, scope: !3407)
!3415 = !DILocation(line: 1184, column: 5, scope: !3407)
!3416 = !DILocation(line: 1186, column: 15, scope: !3341)
!3417 = !DILocation(line: 1186, column: 24, scope: !3341)
!3418 = !DILocation(line: 1186, column: 3, scope: !3341)
!3419 = !DILocation(line: 1188, column: 3, scope: !3341)
!3420 = !DILocation(line: 1189, column: 1, scope: !3341)
!3421 = distinct !DISubprogram(name: "sd_resolve_dep", scope: !3, file: !3, line: 1265, type: !3422, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{null, !2167}
!3424 = !DILocalVariable(name: "sd_it", arg: 1, scope: !3421, file: !3, line: 1265, type: !2167)
!3425 = !DILocation(line: 1265, column: 33, scope: !3421)
!3426 = !DILocalVariable(name: "node", scope: !3421, file: !3, line: 1267, type: !2011)
!3427 = !DILocation(line: 1267, column: 14, scope: !3421)
!3428 = !DILocation(line: 1267, column: 21, scope: !3421)
!3429 = !DILocalVariable(name: "dep", scope: !3421, file: !3, line: 1268, type: !2231)
!3430 = !DILocation(line: 1268, column: 9, scope: !3421)
!3431 = !DILocation(line: 1268, column: 15, scope: !3421)
!3432 = !DILocalVariable(name: "pro", scope: !3421, file: !3, line: 1269, type: !839)
!3433 = !DILocation(line: 1269, column: 7, scope: !3421)
!3434 = !DILocation(line: 1269, column: 13, scope: !3421)
!3435 = !DILocalVariable(name: "con", scope: !3421, file: !3, line: 1270, type: !839)
!3436 = !DILocation(line: 1270, column: 7, scope: !3421)
!3437 = !DILocation(line: 1270, column: 13, scope: !3421)
!3438 = !DILocation(line: 1272, column: 8, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 1272, column: 7)
!3440 = !DILocation(line: 1272, column: 28, scope: !3439)
!3441 = !DILocation(line: 1272, column: 34, scope: !3439)
!3442 = !DILocation(line: 1273, column: 7, scope: !3439)
!3443 = !DILocation(line: 1273, column: 11, scope: !3439)
!3444 = !DILocation(line: 1273, column: 28, scope: !3439)
!3445 = !DILocation(line: 1272, column: 7, scope: !3421)
!3446 = !DILocation(line: 1274, column: 20, scope: !3439)
!3447 = !DILocation(line: 1274, column: 42, scope: !3439)
!3448 = !DILocation(line: 1275, column: 6, scope: !3439)
!3449 = !DILocation(line: 1274, column: 5, scope: !3439)
!3450 = !DILocation(line: 1277, column: 20, scope: !3439)
!3451 = !DILocation(line: 1277, column: 42, scope: !3439)
!3452 = !DILocation(line: 1278, column: 6, scope: !3439)
!3453 = !DILocation(line: 1277, column: 5, scope: !3439)
!3454 = !DILocation(line: 1280, column: 18, scope: !3421)
!3455 = !DILocation(line: 1280, column: 40, scope: !3421)
!3456 = !DILocation(line: 1281, column: 4, scope: !3421)
!3457 = !DILocation(line: 1280, column: 3, scope: !3421)
!3458 = !DILocation(line: 1282, column: 1, scope: !3421)
!3459 = distinct !DISubprogram(name: "move_dep_link", scope: !3, file: !3, line: 294, type: !3460, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{null, !2006, !2001, !2001}
!3462 = !DILocalVariable(name: "link", arg: 1, scope: !3459, file: !3, line: 294, type: !2006)
!3463 = !DILocation(line: 294, column: 27, scope: !3459)
!3464 = !DILocalVariable(name: "from", arg: 2, scope: !3459, file: !3, line: 294, type: !2001)
!3465 = !DILocation(line: 294, column: 45, scope: !3459)
!3466 = !DILocalVariable(name: "to", arg: 3, scope: !3459, file: !3, line: 294, type: !2001)
!3467 = !DILocation(line: 294, column: 63, scope: !3459)
!3468 = !DILocation(line: 296, column: 26, scope: !3459)
!3469 = !DILocation(line: 296, column: 32, scope: !3459)
!3470 = !DILocation(line: 296, column: 3, scope: !3459)
!3471 = !DILocation(line: 297, column: 21, scope: !3459)
!3472 = !DILocation(line: 297, column: 27, scope: !3459)
!3473 = !DILocation(line: 297, column: 3, scope: !3459)
!3474 = !DILocation(line: 298, column: 1, scope: !3459)
!3475 = distinct !DISubprogram(name: "sd_copy_back_deps", scope: !3, file: !3, line: 1287, type: !3476, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{null, !839, !839, !1065}
!3478 = !DILocalVariable(name: "to", arg: 1, scope: !3475, file: !3, line: 1287, type: !839)
!3479 = !DILocation(line: 1287, column: 24, scope: !3475)
!3480 = !DILocalVariable(name: "from", arg: 2, scope: !3475, file: !3, line: 1287, type: !839)
!3481 = !DILocation(line: 1287, column: 32, scope: !3475)
!3482 = !DILocalVariable(name: "resolved_p", arg: 3, scope: !3475, file: !3, line: 1287, type: !1065)
!3483 = !DILocation(line: 1287, column: 43, scope: !3475)
!3484 = !DILocalVariable(name: "list_type", scope: !3475, file: !3, line: 1289, type: !2171)
!3485 = !DILocation(line: 1289, column: 21, scope: !3475)
!3486 = !DILocalVariable(name: "sd_it", scope: !3475, file: !3, line: 1290, type: !2167)
!3487 = !DILocation(line: 1290, column: 19, scope: !3475)
!3488 = !DILocalVariable(name: "dep", scope: !3475, file: !3, line: 1291, type: !2231)
!3489 = !DILocation(line: 1291, column: 9, scope: !3475)
!3490 = !DILocation(line: 1293, column: 15, scope: !3475)
!3491 = !DILocation(line: 1293, column: 13, scope: !3475)
!3492 = !DILocation(line: 1295, column: 3, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 1295, column: 3)
!3494 = !DILocation(line: 1295, column: 3, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 1295, column: 3)
!3496 = !DILocalVariable(name: "_new_dep", scope: !3497, file: !3, line: 1297, type: !2233)
!3497 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 1296, column: 5)
!3498 = !DILocation(line: 1297, column: 15, scope: !3497)
!3499 = !DILocalVariable(name: "new_dep", scope: !3497, file: !3, line: 1297, type: !2232)
!3500 = !DILocation(line: 1297, column: 26, scope: !3497)
!3501 = !DILocation(line: 1299, column: 17, scope: !3497)
!3502 = !DILocation(line: 1299, column: 26, scope: !3497)
!3503 = !DILocation(line: 1299, column: 7, scope: !3497)
!3504 = !DILocation(line: 1300, column: 27, scope: !3497)
!3505 = !DILocation(line: 1300, column: 7, scope: !3497)
!3506 = !DILocation(line: 1300, column: 25, scope: !3497)
!3507 = !DILocation(line: 1301, column: 19, scope: !3497)
!3508 = !DILocation(line: 1301, column: 28, scope: !3497)
!3509 = !DILocation(line: 1301, column: 7, scope: !3497)
!3510 = !DILocation(line: 1302, column: 5, scope: !3497)
!3511 = distinct !{!3511, !3492, !3512}
!3512 = !DILocation(line: 1302, column: 5, scope: !3493)
!3513 = !DILocation(line: 1303, column: 1, scope: !3475)
!3514 = !DILocalVariable(name: "insn", arg: 1, scope: !2164, file: !420, line: 1427, type: !839)
!3515 = !DILocation(line: 1427, column: 24, scope: !2164)
!3516 = !DILocalVariable(name: "types", arg: 2, scope: !2164, file: !420, line: 1427, type: !2171)
!3517 = !DILocation(line: 1427, column: 48, scope: !2164)
!3518 = !DILocalVariable(name: "i", scope: !2164, file: !420, line: 1432, type: !2167)
!3519 = !DILocation(line: 1432, column: 19, scope: !2164)
!3520 = !DILocation(line: 1434, column: 13, scope: !2164)
!3521 = !DILocation(line: 1434, column: 5, scope: !2164)
!3522 = !DILocation(line: 1434, column: 11, scope: !2164)
!3523 = !DILocation(line: 1435, column: 12, scope: !2164)
!3524 = !DILocation(line: 1435, column: 5, scope: !2164)
!3525 = !DILocation(line: 1435, column: 10, scope: !2164)
!3526 = !DILocation(line: 1436, column: 5, scope: !2164)
!3527 = !DILocation(line: 1436, column: 11, scope: !2164)
!3528 = !DILocation(line: 1439, column: 5, scope: !2164)
!3529 = !DILocation(line: 1439, column: 16, scope: !2164)
!3530 = !DILocation(line: 1441, column: 3, scope: !2164)
!3531 = distinct !DISubprogram(name: "sd_iterator_cond", scope: !420, file: !420, line: 1446, type: !3532, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!1065, !3015, !3534}
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!3535 = !DILocalVariable(name: "it_ptr", arg: 1, scope: !3531, file: !420, line: 1446, type: !3015)
!3536 = !DILocation(line: 1446, column: 36, scope: !3531)
!3537 = !DILocalVariable(name: "dep_ptr", arg: 2, scope: !3531, file: !420, line: 1446, type: !3534)
!3538 = !DILocation(line: 1446, column: 51, scope: !3531)
!3539 = !DILocalVariable(name: "link", scope: !3531, file: !420, line: 1448, type: !2006)
!3540 = !DILocation(line: 1448, column: 14, scope: !3531)
!3541 = !DILocation(line: 1448, column: 22, scope: !3531)
!3542 = !DILocation(line: 1448, column: 30, scope: !3531)
!3543 = !DILocation(line: 1448, column: 21, scope: !3531)
!3544 = !DILocation(line: 1450, column: 7, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3531, file: !420, line: 1450, column: 7)
!3546 = !DILocation(line: 1450, column: 12, scope: !3545)
!3547 = !DILocation(line: 1450, column: 7, scope: !3531)
!3548 = !DILocation(line: 1452, column: 18, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3545, file: !420, line: 1451, column: 5)
!3550 = !DILocation(line: 1452, column: 8, scope: !3549)
!3551 = !DILocation(line: 1452, column: 16, scope: !3549)
!3552 = !DILocation(line: 1453, column: 7, scope: !3549)
!3553 = !DILocalVariable(name: "types", scope: !3554, file: !420, line: 1457, type: !2171)
!3554 = distinct !DILexicalBlock(scope: !3545, file: !420, line: 1456, column: 5)
!3555 = !DILocation(line: 1457, column: 25, scope: !3554)
!3556 = !DILocation(line: 1457, column: 33, scope: !3554)
!3557 = !DILocation(line: 1457, column: 41, scope: !3554)
!3558 = !DILocation(line: 1459, column: 11, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3554, file: !420, line: 1459, column: 11)
!3560 = !DILocation(line: 1459, column: 17, scope: !3559)
!3561 = !DILocation(line: 1459, column: 11, scope: !3554)
!3562 = !DILocalVariable(name: "list", scope: !3563, file: !420, line: 1462, type: !2001)
!3563 = distinct !DILexicalBlock(scope: !3559, file: !420, line: 1461, column: 2)
!3564 = !DILocation(line: 1462, column: 16, scope: !3563)
!3565 = !DILocation(line: 1464, column: 18, scope: !3563)
!3566 = !DILocation(line: 1464, column: 26, scope: !3563)
!3567 = !DILocation(line: 1465, column: 5, scope: !3563)
!3568 = !DILocation(line: 1465, column: 13, scope: !3563)
!3569 = !DILocation(line: 1465, column: 28, scope: !3563)
!3570 = !DILocation(line: 1465, column: 36, scope: !3563)
!3571 = !DILocation(line: 1464, column: 4, scope: !3563)
!3572 = !DILocation(line: 1467, column: 21, scope: !3563)
!3573 = !DILocation(line: 1467, column: 4, scope: !3563)
!3574 = !DILocation(line: 1467, column: 12, scope: !3563)
!3575 = !DILocation(line: 1467, column: 18, scope: !3563)
!3576 = !DILocation(line: 1469, column: 8, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3563, file: !420, line: 1469, column: 8)
!3578 = !DILocation(line: 1469, column: 8, scope: !3563)
!3579 = !DILocation(line: 1470, column: 31, scope: !3577)
!3580 = !DILocation(line: 1470, column: 39, scope: !3577)
!3581 = !DILocation(line: 1470, column: 13, scope: !3577)
!3582 = !DILocation(line: 1470, column: 6, scope: !3577)
!3583 = !DILocation(line: 1471, column: 2, scope: !3563)
!3584 = !DILocation(line: 1473, column: 8, scope: !3554)
!3585 = !DILocation(line: 1473, column: 16, scope: !3554)
!3586 = !DILocation(line: 1474, column: 7, scope: !3554)
!3587 = !DILocation(line: 1476, column: 1, scope: !3531)
!3588 = distinct !DISubprogram(name: "sd_iterator_next", scope: !420, file: !420, line: 1480, type: !3589, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{null, !3015}
!3591 = !DILocalVariable(name: "it_ptr", arg: 1, scope: !3588, file: !420, line: 1480, type: !3015)
!3592 = !DILocation(line: 1480, column: 36, scope: !3588)
!3593 = !DILocation(line: 1482, column: 20, scope: !3588)
!3594 = !DILocation(line: 1482, column: 3, scope: !3588)
!3595 = !DILocation(line: 1482, column: 11, scope: !3588)
!3596 = !DILocation(line: 1482, column: 17, scope: !3588)
!3597 = !DILocation(line: 1483, column: 1, scope: !3588)
!3598 = distinct !DISubprogram(name: "sd_delete_dep", scope: !3, file: !3, line: 1308, type: !3422, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3599 = !DILocalVariable(name: "sd_it", arg: 1, scope: !3598, file: !3, line: 1308, type: !2167)
!3600 = !DILocation(line: 1308, column: 32, scope: !3598)
!3601 = !DILocalVariable(name: "n", scope: !3598, file: !3, line: 1310, type: !2011)
!3602 = !DILocation(line: 1310, column: 14, scope: !3598)
!3603 = !DILocation(line: 1310, column: 18, scope: !3598)
!3604 = !DILocalVariable(name: "dep", scope: !3598, file: !3, line: 1311, type: !2231)
!3605 = !DILocation(line: 1311, column: 9, scope: !3598)
!3606 = !DILocation(line: 1311, column: 15, scope: !3598)
!3607 = !DILocalVariable(name: "pro", scope: !3598, file: !3, line: 1312, type: !839)
!3608 = !DILocation(line: 1312, column: 7, scope: !3598)
!3609 = !DILocation(line: 1312, column: 13, scope: !3598)
!3610 = !DILocalVariable(name: "con", scope: !3598, file: !3, line: 1313, type: !839)
!3611 = !DILocation(line: 1313, column: 7, scope: !3598)
!3612 = !DILocation(line: 1313, column: 13, scope: !3598)
!3613 = !DILocalVariable(name: "con_back_deps", scope: !3598, file: !3, line: 1314, type: !2001)
!3614 = !DILocation(line: 1314, column: 15, scope: !3598)
!3615 = !DILocalVariable(name: "pro_forw_deps", scope: !3598, file: !3, line: 1315, type: !2001)
!3616 = !DILocation(line: 1315, column: 15, scope: !3598)
!3617 = !DILocation(line: 1317, column: 7, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 1317, column: 7)
!3619 = !DILocation(line: 1317, column: 29, scope: !3618)
!3620 = !DILocation(line: 1317, column: 7, scope: !3598)
!3621 = !DILocalVariable(name: "elem_luid", scope: !3622, file: !3, line: 1319, type: !810)
!3622 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 1318, column: 5)
!3623 = !DILocation(line: 1319, column: 11, scope: !3622)
!3624 = !DILocation(line: 1319, column: 23, scope: !3622)
!3625 = !DILocalVariable(name: "insn_luid", scope: !3622, file: !3, line: 1320, type: !810)
!3626 = !DILocation(line: 1320, column: 11, scope: !3622)
!3627 = !DILocation(line: 1320, column: 23, scope: !3622)
!3628 = !DILocation(line: 1322, column: 26, scope: !3622)
!3629 = !DILocation(line: 1322, column: 48, scope: !3622)
!3630 = !DILocation(line: 1322, column: 60, scope: !3622)
!3631 = !DILocation(line: 1322, column: 7, scope: !3622)
!3632 = !DILocation(line: 1323, column: 26, scope: !3622)
!3633 = !DILocation(line: 1323, column: 48, scope: !3622)
!3634 = !DILocation(line: 1323, column: 60, scope: !3622)
!3635 = !DILocation(line: 1323, column: 7, scope: !3622)
!3636 = !DILocation(line: 1324, column: 26, scope: !3622)
!3637 = !DILocation(line: 1324, column: 50, scope: !3622)
!3638 = !DILocation(line: 1324, column: 62, scope: !3622)
!3639 = !DILocation(line: 1324, column: 7, scope: !3622)
!3640 = !DILocation(line: 1326, column: 11, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1326, column: 11)
!3642 = !DILocation(line: 1326, column: 31, scope: !3641)
!3643 = !DILocation(line: 1326, column: 37, scope: !3641)
!3644 = !DILocation(line: 1326, column: 11, scope: !3622)
!3645 = !DILocation(line: 1327, column: 21, scope: !3641)
!3646 = !DILocation(line: 1327, column: 43, scope: !3641)
!3647 = !DILocation(line: 1327, column: 55, scope: !3641)
!3648 = !DILocation(line: 1327, column: 2, scope: !3641)
!3649 = !DILocation(line: 1328, column: 5, scope: !3622)
!3650 = !DILocation(line: 1330, column: 28, scope: !3598)
!3651 = !DILocation(line: 1330, column: 39, scope: !3598)
!3652 = !DILocation(line: 1330, column: 3, scope: !3598)
!3653 = !DILocation(line: 1333, column: 26, scope: !3598)
!3654 = !DILocation(line: 1333, column: 45, scope: !3598)
!3655 = !DILocation(line: 1333, column: 3, scope: !3598)
!3656 = !DILocation(line: 1334, column: 26, scope: !3598)
!3657 = !DILocation(line: 1334, column: 45, scope: !3598)
!3658 = !DILocation(line: 1334, column: 3, scope: !3598)
!3659 = !DILocation(line: 1336, column: 20, scope: !3598)
!3660 = !DILocation(line: 1336, column: 3, scope: !3598)
!3661 = !DILocation(line: 1337, column: 1, scope: !3598)
!3662 = distinct !DISubprogram(name: "remove_from_deps_list", scope: !3, file: !3, line: 283, type: !3238, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3663 = !DILocalVariable(name: "link", arg: 1, scope: !3662, file: !3, line: 283, type: !2006)
!3664 = !DILocation(line: 283, column: 35, scope: !3662)
!3665 = !DILocalVariable(name: "list", arg: 2, scope: !3662, file: !3, line: 283, type: !2001)
!3666 = !DILocation(line: 283, column: 53, scope: !3662)
!3667 = !DILocation(line: 285, column: 20, scope: !3662)
!3668 = !DILocation(line: 285, column: 3, scope: !3662)
!3669 = !DILocation(line: 288, column: 25, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3662, file: !3, line: 288, column: 7)
!3671 = !DILocation(line: 288, column: 8, scope: !3670)
!3672 = !DILocation(line: 288, column: 7, scope: !3662)
!3673 = !DILocation(line: 289, column: 7, scope: !3670)
!3674 = !DILocation(line: 289, column: 5, scope: !3670)
!3675 = !DILocation(line: 290, column: 1, scope: !3662)
!3676 = distinct !DISubprogram(name: "delete_dep_node", scope: !3, file: !3, line: 336, type: !3677, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{null, !2011}
!3679 = !DILocalVariable(name: "n", arg: 1, scope: !3676, file: !3, line: 336, type: !2011)
!3680 = !DILocation(line: 336, column: 29, scope: !3676)
!3681 = !DILocation(line: 338, column: 3, scope: !3676)
!3682 = !DILocation(line: 341, column: 3, scope: !3676)
!3683 = !DILocation(line: 343, column: 14, scope: !3676)
!3684 = !DILocation(line: 343, column: 23, scope: !3676)
!3685 = !DILocation(line: 343, column: 3, scope: !3676)
!3686 = !DILocation(line: 344, column: 1, scope: !3676)
!3687 = distinct !DISubprogram(name: "sd_debug_lists", scope: !3, file: !3, line: 1383, type: !3688, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{null, !839, !2171}
!3690 = !DILocalVariable(name: "insn", arg: 1, scope: !3687, file: !3, line: 1383, type: !839)
!3691 = !DILocation(line: 1383, column: 21, scope: !3687)
!3692 = !DILocalVariable(name: "types", arg: 2, scope: !3687, file: !3, line: 1383, type: !2171)
!3693 = !DILocation(line: 1383, column: 45, scope: !3687)
!3694 = !DILocation(line: 1385, column: 15, scope: !3687)
!3695 = !DILocation(line: 1385, column: 23, scope: !3687)
!3696 = !DILocation(line: 1385, column: 29, scope: !3687)
!3697 = !DILocation(line: 1385, column: 3, scope: !3687)
!3698 = !DILocation(line: 1386, column: 12, scope: !3687)
!3699 = !DILocation(line: 1386, column: 3, scope: !3687)
!3700 = !DILocation(line: 1387, column: 1, scope: !3687)
!3701 = distinct !DISubprogram(name: "dump_lists", scope: !3, file: !3, line: 1354, type: !3702, scopeLine: 1355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{null, !2301, !839, !2171, !810}
!3704 = !DILocalVariable(name: "dump", arg: 1, scope: !3701, file: !3, line: 1354, type: !2301)
!3705 = !DILocation(line: 1354, column: 19, scope: !3701)
!3706 = !DILocalVariable(name: "insn", arg: 2, scope: !3701, file: !3, line: 1354, type: !839)
!3707 = !DILocation(line: 1354, column: 29, scope: !3701)
!3708 = !DILocalVariable(name: "types", arg: 3, scope: !3701, file: !3, line: 1354, type: !2171)
!3709 = !DILocation(line: 1354, column: 53, scope: !3701)
!3710 = !DILocalVariable(name: "flags", arg: 4, scope: !3701, file: !3, line: 1354, type: !810)
!3711 = !DILocation(line: 1354, column: 64, scope: !3701)
!3712 = !DILocalVariable(name: "sd_it", scope: !3701, file: !3, line: 1356, type: !2167)
!3713 = !DILocation(line: 1356, column: 19, scope: !3701)
!3714 = !DILocalVariable(name: "dep", scope: !3701, file: !3, line: 1357, type: !2231)
!3715 = !DILocation(line: 1357, column: 9, scope: !3701)
!3716 = !DILocalVariable(name: "all", scope: !3701, file: !3, line: 1358, type: !810)
!3717 = !DILocation(line: 1358, column: 7, scope: !3701)
!3718 = !DILocation(line: 1360, column: 10, scope: !3701)
!3719 = !DILocation(line: 1360, column: 16, scope: !3701)
!3720 = !DILocation(line: 1360, column: 7, scope: !3701)
!3721 = !DILocation(line: 1362, column: 7, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 1362, column: 7)
!3723 = !DILocation(line: 1362, column: 7, scope: !3701)
!3724 = !DILocation(line: 1363, column: 11, scope: !3722)
!3725 = !DILocation(line: 1363, column: 5, scope: !3722)
!3726 = !DILocation(line: 1365, column: 12, scope: !3701)
!3727 = !DILocation(line: 1365, column: 3, scope: !3701)
!3728 = !DILocation(line: 1367, column: 7, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 1367, column: 7)
!3730 = !DILocation(line: 1367, column: 13, scope: !3729)
!3731 = !DILocation(line: 1367, column: 7, scope: !3701)
!3732 = !DILocation(line: 1368, column: 14, scope: !3729)
!3733 = !DILocation(line: 1368, column: 43, scope: !3729)
!3734 = !DILocation(line: 1368, column: 49, scope: !3729)
!3735 = !DILocation(line: 1368, column: 28, scope: !3729)
!3736 = !DILocation(line: 1368, column: 5, scope: !3729)
!3737 = !DILocation(line: 1370, column: 7, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 1370, column: 7)
!3739 = !DILocation(line: 1370, column: 13, scope: !3738)
!3740 = !DILocation(line: 1370, column: 7, scope: !3701)
!3741 = !DILocation(line: 1372, column: 7, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 1372, column: 7)
!3743 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 1371, column: 5)
!3744 = !DILocation(line: 1372, column: 7, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 1372, column: 7)
!3746 = !DILocation(line: 1374, column: 14, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 1373, column: 2)
!3748 = !DILocation(line: 1374, column: 20, scope: !3747)
!3749 = !DILocation(line: 1374, column: 25, scope: !3747)
!3750 = !DILocation(line: 1374, column: 42, scope: !3747)
!3751 = !DILocation(line: 1374, column: 40, scope: !3747)
!3752 = !DILocation(line: 1374, column: 4, scope: !3747)
!3753 = !DILocation(line: 1375, column: 13, scope: !3747)
!3754 = !DILocation(line: 1375, column: 4, scope: !3747)
!3755 = !DILocation(line: 1376, column: 2, scope: !3747)
!3756 = distinct !{!3756, !3741, !3757}
!3757 = !DILocation(line: 1376, column: 2, scope: !3742)
!3758 = !DILocation(line: 1377, column: 5, scope: !3743)
!3759 = !DILocation(line: 1378, column: 1, scope: !3701)
!3760 = distinct !DISubprogram(name: "haifa_note_reg_set", scope: !3, file: !3, line: 1633, type: !2098, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3761 = !DILocalVariable(name: "regno", arg: 1, scope: !3760, file: !3, line: 1633, type: !810)
!3762 = !DILocation(line: 1633, column: 25, scope: !3760)
!3763 = !DILocation(line: 1635, column: 3, scope: !3760)
!3764 = !DILocation(line: 1636, column: 1, scope: !3760)
!3765 = distinct !DISubprogram(name: "haifa_note_reg_clobber", scope: !3, file: !3, line: 1639, type: !2098, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3766 = !DILocalVariable(name: "regno", arg: 1, scope: !3765, file: !3, line: 1639, type: !810)
!3767 = !DILocation(line: 1639, column: 29, scope: !3765)
!3768 = !DILocation(line: 1641, column: 3, scope: !3765)
!3769 = !DILocation(line: 1642, column: 1, scope: !3765)
!3770 = distinct !DISubprogram(name: "haifa_note_reg_use", scope: !3, file: !3, line: 1645, type: !2098, scopeLine: 1646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3771 = !DILocalVariable(name: "regno", arg: 1, scope: !3770, file: !3, line: 1645, type: !810)
!3772 = !DILocation(line: 1645, column: 25, scope: !3770)
!3773 = !DILocation(line: 1647, column: 3, scope: !3770)
!3774 = !DILocation(line: 1648, column: 1, scope: !3770)
!3775 = distinct !DISubprogram(name: "ds_to_dt", scope: !3, file: !3, line: 1718, type: !2198, scopeLine: 1719, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3776 = !DILocalVariable(name: "ds", arg: 1, scope: !3775, file: !3, line: 1718, type: !809)
!3777 = !DILocation(line: 1718, column: 16, scope: !3775)
!3778 = !DILocation(line: 1720, column: 7, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 1720, column: 7)
!3780 = !DILocation(line: 1720, column: 10, scope: !3779)
!3781 = !DILocation(line: 1720, column: 7, scope: !3775)
!3782 = !DILocation(line: 1721, column: 5, scope: !3779)
!3783 = !DILocation(line: 1722, column: 12, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 1722, column: 12)
!3785 = !DILocation(line: 1722, column: 15, scope: !3784)
!3786 = !DILocation(line: 1722, column: 12, scope: !3779)
!3787 = !DILocation(line: 1723, column: 5, scope: !3784)
!3788 = !DILocation(line: 1726, column: 7, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 1725, column: 5)
!3790 = !DILocation(line: 1727, column: 7, scope: !3789)
!3791 = !DILocation(line: 1729, column: 1, scope: !3775)
!3792 = distinct !DISubprogram(name: "maybe_extend_reg_info_p", scope: !3, file: !3, line: 2088, type: !2090, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3793 = !DILocation(line: 2091, column: 21, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 2091, column: 7)
!3795 = !DILocation(line: 2091, column: 31, scope: !3794)
!3796 = !DILocation(line: 2091, column: 7, scope: !3794)
!3797 = !DILocation(line: 2091, column: 38, scope: !3794)
!3798 = !DILocation(line: 2091, column: 35, scope: !3794)
!3799 = !DILocation(line: 2091, column: 7, scope: !3792)
!3800 = !DILocalVariable(name: "new_reg_info_p_size", scope: !3801, file: !3, line: 2093, type: !1309)
!3801 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 2092, column: 5)
!3802 = !DILocation(line: 2093, column: 14, scope: !3801)
!3803 = !DILocation(line: 2093, column: 36, scope: !3801)
!3804 = !DILocation(line: 2093, column: 46, scope: !3801)
!3805 = !DILocation(line: 2095, column: 7, scope: !3801)
!3806 = !DILocation(line: 2097, column: 53, scope: !3801)
!3807 = !DILocation(line: 2098, column: 53, scope: !3801)
!3808 = !DILocation(line: 2099, column: 53, scope: !3801)
!3809 = !DILocation(line: 2097, column: 42, scope: !3801)
!3810 = !DILocation(line: 2097, column: 20, scope: !3801)
!3811 = !DILocation(line: 2097, column: 18, scope: !3801)
!3812 = !DILocation(line: 2101, column: 25, scope: !3801)
!3813 = !DILocation(line: 2101, column: 23, scope: !3801)
!3814 = !DILocation(line: 2102, column: 5, scope: !3801)
!3815 = !DILocation(line: 2103, column: 1, scope: !3792)
!3816 = distinct !DISubprogram(name: "deps_analyze_insn", scope: !3, file: !3, line: 3227, type: !3817, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !3819, !839}
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "deps", file: !420, line: 451, size: 1472, elements: !3821)
!3821 = !{!3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3839, !3840, !3841}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_insns", scope: !3820, file: !420, line: 463, baseType: !839, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_mems", scope: !3820, file: !420, line: 466, baseType: !839, size: 64, offset: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_insns", scope: !3820, file: !420, line: 469, baseType: !839, size: 64, offset: 128)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_mems", scope: !3820, file: !420, line: 472, baseType: !839, size: 64, offset: 192)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "pending_read_list_length", scope: !3820, file: !420, line: 480, baseType: !810, size: 32, offset: 256)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "pending_write_list_length", scope: !3820, file: !420, line: 483, baseType: !810, size: 32, offset: 288)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "pending_flush_length", scope: !3820, file: !420, line: 487, baseType: !810, size: 32, offset: 320)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "last_pending_memory_flush", scope: !3820, file: !420, line: 498, baseType: !839, size: 64, offset: 384)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call", scope: !3820, file: !420, line: 503, baseType: !839, size: 64, offset: 448)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "last_function_call_may_noreturn", scope: !3820, file: !420, line: 509, baseType: !839, size: 64, offset: 512)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "sched_before_next_call", scope: !3820, file: !420, line: 515, baseType: !839, size: 64, offset: 576)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "in_post_call_group_p", scope: !3820, file: !420, line: 519, baseType: !582, size: 32, offset: 640)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "last_debug_insn", scope: !3820, file: !420, line: 522, baseType: !839, size: 64, offset: 704)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg", scope: !3820, file: !420, line: 526, baseType: !810, size: 32, offset: 768)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last", scope: !3820, file: !420, line: 532, baseType: !1988, size: 64, offset: 832)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "reg_last_in_use", scope: !3820, file: !420, line: 536, baseType: !3838, size: 256, offset: 896)
!3838 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !142, line: 34, baseType: !1998)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "reg_conditional_sets", scope: !3820, file: !420, line: 539, baseType: !3838, size: 256, offset: 1152)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "last_reg_pending_barrier", scope: !3820, file: !420, line: 542, baseType: !587, size: 32, offset: 1408)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !3820, file: !420, line: 546, baseType: !7, size: 1, offset: 1440, flags: DIFlagBitField, extraData: i64 1440)
!3842 = !DILocalVariable(name: "deps", arg: 1, scope: !3816, file: !3, line: 3227, type: !3819)
!3843 = !DILocation(line: 3227, column: 33, scope: !3816)
!3844 = !DILocalVariable(name: "insn", arg: 2, scope: !3816, file: !3, line: 3227, type: !839)
!3845 = !DILocation(line: 3227, column: 43, scope: !3816)
!3846 = !DILocation(line: 3229, column: 7, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 3229, column: 7)
!3848 = !DILocation(line: 3229, column: 24, scope: !3847)
!3849 = !DILocation(line: 3229, column: 7, scope: !3816)
!3850 = !DILocation(line: 3230, column: 5, scope: !3847)
!3851 = !DILocation(line: 3230, column: 22, scope: !3847)
!3852 = !DILocation(line: 3230, column: 34, scope: !3847)
!3853 = !DILocation(line: 3232, column: 7, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 3232, column: 7)
!3855 = !DILocation(line: 3232, column: 29, scope: !3854)
!3856 = !DILocation(line: 3232, column: 32, scope: !3854)
!3857 = !DILocation(line: 3232, column: 52, scope: !3854)
!3858 = !DILocation(line: 3232, column: 55, scope: !3854)
!3859 = !DILocation(line: 3232, column: 7, scope: !3816)
!3860 = !DILocation(line: 3236, column: 12, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 3236, column: 11)
!3862 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 3233, column: 5)
!3863 = !DILocation(line: 3236, column: 18, scope: !3861)
!3864 = !DILocation(line: 3237, column: 11, scope: !3861)
!3865 = !DILocation(line: 3237, column: 14, scope: !3861)
!3866 = !DILocation(line: 3238, column: 11, scope: !3861)
!3867 = !DILocation(line: 3238, column: 16, scope: !3861)
!3868 = !DILocation(line: 3239, column: 16, scope: !3861)
!3869 = !DILocation(line: 3239, column: 50, scope: !3861)
!3870 = !DILocation(line: 3239, column: 19, scope: !3861)
!3871 = !DILocation(line: 3236, column: 11, scope: !3862)
!3872 = !DILocation(line: 3242, column: 15, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !3, line: 3242, column: 15)
!3874 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 3240, column: 9)
!3875 = !DILocation(line: 3242, column: 21, scope: !3873)
!3876 = !DILocation(line: 3242, column: 41, scope: !3873)
!3877 = !DILocation(line: 3242, column: 46, scope: !3873)
!3878 = !DILocation(line: 3242, column: 44, scope: !3873)
!3879 = !DILocation(line: 3242, column: 15, scope: !3874)
!3880 = !DILocation(line: 3243, column: 34, scope: !3873)
!3881 = !DILocation(line: 3243, column: 40, scope: !3873)
!3882 = !DILocation(line: 3243, column: 13, scope: !3873)
!3883 = !DILocation(line: 3246, column: 34, scope: !3873)
!3884 = !DILocation(line: 3246, column: 40, scope: !3873)
!3885 = !DILocation(line: 3246, column: 46, scope: !3873)
!3886 = !DILocation(line: 3246, column: 17, scope: !3873)
!3887 = !DILocation(line: 3245, column: 13, scope: !3873)
!3888 = !DILocation(line: 3245, column: 19, scope: !3873)
!3889 = !DILocation(line: 3246, column: 15, scope: !3873)
!3890 = !DILocation(line: 3247, column: 9, scope: !3874)
!3891 = !DILocation(line: 3249, column: 27, scope: !3862)
!3892 = !DILocation(line: 3249, column: 33, scope: !3862)
!3893 = !DILocation(line: 3249, column: 49, scope: !3862)
!3894 = !DILocation(line: 3249, column: 7, scope: !3862)
!3895 = !DILocation(line: 3250, column: 5, scope: !3862)
!3896 = !DILocation(line: 3251, column: 12, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 3251, column: 12)
!3898 = !DILocation(line: 3251, column: 12, scope: !3854)
!3899 = !DILocalVariable(name: "i", scope: !3900, file: !3, line: 3253, type: !810)
!3900 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 3252, column: 5)
!3901 = !DILocation(line: 3253, column: 11, scope: !3900)
!3902 = !DILocation(line: 3255, column: 7, scope: !3900)
!3903 = !DILocation(line: 3255, column: 24, scope: !3900)
!3904 = !DILocation(line: 3257, column: 26, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 3257, column: 11)
!3906 = !DILocation(line: 3257, column: 11, scope: !3905)
!3907 = !DILocation(line: 3257, column: 11, scope: !3900)
!3908 = !DILocation(line: 3261, column: 31, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 3258, column: 9)
!3910 = !DILocation(line: 3262, column: 9, scope: !3909)
!3911 = !DILocation(line: 3265, column: 18, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 3265, column: 11)
!3913 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 3264, column: 9)
!3914 = !DILocation(line: 3265, column: 16, scope: !3912)
!3915 = !DILocation(line: 3265, column: 23, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 3265, column: 11)
!3917 = !DILocation(line: 3265, column: 25, scope: !3916)
!3918 = !DILocation(line: 3265, column: 11, scope: !3912)
!3919 = !DILocation(line: 3267, column: 29, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 3267, column: 17)
!3921 = !DILocation(line: 3267, column: 17, scope: !3920)
!3922 = !DILocation(line: 3267, column: 17, scope: !3916)
!3923 = !DILocation(line: 3269, column: 17, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 3268, column: 15)
!3925 = !DILocation(line: 3270, column: 17, scope: !3924)
!3926 = !DILocation(line: 3271, column: 15, scope: !3924)
!3927 = !DILocation(line: 3277, column: 25, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 3276, column: 22)
!3929 = !DILocation(line: 3276, column: 22, scope: !3920)
!3930 = !DILocation(line: 3278, column: 15, scope: !3928)
!3931 = !DILocation(line: 3282, column: 33, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 3282, column: 22)
!3933 = !DILocation(line: 3282, column: 22, scope: !3932)
!3934 = !DILocation(line: 3282, column: 22, scope: !3928)
!3935 = !DILocation(line: 3283, column: 8, scope: !3932)
!3936 = !DILocation(line: 3289, column: 22, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 3289, column: 22)
!3938 = !DILocation(line: 3289, column: 24, scope: !3937)
!3939 = !DILocation(line: 3290, column: 22, scope: !3937)
!3940 = !DILocation(line: 3290, column: 26, scope: !3937)
!3941 = !DILocation(line: 3290, column: 28, scope: !3937)
!3942 = !DILocation(line: 3291, column: 26, scope: !3937)
!3943 = !DILocation(line: 3291, column: 32, scope: !3937)
!3944 = !DILocation(line: 3291, column: 49, scope: !3937)
!3945 = !DILocation(line: 3291, column: 52, scope: !3937)
!3946 = !DILocation(line: 3289, column: 22, scope: !3932)
!3947 = !DILocation(line: 3292, column: 8, scope: !3937)
!3948 = !DILocation(line: 3267, column: 30, scope: !3920)
!3949 = !DILocation(line: 3265, column: 51, scope: !3916)
!3950 = !DILocation(line: 3265, column: 11, scope: !3916)
!3951 = distinct !{!3951, !3918, !3952}
!3952 = !DILocation(line: 3292, column: 8, scope: !3912)
!3953 = !DILocation(line: 3297, column: 37, scope: !3900)
!3954 = !DILocation(line: 3297, column: 43, scope: !3900)
!3955 = !DILocation(line: 3298, column: 38, scope: !3900)
!3956 = !DILocation(line: 3298, column: 44, scope: !3900)
!3957 = !DILocation(line: 3297, column: 7, scope: !3900)
!3958 = !DILocation(line: 3301, column: 27, scope: !3900)
!3959 = !DILocation(line: 3301, column: 33, scope: !3900)
!3960 = !DILocation(line: 3301, column: 49, scope: !3900)
!3961 = !DILocation(line: 3301, column: 7, scope: !3900)
!3962 = !DILocation(line: 3310, column: 7, scope: !3900)
!3963 = !DILocation(line: 3316, column: 28, scope: !3900)
!3964 = !DILocation(line: 3316, column: 34, scope: !3900)
!3965 = !DILocation(line: 3316, column: 48, scope: !3900)
!3966 = !DILocation(line: 3316, column: 46, scope: !3900)
!3967 = !DILocation(line: 3316, column: 7, scope: !3900)
!3968 = !DILocation(line: 3318, column: 12, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 3318, column: 11)
!3970 = !DILocation(line: 3318, column: 18, scope: !3969)
!3971 = !DILocation(line: 3318, column: 11, scope: !3900)
!3972 = !DILocation(line: 3321, column: 33, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 3319, column: 9)
!3974 = !DILocation(line: 3321, column: 39, scope: !3973)
!3975 = !DILocation(line: 3321, column: 11, scope: !3973)
!3976 = !DILocation(line: 3322, column: 55, scope: !3973)
!3977 = !DILocation(line: 3322, column: 38, scope: !3973)
!3978 = !DILocation(line: 3322, column: 11, scope: !3973)
!3979 = !DILocation(line: 3322, column: 17, scope: !3973)
!3980 = !DILocation(line: 3322, column: 36, scope: !3973)
!3981 = !DILocation(line: 3324, column: 29, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 3324, column: 8)
!3983 = !DILocation(line: 3324, column: 8, scope: !3982)
!3984 = !DILocation(line: 3324, column: 8, scope: !3973)
!3985 = !DILocation(line: 3328, column: 30, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 3325, column: 6)
!3987 = !DILocation(line: 3328, column: 36, scope: !3986)
!3988 = !DILocation(line: 3328, column: 8, scope: !3986)
!3989 = !DILocation(line: 3330, column: 22, scope: !3986)
!3990 = !DILocation(line: 3330, column: 5, scope: !3986)
!3991 = !DILocation(line: 3329, column: 8, scope: !3986)
!3992 = !DILocation(line: 3329, column: 14, scope: !3986)
!3993 = !DILocation(line: 3330, column: 3, scope: !3986)
!3994 = !DILocation(line: 3331, column: 6, scope: !3986)
!3995 = !DILocation(line: 3335, column: 17, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 3335, column: 15)
!3997 = !DILocation(line: 3335, column: 15, scope: !3973)
!3998 = !DILocation(line: 3336, column: 13, scope: !3996)
!3999 = !DILocation(line: 3336, column: 19, scope: !3996)
!4000 = !DILocation(line: 3336, column: 40, scope: !3996)
!4001 = !DILocation(line: 3337, column: 9, scope: !3973)
!4002 = !DILocation(line: 3338, column: 5, scope: !3900)
!4003 = !DILocation(line: 3340, column: 7, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 3340, column: 7)
!4005 = !DILocation(line: 3340, column: 24, scope: !4004)
!4006 = !DILocation(line: 3340, column: 7, scope: !3816)
!4007 = !DILocation(line: 3341, column: 26, scope: !4004)
!4008 = !DILocation(line: 3341, column: 5, scope: !4004)
!4009 = !DILocation(line: 3345, column: 7, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 3345, column: 7)
!4011 = !DILocation(line: 3345, column: 7, scope: !3816)
!4012 = !DILocation(line: 3346, column: 5, scope: !4010)
!4013 = !DILocation(line: 3349, column: 7, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 3349, column: 7)
!4015 = !DILocation(line: 3349, column: 24, scope: !4014)
!4016 = !DILocation(line: 3349, column: 7, scope: !3816)
!4017 = !DILocation(line: 3350, column: 5, scope: !4014)
!4018 = !DILocation(line: 3350, column: 22, scope: !4014)
!4019 = !DILocation(line: 3353, column: 8, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 3353, column: 7)
!4021 = !DILocation(line: 3353, column: 30, scope: !4020)
!4022 = !DILocation(line: 3353, column: 33, scope: !4020)
!4023 = !DILocation(line: 3354, column: 7, scope: !4020)
!4024 = !DILocation(line: 3354, column: 10, scope: !4020)
!4025 = !DILocation(line: 3354, column: 31, scope: !4020)
!4026 = !DILocation(line: 3354, column: 35, scope: !4020)
!4027 = !DILocation(line: 3353, column: 7, scope: !3816)
!4028 = !DILocation(line: 3355, column: 25, scope: !4020)
!4029 = !DILocation(line: 3355, column: 5, scope: !4020)
!4030 = !DILocation(line: 3356, column: 1, scope: !3816)
!4031 = distinct !DISubprogram(name: "flush_pending_lists", scope: !3, file: !3, line: 1583, type: !4032, scopeLine: 1585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{null, !3819, !839, !810, !810}
!4034 = !DILocalVariable(name: "deps", arg: 1, scope: !4031, file: !3, line: 1583, type: !3819)
!4035 = !DILocation(line: 1583, column: 35, scope: !4031)
!4036 = !DILocalVariable(name: "insn", arg: 2, scope: !4031, file: !3, line: 1583, type: !839)
!4037 = !DILocation(line: 1583, column: 45, scope: !4031)
!4038 = !DILocalVariable(name: "for_read", arg: 3, scope: !4031, file: !3, line: 1583, type: !810)
!4039 = !DILocation(line: 1583, column: 55, scope: !4031)
!4040 = !DILocalVariable(name: "for_write", arg: 4, scope: !4031, file: !3, line: 1584, type: !810)
!4041 = !DILocation(line: 1584, column: 12, scope: !4031)
!4042 = !DILocation(line: 1586, column: 7, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 1586, column: 7)
!4044 = !DILocation(line: 1586, column: 7, scope: !4031)
!4045 = !DILocation(line: 1588, column: 37, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1587, column: 5)
!4047 = !DILocation(line: 1588, column: 43, scope: !4046)
!4048 = !DILocation(line: 1588, column: 50, scope: !4046)
!4049 = !DILocation(line: 1588, column: 56, scope: !4046)
!4050 = !DILocation(line: 1588, column: 7, scope: !4046)
!4051 = !DILocation(line: 1590, column: 12, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 1590, column: 11)
!4053 = !DILocation(line: 1590, column: 18, scope: !4052)
!4054 = !DILocation(line: 1590, column: 11, scope: !4046)
!4055 = !DILocation(line: 1592, column: 33, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 1591, column: 9)
!4057 = !DILocation(line: 1592, column: 39, scope: !4056)
!4058 = !DILocation(line: 1592, column: 11, scope: !4056)
!4059 = !DILocation(line: 1593, column: 11, scope: !4056)
!4060 = !DILocation(line: 1593, column: 17, scope: !4056)
!4061 = !DILocation(line: 1593, column: 42, scope: !4056)
!4062 = !DILocation(line: 1594, column: 9, scope: !4056)
!4063 = !DILocation(line: 1595, column: 5, scope: !4046)
!4064 = !DILocation(line: 1597, column: 33, scope: !4031)
!4065 = !DILocation(line: 1597, column: 39, scope: !4031)
!4066 = !DILocation(line: 1597, column: 46, scope: !4031)
!4067 = !DILocation(line: 1597, column: 52, scope: !4031)
!4068 = !DILocation(line: 1598, column: 5, scope: !4031)
!4069 = !DILocation(line: 1597, column: 3, scope: !4031)
!4070 = !DILocation(line: 1600, column: 33, scope: !4031)
!4071 = !DILocation(line: 1600, column: 39, scope: !4031)
!4072 = !DILocation(line: 1601, column: 34, scope: !4031)
!4073 = !DILocation(line: 1601, column: 40, scope: !4031)
!4074 = !DILocation(line: 1602, column: 33, scope: !4031)
!4075 = !DILocation(line: 1600, column: 3, scope: !4031)
!4076 = !DILocation(line: 1603, column: 8, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 1603, column: 7)
!4078 = !DILocation(line: 1603, column: 14, scope: !4077)
!4079 = !DILocation(line: 1603, column: 7, scope: !4031)
!4080 = !DILocation(line: 1605, column: 29, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1604, column: 5)
!4082 = !DILocation(line: 1605, column: 35, scope: !4081)
!4083 = !DILocation(line: 1605, column: 7, scope: !4081)
!4084 = !DILocation(line: 1606, column: 7, scope: !4081)
!4085 = !DILocation(line: 1606, column: 13, scope: !4081)
!4086 = !DILocation(line: 1606, column: 39, scope: !4081)
!4087 = !DILocation(line: 1608, column: 58, scope: !4081)
!4088 = !DILocation(line: 1608, column: 41, scope: !4081)
!4089 = !DILocation(line: 1608, column: 7, scope: !4081)
!4090 = !DILocation(line: 1608, column: 13, scope: !4081)
!4091 = !DILocation(line: 1608, column: 39, scope: !4081)
!4092 = !DILocation(line: 1609, column: 7, scope: !4081)
!4093 = !DILocation(line: 1609, column: 13, scope: !4081)
!4094 = !DILocation(line: 1609, column: 34, scope: !4081)
!4095 = !DILocation(line: 1610, column: 5, scope: !4081)
!4096 = !DILocation(line: 1611, column: 1, scope: !4031)
!4097 = distinct !DISubprogram(name: "sched_analyze_insn", scope: !3, file: !3, line: 2612, type: !4098, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!4098 = !DISubroutineType(types: !4099)
!4099 = !{null, !3819, !839, !839}
!4100 = !DILocalVariable(name: "deps", arg: 1, scope: !4097, file: !3, line: 2612, type: !3819)
!4101 = !DILocation(line: 2612, column: 34, scope: !4097)
!4102 = !DILocalVariable(name: "x", arg: 2, scope: !4097, file: !3, line: 2612, type: !839)
!4103 = !DILocation(line: 2612, column: 44, scope: !4097)
!4104 = !DILocalVariable(name: "insn", arg: 3, scope: !4097, file: !3, line: 2612, type: !839)
!4105 = !DILocation(line: 2612, column: 51, scope: !4097)
!4106 = !DILocalVariable(name: "code", scope: !4097, file: !3, line: 2614, type: !434)
!4107 = !DILocation(line: 2614, column: 12, scope: !4097)
!4108 = !DILocation(line: 2614, column: 19, scope: !4097)
!4109 = !DILocalVariable(name: "link", scope: !4097, file: !3, line: 2615, type: !839)
!4110 = !DILocation(line: 2615, column: 7, scope: !4097)
!4111 = !DILocalVariable(name: "i", scope: !4097, file: !3, line: 2616, type: !7)
!4112 = !DILocation(line: 2616, column: 12, scope: !4097)
!4113 = !DILocalVariable(name: "rsi", scope: !4097, file: !3, line: 2617, type: !4114)
!4114 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_set_iterator", file: !142, line: 90, baseType: !4115)
!4115 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !890, line: 218, baseType: !4116)
!4116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !890, line: 203, size: 256, elements: !4117)
!4117 = !{!4118, !4119, !4120, !4121}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !4116, file: !890, line: 206, baseType: !893, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !4116, file: !890, line: 209, baseType: !893, size: 64, offset: 64)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !4116, file: !890, line: 212, baseType: !7, size: 32, offset: 128)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4116, file: !890, line: 217, baseType: !903, size: 64, offset: 192)
!4122 = !DILocation(line: 2617, column: 20, scope: !4097)
!4123 = !DILocation(line: 2619, column: 9, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2619, column: 7)
!4125 = !DILocation(line: 2619, column: 7, scope: !4097)
!4126 = !DILocalVariable(name: "temp", scope: !4127, file: !3, line: 2621, type: !1986)
!4127 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 2620, column: 5)
!4128 = !DILocation(line: 2621, column: 20, scope: !4127)
!4129 = !DILocation(line: 2623, column: 21, scope: !4127)
!4130 = !DILocation(line: 2623, column: 7, scope: !4127)
!4131 = !DILocation(line: 2624, column: 7, scope: !4127)
!4132 = !DILocation(line: 2625, column: 7, scope: !4127)
!4133 = !DILocation(line: 2626, column: 7, scope: !4127)
!4134 = !DILocation(line: 2627, column: 7, scope: !4127)
!4135 = !DILocation(line: 2628, column: 5, scope: !4127)
!4136 = !DILocation(line: 2630, column: 26, scope: !4097)
!4137 = !DILocation(line: 2631, column: 5, scope: !4097)
!4138 = !DILocation(line: 2631, column: 8, scope: !4097)
!4139 = !DILocation(line: 2631, column: 13, scope: !4097)
!4140 = !DILocation(line: 0, scope: !4097)
!4141 = !DILocation(line: 2630, column: 25, scope: !4097)
!4142 = !DILocation(line: 2630, column: 23, scope: !4097)
!4143 = !DILocation(line: 2633, column: 19, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2633, column: 7)
!4145 = !DILocation(line: 2633, column: 7, scope: !4144)
!4146 = !DILocation(line: 2633, column: 7, scope: !4097)
!4147 = !DILocation(line: 2636, column: 26, scope: !4144)
!4148 = !DILocation(line: 2636, column: 32, scope: !4144)
!4149 = !DILocation(line: 2636, column: 38, scope: !4144)
!4150 = !DILocation(line: 2636, column: 5, scope: !4144)
!4151 = !DILocation(line: 2639, column: 7, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2639, column: 7)
!4153 = !DILocation(line: 2639, column: 12, scope: !4152)
!4154 = !DILocation(line: 2639, column: 7, scope: !4097)
!4155 = !DILocation(line: 2641, column: 24, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 2640, column: 5)
!4157 = !DILocation(line: 2641, column: 30, scope: !4156)
!4158 = !DILocation(line: 2641, column: 50, scope: !4156)
!4159 = !DILocation(line: 2641, column: 7, scope: !4156)
!4160 = !DILocation(line: 2645, column: 11, scope: !4156)
!4161 = !DILocation(line: 2645, column: 9, scope: !4156)
!4162 = !DILocation(line: 2646, column: 14, scope: !4156)
!4163 = !DILocation(line: 2646, column: 12, scope: !4156)
!4164 = !DILocation(line: 2647, column: 5, scope: !4156)
!4165 = !DILocation(line: 2648, column: 7, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2648, column: 7)
!4167 = !DILocation(line: 2648, column: 12, scope: !4166)
!4168 = !DILocation(line: 2648, column: 19, scope: !4166)
!4169 = !DILocation(line: 2648, column: 22, scope: !4166)
!4170 = !DILocation(line: 2648, column: 27, scope: !4166)
!4171 = !DILocation(line: 2648, column: 7, scope: !4097)
!4172 = !DILocation(line: 2650, column: 24, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 2649, column: 5)
!4174 = !DILocation(line: 2650, column: 30, scope: !4173)
!4175 = !DILocation(line: 2650, column: 33, scope: !4173)
!4176 = !DILocation(line: 2650, column: 7, scope: !4173)
!4177 = !DILocation(line: 2655, column: 11, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 2655, column: 11)
!4179 = !DILocation(line: 2655, column: 16, scope: !4178)
!4180 = !DILocation(line: 2655, column: 11, scope: !4173)
!4181 = !DILocation(line: 2656, column: 23, scope: !4178)
!4182 = !DILocation(line: 2656, column: 29, scope: !4178)
!4183 = !DILocation(line: 2656, column: 35, scope: !4178)
!4184 = !DILocation(line: 2656, column: 2, scope: !4178)
!4185 = !DILocation(line: 2658, column: 5, scope: !4173)
!4186 = !DILocation(line: 2659, column: 12, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 2659, column: 12)
!4188 = !DILocation(line: 2659, column: 17, scope: !4187)
!4189 = !DILocation(line: 2659, column: 12, scope: !4166)
!4190 = !DILocation(line: 2661, column: 16, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 2661, column: 7)
!4192 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 2660, column: 5)
!4193 = !DILocation(line: 2661, column: 14, scope: !4191)
!4194 = !DILocation(line: 2661, column: 12, scope: !4191)
!4195 = !DILocation(line: 2661, column: 33, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 2661, column: 7)
!4197 = !DILocation(line: 2661, column: 7, scope: !4191)
!4198 = !DILocalVariable(name: "sub", scope: !4199, file: !3, line: 2663, type: !839)
!4199 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 2662, column: 2)
!4200 = !DILocation(line: 2663, column: 8, scope: !4199)
!4201 = !DILocation(line: 2663, column: 14, scope: !4199)
!4202 = !DILocation(line: 2664, column: 11, scope: !4199)
!4203 = !DILocation(line: 2664, column: 9, scope: !4199)
!4204 = !DILocation(line: 2666, column: 8, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 2666, column: 8)
!4206 = !DILocation(line: 2666, column: 13, scope: !4205)
!4207 = !DILocation(line: 2666, column: 8, scope: !4199)
!4208 = !DILocation(line: 2668, column: 25, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 2667, column: 6)
!4210 = !DILocation(line: 2668, column: 31, scope: !4209)
!4211 = !DILocation(line: 2668, column: 53, scope: !4209)
!4212 = !DILocation(line: 2668, column: 8, scope: !4209)
!4213 = !DILocation(line: 2669, column: 14, scope: !4209)
!4214 = !DILocation(line: 2669, column: 12, scope: !4209)
!4215 = !DILocation(line: 2670, column: 15, scope: !4209)
!4216 = !DILocation(line: 2670, column: 13, scope: !4209)
!4217 = !DILocation(line: 2671, column: 6, scope: !4209)
!4218 = !DILocation(line: 2672, column: 8, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 2672, column: 8)
!4220 = !DILocation(line: 2672, column: 13, scope: !4219)
!4221 = !DILocation(line: 2672, column: 20, scope: !4219)
!4222 = !DILocation(line: 2672, column: 23, scope: !4219)
!4223 = !DILocation(line: 2672, column: 28, scope: !4219)
!4224 = !DILocation(line: 2672, column: 8, scope: !4199)
!4225 = !DILocation(line: 2673, column: 23, scope: !4219)
!4226 = !DILocation(line: 2673, column: 29, scope: !4219)
!4227 = !DILocation(line: 2673, column: 34, scope: !4219)
!4228 = !DILocation(line: 2673, column: 6, scope: !4219)
!4229 = !DILocation(line: 2675, column: 23, scope: !4219)
!4230 = !DILocation(line: 2675, column: 29, scope: !4219)
!4231 = !DILocation(line: 2675, column: 34, scope: !4219)
!4232 = !DILocation(line: 2675, column: 6, scope: !4219)
!4233 = !DILocation(line: 2661, column: 7, scope: !4196)
!4234 = distinct !{!4234, !4197, !4235}
!4235 = !DILocation(line: 2676, column: 2, scope: !4191)
!4236 = !DILocation(line: 2677, column: 5, scope: !4192)
!4237 = !DILocation(line: 2679, column: 22, scope: !4187)
!4238 = !DILocation(line: 2679, column: 28, scope: !4187)
!4239 = !DILocation(line: 2679, column: 31, scope: !4187)
!4240 = !DILocation(line: 2679, column: 5, scope: !4187)
!4241 = !DILocation(line: 2682, column: 7, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2682, column: 7)
!4243 = !DILocation(line: 2682, column: 7, scope: !4097)
!4244 = !DILocation(line: 2684, column: 19, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 2684, column: 7)
!4246 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 2683, column: 5)
!4247 = !DILocation(line: 2684, column: 17, scope: !4245)
!4248 = !DILocation(line: 2684, column: 12, scope: !4245)
!4249 = !DILocation(line: 2684, column: 52, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 2684, column: 7)
!4251 = !DILocation(line: 2684, column: 7, scope: !4245)
!4252 = !DILocation(line: 2686, column: 8, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 2686, column: 8)
!4254 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 2685, column: 2)
!4255 = !DILocation(line: 2686, column: 34, scope: !4253)
!4256 = !DILocation(line: 2686, column: 8, scope: !4254)
!4257 = !DILocation(line: 2687, column: 23, scope: !4253)
!4258 = !DILocation(line: 2687, column: 29, scope: !4253)
!4259 = !DILocation(line: 2687, column: 45, scope: !4253)
!4260 = !DILocation(line: 2687, column: 6, scope: !4253)
!4261 = !DILocation(line: 2689, column: 23, scope: !4253)
!4262 = !DILocation(line: 2689, column: 29, scope: !4253)
!4263 = !DILocation(line: 2689, column: 45, scope: !4253)
!4264 = !DILocation(line: 2689, column: 6, scope: !4253)
!4265 = !DILocation(line: 2690, column: 2, scope: !4254)
!4266 = !DILocation(line: 2684, column: 65, scope: !4250)
!4267 = !DILocation(line: 2684, column: 63, scope: !4250)
!4268 = !DILocation(line: 2684, column: 7, scope: !4250)
!4269 = distinct !{!4269, !4251, !4270}
!4270 = !DILocation(line: 2690, column: 2, scope: !4245)
!4271 = !DILocation(line: 2691, column: 26, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 2691, column: 11)
!4273 = !DILocation(line: 2691, column: 11, scope: !4272)
!4274 = !DILocation(line: 2691, column: 11, scope: !4246)
!4275 = !DILocation(line: 2692, column: 22, scope: !4272)
!4276 = !DILocation(line: 2692, column: 2, scope: !4272)
!4277 = !DILocation(line: 2693, column: 5, scope: !4246)
!4278 = !DILocation(line: 2695, column: 7, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2695, column: 7)
!4280 = !DILocation(line: 2695, column: 7, scope: !4097)
!4281 = !DILocalVariable(name: "next", scope: !4282, file: !3, line: 2697, type: !839)
!4282 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 2696, column: 5)
!4283 = !DILocation(line: 2697, column: 11, scope: !4282)
!4284 = !DILocation(line: 2698, column: 33, scope: !4282)
!4285 = !DILocation(line: 2698, column: 14, scope: !4282)
!4286 = !DILocation(line: 2698, column: 12, scope: !4282)
!4287 = !DILocation(line: 2699, column: 7, scope: !4282)
!4288 = !DILocation(line: 2699, column: 14, scope: !4282)
!4289 = !DILocation(line: 2699, column: 19, scope: !4282)
!4290 = !DILocation(line: 2699, column: 22, scope: !4282)
!4291 = !DILocation(line: 0, scope: !4282)
!4292 = !DILocation(line: 2700, column: 28, scope: !4282)
!4293 = !DILocation(line: 2700, column: 9, scope: !4282)
!4294 = !DILocation(line: 2700, column: 7, scope: !4282)
!4295 = distinct !{!4295, !4287, !4296}
!4296 = !DILocation(line: 2700, column: 32, scope: !4282)
!4297 = !DILocation(line: 2701, column: 11, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 2701, column: 11)
!4299 = !DILocation(line: 2701, column: 16, scope: !4298)
!4300 = !DILocation(line: 2701, column: 19, scope: !4298)
!4301 = !DILocation(line: 2701, column: 11, scope: !4282)
!4302 = !DILocation(line: 2702, column: 22, scope: !4298)
!4303 = !DILocation(line: 2702, column: 2, scope: !4298)
!4304 = !DILocalVariable(name: "pending", scope: !4305, file: !3, line: 2705, type: !839)
!4305 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 2704, column: 2)
!4306 = !DILocation(line: 2705, column: 8, scope: !4305)
!4307 = !DILocalVariable(name: "pending_mem", scope: !4305, file: !3, line: 2705, type: !839)
!4308 = !DILocation(line: 2705, column: 17, scope: !4305)
!4309 = !DILocation(line: 2707, column: 15, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 2707, column: 15)
!4311 = !DILocation(line: 2707, column: 32, scope: !4310)
!4312 = !DILocation(line: 2707, column: 15, scope: !4305)
!4313 = !DILocalVariable(name: "tmp_uses", scope: !4314, file: !3, line: 2709, type: !3838)
!4314 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 2708, column: 13)
!4315 = !DILocation(line: 2709, column: 27, scope: !4314)
!4316 = !DILocalVariable(name: "tmp_sets", scope: !4314, file: !3, line: 2709, type: !3838)
!4317 = !DILocation(line: 2709, column: 37, scope: !4314)
!4318 = !DILocation(line: 2710, column: 15, scope: !4314)
!4319 = !DILocation(line: 2711, column: 15, scope: !4314)
!4320 = !DILocation(line: 2713, column: 17, scope: !4314)
!4321 = !DILocation(line: 2713, column: 34, scope: !4314)
!4322 = !DILocation(line: 2714, column: 18, scope: !4314)
!4323 = !DILocation(line: 2714, column: 25, scope: !4314)
!4324 = !DILocation(line: 2714, column: 31, scope: !4314)
!4325 = !DILocation(line: 2713, column: 15, scope: !4314)
!4326 = !DILocation(line: 2716, column: 15, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 2716, column: 15)
!4328 = !DILocation(line: 2716, column: 15, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 2716, column: 15)
!4330 = !DILocalVariable(name: "reg_last", scope: !4331, file: !3, line: 2718, type: !1988)
!4331 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 2717, column: 17)
!4332 = !DILocation(line: 2718, column: 36, scope: !4331)
!4333 = !DILocation(line: 2718, column: 48, scope: !4331)
!4334 = !DILocation(line: 2718, column: 54, scope: !4331)
!4335 = !DILocation(line: 2718, column: 63, scope: !4331)
!4336 = !DILocation(line: 2719, column: 40, scope: !4331)
!4337 = !DILocation(line: 2719, column: 46, scope: !4331)
!4338 = !DILocation(line: 2719, column: 56, scope: !4331)
!4339 = !DILocation(line: 2719, column: 19, scope: !4331)
!4340 = !DILocation(line: 2720, column: 40, scope: !4331)
!4341 = !DILocation(line: 2720, column: 46, scope: !4331)
!4342 = !DILocation(line: 2720, column: 56, scope: !4331)
!4343 = !DILocation(line: 2720, column: 19, scope: !4331)
!4344 = !DILocation(line: 2722, column: 40, scope: !4331)
!4345 = !DILocation(line: 2722, column: 46, scope: !4331)
!4346 = !DILocation(line: 2722, column: 56, scope: !4331)
!4347 = !DILocation(line: 2722, column: 19, scope: !4331)
!4348 = !DILocation(line: 2725, column: 24, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 2725, column: 23)
!4350 = !DILocation(line: 2725, column: 30, scope: !4349)
!4351 = !DILocation(line: 2725, column: 23, scope: !4331)
!4352 = !DILocation(line: 2727, column: 23, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 2726, column: 21)
!4354 = !DILocation(line: 2727, column: 33, scope: !4353)
!4355 = !DILocation(line: 2727, column: 44, scope: !4353)
!4356 = !DILocation(line: 2728, column: 57, scope: !4353)
!4357 = !DILocation(line: 2728, column: 63, scope: !4353)
!4358 = !DILocation(line: 2728, column: 73, scope: !4353)
!4359 = !DILocation(line: 2728, column: 40, scope: !4353)
!4360 = !DILocation(line: 2728, column: 23, scope: !4353)
!4361 = !DILocation(line: 2728, column: 33, scope: !4353)
!4362 = !DILocation(line: 2728, column: 38, scope: !4353)
!4363 = !DILocation(line: 2729, column: 21, scope: !4353)
!4364 = !DILocation(line: 2730, column: 17, scope: !4331)
!4365 = distinct !{!4365, !4326, !4366}
!4366 = !DILocation(line: 2730, column: 17, scope: !4327)
!4367 = !DILocation(line: 2731, column: 15, scope: !4314)
!4368 = !DILocation(line: 2733, column: 15, scope: !4314)
!4369 = !DILocation(line: 2734, column: 15, scope: !4314)
!4370 = !DILocation(line: 2735, column: 13, scope: !4314)
!4371 = !DILocation(line: 2741, column: 14, scope: !4305)
!4372 = !DILocation(line: 2741, column: 20, scope: !4305)
!4373 = !DILocation(line: 2741, column: 12, scope: !4305)
!4374 = !DILocation(line: 2742, column: 18, scope: !4305)
!4375 = !DILocation(line: 2742, column: 24, scope: !4305)
!4376 = !DILocation(line: 2742, column: 16, scope: !4305)
!4377 = !DILocation(line: 2743, column: 4, scope: !4305)
!4378 = !DILocation(line: 2743, column: 11, scope: !4305)
!4379 = !DILocation(line: 2745, column: 46, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 2745, column: 12)
!4381 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 2744, column: 6)
!4382 = !DILocation(line: 2745, column: 52, scope: !4380)
!4383 = !DILocation(line: 2745, column: 14, scope: !4380)
!4384 = !DILocation(line: 2745, column: 12, scope: !4381)
!4385 = !DILocation(line: 2746, column: 19, scope: !4380)
!4386 = !DILocation(line: 2746, column: 25, scope: !4380)
!4387 = !DILocation(line: 2746, column: 3, scope: !4380)
!4388 = !DILocation(line: 2747, column: 18, scope: !4381)
!4389 = !DILocation(line: 2747, column: 16, scope: !4381)
!4390 = !DILocation(line: 2748, column: 22, scope: !4381)
!4391 = !DILocation(line: 2748, column: 20, scope: !4381)
!4392 = distinct !{!4392, !4377, !4393}
!4393 = !DILocation(line: 2749, column: 6, scope: !4305)
!4394 = !DILocation(line: 2751, column: 14, scope: !4305)
!4395 = !DILocation(line: 2751, column: 20, scope: !4305)
!4396 = !DILocation(line: 2751, column: 12, scope: !4305)
!4397 = !DILocation(line: 2752, column: 18, scope: !4305)
!4398 = !DILocation(line: 2752, column: 24, scope: !4305)
!4399 = !DILocation(line: 2752, column: 16, scope: !4305)
!4400 = !DILocation(line: 2753, column: 4, scope: !4305)
!4401 = !DILocation(line: 2753, column: 11, scope: !4305)
!4402 = !DILocation(line: 2755, column: 12, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 2755, column: 12)
!4404 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 2754, column: 6)
!4405 = !DILocation(line: 2756, column: 5, scope: !4403)
!4406 = !DILocation(line: 2756, column: 42, scope: !4403)
!4407 = !DILocation(line: 2756, column: 48, scope: !4403)
!4408 = !DILocation(line: 2756, column: 10, scope: !4403)
!4409 = !DILocation(line: 2755, column: 12, scope: !4404)
!4410 = !DILocation(line: 2757, column: 19, scope: !4403)
!4411 = !DILocation(line: 2757, column: 25, scope: !4403)
!4412 = !DILocation(line: 2757, column: 3, scope: !4403)
!4413 = !DILocation(line: 2758, column: 18, scope: !4404)
!4414 = !DILocation(line: 2758, column: 16, scope: !4404)
!4415 = !DILocation(line: 2759, column: 22, scope: !4404)
!4416 = !DILocation(line: 2759, column: 20, scope: !4404)
!4417 = distinct !{!4417, !4400, !4418}
!4418 = !DILocation(line: 2760, column: 6, scope: !4305)
!4419 = !DILocation(line: 2762, column: 25, scope: !4305)
!4420 = !DILocation(line: 2762, column: 31, scope: !4305)
!4421 = !DILocation(line: 2762, column: 37, scope: !4305)
!4422 = !DILocation(line: 2762, column: 4, scope: !4305)
!4423 = !DILocation(line: 2765, column: 5, scope: !4282)
!4424 = !DILocation(line: 2773, column: 9, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2773, column: 7)
!4426 = !DILocation(line: 2773, column: 23, scope: !4425)
!4427 = !DILocation(line: 2773, column: 26, scope: !4425)
!4428 = !DILocation(line: 2773, column: 41, scope: !4425)
!4429 = !DILocation(line: 2773, column: 64, scope: !4425)
!4430 = !DILocation(line: 2773, column: 44, scope: !4425)
!4431 = !DILocation(line: 2774, column: 7, scope: !4425)
!4432 = !DILocation(line: 2774, column: 11, scope: !4425)
!4433 = !DILocation(line: 2774, column: 33, scope: !4425)
!4434 = !DILocation(line: 2774, column: 57, scope: !4425)
!4435 = !DILocation(line: 2774, column: 36, scope: !4425)
!4436 = !DILocation(line: 2773, column: 7, scope: !4097)
!4437 = !DILocation(line: 2775, column: 25, scope: !4425)
!4438 = !DILocation(line: 2775, column: 5, scope: !4425)
!4439 = !DILocation(line: 2777, column: 7, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2777, column: 7)
!4441 = !DILocation(line: 2777, column: 7, scope: !4097)
!4442 = !DILocation(line: 2779, column: 28, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 2778, column: 5)
!4444 = !DILocation(line: 2779, column: 34, scope: !4443)
!4445 = !DILocation(line: 2779, column: 7, scope: !4443)
!4446 = !DILocation(line: 2780, column: 37, scope: !4443)
!4447 = !DILocation(line: 2780, column: 7, scope: !4443)
!4448 = !DILocation(line: 2781, column: 5, scope: !4443)
!4449 = !DILocation(line: 2784, column: 7, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2784, column: 7)
!4451 = !DILocation(line: 2784, column: 7, scope: !4097)
!4452 = !DILocalVariable(name: "prev", scope: !4453, file: !3, line: 2786, type: !839)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 2785, column: 5)
!4454 = !DILocation(line: 2786, column: 11, scope: !4453)
!4455 = !DILocation(line: 2786, column: 18, scope: !4453)
!4456 = !DILocation(line: 2786, column: 24, scope: !4453)
!4457 = !DILocalVariable(name: "u", scope: !4453, file: !3, line: 2787, type: !839)
!4458 = !DILocation(line: 2787, column: 11, scope: !4453)
!4459 = !DILocation(line: 2789, column: 12, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 2789, column: 11)
!4461 = !DILocation(line: 2789, column: 18, scope: !4460)
!4462 = !DILocation(line: 2789, column: 11, scope: !4453)
!4463 = !DILocation(line: 2790, column: 26, scope: !4460)
!4464 = !DILocation(line: 2790, column: 2, scope: !4460)
!4465 = !DILocation(line: 2790, column: 8, scope: !4460)
!4466 = !DILocation(line: 2790, column: 24, scope: !4460)
!4467 = !DILocation(line: 2792, column: 11, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 2792, column: 11)
!4469 = !DILocation(line: 2792, column: 11, scope: !4453)
!4470 = !DILocation(line: 2793, column: 18, scope: !4468)
!4471 = !DILocation(line: 2793, column: 24, scope: !4468)
!4472 = !DILocation(line: 2793, column: 2, scope: !4468)
!4473 = !DILocation(line: 2795, column: 28, scope: !4453)
!4474 = !DILocation(line: 2795, column: 34, scope: !4453)
!4475 = !DILocation(line: 2795, column: 40, scope: !4453)
!4476 = !DILocation(line: 2795, column: 7, scope: !4453)
!4477 = !DILocation(line: 2798, column: 16, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 2798, column: 7)
!4479 = !DILocation(line: 2798, column: 22, scope: !4478)
!4480 = !DILocation(line: 2798, column: 14, scope: !4478)
!4481 = !DILocation(line: 2798, column: 12, scope: !4478)
!4482 = !DILocation(line: 2798, column: 49, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 2798, column: 7)
!4484 = !DILocation(line: 2798, column: 7, scope: !4478)
!4485 = !DILocation(line: 2799, column: 8, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 2799, column: 6)
!4487 = !DILocation(line: 2800, column: 6, scope: !4486)
!4488 = !DILocation(line: 2800, column: 10, scope: !4486)
!4489 = !DILocation(line: 2799, column: 6, scope: !4483)
!4490 = !DILocation(line: 2801, column: 20, scope: !4486)
!4491 = !DILocation(line: 2801, column: 26, scope: !4486)
!4492 = !DILocation(line: 2801, column: 4, scope: !4486)
!4493 = !DILocation(line: 2800, column: 23, scope: !4486)
!4494 = !DILocation(line: 2798, column: 56, scope: !4483)
!4495 = !DILocation(line: 2798, column: 54, scope: !4483)
!4496 = !DILocation(line: 2798, column: 7, scope: !4483)
!4497 = distinct !{!4497, !4484, !4498}
!4498 = !DILocation(line: 2801, column: 51, scope: !4478)
!4499 = !DILocation(line: 2803, column: 7, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 2803, column: 7)
!4501 = !DILocation(line: 2803, column: 7, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2803, column: 7)
!4503 = !DILocalVariable(name: "reg_last", scope: !4504, file: !3, line: 2805, type: !1988)
!4504 = distinct !DILexicalBlock(scope: !4502, file: !3, line: 2804, column: 2)
!4505 = !DILocation(line: 2805, column: 21, scope: !4504)
!4506 = !DILocation(line: 2805, column: 33, scope: !4504)
!4507 = !DILocation(line: 2805, column: 39, scope: !4504)
!4508 = !DILocation(line: 2805, column: 48, scope: !4504)
!4509 = !DILocation(line: 2806, column: 25, scope: !4504)
!4510 = !DILocation(line: 2806, column: 31, scope: !4504)
!4511 = !DILocation(line: 2806, column: 41, scope: !4504)
!4512 = !DILocation(line: 2806, column: 4, scope: !4504)
!4513 = !DILocation(line: 2807, column: 25, scope: !4504)
!4514 = !DILocation(line: 2807, column: 31, scope: !4504)
!4515 = !DILocation(line: 2807, column: 41, scope: !4504)
!4516 = !DILocation(line: 2807, column: 4, scope: !4504)
!4517 = !DILocation(line: 2809, column: 9, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 2809, column: 8)
!4519 = !DILocation(line: 2809, column: 15, scope: !4518)
!4520 = !DILocation(line: 2809, column: 8, scope: !4504)
!4521 = !DILocation(line: 2810, column: 40, scope: !4518)
!4522 = !DILocation(line: 2810, column: 46, scope: !4518)
!4523 = !DILocation(line: 2810, column: 56, scope: !4518)
!4524 = !DILocation(line: 2810, column: 23, scope: !4518)
!4525 = !DILocation(line: 2810, column: 6, scope: !4518)
!4526 = !DILocation(line: 2810, column: 16, scope: !4518)
!4527 = !DILocation(line: 2810, column: 21, scope: !4518)
!4528 = !DILocation(line: 2811, column: 2, scope: !4504)
!4529 = distinct !{!4529, !4499, !4530}
!4530 = !DILocation(line: 2811, column: 2, scope: !4500)
!4531 = !DILocation(line: 2812, column: 7, scope: !4453)
!4532 = !DILocation(line: 2821, column: 14, scope: !4453)
!4533 = !DILocation(line: 2821, column: 12, scope: !4453)
!4534 = !DILocation(line: 2823, column: 11, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 2823, column: 11)
!4536 = !DILocation(line: 2823, column: 16, scope: !4535)
!4537 = !DILocation(line: 2823, column: 19, scope: !4535)
!4538 = !DILocation(line: 2823, column: 11, scope: !4453)
!4539 = !DILocation(line: 2824, column: 18, scope: !4535)
!4540 = !DILocation(line: 2824, column: 24, scope: !4535)
!4541 = !DILocation(line: 2824, column: 2, scope: !4535)
!4542 = !DILocation(line: 2825, column: 5, scope: !4453)
!4543 = !DILocation(line: 2828, column: 7, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 2828, column: 7)
!4545 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 2827, column: 5)
!4546 = !DILocation(line: 2828, column: 7, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 2828, column: 7)
!4548 = !DILocalVariable(name: "reg_last", scope: !4549, file: !3, line: 2830, type: !1988)
!4549 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 2829, column: 2)
!4550 = !DILocation(line: 2830, column: 21, scope: !4549)
!4551 = !DILocation(line: 2830, column: 33, scope: !4549)
!4552 = !DILocation(line: 2830, column: 39, scope: !4549)
!4553 = !DILocation(line: 2830, column: 48, scope: !4549)
!4554 = !DILocation(line: 2831, column: 25, scope: !4549)
!4555 = !DILocation(line: 2831, column: 31, scope: !4549)
!4556 = !DILocation(line: 2831, column: 41, scope: !4549)
!4557 = !DILocation(line: 2831, column: 4, scope: !4549)
!4558 = !DILocation(line: 2832, column: 25, scope: !4549)
!4559 = !DILocation(line: 2832, column: 31, scope: !4549)
!4560 = !DILocation(line: 2832, column: 41, scope: !4549)
!4561 = !DILocation(line: 2832, column: 4, scope: !4549)
!4562 = !DILocation(line: 2833, column: 25, scope: !4549)
!4563 = !DILocation(line: 2833, column: 31, scope: !4549)
!4564 = !DILocation(line: 2833, column: 41, scope: !4549)
!4565 = !DILocation(line: 2833, column: 4, scope: !4549)
!4566 = !DILocation(line: 2835, column: 9, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 2835, column: 8)
!4568 = !DILocation(line: 2835, column: 15, scope: !4567)
!4569 = !DILocation(line: 2835, column: 8, scope: !4549)
!4570 = !DILocation(line: 2837, column: 42, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 2836, column: 6)
!4572 = !DILocation(line: 2837, column: 48, scope: !4571)
!4573 = !DILocation(line: 2837, column: 58, scope: !4571)
!4574 = !DILocation(line: 2837, column: 25, scope: !4571)
!4575 = !DILocation(line: 2837, column: 8, scope: !4571)
!4576 = !DILocation(line: 2837, column: 18, scope: !4571)
!4577 = !DILocation(line: 2837, column: 23, scope: !4571)
!4578 = !DILocation(line: 2838, column: 8, scope: !4571)
!4579 = !DILocation(line: 2838, column: 18, scope: !4571)
!4580 = !DILocation(line: 2838, column: 29, scope: !4571)
!4581 = !DILocation(line: 2839, column: 6, scope: !4571)
!4582 = !DILocation(line: 2840, column: 2, scope: !4549)
!4583 = distinct !{!4583, !4543, !4584}
!4584 = !DILocation(line: 2840, column: 2, scope: !4544)
!4585 = !DILocation(line: 2842, column: 14, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 2842, column: 7)
!4587 = !DILocation(line: 2842, column: 12, scope: !4586)
!4588 = !DILocation(line: 2842, column: 19, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 2842, column: 7)
!4590 = !DILocation(line: 2842, column: 21, scope: !4589)
!4591 = !DILocation(line: 2842, column: 7, scope: !4586)
!4592 = !DILocation(line: 2843, column: 6, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2843, column: 6)
!4594 = !DILocation(line: 2843, column: 6, scope: !4589)
!4595 = !DILocalVariable(name: "reg_last", scope: !4596, file: !3, line: 2845, type: !1988)
!4596 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 2844, column: 4)
!4597 = !DILocation(line: 2845, column: 23, scope: !4596)
!4598 = !DILocation(line: 2845, column: 35, scope: !4596)
!4599 = !DILocation(line: 2845, column: 41, scope: !4596)
!4600 = !DILocation(line: 2845, column: 50, scope: !4596)
!4601 = !DILocation(line: 2846, column: 27, scope: !4596)
!4602 = !DILocation(line: 2846, column: 33, scope: !4596)
!4603 = !DILocation(line: 2846, column: 43, scope: !4596)
!4604 = !DILocation(line: 2846, column: 6, scope: !4596)
!4605 = !DILocation(line: 2847, column: 27, scope: !4596)
!4606 = !DILocation(line: 2847, column: 33, scope: !4596)
!4607 = !DILocation(line: 2847, column: 43, scope: !4596)
!4608 = !DILocation(line: 2847, column: 6, scope: !4596)
!4609 = !DILocation(line: 2849, column: 27, scope: !4596)
!4610 = !DILocation(line: 2849, column: 33, scope: !4596)
!4611 = !DILocation(line: 2849, column: 43, scope: !4596)
!4612 = !DILocation(line: 2849, column: 6, scope: !4596)
!4613 = !DILocation(line: 2851, column: 11, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 2851, column: 10)
!4615 = !DILocation(line: 2851, column: 17, scope: !4614)
!4616 = !DILocation(line: 2851, column: 10, scope: !4596)
!4617 = !DILocation(line: 2853, column: 37, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 2852, column: 8)
!4619 = !DILocation(line: 2853, column: 43, scope: !4618)
!4620 = !DILocation(line: 2853, column: 53, scope: !4618)
!4621 = !DILocation(line: 2853, column: 20, scope: !4618)
!4622 = !DILocation(line: 2853, column: 3, scope: !4618)
!4623 = !DILocation(line: 2853, column: 13, scope: !4618)
!4624 = !DILocation(line: 2853, column: 18, scope: !4618)
!4625 = !DILocation(line: 2854, column: 3, scope: !4618)
!4626 = !DILocation(line: 2854, column: 13, scope: !4618)
!4627 = !DILocation(line: 2854, column: 24, scope: !4618)
!4628 = !DILocation(line: 2855, column: 8, scope: !4618)
!4629 = !DILocation(line: 2856, column: 4, scope: !4596)
!4630 = !DILocation(line: 2842, column: 47, scope: !4589)
!4631 = !DILocation(line: 2842, column: 7, scope: !4589)
!4632 = distinct !{!4632, !4591, !4633}
!4633 = !DILocation(line: 2856, column: 4, scope: !4586)
!4634 = !DILocation(line: 2860, column: 34, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 2860, column: 11)
!4636 = !DILocation(line: 2860, column: 11, scope: !4635)
!4637 = !DILocation(line: 2860, column: 11, scope: !4545)
!4638 = !DILocation(line: 2862, column: 4, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 2862, column: 4)
!4640 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 2861, column: 2)
!4641 = !DILocation(line: 2862, column: 4, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 2862, column: 4)
!4643 = !DILocalVariable(name: "reg_last", scope: !4644, file: !3, line: 2864, type: !1988)
!4644 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 2863, column: 6)
!4645 = !DILocation(line: 2864, column: 25, scope: !4644)
!4646 = !DILocation(line: 2864, column: 37, scope: !4644)
!4647 = !DILocation(line: 2864, column: 43, scope: !4644)
!4648 = !DILocation(line: 2864, column: 52, scope: !4644)
!4649 = !DILocation(line: 2865, column: 29, scope: !4644)
!4650 = !DILocation(line: 2865, column: 35, scope: !4644)
!4651 = !DILocation(line: 2865, column: 45, scope: !4644)
!4652 = !DILocation(line: 2865, column: 8, scope: !4644)
!4653 = !DILocation(line: 2866, column: 29, scope: !4644)
!4654 = !DILocation(line: 2866, column: 35, scope: !4644)
!4655 = !DILocation(line: 2866, column: 45, scope: !4644)
!4656 = !DILocation(line: 2866, column: 8, scope: !4644)
!4657 = !DILocation(line: 2868, column: 29, scope: !4644)
!4658 = !DILocation(line: 2868, column: 35, scope: !4644)
!4659 = !DILocation(line: 2868, column: 45, scope: !4644)
!4660 = !DILocation(line: 2868, column: 8, scope: !4644)
!4661 = !DILocation(line: 2870, column: 13, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 2870, column: 12)
!4663 = !DILocation(line: 2870, column: 19, scope: !4662)
!4664 = !DILocation(line: 2870, column: 12, scope: !4644)
!4665 = !DILocation(line: 2873, column: 26, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 2871, column: 3)
!4667 = !DILocation(line: 2873, column: 32, scope: !4666)
!4668 = !DILocation(line: 2873, column: 42, scope: !4666)
!4669 = !DILocation(line: 2873, column: 9, scope: !4666)
!4670 = !DILocation(line: 2872, column: 5, scope: !4666)
!4671 = !DILocation(line: 2872, column: 15, scope: !4666)
!4672 = !DILocation(line: 2873, column: 7, scope: !4666)
!4673 = !DILocation(line: 2874, column: 5, scope: !4666)
!4674 = !DILocation(line: 2874, column: 15, scope: !4666)
!4675 = !DILocation(line: 2874, column: 30, scope: !4666)
!4676 = !DILocation(line: 2875, column: 3, scope: !4666)
!4677 = !DILocation(line: 2876, column: 6, scope: !4644)
!4678 = distinct !{!4678, !4638, !4679}
!4679 = !DILocation(line: 2876, column: 6, scope: !4639)
!4680 = !DILocation(line: 2877, column: 4, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 2877, column: 4)
!4682 = !DILocation(line: 2877, column: 4, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 2877, column: 4)
!4684 = !DILocalVariable(name: "reg_last", scope: !4685, file: !3, line: 2879, type: !1988)
!4685 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 2878, column: 6)
!4686 = !DILocation(line: 2879, column: 25, scope: !4685)
!4687 = !DILocation(line: 2879, column: 37, scope: !4685)
!4688 = !DILocation(line: 2879, column: 43, scope: !4685)
!4689 = !DILocation(line: 2879, column: 52, scope: !4685)
!4690 = !DILocation(line: 2880, column: 29, scope: !4685)
!4691 = !DILocation(line: 2880, column: 35, scope: !4685)
!4692 = !DILocation(line: 2880, column: 45, scope: !4685)
!4693 = !DILocation(line: 2880, column: 8, scope: !4685)
!4694 = !DILocation(line: 2881, column: 29, scope: !4685)
!4695 = !DILocation(line: 2881, column: 35, scope: !4685)
!4696 = !DILocation(line: 2881, column: 45, scope: !4685)
!4697 = !DILocation(line: 2881, column: 8, scope: !4685)
!4698 = !DILocation(line: 2883, column: 29, scope: !4685)
!4699 = !DILocation(line: 2883, column: 35, scope: !4685)
!4700 = !DILocation(line: 2883, column: 45, scope: !4685)
!4701 = !DILocation(line: 2883, column: 8, scope: !4685)
!4702 = !DILocation(line: 2884, column: 29, scope: !4685)
!4703 = !DILocation(line: 2884, column: 35, scope: !4685)
!4704 = !DILocation(line: 2884, column: 45, scope: !4685)
!4705 = !DILocation(line: 2884, column: 8, scope: !4685)
!4706 = !DILocation(line: 2886, column: 13, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 2886, column: 12)
!4708 = !DILocation(line: 2886, column: 19, scope: !4707)
!4709 = !DILocation(line: 2886, column: 12, scope: !4685)
!4710 = !DILocation(line: 2888, column: 39, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 2887, column: 3)
!4712 = !DILocation(line: 2888, column: 45, scope: !4711)
!4713 = !DILocation(line: 2888, column: 55, scope: !4711)
!4714 = !DILocation(line: 2888, column: 22, scope: !4711)
!4715 = !DILocation(line: 2888, column: 5, scope: !4711)
!4716 = !DILocation(line: 2888, column: 15, scope: !4711)
!4717 = !DILocation(line: 2888, column: 20, scope: !4711)
!4718 = !DILocation(line: 2889, column: 5, scope: !4711)
!4719 = !DILocation(line: 2890, column: 3, scope: !4711)
!4720 = !DILocation(line: 2891, column: 6, scope: !4685)
!4721 = distinct !{!4721, !4680, !4722}
!4722 = !DILocation(line: 2891, column: 6, scope: !4681)
!4723 = !DILocation(line: 2892, column: 2, scope: !4640)
!4724 = !DILocation(line: 2895, column: 4, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 2895, column: 4)
!4726 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 2894, column: 2)
!4727 = !DILocation(line: 2895, column: 4, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 2895, column: 4)
!4729 = !DILocalVariable(name: "reg_last", scope: !4730, file: !3, line: 2897, type: !1988)
!4730 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 2896, column: 6)
!4731 = !DILocation(line: 2897, column: 25, scope: !4730)
!4732 = !DILocation(line: 2897, column: 37, scope: !4730)
!4733 = !DILocation(line: 2897, column: 43, scope: !4730)
!4734 = !DILocation(line: 2897, column: 52, scope: !4730)
!4735 = !DILocation(line: 2898, column: 12, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 2898, column: 12)
!4737 = !DILocation(line: 2898, column: 22, scope: !4736)
!4738 = !DILocation(line: 2898, column: 36, scope: !4736)
!4739 = !DILocation(line: 2898, column: 34, scope: !4736)
!4740 = !DILocation(line: 2899, column: 5, scope: !4736)
!4741 = !DILocation(line: 2899, column: 8, scope: !4736)
!4742 = !DILocation(line: 2899, column: 18, scope: !4736)
!4743 = !DILocation(line: 2899, column: 36, scope: !4736)
!4744 = !DILocation(line: 2899, column: 34, scope: !4736)
!4745 = !DILocation(line: 2898, column: 12, scope: !4730)
!4746 = !DILocation(line: 2901, column: 35, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 2900, column: 3)
!4748 = !DILocation(line: 2901, column: 41, scope: !4747)
!4749 = !DILocation(line: 2901, column: 48, scope: !4747)
!4750 = !DILocation(line: 2901, column: 58, scope: !4747)
!4751 = !DILocation(line: 2901, column: 5, scope: !4747)
!4752 = !DILocation(line: 2903, column: 35, scope: !4747)
!4753 = !DILocation(line: 2903, column: 41, scope: !4747)
!4754 = !DILocation(line: 2904, column: 8, scope: !4747)
!4755 = !DILocation(line: 2904, column: 18, scope: !4747)
!4756 = !DILocation(line: 2903, column: 5, scope: !4747)
!4757 = !DILocation(line: 2906, column: 35, scope: !4747)
!4758 = !DILocation(line: 2906, column: 41, scope: !4747)
!4759 = !DILocation(line: 2906, column: 48, scope: !4747)
!4760 = !DILocation(line: 2906, column: 58, scope: !4747)
!4761 = !DILocation(line: 2906, column: 5, scope: !4747)
!4762 = !DILocation(line: 2909, column: 8, scope: !4747)
!4763 = !DILocation(line: 2909, column: 14, scope: !4747)
!4764 = !DILocation(line: 2909, column: 21, scope: !4747)
!4765 = !DILocation(line: 2909, column: 31, scope: !4747)
!4766 = !DILocation(line: 2908, column: 5, scope: !4747)
!4767 = !DILocation(line: 2911, column: 10, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 2911, column: 9)
!4769 = !DILocation(line: 2911, column: 16, scope: !4768)
!4770 = !DILocation(line: 2911, column: 9, scope: !4747)
!4771 = !DILocation(line: 2913, column: 43, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 2912, column: 7)
!4773 = !DILocation(line: 2913, column: 49, scope: !4772)
!4774 = !DILocation(line: 2913, column: 59, scope: !4772)
!4775 = !DILocation(line: 2913, column: 26, scope: !4772)
!4776 = !DILocation(line: 2913, column: 9, scope: !4772)
!4777 = !DILocation(line: 2913, column: 19, scope: !4772)
!4778 = !DILocation(line: 2913, column: 24, scope: !4772)
!4779 = !DILocation(line: 2914, column: 9, scope: !4772)
!4780 = !DILocation(line: 2914, column: 19, scope: !4772)
!4781 = !DILocation(line: 2914, column: 35, scope: !4772)
!4782 = !DILocation(line: 2915, column: 9, scope: !4772)
!4783 = !DILocation(line: 2915, column: 19, scope: !4772)
!4784 = !DILocation(line: 2915, column: 31, scope: !4772)
!4785 = !DILocation(line: 2916, column: 7, scope: !4772)
!4786 = !DILocation(line: 2917, column: 3, scope: !4747)
!4787 = !DILocation(line: 2920, column: 26, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 2919, column: 3)
!4789 = !DILocation(line: 2920, column: 32, scope: !4788)
!4790 = !DILocation(line: 2920, column: 42, scope: !4788)
!4791 = !DILocation(line: 2920, column: 5, scope: !4788)
!4792 = !DILocation(line: 2921, column: 26, scope: !4788)
!4793 = !DILocation(line: 2921, column: 32, scope: !4788)
!4794 = !DILocation(line: 2921, column: 42, scope: !4788)
!4795 = !DILocation(line: 2921, column: 5, scope: !4788)
!4796 = !DILocation(line: 2923, column: 26, scope: !4788)
!4797 = !DILocation(line: 2923, column: 32, scope: !4788)
!4798 = !DILocation(line: 2923, column: 42, scope: !4788)
!4799 = !DILocation(line: 2923, column: 5, scope: !4788)
!4800 = !DILocation(line: 2926, column: 13, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 2926, column: 12)
!4802 = !DILocation(line: 2926, column: 19, scope: !4801)
!4803 = !DILocation(line: 2926, column: 12, scope: !4730)
!4804 = !DILocation(line: 2928, column: 5, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 2927, column: 3)
!4806 = !DILocation(line: 2928, column: 15, scope: !4805)
!4807 = !DILocation(line: 2928, column: 30, scope: !4805)
!4808 = !DILocation(line: 2930, column: 26, scope: !4805)
!4809 = !DILocation(line: 2930, column: 32, scope: !4805)
!4810 = !DILocation(line: 2930, column: 42, scope: !4805)
!4811 = !DILocation(line: 2930, column: 9, scope: !4805)
!4812 = !DILocation(line: 2929, column: 5, scope: !4805)
!4813 = !DILocation(line: 2929, column: 15, scope: !4805)
!4814 = !DILocation(line: 2930, column: 7, scope: !4805)
!4815 = !DILocation(line: 2931, column: 3, scope: !4805)
!4816 = !DILocation(line: 2932, column: 6, scope: !4730)
!4817 = distinct !{!4817, !4724, !4818}
!4818 = !DILocation(line: 2932, column: 6, scope: !4725)
!4819 = !DILocation(line: 2933, column: 4, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 2933, column: 4)
!4821 = !DILocation(line: 2933, column: 4, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 2933, column: 4)
!4823 = !DILocalVariable(name: "reg_last", scope: !4824, file: !3, line: 2935, type: !1988)
!4824 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 2934, column: 6)
!4825 = !DILocation(line: 2935, column: 25, scope: !4824)
!4826 = !DILocation(line: 2935, column: 37, scope: !4824)
!4827 = !DILocation(line: 2935, column: 43, scope: !4824)
!4828 = !DILocation(line: 2935, column: 52, scope: !4824)
!4829 = !DILocation(line: 2937, column: 38, scope: !4824)
!4830 = !DILocation(line: 2937, column: 44, scope: !4824)
!4831 = !DILocation(line: 2937, column: 51, scope: !4824)
!4832 = !DILocation(line: 2937, column: 61, scope: !4824)
!4833 = !DILocation(line: 2937, column: 8, scope: !4824)
!4834 = !DILocation(line: 2939, column: 38, scope: !4824)
!4835 = !DILocation(line: 2939, column: 44, scope: !4824)
!4836 = !DILocation(line: 2940, column: 11, scope: !4824)
!4837 = !DILocation(line: 2940, column: 21, scope: !4824)
!4838 = !DILocation(line: 2939, column: 8, scope: !4824)
!4839 = !DILocation(line: 2942, column: 38, scope: !4824)
!4840 = !DILocation(line: 2942, column: 44, scope: !4824)
!4841 = !DILocation(line: 2942, column: 51, scope: !4824)
!4842 = !DILocation(line: 2942, column: 61, scope: !4824)
!4843 = !DILocation(line: 2942, column: 8, scope: !4824)
!4844 = !DILocation(line: 2944, column: 38, scope: !4824)
!4845 = !DILocation(line: 2944, column: 44, scope: !4824)
!4846 = !DILocation(line: 2944, column: 51, scope: !4824)
!4847 = !DILocation(line: 2944, column: 61, scope: !4824)
!4848 = !DILocation(line: 2944, column: 8, scope: !4824)
!4849 = !DILocation(line: 2947, column: 13, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 2947, column: 12)
!4851 = !DILocation(line: 2947, column: 19, scope: !4850)
!4852 = !DILocation(line: 2947, column: 12, scope: !4824)
!4853 = !DILocation(line: 2949, column: 39, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2948, column: 3)
!4855 = !DILocation(line: 2949, column: 45, scope: !4854)
!4856 = !DILocation(line: 2949, column: 55, scope: !4854)
!4857 = !DILocation(line: 2949, column: 22, scope: !4854)
!4858 = !DILocation(line: 2949, column: 5, scope: !4854)
!4859 = !DILocation(line: 2949, column: 15, scope: !4854)
!4860 = !DILocation(line: 2949, column: 20, scope: !4854)
!4861 = !DILocation(line: 2950, column: 5, scope: !4854)
!4862 = !DILocation(line: 2950, column: 15, scope: !4854)
!4863 = !DILocation(line: 2950, column: 27, scope: !4854)
!4864 = !DILocation(line: 2951, column: 5, scope: !4854)
!4865 = !DILocation(line: 2951, column: 15, scope: !4854)
!4866 = !DILocation(line: 2951, column: 31, scope: !4854)
!4867 = !DILocation(line: 2952, column: 5, scope: !4854)
!4868 = !DILocation(line: 2953, column: 3, scope: !4854)
!4869 = !DILocation(line: 2954, column: 6, scope: !4824)
!4870 = distinct !{!4870, !4819, !4871}
!4871 = !DILocation(line: 2954, column: 6, scope: !4820)
!4872 = !DILocation(line: 2958, column: 10, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2958, column: 3)
!4874 = !DILocation(line: 2958, column: 8, scope: !4873)
!4875 = !DILocation(line: 2958, column: 15, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 2958, column: 3)
!4877 = !DILocation(line: 2958, column: 17, scope: !4876)
!4878 = !DILocation(line: 2958, column: 3, scope: !4873)
!4879 = !DILocation(line: 2959, column: 9, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 2959, column: 9)
!4881 = !DILocation(line: 2959, column: 9, scope: !4876)
!4882 = !DILocalVariable(name: "reg_last", scope: !4883, file: !3, line: 2961, type: !1988)
!4883 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 2960, column: 7)
!4884 = !DILocation(line: 2961, column: 19, scope: !4883)
!4885 = !DILocation(line: 2961, column: 31, scope: !4883)
!4886 = !DILocation(line: 2961, column: 37, scope: !4883)
!4887 = !DILocation(line: 2961, column: 46, scope: !4883)
!4888 = !DILocation(line: 2962, column: 23, scope: !4883)
!4889 = !DILocation(line: 2962, column: 29, scope: !4883)
!4890 = !DILocation(line: 2962, column: 39, scope: !4883)
!4891 = !DILocation(line: 2962, column: 2, scope: !4883)
!4892 = !DILocation(line: 2963, column: 23, scope: !4883)
!4893 = !DILocation(line: 2963, column: 29, scope: !4883)
!4894 = !DILocation(line: 2963, column: 39, scope: !4883)
!4895 = !DILocation(line: 2963, column: 2, scope: !4883)
!4896 = !DILocation(line: 2964, column: 23, scope: !4883)
!4897 = !DILocation(line: 2964, column: 29, scope: !4883)
!4898 = !DILocation(line: 2964, column: 39, scope: !4883)
!4899 = !DILocation(line: 2964, column: 2, scope: !4883)
!4900 = !DILocation(line: 2966, column: 7, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 2966, column: 6)
!4902 = !DILocation(line: 2966, column: 13, scope: !4901)
!4903 = !DILocation(line: 2966, column: 6, scope: !4883)
!4904 = !DILocation(line: 2968, column: 25, scope: !4901)
!4905 = !DILocation(line: 2968, column: 31, scope: !4901)
!4906 = !DILocation(line: 2968, column: 41, scope: !4901)
!4907 = !DILocation(line: 2968, column: 8, scope: !4901)
!4908 = !DILocation(line: 2967, column: 4, scope: !4901)
!4909 = !DILocation(line: 2967, column: 14, scope: !4901)
!4910 = !DILocation(line: 2968, column: 6, scope: !4901)
!4911 = !DILocation(line: 2969, column: 7, scope: !4883)
!4912 = !DILocation(line: 2958, column: 43, scope: !4876)
!4913 = !DILocation(line: 2958, column: 3, scope: !4876)
!4914 = distinct !{!4914, !4878, !4915}
!4915 = !DILocation(line: 2969, column: 7, scope: !4873)
!4916 = !DILocation(line: 2971, column: 8, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2971, column: 7)
!4918 = !DILocation(line: 2971, column: 14, scope: !4917)
!4919 = !DILocation(line: 2971, column: 7, scope: !4097)
!4920 = !DILocation(line: 2973, column: 7, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2972, column: 5)
!4922 = !DILocation(line: 2974, column: 7, scope: !4921)
!4923 = !DILocation(line: 2975, column: 7, scope: !4921)
!4924 = !DILocation(line: 2976, column: 14, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 2976, column: 7)
!4926 = !DILocation(line: 2976, column: 12, scope: !4925)
!4927 = !DILocation(line: 2976, column: 19, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 2976, column: 7)
!4929 = !DILocation(line: 2976, column: 21, scope: !4928)
!4930 = !DILocation(line: 2976, column: 7, scope: !4925)
!4931 = !DILocation(line: 2977, column: 6, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2977, column: 6)
!4933 = !DILocation(line: 2978, column: 6, scope: !4932)
!4934 = !DILocation(line: 2978, column: 9, scope: !4932)
!4935 = !DILocation(line: 2977, column: 6, scope: !4928)
!4936 = !DILocation(line: 2979, column: 4, scope: !4932)
!4937 = !DILocation(line: 2976, column: 47, scope: !4928)
!4938 = !DILocation(line: 2976, column: 7, scope: !4928)
!4939 = distinct !{!4939, !4930, !4940}
!4940 = !DILocation(line: 2979, column: 4, scope: !4925)
!4941 = !DILocation(line: 2982, column: 40, scope: !4921)
!4942 = !DILocation(line: 2982, column: 7, scope: !4921)
!4943 = !DILocation(line: 2982, column: 13, scope: !4921)
!4944 = !DILocation(line: 2982, column: 38, scope: !4921)
!4945 = !DILocation(line: 2983, column: 5, scope: !4921)
!4946 = !DILocation(line: 2985, column: 3, scope: !4097)
!4947 = !DILocation(line: 2986, column: 3, scope: !4097)
!4948 = !DILocation(line: 2987, column: 3, scope: !4097)
!4949 = !DILocation(line: 2988, column: 3, scope: !4097)
!4950 = !DILocation(line: 2989, column: 3, scope: !4097)
!4951 = !DILocation(line: 2992, column: 7, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2992, column: 7)
!4953 = !DILocation(line: 2992, column: 7, scope: !4097)
!4954 = !DILocation(line: 2996, column: 34, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 2996, column: 11)
!4956 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 2993, column: 5)
!4957 = !DILocation(line: 2996, column: 11, scope: !4955)
!4958 = !DILocation(line: 2996, column: 11, scope: !4956)
!4959 = !DILocation(line: 2998, column: 4, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 2998, column: 4)
!4961 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2997, column: 2)
!4962 = !DILocation(line: 2998, column: 4, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 2998, column: 4)
!4964 = !DILocalVariable(name: "reg_last", scope: !4965, file: !3, line: 3000, type: !1988)
!4965 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 2999, column: 6)
!4966 = !DILocation(line: 3000, column: 25, scope: !4965)
!4967 = !DILocation(line: 3000, column: 37, scope: !4965)
!4968 = !DILocation(line: 3000, column: 43, scope: !4965)
!4969 = !DILocation(line: 3000, column: 52, scope: !4965)
!4970 = !DILocation(line: 3001, column: 29, scope: !4965)
!4971 = !DILocation(line: 3001, column: 35, scope: !4965)
!4972 = !DILocation(line: 3001, column: 45, scope: !4965)
!4973 = !DILocation(line: 3001, column: 8, scope: !4965)
!4974 = !DILocation(line: 3002, column: 29, scope: !4965)
!4975 = !DILocation(line: 3002, column: 35, scope: !4965)
!4976 = !DILocation(line: 3002, column: 45, scope: !4965)
!4977 = !DILocation(line: 3003, column: 8, scope: !4965)
!4978 = !DILocation(line: 3003, column: 28, scope: !4965)
!4979 = !DILocation(line: 3002, column: 8, scope: !4965)
!4980 = !DILocation(line: 3005, column: 29, scope: !4965)
!4981 = !DILocation(line: 3005, column: 35, scope: !4965)
!4982 = !DILocation(line: 3005, column: 45, scope: !4965)
!4983 = !DILocation(line: 3005, column: 8, scope: !4965)
!4984 = !DILocation(line: 3007, column: 29, scope: !4965)
!4985 = !DILocation(line: 3007, column: 35, scope: !4965)
!4986 = !DILocation(line: 3007, column: 45, scope: !4965)
!4987 = !DILocation(line: 3008, column: 8, scope: !4965)
!4988 = !DILocation(line: 3008, column: 28, scope: !4965)
!4989 = !DILocation(line: 3007, column: 8, scope: !4965)
!4990 = !DILocation(line: 3010, column: 6, scope: !4965)
!4991 = distinct !{!4991, !4959, !4992}
!4992 = !DILocation(line: 3010, column: 6, scope: !4960)
!4993 = !DILocation(line: 3011, column: 2, scope: !4961)
!4994 = !DILocation(line: 3014, column: 4, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 3014, column: 4)
!4996 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 3013, column: 2)
!4997 = !DILocation(line: 3014, column: 4, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 3014, column: 4)
!4999 = !DILocalVariable(name: "reg_last", scope: !5000, file: !3, line: 3016, type: !1988)
!5000 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 3015, column: 6)
!5001 = !DILocation(line: 3016, column: 25, scope: !5000)
!5002 = !DILocation(line: 3016, column: 37, scope: !5000)
!5003 = !DILocation(line: 3016, column: 43, scope: !5000)
!5004 = !DILocation(line: 3016, column: 52, scope: !5000)
!5005 = !DILocation(line: 3017, column: 38, scope: !5000)
!5006 = !DILocation(line: 3017, column: 44, scope: !5000)
!5007 = !DILocation(line: 3017, column: 51, scope: !5000)
!5008 = !DILocation(line: 3017, column: 61, scope: !5000)
!5009 = !DILocation(line: 3017, column: 8, scope: !5000)
!5010 = !DILocation(line: 3019, column: 38, scope: !5000)
!5011 = !DILocation(line: 3019, column: 44, scope: !5000)
!5012 = !DILocation(line: 3019, column: 51, scope: !5000)
!5013 = !DILocation(line: 3019, column: 61, scope: !5000)
!5014 = !DILocation(line: 3020, column: 10, scope: !5000)
!5015 = !DILocation(line: 3020, column: 30, scope: !5000)
!5016 = !DILocation(line: 3019, column: 8, scope: !5000)
!5017 = !DILocation(line: 3022, column: 38, scope: !5000)
!5018 = !DILocation(line: 3022, column: 44, scope: !5000)
!5019 = !DILocation(line: 3023, column: 11, scope: !5000)
!5020 = !DILocation(line: 3023, column: 21, scope: !5000)
!5021 = !DILocation(line: 3022, column: 8, scope: !5000)
!5022 = !DILocation(line: 3025, column: 38, scope: !5000)
!5023 = !DILocation(line: 3025, column: 44, scope: !5000)
!5024 = !DILocation(line: 3025, column: 51, scope: !5000)
!5025 = !DILocation(line: 3025, column: 61, scope: !5000)
!5026 = !DILocation(line: 3026, column: 10, scope: !5000)
!5027 = !DILocation(line: 3026, column: 30, scope: !5000)
!5028 = !DILocation(line: 3025, column: 8, scope: !5000)
!5029 = !DILocation(line: 3029, column: 20, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 3029, column: 19)
!5031 = !DILocation(line: 3029, column: 26, scope: !5030)
!5032 = !DILocation(line: 3029, column: 19, scope: !5000)
!5033 = !DILocation(line: 3031, column: 19, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 3030, column: 17)
!5035 = !DILocation(line: 3031, column: 29, scope: !5034)
!5036 = !DILocation(line: 3031, column: 41, scope: !5034)
!5037 = !DILocation(line: 3032, column: 19, scope: !5034)
!5038 = !DILocation(line: 3032, column: 29, scope: !5034)
!5039 = !DILocation(line: 3032, column: 45, scope: !5034)
!5040 = !DILocation(line: 3033, column: 17, scope: !5034)
!5041 = !DILocation(line: 3034, column: 6, scope: !5000)
!5042 = distinct !{!5042, !4994, !5043}
!5043 = !DILocation(line: 3034, column: 6, scope: !4995)
!5044 = !DILocation(line: 3037, column: 12, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 3037, column: 11)
!5046 = !DILocation(line: 3037, column: 18, scope: !5045)
!5047 = !DILocation(line: 3037, column: 11, scope: !4956)
!5048 = !DILocation(line: 3038, column: 16, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 3038, column: 9)
!5050 = !DILocation(line: 3038, column: 14, scope: !5049)
!5051 = !DILocation(line: 3038, column: 21, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 3038, column: 9)
!5053 = !DILocation(line: 3038, column: 35, scope: !5052)
!5054 = !DILocation(line: 3038, column: 41, scope: !5052)
!5055 = !DILocation(line: 3038, column: 23, scope: !5052)
!5056 = !DILocation(line: 3038, column: 9, scope: !5049)
!5057 = !DILocalVariable(name: "reg_last", scope: !5058, file: !3, line: 3040, type: !1988)
!5058 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 3039, column: 11)
!5059 = !DILocation(line: 3040, column: 30, scope: !5058)
!5060 = !DILocation(line: 3040, column: 42, scope: !5058)
!5061 = !DILocation(line: 3040, column: 48, scope: !5058)
!5062 = !DILocation(line: 3040, column: 57, scope: !5058)
!5063 = !DILocation(line: 3041, column: 47, scope: !5058)
!5064 = !DILocation(line: 3041, column: 53, scope: !5058)
!5065 = !DILocation(line: 3041, column: 63, scope: !5058)
!5066 = !DILocation(line: 3041, column: 30, scope: !5058)
!5067 = !DILocation(line: 3041, column: 13, scope: !5058)
!5068 = !DILocation(line: 3041, column: 23, scope: !5058)
!5069 = !DILocation(line: 3041, column: 28, scope: !5058)
!5070 = !DILocation(line: 3042, column: 13, scope: !5058)
!5071 = !DILocation(line: 3043, column: 11, scope: !5058)
!5072 = !DILocation(line: 3038, column: 51, scope: !5052)
!5073 = !DILocation(line: 3038, column: 9, scope: !5052)
!5074 = distinct !{!5074, !5056, !5075}
!5075 = !DILocation(line: 3043, column: 11, scope: !5049)
!5076 = !DILocation(line: 3046, column: 11, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 3046, column: 11)
!5078 = !DILocation(line: 3046, column: 25, scope: !5077)
!5079 = !DILocation(line: 3046, column: 30, scope: !5077)
!5080 = !DILocation(line: 3047, column: 30, scope: !5077)
!5081 = !DILocation(line: 3047, column: 64, scope: !5077)
!5082 = !DILocation(line: 3047, column: 33, scope: !5077)
!5083 = !DILocation(line: 3046, column: 11, scope: !4956)
!5084 = !DILocation(line: 3048, column: 23, scope: !5077)
!5085 = !DILocation(line: 3048, column: 29, scope: !5077)
!5086 = !DILocation(line: 3048, column: 2, scope: !5077)
!5087 = !DILocation(line: 3050, column: 12, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 3050, column: 11)
!5089 = !DILocation(line: 3050, column: 18, scope: !5088)
!5090 = !DILocation(line: 3050, column: 11, scope: !4956)
!5091 = !DILocation(line: 3051, column: 9, scope: !5088)
!5092 = !DILocation(line: 3052, column: 27, scope: !4956)
!5093 = !DILocation(line: 3053, column: 5, scope: !4956)
!5094 = !DILocation(line: 3064, column: 7, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 3064, column: 7)
!5096 = !DILocation(line: 3064, column: 13, scope: !5095)
!5097 = !DILocation(line: 3064, column: 7, scope: !4097)
!5098 = !DILocalVariable(name: "tmp", scope: !5099, file: !3, line: 3066, type: !839)
!5099 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 3065, column: 5)
!5100 = !DILocation(line: 3066, column: 11, scope: !5099)
!5101 = !DILocalVariable(name: "set", scope: !5099, file: !3, line: 3066, type: !839)
!5102 = !DILocation(line: 3066, column: 16, scope: !5099)
!5103 = !DILocation(line: 3066, column: 22, scope: !5099)
!5104 = !DILocalVariable(name: "src_regno", scope: !5099, file: !3, line: 3067, type: !810)
!5105 = !DILocation(line: 3067, column: 11, scope: !5099)
!5106 = !DILocalVariable(name: "dest_regno", scope: !5099, file: !3, line: 3067, type: !810)
!5107 = !DILocation(line: 3067, column: 22, scope: !5099)
!5108 = !DILocation(line: 3069, column: 11, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 3069, column: 11)
!5110 = !DILocation(line: 3069, column: 15, scope: !5109)
!5111 = !DILocation(line: 3069, column: 11, scope: !5099)
!5112 = !DILocation(line: 3071, column: 8, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 3071, column: 8)
!5114 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 3070, column: 2)
!5115 = !DILocation(line: 3071, column: 8, scope: !5114)
!5116 = !DILocation(line: 3090, column: 6, scope: !5113)
!5117 = !DILocation(line: 3092, column: 6, scope: !5113)
!5118 = !DILocation(line: 3095, column: 13, scope: !5099)
!5119 = !DILocation(line: 3095, column: 11, scope: !5099)
!5120 = !DILocation(line: 3096, column: 11, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 3096, column: 11)
!5122 = !DILocation(line: 3096, column: 26, scope: !5121)
!5123 = !DILocation(line: 3096, column: 11, scope: !5099)
!5124 = !DILocation(line: 3097, column: 8, scope: !5121)
!5125 = !DILocation(line: 3097, column: 6, scope: !5121)
!5126 = !DILocation(line: 3097, column: 2, scope: !5121)
!5127 = !DILocation(line: 3098, column: 11, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 3098, column: 11)
!5129 = !DILocation(line: 3098, column: 11, scope: !5099)
!5130 = !DILocation(line: 3099, column: 15, scope: !5128)
!5131 = !DILocation(line: 3099, column: 13, scope: !5128)
!5132 = !DILocation(line: 3099, column: 2, scope: !5128)
!5133 = !DILocation(line: 3101, column: 2, scope: !5128)
!5134 = !DILocation(line: 3103, column: 13, scope: !5099)
!5135 = !DILocation(line: 3103, column: 11, scope: !5099)
!5136 = !DILocation(line: 3104, column: 11, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 3104, column: 11)
!5138 = !DILocation(line: 3104, column: 26, scope: !5137)
!5139 = !DILocation(line: 3104, column: 11, scope: !5099)
!5140 = !DILocation(line: 3105, column: 8, scope: !5137)
!5141 = !DILocation(line: 3105, column: 6, scope: !5137)
!5142 = !DILocation(line: 3105, column: 2, scope: !5137)
!5143 = !DILocation(line: 3106, column: 12, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 3106, column: 11)
!5145 = !DILocation(line: 3106, column: 27, scope: !5144)
!5146 = !DILocation(line: 3107, column: 5, scope: !5144)
!5147 = !DILocation(line: 3107, column: 8, scope: !5144)
!5148 = !DILocation(line: 3107, column: 23, scope: !5144)
!5149 = !DILocation(line: 3108, column: 4, scope: !5144)
!5150 = !DILocation(line: 3108, column: 7, scope: !5144)
!5151 = !DILocation(line: 3109, column: 4, scope: !5144)
!5152 = !DILocation(line: 3109, column: 7, scope: !5144)
!5153 = !DILocation(line: 3109, column: 29, scope: !5144)
!5154 = !DILocation(line: 3110, column: 4, scope: !5144)
!5155 = !DILocation(line: 3110, column: 7, scope: !5144)
!5156 = !DILocation(line: 3110, column: 18, scope: !5144)
!5157 = !DILocation(line: 3106, column: 11, scope: !5099)
!5158 = !DILocation(line: 3111, column: 12, scope: !5144)
!5159 = !DILocation(line: 3111, column: 2, scope: !5144)
!5160 = !DILocation(line: 3112, column: 16, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 3112, column: 16)
!5162 = !DILocation(line: 3112, column: 16, scope: !5144)
!5163 = !DILocation(line: 3113, column: 14, scope: !5161)
!5164 = !DILocation(line: 3113, column: 12, scope: !5161)
!5165 = !DILocation(line: 3113, column: 2, scope: !5161)
!5166 = !DILocation(line: 3115, column: 2, scope: !5161)
!5167 = !DILocation(line: 3117, column: 11, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 3117, column: 11)
!5169 = !DILocation(line: 3117, column: 21, scope: !5168)
!5170 = !DILocation(line: 3118, column: 4, scope: !5168)
!5171 = !DILocation(line: 3118, column: 7, scope: !5168)
!5172 = !DILocation(line: 3118, column: 18, scope: !5168)
!5173 = !DILocation(line: 3117, column: 11, scope: !5099)
!5174 = !DILocation(line: 3120, column: 9, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 3120, column: 8)
!5176 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 3119, column: 2)
!5177 = !DILocation(line: 3120, column: 15, scope: !5175)
!5178 = !DILocation(line: 3121, column: 15, scope: !5175)
!5179 = !DILocation(line: 3121, column: 18, scope: !5175)
!5180 = !DILocation(line: 3121, column: 24, scope: !5175)
!5181 = !DILocation(line: 3121, column: 45, scope: !5175)
!5182 = !DILocation(line: 3120, column: 8, scope: !5176)
!5183 = !DILocation(line: 3122, column: 6, scope: !5175)
!5184 = !DILocation(line: 3122, column: 12, scope: !5175)
!5185 = !DILocation(line: 3122, column: 33, scope: !5175)
!5186 = !DILocation(line: 3124, column: 16, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 3124, column: 15)
!5188 = !DILocation(line: 3124, column: 31, scope: !5187)
!5189 = !DILocation(line: 3124, column: 34, scope: !5187)
!5190 = !DILocation(line: 3124, column: 15, scope: !5176)
!5191 = !DILocation(line: 3126, column: 15, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 3125, column: 13)
!5193 = !DILocation(line: 3126, column: 36, scope: !5192)
!5194 = !DILocation(line: 3127, column: 15, scope: !5192)
!5195 = !DILocation(line: 3127, column: 32, scope: !5192)
!5196 = !DILocation(line: 3128, column: 13, scope: !5192)
!5197 = !DILocation(line: 3129, column: 2, scope: !5176)
!5198 = !DILocation(line: 3131, column: 2, scope: !5168)
!5199 = !DILabel(scope: !5200, name: "end_call_group", file: !3, line: 3132)
!5200 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 3131, column: 2)
!5201 = !DILocation(line: 3132, column: 2, scope: !5200)
!5202 = !DILocation(line: 3133, column: 16, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 3133, column: 15)
!5204 = !DILocation(line: 3133, column: 22, scope: !5203)
!5205 = !DILocation(line: 3133, column: 15, scope: !5200)
!5206 = !DILocation(line: 3134, column: 13, scope: !5203)
!5207 = !DILocation(line: 3134, column: 19, scope: !5203)
!5208 = !DILocation(line: 3134, column: 40, scope: !5203)
!5209 = !DILocation(line: 3136, column: 5, scope: !5099)
!5210 = !DILabel(scope: !4097, name: "debug_dont_end_call_group", file: !3, line: 3138)
!5211 = !DILocation(line: 3138, column: 2, scope: !4097)
!5212 = !DILocation(line: 3139, column: 8, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 3139, column: 7)
!5214 = !DILocation(line: 3139, column: 28, scope: !5213)
!5215 = !DILocation(line: 3139, column: 34, scope: !5213)
!5216 = !DILocation(line: 3140, column: 7, scope: !5213)
!5217 = !DILocation(line: 3140, column: 55, scope: !5213)
!5218 = !DILocation(line: 3140, column: 11, scope: !5213)
!5219 = !DILocation(line: 3139, column: 7, scope: !4097)
!5220 = !DILocation(line: 3144, column: 11, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 3144, column: 11)
!5222 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 3143, column: 5)
!5223 = !DILocation(line: 3144, column: 11, scope: !5222)
!5224 = !DILocation(line: 3145, column: 29, scope: !5221)
!5225 = !DILocation(line: 3145, column: 9, scope: !5221)
!5226 = !DILocalVariable(name: "sd_it", scope: !5227, file: !3, line: 3148, type: !2167)
!5227 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 3147, column: 9)
!5228 = !DILocation(line: 3148, column: 27, scope: !5227)
!5229 = !DILocalVariable(name: "dep", scope: !5227, file: !3, line: 3149, type: !2231)
!5230 = !DILocation(line: 3149, column: 17, scope: !5227)
!5231 = !DILocation(line: 3151, column: 43, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 3151, column: 11)
!5233 = !DILocation(line: 3151, column: 24, scope: !5232)
!5234 = !DILocation(line: 3151, column: 16, scope: !5232)
!5235 = !DILocation(line: 3152, column: 16, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 3151, column: 11)
!5237 = !DILocation(line: 3151, column: 11, scope: !5232)
!5238 = !DILocation(line: 3153, column: 13, scope: !5236)
!5239 = !DILocation(line: 3151, column: 11, scope: !5236)
!5240 = distinct !{!5240, !5237, !5241}
!5241 = !DILocation(line: 3153, column: 43, scope: !5232)
!5242 = !DILocation(line: 3155, column: 5, scope: !5222)
!5243 = !DILocation(line: 3156, column: 1, scope: !4097)
!5244 = distinct !DISubprogram(name: "add_dependence_list_and_free", scope: !3, file: !3, line: 1405, type: !5245, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5245 = !DISubroutineType(types: !5246)
!5246 = !{null, !3819, !839, !5247, !810, !384}
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!5248 = !DILocalVariable(name: "deps", arg: 1, scope: !5244, file: !3, line: 1405, type: !3819)
!5249 = !DILocation(line: 1405, column: 44, scope: !5244)
!5250 = !DILocalVariable(name: "insn", arg: 2, scope: !5244, file: !3, line: 1405, type: !839)
!5251 = !DILocation(line: 1405, column: 54, scope: !5244)
!5252 = !DILocalVariable(name: "listp", arg: 3, scope: !5244, file: !3, line: 1405, type: !5247)
!5253 = !DILocation(line: 1405, column: 65, scope: !5244)
!5254 = !DILocalVariable(name: "uncond", arg: 4, scope: !5244, file: !3, line: 1406, type: !810)
!5255 = !DILocation(line: 1406, column: 35, scope: !5244)
!5256 = !DILocalVariable(name: "dep_type", arg: 5, scope: !5244, file: !3, line: 1406, type: !384)
!5257 = !DILocation(line: 1406, column: 57, scope: !5244)
!5258 = !DILocalVariable(name: "list", scope: !5244, file: !3, line: 1408, type: !839)
!5259 = !DILocation(line: 1408, column: 7, scope: !5244)
!5260 = !DILocalVariable(name: "next", scope: !5244, file: !3, line: 1408, type: !839)
!5261 = !DILocation(line: 1408, column: 13, scope: !5244)
!5262 = !DILocation(line: 1410, column: 7, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1410, column: 7)
!5264 = !DILocation(line: 1410, column: 13, scope: !5263)
!5265 = !DILocation(line: 1410, column: 7, scope: !5244)
!5266 = !DILocation(line: 1412, column: 28, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 1411, column: 5)
!5268 = !DILocation(line: 1412, column: 35, scope: !5267)
!5269 = !DILocation(line: 1412, column: 34, scope: !5267)
!5270 = !DILocation(line: 1412, column: 42, scope: !5267)
!5271 = !DILocation(line: 1412, column: 50, scope: !5267)
!5272 = !DILocation(line: 1412, column: 7, scope: !5267)
!5273 = !DILocation(line: 1413, column: 7, scope: !5267)
!5274 = !DILocation(line: 1416, column: 16, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1416, column: 3)
!5276 = !DILocation(line: 1416, column: 15, scope: !5275)
!5277 = !DILocation(line: 1416, column: 13, scope: !5275)
!5278 = !DILocation(line: 1416, column: 24, scope: !5275)
!5279 = !DILocation(line: 1416, column: 30, scope: !5275)
!5280 = !DILocation(line: 1416, column: 8, scope: !5275)
!5281 = !DILocation(line: 1416, column: 38, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 1416, column: 3)
!5283 = !DILocation(line: 1416, column: 3, scope: !5275)
!5284 = !DILocation(line: 1418, column: 14, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1417, column: 5)
!5286 = !DILocation(line: 1418, column: 12, scope: !5285)
!5287 = !DILocation(line: 1419, column: 11, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 1419, column: 11)
!5289 = !DILocation(line: 1419, column: 18, scope: !5288)
!5290 = !DILocation(line: 1419, column: 55, scope: !5288)
!5291 = !DILocation(line: 1419, column: 61, scope: !5288)
!5292 = !DILocation(line: 1419, column: 23, scope: !5288)
!5293 = !DILocation(line: 1419, column: 11, scope: !5285)
!5294 = !DILocation(line: 1420, column: 18, scope: !5288)
!5295 = !DILocation(line: 1420, column: 24, scope: !5288)
!5296 = !DILocation(line: 1420, column: 40, scope: !5288)
!5297 = !DILocation(line: 1420, column: 2, scope: !5288)
!5298 = !DILocation(line: 1421, column: 28, scope: !5285)
!5299 = !DILocation(line: 1421, column: 7, scope: !5285)
!5300 = !DILocation(line: 1422, column: 5, scope: !5285)
!5301 = !DILocation(line: 1416, column: 52, scope: !5282)
!5302 = !DILocation(line: 1416, column: 50, scope: !5282)
!5303 = !DILocation(line: 1416, column: 3, scope: !5282)
!5304 = distinct !{!5304, !5283, !5305}
!5305 = !DILocation(line: 1422, column: 5, scope: !5275)
!5306 = !DILocation(line: 1423, column: 1, scope: !5244)
!5307 = distinct !DISubprogram(name: "call_may_noreturn_p", scope: !3, file: !3, line: 3161, type: !5308, scopeLine: 3162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5308 = !DISubroutineType(types: !5309)
!5309 = !{!1065, !839}
!5310 = !DILocalVariable(name: "insn", arg: 1, scope: !5307, file: !3, line: 3161, type: !839)
!5311 = !DILocation(line: 3161, column: 26, scope: !5307)
!5312 = !DILocalVariable(name: "call", scope: !5307, file: !3, line: 3163, type: !839)
!5313 = !DILocation(line: 3163, column: 7, scope: !5307)
!5314 = !DILocation(line: 3166, column: 7, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 3166, column: 7)
!5316 = !DILocation(line: 3167, column: 7, scope: !5315)
!5317 = !DILocation(line: 3167, column: 11, scope: !5315)
!5318 = !DILocation(line: 3166, column: 7, scope: !5307)
!5319 = !DILocation(line: 3168, column: 5, scope: !5315)
!5320 = !DILocation(line: 3170, column: 10, scope: !5307)
!5321 = !DILocation(line: 3170, column: 8, scope: !5307)
!5322 = !DILocation(line: 3171, column: 7, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 3171, column: 7)
!5324 = !DILocation(line: 3171, column: 23, scope: !5323)
!5325 = !DILocation(line: 3171, column: 7, scope: !5307)
!5326 = !DILocation(line: 3172, column: 12, scope: !5323)
!5327 = !DILocation(line: 3172, column: 10, scope: !5323)
!5328 = !DILocation(line: 3172, column: 5, scope: !5323)
!5329 = !DILocation(line: 3173, column: 7, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 3173, column: 7)
!5331 = !DILocation(line: 3173, column: 23, scope: !5330)
!5332 = !DILocation(line: 3173, column: 7, scope: !5307)
!5333 = !DILocation(line: 3174, column: 12, scope: !5330)
!5334 = !DILocation(line: 3174, column: 10, scope: !5330)
!5335 = !DILocation(line: 3174, column: 5, scope: !5330)
!5336 = !DILocation(line: 3175, column: 7, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 3175, column: 7)
!5338 = !DILocation(line: 3175, column: 23, scope: !5337)
!5339 = !DILocation(line: 3176, column: 7, scope: !5337)
!5340 = !DILocation(line: 3176, column: 10, scope: !5337)
!5341 = !DILocation(line: 3177, column: 7, scope: !5337)
!5342 = !DILocation(line: 3177, column: 10, scope: !5337)
!5343 = !DILocation(line: 3177, column: 46, scope: !5337)
!5344 = !DILocation(line: 3175, column: 7, scope: !5307)
!5345 = !DILocalVariable(name: "symbol", scope: !5346, file: !3, line: 3179, type: !839)
!5346 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 3178, column: 5)
!5347 = !DILocation(line: 3179, column: 11, scope: !5346)
!5348 = !DILocation(line: 3179, column: 20, scope: !5346)
!5349 = !DILocation(line: 3180, column: 11, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 3180, column: 11)
!5351 = !DILocation(line: 3181, column: 4, scope: !5350)
!5352 = !DILocation(line: 3181, column: 7, scope: !5350)
!5353 = !DILocation(line: 3181, column: 44, scope: !5350)
!5354 = !DILocation(line: 3180, column: 11, scope: !5346)
!5355 = !DILocation(line: 3183, column: 8, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 3183, column: 8)
!5357 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 3182, column: 2)
!5358 = !DILocation(line: 3184, column: 8, scope: !5356)
!5359 = !DILocation(line: 3183, column: 8, scope: !5357)
!5360 = !DILocation(line: 3185, column: 14, scope: !5356)
!5361 = !DILocation(line: 3185, column: 6, scope: !5356)
!5362 = !DILocation(line: 3214, column: 3, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 3186, column: 8)
!5364 = !DILocation(line: 3216, column: 3, scope: !5363)
!5365 = !DILocation(line: 3217, column: 8, scope: !5363)
!5366 = !DILocation(line: 3218, column: 2, scope: !5357)
!5367 = !DILocation(line: 3219, column: 5, scope: !5346)
!5368 = !DILocation(line: 3222, column: 3, scope: !5307)
!5369 = !DILocation(line: 3223, column: 1, scope: !5307)
!5370 = distinct !DISubprogram(name: "fixup_sched_groups", scope: !3, file: !3, line: 1494, type: !2086, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5371 = !DILocalVariable(name: "insn", arg: 1, scope: !5370, file: !3, line: 1494, type: !839)
!5372 = !DILocation(line: 1494, column: 25, scope: !5370)
!5373 = !DILocalVariable(name: "sd_it", scope: !5370, file: !3, line: 1496, type: !2167)
!5374 = !DILocation(line: 1496, column: 19, scope: !5370)
!5375 = !DILocalVariable(name: "dep", scope: !5370, file: !3, line: 1497, type: !2231)
!5376 = !DILocation(line: 1497, column: 9, scope: !5370)
!5377 = !DILocalVariable(name: "prev_nonnote", scope: !5370, file: !3, line: 1498, type: !839)
!5378 = !DILocation(line: 1498, column: 7, scope: !5370)
!5379 = !DILocation(line: 1500, column: 3, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 1500, column: 3)
!5381 = !DILocation(line: 1500, column: 3, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 1500, column: 3)
!5383 = !DILocalVariable(name: "i", scope: !5384, file: !3, line: 1502, type: !839)
!5384 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 1501, column: 5)
!5385 = !DILocation(line: 1502, column: 11, scope: !5384)
!5386 = !DILocation(line: 1502, column: 15, scope: !5384)
!5387 = !DILocalVariable(name: "pro", scope: !5384, file: !3, line: 1503, type: !839)
!5388 = !DILocation(line: 1503, column: 11, scope: !5384)
!5389 = !DILocation(line: 1503, column: 17, scope: !5384)
!5390 = !DILocation(line: 1505, column: 7, scope: !5384)
!5391 = !DILocation(line: 1507, column: 27, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1506, column: 2)
!5393 = !DILocation(line: 1507, column: 8, scope: !5392)
!5394 = !DILocation(line: 1507, column: 6, scope: !5392)
!5395 = !DILocation(line: 1509, column: 8, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 1509, column: 8)
!5397 = !DILocation(line: 1509, column: 15, scope: !5396)
!5398 = !DILocation(line: 1509, column: 12, scope: !5396)
!5399 = !DILocation(line: 1509, column: 8, scope: !5392)
!5400 = !DILocation(line: 1510, column: 6, scope: !5396)
!5401 = !DILocation(line: 1511, column: 2, scope: !5392)
!5402 = !DILocation(line: 1511, column: 11, scope: !5384)
!5403 = !DILocation(line: 1511, column: 29, scope: !5384)
!5404 = !DILocation(line: 1511, column: 32, scope: !5384)
!5405 = distinct !{!5405, !5390, !5406}
!5406 = !DILocation(line: 1511, column: 48, scope: !5384)
!5407 = !DILocation(line: 1513, column: 45, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 1513, column: 11)
!5409 = !DILocation(line: 1513, column: 48, scope: !5408)
!5410 = !DILocation(line: 1513, column: 13, scope: !5408)
!5411 = !DILocation(line: 1513, column: 11, scope: !5384)
!5412 = !DILocation(line: 1514, column: 18, scope: !5408)
!5413 = !DILocation(line: 1514, column: 21, scope: !5408)
!5414 = !DILocation(line: 1514, column: 26, scope: !5408)
!5415 = !DILocation(line: 1514, column: 2, scope: !5408)
!5416 = !DILocation(line: 1513, column: 51, scope: !5408)
!5417 = !DILabel(scope: !5384, name: "next_link", file: !3, line: 1515)
!5418 = !DILocation(line: 1515, column: 5, scope: !5384)
!5419 = !DILocation(line: 1516, column: 5, scope: !5384)
!5420 = distinct !{!5420, !5379, !5421}
!5421 = !DILocation(line: 1516, column: 5, scope: !5380)
!5422 = !DILocation(line: 1518, column: 27, scope: !5370)
!5423 = !DILocation(line: 1518, column: 3, scope: !5370)
!5424 = !DILocation(line: 1520, column: 37, scope: !5370)
!5425 = !DILocation(line: 1520, column: 18, scope: !5370)
!5426 = !DILocation(line: 1520, column: 16, scope: !5370)
!5427 = !DILocation(line: 1521, column: 3, scope: !5370)
!5428 = !DILocation(line: 1521, column: 10, scope: !5370)
!5429 = !DILocation(line: 1522, column: 39, scope: !5370)
!5430 = !DILocation(line: 1522, column: 20, scope: !5370)
!5431 = !DILocation(line: 1522, column: 18, scope: !5370)
!5432 = distinct !{!5432, !5427, !5433}
!5433 = !DILocation(line: 1522, column: 51, scope: !5370)
!5434 = !DILocation(line: 1523, column: 7, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 1523, column: 7)
!5436 = !DILocation(line: 1523, column: 32, scope: !5435)
!5437 = !DILocation(line: 1523, column: 29, scope: !5435)
!5438 = !DILocation(line: 1524, column: 7, scope: !5435)
!5439 = !DILocation(line: 1524, column: 44, scope: !5435)
!5440 = !DILocation(line: 1524, column: 50, scope: !5435)
!5441 = !DILocation(line: 1524, column: 12, scope: !5435)
!5442 = !DILocation(line: 1523, column: 7, scope: !5370)
!5443 = !DILocation(line: 1525, column: 21, scope: !5435)
!5444 = !DILocation(line: 1525, column: 27, scope: !5435)
!5445 = !DILocation(line: 1525, column: 5, scope: !5435)
!5446 = !DILocation(line: 1526, column: 1, scope: !5370)
!5447 = distinct !DISubprogram(name: "deps_start_bb", scope: !3, file: !3, line: 3360, type: !3817, scopeLine: 3361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5448 = !DILocalVariable(name: "deps", arg: 1, scope: !5447, file: !3, line: 3360, type: !3819)
!5449 = !DILocation(line: 3360, column: 29, scope: !5447)
!5450 = !DILocalVariable(name: "head", arg: 2, scope: !5447, file: !3, line: 3360, type: !839)
!5451 = !DILocation(line: 3360, column: 39, scope: !5447)
!5452 = !DILocation(line: 3362, column: 3, scope: !5447)
!5453 = !DILocation(line: 3367, column: 9, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 3367, column: 7)
!5455 = !DILocation(line: 3367, column: 26, scope: !5454)
!5456 = !DILocation(line: 3367, column: 30, scope: !5454)
!5457 = !DILocation(line: 3367, column: 7, scope: !5447)
!5458 = !DILocalVariable(name: "insn", scope: !5459, file: !3, line: 3369, type: !839)
!5459 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 3368, column: 5)
!5460 = !DILocation(line: 3369, column: 11, scope: !5459)
!5461 = !DILocation(line: 3369, column: 37, scope: !5459)
!5462 = !DILocation(line: 3369, column: 18, scope: !5459)
!5463 = !DILocation(line: 3371, column: 7, scope: !5459)
!5464 = !DILocation(line: 3371, column: 14, scope: !5459)
!5465 = !DILocation(line: 3371, column: 19, scope: !5459)
!5466 = !DILocation(line: 3371, column: 22, scope: !5459)
!5467 = !DILocation(line: 0, scope: !5459)
!5468 = !DILocation(line: 3372, column: 28, scope: !5459)
!5469 = !DILocation(line: 3372, column: 9, scope: !5459)
!5470 = !DILocation(line: 3372, column: 7, scope: !5459)
!5471 = distinct !{!5471, !5463, !5472}
!5472 = !DILocation(line: 3372, column: 32, scope: !5459)
!5473 = !DILocation(line: 3373, column: 11, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 3373, column: 11)
!5475 = !DILocation(line: 3373, column: 16, scope: !5474)
!5476 = !DILocation(line: 3373, column: 19, scope: !5474)
!5477 = !DILocation(line: 3373, column: 11, scope: !5459)
!5478 = !DILocation(line: 3374, column: 2, scope: !5474)
!5479 = !DILocation(line: 3374, column: 8, scope: !5474)
!5480 = !DILocation(line: 3374, column: 29, scope: !5474)
!5481 = !DILocation(line: 3375, column: 5, scope: !5459)
!5482 = !DILocation(line: 3376, column: 1, scope: !5447)
!5483 = distinct !DISubprogram(name: "sched_analyze", scope: !3, file: !3, line: 3381, type: !4098, scopeLine: 3382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5484 = !DILocalVariable(name: "deps", arg: 1, scope: !5483, file: !3, line: 3381, type: !3819)
!5485 = !DILocation(line: 3381, column: 29, scope: !5483)
!5486 = !DILocalVariable(name: "head", arg: 2, scope: !5483, file: !3, line: 3381, type: !839)
!5487 = !DILocation(line: 3381, column: 39, scope: !5483)
!5488 = !DILocalVariable(name: "tail", arg: 3, scope: !5483, file: !3, line: 3381, type: !839)
!5489 = !DILocation(line: 3381, column: 49, scope: !5483)
!5490 = !DILocalVariable(name: "insn", scope: !5483, file: !3, line: 3383, type: !839)
!5491 = !DILocation(line: 3383, column: 7, scope: !5483)
!5492 = !DILocation(line: 3385, column: 7, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 3385, column: 7)
!5494 = !DILocation(line: 3385, column: 24, scope: !5493)
!5495 = !DILocation(line: 3385, column: 7, scope: !5483)
!5496 = !DILocation(line: 3386, column: 5, scope: !5493)
!5497 = !DILocation(line: 3388, column: 18, scope: !5483)
!5498 = !DILocation(line: 3388, column: 24, scope: !5483)
!5499 = !DILocation(line: 3388, column: 3, scope: !5483)
!5500 = !DILocation(line: 3390, column: 15, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 3390, column: 3)
!5502 = !DILocation(line: 3390, column: 13, scope: !5501)
!5503 = !DILocation(line: 3390, column: 8, scope: !5501)
!5504 = !DILocation(line: 3393, column: 11, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 3393, column: 11)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 3391, column: 5)
!5507 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 3390, column: 3)
!5508 = !DILocation(line: 3393, column: 11, scope: !5506)
!5509 = !DILocation(line: 3396, column: 18, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 3394, column: 2)
!5511 = !DILocation(line: 3396, column: 4, scope: !5510)
!5512 = !DILocation(line: 3397, column: 2, scope: !5510)
!5513 = !DILocation(line: 3399, column: 26, scope: !5506)
!5514 = !DILocation(line: 3399, column: 32, scope: !5506)
!5515 = !DILocation(line: 3399, column: 7, scope: !5506)
!5516 = !DILocation(line: 3401, column: 11, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 3401, column: 11)
!5518 = !DILocation(line: 3401, column: 19, scope: !5517)
!5519 = !DILocation(line: 3401, column: 16, scope: !5517)
!5520 = !DILocation(line: 3401, column: 11, scope: !5506)
!5521 = !DILocation(line: 3403, column: 8, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 3403, column: 8)
!5523 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 3402, column: 2)
!5524 = !DILocation(line: 3403, column: 25, scope: !5522)
!5525 = !DILocation(line: 3403, column: 8, scope: !5523)
!5526 = !DILocation(line: 3404, column: 6, scope: !5522)
!5527 = !DILocation(line: 3405, column: 4, scope: !5523)
!5528 = !DILocation(line: 3407, column: 5, scope: !5506)
!5529 = !DILocation(line: 3390, column: 29, scope: !5507)
!5530 = !DILocation(line: 3390, column: 27, scope: !5507)
!5531 = !DILocation(line: 3390, column: 3, scope: !5507)
!5532 = distinct !{!5532, !5533, !5534}
!5533 = !DILocation(line: 3390, column: 3, scope: !5501)
!5534 = !DILocation(line: 3407, column: 5, scope: !5501)
!5535 = distinct !DISubprogram(name: "sched_free_deps", scope: !3, file: !3, line: 3442, type: !3476, scopeLine: 3443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5536 = !DILocalVariable(name: "head", arg: 1, scope: !5535, file: !3, line: 3442, type: !839)
!5537 = !DILocation(line: 3442, column: 22, scope: !5535)
!5538 = !DILocalVariable(name: "tail", arg: 2, scope: !5535, file: !3, line: 3442, type: !839)
!5539 = !DILocation(line: 3442, column: 32, scope: !5535)
!5540 = !DILocalVariable(name: "resolved_p", arg: 3, scope: !5535, file: !3, line: 3442, type: !1065)
!5541 = !DILocation(line: 3442, column: 43, scope: !5535)
!5542 = !DILocalVariable(name: "insn", scope: !5535, file: !3, line: 3444, type: !839)
!5543 = !DILocation(line: 3444, column: 7, scope: !5535)
!5544 = !DILocalVariable(name: "next_tail", scope: !5535, file: !3, line: 3445, type: !839)
!5545 = !DILocation(line: 3445, column: 7, scope: !5535)
!5546 = !DILocation(line: 3445, column: 19, scope: !5535)
!5547 = !DILocation(line: 3447, column: 15, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 3447, column: 3)
!5549 = !DILocation(line: 3447, column: 13, scope: !5548)
!5550 = !DILocation(line: 3447, column: 8, scope: !5548)
!5551 = !DILocation(line: 3447, column: 21, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 3447, column: 3)
!5553 = !DILocation(line: 3447, column: 29, scope: !5552)
!5554 = !DILocation(line: 3447, column: 26, scope: !5552)
!5555 = !DILocation(line: 3447, column: 3, scope: !5548)
!5556 = !DILocation(line: 3448, column: 9, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 3448, column: 9)
!5558 = !DILocation(line: 3448, column: 23, scope: !5557)
!5559 = !DILocation(line: 3448, column: 26, scope: !5557)
!5560 = !DILocation(line: 3448, column: 43, scope: !5557)
!5561 = !DILocation(line: 3448, column: 9, scope: !5552)
!5562 = !DILocation(line: 3451, column: 33, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 3449, column: 7)
!5564 = !DILocation(line: 3451, column: 39, scope: !5563)
!5565 = !DILocation(line: 3451, column: 2, scope: !5563)
!5566 = !DILocation(line: 3455, column: 6, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 3455, column: 6)
!5568 = !DILocation(line: 3455, column: 6, scope: !5563)
!5569 = !DILocation(line: 3456, column: 21, scope: !5567)
!5570 = !DILocation(line: 3456, column: 4, scope: !5567)
!5571 = !DILocation(line: 3458, column: 21, scope: !5567)
!5572 = !DILocation(line: 3458, column: 4, scope: !5567)
!5573 = !DILocation(line: 3460, column: 18, scope: !5563)
!5574 = !DILocation(line: 3460, column: 2, scope: !5563)
!5575 = !DILocation(line: 3461, column: 7, scope: !5563)
!5576 = !DILocation(line: 3448, column: 45, scope: !5557)
!5577 = !DILocation(line: 3447, column: 47, scope: !5552)
!5578 = !DILocation(line: 3447, column: 45, scope: !5552)
!5579 = !DILocation(line: 3447, column: 3, scope: !5552)
!5580 = distinct !{!5580, !5555, !5581}
!5581 = !DILocation(line: 3461, column: 7, scope: !5548)
!5582 = !DILocation(line: 3462, column: 1, scope: !5535)
!5583 = distinct !DISubprogram(name: "delete_dep_nodes_in_back_deps", scope: !3, file: !3, line: 3414, type: !5584, scopeLine: 3415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{null, !839, !1065}
!5586 = !DILocalVariable(name: "insn", arg: 1, scope: !5583, file: !3, line: 3414, type: !839)
!5587 = !DILocation(line: 3414, column: 36, scope: !5583)
!5588 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !5583, file: !3, line: 3414, type: !1065)
!5589 = !DILocation(line: 3414, column: 47, scope: !5583)
!5590 = !DILocalVariable(name: "sd_it", scope: !5583, file: !3, line: 3416, type: !2167)
!5591 = !DILocation(line: 3416, column: 19, scope: !5583)
!5592 = !DILocalVariable(name: "dep", scope: !5583, file: !3, line: 3417, type: !2231)
!5593 = !DILocation(line: 3417, column: 9, scope: !5583)
!5594 = !DILocalVariable(name: "types", scope: !5583, file: !3, line: 3418, type: !2171)
!5595 = !DILocation(line: 3418, column: 21, scope: !5583)
!5596 = !DILocation(line: 3420, column: 7, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 3420, column: 7)
!5598 = !DILocation(line: 3420, column: 7, scope: !5583)
!5599 = !DILocation(line: 3421, column: 11, scope: !5597)
!5600 = !DILocation(line: 3421, column: 5, scope: !5597)
!5601 = !DILocation(line: 3423, column: 11, scope: !5597)
!5602 = !DILocation(line: 3425, column: 35, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 3425, column: 3)
!5604 = !DILocation(line: 3425, column: 41, scope: !5603)
!5605 = !DILocation(line: 3425, column: 16, scope: !5603)
!5606 = !DILocation(line: 3425, column: 8, scope: !5603)
!5607 = !DILocation(line: 3426, column: 8, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 3425, column: 3)
!5609 = !DILocation(line: 3425, column: 3, scope: !5603)
!5610 = !DILocalVariable(name: "link", scope: !5611, file: !3, line: 3428, type: !2006)
!5611 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 3427, column: 5)
!5612 = !DILocation(line: 3428, column: 18, scope: !5611)
!5613 = !DILocation(line: 3428, column: 32, scope: !5611)
!5614 = !DILocation(line: 3428, column: 25, scope: !5611)
!5615 = !DILocalVariable(name: "node", scope: !5611, file: !3, line: 3429, type: !2011)
!5616 = !DILocation(line: 3429, column: 18, scope: !5611)
!5617 = !DILocation(line: 3429, column: 25, scope: !5611)
!5618 = !DILocalVariable(name: "back_list", scope: !5611, file: !3, line: 3430, type: !2001)
!5619 = !DILocation(line: 3430, column: 19, scope: !5611)
!5620 = !DILocalVariable(name: "forw_list", scope: !5611, file: !3, line: 3431, type: !2001)
!5621 = !DILocation(line: 3431, column: 19, scope: !5611)
!5622 = !DILocation(line: 3433, column: 32, scope: !5611)
!5623 = !DILocation(line: 3433, column: 37, scope: !5611)
!5624 = !DILocation(line: 3433, column: 7, scope: !5611)
!5625 = !DILocation(line: 3434, column: 30, scope: !5611)
!5626 = !DILocation(line: 3434, column: 36, scope: !5611)
!5627 = !DILocation(line: 3434, column: 7, scope: !5611)
!5628 = !DILocation(line: 3435, column: 24, scope: !5611)
!5629 = !DILocation(line: 3435, column: 7, scope: !5611)
!5630 = !DILocation(line: 3425, column: 3, scope: !5608)
!5631 = distinct !{!5631, !5609, !5632}
!5632 = !DILocation(line: 3436, column: 5, scope: !5603)
!5633 = !DILocation(line: 3437, column: 1, scope: !5583)
!5634 = distinct !DISubprogram(name: "clear_deps_list", scope: !3, file: !3, line: 396, type: !2957, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5635 = !DILocalVariable(name: "l", arg: 1, scope: !5634, file: !3, line: 396, type: !2001)
!5636 = !DILocation(line: 396, column: 30, scope: !5634)
!5637 = !DILocation(line: 398, column: 3, scope: !5634)
!5638 = !DILocalVariable(name: "link", scope: !5639, file: !3, line: 400, type: !2006)
!5639 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 399, column: 5)
!5640 = !DILocation(line: 400, column: 18, scope: !5639)
!5641 = !DILocation(line: 400, column: 25, scope: !5639)
!5642 = !DILocation(line: 402, column: 11, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 402, column: 11)
!5644 = !DILocation(line: 402, column: 16, scope: !5643)
!5645 = !DILocation(line: 402, column: 11, scope: !5639)
!5646 = !DILocation(line: 403, column: 2, scope: !5643)
!5647 = !DILocation(line: 405, column: 30, scope: !5639)
!5648 = !DILocation(line: 405, column: 36, scope: !5639)
!5649 = !DILocation(line: 405, column: 7, scope: !5639)
!5650 = !DILocation(line: 406, column: 5, scope: !5639)
!5651 = distinct !{!5651, !5637, !5652}
!5652 = !DILocation(line: 407, column: 11, scope: !5634)
!5653 = !DILocation(line: 408, column: 1, scope: !5634)
!5654 = distinct !DISubprogram(name: "init_deps", scope: !3, file: !3, line: 3469, type: !5655, scopeLine: 3470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5655 = !DISubroutineType(types: !5656)
!5656 = !{null, !3819, !1065}
!5657 = !DILocalVariable(name: "deps", arg: 1, scope: !5654, file: !3, line: 3469, type: !3819)
!5658 = !DILocation(line: 3469, column: 25, scope: !5654)
!5659 = !DILocalVariable(name: "lazy_reg_last", arg: 2, scope: !5654, file: !3, line: 3469, type: !1065)
!5660 = !DILocation(line: 3469, column: 36, scope: !5654)
!5661 = !DILocalVariable(name: "max_reg", scope: !5654, file: !3, line: 3471, type: !810)
!5662 = !DILocation(line: 3471, column: 7, scope: !5654)
!5663 = !DILocation(line: 3471, column: 18, scope: !5654)
!5664 = !DILocation(line: 3471, column: 61, scope: !5654)
!5665 = !DILocation(line: 3473, column: 19, scope: !5654)
!5666 = !DILocation(line: 3473, column: 3, scope: !5654)
!5667 = !DILocation(line: 3473, column: 9, scope: !5654)
!5668 = !DILocation(line: 3473, column: 17, scope: !5654)
!5669 = !DILocation(line: 3474, column: 7, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 3474, column: 7)
!5671 = !DILocation(line: 3474, column: 7, scope: !5654)
!5672 = !DILocation(line: 3475, column: 5, scope: !5670)
!5673 = !DILocation(line: 3475, column: 11, scope: !5670)
!5674 = !DILocation(line: 3475, column: 20, scope: !5670)
!5675 = !DILocation(line: 3477, column: 22, scope: !5670)
!5676 = !DILocation(line: 3477, column: 5, scope: !5670)
!5677 = !DILocation(line: 3477, column: 11, scope: !5670)
!5678 = !DILocation(line: 3477, column: 20, scope: !5670)
!5679 = !DILocation(line: 3478, column: 3, scope: !5654)
!5680 = !DILocation(line: 3479, column: 3, scope: !5654)
!5681 = !DILocation(line: 3481, column: 3, scope: !5654)
!5682 = !DILocation(line: 3481, column: 9, scope: !5654)
!5683 = !DILocation(line: 3481, column: 28, scope: !5654)
!5684 = !DILocation(line: 3482, column: 3, scope: !5654)
!5685 = !DILocation(line: 3482, column: 9, scope: !5654)
!5686 = !DILocation(line: 3482, column: 27, scope: !5654)
!5687 = !DILocation(line: 3483, column: 3, scope: !5654)
!5688 = !DILocation(line: 3483, column: 9, scope: !5654)
!5689 = !DILocation(line: 3483, column: 29, scope: !5654)
!5690 = !DILocation(line: 3484, column: 3, scope: !5654)
!5691 = !DILocation(line: 3484, column: 9, scope: !5654)
!5692 = !DILocation(line: 3484, column: 28, scope: !5654)
!5693 = !DILocation(line: 3485, column: 3, scope: !5654)
!5694 = !DILocation(line: 3485, column: 9, scope: !5654)
!5695 = !DILocation(line: 3485, column: 34, scope: !5654)
!5696 = !DILocation(line: 3486, column: 3, scope: !5654)
!5697 = !DILocation(line: 3486, column: 9, scope: !5654)
!5698 = !DILocation(line: 3486, column: 35, scope: !5654)
!5699 = !DILocation(line: 3487, column: 3, scope: !5654)
!5700 = !DILocation(line: 3487, column: 9, scope: !5654)
!5701 = !DILocation(line: 3487, column: 30, scope: !5654)
!5702 = !DILocation(line: 3488, column: 3, scope: !5654)
!5703 = !DILocation(line: 3488, column: 9, scope: !5654)
!5704 = !DILocation(line: 3488, column: 35, scope: !5654)
!5705 = !DILocation(line: 3489, column: 3, scope: !5654)
!5706 = !DILocation(line: 3489, column: 9, scope: !5654)
!5707 = !DILocation(line: 3489, column: 28, scope: !5654)
!5708 = !DILocation(line: 3490, column: 3, scope: !5654)
!5709 = !DILocation(line: 3490, column: 9, scope: !5654)
!5710 = !DILocation(line: 3490, column: 41, scope: !5654)
!5711 = !DILocation(line: 3491, column: 3, scope: !5654)
!5712 = !DILocation(line: 3491, column: 9, scope: !5654)
!5713 = !DILocation(line: 3491, column: 32, scope: !5654)
!5714 = !DILocation(line: 3492, column: 3, scope: !5654)
!5715 = !DILocation(line: 3492, column: 9, scope: !5654)
!5716 = !DILocation(line: 3492, column: 30, scope: !5654)
!5717 = !DILocation(line: 3493, column: 3, scope: !5654)
!5718 = !DILocation(line: 3493, column: 9, scope: !5654)
!5719 = !DILocation(line: 3493, column: 25, scope: !5654)
!5720 = !DILocation(line: 3494, column: 3, scope: !5654)
!5721 = !DILocation(line: 3494, column: 9, scope: !5654)
!5722 = !DILocation(line: 3494, column: 34, scope: !5654)
!5723 = !DILocation(line: 3495, column: 3, scope: !5654)
!5724 = !DILocation(line: 3495, column: 9, scope: !5654)
!5725 = !DILocation(line: 3495, column: 18, scope: !5654)
!5726 = !DILocation(line: 3496, column: 1, scope: !5654)
!5727 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !890, file: !890, line: 165, type: !5728, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{null, !1999, !910}
!5730 = !DILocalVariable(name: "head", arg: 1, scope: !5727, file: !890, line: 165, type: !1999)
!5731 = !DILocation(line: 165, column: 32, scope: !5727)
!5732 = !DILocalVariable(name: "obstack", arg: 2, scope: !5727, file: !890, line: 165, type: !910)
!5733 = !DILocation(line: 165, column: 54, scope: !5727)
!5734 = !DILocation(line: 167, column: 17, scope: !5727)
!5735 = !DILocation(line: 167, column: 23, scope: !5727)
!5736 = !DILocation(line: 167, column: 31, scope: !5727)
!5737 = !DILocation(line: 167, column: 3, scope: !5727)
!5738 = !DILocation(line: 167, column: 9, scope: !5727)
!5739 = !DILocation(line: 167, column: 15, scope: !5727)
!5740 = !DILocation(line: 168, column: 19, scope: !5727)
!5741 = !DILocation(line: 168, column: 3, scope: !5727)
!5742 = !DILocation(line: 168, column: 9, scope: !5727)
!5743 = !DILocation(line: 168, column: 17, scope: !5727)
!5744 = !DILocation(line: 172, column: 1, scope: !5727)
!5745 = distinct !DISubprogram(name: "init_deps_reg_last", scope: !3, file: !3, line: 3501, type: !5746, scopeLine: 3502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5746 = !DISubroutineType(types: !5747)
!5747 = !{null, !3819}
!5748 = !DILocalVariable(name: "deps", arg: 1, scope: !5745, file: !3, line: 3501, type: !3819)
!5749 = !DILocation(line: 3501, column: 34, scope: !5745)
!5750 = !DILocation(line: 3503, column: 3, scope: !5745)
!5751 = !DILocation(line: 3504, column: 3, scope: !5745)
!5752 = !DILocation(line: 3506, column: 20, scope: !5745)
!5753 = !DILocation(line: 3506, column: 3, scope: !5745)
!5754 = !DILocation(line: 3506, column: 9, scope: !5745)
!5755 = !DILocation(line: 3506, column: 18, scope: !5745)
!5756 = !DILocation(line: 3507, column: 1, scope: !5745)
!5757 = distinct !DISubprogram(name: "free_deps", scope: !3, file: !3, line: 3513, type: !5746, scopeLine: 3514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5758 = !DILocalVariable(name: "deps", arg: 1, scope: !5757, file: !3, line: 3513, type: !3819)
!5759 = !DILocation(line: 3513, column: 25, scope: !5757)
!5760 = !DILocalVariable(name: "i", scope: !5757, file: !3, line: 3515, type: !7)
!5761 = !DILocation(line: 3515, column: 12, scope: !5757)
!5762 = !DILocalVariable(name: "rsi", scope: !5757, file: !3, line: 3516, type: !4114)
!5763 = !DILocation(line: 3516, column: 20, scope: !5757)
!5764 = !DILocation(line: 3519, column: 7, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3519, column: 7)
!5766 = !DILocation(line: 3519, column: 13, scope: !5765)
!5767 = !DILocation(line: 3519, column: 21, scope: !5765)
!5768 = !DILocation(line: 3519, column: 7, scope: !5757)
!5769 = !DILocation(line: 3521, column: 7, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 3520, column: 5)
!5771 = !DILocation(line: 3522, column: 7, scope: !5770)
!5772 = !DILocation(line: 3524, column: 3, scope: !5757)
!5773 = !DILocation(line: 3524, column: 9, scope: !5757)
!5774 = !DILocation(line: 3524, column: 17, scope: !5757)
!5775 = !DILocation(line: 3526, column: 25, scope: !5757)
!5776 = !DILocation(line: 3526, column: 31, scope: !5757)
!5777 = !DILocation(line: 3526, column: 3, scope: !5757)
!5778 = !DILocation(line: 3527, column: 25, scope: !5757)
!5779 = !DILocation(line: 3527, column: 31, scope: !5757)
!5780 = !DILocation(line: 3527, column: 3, scope: !5757)
!5781 = !DILocation(line: 3528, column: 25, scope: !5757)
!5782 = !DILocation(line: 3528, column: 31, scope: !5757)
!5783 = !DILocation(line: 3528, column: 3, scope: !5757)
!5784 = !DILocation(line: 3529, column: 25, scope: !5757)
!5785 = !DILocation(line: 3529, column: 31, scope: !5757)
!5786 = !DILocation(line: 3529, column: 3, scope: !5757)
!5787 = !DILocation(line: 3530, column: 25, scope: !5757)
!5788 = !DILocation(line: 3530, column: 31, scope: !5757)
!5789 = !DILocation(line: 3530, column: 3, scope: !5757)
!5790 = !DILocation(line: 3535, column: 3, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3535, column: 3)
!5792 = !DILocation(line: 3535, column: 3, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 3535, column: 3)
!5794 = !DILocalVariable(name: "reg_last", scope: !5795, file: !3, line: 3537, type: !1988)
!5795 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 3536, column: 5)
!5796 = !DILocation(line: 3537, column: 24, scope: !5795)
!5797 = !DILocation(line: 3537, column: 36, scope: !5795)
!5798 = !DILocation(line: 3537, column: 42, scope: !5795)
!5799 = !DILocation(line: 3537, column: 51, scope: !5795)
!5800 = !DILocation(line: 3538, column: 11, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3538, column: 11)
!5802 = !DILocation(line: 3538, column: 21, scope: !5801)
!5803 = !DILocation(line: 3538, column: 11, scope: !5795)
!5804 = !DILocation(line: 3539, column: 24, scope: !5801)
!5805 = !DILocation(line: 3539, column: 34, scope: !5801)
!5806 = !DILocation(line: 3539, column: 2, scope: !5801)
!5807 = !DILocation(line: 3540, column: 11, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3540, column: 11)
!5809 = !DILocation(line: 3540, column: 21, scope: !5808)
!5810 = !DILocation(line: 3540, column: 11, scope: !5795)
!5811 = !DILocation(line: 3541, column: 24, scope: !5808)
!5812 = !DILocation(line: 3541, column: 34, scope: !5808)
!5813 = !DILocation(line: 3541, column: 2, scope: !5808)
!5814 = !DILocation(line: 3542, column: 11, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3542, column: 11)
!5816 = !DILocation(line: 3542, column: 21, scope: !5815)
!5817 = !DILocation(line: 3542, column: 11, scope: !5795)
!5818 = !DILocation(line: 3543, column: 24, scope: !5815)
!5819 = !DILocation(line: 3543, column: 34, scope: !5815)
!5820 = !DILocation(line: 3543, column: 2, scope: !5815)
!5821 = !DILocation(line: 3544, column: 11, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3544, column: 11)
!5823 = !DILocation(line: 3544, column: 21, scope: !5822)
!5824 = !DILocation(line: 3544, column: 11, scope: !5795)
!5825 = !DILocation(line: 3545, column: 24, scope: !5822)
!5826 = !DILocation(line: 3545, column: 34, scope: !5822)
!5827 = !DILocation(line: 3545, column: 2, scope: !5822)
!5828 = !DILocation(line: 3546, column: 5, scope: !5795)
!5829 = distinct !{!5829, !5790, !5830}
!5830 = !DILocation(line: 3546, column: 5, scope: !5791)
!5831 = !DILocation(line: 3547, column: 3, scope: !5757)
!5832 = !DILocation(line: 3548, column: 3, scope: !5757)
!5833 = !DILocation(line: 3552, column: 7, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3552, column: 7)
!5835 = !DILocation(line: 3552, column: 13, scope: !5834)
!5836 = !DILocation(line: 3552, column: 7, scope: !5757)
!5837 = !DILocation(line: 3553, column: 11, scope: !5834)
!5838 = !DILocation(line: 3553, column: 17, scope: !5834)
!5839 = !DILocation(line: 3553, column: 5, scope: !5834)
!5840 = !DILocation(line: 3554, column: 3, scope: !5757)
!5841 = !DILocation(line: 3554, column: 9, scope: !5757)
!5842 = !DILocation(line: 3554, column: 18, scope: !5757)
!5843 = !DILocation(line: 3556, column: 8, scope: !5757)
!5844 = !DILocation(line: 3557, column: 1, scope: !5757)
!5845 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !890, file: !890, line: 224, type: !5846, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{null, !5848, !5849, !7, !5852}
!5848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!5849 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !840, line: 48, baseType: !5850)
!5850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5851, size: 64)
!5851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !889)
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!5853 = !DILocalVariable(name: "bi", arg: 1, scope: !5845, file: !890, line: 224, type: !5848)
!5854 = !DILocation(line: 224, column: 37, scope: !5845)
!5855 = !DILocalVariable(name: "map", arg: 2, scope: !5845, file: !890, line: 224, type: !5849)
!5856 = !DILocation(line: 224, column: 54, scope: !5845)
!5857 = !DILocalVariable(name: "start_bit", arg: 3, scope: !5845, file: !890, line: 225, type: !7)
!5858 = !DILocation(line: 225, column: 15, scope: !5845)
!5859 = !DILocalVariable(name: "bit_no", arg: 4, scope: !5845, file: !890, line: 225, type: !5852)
!5860 = !DILocation(line: 225, column: 36, scope: !5845)
!5861 = !DILocation(line: 227, column: 14, scope: !5845)
!5862 = !DILocation(line: 227, column: 19, scope: !5845)
!5863 = !DILocation(line: 227, column: 3, scope: !5845)
!5864 = !DILocation(line: 227, column: 7, scope: !5845)
!5865 = !DILocation(line: 227, column: 12, scope: !5845)
!5866 = !DILocation(line: 228, column: 3, scope: !5845)
!5867 = !DILocation(line: 228, column: 7, scope: !5845)
!5868 = !DILocation(line: 228, column: 12, scope: !5845)
!5869 = !DILocation(line: 231, column: 3, scope: !5845)
!5870 = !DILocation(line: 233, column: 12, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !890, line: 233, column: 11)
!5872 = distinct !DILexicalBlock(scope: !5845, file: !890, line: 232, column: 5)
!5873 = !DILocation(line: 233, column: 16, scope: !5871)
!5874 = !DILocation(line: 233, column: 11, scope: !5872)
!5875 = !DILocation(line: 235, column: 4, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5871, file: !890, line: 234, column: 2)
!5877 = !DILocation(line: 235, column: 8, scope: !5876)
!5878 = !DILocation(line: 235, column: 13, scope: !5876)
!5879 = !DILocation(line: 236, column: 4, scope: !5876)
!5880 = !DILocation(line: 239, column: 11, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5872, file: !890, line: 239, column: 11)
!5882 = !DILocation(line: 239, column: 15, scope: !5881)
!5883 = !DILocation(line: 239, column: 21, scope: !5881)
!5884 = !DILocation(line: 239, column: 29, scope: !5881)
!5885 = !DILocation(line: 239, column: 39, scope: !5881)
!5886 = !DILocation(line: 239, column: 26, scope: !5881)
!5887 = !DILocation(line: 239, column: 11, scope: !5872)
!5888 = !DILocation(line: 240, column: 2, scope: !5881)
!5889 = !DILocation(line: 241, column: 18, scope: !5872)
!5890 = !DILocation(line: 241, column: 22, scope: !5872)
!5891 = !DILocation(line: 241, column: 28, scope: !5872)
!5892 = !DILocation(line: 241, column: 7, scope: !5872)
!5893 = !DILocation(line: 241, column: 11, scope: !5872)
!5894 = !DILocation(line: 241, column: 16, scope: !5872)
!5895 = distinct !{!5895, !5869, !5896}
!5896 = !DILocation(line: 242, column: 5, scope: !5845)
!5897 = !DILocation(line: 245, column: 7, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5845, file: !890, line: 245, column: 7)
!5899 = !DILocation(line: 245, column: 11, scope: !5898)
!5900 = !DILocation(line: 245, column: 17, scope: !5898)
!5901 = !DILocation(line: 245, column: 25, scope: !5898)
!5902 = !DILocation(line: 245, column: 35, scope: !5898)
!5903 = !DILocation(line: 245, column: 22, scope: !5898)
!5904 = !DILocation(line: 245, column: 7, scope: !5845)
!5905 = !DILocation(line: 246, column: 17, scope: !5898)
!5906 = !DILocation(line: 246, column: 21, scope: !5898)
!5907 = !DILocation(line: 246, column: 27, scope: !5898)
!5908 = !DILocation(line: 246, column: 32, scope: !5898)
!5909 = !DILocation(line: 246, column: 15, scope: !5898)
!5910 = !DILocation(line: 246, column: 5, scope: !5898)
!5911 = !DILocation(line: 249, column: 17, scope: !5845)
!5912 = !DILocation(line: 249, column: 27, scope: !5845)
!5913 = !DILocation(line: 249, column: 46, scope: !5845)
!5914 = !DILocation(line: 249, column: 3, scope: !5845)
!5915 = !DILocation(line: 249, column: 7, scope: !5845)
!5916 = !DILocation(line: 249, column: 15, scope: !5845)
!5917 = !DILocation(line: 250, column: 14, scope: !5845)
!5918 = !DILocation(line: 250, column: 18, scope: !5845)
!5919 = !DILocation(line: 250, column: 24, scope: !5845)
!5920 = !DILocation(line: 250, column: 29, scope: !5845)
!5921 = !DILocation(line: 250, column: 33, scope: !5845)
!5922 = !DILocation(line: 250, column: 3, scope: !5845)
!5923 = !DILocation(line: 250, column: 7, scope: !5845)
!5924 = !DILocation(line: 250, column: 12, scope: !5845)
!5925 = !DILocation(line: 251, column: 16, scope: !5845)
!5926 = !DILocation(line: 251, column: 26, scope: !5845)
!5927 = !DILocation(line: 251, column: 3, scope: !5845)
!5928 = !DILocation(line: 251, column: 7, scope: !5845)
!5929 = !DILocation(line: 251, column: 12, scope: !5845)
!5930 = !DILocation(line: 257, column: 17, scope: !5845)
!5931 = !DILocation(line: 257, column: 21, scope: !5845)
!5932 = !DILocation(line: 257, column: 16, scope: !5845)
!5933 = !DILocation(line: 257, column: 13, scope: !5845)
!5934 = !DILocation(line: 259, column: 13, scope: !5845)
!5935 = !DILocation(line: 259, column: 4, scope: !5845)
!5936 = !DILocation(line: 259, column: 11, scope: !5845)
!5937 = !DILocation(line: 260, column: 1, scope: !5845)
!5938 = distinct !DISubprogram(name: "bmp_iter_set", scope: !890, file: !890, line: 393, type: !5939, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!5939 = !DISubroutineType(types: !5940)
!5940 = !{!1065, !5848, !5852}
!5941 = !DILocalVariable(name: "bi", arg: 1, scope: !5938, file: !890, line: 393, type: !5848)
!5942 = !DILocation(line: 393, column: 32, scope: !5938)
!5943 = !DILocalVariable(name: "bit_no", arg: 2, scope: !5938, file: !890, line: 393, type: !5852)
!5944 = !DILocation(line: 393, column: 46, scope: !5938)
!5945 = !DILocation(line: 396, column: 7, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5938, file: !890, line: 396, column: 7)
!5947 = !DILocation(line: 396, column: 11, scope: !5946)
!5948 = !DILocation(line: 396, column: 7, scope: !5938)
!5949 = !DILocation(line: 397, column: 5, scope: !5946)
!5950 = !DILabel(scope: !5951, name: "next_bit", file: !890, line: 398)
!5951 = distinct !DILexicalBlock(scope: !5946, file: !890, line: 397, column: 5)
!5952 = !DILocation(line: 398, column: 5, scope: !5951)
!5953 = !DILocation(line: 399, column: 7, scope: !5951)
!5954 = !DILocation(line: 399, column: 16, scope: !5951)
!5955 = !DILocation(line: 399, column: 20, scope: !5951)
!5956 = !DILocation(line: 399, column: 25, scope: !5951)
!5957 = !DILocation(line: 399, column: 14, scope: !5951)
!5958 = !DILocation(line: 401, column: 4, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5951, file: !890, line: 400, column: 2)
!5960 = !DILocation(line: 401, column: 8, scope: !5959)
!5961 = !DILocation(line: 401, column: 13, scope: !5959)
!5962 = !DILocation(line: 402, column: 5, scope: !5959)
!5963 = !DILocation(line: 402, column: 12, scope: !5959)
!5964 = distinct !{!5964, !5953, !5965}
!5965 = !DILocation(line: 403, column: 2, scope: !5951)
!5966 = !DILocation(line: 404, column: 7, scope: !5951)
!5967 = !DILocation(line: 410, column: 16, scope: !5938)
!5968 = !DILocation(line: 410, column: 15, scope: !5938)
!5969 = !DILocation(line: 410, column: 23, scope: !5938)
!5970 = !DILocation(line: 410, column: 42, scope: !5938)
!5971 = !DILocation(line: 411, column: 7, scope: !5938)
!5972 = !DILocation(line: 411, column: 26, scope: !5938)
!5973 = !DILocation(line: 410, column: 4, scope: !5938)
!5974 = !DILocation(line: 410, column: 11, scope: !5938)
!5975 = !DILocation(line: 412, column: 3, scope: !5938)
!5976 = !DILocation(line: 412, column: 7, scope: !5938)
!5977 = !DILocation(line: 412, column: 14, scope: !5938)
!5978 = !DILocation(line: 414, column: 3, scope: !5938)
!5979 = !DILocation(line: 417, column: 7, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5938, file: !890, line: 415, column: 5)
!5981 = !DILocation(line: 417, column: 14, scope: !5980)
!5982 = !DILocation(line: 417, column: 18, scope: !5980)
!5983 = !DILocation(line: 417, column: 26, scope: !5980)
!5984 = !DILocation(line: 419, column: 15, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5980, file: !890, line: 418, column: 2)
!5986 = !DILocation(line: 419, column: 19, scope: !5985)
!5987 = !DILocation(line: 419, column: 25, scope: !5985)
!5988 = !DILocation(line: 419, column: 30, scope: !5985)
!5989 = !DILocation(line: 419, column: 34, scope: !5985)
!5990 = !DILocation(line: 419, column: 4, scope: !5985)
!5991 = !DILocation(line: 419, column: 8, scope: !5985)
!5992 = !DILocation(line: 419, column: 13, scope: !5985)
!5993 = !DILocation(line: 420, column: 8, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5985, file: !890, line: 420, column: 8)
!5995 = !DILocation(line: 420, column: 12, scope: !5994)
!5996 = !DILocation(line: 420, column: 8, scope: !5985)
!5997 = !DILocation(line: 421, column: 6, scope: !5994)
!5998 = !DILocation(line: 422, column: 5, scope: !5985)
!5999 = !DILocation(line: 422, column: 12, scope: !5985)
!6000 = !DILocation(line: 423, column: 4, scope: !5985)
!6001 = !DILocation(line: 423, column: 8, scope: !5985)
!6002 = !DILocation(line: 423, column: 15, scope: !5985)
!6003 = distinct !{!6003, !5979, !6004}
!6004 = !DILocation(line: 424, column: 2, scope: !5980)
!6005 = !DILocation(line: 427, column: 18, scope: !5980)
!6006 = !DILocation(line: 427, column: 22, scope: !5980)
!6007 = !DILocation(line: 427, column: 28, scope: !5980)
!6008 = !DILocation(line: 427, column: 7, scope: !5980)
!6009 = !DILocation(line: 427, column: 11, scope: !5980)
!6010 = !DILocation(line: 427, column: 16, scope: !5980)
!6011 = !DILocation(line: 428, column: 12, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5980, file: !890, line: 428, column: 11)
!6013 = !DILocation(line: 428, column: 16, scope: !6012)
!6014 = !DILocation(line: 428, column: 11, scope: !5980)
!6015 = !DILocation(line: 429, column: 2, scope: !6012)
!6016 = !DILocation(line: 430, column: 17, scope: !5980)
!6017 = !DILocation(line: 430, column: 21, scope: !5980)
!6018 = !DILocation(line: 430, column: 27, scope: !5980)
!6019 = !DILocation(line: 430, column: 32, scope: !5980)
!6020 = !DILocation(line: 430, column: 8, scope: !5980)
!6021 = !DILocation(line: 430, column: 15, scope: !5980)
!6022 = !DILocation(line: 431, column: 7, scope: !5980)
!6023 = !DILocation(line: 431, column: 11, scope: !5980)
!6024 = !DILocation(line: 431, column: 19, scope: !5980)
!6025 = distinct !{!6025, !5978, !6026}
!6026 = !DILocation(line: 432, column: 5, scope: !5938)
!6027 = !DILocation(line: 433, column: 1, scope: !5938)
!6028 = distinct !DISubprogram(name: "bmp_iter_next", scope: !890, file: !890, line: 382, type: !6029, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6029 = !DISubroutineType(types: !6030)
!6030 = !{null, !5848, !5852}
!6031 = !DILocalVariable(name: "bi", arg: 1, scope: !6028, file: !890, line: 382, type: !5848)
!6032 = !DILocation(line: 382, column: 33, scope: !6028)
!6033 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6028, file: !890, line: 382, type: !5852)
!6034 = !DILocation(line: 382, column: 47, scope: !6028)
!6035 = !DILocation(line: 384, column: 3, scope: !6028)
!6036 = !DILocation(line: 384, column: 7, scope: !6028)
!6037 = !DILocation(line: 384, column: 12, scope: !6028)
!6038 = !DILocation(line: 385, column: 4, scope: !6028)
!6039 = !DILocation(line: 385, column: 11, scope: !6028)
!6040 = !DILocation(line: 386, column: 1, scope: !6028)
!6041 = distinct !DISubprogram(name: "remove_from_deps", scope: !3, file: !3, line: 3562, type: !3817, scopeLine: 3563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6042 = !DILocalVariable(name: "deps", arg: 1, scope: !6041, file: !3, line: 3562, type: !3819)
!6043 = !DILocation(line: 3562, column: 32, scope: !6041)
!6044 = !DILocalVariable(name: "insn", arg: 2, scope: !6041, file: !3, line: 3562, type: !839)
!6045 = !DILocation(line: 3562, column: 42, scope: !6041)
!6046 = !DILocalVariable(name: "removed", scope: !6041, file: !3, line: 3564, type: !810)
!6047 = !DILocation(line: 3564, column: 7, scope: !6041)
!6048 = !DILocalVariable(name: "i", scope: !6041, file: !3, line: 3565, type: !7)
!6049 = !DILocation(line: 3565, column: 12, scope: !6041)
!6050 = !DILocalVariable(name: "rsi", scope: !6041, file: !3, line: 3566, type: !4114)
!6051 = !DILocation(line: 3566, column: 20, scope: !6041)
!6052 = !DILocation(line: 3568, column: 48, scope: !6041)
!6053 = !DILocation(line: 3568, column: 55, scope: !6041)
!6054 = !DILocation(line: 3568, column: 61, scope: !6041)
!6055 = !DILocation(line: 3569, column: 49, scope: !6041)
!6056 = !DILocation(line: 3569, column: 55, scope: !6041)
!6057 = !DILocation(line: 3568, column: 13, scope: !6041)
!6058 = !DILocation(line: 3568, column: 11, scope: !6041)
!6059 = !DILocation(line: 3570, column: 8, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 3570, column: 7)
!6061 = !DILocation(line: 3570, column: 7, scope: !6041)
!6062 = !DILocation(line: 3571, column: 39, scope: !6060)
!6063 = !DILocation(line: 3571, column: 5, scope: !6060)
!6064 = !DILocation(line: 3571, column: 11, scope: !6060)
!6065 = !DILocation(line: 3571, column: 36, scope: !6060)
!6066 = !DILocation(line: 3572, column: 48, scope: !6041)
!6067 = !DILocation(line: 3572, column: 55, scope: !6041)
!6068 = !DILocation(line: 3572, column: 61, scope: !6041)
!6069 = !DILocation(line: 3573, column: 49, scope: !6041)
!6070 = !DILocation(line: 3573, column: 55, scope: !6041)
!6071 = !DILocation(line: 3572, column: 13, scope: !6041)
!6072 = !DILocation(line: 3572, column: 11, scope: !6041)
!6073 = !DILocation(line: 3574, column: 38, scope: !6041)
!6074 = !DILocation(line: 3574, column: 3, scope: !6041)
!6075 = !DILocation(line: 3574, column: 9, scope: !6041)
!6076 = !DILocation(line: 3574, column: 35, scope: !6041)
!6077 = !DILocation(line: 3575, column: 42, scope: !6041)
!6078 = !DILocation(line: 3575, column: 49, scope: !6041)
!6079 = !DILocation(line: 3575, column: 55, scope: !6041)
!6080 = !DILocation(line: 3575, column: 13, scope: !6041)
!6081 = !DILocation(line: 3575, column: 11, scope: !6041)
!6082 = !DILocation(line: 3576, column: 33, scope: !6041)
!6083 = !DILocation(line: 3576, column: 3, scope: !6041)
!6084 = !DILocation(line: 3576, column: 9, scope: !6041)
!6085 = !DILocation(line: 3576, column: 30, scope: !6041)
!6086 = !DILocation(line: 3578, column: 3, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 3578, column: 3)
!6088 = !DILocation(line: 3578, column: 3, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 3578, column: 3)
!6090 = !DILocalVariable(name: "reg_last", scope: !6091, file: !3, line: 3580, type: !1988)
!6091 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 3579, column: 5)
!6092 = !DILocation(line: 3580, column: 24, scope: !6091)
!6093 = !DILocation(line: 3580, column: 36, scope: !6091)
!6094 = !DILocation(line: 3580, column: 42, scope: !6091)
!6095 = !DILocation(line: 3580, column: 51, scope: !6091)
!6096 = !DILocation(line: 3581, column: 11, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 3581, column: 11)
!6098 = !DILocation(line: 3581, column: 21, scope: !6097)
!6099 = !DILocation(line: 3581, column: 11, scope: !6091)
!6100 = !DILocation(line: 3582, column: 31, scope: !6097)
!6101 = !DILocation(line: 3582, column: 38, scope: !6097)
!6102 = !DILocation(line: 3582, column: 48, scope: !6097)
!6103 = !DILocation(line: 3582, column: 2, scope: !6097)
!6104 = !DILocation(line: 3583, column: 11, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 3583, column: 11)
!6106 = !DILocation(line: 3583, column: 21, scope: !6105)
!6107 = !DILocation(line: 3583, column: 11, scope: !6091)
!6108 = !DILocation(line: 3584, column: 31, scope: !6105)
!6109 = !DILocation(line: 3584, column: 38, scope: !6105)
!6110 = !DILocation(line: 3584, column: 48, scope: !6105)
!6111 = !DILocation(line: 3584, column: 2, scope: !6105)
!6112 = !DILocation(line: 3585, column: 11, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 3585, column: 11)
!6114 = !DILocation(line: 3585, column: 21, scope: !6113)
!6115 = !DILocation(line: 3585, column: 11, scope: !6091)
!6116 = !DILocation(line: 3586, column: 31, scope: !6113)
!6117 = !DILocation(line: 3586, column: 38, scope: !6113)
!6118 = !DILocation(line: 3586, column: 48, scope: !6113)
!6119 = !DILocation(line: 3586, column: 2, scope: !6113)
!6120 = !DILocation(line: 3587, column: 11, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 3587, column: 11)
!6122 = !DILocation(line: 3587, column: 21, scope: !6121)
!6123 = !DILocation(line: 3587, column: 11, scope: !6091)
!6124 = !DILocation(line: 3588, column: 31, scope: !6121)
!6125 = !DILocation(line: 3588, column: 38, scope: !6121)
!6126 = !DILocation(line: 3588, column: 48, scope: !6121)
!6127 = !DILocation(line: 3588, column: 2, scope: !6121)
!6128 = !DILocation(line: 3589, column: 12, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 3589, column: 11)
!6130 = !DILocation(line: 3589, column: 22, scope: !6129)
!6131 = !DILocation(line: 3589, column: 27, scope: !6129)
!6132 = !DILocation(line: 3589, column: 31, scope: !6129)
!6133 = !DILocation(line: 3589, column: 41, scope: !6129)
!6134 = !DILocation(line: 3589, column: 46, scope: !6129)
!6135 = !DILocation(line: 3589, column: 50, scope: !6129)
!6136 = !DILocation(line: 3589, column: 60, scope: !6129)
!6137 = !DILocation(line: 3590, column: 4, scope: !6129)
!6138 = !DILocation(line: 3590, column: 8, scope: !6129)
!6139 = !DILocation(line: 3590, column: 18, scope: !6129)
!6140 = !DILocation(line: 3589, column: 11, scope: !6091)
!6141 = !DILocation(line: 3591, column: 9, scope: !6129)
!6142 = !DILocation(line: 3592, column: 5, scope: !6091)
!6143 = distinct !{!6143, !6086, !6144}
!6144 = !DILocation(line: 3592, column: 5, scope: !6087)
!6145 = !DILocation(line: 3594, column: 7, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 3594, column: 7)
!6147 = !DILocation(line: 3594, column: 7, scope: !6041)
!6148 = !DILocation(line: 3596, column: 36, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 3595, column: 5)
!6150 = !DILocation(line: 3596, column: 43, scope: !6149)
!6151 = !DILocation(line: 3596, column: 49, scope: !6149)
!6152 = !DILocation(line: 3596, column: 7, scope: !6149)
!6153 = !DILocation(line: 3597, column: 36, scope: !6149)
!6154 = !DILocation(line: 3598, column: 9, scope: !6149)
!6155 = !DILocation(line: 3598, column: 15, scope: !6149)
!6156 = !DILocation(line: 3597, column: 7, scope: !6149)
!6157 = !DILocation(line: 3599, column: 5, scope: !6149)
!6158 = !DILocation(line: 3600, column: 32, scope: !6041)
!6159 = !DILocation(line: 3600, column: 39, scope: !6041)
!6160 = !DILocation(line: 3600, column: 45, scope: !6041)
!6161 = !DILocation(line: 3600, column: 3, scope: !6041)
!6162 = !DILocation(line: 3601, column: 1, scope: !6041)
!6163 = distinct !DISubprogram(name: "remove_from_both_dependence_lists", scope: !3, file: !3, line: 1450, type: !6164, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{!810, !839, !5247, !5247}
!6166 = !DILocalVariable(name: "insn", arg: 1, scope: !6163, file: !3, line: 1450, type: !839)
!6167 = !DILocation(line: 1450, column: 40, scope: !6163)
!6168 = !DILocalVariable(name: "listp", arg: 2, scope: !6163, file: !3, line: 1450, type: !5247)
!6169 = !DILocation(line: 1450, column: 51, scope: !6163)
!6170 = !DILocalVariable(name: "exprp", arg: 3, scope: !6163, file: !3, line: 1450, type: !5247)
!6171 = !DILocation(line: 1450, column: 63, scope: !6163)
!6172 = !DILocalVariable(name: "removed", scope: !6163, file: !3, line: 1452, type: !810)
!6173 = !DILocation(line: 1452, column: 7, scope: !6163)
!6174 = !DILocation(line: 1454, column: 3, scope: !6163)
!6175 = !DILocation(line: 1454, column: 11, scope: !6163)
!6176 = !DILocation(line: 1454, column: 10, scope: !6163)
!6177 = !DILocation(line: 1456, column: 11, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 1456, column: 11)
!6179 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 1455, column: 5)
!6180 = !DILocation(line: 1456, column: 31, scope: !6178)
!6181 = !DILocation(line: 1456, column: 28, scope: !6178)
!6182 = !DILocation(line: 1456, column: 11, scope: !6179)
!6183 = !DILocation(line: 1458, column: 39, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 1457, column: 9)
!6185 = !DILocation(line: 1458, column: 11, scope: !6184)
!6186 = !DILocation(line: 1459, column: 39, scope: !6184)
!6187 = !DILocation(line: 1459, column: 11, scope: !6184)
!6188 = !DILocation(line: 1460, column: 18, scope: !6184)
!6189 = !DILocation(line: 1461, column: 11, scope: !6184)
!6190 = distinct !{!6190, !6174, !6191}
!6191 = !DILocation(line: 1466, column: 5, scope: !6163)
!6192 = !DILocation(line: 1464, column: 16, scope: !6179)
!6193 = !DILocation(line: 1464, column: 13, scope: !6179)
!6194 = !DILocation(line: 1465, column: 16, scope: !6179)
!6195 = !DILocation(line: 1465, column: 13, scope: !6179)
!6196 = !DILocation(line: 1468, column: 10, scope: !6163)
!6197 = !DILocation(line: 1468, column: 3, scope: !6163)
!6198 = distinct !DISubprogram(name: "remove_from_dependence_list", scope: !3, file: !3, line: 1429, type: !6199, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6199 = !DISubroutineType(types: !6200)
!6200 = !{!810, !839, !5247}
!6201 = !DILocalVariable(name: "insn", arg: 1, scope: !6198, file: !3, line: 1429, type: !839)
!6202 = !DILocation(line: 1429, column: 34, scope: !6198)
!6203 = !DILocalVariable(name: "listp", arg: 2, scope: !6198, file: !3, line: 1429, type: !5247)
!6204 = !DILocation(line: 1429, column: 45, scope: !6198)
!6205 = !DILocalVariable(name: "removed", scope: !6198, file: !3, line: 1431, type: !810)
!6206 = !DILocation(line: 1431, column: 7, scope: !6198)
!6207 = !DILocation(line: 1433, column: 3, scope: !6198)
!6208 = !DILocation(line: 1433, column: 11, scope: !6198)
!6209 = !DILocation(line: 1433, column: 10, scope: !6198)
!6210 = !DILocation(line: 1435, column: 11, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1435, column: 11)
!6212 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1434, column: 5)
!6213 = !DILocation(line: 1435, column: 31, scope: !6211)
!6214 = !DILocation(line: 1435, column: 28, scope: !6211)
!6215 = !DILocation(line: 1435, column: 11, scope: !6212)
!6216 = !DILocation(line: 1437, column: 39, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 1436, column: 9)
!6218 = !DILocation(line: 1437, column: 11, scope: !6217)
!6219 = !DILocation(line: 1438, column: 18, scope: !6217)
!6220 = !DILocation(line: 1439, column: 11, scope: !6217)
!6221 = distinct !{!6221, !6207, !6222}
!6222 = !DILocation(line: 1443, column: 5, scope: !6198)
!6223 = !DILocation(line: 1442, column: 16, scope: !6212)
!6224 = !DILocation(line: 1442, column: 13, scope: !6212)
!6225 = !DILocation(line: 1445, column: 10, scope: !6198)
!6226 = !DILocation(line: 1445, column: 3, scope: !6198)
!6227 = distinct !DISubprogram(name: "sched_deps_init", scope: !3, file: !3, line: 3618, type: !6228, scopeLine: 3619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6228 = !DISubroutineType(types: !6229)
!6229 = !{null, !1065}
!6230 = !DILocalVariable(name: "global_p", arg: 1, scope: !6227, file: !3, line: 3618, type: !1065)
!6231 = !DILocation(line: 3618, column: 23, scope: !6227)
!6232 = !DILocalVariable(name: "insns_in_block", scope: !6227, file: !3, line: 3622, type: !810)
!6233 = !DILocation(line: 3622, column: 7, scope: !6227)
!6234 = !DILocation(line: 3622, column: 24, scope: !6227)
!6235 = !DILocation(line: 3622, column: 41, scope: !6227)
!6236 = !DILocation(line: 3622, column: 39, scope: !6227)
!6237 = !DILocation(line: 3622, column: 56, scope: !6227)
!6238 = !DILocation(line: 3624, column: 3, scope: !6227)
!6239 = !DILocation(line: 3628, column: 8, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 3628, column: 7)
!6241 = !DILocation(line: 3628, column: 23, scope: !6240)
!6242 = !DILocation(line: 3628, column: 26, scope: !6240)
!6243 = !DILocation(line: 3628, column: 35, scope: !6240)
!6244 = !DILocation(line: 3628, column: 38, scope: !6240)
!6245 = !DILocation(line: 3628, column: 53, scope: !6240)
!6246 = !DILocation(line: 3628, column: 7, scope: !6227)
!6247 = !DILocation(line: 3636, column: 18, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 3629, column: 5)
!6249 = !DILocation(line: 3637, column: 33, scope: !6248)
!6250 = !DILocation(line: 3637, column: 7, scope: !6248)
!6251 = !DILocation(line: 3638, column: 5, scope: !6248)
!6252 = !DILocation(line: 3640, column: 7, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 3640, column: 7)
!6254 = !DILocation(line: 3640, column: 7, scope: !6227)
!6255 = !DILocation(line: 3644, column: 36, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 3641, column: 5)
!6257 = !DILocation(line: 3642, column: 17, scope: !6256)
!6258 = !DILocation(line: 3642, column: 15, scope: !6256)
!6259 = !DILocation(line: 3649, column: 40, scope: !6256)
!6260 = !DILocation(line: 3649, column: 38, scope: !6256)
!6261 = !DILocation(line: 3649, column: 36, scope: !6256)
!6262 = !DILocation(line: 3645, column: 17, scope: !6256)
!6263 = !DILocation(line: 3645, column: 15, scope: !6256)
!6264 = !DILocation(line: 3650, column: 5, scope: !6256)
!6265 = !DILocation(line: 3651, column: 1, scope: !6227)
!6266 = distinct !DISubprogram(name: "init_deps_data_vector", scope: !3, file: !3, line: 3605, type: !2090, scopeLine: 3606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6267 = !DILocalVariable(name: "reserve", scope: !6266, file: !3, line: 3607, type: !810)
!6268 = !DILocation(line: 3607, column: 7, scope: !6266)
!6269 = !DILocation(line: 3607, column: 18, scope: !6266)
!6270 = !DILocation(line: 3607, column: 33, scope: !6266)
!6271 = !DILocation(line: 3608, column: 20, scope: !6266)
!6272 = !DILocation(line: 3608, column: 18, scope: !6266)
!6273 = !DILocation(line: 3609, column: 7, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 3609, column: 7)
!6275 = !DILocation(line: 3609, column: 15, scope: !6274)
!6276 = !DILocation(line: 3610, column: 7, scope: !6274)
!6277 = !DILocation(line: 3610, column: 12, scope: !6274)
!6278 = !DILocation(line: 3609, column: 7, scope: !6266)
!6279 = !DILocation(line: 3611, column: 5, scope: !6274)
!6280 = !DILocation(line: 3613, column: 1, scope: !6266)
!6281 = distinct !DISubprogram(name: "extend_dependency_caches", scope: !3, file: !3, line: 3657, type: !6282, scopeLine: 3658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6282 = !DISubroutineType(types: !6283)
!6283 = !{null, !810, !1065}
!6284 = !DILocalVariable(name: "n", arg: 1, scope: !6281, file: !3, line: 3657, type: !810)
!6285 = !DILocation(line: 3657, column: 31, scope: !6281)
!6286 = !DILocalVariable(name: "create_p", arg: 2, scope: !6281, file: !3, line: 3657, type: !1065)
!6287 = !DILocation(line: 3657, column: 39, scope: !6281)
!6288 = !DILocation(line: 3659, column: 7, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 3659, column: 7)
!6290 = !DILocation(line: 3659, column: 16, scope: !6289)
!6291 = !DILocation(line: 3659, column: 19, scope: !6289)
!6292 = !DILocation(line: 3659, column: 7, scope: !6281)
!6293 = !DILocalVariable(name: "i", scope: !6294, file: !3, line: 3661, type: !810)
!6294 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 3660, column: 5)
!6295 = !DILocation(line: 3661, column: 11, scope: !6294)
!6296 = !DILocalVariable(name: "luid", scope: !6294, file: !3, line: 3661, type: !810)
!6297 = !DILocation(line: 3661, column: 14, scope: !6294)
!6298 = !DILocation(line: 3661, column: 21, scope: !6294)
!6299 = !DILocation(line: 3661, column: 34, scope: !6294)
!6300 = !DILocation(line: 3661, column: 32, scope: !6294)
!6301 = !DILocation(line: 3663, column: 31, scope: !6294)
!6302 = !DILocation(line: 3663, column: 29, scope: !6294)
!6303 = !DILocation(line: 3665, column: 33, scope: !6294)
!6304 = !DILocation(line: 3665, column: 31, scope: !6294)
!6305 = !DILocation(line: 3667, column: 31, scope: !6294)
!6306 = !DILocation(line: 3667, column: 29, scope: !6294)
!6307 = !DILocation(line: 3670, column: 11, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 3670, column: 11)
!6309 = !DILocation(line: 3670, column: 31, scope: !6308)
!6310 = !DILocation(line: 3670, column: 37, scope: !6308)
!6311 = !DILocation(line: 3670, column: 11, scope: !6294)
!6312 = !DILocation(line: 3671, column: 33, scope: !6308)
!6313 = !DILocation(line: 3671, column: 31, scope: !6308)
!6314 = !DILocation(line: 3671, column: 9, scope: !6308)
!6315 = !DILocation(line: 3674, column: 16, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 3674, column: 7)
!6317 = !DILocation(line: 3674, column: 14, scope: !6316)
!6318 = !DILocation(line: 3674, column: 12, scope: !6316)
!6319 = !DILocation(line: 3674, column: 28, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 3674, column: 7)
!6321 = !DILocation(line: 3674, column: 32, scope: !6320)
!6322 = !DILocation(line: 3674, column: 30, scope: !6320)
!6323 = !DILocation(line: 3674, column: 7, scope: !6316)
!6324 = !DILocation(line: 3676, column: 4, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 3675, column: 2)
!6326 = !DILocation(line: 3677, column: 4, scope: !6325)
!6327 = !DILocation(line: 3678, column: 4, scope: !6325)
!6328 = !DILocation(line: 3680, column: 15, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 3680, column: 15)
!6330 = !DILocation(line: 3680, column: 35, scope: !6329)
!6331 = !DILocation(line: 3680, column: 41, scope: !6329)
!6332 = !DILocation(line: 3680, column: 15, scope: !6325)
!6333 = !DILocation(line: 3681, column: 13, scope: !6329)
!6334 = !DILocation(line: 3682, column: 2, scope: !6325)
!6335 = !DILocation(line: 3674, column: 39, scope: !6320)
!6336 = !DILocation(line: 3674, column: 7, scope: !6320)
!6337 = distinct !{!6337, !6323, !6338}
!6338 = !DILocation(line: 3682, column: 2, scope: !6316)
!6339 = !DILocation(line: 3683, column: 20, scope: !6294)
!6340 = !DILocation(line: 3683, column: 18, scope: !6294)
!6341 = !DILocation(line: 3684, column: 5, scope: !6294)
!6342 = !DILocation(line: 3685, column: 1, scope: !6281)
!6343 = distinct !DISubprogram(name: "sched_deps_finish", scope: !3, file: !3, line: 3689, type: !2090, scopeLine: 3690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6344 = !DILocation(line: 3691, column: 3, scope: !6343)
!6345 = !DILocation(line: 3692, column: 3, scope: !6343)
!6346 = !DILocation(line: 3693, column: 3, scope: !6343)
!6347 = !DILocation(line: 3694, column: 3, scope: !6343)
!6348 = !DILocation(line: 3696, column: 3, scope: !6343)
!6349 = !DILocation(line: 3697, column: 14, scope: !6343)
!6350 = !DILocation(line: 3699, column: 7, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 3699, column: 7)
!6352 = !DILocation(line: 3699, column: 7, scope: !6343)
!6353 = !DILocalVariable(name: "i", scope: !6354, file: !3, line: 3701, type: !810)
!6354 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 3700, column: 5)
!6355 = !DILocation(line: 3701, column: 11, scope: !6354)
!6356 = !DILocation(line: 3703, column: 14, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 3703, column: 7)
!6358 = !DILocation(line: 3703, column: 12, scope: !6357)
!6359 = !DILocation(line: 3703, column: 19, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 3703, column: 7)
!6361 = !DILocation(line: 3703, column: 23, scope: !6360)
!6362 = !DILocation(line: 3703, column: 21, scope: !6360)
!6363 = !DILocation(line: 3703, column: 7, scope: !6357)
!6364 = !DILocation(line: 3705, column: 19, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 3704, column: 2)
!6366 = !DILocation(line: 3705, column: 41, scope: !6365)
!6367 = !DILocation(line: 3705, column: 4, scope: !6365)
!6368 = !DILocation(line: 3706, column: 19, scope: !6365)
!6369 = !DILocation(line: 3706, column: 43, scope: !6365)
!6370 = !DILocation(line: 3706, column: 4, scope: !6365)
!6371 = !DILocation(line: 3707, column: 19, scope: !6365)
!6372 = !DILocation(line: 3707, column: 41, scope: !6365)
!6373 = !DILocation(line: 3707, column: 4, scope: !6365)
!6374 = !DILocation(line: 3709, column: 15, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 3709, column: 15)
!6376 = !DILocation(line: 3709, column: 32, scope: !6375)
!6377 = !DILocation(line: 3709, column: 15, scope: !6365)
!6378 = !DILocation(line: 3710, column: 28, scope: !6375)
!6379 = !DILocation(line: 3710, column: 50, scope: !6375)
!6380 = !DILocation(line: 3710, column: 13, scope: !6375)
!6381 = !DILocation(line: 3711, column: 2, scope: !6365)
!6382 = !DILocation(line: 3703, column: 36, scope: !6360)
!6383 = !DILocation(line: 3703, column: 7, scope: !6360)
!6384 = distinct !{!6384, !6363, !6385}
!6385 = !DILocation(line: 3711, column: 2, scope: !6357)
!6386 = !DILocation(line: 3712, column: 13, scope: !6354)
!6387 = !DILocation(line: 3712, column: 7, scope: !6354)
!6388 = !DILocation(line: 3713, column: 29, scope: !6354)
!6389 = !DILocation(line: 3714, column: 13, scope: !6354)
!6390 = !DILocation(line: 3714, column: 7, scope: !6354)
!6391 = !DILocation(line: 3715, column: 31, scope: !6354)
!6392 = !DILocation(line: 3716, column: 13, scope: !6354)
!6393 = !DILocation(line: 3716, column: 7, scope: !6354)
!6394 = !DILocation(line: 3717, column: 29, scope: !6354)
!6395 = !DILocation(line: 3719, column: 11, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 3719, column: 11)
!6397 = !DILocation(line: 3719, column: 28, scope: !6396)
!6398 = !DILocation(line: 3719, column: 11, scope: !6354)
!6399 = !DILocation(line: 3721, column: 17, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 3720, column: 9)
!6401 = !DILocation(line: 3721, column: 11, scope: !6400)
!6402 = !DILocation(line: 3722, column: 33, scope: !6400)
!6403 = !DILocation(line: 3723, column: 9, scope: !6400)
!6404 = !DILocation(line: 3725, column: 5, scope: !6354)
!6405 = !DILocation(line: 3726, column: 1, scope: !6343)
!6406 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_heap_free", scope: !420, file: !420, line: 847, type: !6407, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{null, !6409}
!6409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!6410 = !DILocalVariable(name: "vec_", arg: 1, scope: !6406, file: !420, line: 847, type: !6409)
!6411 = !DILocation(line: 847, column: 1, scope: !6406)
!6412 = !DILocation(line: 847, column: 1, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6406, file: !420, line: 847, column: 1)
!6414 = distinct !DISubprogram(name: "init_deps_global", scope: !3, file: !3, line: 3732, type: !2090, scopeLine: 3733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6415 = !DILocation(line: 3734, column: 3, scope: !6414)
!6416 = !DILocation(line: 3735, column: 3, scope: !6414)
!6417 = !DILocation(line: 3736, column: 22, scope: !6414)
!6418 = !DILocation(line: 3736, column: 20, scope: !6414)
!6419 = !DILocation(line: 3737, column: 26, scope: !6414)
!6420 = !DILocation(line: 3737, column: 24, scope: !6414)
!6421 = !DILocation(line: 3738, column: 22, scope: !6414)
!6422 = !DILocation(line: 3738, column: 20, scope: !6414)
!6423 = !DILocation(line: 3739, column: 23, scope: !6414)
!6424 = !DILocation(line: 3741, column: 8, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 3741, column: 7)
!6426 = !DILocation(line: 3741, column: 23, scope: !6425)
!6427 = !DILocation(line: 3741, column: 26, scope: !6425)
!6428 = !DILocation(line: 3741, column: 7, scope: !6414)
!6429 = !DILocation(line: 3743, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 3742, column: 5)
!6431 = !DILocation(line: 3743, column: 24, scope: !6430)
!6432 = !DILocation(line: 3743, column: 35, scope: !6430)
!6433 = !DILocation(line: 3744, column: 7, scope: !6430)
!6434 = !DILocation(line: 3744, column: 24, scope: !6430)
!6435 = !DILocation(line: 3744, column: 36, scope: !6430)
!6436 = !DILocation(line: 3746, column: 7, scope: !6430)
!6437 = !DILocation(line: 3746, column: 24, scope: !6430)
!6438 = !DILocation(line: 3746, column: 37, scope: !6430)
!6439 = !DILocation(line: 3747, column: 7, scope: !6430)
!6440 = !DILocation(line: 3747, column: 24, scope: !6430)
!6441 = !DILocation(line: 3747, column: 41, scope: !6430)
!6442 = !DILocation(line: 3748, column: 7, scope: !6430)
!6443 = !DILocation(line: 3748, column: 24, scope: !6430)
!6444 = !DILocation(line: 3748, column: 37, scope: !6430)
!6445 = !DILocation(line: 3750, column: 7, scope: !6430)
!6446 = !DILocation(line: 3750, column: 24, scope: !6430)
!6447 = !DILocation(line: 3750, column: 37, scope: !6430)
!6448 = !DILocation(line: 3751, column: 7, scope: !6430)
!6449 = !DILocation(line: 3751, column: 24, scope: !6430)
!6450 = !DILocation(line: 3751, column: 33, scope: !6430)
!6451 = !DILocation(line: 3752, column: 4, scope: !6430)
!6452 = !DILocation(line: 3753, column: 1, scope: !6414)
!6453 = distinct !DISubprogram(name: "haifa_start_insn", scope: !3, file: !3, line: 1619, type: !2086, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6454 = !DILocalVariable(name: "insn", arg: 1, scope: !6453, file: !3, line: 1619, type: !839)
!6455 = !DILocation(line: 1619, column: 23, scope: !6453)
!6456 = !DILocation(line: 1621, column: 3, scope: !6453)
!6457 = !DILocation(line: 1623, column: 14, scope: !6453)
!6458 = !DILocation(line: 1623, column: 12, scope: !6453)
!6459 = !DILocation(line: 1624, column: 1, scope: !6453)
!6460 = distinct !DISubprogram(name: "haifa_finish_insn", scope: !3, file: !3, line: 1627, type: !2090, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6461 = !DILocation(line: 1629, column: 12, scope: !6460)
!6462 = !DILocation(line: 1630, column: 1, scope: !6460)
!6463 = distinct !DISubprogram(name: "haifa_note_mem_dep", scope: !3, file: !3, line: 1651, type: !2104, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6464 = !DILocalVariable(name: "mem", arg: 1, scope: !6463, file: !3, line: 1651, type: !839)
!6465 = !DILocation(line: 1651, column: 25, scope: !6463)
!6466 = !DILocalVariable(name: "pending_mem", arg: 2, scope: !6463, file: !3, line: 1651, type: !839)
!6467 = !DILocation(line: 1651, column: 34, scope: !6463)
!6468 = !DILocalVariable(name: "pending_insn", arg: 3, scope: !6463, file: !3, line: 1651, type: !839)
!6469 = !DILocation(line: 1651, column: 51, scope: !6463)
!6470 = !DILocalVariable(name: "ds", arg: 4, scope: !6463, file: !3, line: 1651, type: !809)
!6471 = !DILocation(line: 1651, column: 70, scope: !6463)
!6472 = !DILocation(line: 1653, column: 9, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1653, column: 7)
!6474 = !DILocation(line: 1653, column: 12, scope: !6473)
!6475 = !DILocation(line: 1653, column: 7, scope: !6463)
!6476 = !DILocation(line: 1655, column: 11, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 1654, column: 5)
!6478 = !DILocation(line: 1656, column: 19, scope: !6477)
!6479 = !DILocation(line: 1657, column: 5, scope: !6477)
!6480 = !DILocation(line: 1659, column: 5, scope: !6473)
!6481 = !DILocalVariable(name: "_dep", scope: !6482, file: !3, line: 1662, type: !2233)
!6482 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1661, column: 3)
!6483 = !DILocation(line: 1662, column: 13, scope: !6482)
!6484 = !DILocalVariable(name: "dep", scope: !6482, file: !3, line: 1662, type: !2232)
!6485 = !DILocation(line: 1662, column: 20, scope: !6482)
!6486 = !DILocation(line: 1664, column: 17, scope: !6482)
!6487 = !DILocation(line: 1664, column: 22, scope: !6482)
!6488 = !DILocation(line: 1664, column: 36, scope: !6482)
!6489 = !DILocation(line: 1664, column: 56, scope: !6482)
!6490 = !DILocation(line: 1664, column: 46, scope: !6482)
!6491 = !DILocation(line: 1665, column: 17, scope: !6482)
!6492 = !DILocation(line: 1665, column: 37, scope: !6482)
!6493 = !DILocation(line: 1665, column: 43, scope: !6482)
!6494 = !DILocation(line: 1665, column: 61, scope: !6482)
!6495 = !DILocation(line: 1664, column: 5, scope: !6482)
!6496 = !DILocation(line: 1666, column: 32, scope: !6482)
!6497 = !DILocation(line: 1666, column: 44, scope: !6482)
!6498 = !DILocation(line: 1666, column: 57, scope: !6482)
!6499 = !DILocation(line: 1666, column: 5, scope: !6482)
!6500 = !DILocation(line: 1669, column: 1, scope: !6463)
!6501 = distinct !DISubprogram(name: "haifa_note_dep", scope: !3, file: !3, line: 1672, type: !2108, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6502 = !DILocalVariable(name: "elem", arg: 1, scope: !6501, file: !3, line: 1672, type: !839)
!6503 = !DILocation(line: 1672, column: 21, scope: !6501)
!6504 = !DILocalVariable(name: "ds", arg: 2, scope: !6501, file: !3, line: 1672, type: !809)
!6505 = !DILocation(line: 1672, column: 32, scope: !6501)
!6506 = !DILocalVariable(name: "_dep", scope: !6501, file: !3, line: 1674, type: !2233)
!6507 = !DILocation(line: 1674, column: 11, scope: !6501)
!6508 = !DILocalVariable(name: "dep", scope: !6501, file: !3, line: 1675, type: !2231)
!6509 = !DILocation(line: 1675, column: 9, scope: !6501)
!6510 = !DILocation(line: 1677, column: 13, scope: !6501)
!6511 = !DILocation(line: 1677, column: 18, scope: !6501)
!6512 = !DILocation(line: 1677, column: 24, scope: !6501)
!6513 = !DILocation(line: 1677, column: 44, scope: !6501)
!6514 = !DILocation(line: 1677, column: 34, scope: !6501)
!6515 = !DILocation(line: 1677, column: 3, scope: !6501)
!6516 = !DILocation(line: 1678, column: 30, scope: !6501)
!6517 = !DILocation(line: 1678, column: 3, scope: !6501)
!6518 = !DILocation(line: 1679, column: 1, scope: !6501)
!6519 = distinct !DISubprogram(name: "finish_deps_global", scope: !3, file: !3, line: 3758, type: !2090, scopeLine: 3759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6520 = !DILocation(line: 3760, column: 3, scope: !6519)
!6521 = !DILocation(line: 3761, column: 3, scope: !6519)
!6522 = !DILocation(line: 3762, column: 3, scope: !6519)
!6523 = !DILocation(line: 3763, column: 1, scope: !6519)
!6524 = distinct !DISubprogram(name: "estimate_dep_weak", scope: !3, file: !3, line: 3767, type: !6525, scopeLine: 3768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6525 = !DISubroutineType(types: !6526)
!6526 = !{!2000, !839, !839}
!6527 = !DILocalVariable(name: "mem1", arg: 1, scope: !6524, file: !3, line: 3767, type: !839)
!6528 = !DILocation(line: 3767, column: 24, scope: !6524)
!6529 = !DILocalVariable(name: "mem2", arg: 2, scope: !6524, file: !3, line: 3767, type: !839)
!6530 = !DILocation(line: 3767, column: 34, scope: !6524)
!6531 = !DILocalVariable(name: "r1", scope: !6524, file: !3, line: 3769, type: !839)
!6532 = !DILocation(line: 3769, column: 7, scope: !6524)
!6533 = !DILocalVariable(name: "r2", scope: !6524, file: !3, line: 3769, type: !839)
!6534 = !DILocation(line: 3769, column: 11, scope: !6524)
!6535 = !DILocation(line: 3771, column: 7, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 3771, column: 7)
!6537 = !DILocation(line: 3771, column: 15, scope: !6536)
!6538 = !DILocation(line: 3771, column: 12, scope: !6536)
!6539 = !DILocation(line: 3771, column: 7, scope: !6524)
!6540 = !DILocation(line: 3773, column: 5, scope: !6536)
!6541 = !DILocation(line: 3775, column: 8, scope: !6524)
!6542 = !DILocation(line: 3775, column: 6, scope: !6524)
!6543 = !DILocation(line: 3776, column: 8, scope: !6524)
!6544 = !DILocation(line: 3776, column: 6, scope: !6524)
!6545 = !DILocation(line: 3778, column: 7, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 3778, column: 7)
!6547 = !DILocation(line: 3778, column: 13, scope: !6546)
!6548 = !DILocation(line: 3778, column: 10, scope: !6546)
!6549 = !DILocation(line: 3779, column: 7, scope: !6546)
!6550 = !DILocation(line: 3779, column: 11, scope: !6546)
!6551 = !DILocation(line: 3779, column: 22, scope: !6546)
!6552 = !DILocation(line: 3779, column: 25, scope: !6546)
!6553 = !DILocation(line: 3780, column: 4, scope: !6546)
!6554 = !DILocation(line: 3780, column: 7, scope: !6546)
!6555 = !DILocation(line: 3780, column: 21, scope: !6546)
!6556 = !DILocation(line: 3780, column: 18, scope: !6546)
!6557 = !DILocation(line: 3778, column: 7, scope: !6524)
!6558 = !DILocation(line: 3782, column: 5, scope: !6546)
!6559 = !DILocation(line: 3783, column: 13, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 3783, column: 12)
!6561 = !DILocation(line: 3783, column: 24, scope: !6560)
!6562 = !DILocation(line: 3783, column: 28, scope: !6560)
!6563 = !DILocation(line: 3784, column: 5, scope: !6560)
!6564 = !DILocation(line: 3784, column: 10, scope: !6560)
!6565 = !DILocation(line: 3784, column: 21, scope: !6560)
!6566 = !DILocation(line: 3784, column: 24, scope: !6560)
!6567 = !DILocation(line: 3783, column: 12, scope: !6546)
!6568 = !DILocation(line: 3787, column: 5, scope: !6560)
!6569 = !DILocation(line: 3790, column: 5, scope: !6560)
!6570 = !DILocation(line: 3791, column: 1, scope: !6524)
!6571 = distinct !DISubprogram(name: "rhs_regno", scope: !385, file: !385, line: 1051, type: !6572, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6572 = !DISubroutineType(types: !6573)
!6573 = !{!7, !2049}
!6574 = !DILocalVariable(name: "x", arg: 1, scope: !6571, file: !385, line: 1051, type: !2049)
!6575 = !DILocation(line: 1051, column: 22, scope: !6571)
!6576 = !DILocation(line: 1053, column: 10, scope: !6571)
!6577 = !DILocation(line: 1053, column: 3, scope: !6571)
!6578 = distinct !DISubprogram(name: "add_dependence", scope: !3, file: !3, line: 3797, type: !6579, scopeLine: 3798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{null, !839, !839, !384}
!6581 = !DILocalVariable(name: "insn", arg: 1, scope: !6578, file: !3, line: 3797, type: !839)
!6582 = !DILocation(line: 3797, column: 21, scope: !6578)
!6583 = !DILocalVariable(name: "elem", arg: 2, scope: !6578, file: !3, line: 3797, type: !839)
!6584 = !DILocation(line: 3797, column: 31, scope: !6578)
!6585 = !DILocalVariable(name: "dep_type", arg: 3, scope: !6578, file: !3, line: 3797, type: !384)
!6586 = !DILocation(line: 3797, column: 51, scope: !6578)
!6587 = !DILocalVariable(name: "ds", scope: !6578, file: !3, line: 3799, type: !809)
!6588 = !DILocation(line: 3799, column: 8, scope: !6578)
!6589 = !DILocalVariable(name: "internal", scope: !6578, file: !3, line: 3800, type: !1065)
!6590 = !DILocation(line: 3800, column: 8, scope: !6578)
!6591 = !DILocation(line: 3802, column: 7, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 3802, column: 7)
!6593 = !DILocation(line: 3802, column: 16, scope: !6592)
!6594 = !DILocation(line: 3802, column: 7, scope: !6578)
!6595 = !DILocation(line: 3803, column: 8, scope: !6592)
!6596 = !DILocation(line: 3803, column: 5, scope: !6592)
!6597 = !DILocation(line: 3804, column: 12, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 3804, column: 12)
!6599 = !DILocation(line: 3804, column: 21, scope: !6598)
!6600 = !DILocation(line: 3804, column: 12, scope: !6592)
!6601 = !DILocation(line: 3805, column: 8, scope: !6598)
!6602 = !DILocation(line: 3805, column: 5, scope: !6598)
!6603 = !DILocation(line: 3808, column: 7, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 3807, column: 5)
!6605 = !DILocation(line: 3809, column: 10, scope: !6604)
!6606 = !DILocation(line: 3814, column: 14, scope: !6578)
!6607 = !DILocation(line: 3814, column: 23, scope: !6578)
!6608 = !DILocation(line: 3814, column: 12, scope: !6578)
!6609 = !DILocation(line: 3815, column: 7, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 3815, column: 7)
!6611 = !DILocation(line: 3815, column: 7, scope: !6578)
!6612 = !DILocation(line: 3816, column: 5, scope: !6610)
!6613 = !DILocation(line: 3818, column: 16, scope: !6610)
!6614 = !DILocation(line: 3818, column: 14, scope: !6610)
!6615 = !DILocation(line: 3820, column: 13, scope: !6578)
!6616 = !DILocation(line: 3820, column: 19, scope: !6578)
!6617 = !DILocation(line: 3820, column: 3, scope: !6578)
!6618 = !DILocation(line: 3821, column: 8, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 3821, column: 7)
!6620 = !DILocation(line: 3821, column: 7, scope: !6578)
!6621 = !DILocation(line: 3822, column: 14, scope: !6619)
!6622 = !DILocation(line: 3822, column: 5, scope: !6619)
!6623 = !DILocation(line: 3823, column: 1, scope: !6578)
!6624 = distinct !DISubprogram(name: "note_dep", scope: !3, file: !3, line: 1710, type: !2108, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6625 = !DILocalVariable(name: "e", arg: 1, scope: !6624, file: !3, line: 1710, type: !839)
!6626 = !DILocation(line: 1710, column: 15, scope: !6624)
!6627 = !DILocalVariable(name: "ds", arg: 2, scope: !6624, file: !3, line: 1710, type: !809)
!6628 = !DILocation(line: 1710, column: 23, scope: !6624)
!6629 = !DILocation(line: 1712, column: 7, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 1712, column: 7)
!6631 = !DILocation(line: 1712, column: 24, scope: !6630)
!6632 = !DILocation(line: 1712, column: 7, scope: !6624)
!6633 = !DILocation(line: 1713, column: 5, scope: !6630)
!6634 = !DILocation(line: 1713, column: 22, scope: !6630)
!6635 = !DILocation(line: 1713, column: 32, scope: !6630)
!6636 = !DILocation(line: 1713, column: 35, scope: !6630)
!6637 = !DILocation(line: 1714, column: 1, scope: !6624)
!6638 = distinct !DISubprogram(name: "get_dep_weak_1", scope: !3, file: !3, line: 3827, type: !6639, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{!2000, !809, !809}
!6641 = !DILocalVariable(name: "ds", arg: 1, scope: !6638, file: !3, line: 3827, type: !809)
!6642 = !DILocation(line: 3827, column: 22, scope: !6638)
!6643 = !DILocalVariable(name: "type", arg: 2, scope: !6638, file: !3, line: 3827, type: !809)
!6644 = !DILocation(line: 3827, column: 31, scope: !6638)
!6645 = !DILocation(line: 3829, column: 8, scope: !6638)
!6646 = !DILocation(line: 3829, column: 13, scope: !6638)
!6647 = !DILocation(line: 3829, column: 11, scope: !6638)
!6648 = !DILocation(line: 3829, column: 6, scope: !6638)
!6649 = !DILocation(line: 3831, column: 11, scope: !6638)
!6650 = !DILocation(line: 3831, column: 3, scope: !6638)
!6651 = !DILocation(line: 3833, column: 25, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 3832, column: 5)
!6653 = !DILocation(line: 3833, column: 53, scope: !6652)
!6654 = !DILocation(line: 3834, column: 25, scope: !6652)
!6655 = !DILocation(line: 3834, column: 53, scope: !6652)
!6656 = !DILocation(line: 3835, column: 28, scope: !6652)
!6657 = !DILocation(line: 3835, column: 59, scope: !6652)
!6658 = !DILocation(line: 3836, column: 28, scope: !6652)
!6659 = !DILocation(line: 3836, column: 59, scope: !6652)
!6660 = !DILocation(line: 3837, column: 14, scope: !6652)
!6661 = !DILocation(line: 3838, column: 5, scope: !6652)
!6662 = !DILocation(line: 3840, column: 17, scope: !6638)
!6663 = !DILocation(line: 3840, column: 3, scope: !6638)
!6664 = distinct !DISubprogram(name: "get_dep_weak", scope: !3, file: !3, line: 3844, type: !6639, scopeLine: 3845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6665 = !DILocalVariable(name: "ds", arg: 1, scope: !6664, file: !3, line: 3844, type: !809)
!6666 = !DILocation(line: 3844, column: 20, scope: !6664)
!6667 = !DILocalVariable(name: "type", arg: 2, scope: !6664, file: !3, line: 3844, type: !809)
!6668 = !DILocation(line: 3844, column: 29, scope: !6664)
!6669 = !DILocalVariable(name: "dw", scope: !6664, file: !3, line: 3846, type: !2000)
!6670 = !DILocation(line: 3846, column: 8, scope: !6664)
!6671 = !DILocation(line: 3846, column: 29, scope: !6664)
!6672 = !DILocation(line: 3846, column: 33, scope: !6664)
!6673 = !DILocation(line: 3846, column: 13, scope: !6664)
!6674 = !DILocation(line: 3848, column: 3, scope: !6664)
!6675 = !DILocation(line: 3849, column: 10, scope: !6664)
!6676 = !DILocation(line: 3849, column: 3, scope: !6664)
!6677 = distinct !DISubprogram(name: "set_dep_weak", scope: !3, file: !3, line: 3855, type: !6678, scopeLine: 3856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{!809, !809, !809, !2000}
!6680 = !DILocalVariable(name: "ds", arg: 1, scope: !6677, file: !3, line: 3855, type: !809)
!6681 = !DILocation(line: 3855, column: 20, scope: !6677)
!6682 = !DILocalVariable(name: "type", arg: 2, scope: !6677, file: !3, line: 3855, type: !809)
!6683 = !DILocation(line: 3855, column: 29, scope: !6677)
!6684 = !DILocalVariable(name: "dw", arg: 3, scope: !6677, file: !3, line: 3855, type: !2000)
!6685 = !DILocation(line: 3855, column: 40, scope: !6677)
!6686 = !DILocation(line: 3857, column: 3, scope: !6677)
!6687 = !DILocation(line: 3859, column: 10, scope: !6677)
!6688 = !DILocation(line: 3859, column: 9, scope: !6677)
!6689 = !DILocation(line: 3859, column: 6, scope: !6677)
!6690 = !DILocation(line: 3860, column: 11, scope: !6677)
!6691 = !DILocation(line: 3860, column: 3, scope: !6677)
!6692 = !DILocation(line: 3862, column: 36, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 3861, column: 5)
!6694 = !DILocation(line: 3862, column: 40, scope: !6693)
!6695 = !DILocation(line: 3862, column: 25, scope: !6693)
!6696 = !DILocation(line: 3862, column: 67, scope: !6693)
!6697 = !DILocation(line: 3863, column: 36, scope: !6693)
!6698 = !DILocation(line: 3863, column: 40, scope: !6693)
!6699 = !DILocation(line: 3863, column: 25, scope: !6693)
!6700 = !DILocation(line: 3863, column: 67, scope: !6693)
!6701 = !DILocation(line: 3864, column: 39, scope: !6693)
!6702 = !DILocation(line: 3864, column: 43, scope: !6693)
!6703 = !DILocation(line: 3864, column: 28, scope: !6693)
!6704 = !DILocation(line: 3864, column: 73, scope: !6693)
!6705 = !DILocation(line: 3865, column: 39, scope: !6693)
!6706 = !DILocation(line: 3865, column: 43, scope: !6693)
!6707 = !DILocation(line: 3865, column: 28, scope: !6693)
!6708 = !DILocation(line: 3865, column: 73, scope: !6693)
!6709 = !DILocation(line: 3866, column: 14, scope: !6693)
!6710 = !DILocation(line: 3867, column: 5, scope: !6693)
!6711 = !DILocation(line: 3868, column: 10, scope: !6677)
!6712 = !DILocation(line: 3868, column: 3, scope: !6677)
!6713 = distinct !DISubprogram(name: "ds_merge", scope: !3, file: !3, line: 3927, type: !6714, scopeLine: 3928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{!809, !809, !809}
!6716 = !DILocalVariable(name: "ds1", arg: 1, scope: !6713, file: !3, line: 3927, type: !809)
!6717 = !DILocation(line: 3927, column: 16, scope: !6713)
!6718 = !DILocalVariable(name: "ds2", arg: 2, scope: !6713, file: !3, line: 3927, type: !809)
!6719 = !DILocation(line: 3927, column: 26, scope: !6713)
!6720 = !DILocation(line: 3929, column: 22, scope: !6713)
!6721 = !DILocation(line: 3929, column: 27, scope: !6713)
!6722 = !DILocation(line: 3929, column: 10, scope: !6713)
!6723 = !DILocation(line: 3929, column: 3, scope: !6713)
!6724 = distinct !DISubprogram(name: "ds_merge_1", scope: !3, file: !3, line: 3876, type: !6725, scopeLine: 3877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{!809, !809, !809, !1065}
!6727 = !DILocalVariable(name: "ds1", arg: 1, scope: !6724, file: !3, line: 3876, type: !809)
!6728 = !DILocation(line: 3876, column: 18, scope: !6724)
!6729 = !DILocalVariable(name: "ds2", arg: 2, scope: !6724, file: !3, line: 3876, type: !809)
!6730 = !DILocation(line: 3876, column: 28, scope: !6724)
!6731 = !DILocalVariable(name: "max_p", arg: 3, scope: !6724, file: !3, line: 3876, type: !1065)
!6732 = !DILocation(line: 3876, column: 38, scope: !6724)
!6733 = !DILocalVariable(name: "ds", scope: !6724, file: !3, line: 3878, type: !809)
!6734 = !DILocation(line: 3878, column: 8, scope: !6724)
!6735 = !DILocalVariable(name: "t", scope: !6724, file: !3, line: 3878, type: !809)
!6736 = !DILocation(line: 3878, column: 12, scope: !6724)
!6737 = !DILocation(line: 3880, column: 3, scope: !6724)
!6738 = !DILocation(line: 3882, column: 9, scope: !6724)
!6739 = !DILocation(line: 3882, column: 13, scope: !6724)
!6740 = !DILocation(line: 3882, column: 29, scope: !6724)
!6741 = !DILocation(line: 3882, column: 33, scope: !6724)
!6742 = !DILocation(line: 3882, column: 26, scope: !6724)
!6743 = !DILocation(line: 3882, column: 6, scope: !6724)
!6744 = !DILocation(line: 3884, column: 5, scope: !6724)
!6745 = !DILocation(line: 3885, column: 3, scope: !6724)
!6746 = !DILocation(line: 3887, column: 12, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 3887, column: 11)
!6748 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 3886, column: 5)
!6749 = !DILocation(line: 3887, column: 18, scope: !6747)
!6750 = !DILocation(line: 3887, column: 16, scope: !6747)
!6751 = !DILocation(line: 3887, column: 21, scope: !6747)
!6752 = !DILocation(line: 3887, column: 26, scope: !6747)
!6753 = !DILocation(line: 3887, column: 32, scope: !6747)
!6754 = !DILocation(line: 3887, column: 30, scope: !6747)
!6755 = !DILocation(line: 3887, column: 11, scope: !6748)
!6756 = !DILocation(line: 3888, column: 8, scope: !6747)
!6757 = !DILocation(line: 3888, column: 14, scope: !6747)
!6758 = !DILocation(line: 3888, column: 12, scope: !6747)
!6759 = !DILocation(line: 3888, column: 5, scope: !6747)
!6760 = !DILocation(line: 3888, column: 2, scope: !6747)
!6761 = !DILocation(line: 3889, column: 18, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 3889, column: 16)
!6763 = !DILocation(line: 3889, column: 24, scope: !6762)
!6764 = !DILocation(line: 3889, column: 22, scope: !6762)
!6765 = !DILocation(line: 3889, column: 27, scope: !6762)
!6766 = !DILocation(line: 3889, column: 31, scope: !6762)
!6767 = !DILocation(line: 3889, column: 37, scope: !6762)
!6768 = !DILocation(line: 3889, column: 35, scope: !6762)
!6769 = !DILocation(line: 3889, column: 16, scope: !6747)
!6770 = !DILocation(line: 3890, column: 8, scope: !6762)
!6771 = !DILocation(line: 3890, column: 14, scope: !6762)
!6772 = !DILocation(line: 3890, column: 12, scope: !6762)
!6773 = !DILocation(line: 3890, column: 5, scope: !6762)
!6774 = !DILocation(line: 3890, column: 2, scope: !6762)
!6775 = !DILocation(line: 3891, column: 17, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3891, column: 16)
!6777 = !DILocation(line: 3891, column: 23, scope: !6776)
!6778 = !DILocation(line: 3891, column: 21, scope: !6776)
!6779 = !DILocation(line: 3891, column: 26, scope: !6776)
!6780 = !DILocation(line: 3891, column: 30, scope: !6776)
!6781 = !DILocation(line: 3891, column: 36, scope: !6776)
!6782 = !DILocation(line: 3891, column: 34, scope: !6776)
!6783 = !DILocation(line: 3891, column: 16, scope: !6762)
!6784 = !DILocalVariable(name: "dw1", scope: !6785, file: !3, line: 3893, type: !2000)
!6785 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 3892, column: 2)
!6786 = !DILocation(line: 3893, column: 9, scope: !6785)
!6787 = !DILocation(line: 3893, column: 29, scope: !6785)
!6788 = !DILocation(line: 3893, column: 34, scope: !6785)
!6789 = !DILocation(line: 3893, column: 15, scope: !6785)
!6790 = !DILocalVariable(name: "dw2", scope: !6785, file: !3, line: 3894, type: !2000)
!6791 = !DILocation(line: 3894, column: 9, scope: !6785)
!6792 = !DILocation(line: 3894, column: 29, scope: !6785)
!6793 = !DILocation(line: 3894, column: 34, scope: !6785)
!6794 = !DILocation(line: 3894, column: 15, scope: !6785)
!6795 = !DILocalVariable(name: "dw", scope: !6785, file: !3, line: 3895, type: !809)
!6796 = !DILocation(line: 3895, column: 9, scope: !6785)
!6797 = !DILocation(line: 3897, column: 9, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 3897, column: 8)
!6799 = !DILocation(line: 3897, column: 8, scope: !6785)
!6800 = !DILocation(line: 3899, column: 21, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 3898, column: 6)
!6802 = !DILocation(line: 3899, column: 36, scope: !6801)
!6803 = !DILocation(line: 3899, column: 26, scope: !6801)
!6804 = !DILocation(line: 3899, column: 11, scope: !6801)
!6805 = !DILocation(line: 3900, column: 11, scope: !6801)
!6806 = !DILocation(line: 3901, column: 12, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 3901, column: 12)
!6808 = !DILocation(line: 3901, column: 15, scope: !6807)
!6809 = !DILocation(line: 3901, column: 12, scope: !6801)
!6810 = !DILocation(line: 3902, column: 6, scope: !6807)
!6811 = !DILocation(line: 3902, column: 3, scope: !6807)
!6812 = !DILocation(line: 3903, column: 6, scope: !6801)
!6813 = !DILocation(line: 3906, column: 12, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 3906, column: 12)
!6815 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 3905, column: 6)
!6816 = !DILocation(line: 3906, column: 19, scope: !6814)
!6817 = !DILocation(line: 3906, column: 16, scope: !6814)
!6818 = !DILocation(line: 3906, column: 12, scope: !6815)
!6819 = !DILocation(line: 3907, column: 8, scope: !6814)
!6820 = !DILocation(line: 3907, column: 6, scope: !6814)
!6821 = !DILocation(line: 3907, column: 3, scope: !6814)
!6822 = !DILocation(line: 3909, column: 8, scope: !6814)
!6823 = !DILocation(line: 3909, column: 6, scope: !6814)
!6824 = !DILocation(line: 3912, column: 23, scope: !6785)
!6825 = !DILocation(line: 3912, column: 27, scope: !6785)
!6826 = !DILocation(line: 3912, column: 37, scope: !6785)
!6827 = !DILocation(line: 3912, column: 9, scope: !6785)
!6828 = !DILocation(line: 3912, column: 7, scope: !6785)
!6829 = !DILocation(line: 3913, column: 2, scope: !6785)
!6830 = !DILocation(line: 3915, column: 11, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 3915, column: 11)
!6832 = !DILocation(line: 3915, column: 13, scope: !6831)
!6833 = !DILocation(line: 3915, column: 11, scope: !6748)
!6834 = !DILocation(line: 3916, column: 2, scope: !6831)
!6835 = !DILocation(line: 3917, column: 9, scope: !6748)
!6836 = !DILocation(line: 3918, column: 5, scope: !6748)
!6837 = distinct !{!6837, !6745, !6838}
!6838 = !DILocation(line: 3919, column: 11, scope: !6724)
!6839 = !DILocation(line: 3921, column: 10, scope: !6724)
!6840 = !DILocation(line: 3921, column: 3, scope: !6724)
!6841 = distinct !DISubprogram(name: "ds_full_merge", scope: !3, file: !3, line: 3934, type: !6842, scopeLine: 3935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6842 = !DISubroutineType(types: !6843)
!6843 = !{!809, !809, !809, !839, !839}
!6844 = !DILocalVariable(name: "ds", arg: 1, scope: !6841, file: !3, line: 3934, type: !809)
!6845 = !DILocation(line: 3934, column: 21, scope: !6841)
!6846 = !DILocalVariable(name: "ds2", arg: 2, scope: !6841, file: !3, line: 3934, type: !809)
!6847 = !DILocation(line: 3934, column: 30, scope: !6841)
!6848 = !DILocalVariable(name: "mem1", arg: 3, scope: !6841, file: !3, line: 3934, type: !839)
!6849 = !DILocation(line: 3934, column: 39, scope: !6841)
!6850 = !DILocalVariable(name: "mem2", arg: 4, scope: !6841, file: !3, line: 3934, type: !839)
!6851 = !DILocation(line: 3934, column: 49, scope: !6841)
!6852 = !DILocalVariable(name: "new_status", scope: !6841, file: !3, line: 3936, type: !809)
!6853 = !DILocation(line: 3936, column: 8, scope: !6841)
!6854 = !DILocation(line: 3936, column: 21, scope: !6841)
!6855 = !DILocation(line: 3936, column: 26, scope: !6841)
!6856 = !DILocation(line: 3936, column: 24, scope: !6841)
!6857 = !DILocation(line: 3938, column: 7, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 3938, column: 7)
!6859 = !DILocation(line: 3938, column: 18, scope: !6858)
!6860 = !DILocation(line: 3938, column: 7, scope: !6841)
!6861 = !DILocation(line: 3940, column: 12, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 3940, column: 11)
!6863 = distinct !DILexicalBlock(scope: !6858, file: !3, line: 3939, column: 5)
!6864 = !DILocation(line: 3940, column: 15, scope: !6862)
!6865 = !DILocation(line: 3940, column: 20, scope: !6862)
!6866 = !DILocation(line: 3940, column: 23, scope: !6862)
!6867 = !DILocation(line: 3941, column: 4, scope: !6862)
!6868 = !DILocation(line: 3941, column: 8, scope: !6862)
!6869 = !DILocation(line: 3941, column: 12, scope: !6862)
!6870 = !DILocation(line: 3941, column: 17, scope: !6862)
!6871 = !DILocation(line: 3941, column: 21, scope: !6862)
!6872 = !DILocation(line: 3940, column: 11, scope: !6863)
!6873 = !DILocation(line: 3943, column: 13, scope: !6862)
!6874 = !DILocation(line: 3943, column: 2, scope: !6862)
!6875 = !DILocation(line: 3947, column: 8, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 3947, column: 8)
!6877 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 3945, column: 2)
!6878 = !DILocation(line: 3947, column: 8, scope: !6877)
!6879 = !DILocalVariable(name: "dw", scope: !6880, file: !3, line: 3949, type: !2000)
!6880 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 3948, column: 6)
!6881 = !DILocation(line: 3949, column: 13, scope: !6880)
!6882 = !DILocation(line: 3951, column: 32, scope: !6880)
!6883 = !DILocation(line: 3951, column: 38, scope: !6880)
!6884 = !DILocation(line: 3951, column: 13, scope: !6880)
!6885 = !DILocation(line: 3951, column: 11, scope: !6880)
!6886 = !DILocation(line: 3952, column: 27, scope: !6880)
!6887 = !DILocation(line: 3952, column: 43, scope: !6880)
!6888 = !DILocation(line: 3952, column: 13, scope: !6880)
!6889 = !DILocation(line: 3952, column: 11, scope: !6880)
!6890 = !DILocation(line: 3953, column: 6, scope: !6880)
!6891 = !DILocation(line: 3955, column: 9, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 3955, column: 8)
!6893 = !DILocation(line: 3955, column: 8, scope: !6877)
!6894 = !DILocation(line: 3956, column: 19, scope: !6892)
!6895 = !DILocation(line: 3956, column: 17, scope: !6892)
!6896 = !DILocation(line: 3956, column: 6, scope: !6892)
!6897 = !DILocation(line: 3957, column: 14, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 3957, column: 13)
!6899 = !DILocation(line: 3957, column: 13, scope: !6892)
!6900 = !DILocation(line: 3958, column: 19, scope: !6898)
!6901 = !DILocation(line: 3958, column: 17, scope: !6898)
!6902 = !DILocation(line: 3958, column: 6, scope: !6898)
!6903 = !DILocation(line: 3960, column: 29, scope: !6898)
!6904 = !DILocation(line: 3960, column: 34, scope: !6898)
!6905 = !DILocation(line: 3960, column: 19, scope: !6898)
!6906 = !DILocation(line: 3960, column: 17, scope: !6898)
!6907 = !DILocation(line: 3962, column: 5, scope: !6863)
!6908 = !DILocation(line: 3964, column: 10, scope: !6841)
!6909 = !DILocation(line: 3964, column: 3, scope: !6841)
!6910 = distinct !DISubprogram(name: "ds_max_merge", scope: !3, file: !3, line: 3970, type: !6714, scopeLine: 3971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6911 = !DILocalVariable(name: "ds1", arg: 1, scope: !6910, file: !3, line: 3970, type: !809)
!6912 = !DILocation(line: 3970, column: 20, scope: !6910)
!6913 = !DILocalVariable(name: "ds2", arg: 2, scope: !6910, file: !3, line: 3970, type: !809)
!6914 = !DILocation(line: 3970, column: 30, scope: !6910)
!6915 = !DILocation(line: 3972, column: 7, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 3972, column: 7)
!6917 = !DILocation(line: 3972, column: 11, scope: !6916)
!6918 = !DILocation(line: 3972, column: 16, scope: !6916)
!6919 = !DILocation(line: 3972, column: 19, scope: !6916)
!6920 = !DILocation(line: 3972, column: 23, scope: !6916)
!6921 = !DILocation(line: 3972, column: 7, scope: !6910)
!6922 = !DILocation(line: 3973, column: 5, scope: !6916)
!6923 = !DILocation(line: 3975, column: 7, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 3975, column: 7)
!6925 = !DILocation(line: 3975, column: 11, scope: !6924)
!6926 = !DILocation(line: 3975, column: 16, scope: !6924)
!6927 = !DILocation(line: 3975, column: 19, scope: !6924)
!6928 = !DILocation(line: 3975, column: 23, scope: !6924)
!6929 = !DILocation(line: 3975, column: 7, scope: !6910)
!6930 = !DILocation(line: 3976, column: 12, scope: !6924)
!6931 = !DILocation(line: 3976, column: 5, scope: !6924)
!6932 = !DILocation(line: 3978, column: 7, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 3978, column: 7)
!6934 = !DILocation(line: 3978, column: 11, scope: !6933)
!6935 = !DILocation(line: 3978, column: 16, scope: !6933)
!6936 = !DILocation(line: 3978, column: 19, scope: !6933)
!6937 = !DILocation(line: 3978, column: 23, scope: !6933)
!6938 = !DILocation(line: 3978, column: 7, scope: !6910)
!6939 = !DILocation(line: 3979, column: 12, scope: !6933)
!6940 = !DILocation(line: 3979, column: 5, scope: !6933)
!6941 = !DILocation(line: 3981, column: 22, scope: !6910)
!6942 = !DILocation(line: 3981, column: 27, scope: !6910)
!6943 = !DILocation(line: 3981, column: 10, scope: !6910)
!6944 = !DILocation(line: 3981, column: 3, scope: !6910)
!6945 = !DILocation(line: 3982, column: 1, scope: !6910)
!6946 = distinct !DISubprogram(name: "ds_weak", scope: !3, file: !3, line: 3987, type: !6947, scopeLine: 3988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6947 = !DISubroutineType(types: !6948)
!6948 = !{!2000, !809}
!6949 = !DILocalVariable(name: "ds", arg: 1, scope: !6946, file: !3, line: 3987, type: !809)
!6950 = !DILocation(line: 3987, column: 15, scope: !6946)
!6951 = !DILocalVariable(name: "res", scope: !6946, file: !3, line: 3989, type: !809)
!6952 = !DILocation(line: 3989, column: 8, scope: !6946)
!6953 = !DILocalVariable(name: "dt", scope: !6946, file: !3, line: 3989, type: !809)
!6954 = !DILocation(line: 3989, column: 17, scope: !6946)
!6955 = !DILocalVariable(name: "n", scope: !6946, file: !3, line: 3990, type: !810)
!6956 = !DILocation(line: 3990, column: 7, scope: !6946)
!6957 = !DILocation(line: 3992, column: 6, scope: !6946)
!6958 = !DILocation(line: 3993, column: 3, scope: !6946)
!6959 = !DILocation(line: 3995, column: 11, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 3995, column: 11)
!6961 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 3994, column: 5)
!6962 = !DILocation(line: 3995, column: 16, scope: !6960)
!6963 = !DILocation(line: 3995, column: 14, scope: !6960)
!6964 = !DILocation(line: 3995, column: 11, scope: !6961)
!6965 = !DILocation(line: 3997, column: 32, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 3996, column: 2)
!6967 = !DILocation(line: 3997, column: 36, scope: !6966)
!6968 = !DILocation(line: 3997, column: 18, scope: !6966)
!6969 = !DILocation(line: 3997, column: 8, scope: !6966)
!6970 = !DILocation(line: 3998, column: 5, scope: !6966)
!6971 = !DILocation(line: 3999, column: 2, scope: !6966)
!6972 = !DILocation(line: 4001, column: 11, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 4001, column: 11)
!6974 = !DILocation(line: 4001, column: 14, scope: !6973)
!6975 = !DILocation(line: 4001, column: 11, scope: !6961)
!6976 = !DILocation(line: 4002, column: 2, scope: !6973)
!6977 = !DILocation(line: 4003, column: 10, scope: !6961)
!6978 = !DILocation(line: 4004, column: 5, scope: !6961)
!6979 = distinct !{!6979, !6958, !6980}
!6980 = !DILocation(line: 4005, column: 11, scope: !6946)
!6981 = !DILocation(line: 4007, column: 3, scope: !6946)
!6982 = !DILocation(line: 4008, column: 3, scope: !6946)
!6983 = !DILocation(line: 4008, column: 10, scope: !6946)
!6984 = !DILocation(line: 4009, column: 9, scope: !6946)
!6985 = distinct !{!6985, !6982, !6986}
!6986 = !DILocation(line: 4009, column: 12, scope: !6946)
!6987 = !DILocation(line: 4011, column: 7, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 4011, column: 7)
!6989 = !DILocation(line: 4011, column: 11, scope: !6988)
!6990 = !DILocation(line: 4011, column: 7, scope: !6946)
!6991 = !DILocation(line: 4012, column: 9, scope: !6988)
!6992 = !DILocation(line: 4012, column: 5, scope: !6988)
!6993 = !DILocation(line: 4014, column: 3, scope: !6946)
!6994 = !DILocation(line: 4016, column: 17, scope: !6946)
!6995 = !DILocation(line: 4016, column: 3, scope: !6946)
!6996 = distinct !DISubprogram(name: "ds_get_speculation_types", scope: !3, file: !3, line: 4021, type: !6997, scopeLine: 4022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!6997 = !DISubroutineType(types: !6998)
!6998 = !{!809, !809}
!6999 = !DILocalVariable(name: "ds", arg: 1, scope: !6996, file: !3, line: 4021, type: !809)
!7000 = !DILocation(line: 4021, column: 32, scope: !6996)
!7001 = !DILocation(line: 4023, column: 7, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 4023, column: 7)
!7003 = !DILocation(line: 4023, column: 10, scope: !7002)
!7004 = !DILocation(line: 4023, column: 7, scope: !6996)
!7005 = !DILocation(line: 4024, column: 8, scope: !7002)
!7006 = !DILocation(line: 4024, column: 5, scope: !7002)
!7007 = !DILocation(line: 4025, column: 7, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 4025, column: 7)
!7009 = !DILocation(line: 4025, column: 10, scope: !7008)
!7010 = !DILocation(line: 4025, column: 7, scope: !6996)
!7011 = !DILocation(line: 4026, column: 8, scope: !7008)
!7012 = !DILocation(line: 4026, column: 5, scope: !7008)
!7013 = !DILocation(line: 4027, column: 7, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 4027, column: 7)
!7015 = !DILocation(line: 4027, column: 10, scope: !7014)
!7016 = !DILocation(line: 4027, column: 7, scope: !6996)
!7017 = !DILocation(line: 4028, column: 8, scope: !7014)
!7018 = !DILocation(line: 4028, column: 5, scope: !7014)
!7019 = !DILocation(line: 4029, column: 7, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 4029, column: 7)
!7021 = !DILocation(line: 4029, column: 10, scope: !7020)
!7022 = !DILocation(line: 4029, column: 7, scope: !6996)
!7023 = !DILocation(line: 4030, column: 8, scope: !7020)
!7024 = !DILocation(line: 4030, column: 5, scope: !7020)
!7025 = !DILocation(line: 4032, column: 10, scope: !6996)
!7026 = !DILocation(line: 4032, column: 13, scope: !6996)
!7027 = !DILocation(line: 4032, column: 3, scope: !6996)
!7028 = distinct !DISubprogram(name: "ds_get_max_dep_weak", scope: !3, file: !3, line: 4038, type: !6997, scopeLine: 4039, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7029 = !DILocalVariable(name: "ds", arg: 1, scope: !7028, file: !3, line: 4038, type: !809)
!7030 = !DILocation(line: 4038, column: 27, scope: !7028)
!7031 = !DILocation(line: 4040, column: 7, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 4040, column: 7)
!7033 = !DILocation(line: 4040, column: 10, scope: !7032)
!7034 = !DILocation(line: 4040, column: 7, scope: !7028)
!7035 = !DILocation(line: 4041, column: 24, scope: !7032)
!7036 = !DILocation(line: 4041, column: 10, scope: !7032)
!7037 = !DILocation(line: 4041, column: 8, scope: !7032)
!7038 = !DILocation(line: 4041, column: 5, scope: !7032)
!7039 = !DILocation(line: 4042, column: 7, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 4042, column: 7)
!7041 = !DILocation(line: 4042, column: 10, scope: !7040)
!7042 = !DILocation(line: 4042, column: 7, scope: !7028)
!7043 = !DILocation(line: 4043, column: 24, scope: !7040)
!7044 = !DILocation(line: 4043, column: 10, scope: !7040)
!7045 = !DILocation(line: 4043, column: 8, scope: !7040)
!7046 = !DILocation(line: 4043, column: 5, scope: !7040)
!7047 = !DILocation(line: 4044, column: 7, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 4044, column: 7)
!7049 = !DILocation(line: 4044, column: 10, scope: !7048)
!7050 = !DILocation(line: 4044, column: 7, scope: !7028)
!7051 = !DILocation(line: 4045, column: 24, scope: !7048)
!7052 = !DILocation(line: 4045, column: 10, scope: !7048)
!7053 = !DILocation(line: 4045, column: 8, scope: !7048)
!7054 = !DILocation(line: 4045, column: 5, scope: !7048)
!7055 = !DILocation(line: 4046, column: 7, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 4046, column: 7)
!7057 = !DILocation(line: 4046, column: 10, scope: !7056)
!7058 = !DILocation(line: 4046, column: 7, scope: !7028)
!7059 = !DILocation(line: 4047, column: 24, scope: !7056)
!7060 = !DILocation(line: 4047, column: 10, scope: !7056)
!7061 = !DILocation(line: 4047, column: 8, scope: !7056)
!7062 = !DILocation(line: 4047, column: 5, scope: !7056)
!7063 = !DILocation(line: 4049, column: 10, scope: !7028)
!7064 = !DILocation(line: 4049, column: 3, scope: !7028)
!7065 = distinct !DISubprogram(name: "debug_ds", scope: !3, file: !3, line: 4081, type: !7066, scopeLine: 4082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7066 = !DISubroutineType(types: !7067)
!7067 = !{null, !809}
!7068 = !DILocalVariable(name: "s", arg: 1, scope: !7065, file: !3, line: 4081, type: !809)
!7069 = !DILocation(line: 4081, column: 16, scope: !7065)
!7070 = !DILocation(line: 4083, column: 12, scope: !7065)
!7071 = !DILocation(line: 4083, column: 20, scope: !7065)
!7072 = !DILocation(line: 4083, column: 3, scope: !7065)
!7073 = !DILocation(line: 4084, column: 12, scope: !7065)
!7074 = !DILocation(line: 4084, column: 3, scope: !7065)
!7075 = !DILocation(line: 4085, column: 1, scope: !7065)
!7076 = distinct !DISubprogram(name: "dump_ds", scope: !3, file: !3, line: 4054, type: !7077, scopeLine: 4055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7077 = !DISubroutineType(types: !7078)
!7078 = !{null, !2301, !809}
!7079 = !DILocalVariable(name: "f", arg: 1, scope: !7076, file: !3, line: 4054, type: !2301)
!7080 = !DILocation(line: 4054, column: 16, scope: !7076)
!7081 = !DILocalVariable(name: "s", arg: 2, scope: !7076, file: !3, line: 4054, type: !809)
!7082 = !DILocation(line: 4054, column: 24, scope: !7076)
!7083 = !DILocation(line: 4056, column: 12, scope: !7076)
!7084 = !DILocation(line: 4056, column: 3, scope: !7076)
!7085 = !DILocation(line: 4058, column: 7, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 4058, column: 7)
!7087 = !DILocation(line: 4058, column: 9, scope: !7086)
!7088 = !DILocation(line: 4058, column: 7, scope: !7076)
!7089 = !DILocation(line: 4059, column: 14, scope: !7086)
!7090 = !DILocation(line: 4059, column: 53, scope: !7086)
!7091 = !DILocation(line: 4059, column: 37, scope: !7086)
!7092 = !DILocation(line: 4059, column: 5, scope: !7086)
!7093 = !DILocation(line: 4060, column: 7, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 4060, column: 7)
!7095 = !DILocation(line: 4060, column: 9, scope: !7094)
!7096 = !DILocation(line: 4060, column: 7, scope: !7076)
!7097 = !DILocation(line: 4061, column: 14, scope: !7094)
!7098 = !DILocation(line: 4061, column: 53, scope: !7094)
!7099 = !DILocation(line: 4061, column: 37, scope: !7094)
!7100 = !DILocation(line: 4061, column: 5, scope: !7094)
!7101 = !DILocation(line: 4062, column: 7, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 4062, column: 7)
!7103 = !DILocation(line: 4062, column: 9, scope: !7102)
!7104 = !DILocation(line: 4062, column: 7, scope: !7076)
!7105 = !DILocation(line: 4063, column: 14, scope: !7102)
!7106 = !DILocation(line: 4063, column: 56, scope: !7102)
!7107 = !DILocation(line: 4063, column: 40, scope: !7102)
!7108 = !DILocation(line: 4063, column: 5, scope: !7102)
!7109 = !DILocation(line: 4064, column: 7, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 4064, column: 7)
!7111 = !DILocation(line: 4064, column: 9, scope: !7110)
!7112 = !DILocation(line: 4064, column: 7, scope: !7076)
!7113 = !DILocation(line: 4065, column: 14, scope: !7110)
!7114 = !DILocation(line: 4065, column: 56, scope: !7110)
!7115 = !DILocation(line: 4065, column: 40, scope: !7110)
!7116 = !DILocation(line: 4065, column: 5, scope: !7110)
!7117 = !DILocation(line: 4067, column: 7, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 4067, column: 7)
!7119 = !DILocation(line: 4067, column: 9, scope: !7118)
!7120 = !DILocation(line: 4067, column: 7, scope: !7076)
!7121 = !DILocation(line: 4068, column: 14, scope: !7118)
!7122 = !DILocation(line: 4068, column: 5, scope: !7118)
!7123 = !DILocation(line: 4070, column: 7, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 4070, column: 7)
!7125 = !DILocation(line: 4070, column: 9, scope: !7124)
!7126 = !DILocation(line: 4070, column: 7, scope: !7076)
!7127 = !DILocation(line: 4071, column: 14, scope: !7124)
!7128 = !DILocation(line: 4071, column: 5, scope: !7124)
!7129 = !DILocation(line: 4072, column: 7, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 4072, column: 7)
!7131 = !DILocation(line: 4072, column: 9, scope: !7130)
!7132 = !DILocation(line: 4072, column: 7, scope: !7076)
!7133 = !DILocation(line: 4073, column: 14, scope: !7130)
!7134 = !DILocation(line: 4073, column: 5, scope: !7130)
!7135 = !DILocation(line: 4074, column: 7, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 4074, column: 7)
!7137 = !DILocation(line: 4074, column: 9, scope: !7136)
!7138 = !DILocation(line: 4074, column: 7, scope: !7076)
!7139 = !DILocation(line: 4075, column: 14, scope: !7136)
!7140 = !DILocation(line: 4075, column: 5, scope: !7136)
!7141 = !DILocation(line: 4077, column: 12, scope: !7076)
!7142 = !DILocation(line: 4077, column: 3, scope: !7076)
!7143 = !DILocation(line: 4078, column: 1, scope: !7076)
!7144 = distinct !DISubprogram(name: "attach_dep_link", scope: !3, file: !3, line: 231, type: !7145, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7145 = !DISubroutineType(types: !7146)
!7146 = !{null, !2006, !2174}
!7147 = !DILocalVariable(name: "l", arg: 1, scope: !7144, file: !3, line: 231, type: !2006)
!7148 = !DILocation(line: 231, column: 29, scope: !7144)
!7149 = !DILocalVariable(name: "prev_nextp", arg: 2, scope: !7144, file: !3, line: 231, type: !2174)
!7150 = !DILocation(line: 231, column: 44, scope: !7144)
!7151 = !DILocalVariable(name: "next", scope: !7144, file: !3, line: 233, type: !2006)
!7152 = !DILocation(line: 233, column: 14, scope: !7144)
!7153 = !DILocation(line: 233, column: 22, scope: !7144)
!7154 = !DILocation(line: 233, column: 21, scope: !7144)
!7155 = !DILocation(line: 235, column: 3, scope: !7144)
!7156 = !DILocation(line: 239, column: 29, scope: !7144)
!7157 = !DILocation(line: 239, column: 3, scope: !7144)
!7158 = !DILocation(line: 239, column: 27, scope: !7144)
!7159 = !DILocation(line: 240, column: 23, scope: !7144)
!7160 = !DILocation(line: 240, column: 3, scope: !7144)
!7161 = !DILocation(line: 240, column: 21, scope: !7144)
!7162 = !DILocation(line: 243, column: 7, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 243, column: 7)
!7164 = !DILocation(line: 243, column: 12, scope: !7163)
!7165 = !DILocation(line: 243, column: 7, scope: !7144)
!7166 = !DILocation(line: 245, column: 7, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 244, column: 5)
!7168 = !DILocation(line: 247, column: 37, scope: !7167)
!7169 = !DILocation(line: 247, column: 7, scope: !7167)
!7170 = !DILocation(line: 247, column: 34, scope: !7167)
!7171 = !DILocation(line: 248, column: 5, scope: !7167)
!7172 = !DILocation(line: 251, column: 17, scope: !7144)
!7173 = !DILocation(line: 251, column: 4, scope: !7144)
!7174 = !DILocation(line: 251, column: 15, scope: !7144)
!7175 = !DILocation(line: 252, column: 1, scope: !7144)
!7176 = distinct !DISubprogram(name: "depl_on_debug_p", scope: !3, file: !3, line: 219, type: !7177, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{!1065, !2006}
!7179 = !DILocalVariable(name: "dep", arg: 1, scope: !7176, file: !3, line: 219, type: !2006)
!7180 = !DILocation(line: 219, column: 29, scope: !7176)
!7181 = !DILocation(line: 221, column: 11, scope: !7176)
!7182 = !DILocation(line: 222, column: 4, scope: !7176)
!7183 = !DILocation(line: 222, column: 8, scope: !7176)
!7184 = !DILocation(line: 222, column: 7, scope: !7176)
!7185 = !DILocation(line: 0, scope: !7176)
!7186 = !DILocation(line: 221, column: 10, scope: !7176)
!7187 = !DILocation(line: 221, column: 3, scope: !7176)
!7188 = distinct !DISubprogram(name: "ask_dependency_caches", scope: !3, file: !3, line: 872, type: !7189, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7189 = !DISubroutineType(types: !7190)
!7190 = !{!576, !2231}
!7191 = !DILocalVariable(name: "dep", arg: 1, scope: !7188, file: !3, line: 872, type: !2231)
!7192 = !DILocation(line: 872, column: 30, scope: !7188)
!7193 = !DILocalVariable(name: "elem_luid", scope: !7188, file: !3, line: 874, type: !810)
!7194 = !DILocation(line: 874, column: 7, scope: !7188)
!7195 = !DILocation(line: 874, column: 19, scope: !7188)
!7196 = !DILocalVariable(name: "insn_luid", scope: !7188, file: !3, line: 875, type: !810)
!7197 = !DILocation(line: 875, column: 7, scope: !7188)
!7198 = !DILocation(line: 875, column: 19, scope: !7188)
!7199 = !DILocation(line: 877, column: 3, scope: !7188)
!7200 = !DILocation(line: 881, column: 9, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 881, column: 7)
!7202 = !DILocation(line: 881, column: 29, scope: !7201)
!7203 = !DILocation(line: 881, column: 35, scope: !7201)
!7204 = !DILocation(line: 881, column: 7, scope: !7188)
!7205 = !DILocalVariable(name: "present_dep_type", scope: !7206, file: !3, line: 883, type: !384)
!7206 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 882, column: 5)
!7207 = !DILocation(line: 883, column: 21, scope: !7206)
!7208 = !DILocation(line: 885, column: 26, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 885, column: 11)
!7210 = !DILocation(line: 885, column: 48, scope: !7209)
!7211 = !DILocation(line: 885, column: 60, scope: !7209)
!7212 = !DILocation(line: 885, column: 11, scope: !7209)
!7213 = !DILocation(line: 885, column: 11, scope: !7206)
!7214 = !DILocation(line: 886, column: 19, scope: !7209)
!7215 = !DILocation(line: 886, column: 2, scope: !7209)
!7216 = !DILocation(line: 887, column: 31, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 887, column: 16)
!7218 = !DILocation(line: 887, column: 55, scope: !7217)
!7219 = !DILocation(line: 887, column: 67, scope: !7217)
!7220 = !DILocation(line: 887, column: 16, scope: !7217)
!7221 = !DILocation(line: 887, column: 16, scope: !7209)
!7222 = !DILocation(line: 888, column: 19, scope: !7217)
!7223 = !DILocation(line: 888, column: 2, scope: !7217)
!7224 = !DILocation(line: 889, column: 31, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 889, column: 16)
!7226 = !DILocation(line: 889, column: 53, scope: !7225)
!7227 = !DILocation(line: 889, column: 65, scope: !7225)
!7228 = !DILocation(line: 889, column: 16, scope: !7225)
!7229 = !DILocation(line: 889, column: 16, scope: !7217)
!7230 = !DILocation(line: 890, column: 19, scope: !7225)
!7231 = !DILocation(line: 890, column: 2, scope: !7225)
!7232 = !DILocation(line: 893, column: 2, scope: !7225)
!7233 = !DILocation(line: 895, column: 17, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 895, column: 11)
!7235 = !DILocation(line: 895, column: 41, scope: !7234)
!7236 = !DILocation(line: 895, column: 32, scope: !7234)
!7237 = !DILocation(line: 895, column: 11, scope: !7206)
!7238 = !DILocation(line: 897, column: 2, scope: !7234)
!7239 = !DILocation(line: 898, column: 5, scope: !7206)
!7240 = !DILocalVariable(name: "present_dep_types", scope: !7241, file: !3, line: 901, type: !809)
!7241 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 900, column: 5)
!7242 = !DILocation(line: 901, column: 12, scope: !7241)
!7243 = !DILocation(line: 903, column: 26, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 903, column: 11)
!7245 = !DILocation(line: 903, column: 48, scope: !7244)
!7246 = !DILocation(line: 903, column: 60, scope: !7244)
!7247 = !DILocation(line: 903, column: 11, scope: !7244)
!7248 = !DILocation(line: 903, column: 11, scope: !7241)
!7249 = !DILocation(line: 904, column: 20, scope: !7244)
!7250 = !DILocation(line: 904, column: 2, scope: !7244)
!7251 = !DILocation(line: 905, column: 26, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 905, column: 11)
!7253 = !DILocation(line: 905, column: 50, scope: !7252)
!7254 = !DILocation(line: 905, column: 62, scope: !7252)
!7255 = !DILocation(line: 905, column: 11, scope: !7252)
!7256 = !DILocation(line: 905, column: 11, scope: !7241)
!7257 = !DILocation(line: 906, column: 20, scope: !7252)
!7258 = !DILocation(line: 906, column: 2, scope: !7252)
!7259 = !DILocation(line: 907, column: 26, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 907, column: 11)
!7261 = !DILocation(line: 907, column: 48, scope: !7260)
!7262 = !DILocation(line: 907, column: 60, scope: !7260)
!7263 = !DILocation(line: 907, column: 11, scope: !7260)
!7264 = !DILocation(line: 907, column: 11, scope: !7241)
!7265 = !DILocation(line: 908, column: 20, scope: !7260)
!7266 = !DILocation(line: 908, column: 2, scope: !7260)
!7267 = !DILocation(line: 910, column: 11, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 910, column: 11)
!7269 = !DILocation(line: 910, column: 29, scope: !7268)
!7270 = !DILocation(line: 910, column: 11, scope: !7241)
!7271 = !DILocation(line: 912, column: 2, scope: !7268)
!7272 = !DILocation(line: 914, column: 13, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 914, column: 11)
!7274 = !DILocation(line: 914, column: 33, scope: !7273)
!7275 = !DILocation(line: 914, column: 39, scope: !7273)
!7276 = !DILocation(line: 915, column: 4, scope: !7273)
!7277 = !DILocation(line: 915, column: 23, scope: !7273)
!7278 = !DILocation(line: 915, column: 45, scope: !7273)
!7279 = !DILocation(line: 915, column: 57, scope: !7273)
!7280 = !DILocation(line: 915, column: 8, scope: !7273)
!7281 = !DILocation(line: 914, column: 11, scope: !7241)
!7282 = !DILocation(line: 917, column: 9, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 917, column: 8)
!7284 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 916, column: 2)
!7285 = !DILocation(line: 917, column: 30, scope: !7283)
!7286 = !DILocation(line: 917, column: 47, scope: !7283)
!7287 = !DILocation(line: 917, column: 27, scope: !7283)
!7288 = !DILocation(line: 918, column: 11, scope: !7283)
!7289 = !DILocation(line: 918, column: 8, scope: !7283)
!7290 = !DILocation(line: 917, column: 8, scope: !7284)
!7291 = !DILocation(line: 920, column: 6, scope: !7283)
!7292 = !DILocation(line: 921, column: 2, scope: !7284)
!7293 = !DILocation(line: 926, column: 4, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 923, column: 2)
!7295 = !DILocation(line: 936, column: 3, scope: !7188)
!7296 = !DILocation(line: 937, column: 1, scope: !7188)
!7297 = distinct !DISubprogram(name: "update_dep", scope: !3, file: !3, line: 1040, type: !7298, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7298 = !DISubroutineType(types: !7299)
!7299 = !{!576, !2231, !2231, !2167, !839, !839}
!7300 = !DILocalVariable(name: "dep", arg: 1, scope: !7297, file: !3, line: 1040, type: !2231)
!7301 = !DILocation(line: 1040, column: 19, scope: !7297)
!7302 = !DILocalVariable(name: "new_dep", arg: 2, scope: !7297, file: !3, line: 1040, type: !2231)
!7303 = !DILocation(line: 1040, column: 30, scope: !7297)
!7304 = !DILocalVariable(name: "sd_it", arg: 3, scope: !7297, file: !3, line: 1041, type: !2167)
!7305 = !DILocation(line: 1041, column: 22, scope: !7297)
!7306 = !DILocalVariable(name: "mem1", arg: 4, scope: !7297, file: !3, line: 1042, type: !839)
!7307 = !DILocation(line: 1042, column: 10, scope: !7297)
!7308 = !DILocalVariable(name: "mem2", arg: 5, scope: !7297, file: !3, line: 1043, type: !839)
!7309 = !DILocation(line: 1043, column: 10, scope: !7297)
!7310 = !DILocalVariable(name: "res", scope: !7297, file: !3, line: 1045, type: !576)
!7311 = !DILocation(line: 1045, column: 27, scope: !7297)
!7312 = !DILocalVariable(name: "old_type", scope: !7297, file: !3, line: 1046, type: !384)
!7313 = !DILocation(line: 1046, column: 17, scope: !7297)
!7314 = !DILocation(line: 1046, column: 28, scope: !7297)
!7315 = !DILocation(line: 1051, column: 13, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 1051, column: 7)
!7317 = !DILocation(line: 1051, column: 40, scope: !7316)
!7318 = !DILocation(line: 1051, column: 32, scope: !7316)
!7319 = !DILocation(line: 1051, column: 7, scope: !7297)
!7320 = !DILocation(line: 1053, column: 24, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 1052, column: 5)
!7322 = !DILocation(line: 1053, column: 7, scope: !7321)
!7323 = !DILocation(line: 1053, column: 22, scope: !7321)
!7324 = !DILocation(line: 1054, column: 11, scope: !7321)
!7325 = !DILocation(line: 1055, column: 5, scope: !7321)
!7326 = !DILocation(line: 1057, column: 7, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 1057, column: 7)
!7328 = !DILocation(line: 1057, column: 27, scope: !7327)
!7329 = !DILocation(line: 1057, column: 33, scope: !7327)
!7330 = !DILocation(line: 1057, column: 7, scope: !7297)
!7331 = !DILocalVariable(name: "dep_status", scope: !7332, file: !3, line: 1060, type: !809)
!7332 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1059, column: 5)
!7333 = !DILocation(line: 1060, column: 12, scope: !7332)
!7334 = !DILocation(line: 1060, column: 25, scope: !7332)
!7335 = !DILocalVariable(name: "ds", scope: !7332, file: !3, line: 1061, type: !809)
!7336 = !DILocation(line: 1061, column: 12, scope: !7332)
!7337 = !DILocation(line: 1061, column: 17, scope: !7332)
!7338 = !DILocalVariable(name: "new_status", scope: !7332, file: !3, line: 1062, type: !809)
!7339 = !DILocation(line: 1062, column: 12, scope: !7332)
!7340 = !DILocation(line: 1062, column: 25, scope: !7332)
!7341 = !DILocation(line: 1062, column: 30, scope: !7332)
!7342 = !DILocation(line: 1062, column: 28, scope: !7332)
!7343 = !DILocation(line: 1064, column: 11, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1064, column: 11)
!7345 = !DILocation(line: 1064, column: 22, scope: !7344)
!7346 = !DILocation(line: 1064, column: 11, scope: !7332)
!7347 = !DILocation(line: 1068, column: 10, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 1068, column: 8)
!7349 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 1067, column: 2)
!7350 = !DILocation(line: 1068, column: 13, scope: !7348)
!7351 = !DILocation(line: 1069, column: 8, scope: !7348)
!7352 = !DILocation(line: 1069, column: 13, scope: !7348)
!7353 = !DILocation(line: 1069, column: 24, scope: !7348)
!7354 = !DILocation(line: 1068, column: 8, scope: !7349)
!7355 = !DILocation(line: 1072, column: 19, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 1071, column: 6)
!7357 = !DILocation(line: 1074, column: 12, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 1074, column: 12)
!7359 = !DILocation(line: 1074, column: 23, scope: !7358)
!7360 = !DILocation(line: 1074, column: 12, scope: !7356)
!7361 = !DILocation(line: 1077, column: 3, scope: !7358)
!7362 = !DILocation(line: 1078, column: 6, scope: !7356)
!7363 = !DILocation(line: 1082, column: 12, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 1082, column: 12)
!7365 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 1080, column: 6)
!7366 = !DILocation(line: 1082, column: 17, scope: !7364)
!7367 = !DILocation(line: 1082, column: 12, scope: !7365)
!7368 = !DILocalVariable(name: "dw", scope: !7369, file: !3, line: 1084, type: !2000)
!7369 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1083, column: 3)
!7370 = !DILocation(line: 1084, column: 10, scope: !7369)
!7371 = !DILocation(line: 1086, column: 29, scope: !7369)
!7372 = !DILocation(line: 1086, column: 35, scope: !7369)
!7373 = !DILocation(line: 1086, column: 10, scope: !7369)
!7374 = !DILocation(line: 1086, column: 8, scope: !7369)
!7375 = !DILocation(line: 1087, column: 24, scope: !7369)
!7376 = !DILocation(line: 1087, column: 40, scope: !7369)
!7377 = !DILocation(line: 1087, column: 10, scope: !7369)
!7378 = !DILocation(line: 1087, column: 8, scope: !7369)
!7379 = !DILocation(line: 1088, column: 3, scope: !7369)
!7380 = !DILocation(line: 1090, column: 31, scope: !7365)
!7381 = !DILocation(line: 1090, column: 43, scope: !7365)
!7382 = !DILocation(line: 1090, column: 21, scope: !7365)
!7383 = !DILocation(line: 1090, column: 19, scope: !7365)
!7384 = !DILocation(line: 1092, column: 2, scope: !7349)
!7385 = !DILocation(line: 1094, column: 12, scope: !7332)
!7386 = !DILocation(line: 1094, column: 10, scope: !7332)
!7387 = !DILocation(line: 1096, column: 11, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1096, column: 11)
!7389 = !DILocation(line: 1096, column: 25, scope: !7388)
!7390 = !DILocation(line: 1096, column: 22, scope: !7388)
!7391 = !DILocation(line: 1096, column: 11, scope: !7332)
!7392 = !DILocation(line: 1098, column: 23, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 1097, column: 2)
!7394 = !DILocation(line: 1098, column: 4, scope: !7393)
!7395 = !DILocation(line: 1098, column: 21, scope: !7393)
!7396 = !DILocation(line: 1099, column: 8, scope: !7393)
!7397 = !DILocation(line: 1100, column: 2, scope: !7393)
!7398 = !DILocation(line: 1101, column: 5, scope: !7332)
!7399 = !DILocation(line: 1103, column: 7, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 1103, column: 7)
!7401 = !DILocation(line: 1103, column: 29, scope: !7400)
!7402 = !DILocation(line: 1104, column: 7, scope: !7400)
!7403 = !DILocation(line: 1104, column: 10, scope: !7400)
!7404 = !DILocation(line: 1104, column: 14, scope: !7400)
!7405 = !DILocation(line: 1103, column: 7, scope: !7297)
!7406 = !DILocation(line: 1105, column: 31, scope: !7400)
!7407 = !DILocation(line: 1105, column: 36, scope: !7400)
!7408 = !DILocation(line: 1105, column: 5, scope: !7400)
!7409 = !DILocation(line: 1107, column: 10, scope: !7297)
!7410 = !DILocation(line: 1107, column: 3, scope: !7297)
!7411 = distinct !DISubprogram(name: "change_spec_dep_to_hard", scope: !3, file: !3, line: 1017, type: !3422, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7412 = !DILocalVariable(name: "sd_it", arg: 1, scope: !7411, file: !3, line: 1017, type: !2167)
!7413 = !DILocation(line: 1017, column: 42, scope: !7411)
!7414 = !DILocalVariable(name: "node", scope: !7411, file: !3, line: 1019, type: !2011)
!7415 = !DILocation(line: 1019, column: 14, scope: !7411)
!7416 = !DILocation(line: 1019, column: 21, scope: !7411)
!7417 = !DILocalVariable(name: "link", scope: !7411, file: !3, line: 1020, type: !2006)
!7418 = !DILocation(line: 1020, column: 14, scope: !7411)
!7419 = !DILocation(line: 1020, column: 21, scope: !7411)
!7420 = !DILocalVariable(name: "dep", scope: !7411, file: !3, line: 1021, type: !2231)
!7421 = !DILocation(line: 1021, column: 9, scope: !7411)
!7422 = !DILocation(line: 1021, column: 15, scope: !7411)
!7423 = !DILocalVariable(name: "elem", scope: !7411, file: !3, line: 1022, type: !839)
!7424 = !DILocation(line: 1022, column: 7, scope: !7411)
!7425 = !DILocation(line: 1022, column: 14, scope: !7411)
!7426 = !DILocalVariable(name: "insn", scope: !7411, file: !3, line: 1023, type: !839)
!7427 = !DILocation(line: 1023, column: 7, scope: !7411)
!7428 = !DILocation(line: 1023, column: 14, scope: !7411)
!7429 = !DILocation(line: 1025, column: 18, scope: !7411)
!7430 = !DILocation(line: 1025, column: 24, scope: !7411)
!7431 = !DILocation(line: 1025, column: 52, scope: !7411)
!7432 = !DILocation(line: 1025, column: 3, scope: !7411)
!7433 = !DILocation(line: 1027, column: 3, scope: !7411)
!7434 = !DILocation(line: 1027, column: 20, scope: !7411)
!7435 = !DILocation(line: 1029, column: 7, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 1029, column: 7)
!7437 = !DILocation(line: 1029, column: 29, scope: !7436)
!7438 = !DILocation(line: 1029, column: 7, scope: !7411)
!7439 = !DILocation(line: 1031, column: 24, scope: !7436)
!7440 = !DILocation(line: 1031, column: 46, scope: !7436)
!7441 = !DILocation(line: 1032, column: 9, scope: !7436)
!7442 = !DILocation(line: 1031, column: 5, scope: !7436)
!7443 = !DILocation(line: 1033, column: 1, scope: !7411)
!7444 = distinct !DISubprogram(name: "update_dependency_caches", scope: !3, file: !3, line: 988, type: !7445, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7445 = !DISubroutineType(types: !7446)
!7446 = !{null, !2231, !384}
!7447 = !DILocalVariable(name: "dep", arg: 1, scope: !7444, file: !3, line: 988, type: !2231)
!7448 = !DILocation(line: 988, column: 33, scope: !7444)
!7449 = !DILocalVariable(name: "old_type", arg: 2, scope: !7444, file: !3, line: 988, type: !384)
!7450 = !DILocation(line: 988, column: 52, scope: !7444)
!7451 = !DILocalVariable(name: "elem_luid", scope: !7444, file: !3, line: 990, type: !810)
!7452 = !DILocation(line: 990, column: 7, scope: !7444)
!7453 = !DILocation(line: 990, column: 19, scope: !7444)
!7454 = !DILocalVariable(name: "insn_luid", scope: !7444, file: !3, line: 991, type: !810)
!7455 = !DILocation(line: 991, column: 7, scope: !7444)
!7456 = !DILocation(line: 991, column: 19, scope: !7444)
!7457 = !DILocation(line: 995, column: 9, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 995, column: 7)
!7459 = !DILocation(line: 995, column: 29, scope: !7458)
!7460 = !DILocation(line: 995, column: 35, scope: !7458)
!7461 = !DILocation(line: 995, column: 7, scope: !7444)
!7462 = !DILocation(line: 997, column: 15, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 996, column: 5)
!7464 = !DILocation(line: 997, column: 7, scope: !7463)
!7465 = !DILocation(line: 1000, column: 23, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 998, column: 2)
!7467 = !DILocation(line: 1000, column: 47, scope: !7466)
!7468 = !DILocation(line: 1000, column: 59, scope: !7466)
!7469 = !DILocation(line: 1000, column: 4, scope: !7466)
!7470 = !DILocation(line: 1001, column: 4, scope: !7466)
!7471 = !DILocation(line: 1004, column: 23, scope: !7466)
!7472 = !DILocation(line: 1004, column: 45, scope: !7466)
!7473 = !DILocation(line: 1004, column: 57, scope: !7466)
!7474 = !DILocation(line: 1004, column: 4, scope: !7466)
!7475 = !DILocation(line: 1005, column: 4, scope: !7466)
!7476 = !DILocation(line: 1008, column: 4, scope: !7466)
!7477 = !DILocation(line: 1009, column: 2, scope: !7466)
!7478 = !DILocation(line: 1010, column: 5, scope: !7463)
!7479 = !DILocation(line: 1012, column: 26, scope: !7444)
!7480 = !DILocation(line: 1012, column: 3, scope: !7444)
!7481 = !DILocation(line: 1013, column: 1, scope: !7444)
!7482 = distinct !DISubprogram(name: "detach_dep_link", scope: !3, file: !3, line: 267, type: !7483, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{null, !2006}
!7485 = !DILocalVariable(name: "l", arg: 1, scope: !7482, file: !3, line: 267, type: !2006)
!7486 = !DILocation(line: 267, column: 29, scope: !7482)
!7487 = !DILocalVariable(name: "prev_nextp", scope: !7482, file: !3, line: 269, type: !2174)
!7488 = !DILocation(line: 269, column: 15, scope: !7482)
!7489 = !DILocation(line: 269, column: 28, scope: !7482)
!7490 = !DILocalVariable(name: "next", scope: !7482, file: !3, line: 270, type: !2006)
!7491 = !DILocation(line: 270, column: 14, scope: !7482)
!7492 = !DILocation(line: 270, column: 21, scope: !7482)
!7493 = !DILocation(line: 272, column: 17, scope: !7482)
!7494 = !DILocation(line: 272, column: 4, scope: !7482)
!7495 = !DILocation(line: 272, column: 15, scope: !7482)
!7496 = !DILocation(line: 274, column: 7, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 274, column: 7)
!7498 = !DILocation(line: 274, column: 12, scope: !7497)
!7499 = !DILocation(line: 274, column: 7, scope: !7482)
!7500 = !DILocation(line: 275, column: 34, scope: !7497)
!7501 = !DILocation(line: 275, column: 5, scope: !7497)
!7502 = !DILocation(line: 275, column: 32, scope: !7497)
!7503 = !DILocation(line: 277, column: 3, scope: !7482)
!7504 = !DILocation(line: 277, column: 27, scope: !7482)
!7505 = !DILocation(line: 278, column: 3, scope: !7482)
!7506 = !DILocation(line: 278, column: 21, scope: !7482)
!7507 = !DILocation(line: 279, column: 1, scope: !7482)
!7508 = distinct !DISubprogram(name: "dep_link_is_detached_p", scope: !3, file: !3, line: 302, type: !7177, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7509 = !DILocalVariable(name: "link", arg: 1, scope: !7508, file: !3, line: 302, type: !2006)
!7510 = !DILocation(line: 302, column: 36, scope: !7508)
!7511 = !DILocation(line: 304, column: 10, scope: !7508)
!7512 = !DILocation(line: 304, column: 37, scope: !7508)
!7513 = !DILocation(line: 304, column: 3, scope: !7508)
!7514 = distinct !DISubprogram(name: "add_dependence_list", scope: !3, file: !3, line: 1392, type: !7515, scopeLine: 1393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7515 = !DISubroutineType(types: !7516)
!7516 = !{null, !839, !839, !810, !384}
!7517 = !DILocalVariable(name: "insn", arg: 1, scope: !7514, file: !3, line: 1392, type: !839)
!7518 = !DILocation(line: 1392, column: 26, scope: !7514)
!7519 = !DILocalVariable(name: "list", arg: 2, scope: !7514, file: !3, line: 1392, type: !839)
!7520 = !DILocation(line: 1392, column: 36, scope: !7514)
!7521 = !DILocalVariable(name: "uncond", arg: 3, scope: !7514, file: !3, line: 1392, type: !810)
!7522 = !DILocation(line: 1392, column: 46, scope: !7514)
!7523 = !DILocalVariable(name: "dep_type", arg: 4, scope: !7514, file: !3, line: 1392, type: !384)
!7524 = !DILocation(line: 1392, column: 68, scope: !7514)
!7525 = !DILocation(line: 1394, column: 3, scope: !7514)
!7526 = !DILocation(line: 1394, column: 10, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 1394, column: 3)
!7528 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 1394, column: 3)
!7529 = !DILocation(line: 1394, column: 3, scope: !7528)
!7530 = !DILocation(line: 1396, column: 11, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 1396, column: 11)
!7532 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 1395, column: 5)
!7533 = !DILocation(line: 1396, column: 18, scope: !7531)
!7534 = !DILocation(line: 1396, column: 55, scope: !7531)
!7535 = !DILocation(line: 1396, column: 61, scope: !7531)
!7536 = !DILocation(line: 1396, column: 23, scope: !7531)
!7537 = !DILocation(line: 1396, column: 11, scope: !7532)
!7538 = !DILocation(line: 1397, column: 18, scope: !7531)
!7539 = !DILocation(line: 1397, column: 24, scope: !7531)
!7540 = !DILocation(line: 1397, column: 40, scope: !7531)
!7541 = !DILocation(line: 1397, column: 2, scope: !7531)
!7542 = !DILocation(line: 1398, column: 5, scope: !7532)
!7543 = !DILocation(line: 1394, column: 23, scope: !7527)
!7544 = !DILocation(line: 1394, column: 21, scope: !7527)
!7545 = !DILocation(line: 1394, column: 3, scope: !7527)
!7546 = distinct !{!7546, !7529, !7547}
!7547 = !DILocation(line: 1398, column: 5, scope: !7528)
!7548 = !DILocation(line: 1399, column: 1, scope: !7514)
!7549 = distinct !DISubprogram(name: "sched_analyze_2", scope: !3, file: !3, line: 2361, type: !4098, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7550 = !DILocalVariable(name: "deps", arg: 1, scope: !7549, file: !3, line: 2361, type: !3819)
!7551 = !DILocation(line: 2361, column: 31, scope: !7549)
!7552 = !DILocalVariable(name: "x", arg: 2, scope: !7549, file: !3, line: 2361, type: !839)
!7553 = !DILocation(line: 2361, column: 41, scope: !7549)
!7554 = !DILocalVariable(name: "insn", arg: 3, scope: !7549, file: !3, line: 2361, type: !839)
!7555 = !DILocation(line: 2361, column: 48, scope: !7549)
!7556 = !DILocalVariable(name: "i", scope: !7549, file: !3, line: 2363, type: !810)
!7557 = !DILocation(line: 2363, column: 7, scope: !7549)
!7558 = !DILocalVariable(name: "j", scope: !7549, file: !3, line: 2364, type: !810)
!7559 = !DILocation(line: 2364, column: 7, scope: !7549)
!7560 = !DILocalVariable(name: "code", scope: !7549, file: !3, line: 2365, type: !434)
!7561 = !DILocation(line: 2365, column: 17, scope: !7549)
!7562 = !DILocalVariable(name: "fmt", scope: !7549, file: !3, line: 2366, type: !835)
!7563 = !DILocation(line: 2366, column: 15, scope: !7549)
!7564 = !DILocalVariable(name: "cslr_p", scope: !7549, file: !3, line: 2367, type: !1065)
!7565 = !DILocation(line: 2367, column: 8, scope: !7549)
!7566 = !DILocation(line: 2367, column: 17, scope: !7549)
!7567 = !DILocation(line: 2369, column: 23, scope: !7549)
!7568 = !DILocation(line: 2371, column: 3, scope: !7549)
!7569 = !DILocation(line: 2372, column: 7, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 2372, column: 7)
!7571 = !DILocation(line: 2372, column: 9, scope: !7570)
!7572 = !DILocation(line: 2372, column: 7, scope: !7549)
!7573 = !DILocation(line: 2373, column: 5, scope: !7570)
!7574 = !DILocation(line: 2375, column: 7, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 2375, column: 7)
!7576 = !DILocation(line: 2375, column: 14, scope: !7575)
!7577 = !DILocation(line: 2375, column: 17, scope: !7575)
!7578 = !DILocation(line: 2375, column: 34, scope: !7575)
!7579 = !DILocation(line: 2375, column: 7, scope: !7549)
!7580 = !DILocation(line: 2376, column: 5, scope: !7575)
!7581 = !DILocation(line: 2376, column: 22, scope: !7575)
!7582 = !DILocation(line: 2376, column: 33, scope: !7575)
!7583 = !DILocation(line: 2378, column: 10, scope: !7549)
!7584 = !DILocation(line: 2378, column: 8, scope: !7549)
!7585 = !DILocation(line: 2380, column: 11, scope: !7549)
!7586 = !DILocation(line: 2380, column: 3, scope: !7549)
!7587 = !DILocation(line: 2390, column: 11, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2390, column: 11)
!7589 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 2381, column: 5)
!7590 = !DILocation(line: 2390, column: 18, scope: !7588)
!7591 = !DILocation(line: 2390, column: 21, scope: !7588)
!7592 = !DILocation(line: 2390, column: 38, scope: !7588)
!7593 = !DILocation(line: 2390, column: 11, scope: !7589)
!7594 = !DILocation(line: 2391, column: 2, scope: !7588)
!7595 = !DILocation(line: 2391, column: 19, scope: !7588)
!7596 = !DILocation(line: 2393, column: 7, scope: !7589)
!7597 = !DILocalVariable(name: "regno", scope: !7598, file: !3, line: 2411, type: !810)
!7598 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2410, column: 7)
!7599 = !DILocation(line: 2411, column: 6, scope: !7598)
!7600 = !DILocation(line: 2411, column: 14, scope: !7598)
!7601 = !DILocalVariable(name: "mode", scope: !7598, file: !3, line: 2412, type: !5)
!7602 = !DILocation(line: 2412, column: 20, scope: !7598)
!7603 = !DILocation(line: 2412, column: 27, scope: !7598)
!7604 = !DILocation(line: 2414, column: 21, scope: !7598)
!7605 = !DILocation(line: 2414, column: 27, scope: !7598)
!7606 = !DILocation(line: 2414, column: 34, scope: !7598)
!7607 = !DILocation(line: 2414, column: 45, scope: !7598)
!7608 = !DILocation(line: 2414, column: 2, scope: !7598)
!7609 = !DILocation(line: 2418, column: 11, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 2418, column: 11)
!7611 = !DILocation(line: 2418, column: 17, scope: !7610)
!7612 = !DILocation(line: 2418, column: 36, scope: !7610)
!7613 = !DILocation(line: 2418, column: 39, scope: !7610)
!7614 = !DILocation(line: 2418, column: 45, scope: !7610)
!7615 = !DILocation(line: 2418, column: 11, scope: !7598)
!7616 = !DILocation(line: 2421, column: 8, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 2421, column: 8)
!7618 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 2419, column: 2)
!7619 = !DILocation(line: 2421, column: 14, scope: !7617)
!7620 = !DILocation(line: 2421, column: 8, scope: !7618)
!7621 = !DILocation(line: 2422, column: 25, scope: !7617)
!7622 = !DILocation(line: 2422, column: 48, scope: !7617)
!7623 = !DILocation(line: 2422, column: 59, scope: !7617)
!7624 = !DILocation(line: 2422, column: 6, scope: !7617)
!7625 = !DILocation(line: 2423, column: 23, scope: !7618)
!7626 = !DILocation(line: 2423, column: 46, scope: !7618)
!7627 = !DILocation(line: 2423, column: 57, scope: !7618)
!7628 = !DILocation(line: 2423, column: 4, scope: !7618)
!7629 = !DILocation(line: 2424, column: 2, scope: !7618)
!7630 = !DILocation(line: 2427, column: 6, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 2427, column: 6)
!7632 = !DILocation(line: 2427, column: 13, scope: !7631)
!7633 = !DILocation(line: 2427, column: 16, scope: !7631)
!7634 = !DILocation(line: 2427, column: 33, scope: !7631)
!7635 = !DILocation(line: 2427, column: 6, scope: !7598)
!7636 = !DILocation(line: 2428, column: 4, scope: !7631)
!7637 = !DILocation(line: 2428, column: 21, scope: !7631)
!7638 = !DILocation(line: 2430, column: 2, scope: !7598)
!7639 = !DILocalVariable(name: "u", scope: !7640, file: !3, line: 2436, type: !839)
!7640 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2434, column: 7)
!7641 = !DILocation(line: 2436, column: 6, scope: !7640)
!7642 = !DILocalVariable(name: "pending", scope: !7640, file: !3, line: 2437, type: !839)
!7643 = !DILocation(line: 2437, column: 6, scope: !7640)
!7644 = !DILocalVariable(name: "pending_mem", scope: !7640, file: !3, line: 2437, type: !839)
!7645 = !DILocation(line: 2437, column: 15, scope: !7640)
!7646 = !DILocalVariable(name: "t", scope: !7640, file: !3, line: 2438, type: !839)
!7647 = !DILocation(line: 2438, column: 6, scope: !7640)
!7648 = !DILocation(line: 2438, column: 10, scope: !7640)
!7649 = !DILocation(line: 2440, column: 6, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 2440, column: 6)
!7651 = !DILocation(line: 2440, column: 23, scope: !7650)
!7652 = !DILocation(line: 2440, column: 6, scope: !7640)
!7653 = !DILocalVariable(name: "address_mode", scope: !7654, file: !3, line: 2442, type: !5)
!7654 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 2441, column: 4)
!7655 = !DILocation(line: 2442, column: 24, scope: !7654)
!7656 = !DILocation(line: 2443, column: 29, scope: !7654)
!7657 = !DILocation(line: 2443, column: 43, scope: !7654)
!7658 = !DILocation(line: 2443, column: 10, scope: !7654)
!7659 = !DILocation(line: 2445, column: 10, scope: !7654)
!7660 = !DILocation(line: 2445, column: 8, scope: !7654)
!7661 = !DILocation(line: 2446, column: 31, scope: !7654)
!7662 = !DILocation(line: 2446, column: 44, scope: !7654)
!7663 = !DILocation(line: 2446, column: 61, scope: !7654)
!7664 = !DILocation(line: 2446, column: 6, scope: !7654)
!7665 = !DILocation(line: 2447, column: 44, scope: !7654)
!7666 = !DILocation(line: 2447, column: 20, scope: !7654)
!7667 = !DILocation(line: 2447, column: 6, scope: !7654)
!7668 = !DILocation(line: 2447, column: 18, scope: !7654)
!7669 = !DILocation(line: 2448, column: 4, scope: !7654)
!7670 = !DILocation(line: 2450, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 2450, column: 6)
!7672 = !DILocation(line: 2450, column: 6, scope: !7640)
!7673 = !DILocation(line: 2452, column: 21, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 2451, column: 4)
!7675 = !DILocation(line: 2452, column: 10, scope: !7674)
!7676 = !DILocation(line: 2452, column: 8, scope: !7674)
!7677 = !DILocation(line: 2453, column: 16, scope: !7674)
!7678 = !DILocation(line: 2453, column: 22, scope: !7674)
!7679 = !DILocation(line: 2453, column: 14, scope: !7674)
!7680 = !DILocation(line: 2454, column: 20, scope: !7674)
!7681 = !DILocation(line: 2454, column: 26, scope: !7674)
!7682 = !DILocation(line: 2454, column: 18, scope: !7674)
!7683 = !DILocation(line: 2455, column: 6, scope: !7674)
!7684 = !DILocation(line: 2455, column: 13, scope: !7674)
!7685 = !DILocation(line: 2457, column: 24, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 2457, column: 7)
!7687 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 2456, column: 8)
!7688 = !DILocation(line: 2457, column: 47, scope: !7686)
!7689 = !DILocation(line: 2457, column: 7, scope: !7686)
!7690 = !DILocation(line: 2458, column: 7, scope: !7686)
!7691 = !DILocation(line: 2458, column: 44, scope: !7686)
!7692 = !DILocation(line: 2459, column: 9, scope: !7686)
!7693 = !DILocation(line: 2458, column: 12, scope: !7686)
!7694 = !DILocation(line: 2457, column: 7, scope: !7687)
!7695 = !DILocation(line: 2460, column: 19, scope: !7686)
!7696 = !DILocation(line: 2460, column: 22, scope: !7686)
!7697 = !DILocation(line: 2460, column: 45, scope: !7686)
!7698 = !DILocation(line: 2460, column: 5, scope: !7686)
!7699 = !DILocation(line: 2463, column: 13, scope: !7687)
!7700 = !DILocation(line: 2463, column: 11, scope: !7687)
!7701 = !DILocation(line: 2464, column: 17, scope: !7687)
!7702 = !DILocation(line: 2464, column: 15, scope: !7687)
!7703 = distinct !{!7703, !7683, !7704}
!7704 = !DILocation(line: 2465, column: 8, scope: !7674)
!7705 = !DILocation(line: 2467, column: 16, scope: !7674)
!7706 = !DILocation(line: 2467, column: 22, scope: !7674)
!7707 = !DILocation(line: 2467, column: 14, scope: !7674)
!7708 = !DILocation(line: 2468, column: 20, scope: !7674)
!7709 = !DILocation(line: 2468, column: 26, scope: !7674)
!7710 = !DILocation(line: 2468, column: 18, scope: !7674)
!7711 = !DILocation(line: 2469, column: 6, scope: !7674)
!7712 = !DILocation(line: 2469, column: 13, scope: !7674)
!7713 = !DILocation(line: 2471, column: 24, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 2471, column: 7)
!7715 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 2470, column: 8)
!7716 = !DILocation(line: 2472, column: 10, scope: !7714)
!7717 = !DILocation(line: 2471, column: 7, scope: !7714)
!7718 = !DILocation(line: 2473, column: 7, scope: !7714)
!7719 = !DILocation(line: 2473, column: 44, scope: !7714)
!7720 = !DILocation(line: 2474, column: 9, scope: !7714)
!7721 = !DILocation(line: 2473, column: 12, scope: !7714)
!7722 = !DILocation(line: 2471, column: 7, scope: !7715)
!7723 = !DILocation(line: 2475, column: 19, scope: !7714)
!7724 = !DILocation(line: 2475, column: 22, scope: !7714)
!7725 = !DILocation(line: 2475, column: 45, scope: !7714)
!7726 = !DILocation(line: 2476, column: 5, scope: !7714)
!7727 = !DILocation(line: 2476, column: 22, scope: !7714)
!7728 = !DILocation(line: 2475, column: 5, scope: !7714)
!7729 = !DILocation(line: 2479, column: 13, scope: !7715)
!7730 = !DILocation(line: 2479, column: 11, scope: !7715)
!7731 = !DILocation(line: 2480, column: 17, scope: !7715)
!7732 = !DILocation(line: 2480, column: 15, scope: !7715)
!7733 = distinct !{!7733, !7711, !7734}
!7734 = !DILocation(line: 2481, column: 8, scope: !7674)
!7735 = !DILocation(line: 2483, column: 15, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 2483, column: 6)
!7737 = !DILocation(line: 2483, column: 21, scope: !7736)
!7738 = !DILocation(line: 2483, column: 13, scope: !7736)
!7739 = !DILocation(line: 2483, column: 11, scope: !7736)
!7740 = !DILocation(line: 2483, column: 48, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7736, file: !3, line: 2483, column: 6)
!7742 = !DILocation(line: 2483, column: 6, scope: !7736)
!7743 = !DILocation(line: 2485, column: 9, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 2485, column: 7)
!7745 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 2484, column: 8)
!7746 = !DILocation(line: 2485, column: 7, scope: !7745)
!7747 = !DILocation(line: 2486, column: 21, scope: !7744)
!7748 = !DILocation(line: 2486, column: 27, scope: !7744)
!7749 = !DILocation(line: 2486, column: 5, scope: !7744)
!7750 = !DILocation(line: 2487, column: 29, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 2487, column: 12)
!7752 = !DILocation(line: 2487, column: 12, scope: !7751)
!7753 = !DILocation(line: 2487, column: 12, scope: !7744)
!7754 = !DILocation(line: 2489, column: 12, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 2489, column: 11)
!7756 = distinct !DILexicalBlock(scope: !7751, file: !3, line: 2488, column: 5)
!7757 = !DILocation(line: 2489, column: 29, scope: !7755)
!7758 = !DILocation(line: 2489, column: 11, scope: !7755)
!7759 = !DILocation(line: 2490, column: 4, scope: !7755)
!7760 = !DILocation(line: 2490, column: 7, scope: !7755)
!7761 = !DILocation(line: 2490, column: 22, scope: !7755)
!7762 = !DILocation(line: 2490, column: 26, scope: !7755)
!7763 = !DILocation(line: 2490, column: 37, scope: !7755)
!7764 = !DILocation(line: 2490, column: 42, scope: !7755)
!7765 = !DILocation(line: 2489, column: 11, scope: !7756)
!7766 = !DILocalVariable(name: "ds", scope: !7767, file: !3, line: 2492, type: !809)
!7767 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 2491, column: 9)
!7768 = !DILocation(line: 2492, column: 9, scope: !7767)
!7769 = !DILocation(line: 2492, column: 14, scope: !7767)
!7770 = !DILocation(line: 2495, column: 14, scope: !7767)
!7771 = !DILocation(line: 2495, column: 27, scope: !7767)
!7772 = !DILocation(line: 2495, column: 4, scope: !7767)
!7773 = !DILocation(line: 2496, column: 9, scope: !7767)
!7774 = !DILocation(line: 2498, column: 25, scope: !7755)
!7775 = !DILocation(line: 2498, column: 31, scope: !7755)
!7776 = !DILocation(line: 2498, column: 9, scope: !7755)
!7777 = !DILocation(line: 2499, column: 5, scope: !7756)
!7778 = !DILocation(line: 2500, column: 8, scope: !7745)
!7779 = !DILocation(line: 2483, column: 55, scope: !7741)
!7780 = !DILocation(line: 2483, column: 53, scope: !7741)
!7781 = !DILocation(line: 2483, column: 6, scope: !7741)
!7782 = distinct !{!7782, !7742, !7783}
!7783 = !DILocation(line: 2500, column: 8, scope: !7736)
!7784 = !DILocation(line: 2501, column: 4, scope: !7674)
!7785 = !DILocation(line: 2505, column: 14, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 2505, column: 13)
!7787 = !DILocation(line: 2505, column: 20, scope: !7786)
!7788 = !DILocation(line: 2505, column: 13, scope: !7640)
!7789 = !DILocation(line: 2506, column: 36, scope: !7786)
!7790 = !DILocation(line: 2506, column: 48, scope: !7786)
!7791 = !DILocation(line: 2506, column: 54, scope: !7786)
!7792 = !DILocation(line: 2506, column: 11, scope: !7786)
!7793 = !DILocation(line: 2508, column: 19, scope: !7640)
!7794 = !DILocation(line: 2508, column: 25, scope: !7640)
!7795 = !DILocation(line: 2508, column: 38, scope: !7640)
!7796 = !DILocation(line: 2508, column: 2, scope: !7640)
!7797 = !DILocation(line: 2510, column: 6, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 2510, column: 6)
!7799 = !DILocation(line: 2510, column: 13, scope: !7798)
!7800 = !DILocation(line: 2510, column: 16, scope: !7798)
!7801 = !DILocation(line: 2510, column: 33, scope: !7798)
!7802 = !DILocation(line: 2510, column: 6, scope: !7640)
!7803 = !DILocation(line: 2511, column: 4, scope: !7798)
!7804 = !DILocation(line: 2511, column: 21, scope: !7798)
!7805 = !DILocation(line: 2513, column: 2, scope: !7640)
!7806 = !DILocation(line: 2518, column: 28, scope: !7589)
!7807 = !DILocation(line: 2518, column: 34, scope: !7589)
!7808 = !DILocation(line: 2518, column: 7, scope: !7589)
!7809 = !DILocation(line: 2519, column: 7, scope: !7589)
!7810 = !DILocation(line: 2522, column: 11, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2522, column: 11)
!7812 = !DILocation(line: 2522, column: 11, scope: !7589)
!7813 = !DILocation(line: 2523, column: 22, scope: !7811)
!7814 = !DILocation(line: 2523, column: 2, scope: !7811)
!7815 = !DILocation(line: 2524, column: 7, scope: !7589)
!7816 = !DILocation(line: 2527, column: 28, scope: !7589)
!7817 = !DILocation(line: 2527, column: 34, scope: !7589)
!7818 = !DILocation(line: 2527, column: 7, scope: !7589)
!7819 = !DILocation(line: 2540, column: 6, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 2540, column: 6)
!7821 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2532, column: 7)
!7822 = !DILocation(line: 2540, column: 11, scope: !7820)
!7823 = !DILocation(line: 2540, column: 27, scope: !7820)
!7824 = !DILocation(line: 2540, column: 30, scope: !7820)
!7825 = !DILocation(line: 2540, column: 6, scope: !7821)
!7826 = !DILocation(line: 2541, column: 24, scope: !7820)
!7827 = !DILocation(line: 2541, column: 4, scope: !7820)
!7828 = !DILocation(line: 2548, column: 6, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 2548, column: 6)
!7830 = !DILocation(line: 2548, column: 11, scope: !7829)
!7831 = !DILocation(line: 2548, column: 6, scope: !7821)
!7832 = !DILocation(line: 2550, column: 13, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 2550, column: 6)
!7834 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2549, column: 4)
!7835 = !DILocation(line: 2550, column: 11, scope: !7833)
!7836 = !DILocation(line: 2550, column: 18, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 2550, column: 6)
!7838 = !DILocation(line: 2550, column: 22, scope: !7837)
!7839 = !DILocation(line: 2550, column: 20, scope: !7837)
!7840 = !DILocation(line: 2550, column: 6, scope: !7833)
!7841 = !DILocation(line: 2551, column: 25, scope: !7837)
!7842 = !DILocation(line: 2551, column: 31, scope: !7837)
!7843 = !DILocation(line: 2551, column: 58, scope: !7837)
!7844 = !DILocation(line: 2551, column: 8, scope: !7837)
!7845 = !DILocation(line: 2550, column: 54, scope: !7837)
!7846 = !DILocation(line: 2550, column: 6, scope: !7837)
!7847 = distinct !{!7847, !7840, !7848}
!7848 = !DILocation(line: 2551, column: 62, scope: !7833)
!7849 = !DILocation(line: 2553, column: 10, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 2553, column: 10)
!7851 = !DILocation(line: 2553, column: 17, scope: !7850)
!7852 = !DILocation(line: 2553, column: 20, scope: !7850)
!7853 = !DILocation(line: 2553, column: 37, scope: !7850)
!7854 = !DILocation(line: 2553, column: 10, scope: !7834)
!7855 = !DILocation(line: 2554, column: 8, scope: !7850)
!7856 = !DILocation(line: 2554, column: 25, scope: !7850)
!7857 = !DILocation(line: 2556, column: 6, scope: !7834)
!7858 = !DILocation(line: 2558, column: 2, scope: !7821)
!7859 = !DILocation(line: 2571, column: 24, scope: !7589)
!7860 = !DILocation(line: 2571, column: 30, scope: !7589)
!7861 = !DILocation(line: 2571, column: 43, scope: !7589)
!7862 = !DILocation(line: 2571, column: 7, scope: !7589)
!7863 = !DILocation(line: 2572, column: 24, scope: !7589)
!7864 = !DILocation(line: 2572, column: 30, scope: !7589)
!7865 = !DILocation(line: 2572, column: 33, scope: !7589)
!7866 = !DILocation(line: 2572, column: 7, scope: !7589)
!7867 = !DILocation(line: 2574, column: 11, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2574, column: 11)
!7869 = !DILocation(line: 2574, column: 18, scope: !7868)
!7870 = !DILocation(line: 2574, column: 21, scope: !7868)
!7871 = !DILocation(line: 2574, column: 38, scope: !7868)
!7872 = !DILocation(line: 2574, column: 11, scope: !7589)
!7873 = !DILocation(line: 2575, column: 2, scope: !7868)
!7874 = !DILocation(line: 2575, column: 19, scope: !7868)
!7875 = !DILocation(line: 2577, column: 7, scope: !7589)
!7876 = !DILocation(line: 2582, column: 24, scope: !7589)
!7877 = !DILocation(line: 2582, column: 30, scope: !7589)
!7878 = !DILocation(line: 2582, column: 43, scope: !7589)
!7879 = !DILocation(line: 2582, column: 7, scope: !7589)
!7880 = !DILocation(line: 2583, column: 24, scope: !7589)
!7881 = !DILocation(line: 2583, column: 30, scope: !7589)
!7882 = !DILocation(line: 2583, column: 43, scope: !7589)
!7883 = !DILocation(line: 2583, column: 7, scope: !7589)
!7884 = !DILocation(line: 2584, column: 24, scope: !7589)
!7885 = !DILocation(line: 2584, column: 30, scope: !7589)
!7886 = !DILocation(line: 2584, column: 33, scope: !7589)
!7887 = !DILocation(line: 2584, column: 7, scope: !7589)
!7888 = !DILocation(line: 2586, column: 11, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 2586, column: 11)
!7890 = !DILocation(line: 2586, column: 18, scope: !7889)
!7891 = !DILocation(line: 2586, column: 21, scope: !7889)
!7892 = !DILocation(line: 2586, column: 38, scope: !7889)
!7893 = !DILocation(line: 2586, column: 11, scope: !7589)
!7894 = !DILocation(line: 2587, column: 2, scope: !7889)
!7895 = !DILocation(line: 2587, column: 19, scope: !7889)
!7896 = !DILocation(line: 2589, column: 7, scope: !7589)
!7897 = !DILocation(line: 2592, column: 7, scope: !7589)
!7898 = !DILocation(line: 2596, column: 9, scope: !7549)
!7899 = !DILocation(line: 2596, column: 7, scope: !7549)
!7900 = !DILocation(line: 2597, column: 12, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 2597, column: 3)
!7902 = !DILocation(line: 2597, column: 34, scope: !7901)
!7903 = !DILocation(line: 2597, column: 10, scope: !7901)
!7904 = !DILocation(line: 2597, column: 8, scope: !7901)
!7905 = !DILocation(line: 2597, column: 39, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 2597, column: 3)
!7907 = !DILocation(line: 2597, column: 41, scope: !7906)
!7908 = !DILocation(line: 2597, column: 3, scope: !7901)
!7909 = !DILocation(line: 2599, column: 11, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 2599, column: 11)
!7911 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 2598, column: 5)
!7912 = !DILocation(line: 2599, column: 15, scope: !7910)
!7913 = !DILocation(line: 2599, column: 18, scope: !7910)
!7914 = !DILocation(line: 2599, column: 11, scope: !7911)
!7915 = !DILocation(line: 2600, column: 19, scope: !7910)
!7916 = !DILocation(line: 2600, column: 25, scope: !7910)
!7917 = !DILocation(line: 2600, column: 38, scope: !7910)
!7918 = !DILocation(line: 2600, column: 2, scope: !7910)
!7919 = !DILocation(line: 2601, column: 16, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 2601, column: 16)
!7921 = !DILocation(line: 2601, column: 20, scope: !7920)
!7922 = !DILocation(line: 2601, column: 23, scope: !7920)
!7923 = !DILocation(line: 2601, column: 16, scope: !7910)
!7924 = !DILocation(line: 2602, column: 9, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 2602, column: 2)
!7926 = !DILocation(line: 2602, column: 7, scope: !7925)
!7927 = !DILocation(line: 2602, column: 14, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 2602, column: 2)
!7929 = !DILocation(line: 2602, column: 18, scope: !7928)
!7930 = !DILocation(line: 2602, column: 16, scope: !7928)
!7931 = !DILocation(line: 2602, column: 2, scope: !7925)
!7932 = !DILocation(line: 2603, column: 21, scope: !7928)
!7933 = !DILocation(line: 2603, column: 27, scope: !7928)
!7934 = !DILocation(line: 2603, column: 46, scope: !7928)
!7935 = !DILocation(line: 2603, column: 4, scope: !7928)
!7936 = !DILocation(line: 2602, column: 35, scope: !7928)
!7937 = !DILocation(line: 2602, column: 2, scope: !7928)
!7938 = distinct !{!7938, !7931, !7939}
!7939 = !DILocation(line: 2603, column: 50, scope: !7925)
!7940 = !DILocation(line: 2604, column: 5, scope: !7911)
!7941 = !DILocation(line: 2597, column: 48, scope: !7906)
!7942 = !DILocation(line: 2597, column: 3, scope: !7906)
!7943 = distinct !{!7943, !7908, !7944}
!7944 = !DILocation(line: 2604, column: 5, scope: !7901)
!7945 = !DILocation(line: 2606, column: 7, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 2606, column: 7)
!7947 = !DILocation(line: 2606, column: 14, scope: !7946)
!7948 = !DILocation(line: 2606, column: 17, scope: !7946)
!7949 = !DILocation(line: 2606, column: 34, scope: !7946)
!7950 = !DILocation(line: 2606, column: 7, scope: !7549)
!7951 = !DILocation(line: 2607, column: 5, scope: !7946)
!7952 = !DILocation(line: 2607, column: 22, scope: !7946)
!7953 = !DILocation(line: 2608, column: 1, scope: !7549)
!7954 = distinct !DISubprogram(name: "sched_analyze_1", scope: !3, file: !3, line: 2189, type: !4098, scopeLine: 2190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!7955 = !DILocalVariable(name: "deps", arg: 1, scope: !7954, file: !3, line: 2189, type: !3819)
!7956 = !DILocation(line: 2189, column: 31, scope: !7954)
!7957 = !DILocalVariable(name: "x", arg: 2, scope: !7954, file: !3, line: 2189, type: !839)
!7958 = !DILocation(line: 2189, column: 41, scope: !7954)
!7959 = !DILocalVariable(name: "insn", arg: 3, scope: !7954, file: !3, line: 2189, type: !839)
!7960 = !DILocation(line: 2189, column: 48, scope: !7954)
!7961 = !DILocalVariable(name: "dest", scope: !7954, file: !3, line: 2191, type: !839)
!7962 = !DILocation(line: 2191, column: 7, scope: !7954)
!7963 = !DILocation(line: 2191, column: 14, scope: !7954)
!7964 = !DILocalVariable(name: "code", scope: !7954, file: !3, line: 2192, type: !434)
!7965 = !DILocation(line: 2192, column: 17, scope: !7954)
!7966 = !DILocation(line: 2192, column: 24, scope: !7954)
!7967 = !DILocalVariable(name: "cslr_p", scope: !7954, file: !3, line: 2193, type: !1065)
!7968 = !DILocation(line: 2193, column: 8, scope: !7954)
!7969 = !DILocation(line: 2193, column: 17, scope: !7954)
!7970 = !DILocation(line: 2195, column: 23, scope: !7954)
!7971 = !DILocation(line: 2197, column: 3, scope: !7954)
!7972 = !DILocation(line: 2198, column: 7, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 2198, column: 7)
!7974 = !DILocation(line: 2198, column: 12, scope: !7973)
!7975 = !DILocation(line: 2198, column: 7, scope: !7954)
!7976 = !DILocation(line: 2199, column: 5, scope: !7973)
!7977 = !DILocation(line: 2201, column: 7, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 2201, column: 7)
!7979 = !DILocation(line: 2201, column: 14, scope: !7978)
!7980 = !DILocation(line: 2201, column: 17, scope: !7978)
!7981 = !DILocation(line: 2201, column: 34, scope: !7978)
!7982 = !DILocation(line: 2201, column: 7, scope: !7954)
!7983 = !DILocation(line: 2202, column: 5, scope: !7978)
!7984 = !DILocation(line: 2202, column: 22, scope: !7978)
!7985 = !DILocation(line: 2202, column: 33, scope: !7978)
!7986 = !DILocation(line: 2204, column: 7, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 2204, column: 7)
!7988 = !DILocation(line: 2204, column: 23, scope: !7987)
!7989 = !DILocation(line: 2204, column: 7, scope: !7954)
!7990 = !DILocalVariable(name: "i", scope: !7991, file: !3, line: 2206, type: !810)
!7991 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 2205, column: 5)
!7992 = !DILocation(line: 2206, column: 11, scope: !7991)
!7993 = !DILocation(line: 2208, column: 16, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 2208, column: 7)
!7995 = !DILocation(line: 2208, column: 34, scope: !7994)
!7996 = !DILocation(line: 2208, column: 14, scope: !7994)
!7997 = !DILocation(line: 2208, column: 12, scope: !7994)
!7998 = !DILocation(line: 2208, column: 39, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 2208, column: 7)
!8000 = !DILocation(line: 2208, column: 41, scope: !7999)
!8001 = !DILocation(line: 2208, column: 7, scope: !7994)
!8002 = !DILocation(line: 2209, column: 6, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 2209, column: 6)
!8004 = !DILocation(line: 2209, column: 37, scope: !8003)
!8005 = !DILocation(line: 2209, column: 6, scope: !7999)
!8006 = !DILocation(line: 2210, column: 21, scope: !8003)
!8007 = !DILocation(line: 2211, column: 7, scope: !8003)
!8008 = !DILocation(line: 2213, column: 7, scope: !8003)
!8009 = !DILocation(line: 2210, column: 4, scope: !8003)
!8010 = !DILocation(line: 2209, column: 40, scope: !8003)
!8011 = !DILocation(line: 2208, column: 48, scope: !7999)
!8012 = !DILocation(line: 2208, column: 7, scope: !7999)
!8013 = distinct !{!8013, !8001, !8014}
!8014 = !DILocation(line: 2213, column: 11, scope: !7994)
!8015 = !DILocation(line: 2215, column: 11, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 2215, column: 11)
!8017 = !DILocation(line: 2215, column: 18, scope: !8016)
!8018 = !DILocation(line: 2215, column: 21, scope: !8016)
!8019 = !DILocation(line: 2215, column: 38, scope: !8016)
!8020 = !DILocation(line: 2215, column: 11, scope: !7991)
!8021 = !DILocation(line: 2216, column: 2, scope: !8016)
!8022 = !DILocation(line: 2216, column: 19, scope: !8016)
!8023 = !DILocation(line: 2218, column: 11, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 2218, column: 11)
!8025 = !DILocation(line: 2218, column: 16, scope: !8024)
!8026 = !DILocation(line: 2218, column: 11, scope: !7991)
!8027 = !DILocation(line: 2220, column: 26, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 2219, column: 2)
!8029 = !DILocation(line: 2220, column: 24, scope: !8028)
!8030 = !DILocation(line: 2222, column: 21, scope: !8028)
!8031 = !DILocation(line: 2222, column: 27, scope: !8028)
!8032 = !DILocation(line: 2222, column: 40, scope: !8028)
!8033 = !DILocation(line: 2222, column: 4, scope: !8028)
!8034 = !DILocation(line: 2224, column: 24, scope: !8028)
!8035 = !DILocation(line: 2225, column: 2, scope: !8028)
!8036 = !DILocation(line: 2227, column: 7, scope: !7991)
!8037 = !DILocation(line: 2230, column: 3, scope: !7954)
!8038 = !DILocation(line: 2230, column: 10, scope: !7954)
!8039 = !DILocation(line: 2230, column: 26, scope: !7954)
!8040 = !DILocation(line: 2230, column: 45, scope: !7954)
!8041 = !DILocation(line: 2230, column: 48, scope: !7954)
!8042 = !DILocation(line: 2230, column: 64, scope: !7954)
!8043 = !DILocation(line: 2231, column: 3, scope: !7954)
!8044 = !DILocation(line: 2231, column: 6, scope: !7954)
!8045 = !DILocation(line: 2231, column: 22, scope: !7954)
!8046 = !DILocation(line: 2233, column: 11, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 2233, column: 11)
!8048 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 2232, column: 5)
!8049 = !DILocation(line: 2233, column: 27, scope: !8047)
!8050 = !DILocation(line: 2234, column: 3, scope: !8047)
!8051 = !DILocation(line: 2234, column: 6, scope: !8047)
!8052 = !DILocation(line: 2234, column: 22, scope: !8047)
!8053 = !DILocation(line: 2235, column: 3, scope: !8047)
!8054 = !DILocation(line: 2235, column: 31, scope: !8047)
!8055 = !DILocation(line: 2235, column: 6, scope: !8047)
!8056 = !DILocation(line: 2233, column: 11, scope: !8048)
!8057 = !DILocation(line: 2243, column: 21, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 2236, column: 9)
!8059 = !DILocation(line: 2243, column: 27, scope: !8058)
!8060 = !DILocation(line: 2243, column: 43, scope: !8058)
!8061 = !DILocation(line: 2243, column: 4, scope: !8058)
!8062 = !DILocation(line: 2244, column: 2, scope: !8058)
!8063 = !DILocation(line: 2245, column: 11, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 2245, column: 11)
!8065 = !DILocation(line: 2245, column: 27, scope: !8064)
!8066 = !DILocation(line: 2245, column: 11, scope: !8048)
!8067 = !DILocation(line: 2248, column: 21, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 2246, column: 2)
!8069 = !DILocation(line: 2248, column: 27, scope: !8068)
!8070 = !DILocation(line: 2248, column: 43, scope: !8068)
!8071 = !DILocation(line: 2248, column: 4, scope: !8068)
!8072 = !DILocation(line: 2249, column: 21, scope: !8068)
!8073 = !DILocation(line: 2249, column: 27, scope: !8068)
!8074 = !DILocation(line: 2249, column: 43, scope: !8068)
!8075 = !DILocation(line: 2249, column: 4, scope: !8068)
!8076 = !DILocation(line: 2250, column: 2, scope: !8068)
!8077 = !DILocation(line: 2251, column: 14, scope: !8048)
!8078 = !DILocation(line: 2251, column: 12, scope: !8048)
!8079 = distinct !{!8079, !8037, !8080}
!8080 = !DILocation(line: 2252, column: 5, scope: !7954)
!8081 = !DILocation(line: 2254, column: 7, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 2254, column: 7)
!8083 = !DILocation(line: 2254, column: 7, scope: !7954)
!8084 = !DILocalVariable(name: "regno", scope: !8085, file: !3, line: 2256, type: !810)
!8085 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2255, column: 5)
!8086 = !DILocation(line: 2256, column: 11, scope: !8085)
!8087 = !DILocation(line: 2256, column: 19, scope: !8085)
!8088 = !DILocalVariable(name: "mode", scope: !8085, file: !3, line: 2257, type: !5)
!8089 = !DILocation(line: 2257, column: 25, scope: !8085)
!8090 = !DILocation(line: 2257, column: 32, scope: !8085)
!8091 = !DILocation(line: 2259, column: 26, scope: !8085)
!8092 = !DILocation(line: 2259, column: 32, scope: !8085)
!8093 = !DILocation(line: 2259, column: 39, scope: !8085)
!8094 = !DILocation(line: 2259, column: 45, scope: !8085)
!8095 = !DILocation(line: 2259, column: 51, scope: !8085)
!8096 = !DILocation(line: 2259, column: 7, scope: !8085)
!8097 = !DILocation(line: 2263, column: 11, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 2263, column: 11)
!8099 = !DILocation(line: 2263, column: 17, scope: !8098)
!8100 = !DILocation(line: 2263, column: 36, scope: !8098)
!8101 = !DILocation(line: 2263, column: 39, scope: !8098)
!8102 = !DILocation(line: 2263, column: 45, scope: !8098)
!8103 = !DILocation(line: 2263, column: 11, scope: !8085)
!8104 = !DILocalVariable(name: "nregs", scope: !8105, file: !3, line: 2265, type: !810)
!8105 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 2264, column: 2)
!8106 = !DILocation(line: 2265, column: 8, scope: !8105)
!8107 = !DILocation(line: 2268, column: 8, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8105, file: !3, line: 2268, column: 8)
!8109 = !DILocation(line: 2268, column: 14, scope: !8108)
!8110 = !DILocation(line: 2268, column: 8, scope: !8105)
!8111 = !DILocation(line: 2269, column: 25, scope: !8108)
!8112 = !DILocation(line: 2269, column: 48, scope: !8108)
!8113 = !DILocation(line: 2269, column: 54, scope: !8108)
!8114 = !DILocation(line: 2269, column: 60, scope: !8108)
!8115 = !DILocation(line: 2269, column: 6, scope: !8108)
!8116 = !DILocation(line: 2271, column: 46, scope: !8105)
!8117 = !DILocation(line: 2271, column: 12, scope: !8105)
!8118 = !DILocation(line: 2271, column: 10, scope: !8105)
!8119 = !DILocation(line: 2272, column: 4, scope: !8105)
!8120 = !DILocation(line: 2272, column: 11, scope: !8105)
!8121 = !DILocation(line: 2272, column: 19, scope: !8105)
!8122 = !DILocation(line: 2273, column: 6, scope: !8105)
!8123 = distinct !{!8123, !8119, !8122}
!8124 = !DILocation(line: 2275, column: 2, scope: !8105)
!8125 = !DILocation(line: 2277, column: 5, scope: !8085)
!8126 = !DILocation(line: 2278, column: 12, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2278, column: 12)
!8128 = !DILocation(line: 2278, column: 12, scope: !8082)
!8129 = !DILocalVariable(name: "t", scope: !8130, file: !3, line: 2281, type: !839)
!8130 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2279, column: 5)
!8131 = !DILocation(line: 2281, column: 11, scope: !8130)
!8132 = !DILocation(line: 2281, column: 15, scope: !8130)
!8133 = !DILocation(line: 2283, column: 11, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 2283, column: 11)
!8135 = !DILocation(line: 2283, column: 28, scope: !8134)
!8136 = !DILocation(line: 2283, column: 11, scope: !8130)
!8137 = !DILocalVariable(name: "address_mode", scope: !8138, file: !3, line: 2285, type: !5)
!8138 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 2284, column: 2)
!8139 = !DILocation(line: 2285, column: 22, scope: !8138)
!8140 = !DILocation(line: 2286, column: 27, scope: !8138)
!8141 = !DILocation(line: 2286, column: 41, scope: !8138)
!8142 = !DILocation(line: 2286, column: 8, scope: !8138)
!8143 = !DILocation(line: 2288, column: 8, scope: !8138)
!8144 = !DILocation(line: 2288, column: 6, scope: !8138)
!8145 = !DILocation(line: 2289, column: 29, scope: !8138)
!8146 = !DILocation(line: 2289, column: 42, scope: !8138)
!8147 = !DILocation(line: 2289, column: 59, scope: !8138)
!8148 = !DILocation(line: 2289, column: 4, scope: !8138)
!8149 = !DILocation(line: 2290, column: 42, scope: !8138)
!8150 = !DILocation(line: 2290, column: 18, scope: !8138)
!8151 = !DILocation(line: 2290, column: 4, scope: !8138)
!8152 = !DILocation(line: 2290, column: 16, scope: !8138)
!8153 = !DILocation(line: 2291, column: 2, scope: !8138)
!8154 = !DILocation(line: 2292, column: 22, scope: !8130)
!8155 = !DILocation(line: 2292, column: 11, scope: !8130)
!8156 = !DILocation(line: 2292, column: 9, scope: !8130)
!8157 = !DILocation(line: 2295, column: 12, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 2295, column: 11)
!8159 = !DILocation(line: 2295, column: 18, scope: !8158)
!8160 = !DILocation(line: 2296, column: 11, scope: !8158)
!8161 = !DILocation(line: 2296, column: 16, scope: !8158)
!8162 = !DILocation(line: 2296, column: 22, scope: !8158)
!8163 = !DILocation(line: 2296, column: 49, scope: !8158)
!8164 = !DILocation(line: 2296, column: 55, scope: !8158)
!8165 = !DILocation(line: 2296, column: 47, scope: !8158)
!8166 = !DILocation(line: 2297, column: 17, scope: !8158)
!8167 = !DILocation(line: 2297, column: 15, scope: !8158)
!8168 = !DILocation(line: 2295, column: 11, scope: !8130)
!8169 = !DILocation(line: 2304, column: 25, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 2298, column: 2)
!8171 = !DILocation(line: 2304, column: 31, scope: !8170)
!8172 = !DILocation(line: 2304, column: 4, scope: !8170)
!8173 = !DILocation(line: 2305, column: 2, scope: !8170)
!8174 = !DILocalVariable(name: "pending", scope: !8175, file: !3, line: 2308, type: !839)
!8175 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 2307, column: 2)
!8176 = !DILocation(line: 2308, column: 8, scope: !8175)
!8177 = !DILocalVariable(name: "pending_mem", scope: !8175, file: !3, line: 2308, type: !839)
!8178 = !DILocation(line: 2308, column: 17, scope: !8175)
!8179 = !DILocation(line: 2310, column: 14, scope: !8175)
!8180 = !DILocation(line: 2310, column: 20, scope: !8175)
!8181 = !DILocation(line: 2310, column: 12, scope: !8175)
!8182 = !DILocation(line: 2311, column: 18, scope: !8175)
!8183 = !DILocation(line: 2311, column: 24, scope: !8175)
!8184 = !DILocation(line: 2311, column: 16, scope: !8175)
!8185 = !DILocation(line: 2312, column: 4, scope: !8175)
!8186 = !DILocation(line: 2312, column: 11, scope: !8175)
!8187 = !DILocation(line: 2314, column: 29, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 2314, column: 12)
!8189 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2313, column: 6)
!8190 = !DILocation(line: 2314, column: 52, scope: !8188)
!8191 = !DILocation(line: 2314, column: 12, scope: !8188)
!8192 = !DILocation(line: 2315, column: 5, scope: !8188)
!8193 = !DILocation(line: 2315, column: 42, scope: !8188)
!8194 = !DILocation(line: 2315, column: 48, scope: !8188)
!8195 = !DILocation(line: 2315, column: 10, scope: !8188)
!8196 = !DILocation(line: 2314, column: 12, scope: !8189)
!8197 = !DILocation(line: 2316, column: 17, scope: !8188)
!8198 = !DILocation(line: 2316, column: 20, scope: !8188)
!8199 = !DILocation(line: 2316, column: 43, scope: !8188)
!8200 = !DILocation(line: 2316, column: 3, scope: !8188)
!8201 = !DILocation(line: 2319, column: 18, scope: !8189)
!8202 = !DILocation(line: 2319, column: 16, scope: !8189)
!8203 = !DILocation(line: 2320, column: 22, scope: !8189)
!8204 = !DILocation(line: 2320, column: 20, scope: !8189)
!8205 = distinct !{!8205, !8185, !8206}
!8206 = !DILocation(line: 2321, column: 6, scope: !8175)
!8207 = !DILocation(line: 2323, column: 14, scope: !8175)
!8208 = !DILocation(line: 2323, column: 20, scope: !8175)
!8209 = !DILocation(line: 2323, column: 12, scope: !8175)
!8210 = !DILocation(line: 2324, column: 18, scope: !8175)
!8211 = !DILocation(line: 2324, column: 24, scope: !8175)
!8212 = !DILocation(line: 2324, column: 16, scope: !8175)
!8213 = !DILocation(line: 2325, column: 4, scope: !8175)
!8214 = !DILocation(line: 2325, column: 11, scope: !8175)
!8215 = !DILocation(line: 2327, column: 31, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2327, column: 12)
!8217 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2326, column: 6)
!8218 = !DILocation(line: 2327, column: 54, scope: !8216)
!8219 = !DILocation(line: 2327, column: 12, scope: !8216)
!8220 = !DILocation(line: 2328, column: 5, scope: !8216)
!8221 = !DILocation(line: 2328, column: 42, scope: !8216)
!8222 = !DILocation(line: 2328, column: 48, scope: !8216)
!8223 = !DILocation(line: 2328, column: 10, scope: !8216)
!8224 = !DILocation(line: 2327, column: 12, scope: !8217)
!8225 = !DILocation(line: 2329, column: 17, scope: !8216)
!8226 = !DILocation(line: 2329, column: 20, scope: !8216)
!8227 = !DILocation(line: 2329, column: 43, scope: !8216)
!8228 = !DILocation(line: 2329, column: 3, scope: !8216)
!8229 = !DILocation(line: 2332, column: 18, scope: !8217)
!8230 = !DILocation(line: 2332, column: 16, scope: !8217)
!8231 = !DILocation(line: 2333, column: 22, scope: !8217)
!8232 = !DILocation(line: 2333, column: 20, scope: !8217)
!8233 = distinct !{!8233, !8213, !8234}
!8234 = !DILocation(line: 2334, column: 6, scope: !8175)
!8235 = !DILocation(line: 2336, column: 25, scope: !8175)
!8236 = !DILocation(line: 2336, column: 31, scope: !8175)
!8237 = !DILocation(line: 2336, column: 37, scope: !8175)
!8238 = !DILocation(line: 2336, column: 4, scope: !8175)
!8239 = !DILocation(line: 2339, column: 16, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2339, column: 15)
!8241 = !DILocation(line: 2339, column: 22, scope: !8240)
!8242 = !DILocation(line: 2339, column: 15, scope: !8175)
!8243 = !DILocation(line: 2340, column: 38, scope: !8240)
!8244 = !DILocation(line: 2340, column: 51, scope: !8240)
!8245 = !DILocation(line: 2340, column: 57, scope: !8240)
!8246 = !DILocation(line: 2340, column: 13, scope: !8240)
!8247 = !DILocation(line: 2342, column: 24, scope: !8130)
!8248 = !DILocation(line: 2342, column: 30, scope: !8130)
!8249 = !DILocation(line: 2342, column: 46, scope: !8130)
!8250 = !DILocation(line: 2342, column: 7, scope: !8130)
!8251 = !DILocation(line: 2343, column: 5, scope: !8130)
!8252 = !DILocation(line: 2345, column: 7, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 2345, column: 7)
!8254 = !DILocation(line: 2345, column: 14, scope: !8253)
!8255 = !DILocation(line: 2345, column: 17, scope: !8253)
!8256 = !DILocation(line: 2345, column: 34, scope: !8253)
!8257 = !DILocation(line: 2345, column: 7, scope: !7954)
!8258 = !DILocation(line: 2346, column: 5, scope: !8253)
!8259 = !DILocation(line: 2346, column: 22, scope: !8253)
!8260 = !DILocation(line: 2349, column: 7, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 2349, column: 7)
!8262 = !DILocation(line: 2349, column: 20, scope: !8261)
!8263 = !DILocation(line: 2349, column: 7, scope: !7954)
!8264 = !DILocation(line: 2351, column: 29, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 2350, column: 5)
!8266 = !DILocation(line: 2351, column: 27, scope: !8265)
!8267 = !DILocation(line: 2353, column: 24, scope: !8265)
!8268 = !DILocation(line: 2353, column: 30, scope: !8265)
!8269 = !DILocation(line: 2353, column: 43, scope: !8265)
!8270 = !DILocation(line: 2353, column: 7, scope: !8265)
!8271 = !DILocation(line: 2355, column: 27, scope: !8265)
!8272 = !DILocation(line: 2356, column: 5, scope: !8265)
!8273 = !DILocation(line: 2357, column: 1, scope: !7954)
!8274 = distinct !DISubprogram(name: "setup_insn_reg_uses", scope: !3, file: !3, line: 1767, type: !3817, scopeLine: 1768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8275 = !DILocalVariable(name: "deps", arg: 1, scope: !8274, file: !3, line: 1767, type: !3819)
!8276 = !DILocation(line: 1767, column: 35, scope: !8274)
!8277 = !DILocalVariable(name: "insn", arg: 2, scope: !8274, file: !3, line: 1767, type: !839)
!8278 = !DILocation(line: 1767, column: 45, scope: !8274)
!8279 = !DILocalVariable(name: "i", scope: !8274, file: !3, line: 1769, type: !7)
!8280 = !DILocation(line: 1769, column: 12, scope: !8274)
!8281 = !DILocalVariable(name: "rsi", scope: !8274, file: !3, line: 1770, type: !4114)
!8282 = !DILocation(line: 1770, column: 20, scope: !8274)
!8283 = !DILocalVariable(name: "list", scope: !8274, file: !3, line: 1771, type: !839)
!8284 = !DILocation(line: 1771, column: 7, scope: !8274)
!8285 = !DILocalVariable(name: "use", scope: !8274, file: !3, line: 1772, type: !2028)
!8286 = !DILocation(line: 1772, column: 24, scope: !8274)
!8287 = !DILocalVariable(name: "use2", scope: !8274, file: !3, line: 1772, type: !2028)
!8288 = !DILocation(line: 1772, column: 30, scope: !8274)
!8289 = !DILocalVariable(name: "next", scope: !8274, file: !3, line: 1772, type: !2028)
!8290 = !DILocation(line: 1772, column: 37, scope: !8274)
!8291 = !DILocalVariable(name: "reg_last", scope: !8274, file: !3, line: 1773, type: !1988)
!8292 = !DILocation(line: 1773, column: 20, scope: !8274)
!8293 = !DILocation(line: 1775, column: 3, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1775, column: 3)
!8295 = !DILocation(line: 1775, column: 3, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 1775, column: 3)
!8297 = !DILocation(line: 1777, column: 11, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 1777, column: 11)
!8299 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 1776, column: 5)
!8300 = !DILocation(line: 1777, column: 13, scope: !8298)
!8301 = !DILocation(line: 1778, column: 4, scope: !8298)
!8302 = !DILocation(line: 1778, column: 7, scope: !8298)
!8303 = !DILocation(line: 1777, column: 11, scope: !8299)
!8304 = !DILocation(line: 1779, column: 2, scope: !8298)
!8305 = !DILocation(line: 1781, column: 28, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 1781, column: 11)
!8307 = !DILocation(line: 1781, column: 44, scope: !8306)
!8308 = !DILocation(line: 1781, column: 11, scope: !8306)
!8309 = !DILocation(line: 1781, column: 47, scope: !8306)
!8310 = !DILocation(line: 1782, column: 4, scope: !8306)
!8311 = !DILocation(line: 1782, column: 9, scope: !8306)
!8312 = !DILocation(line: 1783, column: 4, scope: !8306)
!8313 = !DILocation(line: 1783, column: 9, scope: !8306)
!8314 = !DILocation(line: 1781, column: 11, scope: !8299)
!8315 = !DILocation(line: 1785, column: 2, scope: !8306)
!8316 = !DILocation(line: 1787, column: 34, scope: !8299)
!8317 = !DILocation(line: 1787, column: 37, scope: !8299)
!8318 = !DILocation(line: 1787, column: 13, scope: !8299)
!8319 = !DILocation(line: 1787, column: 11, scope: !8299)
!8320 = !DILocation(line: 1788, column: 29, scope: !8299)
!8321 = !DILocation(line: 1788, column: 7, scope: !8299)
!8322 = !DILocation(line: 1788, column: 12, scope: !8299)
!8323 = !DILocation(line: 1788, column: 27, scope: !8299)
!8324 = !DILocation(line: 1789, column: 19, scope: !8299)
!8325 = !DILocation(line: 1789, column: 25, scope: !8299)
!8326 = !DILocation(line: 1789, column: 34, scope: !8299)
!8327 = !DILocation(line: 1789, column: 16, scope: !8299)
!8328 = !DILocation(line: 1792, column: 19, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 1792, column: 7)
!8330 = !DILocation(line: 1792, column: 29, scope: !8329)
!8331 = !DILocation(line: 1792, column: 17, scope: !8329)
!8332 = !DILocation(line: 1792, column: 12, scope: !8329)
!8333 = !DILocation(line: 1792, column: 35, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 1792, column: 7)
!8335 = !DILocation(line: 1792, column: 7, scope: !8329)
!8336 = !DILocation(line: 1794, column: 32, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 1793, column: 2)
!8338 = !DILocation(line: 1794, column: 35, scope: !8337)
!8339 = !DILocation(line: 1794, column: 11, scope: !8337)
!8340 = !DILocation(line: 1794, column: 9, scope: !8337)
!8341 = !DILocation(line: 1795, column: 11, scope: !8337)
!8342 = !DILocation(line: 1795, column: 16, scope: !8337)
!8343 = !DILocation(line: 1795, column: 9, scope: !8337)
!8344 = !DILocation(line: 1796, column: 26, scope: !8337)
!8345 = !DILocation(line: 1796, column: 4, scope: !8337)
!8346 = !DILocation(line: 1796, column: 9, scope: !8337)
!8347 = !DILocation(line: 1796, column: 24, scope: !8337)
!8348 = !DILocation(line: 1797, column: 27, scope: !8337)
!8349 = !DILocation(line: 1797, column: 4, scope: !8337)
!8350 = !DILocation(line: 1797, column: 10, scope: !8337)
!8351 = !DILocation(line: 1797, column: 25, scope: !8337)
!8352 = !DILocation(line: 1798, column: 2, scope: !8337)
!8353 = !DILocation(line: 1792, column: 48, scope: !8334)
!8354 = !DILocation(line: 1792, column: 46, scope: !8334)
!8355 = !DILocation(line: 1792, column: 7, scope: !8334)
!8356 = distinct !{!8356, !8335, !8357}
!8357 = !DILocation(line: 1798, column: 2, scope: !8329)
!8358 = !DILocation(line: 1799, column: 5, scope: !8299)
!8359 = distinct !{!8359, !8293, !8360}
!8360 = !DILocation(line: 1799, column: 5, scope: !8294)
!8361 = !DILocation(line: 1800, column: 1, scope: !8274)
!8362 = !DILocalVariable(name: "insn", arg: 1, scope: !2185, file: !3, line: 1998, type: !839)
!8363 = !DILocation(line: 1998, column: 35, scope: !2185)
!8364 = !DILocalVariable(name: "i", scope: !2185, file: !3, line: 2000, type: !810)
!8365 = !DILocation(line: 2000, column: 7, scope: !2185)
!8366 = !DILocalVariable(name: "len", scope: !2185, file: !3, line: 2000, type: !810)
!8367 = !DILocation(line: 2000, column: 10, scope: !2185)
!8368 = !DILocalVariable(name: "cl", scope: !2185, file: !3, line: 2001, type: !772)
!8369 = !DILocation(line: 2001, column: 18, scope: !2185)
!8370 = !DILocalVariable(name: "link", scope: !2185, file: !3, line: 2003, type: !839)
!8371 = !DILocation(line: 2003, column: 7, scope: !2185)
!8372 = !DILocation(line: 2005, column: 3, scope: !2185)
!8373 = !DILocation(line: 2007, column: 9, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 2007, column: 7)
!8375 = !DILocation(line: 2007, column: 7, scope: !2185)
!8376 = !DILocation(line: 2008, column: 5, scope: !8374)
!8377 = !DILocation(line: 2010, column: 10, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 2010, column: 3)
!8379 = !DILocation(line: 2010, column: 8, scope: !8378)
!8380 = !DILocation(line: 2010, column: 15, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 2010, column: 3)
!8382 = !DILocation(line: 2010, column: 19, scope: !8381)
!8383 = !DILocation(line: 2010, column: 17, scope: !8381)
!8384 = !DILocation(line: 2010, column: 3, scope: !8378)
!8385 = !DILocation(line: 2012, column: 32, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 2011, column: 5)
!8387 = !DILocation(line: 2012, column: 12, scope: !8386)
!8388 = !DILocation(line: 2012, column: 10, scope: !8386)
!8389 = !DILocation(line: 2013, column: 25, scope: !8386)
!8390 = !DILocation(line: 2013, column: 7, scope: !8386)
!8391 = !DILocation(line: 2013, column: 29, scope: !8386)
!8392 = !DILocation(line: 2013, column: 46, scope: !8386)
!8393 = !DILocation(line: 2014, column: 25, scope: !8386)
!8394 = !DILocation(line: 2014, column: 7, scope: !8386)
!8395 = !DILocation(line: 2014, column: 29, scope: !8386)
!8396 = !DILocation(line: 2014, column: 42, scope: !8386)
!8397 = !DILocation(line: 2015, column: 25, scope: !8386)
!8398 = !DILocation(line: 2015, column: 7, scope: !8386)
!8399 = !DILocation(line: 2015, column: 29, scope: !8386)
!8400 = !DILocation(line: 2015, column: 49, scope: !8386)
!8401 = !DILocation(line: 2016, column: 25, scope: !8386)
!8402 = !DILocation(line: 2016, column: 7, scope: !8386)
!8403 = !DILocation(line: 2016, column: 29, scope: !8386)
!8404 = !DILocation(line: 2016, column: 36, scope: !8386)
!8405 = !DILocation(line: 2017, column: 5, scope: !8386)
!8406 = !DILocation(line: 2010, column: 46, scope: !8381)
!8407 = !DILocation(line: 2010, column: 3, scope: !8381)
!8408 = distinct !{!8408, !8384, !8409}
!8409 = !DILocation(line: 2017, column: 5, scope: !8378)
!8410 = !DILocation(line: 2019, column: 16, scope: !2185)
!8411 = !DILocation(line: 2019, column: 55, scope: !2185)
!8412 = !DILocation(line: 2019, column: 3, scope: !2185)
!8413 = !DILocation(line: 2021, column: 16, scope: !2185)
!8414 = !DILocation(line: 2021, column: 53, scope: !2185)
!8415 = !DILocation(line: 2021, column: 3, scope: !2185)
!8416 = !DILocation(line: 2029, column: 15, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 2029, column: 3)
!8418 = !DILocation(line: 2029, column: 13, scope: !8417)
!8419 = !DILocation(line: 2029, column: 8, scope: !8417)
!8420 = !DILocation(line: 2029, column: 33, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2029, column: 3)
!8422 = !DILocation(line: 2029, column: 3, scope: !8417)
!8423 = !DILocation(line: 2030, column: 9, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 2030, column: 9)
!8425 = !DILocation(line: 2030, column: 30, scope: !8424)
!8426 = !DILocation(line: 2030, column: 9, scope: !8421)
!8427 = !DILocation(line: 2031, column: 23, scope: !8424)
!8428 = !DILocation(line: 2031, column: 7, scope: !8424)
!8429 = !DILocation(line: 2030, column: 33, scope: !8424)
!8430 = !DILocation(line: 2029, column: 46, scope: !8421)
!8431 = !DILocation(line: 2029, column: 44, scope: !8421)
!8432 = !DILocation(line: 2029, column: 3, scope: !8421)
!8433 = distinct !{!8433, !8422, !8434}
!8434 = !DILocation(line: 2031, column: 37, scope: !8417)
!8435 = !DILocation(line: 2033, column: 45, scope: !2185)
!8436 = !DILocation(line: 2033, column: 43, scope: !2185)
!8437 = !DILocation(line: 2033, column: 9, scope: !2185)
!8438 = !DILocation(line: 2033, column: 7, scope: !2185)
!8439 = !DILocation(line: 2035, column: 72, scope: !2185)
!8440 = !DILocation(line: 2035, column: 63, scope: !2185)
!8441 = !DILocation(line: 2035, column: 34, scope: !2185)
!8442 = !DILocation(line: 2035, column: 7, scope: !2185)
!8443 = !DILocation(line: 2035, column: 32, scope: !2185)
!8444 = !DILocation(line: 2035, column: 5, scope: !2185)
!8445 = !DILocation(line: 2036, column: 51, scope: !2185)
!8446 = !DILocation(line: 2037, column: 9, scope: !2185)
!8447 = !DILocation(line: 2036, column: 42, scope: !2185)
!8448 = !DILocation(line: 2036, column: 34, scope: !2185)
!8449 = !DILocation(line: 2036, column: 3, scope: !2185)
!8450 = !DILocation(line: 2036, column: 32, scope: !2185)
!8451 = !DILocation(line: 2038, column: 10, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 2038, column: 3)
!8453 = !DILocation(line: 2038, column: 8, scope: !8452)
!8454 = !DILocation(line: 2038, column: 15, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 2038, column: 3)
!8456 = !DILocation(line: 2038, column: 19, scope: !8455)
!8457 = !DILocation(line: 2038, column: 17, scope: !8455)
!8458 = !DILocation(line: 2038, column: 3, scope: !8452)
!8459 = !DILocation(line: 2040, column: 32, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 2039, column: 5)
!8461 = !DILocation(line: 2040, column: 12, scope: !8460)
!8462 = !DILocation(line: 2040, column: 10, scope: !8460)
!8463 = !DILocation(line: 2042, column: 22, scope: !8460)
!8464 = !DILocation(line: 2042, column: 4, scope: !8460)
!8465 = !DILocation(line: 2042, column: 26, scope: !8460)
!8466 = !DILocation(line: 2041, column: 7, scope: !8460)
!8467 = !DILocation(line: 2041, column: 21, scope: !8460)
!8468 = !DILocation(line: 2041, column: 24, scope: !8460)
!8469 = !DILocation(line: 2042, column: 2, scope: !8460)
!8470 = !DILocation(line: 2043, column: 57, scope: !8460)
!8471 = !DILocation(line: 2043, column: 39, scope: !8460)
!8472 = !DILocation(line: 2043, column: 61, scope: !8460)
!8473 = !DILocation(line: 2043, column: 7, scope: !8460)
!8474 = !DILocation(line: 2043, column: 21, scope: !8460)
!8475 = !DILocation(line: 2043, column: 24, scope: !8460)
!8476 = !DILocation(line: 2043, column: 37, scope: !8460)
!8477 = !DILocation(line: 2045, column: 22, scope: !8460)
!8478 = !DILocation(line: 2045, column: 4, scope: !8460)
!8479 = !DILocation(line: 2045, column: 26, scope: !8460)
!8480 = !DILocation(line: 2044, column: 7, scope: !8460)
!8481 = !DILocation(line: 2044, column: 21, scope: !8460)
!8482 = !DILocation(line: 2044, column: 24, scope: !8460)
!8483 = !DILocation(line: 2045, column: 2, scope: !8460)
!8484 = !DILocation(line: 2046, column: 51, scope: !8460)
!8485 = !DILocation(line: 2046, column: 33, scope: !8460)
!8486 = !DILocation(line: 2046, column: 55, scope: !8460)
!8487 = !DILocation(line: 2046, column: 7, scope: !8460)
!8488 = !DILocation(line: 2046, column: 21, scope: !8460)
!8489 = !DILocation(line: 2046, column: 24, scope: !8460)
!8490 = !DILocation(line: 2046, column: 31, scope: !8460)
!8491 = !DILocation(line: 2047, column: 5, scope: !8460)
!8492 = !DILocation(line: 2038, column: 46, scope: !8455)
!8493 = !DILocation(line: 2038, column: 3, scope: !8455)
!8494 = distinct !{!8494, !8458, !8495}
!8495 = !DILocation(line: 2047, column: 5, scope: !8452)
!8496 = !DILocation(line: 2048, column: 1, scope: !2185)
!8497 = distinct !DISubprogram(name: "sched_analyze_reg", scope: !3, file: !3, line: 2110, type: !8498, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8498 = !DISubroutineType(types: !8499)
!8499 = !{null, !3819, !810, !5, !434, !839}
!8500 = !DILocalVariable(name: "deps", arg: 1, scope: !8497, file: !3, line: 2110, type: !3819)
!8501 = !DILocation(line: 2110, column: 33, scope: !8497)
!8502 = !DILocalVariable(name: "regno", arg: 2, scope: !8497, file: !3, line: 2110, type: !810)
!8503 = !DILocation(line: 2110, column: 43, scope: !8497)
!8504 = !DILocalVariable(name: "mode", arg: 3, scope: !8497, file: !3, line: 2110, type: !5)
!8505 = !DILocation(line: 2110, column: 68, scope: !8497)
!8506 = !DILocalVariable(name: "ref", arg: 4, scope: !8497, file: !3, line: 2111, type: !434)
!8507 = !DILocation(line: 2111, column: 20, scope: !8497)
!8508 = !DILocalVariable(name: "insn", arg: 5, scope: !8497, file: !3, line: 2111, type: !839)
!8509 = !DILocation(line: 2111, column: 29, scope: !8497)
!8510 = !DILocation(line: 2114, column: 8, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2114, column: 7)
!8512 = !DILocation(line: 2114, column: 25, scope: !8511)
!8513 = !DILocation(line: 2114, column: 28, scope: !8511)
!8514 = !DILocation(line: 2115, column: 7, scope: !8511)
!8515 = !DILocation(line: 2115, column: 11, scope: !8511)
!8516 = !DILocation(line: 2115, column: 20, scope: !8511)
!8517 = !DILocation(line: 2115, column: 35, scope: !8511)
!8518 = !DILocation(line: 2115, column: 17, scope: !8511)
!8519 = !DILocation(line: 2115, column: 39, scope: !8511)
!8520 = !DILocation(line: 2115, column: 42, scope: !8511)
!8521 = !DILocation(line: 2115, column: 51, scope: !8511)
!8522 = !DILocation(line: 2115, column: 57, scope: !8511)
!8523 = !DILocation(line: 2115, column: 48, scope: !8511)
!8524 = !DILocation(line: 2114, column: 7, scope: !8497)
!8525 = !DILocation(line: 2116, column: 27, scope: !8511)
!8526 = !DILocation(line: 2116, column: 33, scope: !8511)
!8527 = !DILocation(line: 2116, column: 5, scope: !8511)
!8528 = !DILocation(line: 2118, column: 3, scope: !8497)
!8529 = !DILocation(line: 2122, column: 7, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2122, column: 7)
!8531 = !DILocation(line: 2122, column: 13, scope: !8530)
!8532 = !DILocation(line: 2122, column: 7, scope: !8497)
!8533 = !DILocalVariable(name: "i", scope: !8534, file: !3, line: 2124, type: !810)
!8534 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 2123, column: 5)
!8535 = !DILocation(line: 2124, column: 11, scope: !8534)
!8536 = !DILocation(line: 2124, column: 32, scope: !8534)
!8537 = !DILocation(line: 2124, column: 15, scope: !8534)
!8538 = !DILocation(line: 2124, column: 39, scope: !8534)
!8539 = !DILocation(line: 2125, column: 11, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 2125, column: 11)
!8541 = !DILocation(line: 2125, column: 15, scope: !8540)
!8542 = !DILocation(line: 2125, column: 11, scope: !8534)
!8543 = !DILocation(line: 2127, column: 4, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 2126, column: 2)
!8545 = !DILocation(line: 2127, column: 11, scope: !8544)
!8546 = !DILocation(line: 2127, column: 15, scope: !8544)
!8547 = !DILocation(line: 2128, column: 20, scope: !8544)
!8548 = !DILocation(line: 2128, column: 28, scope: !8544)
!8549 = !DILocation(line: 2128, column: 26, scope: !8544)
!8550 = !DILocation(line: 2128, column: 6, scope: !8544)
!8551 = distinct !{!8551, !8543, !8552}
!8552 = !DILocation(line: 2128, column: 29, scope: !8544)
!8553 = !DILocation(line: 2129, column: 2, scope: !8544)
!8554 = !DILocation(line: 2130, column: 16, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 2130, column: 16)
!8556 = !DILocation(line: 2130, column: 20, scope: !8555)
!8557 = !DILocation(line: 2130, column: 16, scope: !8540)
!8558 = !DILocation(line: 2132, column: 4, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 2131, column: 2)
!8560 = !DILocation(line: 2132, column: 11, scope: !8559)
!8561 = !DILocation(line: 2132, column: 15, scope: !8559)
!8562 = !DILocation(line: 2133, column: 20, scope: !8559)
!8563 = !DILocation(line: 2133, column: 28, scope: !8559)
!8564 = !DILocation(line: 2133, column: 26, scope: !8559)
!8565 = !DILocation(line: 2133, column: 6, scope: !8559)
!8566 = distinct !{!8566, !8558, !8567}
!8567 = !DILocation(line: 2133, column: 29, scope: !8559)
!8568 = !DILocation(line: 2134, column: 2, scope: !8559)
!8569 = !DILocation(line: 2137, column: 4, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 2136, column: 2)
!8571 = !DILocation(line: 2137, column: 11, scope: !8570)
!8572 = !DILocation(line: 2137, column: 15, scope: !8570)
!8573 = !DILocation(line: 2138, column: 24, scope: !8570)
!8574 = !DILocation(line: 2138, column: 32, scope: !8570)
!8575 = !DILocation(line: 2138, column: 30, scope: !8570)
!8576 = !DILocation(line: 2138, column: 6, scope: !8570)
!8577 = distinct !{!8577, !8569, !8578}
!8578 = !DILocation(line: 2138, column: 33, scope: !8570)
!8579 = !DILocation(line: 2140, column: 5, scope: !8534)
!8580 = !DILocation(line: 2145, column: 12, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 2145, column: 12)
!8582 = !DILocation(line: 2145, column: 21, scope: !8581)
!8583 = !DILocation(line: 2145, column: 27, scope: !8581)
!8584 = !DILocation(line: 2145, column: 18, scope: !8581)
!8585 = !DILocation(line: 2145, column: 12, scope: !8530)
!8586 = !DILocalVariable(name: "code", scope: !8587, file: !3, line: 2147, type: !434)
!8587 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 2146, column: 5)
!8588 = !DILocation(line: 2147, column: 21, scope: !8587)
!8589 = !DILocation(line: 2147, column: 28, scope: !8587)
!8590 = !DILocation(line: 2148, column: 7, scope: !8587)
!8591 = !DILocation(line: 2149, column: 5, scope: !8587)
!8592 = !DILocation(line: 2153, column: 11, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 2153, column: 11)
!8594 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 2152, column: 5)
!8595 = !DILocation(line: 2153, column: 15, scope: !8593)
!8596 = !DILocation(line: 2153, column: 11, scope: !8594)
!8597 = !DILocation(line: 2154, column: 16, scope: !8593)
!8598 = !DILocation(line: 2154, column: 2, scope: !8593)
!8599 = !DILocation(line: 2155, column: 16, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 2155, column: 16)
!8601 = !DILocation(line: 2155, column: 20, scope: !8600)
!8602 = !DILocation(line: 2155, column: 16, scope: !8593)
!8603 = !DILocation(line: 2156, column: 16, scope: !8600)
!8604 = !DILocation(line: 2156, column: 2, scope: !8600)
!8605 = !DILocation(line: 2158, column: 20, scope: !8600)
!8606 = !DILocation(line: 2158, column: 2, scope: !8600)
!8607 = !DILocation(line: 2163, column: 12, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 2163, column: 11)
!8609 = !DILocation(line: 2163, column: 29, scope: !8608)
!8610 = !DILocation(line: 2163, column: 55, scope: !8608)
!8611 = !DILocation(line: 2163, column: 32, scope: !8608)
!8612 = !DILocation(line: 2163, column: 11, scope: !8594)
!8613 = !DILocalVariable(name: "t", scope: !8614, file: !3, line: 2165, type: !839)
!8614 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 2164, column: 2)
!8615 = !DILocation(line: 2165, column: 8, scope: !8614)
!8616 = !DILocation(line: 2165, column: 33, scope: !8614)
!8617 = !DILocation(line: 2165, column: 12, scope: !8614)
!8618 = !DILocation(line: 2166, column: 8, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2166, column: 8)
!8620 = !DILocation(line: 2166, column: 8, scope: !8614)
!8621 = !DILocation(line: 2167, column: 23, scope: !8619)
!8622 = !DILocation(line: 2167, column: 29, scope: !8619)
!8623 = !DILocation(line: 2167, column: 42, scope: !8619)
!8624 = !DILocation(line: 2167, column: 6, scope: !8619)
!8625 = !DILocation(line: 2168, column: 2, scope: !8614)
!8626 = !DILocation(line: 2172, column: 11, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 2172, column: 11)
!8628 = !DILocation(line: 2172, column: 39, scope: !8627)
!8629 = !DILocation(line: 2172, column: 11, scope: !8594)
!8630 = !DILocation(line: 2174, column: 9, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 2174, column: 8)
!8632 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 2173, column: 2)
!8633 = !DILocation(line: 2174, column: 15, scope: !8631)
!8634 = !DILocation(line: 2174, column: 24, scope: !8631)
!8635 = !DILocation(line: 2174, column: 27, scope: !8631)
!8636 = !DILocation(line: 2174, column: 31, scope: !8631)
!8637 = !DILocation(line: 2174, column: 38, scope: !8631)
!8638 = !DILocation(line: 2174, column: 42, scope: !8631)
!8639 = !DILocation(line: 2174, column: 8, scope: !8632)
!8640 = !DILocation(line: 2176, column: 27, scope: !8631)
!8641 = !DILocation(line: 2176, column: 33, scope: !8631)
!8642 = !DILocation(line: 2176, column: 39, scope: !8631)
!8643 = !DILocation(line: 2176, column: 10, scope: !8631)
!8644 = !DILocation(line: 2175, column: 6, scope: !8631)
!8645 = !DILocation(line: 2175, column: 12, scope: !8631)
!8646 = !DILocation(line: 2176, column: 8, scope: !8631)
!8647 = !DILocation(line: 2178, column: 27, scope: !8631)
!8648 = !DILocation(line: 2178, column: 33, scope: !8631)
!8649 = !DILocation(line: 2178, column: 39, scope: !8631)
!8650 = !DILocation(line: 2178, column: 6, scope: !8631)
!8651 = !DILocation(line: 2180, column: 2, scope: !8632)
!8652 = !DILocation(line: 2182, column: 1, scope: !8497)
!8653 = distinct !DISubprogram(name: "note_mem_dep", scope: !3, file: !3, line: 1703, type: !2104, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8654 = !DILocalVariable(name: "m1", arg: 1, scope: !8653, file: !3, line: 1703, type: !839)
!8655 = !DILocation(line: 1703, column: 19, scope: !8653)
!8656 = !DILocalVariable(name: "m2", arg: 2, scope: !8653, file: !3, line: 1703, type: !839)
!8657 = !DILocation(line: 1703, column: 27, scope: !8653)
!8658 = !DILocalVariable(name: "e", arg: 3, scope: !8653, file: !3, line: 1703, type: !839)
!8659 = !DILocation(line: 1703, column: 35, scope: !8653)
!8660 = !DILocalVariable(name: "ds", arg: 4, scope: !8653, file: !3, line: 1703, type: !809)
!8661 = !DILocation(line: 1703, column: 43, scope: !8653)
!8662 = !DILocation(line: 1705, column: 7, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8653, file: !3, line: 1705, column: 7)
!8664 = !DILocation(line: 1705, column: 24, scope: !8663)
!8665 = !DILocation(line: 1705, column: 7, scope: !8653)
!8666 = !DILocation(line: 1706, column: 5, scope: !8663)
!8667 = !DILocation(line: 1706, column: 22, scope: !8663)
!8668 = !DILocation(line: 1706, column: 36, scope: !8663)
!8669 = !DILocation(line: 1706, column: 40, scope: !8663)
!8670 = !DILocation(line: 1706, column: 44, scope: !8663)
!8671 = !DILocation(line: 1706, column: 47, scope: !8663)
!8672 = !DILocation(line: 1707, column: 1, scope: !8653)
!8673 = distinct !DISubprogram(name: "deps_may_trap_p", scope: !3, file: !3, line: 469, type: !8674, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{!810, !2049}
!8676 = !DILocalVariable(name: "mem", arg: 1, scope: !8673, file: !3, line: 469, type: !2049)
!8677 = !DILocation(line: 469, column: 28, scope: !8673)
!8678 = !DILocalVariable(name: "addr", scope: !8673, file: !3, line: 471, type: !2049)
!8679 = !DILocation(line: 471, column: 13, scope: !8673)
!8680 = !DILocation(line: 471, column: 20, scope: !8673)
!8681 = !DILocation(line: 473, column: 7, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 473, column: 7)
!8683 = !DILocation(line: 473, column: 20, scope: !8682)
!8684 = !DILocation(line: 473, column: 23, scope: !8682)
!8685 = !DILocation(line: 473, column: 36, scope: !8682)
!8686 = !DILocation(line: 473, column: 7, scope: !8673)
!8687 = !DILocalVariable(name: "t", scope: !8688, file: !3, line: 475, type: !2049)
!8688 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 474, column: 5)
!8689 = !DILocation(line: 475, column: 17, scope: !8688)
!8690 = !DILocation(line: 475, column: 42, scope: !8688)
!8691 = !DILocation(line: 475, column: 21, scope: !8688)
!8692 = !DILocation(line: 476, column: 11, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 476, column: 11)
!8694 = !DILocation(line: 476, column: 11, scope: !8688)
!8695 = !DILocation(line: 477, column: 9, scope: !8693)
!8696 = !DILocation(line: 477, column: 7, scope: !8693)
!8697 = !DILocation(line: 477, column: 2, scope: !8693)
!8698 = !DILocation(line: 478, column: 5, scope: !8688)
!8699 = !DILocation(line: 479, column: 31, scope: !8673)
!8700 = !DILocation(line: 479, column: 10, scope: !8673)
!8701 = !DILocation(line: 479, column: 3, scope: !8673)
!8702 = distinct !DISubprogram(name: "add_insn_mem_dependence", scope: !3, file: !3, line: 1544, type: !8703, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{null, !3819, !1065, !839, !839}
!8705 = !DILocalVariable(name: "deps", arg: 1, scope: !8702, file: !3, line: 1544, type: !3819)
!8706 = !DILocation(line: 1544, column: 39, scope: !8702)
!8707 = !DILocalVariable(name: "read_p", arg: 2, scope: !8702, file: !3, line: 1544, type: !1065)
!8708 = !DILocation(line: 1544, column: 50, scope: !8702)
!8709 = !DILocalVariable(name: "insn", arg: 3, scope: !8702, file: !3, line: 1545, type: !839)
!8710 = !DILocation(line: 1545, column: 9, scope: !8702)
!8711 = !DILocalVariable(name: "mem", arg: 4, scope: !8702, file: !3, line: 1545, type: !839)
!8712 = !DILocation(line: 1545, column: 19, scope: !8702)
!8713 = !DILocalVariable(name: "insn_list", scope: !8702, file: !3, line: 1547, type: !5247)
!8714 = !DILocation(line: 1547, column: 8, scope: !8702)
!8715 = !DILocalVariable(name: "mem_list", scope: !8702, file: !3, line: 1548, type: !5247)
!8716 = !DILocation(line: 1548, column: 8, scope: !8702)
!8717 = !DILocalVariable(name: "link", scope: !8702, file: !3, line: 1549, type: !839)
!8718 = !DILocation(line: 1549, column: 7, scope: !8702)
!8719 = !DILocation(line: 1551, column: 3, scope: !8702)
!8720 = !DILocation(line: 1552, column: 7, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1552, column: 7)
!8722 = !DILocation(line: 1552, column: 7, scope: !8702)
!8723 = !DILocation(line: 1554, column: 20, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 1553, column: 5)
!8725 = !DILocation(line: 1554, column: 26, scope: !8724)
!8726 = !DILocation(line: 1554, column: 17, scope: !8724)
!8727 = !DILocation(line: 1555, column: 19, scope: !8724)
!8728 = !DILocation(line: 1555, column: 25, scope: !8724)
!8729 = !DILocation(line: 1555, column: 16, scope: !8724)
!8730 = !DILocation(line: 1556, column: 12, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 1556, column: 11)
!8732 = !DILocation(line: 1556, column: 11, scope: !8724)
!8733 = !DILocation(line: 1557, column: 2, scope: !8731)
!8734 = !DILocation(line: 1557, column: 8, scope: !8731)
!8735 = !DILocation(line: 1557, column: 32, scope: !8731)
!8736 = !DILocation(line: 1558, column: 5, scope: !8724)
!8737 = !DILocation(line: 1561, column: 20, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 1560, column: 5)
!8739 = !DILocation(line: 1561, column: 26, scope: !8738)
!8740 = !DILocation(line: 1561, column: 17, scope: !8738)
!8741 = !DILocation(line: 1562, column: 19, scope: !8738)
!8742 = !DILocation(line: 1562, column: 25, scope: !8738)
!8743 = !DILocation(line: 1562, column: 16, scope: !8738)
!8744 = !DILocation(line: 1563, column: 7, scope: !8738)
!8745 = !DILocation(line: 1563, column: 13, scope: !8738)
!8746 = !DILocation(line: 1563, column: 38, scope: !8738)
!8747 = !DILocation(line: 1566, column: 27, scope: !8702)
!8748 = !DILocation(line: 1566, column: 34, scope: !8702)
!8749 = !DILocation(line: 1566, column: 33, scope: !8702)
!8750 = !DILocation(line: 1566, column: 10, scope: !8702)
!8751 = !DILocation(line: 1566, column: 8, scope: !8702)
!8752 = !DILocation(line: 1567, column: 16, scope: !8702)
!8753 = !DILocation(line: 1567, column: 4, scope: !8702)
!8754 = !DILocation(line: 1567, column: 14, scope: !8702)
!8755 = !DILocation(line: 1569, column: 7, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1569, column: 7)
!8757 = !DILocation(line: 1569, column: 24, scope: !8756)
!8758 = !DILocation(line: 1569, column: 7, scope: !8702)
!8759 = !DILocation(line: 1571, column: 13, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 1570, column: 5)
!8761 = !DILocation(line: 1571, column: 11, scope: !8760)
!8762 = !DILocation(line: 1572, column: 47, scope: !8760)
!8763 = !DILocation(line: 1572, column: 23, scope: !8760)
!8764 = !DILocation(line: 1572, column: 7, scope: !8760)
!8765 = !DILocation(line: 1572, column: 21, scope: !8760)
!8766 = !DILocation(line: 1573, column: 5, scope: !8760)
!8767 = !DILocation(line: 1574, column: 48, scope: !8702)
!8768 = !DILocation(line: 1574, column: 37, scope: !8702)
!8769 = !DILocation(line: 1574, column: 55, scope: !8702)
!8770 = !DILocation(line: 1574, column: 54, scope: !8702)
!8771 = !DILocation(line: 1574, column: 10, scope: !8702)
!8772 = !DILocation(line: 1574, column: 8, scope: !8702)
!8773 = !DILocation(line: 1575, column: 15, scope: !8702)
!8774 = !DILocation(line: 1575, column: 4, scope: !8702)
!8775 = !DILocation(line: 1575, column: 13, scope: !8702)
!8776 = !DILocation(line: 1576, column: 1, scope: !8702)
!8777 = distinct !DISubprogram(name: "extend_deps_reg_info", scope: !3, file: !3, line: 2061, type: !8778, scopeLine: 2062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{null, !3819, !810}
!8780 = !DILocalVariable(name: "deps", arg: 1, scope: !8777, file: !3, line: 2061, type: !3819)
!8781 = !DILocation(line: 2061, column: 36, scope: !8777)
!8782 = !DILocalVariable(name: "regno", arg: 2, scope: !8777, file: !3, line: 2061, type: !810)
!8783 = !DILocation(line: 2061, column: 46, scope: !8777)
!8784 = !DILocalVariable(name: "max_regno", scope: !8777, file: !3, line: 2063, type: !810)
!8785 = !DILocation(line: 2063, column: 7, scope: !8777)
!8786 = !DILocation(line: 2063, column: 19, scope: !8777)
!8787 = !DILocation(line: 2063, column: 25, scope: !8777)
!8788 = !DILocation(line: 2065, column: 3, scope: !8777)
!8789 = !DILocation(line: 2069, column: 7, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 2069, column: 7)
!8791 = !DILocation(line: 2069, column: 24, scope: !8790)
!8792 = !DILocation(line: 2069, column: 27, scope: !8790)
!8793 = !DILocation(line: 2069, column: 33, scope: !8790)
!8794 = !DILocation(line: 2069, column: 7, scope: !8777)
!8795 = !DILocation(line: 2071, column: 23, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 2070, column: 5)
!8797 = !DILocation(line: 2071, column: 7, scope: !8796)
!8798 = !DILocation(line: 2071, column: 13, scope: !8796)
!8799 = !DILocation(line: 2071, column: 21, scope: !8796)
!8800 = !DILocation(line: 2072, column: 7, scope: !8796)
!8801 = !DILocation(line: 2075, column: 7, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 2075, column: 7)
!8803 = !DILocation(line: 2075, column: 19, scope: !8802)
!8804 = !DILocation(line: 2075, column: 25, scope: !8802)
!8805 = !DILocation(line: 2075, column: 17, scope: !8802)
!8806 = !DILocation(line: 2075, column: 7, scope: !8777)
!8807 = !DILocation(line: 2077, column: 24, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 2076, column: 5)
!8809 = !DILocation(line: 2077, column: 7, scope: !8808)
!8810 = !DILocation(line: 2077, column: 13, scope: !8808)
!8811 = !DILocation(line: 2077, column: 22, scope: !8808)
!8812 = !DILocation(line: 2079, column: 16, scope: !8808)
!8813 = !DILocation(line: 2079, column: 22, scope: !8808)
!8814 = !DILocation(line: 2079, column: 31, scope: !8808)
!8815 = !DILocation(line: 2079, column: 37, scope: !8808)
!8816 = !DILocation(line: 2079, column: 7, scope: !8808)
!8817 = !DILocation(line: 2080, column: 19, scope: !8808)
!8818 = !DILocation(line: 2080, column: 31, scope: !8808)
!8819 = !DILocation(line: 2080, column: 37, scope: !8808)
!8820 = !DILocation(line: 2080, column: 29, scope: !8808)
!8821 = !DILocation(line: 2080, column: 18, scope: !8808)
!8822 = !DILocation(line: 2081, column: 15, scope: !8808)
!8823 = !DILocation(line: 2082, column: 23, scope: !8808)
!8824 = !DILocation(line: 2082, column: 7, scope: !8808)
!8825 = !DILocation(line: 2082, column: 13, scope: !8808)
!8826 = !DILocation(line: 2082, column: 21, scope: !8808)
!8827 = !DILocation(line: 2083, column: 5, scope: !8808)
!8828 = !DILocation(line: 2084, column: 1, scope: !8777)
!8829 = distinct !DISubprogram(name: "note_reg_set", scope: !3, file: !3, line: 1689, type: !2098, scopeLine: 1690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8830 = !DILocalVariable(name: "r", arg: 1, scope: !8829, file: !3, line: 1689, type: !810)
!8831 = !DILocation(line: 1689, column: 19, scope: !8829)
!8832 = !DILocation(line: 1691, column: 7, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 1691, column: 7)
!8834 = !DILocation(line: 1691, column: 24, scope: !8833)
!8835 = !DILocation(line: 1691, column: 7, scope: !8829)
!8836 = !DILocation(line: 1692, column: 5, scope: !8833)
!8837 = !DILocation(line: 1692, column: 22, scope: !8833)
!8838 = !DILocation(line: 1692, column: 36, scope: !8833)
!8839 = !DILocation(line: 1693, column: 1, scope: !8829)
!8840 = distinct !DISubprogram(name: "note_reg_use", scope: !3, file: !3, line: 1682, type: !2098, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8841 = !DILocalVariable(name: "r", arg: 1, scope: !8840, file: !3, line: 1682, type: !810)
!8842 = !DILocation(line: 1682, column: 19, scope: !8840)
!8843 = !DILocation(line: 1684, column: 7, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 1684, column: 7)
!8845 = !DILocation(line: 1684, column: 24, scope: !8844)
!8846 = !DILocation(line: 1684, column: 7, scope: !8840)
!8847 = !DILocation(line: 1685, column: 5, scope: !8844)
!8848 = !DILocation(line: 1685, column: 22, scope: !8844)
!8849 = !DILocation(line: 1685, column: 36, scope: !8844)
!8850 = !DILocation(line: 1686, column: 1, scope: !8840)
!8851 = distinct !DISubprogram(name: "note_reg_clobber", scope: !3, file: !3, line: 1696, type: !2098, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8852 = !DILocalVariable(name: "r", arg: 1, scope: !8851, file: !3, line: 1696, type: !810)
!8853 = !DILocation(line: 1696, column: 23, scope: !8851)
!8854 = !DILocation(line: 1698, column: 7, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 1698, column: 7)
!8856 = !DILocation(line: 1698, column: 24, scope: !8855)
!8857 = !DILocation(line: 1698, column: 7, scope: !8851)
!8858 = !DILocation(line: 1699, column: 5, scope: !8855)
!8859 = !DILocation(line: 1699, column: 22, scope: !8855)
!8860 = !DILocation(line: 1699, column: 40, scope: !8855)
!8861 = !DILocation(line: 1700, column: 1, scope: !8851)
!8862 = distinct !DISubprogram(name: "create_insn_reg_use", scope: !3, file: !3, line: 1739, type: !8863, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8863 = !DISubroutineType(types: !8864)
!8864 = !{!2028, !810, !839}
!8865 = !DILocalVariable(name: "regno", arg: 1, scope: !8862, file: !3, line: 1739, type: !810)
!8866 = !DILocation(line: 1739, column: 26, scope: !8862)
!8867 = !DILocalVariable(name: "insn", arg: 2, scope: !8862, file: !3, line: 1739, type: !839)
!8868 = !DILocation(line: 1739, column: 37, scope: !8862)
!8869 = !DILocalVariable(name: "use", scope: !8862, file: !3, line: 1741, type: !2028)
!8870 = !DILocation(line: 1741, column: 24, scope: !8862)
!8871 = !DILocation(line: 1743, column: 33, scope: !8862)
!8872 = !DILocation(line: 1743, column: 9, scope: !8862)
!8873 = !DILocation(line: 1743, column: 7, scope: !8862)
!8874 = !DILocation(line: 1744, column: 16, scope: !8862)
!8875 = !DILocation(line: 1744, column: 3, scope: !8862)
!8876 = !DILocation(line: 1744, column: 8, scope: !8862)
!8877 = !DILocation(line: 1744, column: 14, scope: !8862)
!8878 = !DILocation(line: 1745, column: 15, scope: !8862)
!8879 = !DILocation(line: 1745, column: 3, scope: !8862)
!8880 = !DILocation(line: 1745, column: 8, scope: !8862)
!8881 = !DILocation(line: 1745, column: 13, scope: !8862)
!8882 = !DILocation(line: 1746, column: 24, scope: !8862)
!8883 = !DILocation(line: 1746, column: 3, scope: !8862)
!8884 = !DILocation(line: 1746, column: 8, scope: !8862)
!8885 = !DILocation(line: 1746, column: 22, scope: !8862)
!8886 = !DILocation(line: 1747, column: 30, scope: !8862)
!8887 = !DILocation(line: 1747, column: 3, scope: !8862)
!8888 = !DILocation(line: 1747, column: 28, scope: !8862)
!8889 = !DILocation(line: 1748, column: 10, scope: !8862)
!8890 = !DILocation(line: 1748, column: 3, scope: !8862)
!8891 = distinct !DISubprogram(name: "mark_insn_reg_clobber", scope: !3, file: !3, line: 1990, type: !8892, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8892 = !DISubroutineType(types: !8893)
!8893 = !{null, !839, !2049, !942}
!8894 = !DILocalVariable(name: "reg", arg: 1, scope: !8891, file: !3, line: 1990, type: !839)
!8895 = !DILocation(line: 1990, column: 28, scope: !8891)
!8896 = !DILocalVariable(name: "setter", arg: 2, scope: !8891, file: !3, line: 1990, type: !2049)
!8897 = !DILocation(line: 1990, column: 43, scope: !8891)
!8898 = !DILocalVariable(name: "data", arg: 3, scope: !8891, file: !3, line: 1990, type: !942)
!8899 = !DILocation(line: 1990, column: 57, scope: !8891)
!8900 = !DILocation(line: 1992, column: 7, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 1992, column: 7)
!8902 = !DILocation(line: 1992, column: 25, scope: !8901)
!8903 = !DILocation(line: 1992, column: 7, scope: !8891)
!8904 = !DILocation(line: 1993, column: 32, scope: !8901)
!8905 = !DILocation(line: 1993, column: 26, scope: !8901)
!8906 = !DILocation(line: 1993, column: 38, scope: !8901)
!8907 = !DILocation(line: 1993, column: 5, scope: !8901)
!8908 = !DILocation(line: 1994, column: 1, scope: !8891)
!8909 = distinct !DISubprogram(name: "mark_insn_reg_store", scope: !3, file: !3, line: 1979, type: !8892, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8910 = !DILocalVariable(name: "reg", arg: 1, scope: !8909, file: !3, line: 1979, type: !839)
!8911 = !DILocation(line: 1979, column: 26, scope: !8909)
!8912 = !DILocalVariable(name: "setter", arg: 2, scope: !8909, file: !3, line: 1979, type: !2049)
!8913 = !DILocation(line: 1979, column: 41, scope: !8909)
!8914 = !DILocalVariable(name: "data", arg: 3, scope: !8909, file: !3, line: 1979, type: !942)
!8915 = !DILocation(line: 1979, column: 55, scope: !8909)
!8916 = !DILocation(line: 1981, column: 7, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 1981, column: 7)
!8918 = !DILocation(line: 1981, column: 14, scope: !8917)
!8919 = !DILocation(line: 1981, column: 26, scope: !8917)
!8920 = !DILocation(line: 1981, column: 29, scope: !8917)
!8921 = !DILocation(line: 1981, column: 47, scope: !8917)
!8922 = !DILocation(line: 1981, column: 7, scope: !8909)
!8923 = !DILocation(line: 1982, column: 5, scope: !8917)
!8924 = !DILocation(line: 1984, column: 12, scope: !8909)
!8925 = !DILocation(line: 1984, column: 6, scope: !8909)
!8926 = !DILocation(line: 1984, column: 18, scope: !8909)
!8927 = !DILocation(line: 1985, column: 33, scope: !8909)
!8928 = !DILocation(line: 1985, column: 21, scope: !8909)
!8929 = !DILocation(line: 1985, column: 51, scope: !8909)
!8930 = !DILocation(line: 1985, column: 6, scope: !8909)
!8931 = !DILocation(line: 1985, column: 56, scope: !8909)
!8932 = !DILocation(line: 1983, column: 3, scope: !8909)
!8933 = !DILocation(line: 1986, column: 1, scope: !8909)
!8934 = distinct !DISubprogram(name: "mark_reg_death", scope: !3, file: !3, line: 1960, type: !2086, scopeLine: 1961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8935 = !DILocalVariable(name: "reg", arg: 1, scope: !8934, file: !3, line: 1960, type: !839)
!8936 = !DILocation(line: 1960, column: 21, scope: !8934)
!8937 = !DILocalVariable(name: "regno", scope: !8934, file: !3, line: 1962, type: !810)
!8938 = !DILocation(line: 1962, column: 7, scope: !8934)
!8939 = !DILocation(line: 1964, column: 7, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 1964, column: 7)
!8941 = !DILocation(line: 1964, column: 22, scope: !8940)
!8942 = !DILocation(line: 1964, column: 7, scope: !8934)
!8943 = !DILocation(line: 1965, column: 11, scope: !8940)
!8944 = !DILocation(line: 1965, column: 9, scope: !8940)
!8945 = !DILocation(line: 1965, column: 5, scope: !8940)
!8946 = !DILocation(line: 1967, column: 9, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 1967, column: 7)
!8948 = !DILocation(line: 1967, column: 7, scope: !8934)
!8949 = !DILocation(line: 1968, column: 5, scope: !8947)
!8950 = !DILocation(line: 1970, column: 11, scope: !8934)
!8951 = !DILocation(line: 1970, column: 9, scope: !8934)
!8952 = !DILocation(line: 1971, column: 7, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 1971, column: 7)
!8954 = !DILocation(line: 1971, column: 13, scope: !8953)
!8955 = !DILocation(line: 1971, column: 7, scope: !8934)
!8956 = !DILocation(line: 1972, column: 28, scope: !8953)
!8957 = !DILocation(line: 1972, column: 52, scope: !8953)
!8958 = !DILocation(line: 1972, column: 35, scope: !8953)
!8959 = !DILocation(line: 1972, column: 59, scope: !8953)
!8960 = !DILocation(line: 1972, column: 5, scope: !8953)
!8961 = !DILocation(line: 1974, column: 24, scope: !8953)
!8962 = !DILocation(line: 1974, column: 5, scope: !8953)
!8963 = !DILocation(line: 1975, column: 1, scope: !8934)
!8964 = distinct !DISubprogram(name: "mark_insn_reg_birth", scope: !3, file: !3, line: 1900, type: !8965, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{null, !839, !839, !1065, !1065}
!8967 = !DILocalVariable(name: "insn", arg: 1, scope: !8964, file: !3, line: 1900, type: !839)
!8968 = !DILocation(line: 1900, column: 26, scope: !8964)
!8969 = !DILocalVariable(name: "reg", arg: 2, scope: !8964, file: !3, line: 1900, type: !839)
!8970 = !DILocation(line: 1900, column: 36, scope: !8964)
!8971 = !DILocalVariable(name: "clobber_p", arg: 3, scope: !8964, file: !3, line: 1900, type: !1065)
!8972 = !DILocation(line: 1900, column: 46, scope: !8964)
!8973 = !DILocalVariable(name: "unused_p", arg: 4, scope: !8964, file: !3, line: 1900, type: !1065)
!8974 = !DILocation(line: 1900, column: 62, scope: !8964)
!8975 = !DILocalVariable(name: "regno", scope: !8964, file: !3, line: 1902, type: !810)
!8976 = !DILocation(line: 1902, column: 7, scope: !8964)
!8977 = !DILocation(line: 1904, column: 7, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 1904, column: 7)
!8979 = !DILocation(line: 1904, column: 22, scope: !8978)
!8980 = !DILocation(line: 1904, column: 7, scope: !8964)
!8981 = !DILocation(line: 1905, column: 11, scope: !8978)
!8982 = !DILocation(line: 1905, column: 9, scope: !8978)
!8983 = !DILocation(line: 1905, column: 5, scope: !8978)
!8984 = !DILocation(line: 1907, column: 9, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 1907, column: 7)
!8986 = !DILocation(line: 1907, column: 7, scope: !8964)
!8987 = !DILocation(line: 1908, column: 5, scope: !8985)
!8988 = !DILocation(line: 1910, column: 11, scope: !8964)
!8989 = !DILocation(line: 1910, column: 9, scope: !8964)
!8990 = !DILocation(line: 1911, column: 7, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 1911, column: 7)
!8992 = !DILocation(line: 1911, column: 13, scope: !8991)
!8993 = !DILocation(line: 1911, column: 7, scope: !8964)
!8994 = !DILocation(line: 1912, column: 33, scope: !8991)
!8995 = !DILocation(line: 1912, column: 39, scope: !8991)
!8996 = !DILocation(line: 1913, column: 22, scope: !8991)
!8997 = !DILocation(line: 1913, column: 5, scope: !8991)
!8998 = !DILocation(line: 1913, column: 29, scope: !8991)
!8999 = !DILocation(line: 1914, column: 5, scope: !8991)
!9000 = !DILocation(line: 1914, column: 16, scope: !8991)
!9001 = !DILocation(line: 1912, column: 5, scope: !8991)
!9002 = !DILocation(line: 1916, column: 29, scope: !8991)
!9003 = !DILocation(line: 1916, column: 35, scope: !8991)
!9004 = !DILocation(line: 1916, column: 42, scope: !8991)
!9005 = !DILocation(line: 1916, column: 53, scope: !8991)
!9006 = !DILocation(line: 1916, column: 5, scope: !8991)
!9007 = !DILocation(line: 1917, column: 1, scope: !8964)
!9008 = distinct !DISubprogram(name: "mark_insn_hard_regno_birth", scope: !3, file: !3, line: 1856, type: !9009, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9009 = !DISubroutineType(types: !9010)
!9010 = !{null, !839, !810, !810, !1065, !1065}
!9011 = !DILocalVariable(name: "insn", arg: 1, scope: !9008, file: !3, line: 1856, type: !839)
!9012 = !DILocation(line: 1856, column: 33, scope: !9008)
!9013 = !DILocalVariable(name: "regno", arg: 2, scope: !9008, file: !3, line: 1856, type: !810)
!9014 = !DILocation(line: 1856, column: 43, scope: !9008)
!9015 = !DILocalVariable(name: "nregs", arg: 3, scope: !9008, file: !3, line: 1856, type: !810)
!9016 = !DILocation(line: 1856, column: 54, scope: !9008)
!9017 = !DILocalVariable(name: "clobber_p", arg: 4, scope: !9008, file: !3, line: 1857, type: !1065)
!9018 = !DILocation(line: 1857, column: 13, scope: !9008)
!9019 = !DILocalVariable(name: "unused_p", arg: 5, scope: !9008, file: !3, line: 1857, type: !1065)
!9020 = !DILocation(line: 1857, column: 29, scope: !9008)
!9021 = !DILocalVariable(name: "cl", scope: !9008, file: !3, line: 1859, type: !772)
!9022 = !DILocation(line: 1859, column: 18, scope: !9008)
!9023 = !DILocalVariable(name: "new_incr", scope: !9008, file: !3, line: 1860, type: !810)
!9024 = !DILocation(line: 1860, column: 7, scope: !9008)
!9025 = !DILocalVariable(name: "last", scope: !9008, file: !3, line: 1860, type: !810)
!9026 = !DILocation(line: 1860, column: 17, scope: !9008)
!9027 = !DILocation(line: 1860, column: 24, scope: !9008)
!9028 = !DILocation(line: 1860, column: 32, scope: !9008)
!9029 = !DILocation(line: 1860, column: 30, scope: !9008)
!9030 = !DILocation(line: 1862, column: 3, scope: !9008)
!9031 = !DILocation(line: 1862, column: 10, scope: !9008)
!9032 = !DILocation(line: 1862, column: 18, scope: !9008)
!9033 = !DILocation(line: 1862, column: 16, scope: !9008)
!9034 = !DILocation(line: 1864, column: 7, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 1863, column: 5)
!9036 = !DILocation(line: 1865, column: 13, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9035, file: !3, line: 1865, column: 11)
!9038 = !DILocation(line: 1865, column: 11, scope: !9035)
!9039 = !DILocation(line: 1867, column: 9, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 1866, column: 2)
!9041 = !DILocation(line: 1867, column: 33, scope: !9040)
!9042 = !DILocation(line: 1867, column: 7, scope: !9040)
!9043 = !DILocation(line: 1868, column: 8, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1868, column: 8)
!9045 = !DILocation(line: 1868, column: 11, scope: !9044)
!9046 = !DILocation(line: 1868, column: 8, scope: !9040)
!9047 = !DILocation(line: 1870, column: 12, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 1870, column: 12)
!9049 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 1869, column: 6)
!9050 = !DILocation(line: 1870, column: 12, scope: !9049)
!9051 = !DILocation(line: 1872, column: 34, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1871, column: 3)
!9053 = !DILocation(line: 1872, column: 16, scope: !9052)
!9054 = !DILocation(line: 1872, column: 38, scope: !9052)
!9055 = !DILocation(line: 1872, column: 55, scope: !9052)
!9056 = !DILocation(line: 1872, column: 14, scope: !9052)
!9057 = !DILocation(line: 1873, column: 46, scope: !9052)
!9058 = !DILocation(line: 1873, column: 23, scope: !9052)
!9059 = !DILocation(line: 1873, column: 5, scope: !9052)
!9060 = !DILocation(line: 1873, column: 27, scope: !9052)
!9061 = !DILocation(line: 1873, column: 44, scope: !9052)
!9062 = !DILocation(line: 1874, column: 3, scope: !9052)
!9063 = !DILocation(line: 1875, column: 17, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1875, column: 17)
!9065 = !DILocation(line: 1875, column: 17, scope: !9048)
!9066 = !DILocation(line: 1877, column: 34, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 1876, column: 3)
!9068 = !DILocation(line: 1877, column: 16, scope: !9067)
!9069 = !DILocation(line: 1877, column: 38, scope: !9067)
!9070 = !DILocation(line: 1877, column: 58, scope: !9067)
!9071 = !DILocation(line: 1877, column: 14, scope: !9067)
!9072 = !DILocation(line: 1878, column: 49, scope: !9067)
!9073 = !DILocation(line: 1878, column: 23, scope: !9067)
!9074 = !DILocation(line: 1878, column: 5, scope: !9067)
!9075 = !DILocation(line: 1878, column: 27, scope: !9067)
!9076 = !DILocation(line: 1878, column: 47, scope: !9067)
!9077 = !DILocation(line: 1879, column: 3, scope: !9067)
!9078 = !DILocation(line: 1882, column: 34, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 1881, column: 3)
!9080 = !DILocation(line: 1882, column: 16, scope: !9079)
!9081 = !DILocation(line: 1882, column: 38, scope: !9079)
!9082 = !DILocation(line: 1882, column: 51, scope: !9079)
!9083 = !DILocation(line: 1882, column: 14, scope: !9079)
!9084 = !DILocation(line: 1883, column: 42, scope: !9079)
!9085 = !DILocation(line: 1883, column: 23, scope: !9079)
!9086 = !DILocation(line: 1883, column: 5, scope: !9079)
!9087 = !DILocation(line: 1883, column: 27, scope: !9079)
!9088 = !DILocation(line: 1883, column: 40, scope: !9079)
!9089 = !DILocation(line: 1884, column: 23, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 1884, column: 9)
!9091 = !DILocation(line: 1884, column: 29, scope: !9090)
!9092 = !DILocation(line: 1884, column: 11, scope: !9090)
!9093 = !DILocation(line: 1884, column: 9, scope: !9079)
!9094 = !DILocation(line: 1885, column: 25, scope: !9090)
!9095 = !DILocation(line: 1885, column: 7, scope: !9090)
!9096 = !DILocation(line: 1885, column: 29, scope: !9090)
!9097 = !DILocation(line: 1885, column: 36, scope: !9090)
!9098 = !DILocation(line: 1886, column: 26, scope: !9079)
!9099 = !DILocation(line: 1886, column: 33, scope: !9079)
!9100 = !DILocation(line: 1886, column: 5, scope: !9079)
!9101 = !DILocation(line: 1888, column: 8, scope: !9049)
!9102 = !DILocation(line: 1889, column: 6, scope: !9049)
!9103 = !DILocation(line: 1890, column: 2, scope: !9040)
!9104 = !DILocation(line: 1891, column: 12, scope: !9035)
!9105 = distinct !{!9105, !9030, !9106}
!9106 = !DILocation(line: 1892, column: 5, scope: !9008)
!9107 = !DILocation(line: 1893, column: 1, scope: !9008)
!9108 = distinct !DISubprogram(name: "mark_insn_pseudo_birth", scope: !3, file: !3, line: 1821, type: !9109, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9109 = !DISubroutineType(types: !9110)
!9110 = !{null, !839, !810, !1065, !1065}
!9111 = !DILocalVariable(name: "insn", arg: 1, scope: !9108, file: !3, line: 1821, type: !839)
!9112 = !DILocation(line: 1821, column: 29, scope: !9108)
!9113 = !DILocalVariable(name: "regno", arg: 2, scope: !9108, file: !3, line: 1821, type: !810)
!9114 = !DILocation(line: 1821, column: 39, scope: !9108)
!9115 = !DILocalVariable(name: "clobber_p", arg: 3, scope: !9108, file: !3, line: 1821, type: !1065)
!9116 = !DILocation(line: 1821, column: 51, scope: !9108)
!9117 = !DILocalVariable(name: "unused_p", arg: 4, scope: !9108, file: !3, line: 1821, type: !1065)
!9118 = !DILocation(line: 1821, column: 67, scope: !9108)
!9119 = !DILocalVariable(name: "incr", scope: !9108, file: !3, line: 1823, type: !810)
!9120 = !DILocation(line: 1823, column: 7, scope: !9108)
!9121 = !DILocalVariable(name: "new_incr", scope: !9108, file: !3, line: 1823, type: !810)
!9122 = !DILocation(line: 1823, column: 13, scope: !9108)
!9123 = !DILocalVariable(name: "cl", scope: !9108, file: !3, line: 1824, type: !772)
!9124 = !DILocation(line: 1824, column: 18, scope: !9108)
!9125 = !DILocation(line: 1826, column: 3, scope: !9108)
!9126 = !DILocation(line: 1827, column: 8, scope: !9108)
!9127 = !DILocation(line: 1827, column: 32, scope: !9108)
!9128 = !DILocation(line: 1827, column: 6, scope: !9108)
!9129 = !DILocation(line: 1828, column: 7, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 1828, column: 7)
!9131 = !DILocation(line: 1828, column: 10, scope: !9130)
!9132 = !DILocation(line: 1828, column: 7, scope: !9108)
!9133 = !DILocation(line: 1830, column: 34, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 1829, column: 5)
!9135 = !DILocation(line: 1830, column: 14, scope: !9134)
!9136 = !DILocation(line: 1830, column: 38, scope: !9134)
!9137 = !DILocation(line: 1830, column: 12, scope: !9134)
!9138 = !DILocation(line: 1831, column: 11, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 1831, column: 11)
!9140 = !DILocation(line: 1831, column: 11, scope: !9134)
!9141 = !DILocation(line: 1833, column: 33, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 1832, column: 2)
!9143 = !DILocation(line: 1833, column: 15, scope: !9142)
!9144 = !DILocation(line: 1833, column: 37, scope: !9142)
!9145 = !DILocation(line: 1833, column: 56, scope: !9142)
!9146 = !DILocation(line: 1833, column: 54, scope: !9142)
!9147 = !DILocation(line: 1833, column: 13, scope: !9142)
!9148 = !DILocation(line: 1834, column: 45, scope: !9142)
!9149 = !DILocation(line: 1834, column: 22, scope: !9142)
!9150 = !DILocation(line: 1834, column: 4, scope: !9142)
!9151 = !DILocation(line: 1834, column: 26, scope: !9142)
!9152 = !DILocation(line: 1834, column: 43, scope: !9142)
!9153 = !DILocation(line: 1835, column: 2, scope: !9142)
!9154 = !DILocation(line: 1836, column: 16, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 1836, column: 16)
!9156 = !DILocation(line: 1836, column: 16, scope: !9139)
!9157 = !DILocation(line: 1838, column: 33, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 1837, column: 2)
!9159 = !DILocation(line: 1838, column: 15, scope: !9158)
!9160 = !DILocation(line: 1838, column: 37, scope: !9158)
!9161 = !DILocation(line: 1838, column: 59, scope: !9158)
!9162 = !DILocation(line: 1838, column: 57, scope: !9158)
!9163 = !DILocation(line: 1838, column: 13, scope: !9158)
!9164 = !DILocation(line: 1839, column: 48, scope: !9158)
!9165 = !DILocation(line: 1839, column: 22, scope: !9158)
!9166 = !DILocation(line: 1839, column: 4, scope: !9158)
!9167 = !DILocation(line: 1839, column: 26, scope: !9158)
!9168 = !DILocation(line: 1839, column: 46, scope: !9158)
!9169 = !DILocation(line: 1840, column: 2, scope: !9158)
!9170 = !DILocation(line: 1843, column: 33, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 1842, column: 2)
!9172 = !DILocation(line: 1843, column: 15, scope: !9171)
!9173 = !DILocation(line: 1843, column: 37, scope: !9171)
!9174 = !DILocation(line: 1843, column: 52, scope: !9171)
!9175 = !DILocation(line: 1843, column: 50, scope: !9171)
!9176 = !DILocation(line: 1843, column: 13, scope: !9171)
!9177 = !DILocation(line: 1844, column: 41, scope: !9171)
!9178 = !DILocation(line: 1844, column: 22, scope: !9171)
!9179 = !DILocation(line: 1844, column: 4, scope: !9171)
!9180 = !DILocation(line: 1844, column: 26, scope: !9171)
!9181 = !DILocation(line: 1844, column: 39, scope: !9171)
!9182 = !DILocation(line: 1845, column: 22, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 1845, column: 8)
!9184 = !DILocation(line: 1845, column: 28, scope: !9183)
!9185 = !DILocation(line: 1845, column: 10, scope: !9183)
!9186 = !DILocation(line: 1845, column: 8, scope: !9171)
!9187 = !DILocation(line: 1846, column: 38, scope: !9183)
!9188 = !DILocation(line: 1846, column: 24, scope: !9183)
!9189 = !DILocation(line: 1846, column: 6, scope: !9183)
!9190 = !DILocation(line: 1846, column: 28, scope: !9183)
!9191 = !DILocation(line: 1846, column: 35, scope: !9183)
!9192 = !DILocation(line: 1847, column: 25, scope: !9171)
!9193 = !DILocation(line: 1847, column: 32, scope: !9171)
!9194 = !DILocation(line: 1847, column: 4, scope: !9171)
!9195 = !DILocation(line: 1849, column: 7, scope: !9134)
!9196 = !DILocation(line: 1850, column: 5, scope: !9134)
!9197 = !DILocation(line: 1851, column: 1, scope: !9108)
!9198 = distinct !DISubprogram(name: "insn_use_p", scope: !3, file: !3, line: 1807, type: !9199, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9199 = !DISubroutineType(types: !9200)
!9200 = !{!1065, !839, !810}
!9201 = !DILocalVariable(name: "insn", arg: 1, scope: !9198, file: !3, line: 1807, type: !839)
!9202 = !DILocation(line: 1807, column: 17, scope: !9198)
!9203 = !DILocalVariable(name: "regno", arg: 2, scope: !9198, file: !3, line: 1807, type: !810)
!9204 = !DILocation(line: 1807, column: 27, scope: !9198)
!9205 = !DILocalVariable(name: "use", scope: !9198, file: !3, line: 1809, type: !2028)
!9206 = !DILocation(line: 1809, column: 24, scope: !9198)
!9207 = !DILocation(line: 1811, column: 14, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 1811, column: 3)
!9209 = !DILocation(line: 1811, column: 12, scope: !9208)
!9210 = !DILocation(line: 1811, column: 8, scope: !9208)
!9211 = !DILocation(line: 1811, column: 40, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 1811, column: 3)
!9213 = !DILocation(line: 1811, column: 44, scope: !9212)
!9214 = !DILocation(line: 1811, column: 3, scope: !9208)
!9215 = !DILocation(line: 1812, column: 9, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 1812, column: 9)
!9217 = !DILocation(line: 1812, column: 14, scope: !9216)
!9218 = !DILocation(line: 1812, column: 23, scope: !9216)
!9219 = !DILocation(line: 1812, column: 20, scope: !9216)
!9220 = !DILocation(line: 1812, column: 9, scope: !9212)
!9221 = !DILocation(line: 1813, column: 7, scope: !9216)
!9222 = !DILocation(line: 1811, column: 59, scope: !9212)
!9223 = !DILocation(line: 1811, column: 64, scope: !9212)
!9224 = !DILocation(line: 1811, column: 57, scope: !9212)
!9225 = !DILocation(line: 1811, column: 3, scope: !9212)
!9226 = distinct !{!9226, !9214, !9227}
!9227 = !DILocation(line: 1813, column: 14, scope: !9208)
!9228 = !DILocation(line: 1814, column: 3, scope: !9198)
!9229 = !DILocation(line: 1815, column: 1, scope: !9198)
!9230 = distinct !DISubprogram(name: "create_insn_reg_set", scope: !3, file: !3, line: 1753, type: !9231, scopeLine: 1754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9231 = !DISubroutineType(types: !9232)
!9232 = !{!2043, !810, !839}
!9233 = !DILocalVariable(name: "regno", arg: 1, scope: !9230, file: !3, line: 1753, type: !810)
!9234 = !DILocation(line: 1753, column: 26, scope: !9230)
!9235 = !DILocalVariable(name: "insn", arg: 2, scope: !9230, file: !3, line: 1753, type: !839)
!9236 = !DILocation(line: 1753, column: 37, scope: !9230)
!9237 = !DILocalVariable(name: "set", scope: !9230, file: !3, line: 1755, type: !2043)
!9238 = !DILocation(line: 1755, column: 24, scope: !9230)
!9239 = !DILocation(line: 1757, column: 33, scope: !9230)
!9240 = !DILocation(line: 1757, column: 9, scope: !9230)
!9241 = !DILocation(line: 1757, column: 7, scope: !9230)
!9242 = !DILocation(line: 1758, column: 16, scope: !9230)
!9243 = !DILocation(line: 1758, column: 3, scope: !9230)
!9244 = !DILocation(line: 1758, column: 8, scope: !9230)
!9245 = !DILocation(line: 1758, column: 14, scope: !9230)
!9246 = !DILocation(line: 1759, column: 15, scope: !9230)
!9247 = !DILocation(line: 1759, column: 3, scope: !9230)
!9248 = !DILocation(line: 1759, column: 8, scope: !9230)
!9249 = !DILocation(line: 1759, column: 13, scope: !9230)
!9250 = !DILocation(line: 1760, column: 24, scope: !9230)
!9251 = !DILocation(line: 1760, column: 3, scope: !9230)
!9252 = !DILocation(line: 1760, column: 8, scope: !9230)
!9253 = !DILocation(line: 1760, column: 22, scope: !9230)
!9254 = !DILocation(line: 1761, column: 30, scope: !9230)
!9255 = !DILocation(line: 1761, column: 3, scope: !9230)
!9256 = !DILocation(line: 1761, column: 28, scope: !9230)
!9257 = !DILocation(line: 1762, column: 10, scope: !9230)
!9258 = !DILocation(line: 1762, column: 3, scope: !9230)
!9259 = distinct !DISubprogram(name: "mark_hard_regno_death", scope: !3, file: !3, line: 1939, type: !9260, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{null, !810, !810}
!9262 = !DILocalVariable(name: "regno", arg: 1, scope: !9259, file: !3, line: 1939, type: !810)
!9263 = !DILocation(line: 1939, column: 28, scope: !9259)
!9264 = !DILocalVariable(name: "nregs", arg: 2, scope: !9259, file: !3, line: 1939, type: !810)
!9265 = !DILocation(line: 1939, column: 39, scope: !9259)
!9266 = !DILocalVariable(name: "cl", scope: !9259, file: !3, line: 1941, type: !772)
!9267 = !DILocation(line: 1941, column: 18, scope: !9259)
!9268 = !DILocalVariable(name: "last", scope: !9259, file: !3, line: 1942, type: !810)
!9269 = !DILocation(line: 1942, column: 7, scope: !9259)
!9270 = !DILocation(line: 1942, column: 14, scope: !9259)
!9271 = !DILocation(line: 1942, column: 22, scope: !9259)
!9272 = !DILocation(line: 1942, column: 20, scope: !9259)
!9273 = !DILocation(line: 1944, column: 3, scope: !9259)
!9274 = !DILocation(line: 1944, column: 10, scope: !9259)
!9275 = !DILocation(line: 1944, column: 18, scope: !9259)
!9276 = !DILocation(line: 1944, column: 16, scope: !9259)
!9277 = !DILocation(line: 1946, column: 7, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 1945, column: 5)
!9279 = !DILocation(line: 1947, column: 13, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 1947, column: 11)
!9281 = !DILocation(line: 1947, column: 11, scope: !9278)
!9282 = !DILocation(line: 1949, column: 9, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1948, column: 2)
!9284 = !DILocation(line: 1949, column: 33, scope: !9283)
!9285 = !DILocation(line: 1949, column: 7, scope: !9283)
!9286 = !DILocation(line: 1950, column: 8, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1950, column: 8)
!9288 = !DILocation(line: 1950, column: 11, scope: !9287)
!9289 = !DILocation(line: 1950, column: 8, scope: !9283)
!9290 = !DILocation(line: 1951, column: 24, scope: !9287)
!9291 = !DILocation(line: 1951, column: 6, scope: !9287)
!9292 = !DILocation(line: 1951, column: 28, scope: !9287)
!9293 = !DILocation(line: 1951, column: 35, scope: !9287)
!9294 = !DILocation(line: 1952, column: 2, scope: !9283)
!9295 = !DILocation(line: 1953, column: 12, scope: !9278)
!9296 = distinct !{!9296, !9273, !9297}
!9297 = !DILocation(line: 1954, column: 5, scope: !9259)
!9298 = !DILocation(line: 1955, column: 1, scope: !9259)
!9299 = distinct !DISubprogram(name: "mark_pseudo_death", scope: !3, file: !3, line: 1922, type: !2098, scopeLine: 1923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9300 = !DILocalVariable(name: "regno", arg: 1, scope: !9299, file: !3, line: 1922, type: !810)
!9301 = !DILocation(line: 1922, column: 24, scope: !9299)
!9302 = !DILocalVariable(name: "incr", scope: !9299, file: !3, line: 1924, type: !810)
!9303 = !DILocation(line: 1924, column: 7, scope: !9299)
!9304 = !DILocalVariable(name: "cl", scope: !9299, file: !3, line: 1925, type: !772)
!9305 = !DILocation(line: 1925, column: 18, scope: !9299)
!9306 = !DILocation(line: 1927, column: 3, scope: !9299)
!9307 = !DILocation(line: 1928, column: 8, scope: !9299)
!9308 = !DILocation(line: 1928, column: 32, scope: !9299)
!9309 = !DILocation(line: 1928, column: 6, scope: !9299)
!9310 = !DILocation(line: 1929, column: 7, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 1929, column: 7)
!9312 = !DILocation(line: 1929, column: 10, scope: !9311)
!9313 = !DILocation(line: 1929, column: 7, scope: !9299)
!9314 = !DILocation(line: 1931, column: 34, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 1930, column: 5)
!9316 = !DILocation(line: 1931, column: 14, scope: !9315)
!9317 = !DILocation(line: 1931, column: 38, scope: !9315)
!9318 = !DILocation(line: 1931, column: 12, scope: !9315)
!9319 = !DILocation(line: 1932, column: 39, scope: !9315)
!9320 = !DILocation(line: 1932, column: 25, scope: !9315)
!9321 = !DILocation(line: 1932, column: 7, scope: !9315)
!9322 = !DILocation(line: 1932, column: 29, scope: !9315)
!9323 = !DILocation(line: 1932, column: 36, scope: !9315)
!9324 = !DILocation(line: 1933, column: 5, scope: !9315)
!9325 = !DILocation(line: 1934, column: 1, scope: !9299)
!9326 = distinct !DISubprogram(name: "delete_all_dependences", scope: !3, file: !3, line: 1473, type: !2086, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9327 = !DILocalVariable(name: "insn", arg: 1, scope: !9326, file: !3, line: 1473, type: !839)
!9328 = !DILocation(line: 1473, column: 29, scope: !9326)
!9329 = !DILocalVariable(name: "sd_it", scope: !9326, file: !3, line: 1475, type: !2167)
!9330 = !DILocation(line: 1475, column: 19, scope: !9326)
!9331 = !DILocalVariable(name: "dep", scope: !9326, file: !3, line: 1476, type: !2231)
!9332 = !DILocation(line: 1476, column: 9, scope: !9326)
!9333 = !DILocation(line: 1482, column: 35, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 1482, column: 3)
!9335 = !DILocation(line: 1482, column: 16, scope: !9334)
!9336 = !DILocation(line: 1482, column: 8, scope: !9334)
!9337 = !DILocation(line: 1483, column: 8, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9334, file: !3, line: 1482, column: 3)
!9339 = !DILocation(line: 1482, column: 3, scope: !9334)
!9340 = !DILocation(line: 1484, column: 5, scope: !9338)
!9341 = !DILocation(line: 1482, column: 3, scope: !9338)
!9342 = distinct !{!9342, !9339, !9343}
!9343 = !DILocation(line: 1484, column: 25, scope: !9334)
!9344 = !DILocation(line: 1485, column: 1, scope: !9326)
!9345 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_length", scope: !420, file: !420, line: 846, type: !9346, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9346 = !DISubroutineType(types: !9347)
!9347 = !{!7, !9348}
!9348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9349, size: 64)
!9349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2055)
!9350 = !DILocalVariable(name: "vec_", arg: 1, scope: !9345, file: !420, line: 846, type: !9348)
!9351 = !DILocation(line: 846, column: 1, scope: !9345)
!9352 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_space", scope: !420, file: !420, line: 846, type: !9353, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9353 = !DISubroutineType(types: !9354)
!9354 = !{!810, !2647, !810}
!9355 = !DILocalVariable(name: "vec_", arg: 1, scope: !9352, file: !420, line: 846, type: !2647)
!9356 = !DILocation(line: 846, column: 1, scope: !9352)
!9357 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9352, file: !420, line: 846, type: !810)
!9358 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_heap_safe_grow_cleared", scope: !420, file: !420, line: 847, type: !9359, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9359 = !DISubroutineType(types: !9360)
!9360 = !{null, !6409, !810}
!9361 = !DILocalVariable(name: "vec_", arg: 1, scope: !9358, file: !420, line: 847, type: !6409)
!9362 = !DILocation(line: 847, column: 1, scope: !9358)
!9363 = !DILocalVariable(name: "size_", arg: 2, scope: !9358, file: !420, line: 847, type: !810)
!9364 = !DILocalVariable(name: "oldsize", scope: !9358, file: !420, line: 847, type: !810)
!9365 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_heap_safe_grow", scope: !420, file: !420, line: 847, type: !9359, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9366 = !DILocalVariable(name: "vec_", arg: 1, scope: !9365, file: !420, line: 847, type: !6409)
!9367 = !DILocation(line: 847, column: 1, scope: !9365)
!9368 = !DILocalVariable(name: "size_", arg: 2, scope: !9365, file: !420, line: 847, type: !810)
!9369 = !DILocation(line: 0, scope: !9365)
!9370 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_base_address", scope: !420, file: !420, line: 846, type: !9371, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!2646, !2647}
!9373 = !DILocalVariable(name: "vec_", arg: 1, scope: !9370, file: !420, line: 846, type: !2647)
!9374 = !DILocation(line: 846, column: 1, scope: !9370)
!9375 = distinct !DISubprogram(name: "VEC_haifa_deps_insn_data_def_heap_reserve_exact", scope: !420, file: !420, line: 847, type: !9376, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9376 = !DISubroutineType(types: !9377)
!9377 = !{!810, !6409, !810}
!9378 = !DILocalVariable(name: "vec_", arg: 1, scope: !9375, file: !420, line: 847, type: !6409)
!9379 = !DILocation(line: 847, column: 1, scope: !9375)
!9380 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9375, file: !420, line: 847, type: !810)
!9381 = !DILocalVariable(name: "extend", scope: !9375, file: !420, line: 847, type: !810)
!9382 = !DILocation(line: 847, column: 1, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9375, file: !420, line: 847, column: 1)
!9384 = distinct !DISubprogram(name: "maybe_add_or_update_dep_1", scope: !3, file: !3, line: 844, type: !3342, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2176)
!9385 = !DILocalVariable(name: "dep", arg: 1, scope: !9384, file: !3, line: 844, type: !2231)
!9386 = !DILocation(line: 844, column: 34, scope: !9384)
!9387 = !DILocalVariable(name: "resolved_p", arg: 2, scope: !9384, file: !3, line: 844, type: !1065)
!9388 = !DILocation(line: 844, column: 44, scope: !9384)
!9389 = !DILocalVariable(name: "mem1", arg: 3, scope: !9384, file: !3, line: 844, type: !839)
!9390 = !DILocation(line: 844, column: 60, scope: !9384)
!9391 = !DILocalVariable(name: "mem2", arg: 4, scope: !9384, file: !3, line: 844, type: !839)
!9392 = !DILocation(line: 844, column: 70, scope: !9384)
!9393 = !DILocalVariable(name: "elem", scope: !9384, file: !3, line: 846, type: !839)
!9394 = !DILocation(line: 846, column: 7, scope: !9384)
!9395 = !DILocation(line: 846, column: 14, scope: !9384)
!9396 = !DILocalVariable(name: "insn", scope: !9384, file: !3, line: 847, type: !839)
!9397 = !DILocation(line: 847, column: 7, scope: !9384)
!9398 = !DILocation(line: 847, column: 14, scope: !9384)
!9399 = !DILocation(line: 849, column: 3, scope: !9384)
!9400 = !DILocation(line: 852, column: 7, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 852, column: 7)
!9402 = !DILocation(line: 852, column: 15, scope: !9401)
!9403 = !DILocation(line: 852, column: 12, scope: !9401)
!9404 = !DILocation(line: 852, column: 7, scope: !9384)
!9405 = !DILocation(line: 854, column: 11, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 854, column: 11)
!9407 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 853, column: 5)
!9408 = !DILocation(line: 854, column: 28, scope: !9406)
!9409 = !DILocation(line: 854, column: 11, scope: !9407)
!9410 = !DILocation(line: 856, column: 9, scope: !9406)
!9411 = !DILocation(line: 856, column: 33, scope: !9406)
!9412 = !DILocation(line: 858, column: 7, scope: !9407)
!9413 = !DILocation(line: 861, column: 31, scope: !9384)
!9414 = !DILocation(line: 861, column: 36, scope: !9384)
!9415 = !DILocation(line: 861, column: 48, scope: !9384)
!9416 = !DILocation(line: 861, column: 54, scope: !9384)
!9417 = !DILocation(line: 861, column: 10, scope: !9384)
!9418 = !DILocation(line: 861, column: 3, scope: !9384)
!9419 = !DILocation(line: 862, column: 1, scope: !9384)
