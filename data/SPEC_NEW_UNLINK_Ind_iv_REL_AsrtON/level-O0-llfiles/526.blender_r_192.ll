; ModuleID = 'blender/source/blender/blenkernel/intern/mball.c'
source_filename = "blender/source/blender/blenkernel/intern/mball.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.intlists = type { %struct.intlist*, %struct.intlists* }
%struct.intlist = type { i32, %struct.intlist* }
%struct.MetaBall = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Ipo*, %struct.Material**, i8, i8, i16, i16, i16, [3 x float], [3 x float], [3 x float], float, float, float, %struct.MetaElem* }
%struct.AnimData = type opaque
%struct.Ipo = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type opaque
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.MetaElem = type { %struct.MetaElem*, %struct.MetaElem*, %struct.BoundBox*, i16, i16, i16, i16, float, float, float, [4 x float], float, float, float, float, float, float, float, float*, float* }
%struct.DispList = type { %struct.DispList*, %struct.DispList*, i16, i16, i32, i32, i16, i16, float*, float*, i32*, i32, i32, i32* }
%struct.SceneBaseIter = type { %struct.ListBase*, %struct.DupliObject*, [4 x [4 x float]], %struct.Object*, i32 }
%struct.DupliObject = type { %struct.DupliObject*, %struct.DupliObject*, %struct.Object*, [4 x [4 x float]], [3 x float], [2 x float], i16, i8, i8, [8 x i32], %struct.ParticleSystem* }
%struct.ParticleSystem = type opaque
%struct.process = type { float, i32, %struct.MetaElem**, %struct.octal_tree*, float (%struct.process*, float, float, float)*, float, float, i32, %struct.cubes*, %struct.vertices, %struct.centerlist**, %struct.corner**, %struct.edgelist**, i32*, i32, i32, i32, %struct.pgn_elements*, %struct.ListBase }
%struct.octal_tree = type { %struct.octal_node*, i32, i32, i16 }
%struct.octal_node = type { [8 x %struct.octal_node*], %struct.octal_node*, %struct.ListBase, float, float, float, float, float, float, float, float, float, i32, i32, i32 }
%struct.cubes = type { %struct.cube, %struct.cubes* }
%struct.cube = type { i32, i32, i32, [8 x %struct.corner*] }
%struct.corner = type { i32, i32, i32, [3 x float], float, %struct.corner* }
%struct.vertices = type { i32, i32, %struct.vertex* }
%struct.vertex = type { [3 x float], [3 x float] }
%struct.centerlist = type { i32, i32, i32, %struct.centerlist* }
%struct.edgelist = type { i32, i32, i32, i32, i32, i32, i32, %struct.edgelist* }
%struct.pgn_elements = type { %struct.pgn_elements*, %struct.pgn_elements*, i8* }
%struct.ml_pointer = type { %struct.ml_pointer*, %struct.ml_pointer*, %struct.MetaElem* }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [9 x i8] c"metaelem\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"mb boundbox\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"MballOrco\00", align 1
@cubetable = internal global [256 x %struct.intlists*] zeroinitializer, align 16, !dbg !0
@.str.3 = private unnamed_addr constant [6 x i8] c"mainb\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"mbaldisp\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"mballverts\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"mballnors\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"metaball_octal_tree\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"metaball_octal_node\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"ml_pointer\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"octal_node\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"incorrect use of new_pgn_element\0A\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"newpgn\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"mbproc->centers\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"mbproc->corners\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"mbproc->edges\00", align 1
@makecubetable.is_done = internal global i8 0, align 1, !dbg !1714
@corner1 = internal global [12 x i32] [i32 0, i32 2, i32 0, i32 1, i32 4, i32 6, i32 4, i32 5, i32 0, i32 1, i32 2, i32 3], align 16, !dbg !1720
@corner2 = internal global [12 x i32] [i32 1, i32 3, i32 2, i32 3, i32 5, i32 7, i32 6, i32 7, i32 4, i32 5, i32 6, i32 7], align 16, !dbg !1725
@.str.16 = private unnamed_addr constant [14 x i8] c"mball_intlist\00", align 1
@rightface = internal global [12 x i32] [i32 0, i32 3, i32 4, i32 0, i32 2, i32 1, i32 1, i32 5, i32 2, i32 5, i32 4, i32 3], align 16, !dbg !1727
@leftface = internal global [12 x i32] [i32 2, i32 0, i32 0, i32 5, i32 1, i32 3, i32 4, i32 1, i32 4, i32 2, i32 3, i32 5], align 16, !dbg !1729
@__const.find_first_points.index = private unnamed_addr constant [3 x i32] [i32 1, i32 0, i32 -1], align 4
@.str.17 = private unnamed_addr constant [14 x i8] c"addtovertices\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"vertindex\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_unlink(%struct.MetaBall* %mb) #0 !dbg !1738 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %a = alloca i32, align 4
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !1741, metadata !DIExpression()), !dbg !1742
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1743, metadata !DIExpression()), !dbg !1744
  store i32 0, i32* %a, align 4, !dbg !1745
  br label %for.cond, !dbg !1747

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !1748
  %1 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1750
  %totcol = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %1, i32 0, i32 9, !dbg !1751
  %2 = load i16, i16* %totcol, align 2, !dbg !1751
  %conv = sext i16 %2 to i32, !dbg !1750
  %cmp = icmp slt i32 %0, %conv, !dbg !1752
  br i1 %cmp, label %for.body, label %for.end, !dbg !1753

for.body:                                         ; preds = %for.cond
  %3 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1754
  %mat = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %3, i32 0, i32 6, !dbg !1757
  %4 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !1757
  %5 = load i32, i32* %a, align 4, !dbg !1758
  %idxprom = sext i32 %5 to i64, !dbg !1754
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %4, i64 %idxprom, !dbg !1754
  %6 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !1754
  %tobool = icmp ne %struct.Material* %6, null, !dbg !1754
  br i1 %tobool, label %if.then, label %if.end, !dbg !1759

if.then:                                          ; preds = %for.body
  %7 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1760
  %mat2 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %7, i32 0, i32 6, !dbg !1761
  %8 = load %struct.Material**, %struct.Material*** %mat2, align 8, !dbg !1761
  %9 = load i32, i32* %a, align 4, !dbg !1762
  %idxprom3 = sext i32 %9 to i64, !dbg !1760
  %arrayidx4 = getelementptr inbounds %struct.Material*, %struct.Material** %8, i64 %idxprom3, !dbg !1760
  %10 = load %struct.Material*, %struct.Material** %arrayidx4, align 8, !dbg !1760
  %id = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 0, !dbg !1763
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !1764
  %11 = load i32, i32* %us, align 4, !dbg !1765
  %dec = add nsw i32 %11, -1, !dbg !1765
  store i32 %dec, i32* %us, align 4, !dbg !1765
  br label %if.end, !dbg !1760

if.end:                                           ; preds = %if.then, %for.body
  %12 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1766
  %mat5 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %12, i32 0, i32 6, !dbg !1767
  %13 = load %struct.Material**, %struct.Material*** %mat5, align 8, !dbg !1767
  %14 = load i32, i32* %a, align 4, !dbg !1768
  %idxprom6 = sext i32 %14 to i64, !dbg !1766
  %arrayidx7 = getelementptr inbounds %struct.Material*, %struct.Material** %13, i64 %idxprom6, !dbg !1766
  store %struct.Material* null, %struct.Material** %arrayidx7, align 8, !dbg !1769
  br label %for.inc, !dbg !1770

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %a, align 4, !dbg !1771
  %inc = add nsw i32 %15, 1, !dbg !1771
  store i32 %inc, i32* %a, align 4, !dbg !1771
  br label %for.cond, !dbg !1772, !llvm.loop !1773

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1775
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_free(%struct.MetaBall* %mb) #0 !dbg !1776 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !1777, metadata !DIExpression()), !dbg !1778
  %0 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1779
  call void @BKE_mball_unlink(%struct.MetaBall* %0), !dbg !1780
  %1 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1781
  %adt = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %1, i32 0, i32 1, !dbg !1783
  %2 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !1783
  %tobool = icmp ne %struct.AnimData* %2, null, !dbg !1781
  br i1 %tobool, label %if.then, label %if.end, !dbg !1784

if.then:                                          ; preds = %entry
  %3 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1785
  %4 = bitcast %struct.MetaBall* %3 to %struct.ID*, !dbg !1787
  call void @BKE_free_animdata(%struct.ID* %4), !dbg !1788
  %5 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1789
  %adt1 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %5, i32 0, i32 1, !dbg !1790
  store %struct.AnimData* null, %struct.AnimData** %adt1, align 8, !dbg !1791
  br label %if.end, !dbg !1792

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1793
  %mat = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %6, i32 0, i32 6, !dbg !1795
  %7 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !1795
  %tobool2 = icmp ne %struct.Material** %7, null, !dbg !1793
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !1796

if.then3:                                         ; preds = %if.end
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1797
  %9 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1798
  %mat4 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %9, i32 0, i32 6, !dbg !1799
  %10 = load %struct.Material**, %struct.Material*** %mat4, align 8, !dbg !1799
  %11 = bitcast %struct.Material** %10 to i8*, !dbg !1798
  call void %8(i8* %11), !dbg !1797
  br label %if.end5, !dbg !1797

if.end5:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1800
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %12, i32 0, i32 2, !dbg !1801
  call void @BLI_freelistN(%struct.ListBase* %elems), !dbg !1802
  %13 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1803
  %disp = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %13, i32 0, i32 3, !dbg !1805
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp, i32 0, i32 0, !dbg !1806
  %14 = load i8*, i8** %first, align 8, !dbg !1806
  %tobool6 = icmp ne i8* %14, null, !dbg !1803
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !1807

if.then7:                                         ; preds = %if.end5
  %15 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1808
  %disp8 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %15, i32 0, i32 3, !dbg !1809
  call void @BKE_displist_free(%struct.ListBase* %disp8), !dbg !1810
  br label %if.end9, !dbg !1810

if.end9:                                          ; preds = %if.then7, %if.end5
  ret void, !dbg !1811
}

declare dso_local void @BKE_free_animdata(%struct.ID*) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @BKE_displist_free(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MetaBall* @BKE_mball_add(%struct.Main* %bmain, i8* %name) #0 !dbg !1812 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !1882, metadata !DIExpression()), !dbg !1883
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1884, metadata !DIExpression()), !dbg !1885
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !1886, metadata !DIExpression()), !dbg !1887
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !1888
  %1 = load i8*, i8** %name.addr, align 8, !dbg !1889
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 16973, i8* %1), !dbg !1890
  %2 = bitcast i8* %call to %struct.MetaBall*, !dbg !1890
  store %struct.MetaBall* %2, %struct.MetaBall** %mb, align 8, !dbg !1891
  %3 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !1892
  %size = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %3, i32 0, i32 13, !dbg !1893
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !1892
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !1894
  %4 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !1895
  %size1 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %4, i32 0, i32 13, !dbg !1896
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %size1, i64 0, i64 1, !dbg !1895
  store float 1.000000e+00, float* %arrayidx2, align 4, !dbg !1897
  %5 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !1898
  %size3 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %5, i32 0, i32 13, !dbg !1899
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %size3, i64 0, i64 0, !dbg !1898
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !1900
  %6 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !1901
  %texflag = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %6, i32 0, i32 10, !dbg !1902
  store i16 1, i16* %texflag, align 4, !dbg !1903
  %7 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !1904
  %wiresize = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %7, i32 0, i32 15, !dbg !1905
  store float 0x3FD99999A0000000, float* %wiresize, align 4, !dbg !1906
  %8 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !1907
  %rendersize = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %8, i32 0, i32 16, !dbg !1908
  store float 0x3FC99999A0000000, float* %rendersize, align 8, !dbg !1909
  %9 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !1910
  %thresh = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %9, i32 0, i32 17, !dbg !1911
  store float 0x3FE3333340000000, float* %thresh, align 4, !dbg !1912
  %10 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !1913
  ret %struct.MetaBall* %10, !dbg !1914
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MetaBall* @BKE_mball_copy(%struct.MetaBall* %mb) #0 !dbg !1915 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %mbn = alloca %struct.MetaBall*, align 8
  %a = alloca i32, align 4
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !1918, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mbn, metadata !1920, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1922, metadata !DIExpression()), !dbg !1923
  %0 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1924
  %id = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %0, i32 0, i32 0, !dbg !1925
  %call = call i8* @BKE_libblock_copy(%struct.ID* %id), !dbg !1926
  %1 = bitcast i8* %call to %struct.MetaBall*, !dbg !1926
  store %struct.MetaBall* %1, %struct.MetaBall** %mbn, align 8, !dbg !1927
  %2 = load %struct.MetaBall*, %struct.MetaBall** %mbn, align 8, !dbg !1928
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %2, i32 0, i32 2, !dbg !1929
  %3 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1930
  %elems1 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %3, i32 0, i32 2, !dbg !1931
  call void @BLI_duplicatelist(%struct.ListBase* %elems, %struct.ListBase* %elems1), !dbg !1932
  %4 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !1933
  %5 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1934
  %mat = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %5, i32 0, i32 6, !dbg !1935
  %6 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !1935
  %7 = bitcast %struct.Material** %6 to i8*, !dbg !1934
  %call2 = call i8* %4(i8* %7), !dbg !1933
  %8 = bitcast i8* %call2 to %struct.Material**, !dbg !1933
  %9 = load %struct.MetaBall*, %struct.MetaBall** %mbn, align 8, !dbg !1936
  %mat3 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %9, i32 0, i32 6, !dbg !1937
  store %struct.Material** %8, %struct.Material*** %mat3, align 8, !dbg !1938
  store i32 0, i32* %a, align 4, !dbg !1939
  br label %for.cond, !dbg !1941

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %a, align 4, !dbg !1942
  %11 = load %struct.MetaBall*, %struct.MetaBall** %mbn, align 8, !dbg !1944
  %totcol = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %11, i32 0, i32 9, !dbg !1945
  %12 = load i16, i16* %totcol, align 2, !dbg !1945
  %conv = sext i16 %12 to i32, !dbg !1944
  %cmp = icmp slt i32 %10, %conv, !dbg !1946
  br i1 %cmp, label %for.body, label %for.end, !dbg !1947

for.body:                                         ; preds = %for.cond
  %13 = load %struct.MetaBall*, %struct.MetaBall** %mbn, align 8, !dbg !1948
  %mat5 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %13, i32 0, i32 6, !dbg !1950
  %14 = load %struct.Material**, %struct.Material*** %mat5, align 8, !dbg !1950
  %15 = load i32, i32* %a, align 4, !dbg !1951
  %idxprom = sext i32 %15 to i64, !dbg !1948
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %14, i64 %idxprom, !dbg !1948
  %16 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !1948
  %17 = bitcast %struct.Material* %16 to %struct.ID*, !dbg !1952
  call void @id_us_plus(%struct.ID* %17), !dbg !1953
  br label %for.inc, !dbg !1954

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %a, align 4, !dbg !1955
  %inc = add nsw i32 %18, 1, !dbg !1955
  store i32 %inc, i32* %a, align 4, !dbg !1955
  br label %for.cond, !dbg !1956, !llvm.loop !1957

for.end:                                          ; preds = %for.cond
  %19 = load %struct.MetaBall*, %struct.MetaBall** %mbn, align 8, !dbg !1959
  %editelems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %19, i32 0, i32 4, !dbg !1960
  store %struct.ListBase* null, %struct.ListBase** %editelems, align 8, !dbg !1961
  %20 = load %struct.MetaBall*, %struct.MetaBall** %mbn, align 8, !dbg !1962
  %lastelem = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %20, i32 0, i32 18, !dbg !1963
  store %struct.MetaElem* null, %struct.MetaElem** %lastelem, align 8, !dbg !1964
  %21 = load %struct.MetaBall*, %struct.MetaBall** %mbn, align 8, !dbg !1965
  ret %struct.MetaBall* %21, !dbg !1966
}

declare dso_local i8* @BKE_libblock_copy(%struct.ID*) #2

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

declare dso_local void @id_us_plus(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_make_local(%struct.MetaBall* %mb) #0 !dbg !1967 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %bmain = alloca %struct.Main*, align 8
  %ob = alloca %struct.Object*, align 8
  %is_local = alloca i8, align 1
  %is_lib = alloca i8, align 1
  %mb_new = alloca %struct.MetaBall*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !1968, metadata !DIExpression()), !dbg !1969
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !1970, metadata !DIExpression()), !dbg !1971
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !1972
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !1971
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !1973, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.declare(metadata i8* %is_local, metadata !1977, metadata !DIExpression()), !dbg !1978
  store i8 0, i8* %is_local, align 1, !dbg !1978
  call void @llvm.dbg.declare(metadata i8* %is_lib, metadata !1979, metadata !DIExpression()), !dbg !1980
  store i8 0, i8* %is_lib, align 1, !dbg !1980
  %1 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1981
  %id = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %1, i32 0, i32 0, !dbg !1983
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !1984
  %2 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !1984
  %cmp = icmp eq %struct.Library* %2, null, !dbg !1985
  br i1 %cmp, label %if.then, label %if.end, !dbg !1986

if.then:                                          ; preds = %entry
  br label %if.end66, !dbg !1987

if.end:                                           ; preds = %entry
  %3 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1988
  %id1 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %3, i32 0, i32 0, !dbg !1990
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 6, !dbg !1991
  %4 = load i32, i32* %us, align 4, !dbg !1991
  %cmp2 = icmp eq i32 %4, 1, !dbg !1992
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !1993

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !1994
  %6 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1996
  %id4 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %6, i32 0, i32 0, !dbg !1997
  call void @id_clear_lib_data(%struct.Main* %5, %struct.ID* %id4), !dbg !1998
  %7 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !1999
  call void @extern_local_mball(%struct.MetaBall* %7), !dbg !2000
  br label %if.end66, !dbg !2001

if.end5:                                          ; preds = %if.end
  %8 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2002
  %object = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 13, !dbg !2004
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !2005
  %9 = load i8*, i8** %first, align 8, !dbg !2005
  %10 = bitcast i8* %9 to %struct.Object*, !dbg !2006
  store %struct.Object* %10, %struct.Object** %ob, align 8, !dbg !2007
  br label %for.cond, !dbg !2008

for.cond:                                         ; preds = %for.inc, %if.end5
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2009
  %tobool = icmp ne %struct.Object* %11, null, !dbg !2009
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2011

land.rhs:                                         ; preds = %for.cond
  %12 = load i8, i8* %is_lib, align 1, !dbg !2012
  %conv = zext i8 %12 to i32, !dbg !2012
  %cmp6 = icmp eq i32 0, %conv, !dbg !2012
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !2012

lor.rhs:                                          ; preds = %land.rhs
  %13 = load i8, i8* %is_local, align 1, !dbg !2012
  %conv8 = zext i8 %13 to i32, !dbg !2012
  %cmp9 = icmp eq i32 0, %conv8, !dbg !2012
  br label %lor.end, !dbg !2012

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %14 = phi i1 [ true, %land.rhs ], [ %cmp9, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %15 = phi i1 [ false, %for.cond ], [ %14, %lor.end ], !dbg !2013
  br i1 %15, label %for.body, label %for.end, !dbg !2014

for.body:                                         ; preds = %land.end
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2015
  %data = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 19, !dbg !2018
  %17 = load i8*, i8** %data, align 8, !dbg !2018
  %18 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2019
  %19 = bitcast %struct.MetaBall* %18 to i8*, !dbg !2019
  %cmp11 = icmp eq i8* %17, %19, !dbg !2020
  br i1 %cmp11, label %if.then13, label %if.end19, !dbg !2021

if.then13:                                        ; preds = %for.body
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2022
  %id14 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 0, !dbg !2025
  %lib15 = getelementptr inbounds %struct.ID, %struct.ID* %id14, i32 0, i32 3, !dbg !2026
  %21 = load %struct.Library*, %struct.Library** %lib15, align 8, !dbg !2026
  %tobool16 = icmp ne %struct.Library* %21, null, !dbg !2022
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !2027

if.then17:                                        ; preds = %if.then13
  store i8 1, i8* %is_lib, align 1, !dbg !2028
  br label %if.end18, !dbg !2029

if.else:                                          ; preds = %if.then13
  store i8 1, i8* %is_local, align 1, !dbg !2030
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then17
  br label %if.end19, !dbg !2031

if.end19:                                         ; preds = %if.end18, %for.body
  br label %for.inc, !dbg !2032

for.inc:                                          ; preds = %if.end19
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2033
  %id20 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 0, !dbg !2034
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 0, !dbg !2035
  %23 = load i8*, i8** %next, align 8, !dbg !2035
  %24 = bitcast i8* %23 to %struct.Object*, !dbg !2033
  store %struct.Object* %24, %struct.Object** %ob, align 8, !dbg !2036
  br label %for.cond, !dbg !2037, !llvm.loop !2038

for.end:                                          ; preds = %land.end
  %25 = load i8, i8* %is_local, align 1, !dbg !2040
  %conv21 = zext i8 %25 to i32, !dbg !2040
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !2040
  br i1 %tobool22, label %land.lhs.true, label %if.else28, !dbg !2042

land.lhs.true:                                    ; preds = %for.end
  %26 = load i8, i8* %is_lib, align 1, !dbg !2043
  %conv23 = zext i8 %26 to i32, !dbg !2043
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !2044
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !2045

if.then26:                                        ; preds = %land.lhs.true
  %27 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2046
  %28 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2048
  %id27 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %28, i32 0, i32 0, !dbg !2049
  call void @id_clear_lib_data(%struct.Main* %27, %struct.ID* %id27), !dbg !2050
  %29 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2051
  call void @extern_local_mball(%struct.MetaBall* %29), !dbg !2052
  br label %if.end66, !dbg !2053

if.else28:                                        ; preds = %land.lhs.true, %for.end
  %30 = load i8, i8* %is_local, align 1, !dbg !2054
  %conv29 = zext i8 %30 to i32, !dbg !2054
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !2054
  br i1 %tobool30, label %land.lhs.true31, label %if.end65, !dbg !2056

land.lhs.true31:                                  ; preds = %if.else28
  %31 = load i8, i8* %is_lib, align 1, !dbg !2057
  %conv32 = zext i8 %31 to i32, !dbg !2057
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !2057
  br i1 %tobool33, label %if.then34, label %if.end65, !dbg !2058

if.then34:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb_new, metadata !2059, metadata !DIExpression()), !dbg !2061
  %32 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2062
  %call = call %struct.MetaBall* @BKE_mball_copy(%struct.MetaBall* %32), !dbg !2063
  store %struct.MetaBall* %call, %struct.MetaBall** %mb_new, align 8, !dbg !2061
  %33 = load %struct.MetaBall*, %struct.MetaBall** %mb_new, align 8, !dbg !2064
  %id35 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %33, i32 0, i32 0, !dbg !2065
  %us36 = getelementptr inbounds %struct.ID, %struct.ID* %id35, i32 0, i32 6, !dbg !2066
  store i32 0, i32* %us36, align 4, !dbg !2067
  %34 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2068
  %35 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2069
  %id37 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %35, i32 0, i32 0, !dbg !2070
  %lib38 = getelementptr inbounds %struct.ID, %struct.ID* %id37, i32 0, i32 3, !dbg !2071
  %36 = load %struct.Library*, %struct.Library** %lib38, align 8, !dbg !2071
  %37 = load %struct.MetaBall*, %struct.MetaBall** %mb_new, align 8, !dbg !2072
  %id39 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %37, i32 0, i32 0, !dbg !2073
  call void @BKE_id_lib_local_paths(%struct.Main* %34, %struct.Library* %36, %struct.ID* %id39), !dbg !2074
  %38 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2075
  %object40 = getelementptr inbounds %struct.Main, %struct.Main* %38, i32 0, i32 13, !dbg !2077
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object40, i32 0, i32 0, !dbg !2078
  %39 = load i8*, i8** %first41, align 8, !dbg !2078
  %40 = bitcast i8* %39 to %struct.Object*, !dbg !2079
  store %struct.Object* %40, %struct.Object** %ob, align 8, !dbg !2080
  br label %for.cond42, !dbg !2081

for.cond42:                                       ; preds = %for.inc61, %if.then34
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2082
  %tobool43 = icmp ne %struct.Object* %41, null, !dbg !2084
  br i1 %tobool43, label %for.body44, label %for.end64, !dbg !2084

for.body44:                                       ; preds = %for.cond42
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2085
  %data45 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 19, !dbg !2088
  %43 = load i8*, i8** %data45, align 8, !dbg !2088
  %44 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2089
  %45 = bitcast %struct.MetaBall* %44 to i8*, !dbg !2089
  %cmp46 = icmp eq i8* %43, %45, !dbg !2090
  br i1 %cmp46, label %if.then48, label %if.end60, !dbg !2091

if.then48:                                        ; preds = %for.body44
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2092
  %id49 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 0, !dbg !2095
  %lib50 = getelementptr inbounds %struct.ID, %struct.ID* %id49, i32 0, i32 3, !dbg !2096
  %47 = load %struct.Library*, %struct.Library** %lib50, align 8, !dbg !2096
  %cmp51 = icmp eq %struct.Library* %47, null, !dbg !2097
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !2098

if.then53:                                        ; preds = %if.then48
  %48 = load %struct.MetaBall*, %struct.MetaBall** %mb_new, align 8, !dbg !2099
  %49 = bitcast %struct.MetaBall* %48 to i8*, !dbg !2099
  %50 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2101
  %data54 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 19, !dbg !2102
  store i8* %49, i8** %data54, align 8, !dbg !2103
  %51 = load %struct.MetaBall*, %struct.MetaBall** %mb_new, align 8, !dbg !2104
  %id55 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %51, i32 0, i32 0, !dbg !2105
  %us56 = getelementptr inbounds %struct.ID, %struct.ID* %id55, i32 0, i32 6, !dbg !2106
  %52 = load i32, i32* %us56, align 4, !dbg !2107
  %inc = add nsw i32 %52, 1, !dbg !2107
  store i32 %inc, i32* %us56, align 4, !dbg !2107
  %53 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2108
  %id57 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %53, i32 0, i32 0, !dbg !2109
  %us58 = getelementptr inbounds %struct.ID, %struct.ID* %id57, i32 0, i32 6, !dbg !2110
  %54 = load i32, i32* %us58, align 4, !dbg !2111
  %dec = add nsw i32 %54, -1, !dbg !2111
  store i32 %dec, i32* %us58, align 4, !dbg !2111
  br label %if.end59, !dbg !2112

if.end59:                                         ; preds = %if.then53, %if.then48
  br label %if.end60, !dbg !2113

if.end60:                                         ; preds = %if.end59, %for.body44
  br label %for.inc61, !dbg !2114

for.inc61:                                        ; preds = %if.end60
  %55 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2115
  %id62 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 0, !dbg !2116
  %next63 = getelementptr inbounds %struct.ID, %struct.ID* %id62, i32 0, i32 0, !dbg !2117
  %56 = load i8*, i8** %next63, align 8, !dbg !2117
  %57 = bitcast i8* %56 to %struct.Object*, !dbg !2115
  store %struct.Object* %57, %struct.Object** %ob, align 8, !dbg !2118
  br label %for.cond42, !dbg !2119, !llvm.loop !2120

for.end64:                                        ; preds = %for.cond42
  br label %if.end65, !dbg !2122

if.end65:                                         ; preds = %for.end64, %land.lhs.true31, %if.else28
  br label %if.end66

if.end66:                                         ; preds = %if.then, %if.then3, %if.end65, %if.then26
  ret void, !dbg !2123
}

declare dso_local void @id_clear_lib_data(%struct.Main*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @extern_local_mball(%struct.MetaBall* %mb) #0 !dbg !2124 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !2125, metadata !DIExpression()), !dbg !2126
  %0 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2127
  %mat = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %0, i32 0, i32 6, !dbg !2129
  %1 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !2129
  %tobool = icmp ne %struct.Material** %1, null, !dbg !2127
  br i1 %tobool, label %if.then, label %if.end, !dbg !2130

if.then:                                          ; preds = %entry
  %2 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2131
  %mat1 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %2, i32 0, i32 6, !dbg !2133
  %3 = load %struct.Material**, %struct.Material*** %mat1, align 8, !dbg !2133
  %4 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2134
  %totcol = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %4, i32 0, i32 9, !dbg !2135
  %5 = load i16, i16* %totcol, align 2, !dbg !2135
  call void @extern_local_matarar(%struct.Material** %3, i16 signext %5), !dbg !2136
  br label %if.end, !dbg !2137

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2138
}

declare dso_local void @BKE_id_lib_local_paths(%struct.Main*, %struct.Library*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MetaElem* @BKE_mball_element_add(%struct.MetaBall* %mb, i32 %type) #0 !dbg !2139 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %type.addr = alloca i32, align 4
  %ml = alloca %struct.MetaElem*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !2143, metadata !DIExpression()), !dbg !2144
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2145, metadata !DIExpression()), !dbg !2146
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !2147, metadata !DIExpression()), !dbg !2148
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2149
  %call = call i8* %0(i64 104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !2149
  %1 = bitcast i8* %call to %struct.MetaElem*, !dbg !2149
  store %struct.MetaElem* %1, %struct.MetaElem** %ml, align 8, !dbg !2148
  %2 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2150
  %quat = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %2, i32 0, i32 10, !dbg !2151
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !2150
  call void @unit_qt(float* %arraydecay), !dbg !2152
  %3 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2153
  %rad = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %3, i32 0, i32 14, !dbg !2154
  store float 2.000000e+00, float* %rad, align 8, !dbg !2155
  %4 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2156
  %s = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %4, i32 0, i32 16, !dbg !2157
  store float 2.000000e+00, float* %s, align 8, !dbg !2158
  %5 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2159
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %5, i32 0, i32 4, !dbg !2160
  store i16 16, i16* %flag, align 2, !dbg !2161
  %6 = load i32, i32* %type.addr, align 4, !dbg !2162
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb2
    i32 5, label %sw.bb7
    i32 6, label %sw.bb12
    i32 7, label %sw.bb17
  ], !dbg !2163

sw.bb:                                            ; preds = %entry
  %7 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2164
  %type1 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %7, i32 0, i32 3, !dbg !2166
  store i16 0, i16* %type1, align 8, !dbg !2167
  %8 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2168
  %expz = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %8, i32 0, i32 13, !dbg !2169
  store float 1.000000e+00, float* %expz, align 4, !dbg !2170
  %9 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2171
  %expy = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %9, i32 0, i32 12, !dbg !2172
  store float 1.000000e+00, float* %expy, align 8, !dbg !2173
  %10 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2174
  %expx = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %10, i32 0, i32 11, !dbg !2175
  store float 1.000000e+00, float* %expx, align 4, !dbg !2176
  br label %sw.epilog, !dbg !2177

sw.bb2:                                           ; preds = %entry
  %11 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2178
  %type3 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %11, i32 0, i32 3, !dbg !2179
  store i16 4, i16* %type3, align 8, !dbg !2180
  %12 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2181
  %expz4 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %12, i32 0, i32 13, !dbg !2182
  store float 1.000000e+00, float* %expz4, align 4, !dbg !2183
  %13 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2184
  %expy5 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %13, i32 0, i32 12, !dbg !2185
  store float 1.000000e+00, float* %expy5, align 8, !dbg !2186
  %14 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2187
  %expx6 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %14, i32 0, i32 11, !dbg !2188
  store float 1.000000e+00, float* %expx6, align 4, !dbg !2189
  br label %sw.epilog, !dbg !2190

sw.bb7:                                           ; preds = %entry
  %15 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2191
  %type8 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %15, i32 0, i32 3, !dbg !2192
  store i16 5, i16* %type8, align 8, !dbg !2193
  %16 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2194
  %expz9 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %16, i32 0, i32 13, !dbg !2195
  store float 1.000000e+00, float* %expz9, align 4, !dbg !2196
  %17 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2197
  %expy10 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %17, i32 0, i32 12, !dbg !2198
  store float 1.000000e+00, float* %expy10, align 8, !dbg !2199
  %18 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2200
  %expx11 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %18, i32 0, i32 11, !dbg !2201
  store float 1.000000e+00, float* %expx11, align 4, !dbg !2202
  br label %sw.epilog, !dbg !2203

sw.bb12:                                          ; preds = %entry
  %19 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2204
  %type13 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %19, i32 0, i32 3, !dbg !2205
  store i16 6, i16* %type13, align 8, !dbg !2206
  %20 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2207
  %expx14 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %20, i32 0, i32 11, !dbg !2208
  store float 0x3FF3333340000000, float* %expx14, align 4, !dbg !2209
  %21 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2210
  %expy15 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %21, i32 0, i32 12, !dbg !2211
  store float 0x3FE99999A0000000, float* %expy15, align 8, !dbg !2212
  %22 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2213
  %expz16 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %22, i32 0, i32 13, !dbg !2214
  store float 1.000000e+00, float* %expz16, align 4, !dbg !2215
  br label %sw.epilog, !dbg !2216

sw.bb17:                                          ; preds = %entry
  %23 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2217
  %type18 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %23, i32 0, i32 3, !dbg !2218
  store i16 7, i16* %type18, align 8, !dbg !2219
  %24 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2220
  %expz19 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %24, i32 0, i32 13, !dbg !2221
  store float 1.000000e+00, float* %expz19, align 4, !dbg !2222
  %25 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2223
  %expy20 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %25, i32 0, i32 12, !dbg !2224
  store float 1.000000e+00, float* %expy20, align 8, !dbg !2225
  %26 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2226
  %expx21 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %26, i32 0, i32 11, !dbg !2227
  store float 1.000000e+00, float* %expx21, align 4, !dbg !2228
  br label %sw.epilog, !dbg !2229

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !2230

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %sw.bb12, %sw.bb7, %sw.bb2, %sw.bb
  %27 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !2231
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %27, i32 0, i32 2, !dbg !2232
  %28 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2233
  %29 = bitcast %struct.MetaElem* %28 to i8*, !dbg !2233
  call void @BLI_addtail(%struct.ListBase* %elems, i8* %29), !dbg !2234
  %30 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !2235
  ret %struct.MetaElem* %30, !dbg !2236
}

declare dso_local void @unit_qt(float*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_texspace_calc(%struct.Object* %ob) #0 !dbg !2237 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dl = alloca %struct.DispList*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  %data = alloca float*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %tot = alloca i32, align 4
  %do_it = alloca i8, align 1
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2240, metadata !DIExpression()), !dbg !2241
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !2242, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !2265, metadata !DIExpression()), !dbg !2268
  call void @llvm.dbg.declare(metadata float** %data, metadata !2269, metadata !DIExpression()), !dbg !2270
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !2271, metadata !DIExpression()), !dbg !2272
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !2273, metadata !DIExpression()), !dbg !2274
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !2275, metadata !DIExpression()), !dbg !2276
  call void @llvm.dbg.declare(metadata i8* %do_it, metadata !2277, metadata !DIExpression()), !dbg !2278
  store i8 0, i8* %do_it, align 1, !dbg !2278
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2279
  %bb1 = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 15, !dbg !2281
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !2281
  %cmp = icmp eq %struct.BoundBox* %1, null, !dbg !2282
  br i1 %cmp, label %if.then, label %if.end, !dbg !2283

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2284
  %call = call i8* %2(i64 104, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)), !dbg !2284
  %3 = bitcast i8* %call to %struct.BoundBox*, !dbg !2284
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2285
  %bb2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 15, !dbg !2286
  store %struct.BoundBox* %3, %struct.BoundBox** %bb2, align 8, !dbg !2287
  br label %if.end, !dbg !2285

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2288
  %bb3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 15, !dbg !2289
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb3, align 8, !dbg !2289
  store %struct.BoundBox* %6, %struct.BoundBox** %bb, align 8, !dbg !2290
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !2291
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !2292
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !2293
  store float 0x46293E5940000000, float* %arrayidx4, align 4, !dbg !2294
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !2295
  store float 0x46293E5940000000, float* %arrayidx5, align 4, !dbg !2296
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !2297
  store float 0xC6293E5940000000, float* %arrayidx6, align 4, !dbg !2298
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !2299
  store float 0xC6293E5940000000, float* %arrayidx7, align 4, !dbg !2300
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !2301
  store float 0xC6293E5940000000, float* %arrayidx8, align 4, !dbg !2302
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2303
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 118, !dbg !2304
  %8 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !2304
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %8, i32 0, i32 0, !dbg !2305
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp, i32 0, i32 0, !dbg !2306
  %9 = load i8*, i8** %first, align 8, !dbg !2306
  %10 = bitcast i8* %9 to %struct.DispList*, !dbg !2303
  store %struct.DispList* %10, %struct.DispList** %dl, align 8, !dbg !2307
  br label %while.cond, !dbg !2308

while.cond:                                       ; preds = %while.end, %if.end
  %11 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2309
  %tobool = icmp ne %struct.DispList* %11, null, !dbg !2308
  br i1 %tobool, label %while.body, label %while.end16, !dbg !2308

while.body:                                       ; preds = %while.cond
  %12 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2310
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %12, i32 0, i32 5, !dbg !2312
  %13 = load i32, i32* %nr, align 8, !dbg !2312
  store i32 %13, i32* %tot, align 4, !dbg !2313
  %14 = load i32, i32* %tot, align 4, !dbg !2314
  %tobool9 = icmp ne i32 %14, 0, !dbg !2314
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !2316

if.then10:                                        ; preds = %while.body
  store i8 1, i8* %do_it, align 1, !dbg !2317
  br label %if.end11, !dbg !2318

if.end11:                                         ; preds = %if.then10, %while.body
  %15 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2319
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %15, i32 0, i32 8, !dbg !2320
  %16 = load float*, float** %verts, align 8, !dbg !2320
  store float* %16, float** %data, align 8, !dbg !2321
  br label %while.cond12, !dbg !2322

while.cond12:                                     ; preds = %while.body14, %if.end11
  %17 = load i32, i32* %tot, align 4, !dbg !2323
  %dec = add nsw i32 %17, -1, !dbg !2323
  store i32 %dec, i32* %tot, align 4, !dbg !2323
  %tobool13 = icmp ne i32 %17, 0, !dbg !2322
  br i1 %tobool13, label %while.body14, label %while.end, !dbg !2322

while.body14:                                     ; preds = %while.cond12
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !2324
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !2326
  %18 = load float*, float** %data, align 8, !dbg !2327
  call void @minmax_v3v3_v3(float* %arraydecay, float* %arraydecay15, float* %18), !dbg !2328
  %19 = load float*, float** %data, align 8, !dbg !2329
  %add.ptr = getelementptr inbounds float, float* %19, i64 3, !dbg !2329
  store float* %add.ptr, float** %data, align 8, !dbg !2329
  br label %while.cond12, !dbg !2322, !llvm.loop !2330

while.end:                                        ; preds = %while.cond12
  %20 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2332
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %20, i32 0, i32 0, !dbg !2333
  %21 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !2333
  store %struct.DispList* %21, %struct.DispList** %dl, align 8, !dbg !2334
  br label %while.cond, !dbg !2308, !llvm.loop !2335

while.end16:                                      ; preds = %while.cond
  %22 = load i8, i8* %do_it, align 1, !dbg !2337
  %tobool17 = icmp ne i8 %22, 0, !dbg !2337
  br i1 %tobool17, label %if.end25, label %if.then18, !dbg !2339

if.then18:                                        ; preds = %while.end16
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !2340
  store float -1.000000e+00, float* %arrayidx19, align 4, !dbg !2342
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !2343
  store float -1.000000e+00, float* %arrayidx20, align 4, !dbg !2344
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !2345
  store float -1.000000e+00, float* %arrayidx21, align 4, !dbg !2346
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !2347
  store float 1.000000e+00, float* %arrayidx22, align 4, !dbg !2348
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !2349
  store float 1.000000e+00, float* %arrayidx23, align 4, !dbg !2350
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !2351
  store float 1.000000e+00, float* %arrayidx24, align 4, !dbg !2352
  br label %if.end25, !dbg !2353

if.end25:                                         ; preds = %if.then18, %while.end16
  %23 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2354
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !2355
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !2356
  call void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %23, float* %arraydecay26, float* %arraydecay27), !dbg !2357
  ret void, !dbg !2358
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

declare dso_local void @BKE_boundbox_init_from_minmax(%struct.BoundBox*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float* @BKE_mball_make_orco(%struct.Object* %ob, %struct.ListBase* %dispbase) #0 !dbg !2359 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  %dl = alloca %struct.DispList*, align 8
  %data = alloca float*, align 8
  %orco = alloca float*, align 8
  %orcodata = alloca float*, align 8
  %loc = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2362, metadata !DIExpression()), !dbg !2363
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !2364, metadata !DIExpression()), !dbg !2365
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !2366, metadata !DIExpression()), !dbg !2367
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !2368, metadata !DIExpression()), !dbg !2369
  call void @llvm.dbg.declare(metadata float** %data, metadata !2370, metadata !DIExpression()), !dbg !2371
  call void @llvm.dbg.declare(metadata float** %orco, metadata !2372, metadata !DIExpression()), !dbg !2373
  call void @llvm.dbg.declare(metadata float** %orcodata, metadata !2374, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !2376, metadata !DIExpression()), !dbg !2377
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !2378, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2380, metadata !DIExpression()), !dbg !2381
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2382
  %bb1 = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 15, !dbg !2383
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !2383
  store %struct.BoundBox* %1, %struct.BoundBox** %bb, align 8, !dbg !2384
  %2 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2385
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %2, i32 0, i32 0, !dbg !2386
  %arrayidx = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 0, !dbg !2385
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2385
  %3 = load float, float* %arrayidx2, align 4, !dbg !2385
  %4 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2387
  %vec3 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %4, i32 0, i32 0, !dbg !2388
  %arrayidx4 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec3, i64 0, i64 4, !dbg !2387
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !2387
  %5 = load float, float* %arrayidx5, align 4, !dbg !2387
  %add = fadd float %3, %5, !dbg !2389
  %div = fdiv float %add, 2.000000e+00, !dbg !2390
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !2391
  store float %div, float* %arrayidx6, align 4, !dbg !2392
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2393
  %vec7 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %6, i32 0, i32 0, !dbg !2394
  %arrayidx8 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec7, i64 0, i64 4, !dbg !2393
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !2393
  %7 = load float, float* %arrayidx9, align 4, !dbg !2393
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !2395
  %8 = load float, float* %arrayidx10, align 4, !dbg !2395
  %sub = fsub float %7, %8, !dbg !2396
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !2397
  store float %sub, float* %arrayidx11, align 4, !dbg !2398
  %9 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2399
  %vec12 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %9, i32 0, i32 0, !dbg !2400
  %arrayidx13 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec12, i64 0, i64 0, !dbg !2399
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 1, !dbg !2399
  %10 = load float, float* %arrayidx14, align 4, !dbg !2399
  %11 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2401
  %vec15 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %11, i32 0, i32 0, !dbg !2402
  %arrayidx16 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec15, i64 0, i64 2, !dbg !2401
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 1, !dbg !2401
  %12 = load float, float* %arrayidx17, align 4, !dbg !2401
  %add18 = fadd float %10, %12, !dbg !2403
  %div19 = fdiv float %add18, 2.000000e+00, !dbg !2404
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 1, !dbg !2405
  store float %div19, float* %arrayidx20, align 4, !dbg !2406
  %13 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2407
  %vec21 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %13, i32 0, i32 0, !dbg !2408
  %arrayidx22 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec21, i64 0, i64 2, !dbg !2407
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 1, !dbg !2407
  %14 = load float, float* %arrayidx23, align 4, !dbg !2407
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 1, !dbg !2409
  %15 = load float, float* %arrayidx24, align 4, !dbg !2409
  %sub25 = fsub float %14, %15, !dbg !2410
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !2411
  store float %sub25, float* %arrayidx26, align 4, !dbg !2412
  %16 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2413
  %vec27 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %16, i32 0, i32 0, !dbg !2414
  %arrayidx28 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec27, i64 0, i64 0, !dbg !2413
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 2, !dbg !2413
  %17 = load float, float* %arrayidx29, align 4, !dbg !2413
  %18 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2415
  %vec30 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %18, i32 0, i32 0, !dbg !2416
  %arrayidx31 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec30, i64 0, i64 1, !dbg !2415
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 2, !dbg !2415
  %19 = load float, float* %arrayidx32, align 4, !dbg !2415
  %add33 = fadd float %17, %19, !dbg !2417
  %div34 = fdiv float %add33, 2.000000e+00, !dbg !2418
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 2, !dbg !2419
  store float %div34, float* %arrayidx35, align 4, !dbg !2420
  %20 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2421
  %vec36 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %20, i32 0, i32 0, !dbg !2422
  %arrayidx37 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec36, i64 0, i64 1, !dbg !2421
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 2, !dbg !2421
  %21 = load float, float* %arrayidx38, align 4, !dbg !2421
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 2, !dbg !2423
  %22 = load float, float* %arrayidx39, align 4, !dbg !2423
  %sub40 = fsub float %21, %22, !dbg !2424
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !2425
  store float %sub40, float* %arrayidx41, align 4, !dbg !2426
  %23 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !2427
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %23, i32 0, i32 0, !dbg !2428
  %24 = load i8*, i8** %first, align 8, !dbg !2428
  %25 = bitcast i8* %24 to %struct.DispList*, !dbg !2427
  store %struct.DispList* %25, %struct.DispList** %dl, align 8, !dbg !2429
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2430
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2431
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 5, !dbg !2432
  %28 = load i32, i32* %nr, align 8, !dbg !2432
  %conv = sext i32 %28 to i64, !dbg !2431
  %mul = mul i64 12, %conv, !dbg !2433
  %call = call i8* %26(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)), !dbg !2430
  %29 = bitcast i8* %call to float*, !dbg !2430
  store float* %29, float** %orcodata, align 8, !dbg !2434
  %30 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2435
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %30, i32 0, i32 8, !dbg !2436
  %31 = load float*, float** %verts, align 8, !dbg !2436
  store float* %31, float** %data, align 8, !dbg !2437
  %32 = load float*, float** %orcodata, align 8, !dbg !2438
  store float* %32, float** %orco, align 8, !dbg !2439
  %33 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !2440
  %nr42 = getelementptr inbounds %struct.DispList, %struct.DispList* %33, i32 0, i32 5, !dbg !2441
  %34 = load i32, i32* %nr42, align 8, !dbg !2441
  store i32 %34, i32* %a, align 4, !dbg !2442
  br label %while.cond, !dbg !2443

while.cond:                                       ; preds = %while.body, %entry
  %35 = load i32, i32* %a, align 4, !dbg !2444
  %dec = add nsw i32 %35, -1, !dbg !2444
  store i32 %dec, i32* %a, align 4, !dbg !2444
  %tobool = icmp ne i32 %35, 0, !dbg !2443
  br i1 %tobool, label %while.body, label %while.end, !dbg !2443

while.body:                                       ; preds = %while.cond
  %36 = load float*, float** %data, align 8, !dbg !2445
  %arrayidx43 = getelementptr inbounds float, float* %36, i64 0, !dbg !2445
  %37 = load float, float* %arrayidx43, align 4, !dbg !2445
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !2447
  %38 = load float, float* %arrayidx44, align 4, !dbg !2447
  %sub45 = fsub float %37, %38, !dbg !2448
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !2449
  %39 = load float, float* %arrayidx46, align 4, !dbg !2449
  %div47 = fdiv float %sub45, %39, !dbg !2450
  %40 = load float*, float** %orco, align 8, !dbg !2451
  %arrayidx48 = getelementptr inbounds float, float* %40, i64 0, !dbg !2451
  store float %div47, float* %arrayidx48, align 4, !dbg !2452
  %41 = load float*, float** %data, align 8, !dbg !2453
  %arrayidx49 = getelementptr inbounds float, float* %41, i64 1, !dbg !2453
  %42 = load float, float* %arrayidx49, align 4, !dbg !2453
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 1, !dbg !2454
  %43 = load float, float* %arrayidx50, align 4, !dbg !2454
  %sub51 = fsub float %42, %43, !dbg !2455
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !2456
  %44 = load float, float* %arrayidx52, align 4, !dbg !2456
  %div53 = fdiv float %sub51, %44, !dbg !2457
  %45 = load float*, float** %orco, align 8, !dbg !2458
  %arrayidx54 = getelementptr inbounds float, float* %45, i64 1, !dbg !2458
  store float %div53, float* %arrayidx54, align 4, !dbg !2459
  %46 = load float*, float** %data, align 8, !dbg !2460
  %arrayidx55 = getelementptr inbounds float, float* %46, i64 2, !dbg !2460
  %47 = load float, float* %arrayidx55, align 4, !dbg !2460
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 2, !dbg !2461
  %48 = load float, float* %arrayidx56, align 4, !dbg !2461
  %sub57 = fsub float %47, %48, !dbg !2462
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !2463
  %49 = load float, float* %arrayidx58, align 4, !dbg !2463
  %div59 = fdiv float %sub57, %49, !dbg !2464
  %50 = load float*, float** %orco, align 8, !dbg !2465
  %arrayidx60 = getelementptr inbounds float, float* %50, i64 2, !dbg !2465
  store float %div59, float* %arrayidx60, align 4, !dbg !2466
  %51 = load float*, float** %data, align 8, !dbg !2467
  %add.ptr = getelementptr inbounds float, float* %51, i64 3, !dbg !2467
  store float* %add.ptr, float** %data, align 8, !dbg !2467
  %52 = load float*, float** %orco, align 8, !dbg !2468
  %add.ptr61 = getelementptr inbounds float, float* %52, i64 3, !dbg !2468
  store float* %add.ptr61, float** %orco, align 8, !dbg !2468
  br label %while.cond, !dbg !2443, !llvm.loop !2469

while.end:                                        ; preds = %while.cond
  %53 = load float*, float** %orcodata, align 8, !dbg !2471
  ret float* %53, !dbg !2472
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mball_is_basis(%struct.Object* %ob) #0 !dbg !2473 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %len = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2476, metadata !DIExpression()), !dbg !2477
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2478, metadata !DIExpression()), !dbg !2479
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2480
  %id = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 0, !dbg !2481
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !2482
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2480
  %call = call i64 @strlen(i8* %arraydecay) #7, !dbg !2483
  %conv = trunc i64 %call to i32, !dbg !2483
  store i32 %conv, i32* %len, align 4, !dbg !2479
  %call1 = call i16** @__ctype_b_loc() #8, !dbg !2484
  %1 = load i16*, i16** %call1, align 8, !dbg !2484
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2484
  %id2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !2484
  %name3 = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 4, !dbg !2484
  %3 = load i32, i32* %len, align 4, !dbg !2484
  %sub = sub nsw i32 %3, 1, !dbg !2484
  %idxprom = sext i32 %sub to i64, !dbg !2484
  %arrayidx = getelementptr inbounds [66 x i8], [66 x i8]* %name3, i64 0, i64 %idxprom, !dbg !2484
  %4 = load i8, i8* %arrayidx, align 1, !dbg !2484
  %conv4 = zext i8 %4 to i32, !dbg !2484
  %idxprom5 = sext i32 %conv4 to i64, !dbg !2484
  %arrayidx6 = getelementptr inbounds i16, i16* %1, i64 %idxprom5, !dbg !2484
  %5 = load i16, i16* %arrayidx6, align 2, !dbg !2484
  %conv7 = zext i16 %5 to i32, !dbg !2484
  %and = and i32 %conv7, 2048, !dbg !2484
  %tobool = icmp ne i32 %and, 0, !dbg !2485
  %lnot = xor i1 %tobool, true, !dbg !2485
  %lnot.ext = zext i1 %lnot to i32, !dbg !2485
  %conv8 = trunc i32 %lnot.ext to i8, !dbg !2486
  ret i8 %conv8, !dbg !2487
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #4

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mball_is_basis_for(%struct.Object* %ob1, %struct.Object* %ob2) #0 !dbg !2488 {
entry:
  %retval = alloca i8, align 1
  %ob1.addr = alloca %struct.Object*, align 8
  %ob2.addr = alloca %struct.Object*, align 8
  %basis1nr = alloca i32, align 4
  %basis2nr = alloca i32, align 4
  %basis1name = alloca [66 x i8], align 16
  %basis2name = alloca [66 x i8], align 16
  store %struct.Object* %ob1, %struct.Object** %ob1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob1.addr, metadata !2491, metadata !DIExpression()), !dbg !2492
  store %struct.Object* %ob2, %struct.Object** %ob2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob2.addr, metadata !2493, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.declare(metadata i32* %basis1nr, metadata !2495, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.declare(metadata i32* %basis2nr, metadata !2497, metadata !DIExpression()), !dbg !2498
  call void @llvm.dbg.declare(metadata [66 x i8]* %basis1name, metadata !2499, metadata !DIExpression()), !dbg !2500
  call void @llvm.dbg.declare(metadata [66 x i8]* %basis2name, metadata !2501, metadata !DIExpression()), !dbg !2502
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %basis1name, i64 0, i64 0, !dbg !2503
  %0 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !2504
  %id = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 0, !dbg !2505
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !2506
  %arraydecay1 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2504
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay1, i64 2, !dbg !2507
  %call = call i32 @BLI_split_name_num(i8* %arraydecay, i32* %basis1nr, i8* %add.ptr, i8 zeroext 46), !dbg !2508
  %arraydecay2 = getelementptr inbounds [66 x i8], [66 x i8]* %basis2name, i64 0, i64 0, !dbg !2509
  %1 = load %struct.Object*, %struct.Object** %ob2.addr, align 8, !dbg !2510
  %id3 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 0, !dbg !2511
  %name4 = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 4, !dbg !2512
  %arraydecay5 = getelementptr inbounds [66 x i8], [66 x i8]* %name4, i64 0, i64 0, !dbg !2510
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2, !dbg !2513
  %call7 = call i32 @BLI_split_name_num(i8* %arraydecay2, i32* %basis2nr, i8* %add.ptr6, i8 zeroext 46), !dbg !2514
  %arraydecay8 = getelementptr inbounds [66 x i8], [66 x i8]* %basis1name, i64 0, i64 0, !dbg !2515
  %arraydecay9 = getelementptr inbounds [66 x i8], [66 x i8]* %basis2name, i64 0, i64 0, !dbg !2517
  %call10 = call i32 @strcmp(i8* %arraydecay8, i8* %arraydecay9) #7, !dbg !2518
  %tobool = icmp ne i32 %call10, 0, !dbg !2518
  br i1 %tobool, label %if.else, label %if.then, !dbg !2519

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob1.addr, align 8, !dbg !2520
  %call11 = call zeroext i8 @BKE_mball_is_basis(%struct.Object* %2), !dbg !2522
  store i8 %call11, i8* %retval, align 1, !dbg !2523
  br label %return, !dbg !2523

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2524
  br label %return, !dbg !2524

return:                                           ; preds = %if.else, %if.then
  %3 = load i8, i8* %retval, align 1, !dbg !2526
  ret i8 %3, !dbg !2526
}

declare dso_local i32 @BLI_split_name_num(i8*, i32*, i8*, i8 zeroext) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_properties_copy(%struct.Scene* %scene, %struct.Object* %active_object) #0 !dbg !2527 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %active_object.addr = alloca %struct.Object*, align 8
  %sce_iter = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %active_mball = alloca %struct.MetaBall*, align 8
  %basisnr = alloca i32, align 4
  %obnr = alloca i32, align 4
  %basisname = alloca [66 x i8], align 16
  %obname = alloca [66 x i8], align 16
  %iter = alloca %struct.SceneBaseIter, align 8
  %eval_ctx = alloca %struct.EvaluationContext*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2532, metadata !DIExpression()), !dbg !2533
  store %struct.Object* %active_object, %struct.Object** %active_object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %active_object.addr, metadata !2534, metadata !DIExpression()), !dbg !2535
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !2536, metadata !DIExpression()), !dbg !2537
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2538
  store %struct.Scene* %0, %struct.Scene** %sce_iter, align 8, !dbg !2537
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !2539, metadata !DIExpression()), !dbg !2542
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2543, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %active_mball, metadata !2545, metadata !DIExpression()), !dbg !2546
  %1 = load %struct.Object*, %struct.Object** %active_object.addr, align 8, !dbg !2547
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !2548
  %2 = load i8*, i8** %data, align 8, !dbg !2548
  %3 = bitcast i8* %2 to %struct.MetaBall*, !dbg !2549
  store %struct.MetaBall* %3, %struct.MetaBall** %active_mball, align 8, !dbg !2546
  call void @llvm.dbg.declare(metadata i32* %basisnr, metadata !2550, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.declare(metadata i32* %obnr, metadata !2552, metadata !DIExpression()), !dbg !2553
  call void @llvm.dbg.declare(metadata [66 x i8]* %basisname, metadata !2554, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.declare(metadata [66 x i8]* %obname, metadata !2556, metadata !DIExpression()), !dbg !2557
  call void @llvm.dbg.declare(metadata %struct.SceneBaseIter* %iter, metadata !2558, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx, metadata !2587, metadata !DIExpression()), !dbg !2590
  %4 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2591
  %eval_ctx1 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 46, !dbg !2592
  %5 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx1, align 8, !dbg !2592
  store %struct.EvaluationContext* %5, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !2590
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %basisname, i64 0, i64 0, !dbg !2593
  %6 = load %struct.Object*, %struct.Object** %active_object.addr, align 8, !dbg !2594
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !2595
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !2596
  %arraydecay2 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2594
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 2, !dbg !2597
  %call = call i32 @BLI_split_name_num(i8* %arraydecay, i32* %basisnr, i8* %add.ptr, i8 zeroext 46), !dbg !2598
  %7 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !2599
  %call3 = call i32 @BKE_scene_base_iter_next(%struct.EvaluationContext* %7, %struct.SceneBaseIter* %iter, %struct.Scene** %sce_iter, i32 0, %struct.Base** null, %struct.Object** null), !dbg !2600
  br label %while.cond, !dbg !2601

while.cond:                                       ; preds = %if.end27, %entry
  %8 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !2602
  %call4 = call i32 @BKE_scene_base_iter_next(%struct.EvaluationContext* %8, %struct.SceneBaseIter* %iter, %struct.Scene** %sce_iter, i32 1, %struct.Base** %base, %struct.Object** %ob), !dbg !2603
  %tobool = icmp ne i32 %call4, 0, !dbg !2601
  br i1 %tobool, label %while.body, label %while.end, !dbg !2601

while.body:                                       ; preds = %while.cond
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2604
  %type = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !2607
  %10 = load i16, i16* %type, align 8, !dbg !2607
  %conv = sext i16 %10 to i32, !dbg !2604
  %cmp = icmp eq i32 %conv, 5, !dbg !2608
  br i1 %cmp, label %if.then, label %if.end27, !dbg !2609

if.then:                                          ; preds = %while.body
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2610
  %12 = load %struct.Object*, %struct.Object** %active_object.addr, align 8, !dbg !2613
  %cmp6 = icmp ne %struct.Object* %11, %12, !dbg !2614
  br i1 %cmp6, label %if.then8, label %if.end26, !dbg !2615

if.then8:                                         ; preds = %if.then
  %arraydecay9 = getelementptr inbounds [66 x i8], [66 x i8]* %obname, i64 0, i64 0, !dbg !2616
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2618
  %id10 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 0, !dbg !2619
  %name11 = getelementptr inbounds %struct.ID, %struct.ID* %id10, i32 0, i32 4, !dbg !2620
  %arraydecay12 = getelementptr inbounds [66 x i8], [66 x i8]* %name11, i64 0, i64 0, !dbg !2618
  %add.ptr13 = getelementptr inbounds i8, i8* %arraydecay12, i64 2, !dbg !2621
  %call14 = call i32 @BLI_split_name_num(i8* %arraydecay9, i32* %obnr, i8* %add.ptr13, i8 zeroext 46), !dbg !2622
  %arraydecay15 = getelementptr inbounds [66 x i8], [66 x i8]* %obname, i64 0, i64 0, !dbg !2623
  %arraydecay16 = getelementptr inbounds [66 x i8], [66 x i8]* %basisname, i64 0, i64 0, !dbg !2625
  %call17 = call i32 @strcmp(i8* %arraydecay15, i8* %arraydecay16) #7, !dbg !2626
  %cmp18 = icmp eq i32 %call17, 0, !dbg !2627
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !2628

if.then20:                                        ; preds = %if.then8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !2629, metadata !DIExpression()), !dbg !2631
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2632
  %data21 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !2633
  %15 = load i8*, i8** %data21, align 8, !dbg !2633
  %16 = bitcast i8* %15 to %struct.MetaBall*, !dbg !2632
  store %struct.MetaBall* %16, %struct.MetaBall** %mb, align 8, !dbg !2631
  %17 = load %struct.MetaBall*, %struct.MetaBall** %active_mball, align 8, !dbg !2634
  %wiresize = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %17, i32 0, i32 15, !dbg !2635
  %18 = load float, float* %wiresize, align 4, !dbg !2635
  %19 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !2636
  %wiresize22 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %19, i32 0, i32 15, !dbg !2637
  store float %18, float* %wiresize22, align 4, !dbg !2638
  %20 = load %struct.MetaBall*, %struct.MetaBall** %active_mball, align 8, !dbg !2639
  %rendersize = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %20, i32 0, i32 16, !dbg !2640
  %21 = load float, float* %rendersize, align 8, !dbg !2640
  %22 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !2641
  %rendersize23 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %22, i32 0, i32 16, !dbg !2642
  store float %21, float* %rendersize23, align 8, !dbg !2643
  %23 = load %struct.MetaBall*, %struct.MetaBall** %active_mball, align 8, !dbg !2644
  %thresh = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %23, i32 0, i32 17, !dbg !2645
  %24 = load float, float* %thresh, align 4, !dbg !2645
  %25 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !2646
  %thresh24 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %25, i32 0, i32 17, !dbg !2647
  store float %24, float* %thresh24, align 4, !dbg !2648
  %26 = load %struct.MetaBall*, %struct.MetaBall** %active_mball, align 8, !dbg !2649
  %flag = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %26, i32 0, i32 7, !dbg !2650
  %27 = load i8, i8* %flag, align 8, !dbg !2650
  %28 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !2651
  %flag25 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %28, i32 0, i32 7, !dbg !2652
  store i8 %27, i8* %flag25, align 8, !dbg !2653
  br label %if.end, !dbg !2654

if.end:                                           ; preds = %if.then20, %if.then8
  br label %if.end26, !dbg !2655

if.end26:                                         ; preds = %if.end, %if.then
  br label %if.end27, !dbg !2656

if.end27:                                         ; preds = %if.end26, %while.body
  br label %while.cond, !dbg !2601, !llvm.loop !2657

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2659
}

declare dso_local i32 @BKE_scene_base_iter_next(%struct.EvaluationContext*, %struct.SceneBaseIter*, %struct.Scene**, i32, %struct.Base**, %struct.Object**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Object* @BKE_mball_basis_find(%struct.Scene* %scene, %struct.Object* %basis) #0 !dbg !2660 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %basis.addr = alloca %struct.Object*, align 8
  %sce_iter = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %bob = alloca %struct.Object*, align 8
  %basisnr = alloca i32, align 4
  %obnr = alloca i32, align 4
  %basisname = alloca [66 x i8], align 16
  %obname = alloca [66 x i8], align 16
  %iter = alloca %struct.SceneBaseIter, align 8
  %eval_ctx = alloca %struct.EvaluationContext*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2663, metadata !DIExpression()), !dbg !2664
  store %struct.Object* %basis, %struct.Object** %basis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %basis.addr, metadata !2665, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !2667, metadata !DIExpression()), !dbg !2668
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2669
  store %struct.Scene* %0, %struct.Scene** %sce_iter, align 8, !dbg !2668
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !2670, metadata !DIExpression()), !dbg !2671
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2672, metadata !DIExpression()), !dbg !2673
  call void @llvm.dbg.declare(metadata %struct.Object** %bob, metadata !2674, metadata !DIExpression()), !dbg !2675
  %1 = load %struct.Object*, %struct.Object** %basis.addr, align 8, !dbg !2676
  store %struct.Object* %1, %struct.Object** %bob, align 8, !dbg !2675
  call void @llvm.dbg.declare(metadata i32* %basisnr, metadata !2677, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.declare(metadata i32* %obnr, metadata !2679, metadata !DIExpression()), !dbg !2680
  call void @llvm.dbg.declare(metadata [66 x i8]* %basisname, metadata !2681, metadata !DIExpression()), !dbg !2682
  call void @llvm.dbg.declare(metadata [66 x i8]* %obname, metadata !2683, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.declare(metadata %struct.SceneBaseIter* %iter, metadata !2685, metadata !DIExpression()), !dbg !2686
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx, metadata !2687, metadata !DIExpression()), !dbg !2688
  %2 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2689
  %eval_ctx1 = getelementptr inbounds %struct.Main, %struct.Main* %2, i32 0, i32 46, !dbg !2690
  %3 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx1, align 8, !dbg !2690
  store %struct.EvaluationContext* %3, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !2688
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %basisname, i64 0, i64 0, !dbg !2691
  %4 = load %struct.Object*, %struct.Object** %basis.addr, align 8, !dbg !2692
  %id = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 0, !dbg !2693
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !2694
  %arraydecay2 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2692
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 2, !dbg !2695
  %call = call i32 @BLI_split_name_num(i8* %arraydecay, i32* %basisnr, i8* %add.ptr, i8 zeroext 46), !dbg !2696
  %5 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !2697
  %call3 = call i32 @BKE_scene_base_iter_next(%struct.EvaluationContext* %5, %struct.SceneBaseIter* %iter, %struct.Scene** %sce_iter, i32 0, %struct.Base** null, %struct.Object** null), !dbg !2698
  br label %while.cond, !dbg !2699

while.cond:                                       ; preds = %if.end27, %entry
  %6 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !2700
  %call4 = call i32 @BKE_scene_base_iter_next(%struct.EvaluationContext* %6, %struct.SceneBaseIter* %iter, %struct.Scene** %sce_iter, i32 1, %struct.Base** %base, %struct.Object** %ob), !dbg !2701
  %tobool = icmp ne i32 %call4, 0, !dbg !2699
  br i1 %tobool, label %while.body, label %while.end, !dbg !2699

while.body:                                       ; preds = %while.cond
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2702
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !2705
  %8 = load i16, i16* %type, align 8, !dbg !2705
  %conv = sext i16 %8 to i32, !dbg !2702
  %cmp = icmp eq i32 %conv, 5, !dbg !2706
  br i1 %cmp, label %land.lhs.true, label %if.end27, !dbg !2707

land.lhs.true:                                    ; preds = %while.body
  %9 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !2708
  %flag = getelementptr inbounds %struct.Base, %struct.Base* %9, i32 0, i32 4, !dbg !2709
  %10 = load i32, i32* %flag, align 8, !dbg !2709
  %and = and i32 %10, 512, !dbg !2710
  %tobool6 = icmp ne i32 %and, 0, !dbg !2710
  br i1 %tobool6, label %if.end27, label %if.then, !dbg !2711

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2712
  %12 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !2715
  %cmp7 = icmp ne %struct.Object* %11, %12, !dbg !2716
  br i1 %cmp7, label %if.then9, label %if.end26, !dbg !2717

if.then9:                                         ; preds = %if.then
  %arraydecay10 = getelementptr inbounds [66 x i8], [66 x i8]* %obname, i64 0, i64 0, !dbg !2718
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2720
  %id11 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 0, !dbg !2721
  %name12 = getelementptr inbounds %struct.ID, %struct.ID* %id11, i32 0, i32 4, !dbg !2722
  %arraydecay13 = getelementptr inbounds [66 x i8], [66 x i8]* %name12, i64 0, i64 0, !dbg !2720
  %add.ptr14 = getelementptr inbounds i8, i8* %arraydecay13, i64 2, !dbg !2723
  %call15 = call i32 @BLI_split_name_num(i8* %arraydecay10, i32* %obnr, i8* %add.ptr14, i8 zeroext 46), !dbg !2724
  %arraydecay16 = getelementptr inbounds [66 x i8], [66 x i8]* %obname, i64 0, i64 0, !dbg !2725
  %arraydecay17 = getelementptr inbounds [66 x i8], [66 x i8]* %basisname, i64 0, i64 0, !dbg !2727
  %call18 = call i32 @strcmp(i8* %arraydecay16, i8* %arraydecay17) #7, !dbg !2728
  %cmp19 = icmp eq i32 %call18, 0, !dbg !2729
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !2730

if.then21:                                        ; preds = %if.then9
  %14 = load i32, i32* %obnr, align 4, !dbg !2731
  %15 = load i32, i32* %basisnr, align 4, !dbg !2734
  %cmp22 = icmp slt i32 %14, %15, !dbg !2735
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !2736

if.then24:                                        ; preds = %if.then21
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2737
  store %struct.Object* %16, %struct.Object** %basis.addr, align 8, !dbg !2739
  %17 = load i32, i32* %obnr, align 4, !dbg !2740
  store i32 %17, i32* %basisnr, align 4, !dbg !2741
  br label %if.end, !dbg !2742

if.end:                                           ; preds = %if.then24, %if.then21
  br label %if.end25, !dbg !2743

if.end25:                                         ; preds = %if.end, %if.then9
  br label %if.end26, !dbg !2744

if.end26:                                         ; preds = %if.end25, %if.then
  br label %if.end27, !dbg !2745

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %while.body
  br label %while.cond, !dbg !2699, !llvm.loop !2746

while.end:                                        ; preds = %while.cond
  %18 = load %struct.Object*, %struct.Object** %basis.addr, align 8, !dbg !2748
  ret %struct.Object* %18, !dbg !2749
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_cubeTable_free() #0 !dbg !2750 {
entry:
  %i = alloca i32, align 4
  %lists = alloca %struct.intlists*, align 8
  %nlists = alloca %struct.intlists*, align 8
  %ints = alloca %struct.intlist*, align 8
  %nints = alloca %struct.intlist*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2751, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.declare(metadata %struct.intlists** %lists, metadata !2753, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.declare(metadata %struct.intlists** %nlists, metadata !2755, metadata !DIExpression()), !dbg !2756
  call void @llvm.dbg.declare(metadata %struct.intlist** %ints, metadata !2757, metadata !DIExpression()), !dbg !2758
  call void @llvm.dbg.declare(metadata %struct.intlist** %nints, metadata !2759, metadata !DIExpression()), !dbg !2760
  store i32 0, i32* %i, align 4, !dbg !2761
  br label %for.cond, !dbg !2763

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2764
  %cmp = icmp slt i32 %0, 256, !dbg !2766
  br i1 %cmp, label %for.body, label %for.end, !dbg !2767

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2768
  %idxprom = sext i32 %1 to i64, !dbg !2770
  %arrayidx = getelementptr inbounds [256 x %struct.intlists*], [256 x %struct.intlists*]* @cubetable, i64 0, i64 %idxprom, !dbg !2770
  %2 = load %struct.intlists*, %struct.intlists** %arrayidx, align 8, !dbg !2770
  store %struct.intlists* %2, %struct.intlists** %lists, align 8, !dbg !2771
  br label %while.cond, !dbg !2772

while.cond:                                       ; preds = %while.end, %for.body
  %3 = load %struct.intlists*, %struct.intlists** %lists, align 8, !dbg !2773
  %tobool = icmp ne %struct.intlists* %3, null, !dbg !2772
  br i1 %tobool, label %while.body, label %while.end5, !dbg !2772

while.body:                                       ; preds = %while.cond
  %4 = load %struct.intlists*, %struct.intlists** %lists, align 8, !dbg !2774
  %next = getelementptr inbounds %struct.intlists, %struct.intlists* %4, i32 0, i32 1, !dbg !2776
  %5 = load %struct.intlists*, %struct.intlists** %next, align 8, !dbg !2776
  store %struct.intlists* %5, %struct.intlists** %nlists, align 8, !dbg !2777
  %6 = load %struct.intlists*, %struct.intlists** %lists, align 8, !dbg !2778
  %list = getelementptr inbounds %struct.intlists, %struct.intlists* %6, i32 0, i32 0, !dbg !2779
  %7 = load %struct.intlist*, %struct.intlist** %list, align 8, !dbg !2779
  store %struct.intlist* %7, %struct.intlist** %ints, align 8, !dbg !2780
  br label %while.cond1, !dbg !2781

while.cond1:                                      ; preds = %while.body3, %while.body
  %8 = load %struct.intlist*, %struct.intlist** %ints, align 8, !dbg !2782
  %tobool2 = icmp ne %struct.intlist* %8, null, !dbg !2781
  br i1 %tobool2, label %while.body3, label %while.end, !dbg !2781

while.body3:                                      ; preds = %while.cond1
  %9 = load %struct.intlist*, %struct.intlist** %ints, align 8, !dbg !2783
  %next4 = getelementptr inbounds %struct.intlist, %struct.intlist* %9, i32 0, i32 1, !dbg !2785
  %10 = load %struct.intlist*, %struct.intlist** %next4, align 8, !dbg !2785
  store %struct.intlist* %10, %struct.intlist** %nints, align 8, !dbg !2786
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2787
  %12 = load %struct.intlist*, %struct.intlist** %ints, align 8, !dbg !2788
  %13 = bitcast %struct.intlist* %12 to i8*, !dbg !2788
  call void %11(i8* %13), !dbg !2787
  %14 = load %struct.intlist*, %struct.intlist** %nints, align 8, !dbg !2789
  store %struct.intlist* %14, %struct.intlist** %ints, align 8, !dbg !2790
  br label %while.cond1, !dbg !2781, !llvm.loop !2791

while.end:                                        ; preds = %while.cond1
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2793
  %16 = load %struct.intlists*, %struct.intlists** %lists, align 8, !dbg !2794
  %17 = bitcast %struct.intlists* %16 to i8*, !dbg !2794
  call void %15(i8* %17), !dbg !2793
  %18 = load %struct.intlists*, %struct.intlists** %nlists, align 8, !dbg !2795
  store %struct.intlists* %18, %struct.intlists** %lists, align 8, !dbg !2796
  br label %while.cond, !dbg !2772, !llvm.loop !2797

while.end5:                                       ; preds = %while.cond
  %19 = load i32, i32* %i, align 4, !dbg !2799
  %idxprom6 = sext i32 %19 to i64, !dbg !2800
  %arrayidx7 = getelementptr inbounds [256 x %struct.intlists*], [256 x %struct.intlists*]* @cubetable, i64 0, i64 %idxprom6, !dbg !2800
  store %struct.intlists* null, %struct.intlists** %arrayidx7, align 8, !dbg !2801
  br label %for.inc, !dbg !2802

for.inc:                                          ; preds = %while.end5
  %20 = load i32, i32* %i, align 4, !dbg !2803
  %inc = add nsw i32 %20, 1, !dbg !2803
  store i32 %inc, i32* %i, align 4, !dbg !2803
  br label %for.cond, !dbg !2804, !llvm.loop !2805

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2807
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_polygonize(%struct.EvaluationContext* %eval_ctx, %struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %dispbase) #0 !dbg !2808 {
entry:
  %eval_ctx.addr = alloca %struct.EvaluationContext*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dispbase.addr = alloca %struct.ListBase*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  %dl = alloca %struct.DispList*, align 8
  %a = alloca i32, align 4
  %nr_cubes = alloca i32, align 4
  %co = alloca float*, align 8
  %no = alloca float*, align 8
  %totsize = alloca float, align 4
  %width = alloca float, align 4
  %process = alloca %struct.process, align 8
  %ptr = alloca %struct.vertex*, align 8
  store %struct.EvaluationContext* %eval_ctx, %struct.EvaluationContext** %eval_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx.addr, metadata !2811, metadata !DIExpression()), !dbg !2812
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2813, metadata !DIExpression()), !dbg !2814
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2815, metadata !DIExpression()), !dbg !2816
  store %struct.ListBase* %dispbase, %struct.ListBase** %dispbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dispbase.addr, metadata !2817, metadata !DIExpression()), !dbg !2818
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !2819, metadata !DIExpression()), !dbg !2820
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !2821, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2823, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.declare(metadata i32* %nr_cubes, metadata !2825, metadata !DIExpression()), !dbg !2826
  call void @llvm.dbg.declare(metadata float** %co, metadata !2827, metadata !DIExpression()), !dbg !2828
  call void @llvm.dbg.declare(metadata float** %no, metadata !2829, metadata !DIExpression()), !dbg !2830
  call void @llvm.dbg.declare(metadata float* %totsize, metadata !2831, metadata !DIExpression()), !dbg !2832
  call void @llvm.dbg.declare(metadata float* %width, metadata !2833, metadata !DIExpression()), !dbg !2834
  call void @llvm.dbg.declare(metadata %struct.process* %process, metadata !2835, metadata !DIExpression()), !dbg !2905
  %0 = bitcast %struct.process* %process to i8*, !dbg !2905
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 144, i1 false), !dbg !2905
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2906
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !2907
  %2 = load i8*, i8** %data, align 8, !dbg !2907
  %3 = bitcast i8* %2 to %struct.MetaBall*, !dbg !2906
  store %struct.MetaBall* %3, %struct.MetaBall** %mb, align 8, !dbg !2908
  %4 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !2909
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2910
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2911
  call void @mball_count(%struct.EvaluationContext* %4, %struct.process* %process, %struct.Scene* %5, %struct.Object* %6), !dbg !2912
  %totelem = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2913
  %7 = load i32, i32* %totelem, align 4, !dbg !2913
  %cmp = icmp eq i32 %7, 0, !dbg !2915
  br i1 %cmp, label %if.then, label %if.end, !dbg !2916

if.then:                                          ; preds = %entry
  br label %return, !dbg !2917

if.end:                                           ; preds = %entry
  %8 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !2918
  %mode = getelementptr inbounds %struct.EvaluationContext, %struct.EvaluationContext* %8, i32 0, i32 0, !dbg !2920
  %9 = load i32, i32* %mode, align 4, !dbg !2920
  %cmp1 = icmp ne i32 %9, 2, !dbg !2921
  br i1 %cmp1, label %land.lhs.true, label %if.end5, !dbg !2922

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !2923
  %flag = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %10, i32 0, i32 7, !dbg !2924
  %11 = load i8, i8* %flag, align 8, !dbg !2924
  %conv = zext i8 %11 to i32, !dbg !2923
  %cmp2 = icmp eq i32 %conv, 3, !dbg !2925
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2926

if.then4:                                         ; preds = %land.lhs.true
  br label %return, !dbg !2927

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %12 = load i16, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 10), align 4, !dbg !2928
  %conv6 = sext i16 %12 to i32, !dbg !2930
  %and = and i32 %conv6, 3, !dbg !2931
  %tobool = icmp ne i32 %and, 0, !dbg !2931
  br i1 %tobool, label %land.lhs.true7, label %if.end13, !dbg !2932

land.lhs.true7:                                   ; preds = %if.end5
  %13 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !2933
  %flag8 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %13, i32 0, i32 7, !dbg !2934
  %14 = load i8, i8* %flag8, align 8, !dbg !2934
  %conv9 = zext i8 %14 to i32, !dbg !2933
  %cmp10 = icmp eq i32 %conv9, 2, !dbg !2935
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2936

if.then12:                                        ; preds = %land.lhs.true7
  br label %return, !dbg !2937

if.end13:                                         ; preds = %land.lhs.true7, %if.end5
  %15 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !2938
  %thresh = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %15, i32 0, i32 17, !dbg !2939
  %16 = load float, float* %thresh, align 4, !dbg !2939
  %thresh14 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 0, !dbg !2940
  store float %16, float* %thresh14, align 8, !dbg !2941
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2942
  %totelem15 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2943
  %18 = load i32, i32* %totelem15, align 4, !dbg !2943
  %conv16 = sext i32 %18 to i64, !dbg !2944
  %mul = mul i64 8, %conv16, !dbg !2945
  %call = call i8* %17(i64 %mul, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)), !dbg !2942
  %19 = bitcast i8* %call to %struct.MetaElem**, !dbg !2942
  %mainb = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 2, !dbg !2946
  store %struct.MetaElem** %19, %struct.MetaElem*** %mainb, align 8, !dbg !2947
  %20 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !2948
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2949
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2950
  %call17 = call float @init_meta(%struct.EvaluationContext* %20, %struct.process* %process, %struct.Scene* %21, %struct.Object* %22), !dbg !2951
  store float %call17, float* %totsize, align 4, !dbg !2952
  %totelem18 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2953
  %23 = load i32, i32* %totelem18, align 4, !dbg !2953
  %cmp19 = icmp sgt i32 %23, 1, !dbg !2955
  br i1 %cmp19, label %land.lhs.true21, label %if.end26, !dbg !2956

land.lhs.true21:                                  ; preds = %if.end13
  %totelem22 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2957
  %24 = load i32, i32* %totelem22, align 4, !dbg !2957
  %cmp23 = icmp sle i32 %24, 64, !dbg !2958
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !2959

if.then25:                                        ; preds = %land.lhs.true21
  call void @init_metaball_octal_tree(%struct.process* %process, i32 1), !dbg !2960
  br label %if.end26, !dbg !2960

if.end26:                                         ; preds = %if.then25, %land.lhs.true21, %if.end13
  %totelem27 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2961
  %25 = load i32, i32* %totelem27, align 4, !dbg !2961
  %cmp28 = icmp sgt i32 %25, 64, !dbg !2963
  br i1 %cmp28, label %land.lhs.true30, label %if.end35, !dbg !2964

land.lhs.true30:                                  ; preds = %if.end26
  %totelem31 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2965
  %26 = load i32, i32* %totelem31, align 4, !dbg !2965
  %cmp32 = icmp sle i32 %26, 128, !dbg !2966
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !2967

if.then34:                                        ; preds = %land.lhs.true30
  call void @init_metaball_octal_tree(%struct.process* %process, i32 2), !dbg !2968
  br label %if.end35, !dbg !2968

if.end35:                                         ; preds = %if.then34, %land.lhs.true30, %if.end26
  %totelem36 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2969
  %27 = load i32, i32* %totelem36, align 4, !dbg !2969
  %cmp37 = icmp sgt i32 %27, 128, !dbg !2971
  br i1 %cmp37, label %land.lhs.true39, label %if.end44, !dbg !2972

land.lhs.true39:                                  ; preds = %if.end35
  %totelem40 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2973
  %28 = load i32, i32* %totelem40, align 4, !dbg !2973
  %cmp41 = icmp sle i32 %28, 512, !dbg !2974
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !2975

if.then43:                                        ; preds = %land.lhs.true39
  call void @init_metaball_octal_tree(%struct.process* %process, i32 3), !dbg !2976
  br label %if.end44, !dbg !2976

if.end44:                                         ; preds = %if.then43, %land.lhs.true39, %if.end35
  %totelem45 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2977
  %29 = load i32, i32* %totelem45, align 4, !dbg !2977
  %cmp46 = icmp sgt i32 %29, 512, !dbg !2979
  br i1 %cmp46, label %land.lhs.true48, label %if.end53, !dbg !2980

land.lhs.true48:                                  ; preds = %if.end44
  %totelem49 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2981
  %30 = load i32, i32* %totelem49, align 4, !dbg !2981
  %cmp50 = icmp sle i32 %30, 1024, !dbg !2982
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !2983

if.then52:                                        ; preds = %land.lhs.true48
  call void @init_metaball_octal_tree(%struct.process* %process, i32 4), !dbg !2984
  br label %if.end53, !dbg !2984

if.end53:                                         ; preds = %if.then52, %land.lhs.true48, %if.end44
  %totelem54 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !2985
  %31 = load i32, i32* %totelem54, align 4, !dbg !2985
  %cmp55 = icmp sgt i32 %31, 1024, !dbg !2987
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !2988

if.then57:                                        ; preds = %if.end53
  call void @init_metaball_octal_tree(%struct.process* %process, i32 5), !dbg !2989
  br label %if.end58, !dbg !2989

if.end58:                                         ; preds = %if.then57, %if.end53
  %metaball_tree = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !2990
  %32 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree, align 8, !dbg !2990
  %tobool59 = icmp ne %struct.octal_tree* %32, null, !dbg !2992
  br i1 %tobool59, label %if.then60, label %if.end95, !dbg !2993

if.then60:                                        ; preds = %if.end58
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2994
  %size = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 36, !dbg !2997
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !2994
  %34 = load float, float* %arrayidx, align 4, !dbg !2994
  %metaball_tree61 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !2998
  %35 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree61, align 8, !dbg !2998
  %first = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %35, i32 0, i32 0, !dbg !2999
  %36 = load %struct.octal_node*, %struct.octal_node** %first, align 8, !dbg !2999
  %x_max = getelementptr inbounds %struct.octal_node, %struct.octal_node* %36, i32 0, i32 6, !dbg !3000
  %37 = load float, float* %x_max, align 4, !dbg !3000
  %metaball_tree62 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3001
  %38 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree62, align 8, !dbg !3001
  %first63 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %38, i32 0, i32 0, !dbg !3002
  %39 = load %struct.octal_node*, %struct.octal_node** %first63, align 8, !dbg !3002
  %x_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %39, i32 0, i32 3, !dbg !3003
  %40 = load float, float* %x_min, align 8, !dbg !3003
  %sub = fsub float %37, %40, !dbg !3004
  %mul64 = fmul float 0x3EE4F8B580000000, %sub, !dbg !3005
  %cmp65 = fcmp ole float %34, %mul64, !dbg !3006
  br i1 %cmp65, label %if.then88, label %lor.lhs.false, !dbg !3007

lor.lhs.false:                                    ; preds = %if.then60
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3008
  %size67 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 36, !dbg !3009
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %size67, i64 0, i64 1, !dbg !3008
  %42 = load float, float* %arrayidx68, align 4, !dbg !3008
  %metaball_tree69 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3010
  %43 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree69, align 8, !dbg !3010
  %first70 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %43, i32 0, i32 0, !dbg !3011
  %44 = load %struct.octal_node*, %struct.octal_node** %first70, align 8, !dbg !3011
  %y_max = getelementptr inbounds %struct.octal_node, %struct.octal_node* %44, i32 0, i32 7, !dbg !3012
  %45 = load float, float* %y_max, align 8, !dbg !3012
  %metaball_tree71 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3013
  %46 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree71, align 8, !dbg !3013
  %first72 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %46, i32 0, i32 0, !dbg !3014
  %47 = load %struct.octal_node*, %struct.octal_node** %first72, align 8, !dbg !3014
  %y_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %47, i32 0, i32 4, !dbg !3015
  %48 = load float, float* %y_min, align 4, !dbg !3015
  %sub73 = fsub float %45, %48, !dbg !3016
  %mul74 = fmul float 0x3EE4F8B580000000, %sub73, !dbg !3017
  %cmp75 = fcmp ole float %42, %mul74, !dbg !3018
  br i1 %cmp75, label %if.then88, label %lor.lhs.false77, !dbg !3019

lor.lhs.false77:                                  ; preds = %lor.lhs.false
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3020
  %size78 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 36, !dbg !3021
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %size78, i64 0, i64 2, !dbg !3020
  %50 = load float, float* %arrayidx79, align 4, !dbg !3020
  %metaball_tree80 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3022
  %51 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree80, align 8, !dbg !3022
  %first81 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %51, i32 0, i32 0, !dbg !3023
  %52 = load %struct.octal_node*, %struct.octal_node** %first81, align 8, !dbg !3023
  %z_max = getelementptr inbounds %struct.octal_node, %struct.octal_node* %52, i32 0, i32 8, !dbg !3024
  %53 = load float, float* %z_max, align 4, !dbg !3024
  %metaball_tree82 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3025
  %54 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree82, align 8, !dbg !3025
  %first83 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %54, i32 0, i32 0, !dbg !3026
  %55 = load %struct.octal_node*, %struct.octal_node** %first83, align 8, !dbg !3026
  %z_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %55, i32 0, i32 5, !dbg !3027
  %56 = load float, float* %z_min, align 8, !dbg !3027
  %sub84 = fsub float %53, %56, !dbg !3028
  %mul85 = fmul float 0x3EE4F8B580000000, %sub84, !dbg !3029
  %cmp86 = fcmp ole float %50, %mul85, !dbg !3030
  br i1 %cmp86, label %if.then88, label %if.end94, !dbg !3031

if.then88:                                        ; preds = %lor.lhs.false77, %lor.lhs.false, %if.then60
  %call89 = call i8* @new_pgn_element(%struct.process* %process, i32 -1), !dbg !3032
  %57 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3034
  %mainb90 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 2, !dbg !3035
  %58 = load %struct.MetaElem**, %struct.MetaElem*** %mainb90, align 8, !dbg !3035
  %59 = bitcast %struct.MetaElem** %58 to i8*, !dbg !3036
  call void %57(i8* %59), !dbg !3034
  %metaball_tree91 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3037
  %60 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree91, align 8, !dbg !3037
  %first92 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %60, i32 0, i32 0, !dbg !3038
  %61 = load %struct.octal_node*, %struct.octal_node** %first92, align 8, !dbg !3038
  call void @free_metaball_octal_node(%struct.octal_node* %61), !dbg !3039
  %62 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3040
  %metaball_tree93 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3041
  %63 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree93, align 8, !dbg !3041
  %64 = bitcast %struct.octal_tree* %63 to i8*, !dbg !3042
  call void %62(i8* %64), !dbg !3040
  br label %return, !dbg !3043

if.end94:                                         ; preds = %lor.lhs.false77
  br label %if.end95, !dbg !3044

if.end95:                                         ; preds = %if.end94, %if.end58
  %65 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !3045
  %mode96 = getelementptr inbounds %struct.EvaluationContext, %struct.EvaluationContext* %65, i32 0, i32 0, !dbg !3047
  %66 = load i32, i32* %mode96, align 4, !dbg !3047
  %cmp97 = icmp eq i32 %66, 2, !dbg !3048
  br i1 %cmp97, label %if.then99, label %if.else, !dbg !3049

if.then99:                                        ; preds = %if.end95
  %67 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3050
  %rendersize = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %67, i32 0, i32 16, !dbg !3052
  %68 = load float, float* %rendersize, align 8, !dbg !3052
  store float %68, float* %width, align 4, !dbg !3053
  br label %if.end111, !dbg !3054

if.else:                                          ; preds = %if.end95
  %69 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3055
  %wiresize = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %69, i32 0, i32 15, !dbg !3057
  %70 = load float, float* %wiresize, align 4, !dbg !3057
  store float %70, float* %width, align 4, !dbg !3058
  %71 = load i16, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 10), align 4, !dbg !3059
  %conv100 = sext i16 %71 to i32, !dbg !3061
  %and101 = and i32 %conv100, 3, !dbg !3062
  %tobool102 = icmp ne i32 %and101, 0, !dbg !3062
  br i1 %tobool102, label %land.lhs.true103, label %if.end110, !dbg !3063

land.lhs.true103:                                 ; preds = %if.else
  %72 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3064
  %flag104 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %72, i32 0, i32 7, !dbg !3065
  %73 = load i8, i8* %flag104, align 8, !dbg !3065
  %conv105 = zext i8 %73 to i32, !dbg !3064
  %cmp106 = icmp eq i32 %conv105, 1, !dbg !3066
  br i1 %cmp106, label %if.then108, label %if.end110, !dbg !3067

if.then108:                                       ; preds = %land.lhs.true103
  %74 = load float, float* %width, align 4, !dbg !3068
  %mul109 = fmul float %74, 2.000000e+00, !dbg !3068
  store float %mul109, float* %width, align 4, !dbg !3068
  br label %if.end110, !dbg !3070

if.end110:                                        ; preds = %if.then108, %land.lhs.true103, %if.else
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.then99
  %75 = load float, float* %totsize, align 4, !dbg !3071
  %76 = load float, float* %width, align 4, !dbg !3072
  %div = fdiv float %75, %76, !dbg !3073
  %add = fadd float 5.000000e-01, %div, !dbg !3074
  %conv112 = fptosi float %add to i32, !dbg !3075
  store i32 %conv112, i32* %nr_cubes, align 4, !dbg !3076
  %function = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 4, !dbg !3077
  store float (%struct.process*, float, float, float)* @metaball, float (%struct.process*, float, float, float)** %function, align 8, !dbg !3078
  %77 = load float, float* %width, align 4, !dbg !3079
  %size113 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 5, !dbg !3080
  store float %77, float* %size113, align 8, !dbg !3081
  %78 = load i32, i32* %nr_cubes, align 4, !dbg !3082
  %bounds = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 7, !dbg !3083
  store i32 %78, i32* %bounds, align 8, !dbg !3084
  %cubes = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 8, !dbg !3085
  store %struct.cubes* null, %struct.cubes** %cubes, align 8, !dbg !3086
  %79 = load float, float* %width, align 4, !dbg !3087
  %div114 = fdiv float %79, 1.440000e+02, !dbg !3088
  %delta = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 6, !dbg !3089
  store float %div114, float* %delta, align 4, !dbg !3090
  %80 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3091
  call void @polygonize(%struct.process* %process, %struct.MetaBall* %80), !dbg !3092
  %81 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3093
  %mainb115 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 2, !dbg !3094
  %82 = load %struct.MetaElem**, %struct.MetaElem*** %mainb115, align 8, !dbg !3094
  %83 = bitcast %struct.MetaElem** %82 to i8*, !dbg !3095
  call void %81(i8* %83), !dbg !3093
  %totelem116 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 1, !dbg !3096
  %84 = load i32, i32* %totelem116, align 4, !dbg !3096
  %cmp117 = icmp sgt i32 %84, 1, !dbg !3098
  br i1 %cmp117, label %if.then119, label %if.end124, !dbg !3099

if.then119:                                       ; preds = %if.end111
  %metaball_tree120 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3100
  %85 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree120, align 8, !dbg !3100
  %first121 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %85, i32 0, i32 0, !dbg !3102
  %86 = load %struct.octal_node*, %struct.octal_node** %first121, align 8, !dbg !3102
  call void @free_metaball_octal_node(%struct.octal_node* %86), !dbg !3103
  %87 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3104
  %metaball_tree122 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3105
  %88 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree122, align 8, !dbg !3105
  %89 = bitcast %struct.octal_tree* %88 to i8*, !dbg !3106
  call void %87(i8* %89), !dbg !3104
  %metaball_tree123 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 3, !dbg !3107
  store %struct.octal_tree* null, %struct.octal_tree** %metaball_tree123, align 8, !dbg !3108
  br label %if.end124, !dbg !3109

if.end124:                                        ; preds = %if.then119, %if.end111
  %curindex = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 15, !dbg !3110
  %90 = load i32, i32* %curindex, align 4, !dbg !3110
  %tobool125 = icmp ne i32 %90, 0, !dbg !3112
  br i1 %tobool125, label %if.then126, label %if.end148, !dbg !3113

if.then126:                                       ; preds = %if.end124
  call void @llvm.dbg.declare(metadata %struct.vertex** %ptr, metadata !3114, metadata !DIExpression()), !dbg !3116
  %vertices = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 9, !dbg !3117
  %ptr127 = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices, i32 0, i32 2, !dbg !3118
  %91 = load %struct.vertex*, %struct.vertex** %ptr127, align 8, !dbg !3118
  store %struct.vertex* %91, %struct.vertex** %ptr, align 8, !dbg !3116
  %92 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3119
  %call128 = call i8* %92(i64 72, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)), !dbg !3119
  %93 = bitcast i8* %call128 to %struct.DispList*, !dbg !3119
  store %struct.DispList* %93, %struct.DispList** %dl, align 8, !dbg !3120
  %94 = load %struct.ListBase*, %struct.ListBase** %dispbase.addr, align 8, !dbg !3121
  %95 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3122
  %96 = bitcast %struct.DispList* %95 to i8*, !dbg !3122
  call void @BLI_addtail(%struct.ListBase* %94, i8* %96), !dbg !3123
  %97 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3124
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %97, i32 0, i32 2, !dbg !3125
  store i16 5, i16* %type, align 8, !dbg !3126
  %vertices129 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 9, !dbg !3127
  %count = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices129, i32 0, i32 0, !dbg !3128
  %98 = load i32, i32* %count, align 8, !dbg !3128
  %99 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3129
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %99, i32 0, i32 5, !dbg !3130
  store i32 %98, i32* %nr, align 8, !dbg !3131
  %curindex130 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 15, !dbg !3132
  %100 = load i32, i32* %curindex130, align 4, !dbg !3132
  %101 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3133
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %101, i32 0, i32 4, !dbg !3134
  store i32 %100, i32* %parts, align 4, !dbg !3135
  %indices = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 13, !dbg !3136
  %102 = load i32*, i32** %indices, align 8, !dbg !3136
  %103 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3137
  %index = getelementptr inbounds %struct.DispList, %struct.DispList* %103, i32 0, i32 10, !dbg !3138
  store i32* %102, i32** %index, align 8, !dbg !3139
  %indices131 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 13, !dbg !3140
  store i32* null, i32** %indices131, align 8, !dbg !3141
  %vertices132 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 9, !dbg !3142
  %count133 = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices132, i32 0, i32 0, !dbg !3143
  %104 = load i32, i32* %count133, align 8, !dbg !3143
  store i32 %104, i32* %a, align 4, !dbg !3144
  %105 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3145
  %106 = load i32, i32* %a, align 4, !dbg !3146
  %conv134 = sext i32 %106 to i64, !dbg !3146
  %mul135 = mul i64 12, %conv134, !dbg !3147
  %call136 = call i8* %105(i64 %mul135, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)), !dbg !3145
  %107 = bitcast i8* %call136 to float*, !dbg !3145
  store float* %107, float** %co, align 8, !dbg !3148
  %108 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3149
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %108, i32 0, i32 8, !dbg !3150
  store float* %107, float** %verts, align 8, !dbg !3151
  %109 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3152
  %110 = load i32, i32* %a, align 4, !dbg !3153
  %conv137 = sext i32 %110 to i64, !dbg !3153
  %mul138 = mul i64 12, %conv137, !dbg !3154
  %call139 = call i8* %109(i64 %mul138, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)), !dbg !3152
  %111 = bitcast i8* %call139 to float*, !dbg !3152
  store float* %111, float** %no, align 8, !dbg !3155
  %112 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !3156
  %nors = getelementptr inbounds %struct.DispList, %struct.DispList* %112, i32 0, i32 9, !dbg !3157
  store float* %111, float** %nors, align 8, !dbg !3158
  store i32 0, i32* %a, align 4, !dbg !3159
  br label %for.cond, !dbg !3161

for.cond:                                         ; preds = %for.inc, %if.then126
  %113 = load i32, i32* %a, align 4, !dbg !3162
  %vertices140 = getelementptr inbounds %struct.process, %struct.process* %process, i32 0, i32 9, !dbg !3164
  %count141 = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices140, i32 0, i32 0, !dbg !3165
  %114 = load i32, i32* %count141, align 8, !dbg !3165
  %cmp142 = icmp slt i32 %113, %114, !dbg !3166
  br i1 %cmp142, label %for.body, label %for.end, !dbg !3167

for.body:                                         ; preds = %for.cond
  %115 = load float*, float** %co, align 8, !dbg !3168
  %116 = load %struct.vertex*, %struct.vertex** %ptr, align 8, !dbg !3170
  %co144 = getelementptr inbounds %struct.vertex, %struct.vertex* %116, i32 0, i32 0, !dbg !3171
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co144, i64 0, i64 0, !dbg !3170
  call void @copy_v3_v3(float* %115, float* %arraydecay), !dbg !3172
  %117 = load float*, float** %no, align 8, !dbg !3173
  %118 = load %struct.vertex*, %struct.vertex** %ptr, align 8, !dbg !3174
  %no145 = getelementptr inbounds %struct.vertex, %struct.vertex* %118, i32 0, i32 1, !dbg !3175
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %no145, i64 0, i64 0, !dbg !3174
  call void @copy_v3_v3(float* %117, float* %arraydecay146), !dbg !3176
  br label %for.inc, !dbg !3177

for.inc:                                          ; preds = %for.body
  %119 = load %struct.vertex*, %struct.vertex** %ptr, align 8, !dbg !3178
  %incdec.ptr = getelementptr inbounds %struct.vertex, %struct.vertex* %119, i32 1, !dbg !3178
  store %struct.vertex* %incdec.ptr, %struct.vertex** %ptr, align 8, !dbg !3178
  %120 = load i32, i32* %a, align 4, !dbg !3179
  %inc = add nsw i32 %120, 1, !dbg !3179
  store i32 %inc, i32* %a, align 4, !dbg !3179
  %121 = load float*, float** %no, align 8, !dbg !3180
  %add.ptr = getelementptr inbounds float, float* %121, i64 3, !dbg !3180
  store float* %add.ptr, float** %no, align 8, !dbg !3180
  %122 = load float*, float** %co, align 8, !dbg !3181
  %add.ptr147 = getelementptr inbounds float, float* %122, i64 3, !dbg !3181
  store float* %add.ptr147, float** %co, align 8, !dbg !3181
  br label %for.cond, !dbg !3182, !llvm.loop !3183

for.end:                                          ; preds = %for.cond
  br label %if.end148, !dbg !3185

if.end148:                                        ; preds = %for.end, %if.end124
  call void @freepolygonize(%struct.process* %process), !dbg !3186
  br label %return, !dbg !3187

return:                                           ; preds = %if.end148, %if.then88, %if.then12, %if.then4, %if.then
  ret void, !dbg !3187
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline nounwind uwtable
define internal void @mball_count(%struct.EvaluationContext* %eval_ctx, %struct.process* %process, %struct.Scene* %scene, %struct.Object* %basis) #0 !dbg !3188 {
entry:
  %eval_ctx.addr = alloca %struct.EvaluationContext*, align 8
  %process.addr = alloca %struct.process*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %basis.addr = alloca %struct.Object*, align 8
  %sce_iter = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %bob = alloca %struct.Object*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  %basisnr = alloca i32, align 4
  %obnr = alloca i32, align 4
  %basisname = alloca [66 x i8], align 16
  %obname = alloca [66 x i8], align 16
  %iter = alloca %struct.SceneBaseIter, align 8
  %mb = alloca %struct.MetaBall*, align 8
  %mb25 = alloca %struct.MetaBall*, align 8
  store %struct.EvaluationContext* %eval_ctx, %struct.EvaluationContext** %eval_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx.addr, metadata !3192, metadata !DIExpression()), !dbg !3193
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !3194, metadata !DIExpression()), !dbg !3195
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3196, metadata !DIExpression()), !dbg !3197
  store %struct.Object* %basis, %struct.Object** %basis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %basis.addr, metadata !3198, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !3200, metadata !DIExpression()), !dbg !3201
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3202
  store %struct.Scene* %0, %struct.Scene** %sce_iter, align 8, !dbg !3201
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !3203, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3205, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.declare(metadata %struct.Object** %bob, metadata !3207, metadata !DIExpression()), !dbg !3208
  %1 = load %struct.Object*, %struct.Object** %basis.addr, align 8, !dbg !3209
  store %struct.Object* %1, %struct.Object** %bob, align 8, !dbg !3208
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !3210, metadata !DIExpression()), !dbg !3211
  store %struct.MetaElem* null, %struct.MetaElem** %ml, align 8, !dbg !3211
  call void @llvm.dbg.declare(metadata i32* %basisnr, metadata !3212, metadata !DIExpression()), !dbg !3213
  call void @llvm.dbg.declare(metadata i32* %obnr, metadata !3214, metadata !DIExpression()), !dbg !3215
  call void @llvm.dbg.declare(metadata [66 x i8]* %basisname, metadata !3216, metadata !DIExpression()), !dbg !3217
  call void @llvm.dbg.declare(metadata [66 x i8]* %obname, metadata !3218, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.declare(metadata %struct.SceneBaseIter* %iter, metadata !3220, metadata !DIExpression()), !dbg !3221
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %basisname, i64 0, i64 0, !dbg !3222
  %2 = load %struct.Object*, %struct.Object** %basis.addr, align 8, !dbg !3223
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !3224
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !3225
  %arraydecay1 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3223
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay1, i64 2, !dbg !3226
  %call = call i32 @BLI_split_name_num(i8* %arraydecay, i32* %basisnr, i8* %add.ptr, i8 zeroext 46), !dbg !3227
  %3 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3228
  %totelem = getelementptr inbounds %struct.process, %struct.process* %3, i32 0, i32 1, !dbg !3229
  store i32 0, i32* %totelem, align 4, !dbg !3230
  %4 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !3231
  %call2 = call i32 @BKE_scene_base_iter_next(%struct.EvaluationContext* %4, %struct.SceneBaseIter* %iter, %struct.Scene** %sce_iter, i32 0, %struct.Base** null, %struct.Object** null), !dbg !3232
  br label %while.cond, !dbg !3233

while.cond:                                       ; preds = %if.end44, %entry
  %5 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !3234
  %call3 = call i32 @BKE_scene_base_iter_next(%struct.EvaluationContext* %5, %struct.SceneBaseIter* %iter, %struct.Scene** %sce_iter, i32 1, %struct.Base** %base, %struct.Object** %ob), !dbg !3235
  %tobool = icmp ne i32 %call3, 0, !dbg !3233
  br i1 %tobool, label %while.body, label %while.end, !dbg !3233

while.body:                                       ; preds = %while.cond
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3236
  %type = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !3239
  %7 = load i16, i16* %type, align 8, !dbg !3239
  %conv = sext i16 %7 to i32, !dbg !3236
  %cmp = icmp eq i32 %conv, 5, !dbg !3240
  br i1 %cmp, label %if.then, label %if.end44, !dbg !3241

if.then:                                          ; preds = %while.body
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3242
  %9 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3245
  %cmp5 = icmp eq %struct.Object* %8, %9, !dbg !3246
  br i1 %cmp5, label %if.then7, label %if.else12, !dbg !3247

if.then7:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !3248, metadata !DIExpression()), !dbg !3250
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3251
  %data = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 19, !dbg !3252
  %11 = load i8*, i8** %data, align 8, !dbg !3252
  %12 = bitcast i8* %11 to %struct.MetaBall*, !dbg !3251
  store %struct.MetaBall* %12, %struct.MetaBall** %mb, align 8, !dbg !3250
  %13 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3253
  %editelems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %13, i32 0, i32 4, !dbg !3255
  %14 = load %struct.ListBase*, %struct.ListBase** %editelems, align 8, !dbg !3255
  %tobool8 = icmp ne %struct.ListBase* %14, null, !dbg !3253
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !3256

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3257
  %editelems10 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %15, i32 0, i32 4, !dbg !3258
  %16 = load %struct.ListBase*, %struct.ListBase** %editelems10, align 8, !dbg !3258
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %16, i32 0, i32 0, !dbg !3259
  %17 = load i8*, i8** %first, align 8, !dbg !3259
  %18 = bitcast i8* %17 to %struct.MetaElem*, !dbg !3257
  store %struct.MetaElem* %18, %struct.MetaElem** %ml, align 8, !dbg !3260
  br label %if.end, !dbg !3261

if.else:                                          ; preds = %if.then7
  %19 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3262
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %19, i32 0, i32 2, !dbg !3263
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !3264
  %20 = load i8*, i8** %first11, align 8, !dbg !3264
  %21 = bitcast i8* %20 to %struct.MetaElem*, !dbg !3262
  store %struct.MetaElem* %21, %struct.MetaElem** %ml, align 8, !dbg !3265
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end37, !dbg !3266

if.else12:                                        ; preds = %if.then
  %arraydecay13 = getelementptr inbounds [66 x i8], [66 x i8]* %obname, i64 0, i64 0, !dbg !3267
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3269
  %id14 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 0, !dbg !3270
  %name15 = getelementptr inbounds %struct.ID, %struct.ID* %id14, i32 0, i32 4, !dbg !3271
  %arraydecay16 = getelementptr inbounds [66 x i8], [66 x i8]* %name15, i64 0, i64 0, !dbg !3269
  %add.ptr17 = getelementptr inbounds i8, i8* %arraydecay16, i64 2, !dbg !3272
  %call18 = call i32 @BLI_split_name_num(i8* %arraydecay13, i32* %obnr, i8* %add.ptr17, i8 zeroext 46), !dbg !3273
  %arraydecay19 = getelementptr inbounds [66 x i8], [66 x i8]* %obname, i64 0, i64 0, !dbg !3274
  %arraydecay20 = getelementptr inbounds [66 x i8], [66 x i8]* %basisname, i64 0, i64 0, !dbg !3276
  %call21 = call i32 @strcmp(i8* %arraydecay19, i8* %arraydecay20) #7, !dbg !3277
  %cmp22 = icmp eq i32 %call21, 0, !dbg !3278
  br i1 %cmp22, label %if.then24, label %if.end36, !dbg !3279

if.then24:                                        ; preds = %if.else12
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb25, metadata !3280, metadata !DIExpression()), !dbg !3282
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3283
  %data26 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 19, !dbg !3284
  %24 = load i8*, i8** %data26, align 8, !dbg !3284
  %25 = bitcast i8* %24 to %struct.MetaBall*, !dbg !3283
  store %struct.MetaBall* %25, %struct.MetaBall** %mb25, align 8, !dbg !3282
  %26 = load %struct.MetaBall*, %struct.MetaBall** %mb25, align 8, !dbg !3285
  %editelems27 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %26, i32 0, i32 4, !dbg !3287
  %27 = load %struct.ListBase*, %struct.ListBase** %editelems27, align 8, !dbg !3287
  %tobool28 = icmp ne %struct.ListBase* %27, null, !dbg !3285
  br i1 %tobool28, label %if.then29, label %if.else32, !dbg !3288

if.then29:                                        ; preds = %if.then24
  %28 = load %struct.MetaBall*, %struct.MetaBall** %mb25, align 8, !dbg !3289
  %editelems30 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %28, i32 0, i32 4, !dbg !3290
  %29 = load %struct.ListBase*, %struct.ListBase** %editelems30, align 8, !dbg !3290
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %29, i32 0, i32 0, !dbg !3291
  %30 = load i8*, i8** %first31, align 8, !dbg !3291
  %31 = bitcast i8* %30 to %struct.MetaElem*, !dbg !3289
  store %struct.MetaElem* %31, %struct.MetaElem** %ml, align 8, !dbg !3292
  br label %if.end35, !dbg !3293

if.else32:                                        ; preds = %if.then24
  %32 = load %struct.MetaBall*, %struct.MetaBall** %mb25, align 8, !dbg !3294
  %elems33 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %32, i32 0, i32 2, !dbg !3295
  %first34 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems33, i32 0, i32 0, !dbg !3296
  %33 = load i8*, i8** %first34, align 8, !dbg !3296
  %34 = bitcast i8* %33 to %struct.MetaElem*, !dbg !3294
  store %struct.MetaElem* %34, %struct.MetaElem** %ml, align 8, !dbg !3297
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %if.then29
  br label %if.end36, !dbg !3298

if.end36:                                         ; preds = %if.end35, %if.else12
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  br label %for.cond, !dbg !3299

for.cond:                                         ; preds = %for.inc, %if.end37
  %35 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3300
  %tobool38 = icmp ne %struct.MetaElem* %35, null, !dbg !3303
  br i1 %tobool38, label %for.body, label %for.end, !dbg !3303

for.body:                                         ; preds = %for.cond
  %36 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3304
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %36, i32 0, i32 4, !dbg !3307
  %37 = load i16, i16* %flag, align 2, !dbg !3307
  %conv39 = sext i16 %37 to i32, !dbg !3304
  %and = and i32 %conv39, 8, !dbg !3308
  %tobool40 = icmp ne i32 %and, 0, !dbg !3308
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !3309

if.then41:                                        ; preds = %for.body
  %38 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3310
  %totelem42 = getelementptr inbounds %struct.process, %struct.process* %38, i32 0, i32 1, !dbg !3312
  %39 = load i32, i32* %totelem42, align 4, !dbg !3313
  %inc = add nsw i32 %39, 1, !dbg !3313
  store i32 %inc, i32* %totelem42, align 4, !dbg !3313
  br label %if.end43, !dbg !3314

if.end43:                                         ; preds = %if.then41, %for.body
  br label %for.inc, !dbg !3315

for.inc:                                          ; preds = %if.end43
  %40 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3316
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %40, i32 0, i32 0, !dbg !3317
  %41 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !3317
  store %struct.MetaElem* %41, %struct.MetaElem** %ml, align 8, !dbg !3318
  br label %for.cond, !dbg !3319, !llvm.loop !3320

for.end:                                          ; preds = %for.cond
  br label %if.end44, !dbg !3322

if.end44:                                         ; preds = %for.end, %while.body
  br label %while.cond, !dbg !3233, !llvm.loop !3323

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3325
}

; Function Attrs: noinline nounwind uwtable
define internal float @init_meta(%struct.EvaluationContext* %eval_ctx, %struct.process* %process, %struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !3326 {
entry:
  %eval_ctx.addr = alloca %struct.EvaluationContext*, align 8
  %process.addr = alloca %struct.process*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %sce_iter = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %bob = alloca %struct.Object*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  %size = alloca float, align 4
  %totsize = alloca float, align 4
  %obinv = alloca [4 x [4 x float]], align 16
  %obmat = alloca [4 x [4 x float]], align 16
  %vec = alloca [3 x float], align 4
  %a = alloca i32, align 4
  %obnr = alloca i32, align 4
  %zero_size = alloca i32, align 4
  %obname = alloca [66 x i8], align 16
  %iter = alloca %struct.SceneBaseIter, align 8
  %name22 = alloca [66 x i8], align 16
  %nr = alloca i32, align 4
  %pob = alloca %struct.Object*, align 8
  %ml_count = alloca i32, align 4
  %i = alloca i32, align 4
  %temp1 = alloca [4 x [4 x float]], align 16
  %temp2 = alloca [4 x [4 x float]], align 16
  %temp3 = alloca [4 x [4 x float]], align 16
  %mat = alloca [4 x float]*, align 8
  %imat = alloca [4 x float]*, align 8
  %max_x = alloca float, align 4
  %max_y = alloca float, align 4
  %max_z = alloca float, align 4
  %min_x = alloca float, align 4
  %min_y = alloca float, align 4
  %min_z = alloca float, align 4
  %expx = alloca float, align 4
  %expy = alloca float, align 4
  %expz = alloca float, align 4
  store %struct.EvaluationContext* %eval_ctx, %struct.EvaluationContext** %eval_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx.addr, metadata !3329, metadata !DIExpression()), !dbg !3330
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !3331, metadata !DIExpression()), !dbg !3332
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3333, metadata !DIExpression()), !dbg !3334
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3335, metadata !DIExpression()), !dbg !3336
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !3337, metadata !DIExpression()), !dbg !3338
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3339
  store %struct.Scene* %0, %struct.Scene** %sce_iter, align 8, !dbg !3338
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !3340, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.declare(metadata %struct.Object** %bob, metadata !3342, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !3344, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !3346, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.declare(metadata float* %size, metadata !3348, metadata !DIExpression()), !dbg !3349
  call void @llvm.dbg.declare(metadata float* %totsize, metadata !3350, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obinv, metadata !3352, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !3354, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !3356, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3358, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.declare(metadata i32* %obnr, metadata !3360, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.declare(metadata i32* %zero_size, metadata !3362, metadata !DIExpression()), !dbg !3363
  store i32 0, i32* %zero_size, align 4, !dbg !3363
  call void @llvm.dbg.declare(metadata [66 x i8]* %obname, metadata !3364, metadata !DIExpression()), !dbg !3365
  call void @llvm.dbg.declare(metadata %struct.SceneBaseIter* %iter, metadata !3366, metadata !DIExpression()), !dbg !3367
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !3368
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3369
  %obmat1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 47, !dbg !3370
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat1, i64 0, i64 0, !dbg !3369
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !3371
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obinv, i64 0, i64 0, !dbg !3372
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3373
  %obmat4 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 47, !dbg !3374
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat4, i64 0, i64 0, !dbg !3373
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay3, [4 x float]* %arraydecay5), !dbg !3375
  store i32 0, i32* %a, align 4, !dbg !3376
  %arraydecay6 = getelementptr inbounds [66 x i8], [66 x i8]* %obname, i64 0, i64 0, !dbg !3377
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3378
  %id = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 0, !dbg !3379
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !3380
  %arraydecay7 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3378
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay7, i64 2, !dbg !3381
  %call8 = call i32 @BLI_split_name_num(i8* %arraydecay6, i32* %obnr, i8* %add.ptr, i8 zeroext 46), !dbg !3382
  %4 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !3383
  %call9 = call i32 @BKE_scene_base_iter_next(%struct.EvaluationContext* %4, %struct.SceneBaseIter* %iter, %struct.Scene** %sce_iter, i32 0, %struct.Base** null, %struct.Object** null), !dbg !3384
  br label %while.cond, !dbg !3385

while.cond:                                       ; preds = %if.end414, %entry
  %5 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !3386
  %call10 = call i32 @BKE_scene_base_iter_next(%struct.EvaluationContext* %5, %struct.SceneBaseIter* %iter, %struct.Scene** %sce_iter, i32 1, %struct.Base** %base, %struct.Object** %bob), !dbg !3387
  %tobool = icmp ne i32 %call10, 0, !dbg !3385
  br i1 %tobool, label %while.body, label %while.end415, !dbg !3385

while.body:                                       ; preds = %while.cond
  %6 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3388
  %type = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !3391
  %7 = load i16, i16* %type, align 8, !dbg !3391
  %conv = sext i16 %7 to i32, !dbg !3388
  %cmp = icmp eq i32 %conv, 5, !dbg !3392
  br i1 %cmp, label %if.then, label %if.end414, !dbg !3393

if.then:                                          ; preds = %while.body
  store i32 0, i32* %zero_size, align 4, !dbg !3394
  store %struct.MetaElem* null, %struct.MetaElem** %ml, align 8, !dbg !3396
  %8 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3397
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3399
  %cmp12 = icmp eq %struct.Object* %8, %9, !dbg !3400
  br i1 %cmp12, label %land.lhs.true, label %if.else21, !dbg !3401

land.lhs.true:                                    ; preds = %if.then
  %10 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !3402
  %flag = getelementptr inbounds %struct.Base, %struct.Base* %10, i32 0, i32 4, !dbg !3403
  %11 = load i32, i32* %flag, align 8, !dbg !3403
  %and = and i32 %11, 512, !dbg !3404
  %cmp14 = icmp eq i32 %and, 0, !dbg !3405
  br i1 %cmp14, label %if.then16, label %if.else21, !dbg !3406

if.then16:                                        ; preds = %land.lhs.true
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3407
  %data = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !3409
  %13 = load i8*, i8** %data, align 8, !dbg !3409
  %14 = bitcast i8* %13 to %struct.MetaBall*, !dbg !3407
  store %struct.MetaBall* %14, %struct.MetaBall** %mb, align 8, !dbg !3410
  %15 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3411
  %editelems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %15, i32 0, i32 4, !dbg !3413
  %16 = load %struct.ListBase*, %struct.ListBase** %editelems, align 8, !dbg !3413
  %tobool17 = icmp ne %struct.ListBase* %16, null, !dbg !3411
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !3414

if.then18:                                        ; preds = %if.then16
  %17 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3415
  %editelems19 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %17, i32 0, i32 4, !dbg !3416
  %18 = load %struct.ListBase*, %struct.ListBase** %editelems19, align 8, !dbg !3416
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %18, i32 0, i32 0, !dbg !3417
  %19 = load i8*, i8** %first, align 8, !dbg !3417
  %20 = bitcast i8* %19 to %struct.MetaElem*, !dbg !3415
  store %struct.MetaElem* %20, %struct.MetaElem** %ml, align 8, !dbg !3418
  br label %if.end, !dbg !3419

if.else:                                          ; preds = %if.then16
  %21 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3420
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %21, i32 0, i32 2, !dbg !3421
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !3422
  %22 = load i8*, i8** %first20, align 8, !dbg !3422
  %23 = bitcast i8* %22 to %struct.MetaElem*, !dbg !3420
  store %struct.MetaElem* %23, %struct.MetaElem** %ml, align 8, !dbg !3423
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then18
  br label %if.end46, !dbg !3424

if.else21:                                        ; preds = %land.lhs.true, %if.then
  call void @llvm.dbg.declare(metadata [66 x i8]* %name22, metadata !3425, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3428, metadata !DIExpression()), !dbg !3429
  %arraydecay23 = getelementptr inbounds [66 x i8], [66 x i8]* %name22, i64 0, i64 0, !dbg !3430
  %24 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3431
  %id24 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 0, !dbg !3432
  %name25 = getelementptr inbounds %struct.ID, %struct.ID* %id24, i32 0, i32 4, !dbg !3433
  %arraydecay26 = getelementptr inbounds [66 x i8], [66 x i8]* %name25, i64 0, i64 0, !dbg !3431
  %add.ptr27 = getelementptr inbounds i8, i8* %arraydecay26, i64 2, !dbg !3434
  %call28 = call i32 @BLI_split_name_num(i8* %arraydecay23, i32* %nr, i8* %add.ptr27, i8 zeroext 46), !dbg !3435
  %arraydecay29 = getelementptr inbounds [66 x i8], [66 x i8]* %obname, i64 0, i64 0, !dbg !3436
  %arraydecay30 = getelementptr inbounds [66 x i8], [66 x i8]* %name22, i64 0, i64 0, !dbg !3438
  %call31 = call i32 @strcmp(i8* %arraydecay29, i8* %arraydecay30) #7, !dbg !3439
  %cmp32 = icmp eq i32 %call31, 0, !dbg !3440
  br i1 %cmp32, label %if.then34, label %if.end45, !dbg !3441

if.then34:                                        ; preds = %if.else21
  %25 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3442
  %data35 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 19, !dbg !3444
  %26 = load i8*, i8** %data35, align 8, !dbg !3444
  %27 = bitcast i8* %26 to %struct.MetaBall*, !dbg !3442
  store %struct.MetaBall* %27, %struct.MetaBall** %mb, align 8, !dbg !3445
  %28 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3446
  %editelems36 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %28, i32 0, i32 4, !dbg !3448
  %29 = load %struct.ListBase*, %struct.ListBase** %editelems36, align 8, !dbg !3448
  %tobool37 = icmp ne %struct.ListBase* %29, null, !dbg !3446
  br i1 %tobool37, label %if.then38, label %if.else41, !dbg !3449

if.then38:                                        ; preds = %if.then34
  %30 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3450
  %editelems39 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %30, i32 0, i32 4, !dbg !3451
  %31 = load %struct.ListBase*, %struct.ListBase** %editelems39, align 8, !dbg !3451
  %first40 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %31, i32 0, i32 0, !dbg !3452
  %32 = load i8*, i8** %first40, align 8, !dbg !3452
  %33 = bitcast i8* %32 to %struct.MetaElem*, !dbg !3450
  store %struct.MetaElem* %33, %struct.MetaElem** %ml, align 8, !dbg !3453
  br label %if.end44, !dbg !3454

if.else41:                                        ; preds = %if.then34
  %34 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !3455
  %elems42 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %34, i32 0, i32 2, !dbg !3456
  %first43 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems42, i32 0, i32 0, !dbg !3457
  %35 = load i8*, i8** %first43, align 8, !dbg !3457
  %36 = bitcast i8* %35 to %struct.MetaElem*, !dbg !3455
  store %struct.MetaElem* %36, %struct.MetaElem** %ml, align 8, !dbg !3458
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then38
  br label %if.end45, !dbg !3459

if.end45:                                         ; preds = %if.end44, %if.else21
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end
  %37 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3460
  %obmat47 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 47, !dbg !3462
  %arraydecay48 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat47, i64 0, i64 0, !dbg !3460
  %call49 = call zeroext i8 @has_zero_axis_m4([4 x float]* %arraydecay48), !dbg !3463
  %tobool50 = icmp ne i8 %call49, 0, !dbg !3463
  br i1 %tobool50, label %if.then51, label %if.else52, !dbg !3464

if.then51:                                        ; preds = %if.end46
  store i32 1, i32* %zero_size, align 4, !dbg !3465
  br label %if.end67, !dbg !3467

if.else52:                                        ; preds = %if.end46
  %38 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3468
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 9, !dbg !3470
  %39 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !3470
  %tobool53 = icmp ne %struct.Object* %39, null, !dbg !3468
  br i1 %tobool53, label %if.then54, label %if.end66, !dbg !3471

if.then54:                                        ; preds = %if.else52
  call void @llvm.dbg.declare(metadata %struct.Object** %pob, metadata !3472, metadata !DIExpression()), !dbg !3474
  %40 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3475
  %parent55 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 9, !dbg !3476
  %41 = load %struct.Object*, %struct.Object** %parent55, align 8, !dbg !3476
  store %struct.Object* %41, %struct.Object** %pob, align 8, !dbg !3474
  br label %while.cond56, !dbg !3477

while.cond56:                                     ; preds = %if.end64, %if.then54
  %42 = load %struct.Object*, %struct.Object** %pob, align 8, !dbg !3478
  %tobool57 = icmp ne %struct.Object* %42, null, !dbg !3477
  br i1 %tobool57, label %while.body58, label %while.end, !dbg !3477

while.body58:                                     ; preds = %while.cond56
  %43 = load %struct.Object*, %struct.Object** %pob, align 8, !dbg !3479
  %obmat59 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 47, !dbg !3482
  %arraydecay60 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat59, i64 0, i64 0, !dbg !3479
  %call61 = call zeroext i8 @has_zero_axis_m4([4 x float]* %arraydecay60), !dbg !3483
  %tobool62 = icmp ne i8 %call61, 0, !dbg !3483
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !3484

if.then63:                                        ; preds = %while.body58
  store i32 1, i32* %zero_size, align 4, !dbg !3485
  br label %while.end, !dbg !3487

if.end64:                                         ; preds = %while.body58
  %44 = load %struct.Object*, %struct.Object** %pob, align 8, !dbg !3488
  %parent65 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 9, !dbg !3489
  %45 = load %struct.Object*, %struct.Object** %parent65, align 8, !dbg !3489
  store %struct.Object* %45, %struct.Object** %pob, align 8, !dbg !3490
  br label %while.cond56, !dbg !3477, !llvm.loop !3491

while.end:                                        ; preds = %if.then63, %while.cond56
  br label %if.end66, !dbg !3493

if.end66:                                         ; preds = %while.end, %if.else52
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then51
  %46 = load i32, i32* %zero_size, align 4, !dbg !3494
  %tobool68 = icmp ne i32 %46, 0, !dbg !3494
  br i1 %tobool68, label %if.then69, label %if.else74, !dbg !3496

if.then69:                                        ; preds = %if.end67
  call void @llvm.dbg.declare(metadata i32* %ml_count, metadata !3497, metadata !DIExpression()), !dbg !3499
  store i32 0, i32* %ml_count, align 4, !dbg !3499
  br label %while.cond70, !dbg !3500

while.cond70:                                     ; preds = %while.body72, %if.then69
  %47 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3501
  %tobool71 = icmp ne %struct.MetaElem* %47, null, !dbg !3500
  br i1 %tobool71, label %while.body72, label %while.end73, !dbg !3500

while.body72:                                     ; preds = %while.cond70
  %48 = load i32, i32* %ml_count, align 4, !dbg !3502
  %inc = add i32 %48, 1, !dbg !3502
  store i32 %inc, i32* %ml_count, align 4, !dbg !3502
  %49 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3504
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %49, i32 0, i32 0, !dbg !3505
  %50 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !3505
  store %struct.MetaElem* %50, %struct.MetaElem** %ml, align 8, !dbg !3506
  br label %while.cond70, !dbg !3500, !llvm.loop !3507

while.end73:                                      ; preds = %while.cond70
  %51 = load i32, i32* %ml_count, align 4, !dbg !3509
  %52 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3510
  %totelem = getelementptr inbounds %struct.process, %struct.process* %52, i32 0, i32 1, !dbg !3511
  %53 = load i32, i32* %totelem, align 4, !dbg !3512
  %sub = sub i32 %53, %51, !dbg !3512
  store i32 %sub, i32* %totelem, align 4, !dbg !3512
  br label %if.end413, !dbg !3513

if.else74:                                        ; preds = %if.end67
  br label %while.cond75, !dbg !3514

while.cond75:                                     ; preds = %if.end410, %if.else74
  %54 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3516
  %tobool76 = icmp ne %struct.MetaElem* %54, null, !dbg !3514
  br i1 %tobool76, label %while.body77, label %while.end412, !dbg !3514

while.body77:                                     ; preds = %while.cond75
  %55 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3517
  %flag78 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %55, i32 0, i32 4, !dbg !3520
  %56 = load i16, i16* %flag78, align 2, !dbg !3520
  %conv79 = sext i16 %56 to i32, !dbg !3517
  %and80 = and i32 %conv79, 8, !dbg !3521
  %tobool81 = icmp ne i32 %and80, 0, !dbg !3521
  br i1 %tobool81, label %if.end410, label %if.then82, !dbg !3522

if.then82:                                        ; preds = %while.body77
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3523, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %temp1, metadata !3526, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %temp2, metadata !3528, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %temp3, metadata !3530, metadata !DIExpression()), !dbg !3531
  call void @llvm.dbg.declare(metadata [4 x float]** %mat, metadata !3532, metadata !DIExpression()), !dbg !3533
  store [4 x float]* null, [4 x float]** %mat, align 8, !dbg !3533
  call void @llvm.dbg.declare(metadata [4 x float]** %imat, metadata !3534, metadata !DIExpression()), !dbg !3535
  store [4 x float]* null, [4 x float]** %imat, align 8, !dbg !3535
  call void @llvm.dbg.declare(metadata float* %max_x, metadata !3536, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.declare(metadata float* %max_y, metadata !3538, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.declare(metadata float* %max_z, metadata !3540, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.declare(metadata float* %min_x, metadata !3542, metadata !DIExpression()), !dbg !3543
  call void @llvm.dbg.declare(metadata float* %min_y, metadata !3544, metadata !DIExpression()), !dbg !3545
  call void @llvm.dbg.declare(metadata float* %min_z, metadata !3546, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.declare(metadata float* %expx, metadata !3548, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.declare(metadata float* %expy, metadata !3550, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.declare(metadata float* %expz, metadata !3552, metadata !DIExpression()), !dbg !3553
  store float 0xC7EFF933C0000000, float* %max_z, align 4, !dbg !3554
  store float 0xC7EFF933C0000000, float* %max_y, align 4, !dbg !3555
  store float 0xC7EFF933C0000000, float* %max_x, align 4, !dbg !3556
  store float 0x47EFF933C0000000, float* %min_z, align 4, !dbg !3557
  store float 0x47EFF933C0000000, float* %min_y, align 4, !dbg !3558
  store float 0x47EFF933C0000000, float* %min_x, align 4, !dbg !3559
  %57 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3560
  %s = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %57, i32 0, i32 16, !dbg !3562
  %58 = load float, float* %s, align 8, !dbg !3562
  %cmp83 = fcmp ogt float %58, 1.000000e+01, !dbg !3563
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !3564

if.then85:                                        ; preds = %if.then82
  %59 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3565
  %s86 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %59, i32 0, i32 16, !dbg !3566
  store float 1.000000e+01, float* %s86, align 8, !dbg !3567
  br label %if.end87, !dbg !3565

if.end87:                                         ; preds = %if.then85, %if.then82
  %arraydecay88 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp3, i64 0, i64 0, !dbg !3568
  %60 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3569
  %quat = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %60, i32 0, i32 10, !dbg !3570
  %arraydecay89 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !3569
  call void @quat_to_mat4([4 x float]* %arraydecay88, float* %arraydecay89), !dbg !3571
  %arraydecay90 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp2, i64 0, i64 0, !dbg !3572
  call void @unit_m4([4 x float]* %arraydecay90), !dbg !3573
  %61 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3574
  %x = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %61, i32 0, i32 7, !dbg !3575
  %62 = load float, float* %x, align 8, !dbg !3575
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp2, i64 0, i64 3, !dbg !3576
  %arrayidx91 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !3576
  store float %62, float* %arrayidx91, align 16, !dbg !3577
  %63 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3578
  %y = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %63, i32 0, i32 8, !dbg !3579
  %64 = load float, float* %y, align 4, !dbg !3579
  %arrayidx92 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp2, i64 0, i64 3, !dbg !3580
  %arrayidx93 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx92, i64 0, i64 1, !dbg !3580
  store float %64, float* %arrayidx93, align 4, !dbg !3581
  %65 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3582
  %z = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %65, i32 0, i32 9, !dbg !3583
  %66 = load float, float* %z, align 8, !dbg !3583
  %arrayidx94 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp2, i64 0, i64 3, !dbg !3584
  %arrayidx95 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx94, i64 0, i64 2, !dbg !3584
  store float %66, float* %arrayidx95, align 8, !dbg !3585
  %arraydecay96 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp1, i64 0, i64 0, !dbg !3586
  %arraydecay97 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp2, i64 0, i64 0, !dbg !3587
  %arraydecay98 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp3, i64 0, i64 0, !dbg !3588
  call void @mul_m4_m4m4([4 x float]* %arraydecay96, [4 x float]* %arraydecay97, [4 x float]* %arraydecay98), !dbg !3589
  %67 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3590
  %call99 = call i8* @new_pgn_element(%struct.process* %67, i32 104), !dbg !3591
  %68 = bitcast i8* %call99 to %struct.MetaElem*, !dbg !3591
  %69 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3592
  %mainb = getelementptr inbounds %struct.process, %struct.process* %69, i32 0, i32 2, !dbg !3593
  %70 = load %struct.MetaElem**, %struct.MetaElem*** %mainb, align 8, !dbg !3593
  %71 = load i32, i32* %a, align 4, !dbg !3594
  %idxprom = sext i32 %71 to i64, !dbg !3592
  %arrayidx100 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %70, i64 %idxprom, !dbg !3592
  store %struct.MetaElem* %68, %struct.MetaElem** %arrayidx100, align 8, !dbg !3595
  %72 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3596
  %mainb101 = getelementptr inbounds %struct.process, %struct.process* %72, i32 0, i32 2, !dbg !3597
  %73 = load %struct.MetaElem**, %struct.MetaElem*** %mainb101, align 8, !dbg !3597
  %74 = load i32, i32* %a, align 4, !dbg !3598
  %idxprom102 = sext i32 %74 to i64, !dbg !3596
  %arrayidx103 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %73, i64 %idxprom102, !dbg !3596
  %75 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx103, align 8, !dbg !3596
  %76 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3599
  %77 = bitcast %struct.MetaElem* %75 to i8*, !dbg !3600
  %78 = bitcast %struct.MetaElem* %76 to i8*, !dbg !3600
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 104, i1 false), !dbg !3600
  %79 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3601
  %call104 = call i8* @new_pgn_element(%struct.process* %79, i32 104), !dbg !3602
  %80 = bitcast i8* %call104 to %struct.BoundBox*, !dbg !3602
  %81 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3603
  %mainb105 = getelementptr inbounds %struct.process, %struct.process* %81, i32 0, i32 2, !dbg !3604
  %82 = load %struct.MetaElem**, %struct.MetaElem*** %mainb105, align 8, !dbg !3604
  %83 = load i32, i32* %a, align 4, !dbg !3605
  %idxprom106 = sext i32 %83 to i64, !dbg !3603
  %arrayidx107 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %82, i64 %idxprom106, !dbg !3603
  %84 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx107, align 8, !dbg !3603
  %bb = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %84, i32 0, i32 2, !dbg !3606
  store %struct.BoundBox* %80, %struct.BoundBox** %bb, align 8, !dbg !3607
  %85 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3608
  %call108 = call i8* @new_pgn_element(%struct.process* %85, i32 64), !dbg !3609
  %86 = bitcast i8* %call108 to [4 x float]*, !dbg !3609
  store [4 x float]* %86, [4 x float]** %mat, align 8, !dbg !3610
  %87 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3611
  %call109 = call i8* @new_pgn_element(%struct.process* %87, i32 64), !dbg !3612
  %88 = bitcast i8* %call109 to [4 x float]*, !dbg !3612
  store [4 x float]* %88, [4 x float]** %imat, align 8, !dbg !3613
  %arraydecay110 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obinv, i64 0, i64 0, !dbg !3614
  %arraydecay111 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !3615
  %call112 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay110, [4 x float]* %arraydecay111), !dbg !3616
  %arraydecay113 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp2, i64 0, i64 0, !dbg !3617
  %arraydecay114 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obinv, i64 0, i64 0, !dbg !3618
  %89 = load %struct.Object*, %struct.Object** %bob, align 8, !dbg !3619
  %obmat115 = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 47, !dbg !3620
  %arraydecay116 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat115, i64 0, i64 0, !dbg !3619
  call void @mul_m4_m4m4([4 x float]* %arraydecay113, [4 x float]* %arraydecay114, [4 x float]* %arraydecay116), !dbg !3621
  %90 = load [4 x float]*, [4 x float]** %mat, align 8, !dbg !3622
  %arraydecay117 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp2, i64 0, i64 0, !dbg !3623
  %arraydecay118 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %temp1, i64 0, i64 0, !dbg !3624
  call void @mul_m4_m4m4([4 x float]* %90, [4 x float]* %arraydecay117, [4 x float]* %arraydecay118), !dbg !3625
  %91 = load [4 x float]*, [4 x float]** %imat, align 8, !dbg !3626
  %92 = load [4 x float]*, [4 x float]** %mat, align 8, !dbg !3627
  %call119 = call zeroext i8 @invert_m4_m4([4 x float]* %91, [4 x float]* %92), !dbg !3628
  %93 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3629
  %rad = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %93, i32 0, i32 14, !dbg !3630
  %94 = load float, float* %rad, align 8, !dbg !3630
  %95 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3631
  %rad120 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %95, i32 0, i32 14, !dbg !3632
  %96 = load float, float* %rad120, align 8, !dbg !3632
  %mul = fmul float %94, %96, !dbg !3633
  %97 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3634
  %mainb121 = getelementptr inbounds %struct.process, %struct.process* %97, i32 0, i32 2, !dbg !3635
  %98 = load %struct.MetaElem**, %struct.MetaElem*** %mainb121, align 8, !dbg !3635
  %99 = load i32, i32* %a, align 4, !dbg !3636
  %idxprom122 = sext i32 %99 to i64, !dbg !3634
  %arrayidx123 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %98, i64 %idxprom122, !dbg !3634
  %100 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx123, align 8, !dbg !3634
  %rad2 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %100, i32 0, i32 15, !dbg !3637
  store float %mul, float* %rad2, align 4, !dbg !3638
  %101 = load [4 x float]*, [4 x float]** %mat, align 8, !dbg !3639
  %102 = bitcast [4 x float]* %101 to float*, !dbg !3640
  %103 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3641
  %mainb124 = getelementptr inbounds %struct.process, %struct.process* %103, i32 0, i32 2, !dbg !3642
  %104 = load %struct.MetaElem**, %struct.MetaElem*** %mainb124, align 8, !dbg !3642
  %105 = load i32, i32* %a, align 4, !dbg !3643
  %idxprom125 = sext i32 %105 to i64, !dbg !3641
  %arrayidx126 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %104, i64 %idxprom125, !dbg !3641
  %106 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx126, align 8, !dbg !3641
  %mat127 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %106, i32 0, i32 18, !dbg !3644
  store float* %102, float** %mat127, align 8, !dbg !3645
  %107 = load [4 x float]*, [4 x float]** %imat, align 8, !dbg !3646
  %108 = bitcast [4 x float]* %107 to float*, !dbg !3647
  %109 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3648
  %mainb128 = getelementptr inbounds %struct.process, %struct.process* %109, i32 0, i32 2, !dbg !3649
  %110 = load %struct.MetaElem**, %struct.MetaElem*** %mainb128, align 8, !dbg !3649
  %111 = load i32, i32* %a, align 4, !dbg !3650
  %idxprom129 = sext i32 %111 to i64, !dbg !3648
  %arrayidx130 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %110, i64 %idxprom129, !dbg !3648
  %112 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx130, align 8, !dbg !3648
  %imat131 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %112, i32 0, i32 19, !dbg !3651
  store float* %108, float** %imat131, align 8, !dbg !3652
  %113 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3653
  %type132 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %113, i32 0, i32 3, !dbg !3653
  %114 = load i16, i16* %type132, align 8, !dbg !3653
  %conv133 = sext i16 %114 to i32, !dbg !3653
  %cmp134 = icmp eq i32 %conv133, 6, !dbg !3653
  br i1 %cmp134, label %if.else140, label %if.then136, !dbg !3655

if.then136:                                       ; preds = %if.end87
  %115 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3656
  %expx137 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %115, i32 0, i32 11, !dbg !3658
  %116 = load float, float* %expx137, align 4, !dbg !3658
  store float %116, float* %expx, align 4, !dbg !3659
  %117 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3660
  %expy138 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %117, i32 0, i32 12, !dbg !3661
  %118 = load float, float* %expy138, align 8, !dbg !3661
  store float %118, float* %expy, align 4, !dbg !3662
  %119 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3663
  %expz139 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %119, i32 0, i32 13, !dbg !3664
  %120 = load float, float* %expz139, align 4, !dbg !3664
  store float %120, float* %expz, align 4, !dbg !3665
  br label %if.end150, !dbg !3666

if.else140:                                       ; preds = %if.end87
  %121 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3667
  %expx141 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %121, i32 0, i32 11, !dbg !3669
  %122 = load float, float* %expx141, align 4, !dbg !3669
  %123 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3670
  %expx142 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %123, i32 0, i32 11, !dbg !3671
  %124 = load float, float* %expx142, align 4, !dbg !3671
  %mul143 = fmul float %122, %124, !dbg !3672
  store float %mul143, float* %expx, align 4, !dbg !3673
  %125 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3674
  %expy144 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %125, i32 0, i32 12, !dbg !3675
  %126 = load float, float* %expy144, align 8, !dbg !3675
  %127 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3676
  %expy145 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %127, i32 0, i32 12, !dbg !3677
  %128 = load float, float* %expy145, align 8, !dbg !3677
  %mul146 = fmul float %126, %128, !dbg !3678
  store float %mul146, float* %expy, align 4, !dbg !3679
  %129 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3680
  %expz147 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %129, i32 0, i32 13, !dbg !3681
  %130 = load float, float* %expz147, align 4, !dbg !3681
  %131 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3682
  %expz148 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %131, i32 0, i32 13, !dbg !3683
  %132 = load float, float* %expz148, align 4, !dbg !3683
  %mul149 = fmul float %130, %132, !dbg !3684
  store float %mul149, float* %expz, align 4, !dbg !3685
  br label %if.end150

if.end150:                                        ; preds = %if.else140, %if.then136
  %133 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3686
  %mainb151 = getelementptr inbounds %struct.process, %struct.process* %133, i32 0, i32 2, !dbg !3687
  %134 = load %struct.MetaElem**, %struct.MetaElem*** %mainb151, align 8, !dbg !3687
  %135 = load i32, i32* %a, align 4, !dbg !3688
  %idxprom152 = sext i32 %135 to i64, !dbg !3686
  %arrayidx153 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %134, i64 %idxprom152, !dbg !3686
  %136 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx153, align 8, !dbg !3686
  %bb154 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %136, i32 0, i32 2, !dbg !3689
  %137 = load %struct.BoundBox*, %struct.BoundBox** %bb154, align 8, !dbg !3689
  %vec155 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %137, i32 0, i32 0, !dbg !3690
  %arrayidx156 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec155, i64 0, i64 0, !dbg !3686
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx156, i64 0, i64 0, !dbg !3686
  %138 = load float, float* %expx, align 4, !dbg !3691
  %fneg = fneg float %138, !dbg !3692
  %139 = load float, float* %expy, align 4, !dbg !3693
  %fneg158 = fneg float %139, !dbg !3694
  %140 = load float, float* %expz, align 4, !dbg !3695
  %fneg159 = fneg float %140, !dbg !3696
  call void @copy_v3_fl3(float* %arraydecay157, float %fneg, float %fneg158, float %fneg159), !dbg !3697
  %141 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3698
  %mainb160 = getelementptr inbounds %struct.process, %struct.process* %141, i32 0, i32 2, !dbg !3699
  %142 = load %struct.MetaElem**, %struct.MetaElem*** %mainb160, align 8, !dbg !3699
  %143 = load i32, i32* %a, align 4, !dbg !3700
  %idxprom161 = sext i32 %143 to i64, !dbg !3698
  %arrayidx162 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %142, i64 %idxprom161, !dbg !3698
  %144 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx162, align 8, !dbg !3698
  %bb163 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %144, i32 0, i32 2, !dbg !3701
  %145 = load %struct.BoundBox*, %struct.BoundBox** %bb163, align 8, !dbg !3701
  %vec164 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %145, i32 0, i32 0, !dbg !3702
  %arrayidx165 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec164, i64 0, i64 1, !dbg !3698
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx165, i64 0, i64 0, !dbg !3698
  %146 = load float, float* %expx, align 4, !dbg !3703
  %147 = load float, float* %expy, align 4, !dbg !3704
  %fneg167 = fneg float %147, !dbg !3705
  %148 = load float, float* %expz, align 4, !dbg !3706
  %fneg168 = fneg float %148, !dbg !3707
  call void @copy_v3_fl3(float* %arraydecay166, float %146, float %fneg167, float %fneg168), !dbg !3708
  %149 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3709
  %mainb169 = getelementptr inbounds %struct.process, %struct.process* %149, i32 0, i32 2, !dbg !3710
  %150 = load %struct.MetaElem**, %struct.MetaElem*** %mainb169, align 8, !dbg !3710
  %151 = load i32, i32* %a, align 4, !dbg !3711
  %idxprom170 = sext i32 %151 to i64, !dbg !3709
  %arrayidx171 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %150, i64 %idxprom170, !dbg !3709
  %152 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx171, align 8, !dbg !3709
  %bb172 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %152, i32 0, i32 2, !dbg !3712
  %153 = load %struct.BoundBox*, %struct.BoundBox** %bb172, align 8, !dbg !3712
  %vec173 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %153, i32 0, i32 0, !dbg !3713
  %arrayidx174 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec173, i64 0, i64 2, !dbg !3709
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx174, i64 0, i64 0, !dbg !3709
  %154 = load float, float* %expx, align 4, !dbg !3714
  %155 = load float, float* %expy, align 4, !dbg !3715
  %156 = load float, float* %expz, align 4, !dbg !3716
  %fneg176 = fneg float %156, !dbg !3717
  call void @copy_v3_fl3(float* %arraydecay175, float %154, float %155, float %fneg176), !dbg !3718
  %157 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3719
  %mainb177 = getelementptr inbounds %struct.process, %struct.process* %157, i32 0, i32 2, !dbg !3720
  %158 = load %struct.MetaElem**, %struct.MetaElem*** %mainb177, align 8, !dbg !3720
  %159 = load i32, i32* %a, align 4, !dbg !3721
  %idxprom178 = sext i32 %159 to i64, !dbg !3719
  %arrayidx179 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %158, i64 %idxprom178, !dbg !3719
  %160 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx179, align 8, !dbg !3719
  %bb180 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %160, i32 0, i32 2, !dbg !3722
  %161 = load %struct.BoundBox*, %struct.BoundBox** %bb180, align 8, !dbg !3722
  %vec181 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %161, i32 0, i32 0, !dbg !3723
  %arrayidx182 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec181, i64 0, i64 3, !dbg !3719
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx182, i64 0, i64 0, !dbg !3719
  %162 = load float, float* %expx, align 4, !dbg !3724
  %fneg184 = fneg float %162, !dbg !3725
  %163 = load float, float* %expy, align 4, !dbg !3726
  %164 = load float, float* %expz, align 4, !dbg !3727
  %fneg185 = fneg float %164, !dbg !3728
  call void @copy_v3_fl3(float* %arraydecay183, float %fneg184, float %163, float %fneg185), !dbg !3729
  %165 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3730
  %mainb186 = getelementptr inbounds %struct.process, %struct.process* %165, i32 0, i32 2, !dbg !3731
  %166 = load %struct.MetaElem**, %struct.MetaElem*** %mainb186, align 8, !dbg !3731
  %167 = load i32, i32* %a, align 4, !dbg !3732
  %idxprom187 = sext i32 %167 to i64, !dbg !3730
  %arrayidx188 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %166, i64 %idxprom187, !dbg !3730
  %168 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx188, align 8, !dbg !3730
  %bb189 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %168, i32 0, i32 2, !dbg !3733
  %169 = load %struct.BoundBox*, %struct.BoundBox** %bb189, align 8, !dbg !3733
  %vec190 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %169, i32 0, i32 0, !dbg !3734
  %arrayidx191 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec190, i64 0, i64 4, !dbg !3730
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx191, i64 0, i64 0, !dbg !3730
  %170 = load float, float* %expx, align 4, !dbg !3735
  %fneg193 = fneg float %170, !dbg !3736
  %171 = load float, float* %expy, align 4, !dbg !3737
  %fneg194 = fneg float %171, !dbg !3738
  %172 = load float, float* %expz, align 4, !dbg !3739
  call void @copy_v3_fl3(float* %arraydecay192, float %fneg193, float %fneg194, float %172), !dbg !3740
  %173 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3741
  %mainb195 = getelementptr inbounds %struct.process, %struct.process* %173, i32 0, i32 2, !dbg !3742
  %174 = load %struct.MetaElem**, %struct.MetaElem*** %mainb195, align 8, !dbg !3742
  %175 = load i32, i32* %a, align 4, !dbg !3743
  %idxprom196 = sext i32 %175 to i64, !dbg !3741
  %arrayidx197 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %174, i64 %idxprom196, !dbg !3741
  %176 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx197, align 8, !dbg !3741
  %bb198 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %176, i32 0, i32 2, !dbg !3744
  %177 = load %struct.BoundBox*, %struct.BoundBox** %bb198, align 8, !dbg !3744
  %vec199 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %177, i32 0, i32 0, !dbg !3745
  %arrayidx200 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec199, i64 0, i64 5, !dbg !3741
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx200, i64 0, i64 0, !dbg !3741
  %178 = load float, float* %expx, align 4, !dbg !3746
  %179 = load float, float* %expy, align 4, !dbg !3747
  %fneg202 = fneg float %179, !dbg !3748
  %180 = load float, float* %expz, align 4, !dbg !3749
  call void @copy_v3_fl3(float* %arraydecay201, float %178, float %fneg202, float %180), !dbg !3750
  %181 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3751
  %mainb203 = getelementptr inbounds %struct.process, %struct.process* %181, i32 0, i32 2, !dbg !3752
  %182 = load %struct.MetaElem**, %struct.MetaElem*** %mainb203, align 8, !dbg !3752
  %183 = load i32, i32* %a, align 4, !dbg !3753
  %idxprom204 = sext i32 %183 to i64, !dbg !3751
  %arrayidx205 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %182, i64 %idxprom204, !dbg !3751
  %184 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx205, align 8, !dbg !3751
  %bb206 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %184, i32 0, i32 2, !dbg !3754
  %185 = load %struct.BoundBox*, %struct.BoundBox** %bb206, align 8, !dbg !3754
  %vec207 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %185, i32 0, i32 0, !dbg !3755
  %arrayidx208 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec207, i64 0, i64 6, !dbg !3751
  %arraydecay209 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx208, i64 0, i64 0, !dbg !3751
  %186 = load float, float* %expx, align 4, !dbg !3756
  %187 = load float, float* %expy, align 4, !dbg !3757
  %188 = load float, float* %expz, align 4, !dbg !3758
  call void @copy_v3_fl3(float* %arraydecay209, float %186, float %187, float %188), !dbg !3759
  %189 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3760
  %mainb210 = getelementptr inbounds %struct.process, %struct.process* %189, i32 0, i32 2, !dbg !3761
  %190 = load %struct.MetaElem**, %struct.MetaElem*** %mainb210, align 8, !dbg !3761
  %191 = load i32, i32* %a, align 4, !dbg !3762
  %idxprom211 = sext i32 %191 to i64, !dbg !3760
  %arrayidx212 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %190, i64 %idxprom211, !dbg !3760
  %192 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx212, align 8, !dbg !3760
  %bb213 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %192, i32 0, i32 2, !dbg !3763
  %193 = load %struct.BoundBox*, %struct.BoundBox** %bb213, align 8, !dbg !3763
  %vec214 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %193, i32 0, i32 0, !dbg !3764
  %arrayidx215 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec214, i64 0, i64 7, !dbg !3760
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx215, i64 0, i64 0, !dbg !3760
  %194 = load float, float* %expx, align 4, !dbg !3765
  %fneg217 = fneg float %194, !dbg !3766
  %195 = load float, float* %expy, align 4, !dbg !3767
  %196 = load float, float* %expz, align 4, !dbg !3768
  call void @copy_v3_fl3(float* %arraydecay216, float %fneg217, float %195, float %196), !dbg !3769
  store i32 0, i32* %i, align 4, !dbg !3770
  br label %for.cond, !dbg !3772

for.cond:                                         ; preds = %for.inc, %if.end150
  %197 = load i32, i32* %i, align 4, !dbg !3773
  %cmp218 = icmp slt i32 %197, 8, !dbg !3775
  br i1 %cmp218, label %for.body, label %for.end, !dbg !3776

for.body:                                         ; preds = %for.cond
  %198 = load [4 x float]*, [4 x float]** %mat, align 8, !dbg !3777
  %199 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3778
  %mainb220 = getelementptr inbounds %struct.process, %struct.process* %199, i32 0, i32 2, !dbg !3779
  %200 = load %struct.MetaElem**, %struct.MetaElem*** %mainb220, align 8, !dbg !3779
  %201 = load i32, i32* %a, align 4, !dbg !3780
  %idxprom221 = sext i32 %201 to i64, !dbg !3778
  %arrayidx222 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %200, i64 %idxprom221, !dbg !3778
  %202 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx222, align 8, !dbg !3778
  %bb223 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %202, i32 0, i32 2, !dbg !3781
  %203 = load %struct.BoundBox*, %struct.BoundBox** %bb223, align 8, !dbg !3781
  %vec224 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %203, i32 0, i32 0, !dbg !3782
  %204 = load i32, i32* %i, align 4, !dbg !3783
  %idxprom225 = sext i32 %204 to i64, !dbg !3778
  %arrayidx226 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec224, i64 0, i64 %idxprom225, !dbg !3778
  %arraydecay227 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx226, i64 0, i64 0, !dbg !3778
  call void @mul_m4_v3([4 x float]* %198, float* %arraydecay227), !dbg !3784
  br label %for.inc, !dbg !3784

for.inc:                                          ; preds = %for.body
  %205 = load i32, i32* %i, align 4, !dbg !3785
  %inc228 = add nsw i32 %205, 1, !dbg !3785
  store i32 %inc228, i32* %i, align 4, !dbg !3785
  br label %for.cond, !dbg !3786, !llvm.loop !3787

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3789
  br label %for.cond229, !dbg !3791

for.cond229:                                      ; preds = %for.inc353, %for.end
  %206 = load i32, i32* %i, align 4, !dbg !3792
  %cmp230 = icmp slt i32 %206, 8, !dbg !3794
  br i1 %cmp230, label %for.body232, label %for.end355, !dbg !3795

for.body232:                                      ; preds = %for.cond229
  %207 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3796
  %mainb233 = getelementptr inbounds %struct.process, %struct.process* %207, i32 0, i32 2, !dbg !3799
  %208 = load %struct.MetaElem**, %struct.MetaElem*** %mainb233, align 8, !dbg !3799
  %209 = load i32, i32* %a, align 4, !dbg !3800
  %idxprom234 = sext i32 %209 to i64, !dbg !3796
  %arrayidx235 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %208, i64 %idxprom234, !dbg !3796
  %210 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx235, align 8, !dbg !3796
  %bb236 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %210, i32 0, i32 2, !dbg !3801
  %211 = load %struct.BoundBox*, %struct.BoundBox** %bb236, align 8, !dbg !3801
  %vec237 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %211, i32 0, i32 0, !dbg !3802
  %212 = load i32, i32* %i, align 4, !dbg !3803
  %idxprom238 = sext i32 %212 to i64, !dbg !3796
  %arrayidx239 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec237, i64 0, i64 %idxprom238, !dbg !3796
  %arrayidx240 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx239, i64 0, i64 0, !dbg !3796
  %213 = load float, float* %arrayidx240, align 4, !dbg !3796
  %214 = load float, float* %max_x, align 4, !dbg !3804
  %cmp241 = fcmp ogt float %213, %214, !dbg !3805
  br i1 %cmp241, label %if.then243, label %if.end252, !dbg !3806

if.then243:                                       ; preds = %for.body232
  %215 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3807
  %mainb244 = getelementptr inbounds %struct.process, %struct.process* %215, i32 0, i32 2, !dbg !3808
  %216 = load %struct.MetaElem**, %struct.MetaElem*** %mainb244, align 8, !dbg !3808
  %217 = load i32, i32* %a, align 4, !dbg !3809
  %idxprom245 = sext i32 %217 to i64, !dbg !3807
  %arrayidx246 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %216, i64 %idxprom245, !dbg !3807
  %218 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx246, align 8, !dbg !3807
  %bb247 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %218, i32 0, i32 2, !dbg !3810
  %219 = load %struct.BoundBox*, %struct.BoundBox** %bb247, align 8, !dbg !3810
  %vec248 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %219, i32 0, i32 0, !dbg !3811
  %220 = load i32, i32* %i, align 4, !dbg !3812
  %idxprom249 = sext i32 %220 to i64, !dbg !3807
  %arrayidx250 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec248, i64 0, i64 %idxprom249, !dbg !3807
  %arrayidx251 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx250, i64 0, i64 0, !dbg !3807
  %221 = load float, float* %arrayidx251, align 4, !dbg !3807
  store float %221, float* %max_x, align 4, !dbg !3813
  br label %if.end252, !dbg !3814

if.end252:                                        ; preds = %if.then243, %for.body232
  %222 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3815
  %mainb253 = getelementptr inbounds %struct.process, %struct.process* %222, i32 0, i32 2, !dbg !3817
  %223 = load %struct.MetaElem**, %struct.MetaElem*** %mainb253, align 8, !dbg !3817
  %224 = load i32, i32* %a, align 4, !dbg !3818
  %idxprom254 = sext i32 %224 to i64, !dbg !3815
  %arrayidx255 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %223, i64 %idxprom254, !dbg !3815
  %225 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx255, align 8, !dbg !3815
  %bb256 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %225, i32 0, i32 2, !dbg !3819
  %226 = load %struct.BoundBox*, %struct.BoundBox** %bb256, align 8, !dbg !3819
  %vec257 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %226, i32 0, i32 0, !dbg !3820
  %227 = load i32, i32* %i, align 4, !dbg !3821
  %idxprom258 = sext i32 %227 to i64, !dbg !3815
  %arrayidx259 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec257, i64 0, i64 %idxprom258, !dbg !3815
  %arrayidx260 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx259, i64 0, i64 1, !dbg !3815
  %228 = load float, float* %arrayidx260, align 4, !dbg !3815
  %229 = load float, float* %max_y, align 4, !dbg !3822
  %cmp261 = fcmp ogt float %228, %229, !dbg !3823
  br i1 %cmp261, label %if.then263, label %if.end272, !dbg !3824

if.then263:                                       ; preds = %if.end252
  %230 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3825
  %mainb264 = getelementptr inbounds %struct.process, %struct.process* %230, i32 0, i32 2, !dbg !3826
  %231 = load %struct.MetaElem**, %struct.MetaElem*** %mainb264, align 8, !dbg !3826
  %232 = load i32, i32* %a, align 4, !dbg !3827
  %idxprom265 = sext i32 %232 to i64, !dbg !3825
  %arrayidx266 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %231, i64 %idxprom265, !dbg !3825
  %233 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx266, align 8, !dbg !3825
  %bb267 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %233, i32 0, i32 2, !dbg !3828
  %234 = load %struct.BoundBox*, %struct.BoundBox** %bb267, align 8, !dbg !3828
  %vec268 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %234, i32 0, i32 0, !dbg !3829
  %235 = load i32, i32* %i, align 4, !dbg !3830
  %idxprom269 = sext i32 %235 to i64, !dbg !3825
  %arrayidx270 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec268, i64 0, i64 %idxprom269, !dbg !3825
  %arrayidx271 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx270, i64 0, i64 1, !dbg !3825
  %236 = load float, float* %arrayidx271, align 4, !dbg !3825
  store float %236, float* %max_y, align 4, !dbg !3831
  br label %if.end272, !dbg !3832

if.end272:                                        ; preds = %if.then263, %if.end252
  %237 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3833
  %mainb273 = getelementptr inbounds %struct.process, %struct.process* %237, i32 0, i32 2, !dbg !3835
  %238 = load %struct.MetaElem**, %struct.MetaElem*** %mainb273, align 8, !dbg !3835
  %239 = load i32, i32* %a, align 4, !dbg !3836
  %idxprom274 = sext i32 %239 to i64, !dbg !3833
  %arrayidx275 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %238, i64 %idxprom274, !dbg !3833
  %240 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx275, align 8, !dbg !3833
  %bb276 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %240, i32 0, i32 2, !dbg !3837
  %241 = load %struct.BoundBox*, %struct.BoundBox** %bb276, align 8, !dbg !3837
  %vec277 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %241, i32 0, i32 0, !dbg !3838
  %242 = load i32, i32* %i, align 4, !dbg !3839
  %idxprom278 = sext i32 %242 to i64, !dbg !3833
  %arrayidx279 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec277, i64 0, i64 %idxprom278, !dbg !3833
  %arrayidx280 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx279, i64 0, i64 2, !dbg !3833
  %243 = load float, float* %arrayidx280, align 4, !dbg !3833
  %244 = load float, float* %max_z, align 4, !dbg !3840
  %cmp281 = fcmp ogt float %243, %244, !dbg !3841
  br i1 %cmp281, label %if.then283, label %if.end292, !dbg !3842

if.then283:                                       ; preds = %if.end272
  %245 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3843
  %mainb284 = getelementptr inbounds %struct.process, %struct.process* %245, i32 0, i32 2, !dbg !3844
  %246 = load %struct.MetaElem**, %struct.MetaElem*** %mainb284, align 8, !dbg !3844
  %247 = load i32, i32* %a, align 4, !dbg !3845
  %idxprom285 = sext i32 %247 to i64, !dbg !3843
  %arrayidx286 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %246, i64 %idxprom285, !dbg !3843
  %248 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx286, align 8, !dbg !3843
  %bb287 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %248, i32 0, i32 2, !dbg !3846
  %249 = load %struct.BoundBox*, %struct.BoundBox** %bb287, align 8, !dbg !3846
  %vec288 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %249, i32 0, i32 0, !dbg !3847
  %250 = load i32, i32* %i, align 4, !dbg !3848
  %idxprom289 = sext i32 %250 to i64, !dbg !3843
  %arrayidx290 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec288, i64 0, i64 %idxprom289, !dbg !3843
  %arrayidx291 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx290, i64 0, i64 2, !dbg !3843
  %251 = load float, float* %arrayidx291, align 4, !dbg !3843
  store float %251, float* %max_z, align 4, !dbg !3849
  br label %if.end292, !dbg !3850

if.end292:                                        ; preds = %if.then283, %if.end272
  %252 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3851
  %mainb293 = getelementptr inbounds %struct.process, %struct.process* %252, i32 0, i32 2, !dbg !3853
  %253 = load %struct.MetaElem**, %struct.MetaElem*** %mainb293, align 8, !dbg !3853
  %254 = load i32, i32* %a, align 4, !dbg !3854
  %idxprom294 = sext i32 %254 to i64, !dbg !3851
  %arrayidx295 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %253, i64 %idxprom294, !dbg !3851
  %255 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx295, align 8, !dbg !3851
  %bb296 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %255, i32 0, i32 2, !dbg !3855
  %256 = load %struct.BoundBox*, %struct.BoundBox** %bb296, align 8, !dbg !3855
  %vec297 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %256, i32 0, i32 0, !dbg !3856
  %257 = load i32, i32* %i, align 4, !dbg !3857
  %idxprom298 = sext i32 %257 to i64, !dbg !3851
  %arrayidx299 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec297, i64 0, i64 %idxprom298, !dbg !3851
  %arrayidx300 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx299, i64 0, i64 0, !dbg !3851
  %258 = load float, float* %arrayidx300, align 4, !dbg !3851
  %259 = load float, float* %min_x, align 4, !dbg !3858
  %cmp301 = fcmp olt float %258, %259, !dbg !3859
  br i1 %cmp301, label %if.then303, label %if.end312, !dbg !3860

if.then303:                                       ; preds = %if.end292
  %260 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3861
  %mainb304 = getelementptr inbounds %struct.process, %struct.process* %260, i32 0, i32 2, !dbg !3862
  %261 = load %struct.MetaElem**, %struct.MetaElem*** %mainb304, align 8, !dbg !3862
  %262 = load i32, i32* %a, align 4, !dbg !3863
  %idxprom305 = sext i32 %262 to i64, !dbg !3861
  %arrayidx306 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %261, i64 %idxprom305, !dbg !3861
  %263 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx306, align 8, !dbg !3861
  %bb307 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %263, i32 0, i32 2, !dbg !3864
  %264 = load %struct.BoundBox*, %struct.BoundBox** %bb307, align 8, !dbg !3864
  %vec308 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %264, i32 0, i32 0, !dbg !3865
  %265 = load i32, i32* %i, align 4, !dbg !3866
  %idxprom309 = sext i32 %265 to i64, !dbg !3861
  %arrayidx310 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec308, i64 0, i64 %idxprom309, !dbg !3861
  %arrayidx311 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx310, i64 0, i64 0, !dbg !3861
  %266 = load float, float* %arrayidx311, align 4, !dbg !3861
  store float %266, float* %min_x, align 4, !dbg !3867
  br label %if.end312, !dbg !3868

if.end312:                                        ; preds = %if.then303, %if.end292
  %267 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3869
  %mainb313 = getelementptr inbounds %struct.process, %struct.process* %267, i32 0, i32 2, !dbg !3871
  %268 = load %struct.MetaElem**, %struct.MetaElem*** %mainb313, align 8, !dbg !3871
  %269 = load i32, i32* %a, align 4, !dbg !3872
  %idxprom314 = sext i32 %269 to i64, !dbg !3869
  %arrayidx315 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %268, i64 %idxprom314, !dbg !3869
  %270 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx315, align 8, !dbg !3869
  %bb316 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %270, i32 0, i32 2, !dbg !3873
  %271 = load %struct.BoundBox*, %struct.BoundBox** %bb316, align 8, !dbg !3873
  %vec317 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %271, i32 0, i32 0, !dbg !3874
  %272 = load i32, i32* %i, align 4, !dbg !3875
  %idxprom318 = sext i32 %272 to i64, !dbg !3869
  %arrayidx319 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec317, i64 0, i64 %idxprom318, !dbg !3869
  %arrayidx320 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx319, i64 0, i64 1, !dbg !3869
  %273 = load float, float* %arrayidx320, align 4, !dbg !3869
  %274 = load float, float* %min_y, align 4, !dbg !3876
  %cmp321 = fcmp olt float %273, %274, !dbg !3877
  br i1 %cmp321, label %if.then323, label %if.end332, !dbg !3878

if.then323:                                       ; preds = %if.end312
  %275 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3879
  %mainb324 = getelementptr inbounds %struct.process, %struct.process* %275, i32 0, i32 2, !dbg !3880
  %276 = load %struct.MetaElem**, %struct.MetaElem*** %mainb324, align 8, !dbg !3880
  %277 = load i32, i32* %a, align 4, !dbg !3881
  %idxprom325 = sext i32 %277 to i64, !dbg !3879
  %arrayidx326 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %276, i64 %idxprom325, !dbg !3879
  %278 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx326, align 8, !dbg !3879
  %bb327 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %278, i32 0, i32 2, !dbg !3882
  %279 = load %struct.BoundBox*, %struct.BoundBox** %bb327, align 8, !dbg !3882
  %vec328 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %279, i32 0, i32 0, !dbg !3883
  %280 = load i32, i32* %i, align 4, !dbg !3884
  %idxprom329 = sext i32 %280 to i64, !dbg !3879
  %arrayidx330 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec328, i64 0, i64 %idxprom329, !dbg !3879
  %arrayidx331 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx330, i64 0, i64 1, !dbg !3879
  %281 = load float, float* %arrayidx331, align 4, !dbg !3879
  store float %281, float* %min_y, align 4, !dbg !3885
  br label %if.end332, !dbg !3886

if.end332:                                        ; preds = %if.then323, %if.end312
  %282 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3887
  %mainb333 = getelementptr inbounds %struct.process, %struct.process* %282, i32 0, i32 2, !dbg !3889
  %283 = load %struct.MetaElem**, %struct.MetaElem*** %mainb333, align 8, !dbg !3889
  %284 = load i32, i32* %a, align 4, !dbg !3890
  %idxprom334 = sext i32 %284 to i64, !dbg !3887
  %arrayidx335 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %283, i64 %idxprom334, !dbg !3887
  %285 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx335, align 8, !dbg !3887
  %bb336 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %285, i32 0, i32 2, !dbg !3891
  %286 = load %struct.BoundBox*, %struct.BoundBox** %bb336, align 8, !dbg !3891
  %vec337 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %286, i32 0, i32 0, !dbg !3892
  %287 = load i32, i32* %i, align 4, !dbg !3893
  %idxprom338 = sext i32 %287 to i64, !dbg !3887
  %arrayidx339 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec337, i64 0, i64 %idxprom338, !dbg !3887
  %arrayidx340 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx339, i64 0, i64 2, !dbg !3887
  %288 = load float, float* %arrayidx340, align 4, !dbg !3887
  %289 = load float, float* %min_z, align 4, !dbg !3894
  %cmp341 = fcmp olt float %288, %289, !dbg !3895
  br i1 %cmp341, label %if.then343, label %if.end352, !dbg !3896

if.then343:                                       ; preds = %if.end332
  %290 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3897
  %mainb344 = getelementptr inbounds %struct.process, %struct.process* %290, i32 0, i32 2, !dbg !3898
  %291 = load %struct.MetaElem**, %struct.MetaElem*** %mainb344, align 8, !dbg !3898
  %292 = load i32, i32* %a, align 4, !dbg !3899
  %idxprom345 = sext i32 %292 to i64, !dbg !3897
  %arrayidx346 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %291, i64 %idxprom345, !dbg !3897
  %293 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx346, align 8, !dbg !3897
  %bb347 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %293, i32 0, i32 2, !dbg !3900
  %294 = load %struct.BoundBox*, %struct.BoundBox** %bb347, align 8, !dbg !3900
  %vec348 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %294, i32 0, i32 0, !dbg !3901
  %295 = load i32, i32* %i, align 4, !dbg !3902
  %idxprom349 = sext i32 %295 to i64, !dbg !3897
  %arrayidx350 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec348, i64 0, i64 %idxprom349, !dbg !3897
  %arrayidx351 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx350, i64 0, i64 2, !dbg !3897
  %296 = load float, float* %arrayidx351, align 4, !dbg !3897
  store float %296, float* %min_z, align 4, !dbg !3903
  br label %if.end352, !dbg !3904

if.end352:                                        ; preds = %if.then343, %if.end332
  br label %for.inc353, !dbg !3905

for.inc353:                                       ; preds = %if.end352
  %297 = load i32, i32* %i, align 4, !dbg !3906
  %inc354 = add nsw i32 %297, 1, !dbg !3906
  store i32 %inc354, i32* %i, align 4, !dbg !3906
  br label %for.cond229, !dbg !3907, !llvm.loop !3908

for.end355:                                       ; preds = %for.cond229
  %298 = load float, float* %min_x, align 4, !dbg !3910
  %299 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3911
  %rad356 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %299, i32 0, i32 14, !dbg !3912
  %300 = load float, float* %rad356, align 8, !dbg !3912
  %sub357 = fsub float %298, %300, !dbg !3913
  %301 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3914
  %mainb358 = getelementptr inbounds %struct.process, %struct.process* %301, i32 0, i32 2, !dbg !3915
  %302 = load %struct.MetaElem**, %struct.MetaElem*** %mainb358, align 8, !dbg !3915
  %303 = load i32, i32* %a, align 4, !dbg !3916
  %idxprom359 = sext i32 %303 to i64, !dbg !3914
  %arrayidx360 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %302, i64 %idxprom359, !dbg !3914
  %304 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx360, align 8, !dbg !3914
  %bb361 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %304, i32 0, i32 2, !dbg !3917
  %305 = load %struct.BoundBox*, %struct.BoundBox** %bb361, align 8, !dbg !3917
  %vec362 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %305, i32 0, i32 0, !dbg !3918
  %arrayidx363 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec362, i64 0, i64 0, !dbg !3914
  %arrayidx364 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx363, i64 0, i64 0, !dbg !3914
  store float %sub357, float* %arrayidx364, align 4, !dbg !3919
  %306 = load float, float* %min_y, align 4, !dbg !3920
  %307 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3921
  %rad365 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %307, i32 0, i32 14, !dbg !3922
  %308 = load float, float* %rad365, align 8, !dbg !3922
  %sub366 = fsub float %306, %308, !dbg !3923
  %309 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3924
  %mainb367 = getelementptr inbounds %struct.process, %struct.process* %309, i32 0, i32 2, !dbg !3925
  %310 = load %struct.MetaElem**, %struct.MetaElem*** %mainb367, align 8, !dbg !3925
  %311 = load i32, i32* %a, align 4, !dbg !3926
  %idxprom368 = sext i32 %311 to i64, !dbg !3924
  %arrayidx369 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %310, i64 %idxprom368, !dbg !3924
  %312 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx369, align 8, !dbg !3924
  %bb370 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %312, i32 0, i32 2, !dbg !3927
  %313 = load %struct.BoundBox*, %struct.BoundBox** %bb370, align 8, !dbg !3927
  %vec371 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %313, i32 0, i32 0, !dbg !3928
  %arrayidx372 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec371, i64 0, i64 0, !dbg !3924
  %arrayidx373 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx372, i64 0, i64 1, !dbg !3924
  store float %sub366, float* %arrayidx373, align 4, !dbg !3929
  %314 = load float, float* %min_z, align 4, !dbg !3930
  %315 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3931
  %rad374 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %315, i32 0, i32 14, !dbg !3932
  %316 = load float, float* %rad374, align 8, !dbg !3932
  %sub375 = fsub float %314, %316, !dbg !3933
  %317 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3934
  %mainb376 = getelementptr inbounds %struct.process, %struct.process* %317, i32 0, i32 2, !dbg !3935
  %318 = load %struct.MetaElem**, %struct.MetaElem*** %mainb376, align 8, !dbg !3935
  %319 = load i32, i32* %a, align 4, !dbg !3936
  %idxprom377 = sext i32 %319 to i64, !dbg !3934
  %arrayidx378 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %318, i64 %idxprom377, !dbg !3934
  %320 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx378, align 8, !dbg !3934
  %bb379 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %320, i32 0, i32 2, !dbg !3937
  %321 = load %struct.BoundBox*, %struct.BoundBox** %bb379, align 8, !dbg !3937
  %vec380 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %321, i32 0, i32 0, !dbg !3938
  %arrayidx381 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec380, i64 0, i64 0, !dbg !3934
  %arrayidx382 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx381, i64 0, i64 2, !dbg !3934
  store float %sub375, float* %arrayidx382, align 4, !dbg !3939
  %322 = load float, float* %max_x, align 4, !dbg !3940
  %323 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3941
  %rad383 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %323, i32 0, i32 14, !dbg !3942
  %324 = load float, float* %rad383, align 8, !dbg !3942
  %add = fadd float %322, %324, !dbg !3943
  %325 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3944
  %mainb384 = getelementptr inbounds %struct.process, %struct.process* %325, i32 0, i32 2, !dbg !3945
  %326 = load %struct.MetaElem**, %struct.MetaElem*** %mainb384, align 8, !dbg !3945
  %327 = load i32, i32* %a, align 4, !dbg !3946
  %idxprom385 = sext i32 %327 to i64, !dbg !3944
  %arrayidx386 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %326, i64 %idxprom385, !dbg !3944
  %328 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx386, align 8, !dbg !3944
  %bb387 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %328, i32 0, i32 2, !dbg !3947
  %329 = load %struct.BoundBox*, %struct.BoundBox** %bb387, align 8, !dbg !3947
  %vec388 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %329, i32 0, i32 0, !dbg !3948
  %arrayidx389 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec388, i64 0, i64 6, !dbg !3944
  %arrayidx390 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx389, i64 0, i64 0, !dbg !3944
  store float %add, float* %arrayidx390, align 4, !dbg !3949
  %330 = load float, float* %max_y, align 4, !dbg !3950
  %331 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3951
  %rad391 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %331, i32 0, i32 14, !dbg !3952
  %332 = load float, float* %rad391, align 8, !dbg !3952
  %add392 = fadd float %330, %332, !dbg !3953
  %333 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3954
  %mainb393 = getelementptr inbounds %struct.process, %struct.process* %333, i32 0, i32 2, !dbg !3955
  %334 = load %struct.MetaElem**, %struct.MetaElem*** %mainb393, align 8, !dbg !3955
  %335 = load i32, i32* %a, align 4, !dbg !3956
  %idxprom394 = sext i32 %335 to i64, !dbg !3954
  %arrayidx395 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %334, i64 %idxprom394, !dbg !3954
  %336 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx395, align 8, !dbg !3954
  %bb396 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %336, i32 0, i32 2, !dbg !3957
  %337 = load %struct.BoundBox*, %struct.BoundBox** %bb396, align 8, !dbg !3957
  %vec397 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %337, i32 0, i32 0, !dbg !3958
  %arrayidx398 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec397, i64 0, i64 6, !dbg !3954
  %arrayidx399 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx398, i64 0, i64 1, !dbg !3954
  store float %add392, float* %arrayidx399, align 4, !dbg !3959
  %338 = load float, float* %max_z, align 4, !dbg !3960
  %339 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3961
  %rad400 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %339, i32 0, i32 14, !dbg !3962
  %340 = load float, float* %rad400, align 8, !dbg !3962
  %add401 = fadd float %338, %340, !dbg !3963
  %341 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3964
  %mainb402 = getelementptr inbounds %struct.process, %struct.process* %341, i32 0, i32 2, !dbg !3965
  %342 = load %struct.MetaElem**, %struct.MetaElem*** %mainb402, align 8, !dbg !3965
  %343 = load i32, i32* %a, align 4, !dbg !3966
  %idxprom403 = sext i32 %343 to i64, !dbg !3964
  %arrayidx404 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %342, i64 %idxprom403, !dbg !3964
  %344 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx404, align 8, !dbg !3964
  %bb405 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %344, i32 0, i32 2, !dbg !3967
  %345 = load %struct.BoundBox*, %struct.BoundBox** %bb405, align 8, !dbg !3967
  %vec406 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %345, i32 0, i32 0, !dbg !3968
  %arrayidx407 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec406, i64 0, i64 6, !dbg !3964
  %arrayidx408 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx407, i64 0, i64 2, !dbg !3964
  store float %add401, float* %arrayidx408, align 4, !dbg !3969
  %346 = load i32, i32* %a, align 4, !dbg !3970
  %inc409 = add nsw i32 %346, 1, !dbg !3970
  store i32 %inc409, i32* %a, align 4, !dbg !3970
  br label %if.end410, !dbg !3971

if.end410:                                        ; preds = %for.end355, %while.body77
  %347 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !3972
  %next411 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %347, i32 0, i32 0, !dbg !3973
  %348 = load %struct.MetaElem*, %struct.MetaElem** %next411, align 8, !dbg !3973
  store %struct.MetaElem* %348, %struct.MetaElem** %ml, align 8, !dbg !3974
  br label %while.cond75, !dbg !3514, !llvm.loop !3975

while.end412:                                     ; preds = %while.cond75
  br label %if.end413

if.end413:                                        ; preds = %while.end412, %while.end73
  br label %if.end414, !dbg !3977

if.end414:                                        ; preds = %if.end413, %while.body
  br label %while.cond, !dbg !3385, !llvm.loop !3978

while.end415:                                     ; preds = %while.cond
  store float 0.000000e+00, float* %totsize, align 4, !dbg !3980
  store i32 0, i32* %a, align 4, !dbg !3981
  br label %for.cond416, !dbg !3983

for.cond416:                                      ; preds = %for.inc534, %while.end415
  %349 = load i32, i32* %a, align 4, !dbg !3984
  %350 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3986
  %totelem417 = getelementptr inbounds %struct.process, %struct.process* %350, i32 0, i32 1, !dbg !3987
  %351 = load i32, i32* %totelem417, align 4, !dbg !3987
  %cmp418 = icmp slt i32 %349, %351, !dbg !3988
  br i1 %cmp418, label %for.body420, label %for.end536, !dbg !3989

for.body420:                                      ; preds = %for.cond416
  %352 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3990
  %mainb421 = getelementptr inbounds %struct.process, %struct.process* %352, i32 0, i32 2, !dbg !3992
  %353 = load %struct.MetaElem**, %struct.MetaElem*** %mainb421, align 8, !dbg !3992
  %354 = load i32, i32* %a, align 4, !dbg !3993
  %idxprom422 = sext i32 %354 to i64, !dbg !3990
  %arrayidx423 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %353, i64 %idxprom422, !dbg !3990
  %355 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx423, align 8, !dbg !3990
  %x424 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %355, i32 0, i32 7, !dbg !3994
  %356 = load float, float* %x424, align 8, !dbg !3994
  %357 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !3995
  %mainb425 = getelementptr inbounds %struct.process, %struct.process* %357, i32 0, i32 2, !dbg !3996
  %358 = load %struct.MetaElem**, %struct.MetaElem*** %mainb425, align 8, !dbg !3996
  %359 = load i32, i32* %a, align 4, !dbg !3997
  %idxprom426 = sext i32 %359 to i64, !dbg !3995
  %arrayidx427 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %358, i64 %idxprom426, !dbg !3995
  %360 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx427, align 8, !dbg !3995
  %rad428 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %360, i32 0, i32 14, !dbg !3998
  %361 = load float, float* %rad428, align 8, !dbg !3998
  %add429 = fadd float %356, %361, !dbg !3999
  %362 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4000
  %mainb430 = getelementptr inbounds %struct.process, %struct.process* %362, i32 0, i32 2, !dbg !4001
  %363 = load %struct.MetaElem**, %struct.MetaElem*** %mainb430, align 8, !dbg !4001
  %364 = load i32, i32* %a, align 4, !dbg !4002
  %idxprom431 = sext i32 %364 to i64, !dbg !4000
  %arrayidx432 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %363, i64 %idxprom431, !dbg !4000
  %365 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx432, align 8, !dbg !4000
  %expx433 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %365, i32 0, i32 11, !dbg !4003
  %366 = load float, float* %expx433, align 4, !dbg !4003
  %add434 = fadd float %add429, %366, !dbg !4004
  %arrayidx435 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4005
  store float %add434, float* %arrayidx435, align 4, !dbg !4006
  %367 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4007
  %mainb436 = getelementptr inbounds %struct.process, %struct.process* %367, i32 0, i32 2, !dbg !4008
  %368 = load %struct.MetaElem**, %struct.MetaElem*** %mainb436, align 8, !dbg !4008
  %369 = load i32, i32* %a, align 4, !dbg !4009
  %idxprom437 = sext i32 %369 to i64, !dbg !4007
  %arrayidx438 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %368, i64 %idxprom437, !dbg !4007
  %370 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx438, align 8, !dbg !4007
  %y439 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %370, i32 0, i32 8, !dbg !4010
  %371 = load float, float* %y439, align 4, !dbg !4010
  %372 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4011
  %mainb440 = getelementptr inbounds %struct.process, %struct.process* %372, i32 0, i32 2, !dbg !4012
  %373 = load %struct.MetaElem**, %struct.MetaElem*** %mainb440, align 8, !dbg !4012
  %374 = load i32, i32* %a, align 4, !dbg !4013
  %idxprom441 = sext i32 %374 to i64, !dbg !4011
  %arrayidx442 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %373, i64 %idxprom441, !dbg !4011
  %375 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx442, align 8, !dbg !4011
  %rad443 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %375, i32 0, i32 14, !dbg !4014
  %376 = load float, float* %rad443, align 8, !dbg !4014
  %add444 = fadd float %371, %376, !dbg !4015
  %377 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4016
  %mainb445 = getelementptr inbounds %struct.process, %struct.process* %377, i32 0, i32 2, !dbg !4017
  %378 = load %struct.MetaElem**, %struct.MetaElem*** %mainb445, align 8, !dbg !4017
  %379 = load i32, i32* %a, align 4, !dbg !4018
  %idxprom446 = sext i32 %379 to i64, !dbg !4016
  %arrayidx447 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %378, i64 %idxprom446, !dbg !4016
  %380 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx447, align 8, !dbg !4016
  %expy448 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %380, i32 0, i32 12, !dbg !4019
  %381 = load float, float* %expy448, align 8, !dbg !4019
  %add449 = fadd float %add444, %381, !dbg !4020
  %arrayidx450 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !4021
  store float %add449, float* %arrayidx450, align 4, !dbg !4022
  %382 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4023
  %mainb451 = getelementptr inbounds %struct.process, %struct.process* %382, i32 0, i32 2, !dbg !4024
  %383 = load %struct.MetaElem**, %struct.MetaElem*** %mainb451, align 8, !dbg !4024
  %384 = load i32, i32* %a, align 4, !dbg !4025
  %idxprom452 = sext i32 %384 to i64, !dbg !4023
  %arrayidx453 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %383, i64 %idxprom452, !dbg !4023
  %385 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx453, align 8, !dbg !4023
  %z454 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %385, i32 0, i32 9, !dbg !4026
  %386 = load float, float* %z454, align 8, !dbg !4026
  %387 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4027
  %mainb455 = getelementptr inbounds %struct.process, %struct.process* %387, i32 0, i32 2, !dbg !4028
  %388 = load %struct.MetaElem**, %struct.MetaElem*** %mainb455, align 8, !dbg !4028
  %389 = load i32, i32* %a, align 4, !dbg !4029
  %idxprom456 = sext i32 %389 to i64, !dbg !4027
  %arrayidx457 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %388, i64 %idxprom456, !dbg !4027
  %390 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx457, align 8, !dbg !4027
  %rad458 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %390, i32 0, i32 14, !dbg !4030
  %391 = load float, float* %rad458, align 8, !dbg !4030
  %add459 = fadd float %386, %391, !dbg !4031
  %392 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4032
  %mainb460 = getelementptr inbounds %struct.process, %struct.process* %392, i32 0, i32 2, !dbg !4033
  %393 = load %struct.MetaElem**, %struct.MetaElem*** %mainb460, align 8, !dbg !4033
  %394 = load i32, i32* %a, align 4, !dbg !4034
  %idxprom461 = sext i32 %394 to i64, !dbg !4032
  %arrayidx462 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %393, i64 %idxprom461, !dbg !4032
  %395 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx462, align 8, !dbg !4032
  %expz463 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %395, i32 0, i32 13, !dbg !4035
  %396 = load float, float* %expz463, align 4, !dbg !4035
  %add464 = fadd float %add459, %396, !dbg !4036
  %arrayidx465 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !4037
  store float %add464, float* %arrayidx465, align 4, !dbg !4038
  %397 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4039
  %mainb466 = getelementptr inbounds %struct.process, %struct.process* %397, i32 0, i32 2, !dbg !4040
  %398 = load %struct.MetaElem**, %struct.MetaElem*** %mainb466, align 8, !dbg !4040
  %399 = load i32, i32* %a, align 4, !dbg !4041
  %idxprom467 = sext i32 %399 to i64, !dbg !4039
  %arrayidx468 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %398, i64 %idxprom467, !dbg !4039
  %400 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx468, align 8, !dbg !4039
  %arraydecay469 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4042
  call void @calc_mballco(%struct.MetaElem* %400, float* %arraydecay469), !dbg !4043
  %arrayidx470 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4044
  %401 = load float, float* %arrayidx470, align 4, !dbg !4044
  %402 = call float @llvm.fabs.f32(float %401), !dbg !4045
  store float %402, float* %size, align 4, !dbg !4046
  %403 = load float, float* %size, align 4, !dbg !4047
  %404 = load float, float* %totsize, align 4, !dbg !4049
  %cmp471 = fcmp ogt float %403, %404, !dbg !4050
  br i1 %cmp471, label %if.then473, label %if.end474, !dbg !4051

if.then473:                                       ; preds = %for.body420
  %405 = load float, float* %size, align 4, !dbg !4052
  store float %405, float* %totsize, align 4, !dbg !4053
  br label %if.end474, !dbg !4054

if.end474:                                        ; preds = %if.then473, %for.body420
  %arrayidx475 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !4055
  %406 = load float, float* %arrayidx475, align 4, !dbg !4055
  %407 = call float @llvm.fabs.f32(float %406), !dbg !4056
  store float %407, float* %size, align 4, !dbg !4057
  %408 = load float, float* %size, align 4, !dbg !4058
  %409 = load float, float* %totsize, align 4, !dbg !4060
  %cmp476 = fcmp ogt float %408, %409, !dbg !4061
  br i1 %cmp476, label %if.then478, label %if.end479, !dbg !4062

if.then478:                                       ; preds = %if.end474
  %410 = load float, float* %size, align 4, !dbg !4063
  store float %410, float* %totsize, align 4, !dbg !4064
  br label %if.end479, !dbg !4065

if.end479:                                        ; preds = %if.then478, %if.end474
  %arrayidx480 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !4066
  %411 = load float, float* %arrayidx480, align 4, !dbg !4066
  %412 = call float @llvm.fabs.f32(float %411), !dbg !4067
  store float %412, float* %size, align 4, !dbg !4068
  %413 = load float, float* %size, align 4, !dbg !4069
  %414 = load float, float* %totsize, align 4, !dbg !4071
  %cmp481 = fcmp ogt float %413, %414, !dbg !4072
  br i1 %cmp481, label %if.then483, label %if.end484, !dbg !4073

if.then483:                                       ; preds = %if.end479
  %415 = load float, float* %size, align 4, !dbg !4074
  store float %415, float* %totsize, align 4, !dbg !4075
  br label %if.end484, !dbg !4076

if.end484:                                        ; preds = %if.then483, %if.end479
  %416 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4077
  %mainb485 = getelementptr inbounds %struct.process, %struct.process* %416, i32 0, i32 2, !dbg !4078
  %417 = load %struct.MetaElem**, %struct.MetaElem*** %mainb485, align 8, !dbg !4078
  %418 = load i32, i32* %a, align 4, !dbg !4079
  %idxprom486 = sext i32 %418 to i64, !dbg !4077
  %arrayidx487 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %417, i64 %idxprom486, !dbg !4077
  %419 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx487, align 8, !dbg !4077
  %x488 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %419, i32 0, i32 7, !dbg !4080
  %420 = load float, float* %x488, align 8, !dbg !4080
  %421 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4081
  %mainb489 = getelementptr inbounds %struct.process, %struct.process* %421, i32 0, i32 2, !dbg !4082
  %422 = load %struct.MetaElem**, %struct.MetaElem*** %mainb489, align 8, !dbg !4082
  %423 = load i32, i32* %a, align 4, !dbg !4083
  %idxprom490 = sext i32 %423 to i64, !dbg !4081
  %arrayidx491 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %422, i64 %idxprom490, !dbg !4081
  %424 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx491, align 8, !dbg !4081
  %rad492 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %424, i32 0, i32 14, !dbg !4084
  %425 = load float, float* %rad492, align 8, !dbg !4084
  %sub493 = fsub float %420, %425, !dbg !4085
  %arrayidx494 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4086
  store float %sub493, float* %arrayidx494, align 4, !dbg !4087
  %426 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4088
  %mainb495 = getelementptr inbounds %struct.process, %struct.process* %426, i32 0, i32 2, !dbg !4089
  %427 = load %struct.MetaElem**, %struct.MetaElem*** %mainb495, align 8, !dbg !4089
  %428 = load i32, i32* %a, align 4, !dbg !4090
  %idxprom496 = sext i32 %428 to i64, !dbg !4088
  %arrayidx497 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %427, i64 %idxprom496, !dbg !4088
  %429 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx497, align 8, !dbg !4088
  %y498 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %429, i32 0, i32 8, !dbg !4091
  %430 = load float, float* %y498, align 4, !dbg !4091
  %431 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4092
  %mainb499 = getelementptr inbounds %struct.process, %struct.process* %431, i32 0, i32 2, !dbg !4093
  %432 = load %struct.MetaElem**, %struct.MetaElem*** %mainb499, align 8, !dbg !4093
  %433 = load i32, i32* %a, align 4, !dbg !4094
  %idxprom500 = sext i32 %433 to i64, !dbg !4092
  %arrayidx501 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %432, i64 %idxprom500, !dbg !4092
  %434 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx501, align 8, !dbg !4092
  %rad502 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %434, i32 0, i32 14, !dbg !4095
  %435 = load float, float* %rad502, align 8, !dbg !4095
  %sub503 = fsub float %430, %435, !dbg !4096
  %arrayidx504 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !4097
  store float %sub503, float* %arrayidx504, align 4, !dbg !4098
  %436 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4099
  %mainb505 = getelementptr inbounds %struct.process, %struct.process* %436, i32 0, i32 2, !dbg !4100
  %437 = load %struct.MetaElem**, %struct.MetaElem*** %mainb505, align 8, !dbg !4100
  %438 = load i32, i32* %a, align 4, !dbg !4101
  %idxprom506 = sext i32 %438 to i64, !dbg !4099
  %arrayidx507 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %437, i64 %idxprom506, !dbg !4099
  %439 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx507, align 8, !dbg !4099
  %z508 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %439, i32 0, i32 9, !dbg !4102
  %440 = load float, float* %z508, align 8, !dbg !4102
  %441 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4103
  %mainb509 = getelementptr inbounds %struct.process, %struct.process* %441, i32 0, i32 2, !dbg !4104
  %442 = load %struct.MetaElem**, %struct.MetaElem*** %mainb509, align 8, !dbg !4104
  %443 = load i32, i32* %a, align 4, !dbg !4105
  %idxprom510 = sext i32 %443 to i64, !dbg !4103
  %arrayidx511 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %442, i64 %idxprom510, !dbg !4103
  %444 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx511, align 8, !dbg !4103
  %rad512 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %444, i32 0, i32 14, !dbg !4106
  %445 = load float, float* %rad512, align 8, !dbg !4106
  %sub513 = fsub float %440, %445, !dbg !4107
  %arrayidx514 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !4108
  store float %sub513, float* %arrayidx514, align 4, !dbg !4109
  %446 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4110
  %mainb515 = getelementptr inbounds %struct.process, %struct.process* %446, i32 0, i32 2, !dbg !4111
  %447 = load %struct.MetaElem**, %struct.MetaElem*** %mainb515, align 8, !dbg !4111
  %448 = load i32, i32* %a, align 4, !dbg !4112
  %idxprom516 = sext i32 %448 to i64, !dbg !4110
  %arrayidx517 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %447, i64 %idxprom516, !dbg !4110
  %449 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx517, align 8, !dbg !4110
  %arraydecay518 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4113
  call void @calc_mballco(%struct.MetaElem* %449, float* %arraydecay518), !dbg !4114
  %arrayidx519 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4115
  %450 = load float, float* %arrayidx519, align 4, !dbg !4115
  %451 = call float @llvm.fabs.f32(float %450), !dbg !4116
  store float %451, float* %size, align 4, !dbg !4117
  %452 = load float, float* %size, align 4, !dbg !4118
  %453 = load float, float* %totsize, align 4, !dbg !4120
  %cmp520 = fcmp ogt float %452, %453, !dbg !4121
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !4122

if.then522:                                       ; preds = %if.end484
  %454 = load float, float* %size, align 4, !dbg !4123
  store float %454, float* %totsize, align 4, !dbg !4124
  br label %if.end523, !dbg !4125

if.end523:                                        ; preds = %if.then522, %if.end484
  %arrayidx524 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !4126
  %455 = load float, float* %arrayidx524, align 4, !dbg !4126
  %456 = call float @llvm.fabs.f32(float %455), !dbg !4127
  store float %456, float* %size, align 4, !dbg !4128
  %457 = load float, float* %size, align 4, !dbg !4129
  %458 = load float, float* %totsize, align 4, !dbg !4131
  %cmp525 = fcmp ogt float %457, %458, !dbg !4132
  br i1 %cmp525, label %if.then527, label %if.end528, !dbg !4133

if.then527:                                       ; preds = %if.end523
  %459 = load float, float* %size, align 4, !dbg !4134
  store float %459, float* %totsize, align 4, !dbg !4135
  br label %if.end528, !dbg !4136

if.end528:                                        ; preds = %if.then527, %if.end523
  %arrayidx529 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !4137
  %460 = load float, float* %arrayidx529, align 4, !dbg !4137
  %461 = call float @llvm.fabs.f32(float %460), !dbg !4138
  store float %461, float* %size, align 4, !dbg !4139
  %462 = load float, float* %size, align 4, !dbg !4140
  %463 = load float, float* %totsize, align 4, !dbg !4142
  %cmp530 = fcmp ogt float %462, %463, !dbg !4143
  br i1 %cmp530, label %if.then532, label %if.end533, !dbg !4144

if.then532:                                       ; preds = %if.end528
  %464 = load float, float* %size, align 4, !dbg !4145
  store float %464, float* %totsize, align 4, !dbg !4146
  br label %if.end533, !dbg !4147

if.end533:                                        ; preds = %if.then532, %if.end528
  br label %for.inc534, !dbg !4148

for.inc534:                                       ; preds = %if.end533
  %465 = load i32, i32* %a, align 4, !dbg !4149
  %inc535 = add nsw i32 %465, 1, !dbg !4149
  store i32 %inc535, i32* %a, align 4, !dbg !4149
  br label %for.cond416, !dbg !4150, !llvm.loop !4151

for.end536:                                       ; preds = %for.cond416
  store i32 0, i32* %a, align 4, !dbg !4153
  br label %for.cond537, !dbg !4155

for.cond537:                                      ; preds = %for.inc550, %for.end536
  %466 = load i32, i32* %a, align 4, !dbg !4156
  %467 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4158
  %totelem538 = getelementptr inbounds %struct.process, %struct.process* %467, i32 0, i32 1, !dbg !4159
  %468 = load i32, i32* %totelem538, align 4, !dbg !4159
  %cmp539 = icmp slt i32 %466, %468, !dbg !4160
  br i1 %cmp539, label %for.body541, label %for.end552, !dbg !4161

for.body541:                                      ; preds = %for.cond537
  %469 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4162
  %mainb542 = getelementptr inbounds %struct.process, %struct.process* %469, i32 0, i32 2, !dbg !4164
  %470 = load %struct.MetaElem**, %struct.MetaElem*** %mainb542, align 8, !dbg !4164
  %471 = load i32, i32* %a, align 4, !dbg !4165
  %idxprom543 = sext i32 %471 to i64, !dbg !4162
  %arrayidx544 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %470, i64 %idxprom543, !dbg !4162
  %472 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx544, align 8, !dbg !4162
  %473 = load float, float* %totsize, align 4, !dbg !4166
  %mul545 = fmul float 2.000000e+00, %473, !dbg !4167
  %474 = load float, float* %totsize, align 4, !dbg !4168
  %mul546 = fmul float 2.000000e+00, %474, !dbg !4169
  %475 = load float, float* %totsize, align 4, !dbg !4170
  %mul547 = fmul float 2.000000e+00, %475, !dbg !4171
  %call548 = call float @densfunc(%struct.MetaElem* %472, float %mul545, float %mul546, float %mul547), !dbg !4172
  %476 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4173
  %thresh = getelementptr inbounds %struct.process, %struct.process* %476, i32 0, i32 0, !dbg !4174
  %477 = load float, float* %thresh, align 8, !dbg !4175
  %add549 = fadd float %477, %call548, !dbg !4175
  store float %add549, float* %thresh, align 8, !dbg !4175
  br label %for.inc550, !dbg !4176

for.inc550:                                       ; preds = %for.body541
  %478 = load i32, i32* %a, align 4, !dbg !4177
  %inc551 = add nsw i32 %478, 1, !dbg !4177
  store i32 %inc551, i32* %a, align 4, !dbg !4177
  br label %for.cond537, !dbg !4178, !llvm.loop !4179

for.end552:                                       ; preds = %for.cond537
  %479 = load float, float* %totsize, align 4, !dbg !4181
  ret float %479, !dbg !4182
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_metaball_octal_tree(%struct.process* %process, i32 %depth) #0 !dbg !4183 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %depth.addr = alloca i32, align 4
  %node = alloca %struct.octal_node*, align 8
  %ml_p = alloca %struct.ml_pointer*, align 8
  %size = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !4186, metadata !DIExpression()), !dbg !4187
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !4188, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.declare(metadata %struct.octal_node** %node, metadata !4190, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.declare(metadata %struct.ml_pointer** %ml_p, metadata !4192, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !4202, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4204, metadata !DIExpression()), !dbg !4205
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4206
  %call = call i8* %0(i64 24, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)), !dbg !4206
  %1 = bitcast i8* %call to %struct.octal_tree*, !dbg !4206
  %2 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4207
  %metaball_tree = getelementptr inbounds %struct.process, %struct.process* %2, i32 0, i32 3, !dbg !4208
  store %struct.octal_tree* %1, %struct.octal_tree** %metaball_tree, align 8, !dbg !4209
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4210
  %call1 = call i8* %3(i64 136, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)), !dbg !4210
  %4 = bitcast i8* %call1 to %struct.octal_node*, !dbg !4210
  store %struct.octal_node* %4, %struct.octal_node** %node, align 8, !dbg !4211
  %5 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4212
  %metaball_tree2 = getelementptr inbounds %struct.process, %struct.process* %5, i32 0, i32 3, !dbg !4213
  %6 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree2, align 8, !dbg !4213
  %first = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %6, i32 0, i32 0, !dbg !4214
  store %struct.octal_node* %4, %struct.octal_node** %first, align 8, !dbg !4215
  %7 = load i32, i32* %depth.addr, align 4, !dbg !4216
  %conv = trunc i32 %7 to i16, !dbg !4216
  %8 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4217
  %metaball_tree3 = getelementptr inbounds %struct.process, %struct.process* %8, i32 0, i32 3, !dbg !4218
  %9 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree3, align 8, !dbg !4218
  %depth4 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %9, i32 0, i32 3, !dbg !4219
  store i16 %conv, i16* %depth4, align 8, !dbg !4220
  %10 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4221
  %neg = getelementptr inbounds %struct.octal_node, %struct.octal_node* %10, i32 0, i32 13, !dbg !4222
  store i32 0, i32* %neg, align 8, !dbg !4223
  %11 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4224
  %metaball_tree5 = getelementptr inbounds %struct.process, %struct.process* %11, i32 0, i32 3, !dbg !4225
  %12 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree5, align 8, !dbg !4225
  %neg6 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %12, i32 0, i32 2, !dbg !4226
  store i32 0, i32* %neg6, align 4, !dbg !4227
  %13 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4228
  %pos = getelementptr inbounds %struct.octal_node, %struct.octal_node* %13, i32 0, i32 12, !dbg !4229
  store i32 0, i32* %pos, align 4, !dbg !4230
  %14 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4231
  %metaball_tree7 = getelementptr inbounds %struct.process, %struct.process* %14, i32 0, i32 3, !dbg !4232
  %15 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree7, align 8, !dbg !4232
  %pos8 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %15, i32 0, i32 1, !dbg !4233
  store i32 0, i32* %pos8, align 8, !dbg !4234
  %16 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4235
  %elems = getelementptr inbounds %struct.octal_node, %struct.octal_node* %16, i32 0, i32 2, !dbg !4236
  call void @BLI_listbase_clear(%struct.ListBase* %elems), !dbg !4237
  %17 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4238
  %count = getelementptr inbounds %struct.octal_node, %struct.octal_node* %17, i32 0, i32 14, !dbg !4239
  store i32 0, i32* %count, align 4, !dbg !4240
  store i32 0, i32* %a, align 4, !dbg !4241
  br label %for.cond, !dbg !4243

for.cond:                                         ; preds = %for.inc, %entry
  %18 = load i32, i32* %a, align 4, !dbg !4244
  %cmp = icmp slt i32 %18, 8, !dbg !4246
  br i1 %cmp, label %for.body, label %for.end, !dbg !4247

for.body:                                         ; preds = %for.cond
  %19 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4248
  %nodes = getelementptr inbounds %struct.octal_node, %struct.octal_node* %19, i32 0, i32 0, !dbg !4249
  %20 = load i32, i32* %a, align 4, !dbg !4250
  %idxprom = sext i32 %20 to i64, !dbg !4248
  %arrayidx = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes, i64 0, i64 %idxprom, !dbg !4248
  store %struct.octal_node* null, %struct.octal_node** %arrayidx, align 8, !dbg !4251
  br label %for.inc, !dbg !4248

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %a, align 4, !dbg !4252
  %inc = add nsw i32 %21, 1, !dbg !4252
  store i32 %inc, i32* %a, align 4, !dbg !4252
  br label %for.cond, !dbg !4253, !llvm.loop !4254

for.end:                                          ; preds = %for.cond
  %22 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4256
  %z_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %22, i32 0, i32 5, !dbg !4257
  store float 0x47EFFFFFE0000000, float* %z_min, align 8, !dbg !4258
  %23 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4259
  %y_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %23, i32 0, i32 4, !dbg !4260
  store float 0x47EFFFFFE0000000, float* %y_min, align 4, !dbg !4261
  %24 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4262
  %x_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %24, i32 0, i32 3, !dbg !4263
  store float 0x47EFFFFFE0000000, float* %x_min, align 8, !dbg !4264
  %25 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4265
  %z_max = getelementptr inbounds %struct.octal_node, %struct.octal_node* %25, i32 0, i32 8, !dbg !4266
  store float 0xC7EFFFFFE0000000, float* %z_max, align 4, !dbg !4267
  %26 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4268
  %y_max = getelementptr inbounds %struct.octal_node, %struct.octal_node* %26, i32 0, i32 7, !dbg !4269
  store float 0xC7EFFFFFE0000000, float* %y_max, align 8, !dbg !4270
  %27 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4271
  %x_max = getelementptr inbounds %struct.octal_node, %struct.octal_node* %27, i32 0, i32 6, !dbg !4272
  store float 0xC7EFFFFFE0000000, float* %x_max, align 4, !dbg !4273
  store i32 0, i32* %a, align 4, !dbg !4274
  br label %for.cond10, !dbg !4276

for.cond10:                                       ; preds = %for.inc148, %for.end
  %28 = load i32, i32* %a, align 4, !dbg !4277
  %29 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4279
  %totelem = getelementptr inbounds %struct.process, %struct.process* %29, i32 0, i32 1, !dbg !4280
  %30 = load i32, i32* %totelem, align 4, !dbg !4280
  %cmp11 = icmp slt i32 %28, %30, !dbg !4281
  br i1 %cmp11, label %for.body13, label %for.end150, !dbg !4282

for.body13:                                       ; preds = %for.cond10
  %31 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4283
  %mainb = getelementptr inbounds %struct.process, %struct.process* %31, i32 0, i32 2, !dbg !4286
  %32 = load %struct.MetaElem**, %struct.MetaElem*** %mainb, align 8, !dbg !4286
  %33 = load i32, i32* %a, align 4, !dbg !4287
  %idxprom14 = sext i32 %33 to i64, !dbg !4283
  %arrayidx15 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %32, i64 %idxprom14, !dbg !4283
  %34 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx15, align 8, !dbg !4283
  %bb = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %34, i32 0, i32 2, !dbg !4288
  %35 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !4288
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %35, i32 0, i32 0, !dbg !4289
  %arrayidx16 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 0, !dbg !4283
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !4283
  %36 = load float, float* %arrayidx17, align 4, !dbg !4283
  %37 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4290
  %x_min18 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %37, i32 0, i32 3, !dbg !4291
  %38 = load float, float* %x_min18, align 8, !dbg !4291
  %cmp19 = fcmp olt float %36, %38, !dbg !4292
  br i1 %cmp19, label %if.then, label %if.end, !dbg !4293

if.then:                                          ; preds = %for.body13
  %39 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4294
  %mainb21 = getelementptr inbounds %struct.process, %struct.process* %39, i32 0, i32 2, !dbg !4295
  %40 = load %struct.MetaElem**, %struct.MetaElem*** %mainb21, align 8, !dbg !4295
  %41 = load i32, i32* %a, align 4, !dbg !4296
  %idxprom22 = sext i32 %41 to i64, !dbg !4294
  %arrayidx23 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %40, i64 %idxprom22, !dbg !4294
  %42 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx23, align 8, !dbg !4294
  %bb24 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %42, i32 0, i32 2, !dbg !4297
  %43 = load %struct.BoundBox*, %struct.BoundBox** %bb24, align 8, !dbg !4297
  %vec25 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %43, i32 0, i32 0, !dbg !4298
  %arrayidx26 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec25, i64 0, i64 0, !dbg !4294
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !4294
  %44 = load float, float* %arrayidx27, align 4, !dbg !4294
  %45 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4299
  %x_min28 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %45, i32 0, i32 3, !dbg !4300
  store float %44, float* %x_min28, align 8, !dbg !4301
  br label %if.end, !dbg !4299

if.end:                                           ; preds = %if.then, %for.body13
  %46 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4302
  %mainb29 = getelementptr inbounds %struct.process, %struct.process* %46, i32 0, i32 2, !dbg !4304
  %47 = load %struct.MetaElem**, %struct.MetaElem*** %mainb29, align 8, !dbg !4304
  %48 = load i32, i32* %a, align 4, !dbg !4305
  %idxprom30 = sext i32 %48 to i64, !dbg !4302
  %arrayidx31 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %47, i64 %idxprom30, !dbg !4302
  %49 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx31, align 8, !dbg !4302
  %bb32 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %49, i32 0, i32 2, !dbg !4306
  %50 = load %struct.BoundBox*, %struct.BoundBox** %bb32, align 8, !dbg !4306
  %vec33 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %50, i32 0, i32 0, !dbg !4307
  %arrayidx34 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec33, i64 0, i64 0, !dbg !4302
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 1, !dbg !4302
  %51 = load float, float* %arrayidx35, align 4, !dbg !4302
  %52 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4308
  %y_min36 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %52, i32 0, i32 4, !dbg !4309
  %53 = load float, float* %y_min36, align 4, !dbg !4309
  %cmp37 = fcmp olt float %51, %53, !dbg !4310
  br i1 %cmp37, label %if.then39, label %if.end48, !dbg !4311

if.then39:                                        ; preds = %if.end
  %54 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4312
  %mainb40 = getelementptr inbounds %struct.process, %struct.process* %54, i32 0, i32 2, !dbg !4313
  %55 = load %struct.MetaElem**, %struct.MetaElem*** %mainb40, align 8, !dbg !4313
  %56 = load i32, i32* %a, align 4, !dbg !4314
  %idxprom41 = sext i32 %56 to i64, !dbg !4312
  %arrayidx42 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %55, i64 %idxprom41, !dbg !4312
  %57 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx42, align 8, !dbg !4312
  %bb43 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %57, i32 0, i32 2, !dbg !4315
  %58 = load %struct.BoundBox*, %struct.BoundBox** %bb43, align 8, !dbg !4315
  %vec44 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %58, i32 0, i32 0, !dbg !4316
  %arrayidx45 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec44, i64 0, i64 0, !dbg !4312
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx45, i64 0, i64 1, !dbg !4312
  %59 = load float, float* %arrayidx46, align 4, !dbg !4312
  %60 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4317
  %y_min47 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %60, i32 0, i32 4, !dbg !4318
  store float %59, float* %y_min47, align 4, !dbg !4319
  br label %if.end48, !dbg !4317

if.end48:                                         ; preds = %if.then39, %if.end
  %61 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4320
  %mainb49 = getelementptr inbounds %struct.process, %struct.process* %61, i32 0, i32 2, !dbg !4322
  %62 = load %struct.MetaElem**, %struct.MetaElem*** %mainb49, align 8, !dbg !4322
  %63 = load i32, i32* %a, align 4, !dbg !4323
  %idxprom50 = sext i32 %63 to i64, !dbg !4320
  %arrayidx51 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %62, i64 %idxprom50, !dbg !4320
  %64 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx51, align 8, !dbg !4320
  %bb52 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %64, i32 0, i32 2, !dbg !4324
  %65 = load %struct.BoundBox*, %struct.BoundBox** %bb52, align 8, !dbg !4324
  %vec53 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %65, i32 0, i32 0, !dbg !4325
  %arrayidx54 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec53, i64 0, i64 0, !dbg !4320
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx54, i64 0, i64 2, !dbg !4320
  %66 = load float, float* %arrayidx55, align 4, !dbg !4320
  %67 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4326
  %z_min56 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %67, i32 0, i32 5, !dbg !4327
  %68 = load float, float* %z_min56, align 8, !dbg !4327
  %cmp57 = fcmp olt float %66, %68, !dbg !4328
  br i1 %cmp57, label %if.then59, label %if.end68, !dbg !4329

if.then59:                                        ; preds = %if.end48
  %69 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4330
  %mainb60 = getelementptr inbounds %struct.process, %struct.process* %69, i32 0, i32 2, !dbg !4331
  %70 = load %struct.MetaElem**, %struct.MetaElem*** %mainb60, align 8, !dbg !4331
  %71 = load i32, i32* %a, align 4, !dbg !4332
  %idxprom61 = sext i32 %71 to i64, !dbg !4330
  %arrayidx62 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %70, i64 %idxprom61, !dbg !4330
  %72 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx62, align 8, !dbg !4330
  %bb63 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %72, i32 0, i32 2, !dbg !4333
  %73 = load %struct.BoundBox*, %struct.BoundBox** %bb63, align 8, !dbg !4333
  %vec64 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %73, i32 0, i32 0, !dbg !4334
  %arrayidx65 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec64, i64 0, i64 0, !dbg !4330
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 2, !dbg !4330
  %74 = load float, float* %arrayidx66, align 4, !dbg !4330
  %75 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4335
  %z_min67 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %75, i32 0, i32 5, !dbg !4336
  store float %74, float* %z_min67, align 8, !dbg !4337
  br label %if.end68, !dbg !4335

if.end68:                                         ; preds = %if.then59, %if.end48
  %76 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4338
  %mainb69 = getelementptr inbounds %struct.process, %struct.process* %76, i32 0, i32 2, !dbg !4340
  %77 = load %struct.MetaElem**, %struct.MetaElem*** %mainb69, align 8, !dbg !4340
  %78 = load i32, i32* %a, align 4, !dbg !4341
  %idxprom70 = sext i32 %78 to i64, !dbg !4338
  %arrayidx71 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %77, i64 %idxprom70, !dbg !4338
  %79 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx71, align 8, !dbg !4338
  %bb72 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %79, i32 0, i32 2, !dbg !4342
  %80 = load %struct.BoundBox*, %struct.BoundBox** %bb72, align 8, !dbg !4342
  %vec73 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %80, i32 0, i32 0, !dbg !4343
  %arrayidx74 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec73, i64 0, i64 6, !dbg !4338
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx74, i64 0, i64 0, !dbg !4338
  %81 = load float, float* %arrayidx75, align 4, !dbg !4338
  %82 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4344
  %x_max76 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %82, i32 0, i32 6, !dbg !4345
  %83 = load float, float* %x_max76, align 4, !dbg !4345
  %cmp77 = fcmp ogt float %81, %83, !dbg !4346
  br i1 %cmp77, label %if.then79, label %if.end88, !dbg !4347

if.then79:                                        ; preds = %if.end68
  %84 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4348
  %mainb80 = getelementptr inbounds %struct.process, %struct.process* %84, i32 0, i32 2, !dbg !4349
  %85 = load %struct.MetaElem**, %struct.MetaElem*** %mainb80, align 8, !dbg !4349
  %86 = load i32, i32* %a, align 4, !dbg !4350
  %idxprom81 = sext i32 %86 to i64, !dbg !4348
  %arrayidx82 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %85, i64 %idxprom81, !dbg !4348
  %87 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx82, align 8, !dbg !4348
  %bb83 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %87, i32 0, i32 2, !dbg !4351
  %88 = load %struct.BoundBox*, %struct.BoundBox** %bb83, align 8, !dbg !4351
  %vec84 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %88, i32 0, i32 0, !dbg !4352
  %arrayidx85 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec84, i64 0, i64 6, !dbg !4348
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx85, i64 0, i64 0, !dbg !4348
  %89 = load float, float* %arrayidx86, align 4, !dbg !4348
  %90 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4353
  %x_max87 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %90, i32 0, i32 6, !dbg !4354
  store float %89, float* %x_max87, align 4, !dbg !4355
  br label %if.end88, !dbg !4353

if.end88:                                         ; preds = %if.then79, %if.end68
  %91 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4356
  %mainb89 = getelementptr inbounds %struct.process, %struct.process* %91, i32 0, i32 2, !dbg !4358
  %92 = load %struct.MetaElem**, %struct.MetaElem*** %mainb89, align 8, !dbg !4358
  %93 = load i32, i32* %a, align 4, !dbg !4359
  %idxprom90 = sext i32 %93 to i64, !dbg !4356
  %arrayidx91 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %92, i64 %idxprom90, !dbg !4356
  %94 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx91, align 8, !dbg !4356
  %bb92 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %94, i32 0, i32 2, !dbg !4360
  %95 = load %struct.BoundBox*, %struct.BoundBox** %bb92, align 8, !dbg !4360
  %vec93 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %95, i32 0, i32 0, !dbg !4361
  %arrayidx94 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec93, i64 0, i64 6, !dbg !4356
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx94, i64 0, i64 1, !dbg !4356
  %96 = load float, float* %arrayidx95, align 4, !dbg !4356
  %97 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4362
  %y_max96 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %97, i32 0, i32 7, !dbg !4363
  %98 = load float, float* %y_max96, align 8, !dbg !4363
  %cmp97 = fcmp ogt float %96, %98, !dbg !4364
  br i1 %cmp97, label %if.then99, label %if.end108, !dbg !4365

if.then99:                                        ; preds = %if.end88
  %99 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4366
  %mainb100 = getelementptr inbounds %struct.process, %struct.process* %99, i32 0, i32 2, !dbg !4367
  %100 = load %struct.MetaElem**, %struct.MetaElem*** %mainb100, align 8, !dbg !4367
  %101 = load i32, i32* %a, align 4, !dbg !4368
  %idxprom101 = sext i32 %101 to i64, !dbg !4366
  %arrayidx102 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %100, i64 %idxprom101, !dbg !4366
  %102 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx102, align 8, !dbg !4366
  %bb103 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %102, i32 0, i32 2, !dbg !4369
  %103 = load %struct.BoundBox*, %struct.BoundBox** %bb103, align 8, !dbg !4369
  %vec104 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %103, i32 0, i32 0, !dbg !4370
  %arrayidx105 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec104, i64 0, i64 6, !dbg !4366
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx105, i64 0, i64 1, !dbg !4366
  %104 = load float, float* %arrayidx106, align 4, !dbg !4366
  %105 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4371
  %y_max107 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %105, i32 0, i32 7, !dbg !4372
  store float %104, float* %y_max107, align 8, !dbg !4373
  br label %if.end108, !dbg !4371

if.end108:                                        ; preds = %if.then99, %if.end88
  %106 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4374
  %mainb109 = getelementptr inbounds %struct.process, %struct.process* %106, i32 0, i32 2, !dbg !4376
  %107 = load %struct.MetaElem**, %struct.MetaElem*** %mainb109, align 8, !dbg !4376
  %108 = load i32, i32* %a, align 4, !dbg !4377
  %idxprom110 = sext i32 %108 to i64, !dbg !4374
  %arrayidx111 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %107, i64 %idxprom110, !dbg !4374
  %109 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx111, align 8, !dbg !4374
  %bb112 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %109, i32 0, i32 2, !dbg !4378
  %110 = load %struct.BoundBox*, %struct.BoundBox** %bb112, align 8, !dbg !4378
  %vec113 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %110, i32 0, i32 0, !dbg !4379
  %arrayidx114 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec113, i64 0, i64 6, !dbg !4374
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx114, i64 0, i64 2, !dbg !4374
  %111 = load float, float* %arrayidx115, align 4, !dbg !4374
  %112 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4380
  %z_max116 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %112, i32 0, i32 8, !dbg !4381
  %113 = load float, float* %z_max116, align 4, !dbg !4381
  %cmp117 = fcmp ogt float %111, %113, !dbg !4382
  br i1 %cmp117, label %if.then119, label %if.end128, !dbg !4383

if.then119:                                       ; preds = %if.end108
  %114 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4384
  %mainb120 = getelementptr inbounds %struct.process, %struct.process* %114, i32 0, i32 2, !dbg !4385
  %115 = load %struct.MetaElem**, %struct.MetaElem*** %mainb120, align 8, !dbg !4385
  %116 = load i32, i32* %a, align 4, !dbg !4386
  %idxprom121 = sext i32 %116 to i64, !dbg !4384
  %arrayidx122 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %115, i64 %idxprom121, !dbg !4384
  %117 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx122, align 8, !dbg !4384
  %bb123 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %117, i32 0, i32 2, !dbg !4387
  %118 = load %struct.BoundBox*, %struct.BoundBox** %bb123, align 8, !dbg !4387
  %vec124 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %118, i32 0, i32 0, !dbg !4388
  %arrayidx125 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec124, i64 0, i64 6, !dbg !4384
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx125, i64 0, i64 2, !dbg !4384
  %119 = load float, float* %arrayidx126, align 4, !dbg !4384
  %120 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4389
  %z_max127 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %120, i32 0, i32 8, !dbg !4390
  store float %119, float* %z_max127, align 4, !dbg !4391
  br label %if.end128, !dbg !4389

if.end128:                                        ; preds = %if.then119, %if.end108
  %121 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4392
  %call129 = call i8* %121(i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)), !dbg !4392
  %122 = bitcast i8* %call129 to %struct.ml_pointer*, !dbg !4392
  store %struct.ml_pointer* %122, %struct.ml_pointer** %ml_p, align 8, !dbg !4393
  %123 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4394
  %mainb130 = getelementptr inbounds %struct.process, %struct.process* %123, i32 0, i32 2, !dbg !4395
  %124 = load %struct.MetaElem**, %struct.MetaElem*** %mainb130, align 8, !dbg !4395
  %125 = load i32, i32* %a, align 4, !dbg !4396
  %idxprom131 = sext i32 %125 to i64, !dbg !4394
  %arrayidx132 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %124, i64 %idxprom131, !dbg !4394
  %126 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx132, align 8, !dbg !4394
  %127 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !4397
  %ml = getelementptr inbounds %struct.ml_pointer, %struct.ml_pointer* %127, i32 0, i32 2, !dbg !4398
  store %struct.MetaElem* %126, %struct.MetaElem** %ml, align 8, !dbg !4399
  %128 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4400
  %elems133 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %128, i32 0, i32 2, !dbg !4401
  %129 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !4402
  %130 = bitcast %struct.ml_pointer* %129 to i8*, !dbg !4402
  call void @BLI_addtail(%struct.ListBase* %elems133, i8* %130), !dbg !4403
  %131 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4404
  %mainb134 = getelementptr inbounds %struct.process, %struct.process* %131, i32 0, i32 2, !dbg !4406
  %132 = load %struct.MetaElem**, %struct.MetaElem*** %mainb134, align 8, !dbg !4406
  %133 = load i32, i32* %a, align 4, !dbg !4407
  %idxprom135 = sext i32 %133 to i64, !dbg !4404
  %arrayidx136 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %132, i64 %idxprom135, !dbg !4404
  %134 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx136, align 8, !dbg !4404
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %134, i32 0, i32 4, !dbg !4408
  %135 = load i16, i16* %flag, align 2, !dbg !4408
  %conv137 = sext i16 %135 to i32, !dbg !4404
  %and = and i32 %conv137, 2, !dbg !4409
  %cmp138 = icmp eq i32 %and, 0, !dbg !4410
  br i1 %cmp138, label %if.then140, label %if.else, !dbg !4411

if.then140:                                       ; preds = %if.end128
  %136 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4412
  %metaball_tree141 = getelementptr inbounds %struct.process, %struct.process* %136, i32 0, i32 3, !dbg !4414
  %137 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree141, align 8, !dbg !4414
  %pos142 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %137, i32 0, i32 1, !dbg !4415
  %138 = load i32, i32* %pos142, align 8, !dbg !4416
  %inc143 = add nsw i32 %138, 1, !dbg !4416
  store i32 %inc143, i32* %pos142, align 8, !dbg !4416
  br label %if.end147, !dbg !4417

if.else:                                          ; preds = %if.end128
  %139 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4418
  %metaball_tree144 = getelementptr inbounds %struct.process, %struct.process* %139, i32 0, i32 3, !dbg !4420
  %140 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree144, align 8, !dbg !4420
  %neg145 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %140, i32 0, i32 2, !dbg !4421
  %141 = load i32, i32* %neg145, align 4, !dbg !4422
  %inc146 = add nsw i32 %141, 1, !dbg !4422
  store i32 %inc146, i32* %neg145, align 4, !dbg !4422
  br label %if.end147

if.end147:                                        ; preds = %if.else, %if.then140
  br label %for.inc148, !dbg !4423

for.inc148:                                       ; preds = %if.end147
  %142 = load i32, i32* %a, align 4, !dbg !4424
  %inc149 = add nsw i32 %142, 1, !dbg !4424
  store i32 %inc149, i32* %a, align 4, !dbg !4424
  br label %for.cond10, !dbg !4425, !llvm.loop !4426

for.end150:                                       ; preds = %for.cond10
  %143 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4428
  %x_max151 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %143, i32 0, i32 6, !dbg !4429
  %144 = load float, float* %x_max151, align 4, !dbg !4429
  %145 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4430
  %x_min152 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %145, i32 0, i32 3, !dbg !4431
  %146 = load float, float* %x_min152, align 8, !dbg !4431
  %sub = fsub float %144, %146, !dbg !4432
  %arrayidx153 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !4433
  store float %sub, float* %arrayidx153, align 4, !dbg !4434
  %147 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4435
  %y_max154 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %147, i32 0, i32 7, !dbg !4436
  %148 = load float, float* %y_max154, align 8, !dbg !4436
  %149 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4437
  %y_min155 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %149, i32 0, i32 4, !dbg !4438
  %150 = load float, float* %y_min155, align 4, !dbg !4438
  %sub156 = fsub float %148, %150, !dbg !4439
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !4440
  store float %sub156, float* %arrayidx157, align 4, !dbg !4441
  %151 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4442
  %z_max158 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %151, i32 0, i32 8, !dbg !4443
  %152 = load float, float* %z_max158, align 4, !dbg !4443
  %153 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4444
  %z_min159 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %153, i32 0, i32 5, !dbg !4445
  %154 = load float, float* %z_min159, align 8, !dbg !4445
  %sub160 = fsub float %152, %154, !dbg !4446
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !4447
  store float %sub160, float* %arrayidx161, align 4, !dbg !4448
  %155 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4449
  %arrayidx162 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !4450
  %156 = load float, float* %arrayidx162, align 4, !dbg !4450
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !4451
  %157 = load float, float* %arrayidx163, align 4, !dbg !4451
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !4452
  %158 = load float, float* %arrayidx164, align 4, !dbg !4452
  %159 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4453
  %metaball_tree165 = getelementptr inbounds %struct.process, %struct.process* %159, i32 0, i32 3, !dbg !4454
  %160 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree165, align 8, !dbg !4454
  %depth166 = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %160, i32 0, i32 3, !dbg !4455
  %161 = load i16, i16* %depth166, align 8, !dbg !4455
  call void @subdivide_metaball_octal_node(%struct.octal_node* %155, float %156, float %157, float %158, i16 signext %161), !dbg !4456
  ret void, !dbg !4457
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @new_pgn_element(%struct.process* %process, i32 %size) #0 !dbg !4458 {
entry:
  %retval = alloca i8*, align 8
  %process.addr = alloca %struct.process*, align 8
  %size.addr = alloca i32, align 4
  %blocksize = alloca i32, align 4
  %adr = alloca i8*, align 8
  %cur = alloca %struct.pgn_elements*, align 8
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !4461, metadata !DIExpression()), !dbg !4462
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.declare(metadata i32* %blocksize, metadata !4465, metadata !DIExpression()), !dbg !4466
  store i32 16384, i32* %blocksize, align 4, !dbg !4466
  call void @llvm.dbg.declare(metadata i8** %adr, metadata !4467, metadata !DIExpression()), !dbg !4468
  %0 = load i32, i32* %size.addr, align 4, !dbg !4469
  %cmp = icmp sgt i32 %0, 10000, !dbg !4471
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4472

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4, !dbg !4473
  %cmp1 = icmp eq i32 %1, 0, !dbg !4474
  br i1 %cmp1, label %if.then, label %if.else, !dbg !4475

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0)), !dbg !4476
  br label %if.end5, !dbg !4478

if.else:                                          ; preds = %lor.lhs.false
  %2 = load i32, i32* %size.addr, align 4, !dbg !4479
  %cmp2 = icmp eq i32 %2, -1, !dbg !4481
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4482

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.pgn_elements** %cur, metadata !4483, metadata !DIExpression()), !dbg !4485
  %3 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4486
  %pgn_list = getelementptr inbounds %struct.process, %struct.process* %3, i32 0, i32 18, !dbg !4487
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %pgn_list, i32 0, i32 0, !dbg !4488
  %4 = load i8*, i8** %first, align 8, !dbg !4488
  %5 = bitcast i8* %4 to %struct.pgn_elements*, !dbg !4486
  store %struct.pgn_elements* %5, %struct.pgn_elements** %cur, align 8, !dbg !4485
  br label %while.cond, !dbg !4489

while.cond:                                       ; preds = %while.body, %if.then3
  %6 = load %struct.pgn_elements*, %struct.pgn_elements** %cur, align 8, !dbg !4490
  %tobool = icmp ne %struct.pgn_elements* %6, null, !dbg !4489
  br i1 %tobool, label %while.body, label %while.end, !dbg !4489

while.body:                                       ; preds = %while.cond
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4491
  %8 = load %struct.pgn_elements*, %struct.pgn_elements** %cur, align 8, !dbg !4493
  %data = getelementptr inbounds %struct.pgn_elements, %struct.pgn_elements* %8, i32 0, i32 2, !dbg !4494
  %9 = load i8*, i8** %data, align 8, !dbg !4494
  call void %7(i8* %9), !dbg !4491
  %10 = load %struct.pgn_elements*, %struct.pgn_elements** %cur, align 8, !dbg !4495
  %next = getelementptr inbounds %struct.pgn_elements, %struct.pgn_elements* %10, i32 0, i32 0, !dbg !4496
  %11 = load %struct.pgn_elements*, %struct.pgn_elements** %next, align 8, !dbg !4496
  store %struct.pgn_elements* %11, %struct.pgn_elements** %cur, align 8, !dbg !4497
  br label %while.cond, !dbg !4489, !llvm.loop !4498

while.end:                                        ; preds = %while.cond
  %12 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4500
  %pgn_list4 = getelementptr inbounds %struct.process, %struct.process* %12, i32 0, i32 18, !dbg !4501
  call void @BLI_freelistN(%struct.ListBase* %pgn_list4), !dbg !4502
  store i8* null, i8** %retval, align 8, !dbg !4503
  br label %return, !dbg !4503

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %13 = load i32, i32* %size.addr, align 4, !dbg !4504
  %add = add nsw i32 %13, 3, !dbg !4505
  %div = sdiv i32 %add, 4, !dbg !4506
  %mul = mul nsw i32 4, %div, !dbg !4507
  store i32 %mul, i32* %size.addr, align 4, !dbg !4508
  %14 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4509
  %pgn_current = getelementptr inbounds %struct.process, %struct.process* %14, i32 0, i32 17, !dbg !4511
  %15 = load %struct.pgn_elements*, %struct.pgn_elements** %pgn_current, align 8, !dbg !4511
  %tobool6 = icmp ne %struct.pgn_elements* %15, null, !dbg !4509
  br i1 %tobool6, label %if.then7, label %if.end17, !dbg !4512

if.then7:                                         ; preds = %if.end5
  %16 = load i32, i32* %size.addr, align 4, !dbg !4513
  %17 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4516
  %pgn_offset = getelementptr inbounds %struct.process, %struct.process* %17, i32 0, i32 16, !dbg !4517
  %18 = load i32, i32* %pgn_offset, align 8, !dbg !4517
  %add8 = add nsw i32 %16, %18, !dbg !4518
  %19 = load i32, i32* %blocksize, align 4, !dbg !4519
  %cmp9 = icmp slt i32 %add8, %19, !dbg !4520
  br i1 %cmp9, label %if.then10, label %if.end16, !dbg !4521

if.then10:                                        ; preds = %if.then7
  %20 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4522
  %pgn_current11 = getelementptr inbounds %struct.process, %struct.process* %20, i32 0, i32 17, !dbg !4524
  %21 = load %struct.pgn_elements*, %struct.pgn_elements** %pgn_current11, align 8, !dbg !4524
  %data12 = getelementptr inbounds %struct.pgn_elements, %struct.pgn_elements* %21, i32 0, i32 2, !dbg !4525
  %22 = load i8*, i8** %data12, align 8, !dbg !4525
  %23 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4526
  %pgn_offset13 = getelementptr inbounds %struct.process, %struct.process* %23, i32 0, i32 16, !dbg !4527
  %24 = load i32, i32* %pgn_offset13, align 8, !dbg !4527
  %idx.ext = sext i32 %24 to i64, !dbg !4528
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext, !dbg !4528
  store i8* %add.ptr, i8** %adr, align 8, !dbg !4529
  %25 = load i32, i32* %size.addr, align 4, !dbg !4530
  %26 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4531
  %pgn_offset14 = getelementptr inbounds %struct.process, %struct.process* %26, i32 0, i32 16, !dbg !4532
  %27 = load i32, i32* %pgn_offset14, align 8, !dbg !4533
  %add15 = add nsw i32 %27, %25, !dbg !4533
  store i32 %add15, i32* %pgn_offset14, align 8, !dbg !4533
  %28 = load i8*, i8** %adr, align 8, !dbg !4534
  store i8* %28, i8** %retval, align 8, !dbg !4535
  br label %return, !dbg !4535

if.end16:                                         ; preds = %if.then7
  br label %if.end17, !dbg !4536

if.end17:                                         ; preds = %if.end16, %if.end5
  %29 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4537
  %call18 = call i8* %29(i64 24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)), !dbg !4537
  %30 = bitcast i8* %call18 to %struct.pgn_elements*, !dbg !4537
  %31 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4538
  %pgn_current19 = getelementptr inbounds %struct.process, %struct.process* %31, i32 0, i32 17, !dbg !4539
  store %struct.pgn_elements* %30, %struct.pgn_elements** %pgn_current19, align 8, !dbg !4540
  %32 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4541
  %33 = load i32, i32* %blocksize, align 4, !dbg !4542
  %conv = sext i32 %33 to i64, !dbg !4542
  %call20 = call i8* %32(i64 %conv, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)), !dbg !4541
  %34 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4543
  %pgn_current21 = getelementptr inbounds %struct.process, %struct.process* %34, i32 0, i32 17, !dbg !4544
  %35 = load %struct.pgn_elements*, %struct.pgn_elements** %pgn_current21, align 8, !dbg !4544
  %data22 = getelementptr inbounds %struct.pgn_elements, %struct.pgn_elements* %35, i32 0, i32 2, !dbg !4545
  store i8* %call20, i8** %data22, align 8, !dbg !4546
  %36 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4547
  %pgn_list23 = getelementptr inbounds %struct.process, %struct.process* %36, i32 0, i32 18, !dbg !4548
  %37 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4549
  %pgn_current24 = getelementptr inbounds %struct.process, %struct.process* %37, i32 0, i32 17, !dbg !4550
  %38 = load %struct.pgn_elements*, %struct.pgn_elements** %pgn_current24, align 8, !dbg !4550
  %39 = bitcast %struct.pgn_elements* %38 to i8*, !dbg !4549
  call void @BLI_addtail(%struct.ListBase* %pgn_list23, i8* %39), !dbg !4551
  %40 = load i32, i32* %size.addr, align 4, !dbg !4552
  %41 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4553
  %pgn_offset25 = getelementptr inbounds %struct.process, %struct.process* %41, i32 0, i32 16, !dbg !4554
  store i32 %40, i32* %pgn_offset25, align 8, !dbg !4555
  %42 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4556
  %pgn_current26 = getelementptr inbounds %struct.process, %struct.process* %42, i32 0, i32 17, !dbg !4557
  %43 = load %struct.pgn_elements*, %struct.pgn_elements** %pgn_current26, align 8, !dbg !4557
  %data27 = getelementptr inbounds %struct.pgn_elements, %struct.pgn_elements* %43, i32 0, i32 2, !dbg !4558
  %44 = load i8*, i8** %data27, align 8, !dbg !4558
  store i8* %44, i8** %retval, align 8, !dbg !4559
  br label %return, !dbg !4559

return:                                           ; preds = %if.end17, %if.then10, %while.end
  %45 = load i8*, i8** %retval, align 8, !dbg !4560
  ret i8* %45, !dbg !4560
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_metaball_octal_node(%struct.octal_node* %node) #0 !dbg !4561 {
entry:
  %node.addr = alloca %struct.octal_node*, align 8
  %a = alloca i32, align 4
  store %struct.octal_node* %node, %struct.octal_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.octal_node** %node.addr, metadata !4566, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4568, metadata !DIExpression()), !dbg !4569
  store i32 0, i32* %a, align 4, !dbg !4570
  br label %for.cond, !dbg !4572

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !4573
  %cmp = icmp slt i32 %0, 8, !dbg !4575
  br i1 %cmp, label %for.body, label %for.end, !dbg !4576

for.body:                                         ; preds = %for.cond
  %1 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !4577
  %nodes = getelementptr inbounds %struct.octal_node, %struct.octal_node* %1, i32 0, i32 0, !dbg !4580
  %2 = load i32, i32* %a, align 4, !dbg !4581
  %idxprom = sext i32 %2 to i64, !dbg !4577
  %arrayidx = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes, i64 0, i64 %idxprom, !dbg !4577
  %3 = load %struct.octal_node*, %struct.octal_node** %arrayidx, align 8, !dbg !4577
  %cmp1 = icmp ne %struct.octal_node* %3, null, !dbg !4582
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4583

if.then:                                          ; preds = %for.body
  %4 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !4584
  %nodes2 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %4, i32 0, i32 0, !dbg !4585
  %5 = load i32, i32* %a, align 4, !dbg !4586
  %idxprom3 = sext i32 %5 to i64, !dbg !4584
  %arrayidx4 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes2, i64 0, i64 %idxprom3, !dbg !4584
  %6 = load %struct.octal_node*, %struct.octal_node** %arrayidx4, align 8, !dbg !4584
  call void @free_metaball_octal_node(%struct.octal_node* %6), !dbg !4587
  br label %if.end, !dbg !4587

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4588

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %a, align 4, !dbg !4589
  %inc = add nsw i32 %7, 1, !dbg !4589
  store i32 %inc, i32* %a, align 4, !dbg !4589
  br label %for.cond, !dbg !4590, !llvm.loop !4591

for.end:                                          ; preds = %for.cond
  %8 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !4593
  %elems = getelementptr inbounds %struct.octal_node, %struct.octal_node* %8, i32 0, i32 2, !dbg !4594
  call void @BLI_freelistN(%struct.ListBase* %elems), !dbg !4595
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4596
  %10 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !4597
  %11 = bitcast %struct.octal_node* %10 to i8*, !dbg !4597
  call void %9(i8* %11), !dbg !4596
  ret void, !dbg !4598
}

; Function Attrs: noinline nounwind uwtable
define internal float @metaball(%struct.process* %process, float %x, float %y, float %z) #0 !dbg !4599 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %metaball_tree = alloca %struct.octal_tree*, align 8
  %node = alloca %struct.octal_node*, align 8
  %ml_p = alloca %struct.ml_pointer*, align 8
  %dens = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !4602, metadata !DIExpression()), !dbg !4603
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !4604, metadata !DIExpression()), !dbg !4605
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !4606, metadata !DIExpression()), !dbg !4607
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !4608, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.declare(metadata %struct.octal_tree** %metaball_tree, metadata !4610, metadata !DIExpression()), !dbg !4611
  %0 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4612
  %metaball_tree1 = getelementptr inbounds %struct.process, %struct.process* %0, i32 0, i32 3, !dbg !4613
  %1 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree1, align 8, !dbg !4613
  store %struct.octal_tree* %1, %struct.octal_tree** %metaball_tree, align 8, !dbg !4611
  call void @llvm.dbg.declare(metadata %struct.octal_node** %node, metadata !4614, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.declare(metadata %struct.ml_pointer** %ml_p, metadata !4616, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.declare(metadata float* %dens, metadata !4618, metadata !DIExpression()), !dbg !4619
  store float 0.000000e+00, float* %dens, align 4, !dbg !4619
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4620, metadata !DIExpression()), !dbg !4621
  %2 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4622
  %totelem = getelementptr inbounds %struct.process, %struct.process* %2, i32 0, i32 1, !dbg !4624
  %3 = load i32, i32* %totelem, align 4, !dbg !4624
  %cmp = icmp sgt i32 %3, 1, !dbg !4625
  br i1 %cmp, label %if.then, label %if.else22, !dbg !4626

if.then:                                          ; preds = %entry
  %4 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree, align 8, !dbg !4627
  %first = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %4, i32 0, i32 0, !dbg !4629
  %5 = load %struct.octal_node*, %struct.octal_node** %first, align 8, !dbg !4629
  %6 = load float, float* %x.addr, align 4, !dbg !4630
  %7 = load float, float* %y.addr, align 4, !dbg !4631
  %8 = load float, float* %z.addr, align 4, !dbg !4632
  %9 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree, align 8, !dbg !4633
  %depth = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %9, i32 0, i32 3, !dbg !4634
  %10 = load i16, i16* %depth, align 8, !dbg !4634
  %call = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %5, float %6, float %7, float %8, i16 signext %10), !dbg !4635
  store %struct.octal_node* %call, %struct.octal_node** %node, align 8, !dbg !4636
  %11 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4637
  %tobool = icmp ne %struct.octal_node* %11, null, !dbg !4637
  br i1 %tobool, label %if.then2, label %if.else, !dbg !4639

if.then2:                                         ; preds = %if.then
  %12 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4640
  %elems = getelementptr inbounds %struct.octal_node, %struct.octal_node* %12, i32 0, i32 2, !dbg !4643
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !4644
  %13 = load i8*, i8** %first3, align 8, !dbg !4644
  %14 = bitcast i8* %13 to %struct.ml_pointer*, !dbg !4640
  store %struct.ml_pointer* %14, %struct.ml_pointer** %ml_p, align 8, !dbg !4645
  br label %for.cond, !dbg !4646

for.cond:                                         ; preds = %for.inc, %if.then2
  %15 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !4647
  %tobool4 = icmp ne %struct.ml_pointer* %15, null, !dbg !4649
  br i1 %tobool4, label %for.body, label %for.end, !dbg !4649

for.body:                                         ; preds = %for.cond
  %16 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !4650
  %ml = getelementptr inbounds %struct.ml_pointer, %struct.ml_pointer* %16, i32 0, i32 2, !dbg !4652
  %17 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !4652
  %18 = load float, float* %x.addr, align 4, !dbg !4653
  %19 = load float, float* %y.addr, align 4, !dbg !4654
  %20 = load float, float* %z.addr, align 4, !dbg !4655
  %call5 = call float @densfunc(%struct.MetaElem* %17, float %18, float %19, float %20), !dbg !4656
  %21 = load float, float* %dens, align 4, !dbg !4657
  %add = fadd float %21, %call5, !dbg !4657
  store float %add, float* %dens, align 4, !dbg !4657
  br label %for.inc, !dbg !4658

for.inc:                                          ; preds = %for.body
  %22 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !4659
  %next = getelementptr inbounds %struct.ml_pointer, %struct.ml_pointer* %22, i32 0, i32 0, !dbg !4660
  %23 = load %struct.ml_pointer*, %struct.ml_pointer** %next, align 8, !dbg !4660
  store %struct.ml_pointer* %23, %struct.ml_pointer** %ml_p, align 8, !dbg !4661
  br label %for.cond, !dbg !4662, !llvm.loop !4663

for.end:                                          ; preds = %for.cond
  %24 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree, align 8, !dbg !4665
  %pos = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %24, i32 0, i32 1, !dbg !4666
  %25 = load i32, i32* %pos, align 8, !dbg !4666
  %26 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4667
  %pos6 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %26, i32 0, i32 12, !dbg !4668
  %27 = load i32, i32* %pos6, align 4, !dbg !4668
  %sub = sub nsw i32 %25, %27, !dbg !4669
  %conv = sitofp i32 %sub to float, !dbg !4670
  %mul = fmul float -5.000000e-01, %conv, !dbg !4671
  %28 = load float, float* %dens, align 4, !dbg !4672
  %add7 = fadd float %28, %mul, !dbg !4672
  store float %add7, float* %dens, align 4, !dbg !4672
  %29 = load %struct.octal_tree*, %struct.octal_tree** %metaball_tree, align 8, !dbg !4673
  %neg = getelementptr inbounds %struct.octal_tree, %struct.octal_tree* %29, i32 0, i32 2, !dbg !4674
  %30 = load i32, i32* %neg, align 4, !dbg !4674
  %31 = load %struct.octal_node*, %struct.octal_node** %node, align 8, !dbg !4675
  %neg8 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %31, i32 0, i32 13, !dbg !4676
  %32 = load i32, i32* %neg8, align 8, !dbg !4676
  %sub9 = sub nsw i32 %30, %32, !dbg !4677
  %conv10 = sitofp i32 %sub9 to float, !dbg !4678
  %mul11 = fmul float 5.000000e-01, %conv10, !dbg !4679
  %33 = load float, float* %dens, align 4, !dbg !4680
  %add12 = fadd float %33, %mul11, !dbg !4680
  store float %add12, float* %dens, align 4, !dbg !4680
  br label %if.end, !dbg !4681

if.else:                                          ; preds = %if.then
  store i32 0, i32* %a, align 4, !dbg !4682
  br label %for.cond13, !dbg !4685

for.cond13:                                       ; preds = %for.inc20, %if.else
  %34 = load i32, i32* %a, align 4, !dbg !4686
  %35 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4688
  %totelem14 = getelementptr inbounds %struct.process, %struct.process* %35, i32 0, i32 1, !dbg !4689
  %36 = load i32, i32* %totelem14, align 4, !dbg !4689
  %cmp15 = icmp slt i32 %34, %36, !dbg !4690
  br i1 %cmp15, label %for.body17, label %for.end21, !dbg !4691

for.body17:                                       ; preds = %for.cond13
  %37 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4692
  %mainb = getelementptr inbounds %struct.process, %struct.process* %37, i32 0, i32 2, !dbg !4694
  %38 = load %struct.MetaElem**, %struct.MetaElem*** %mainb, align 8, !dbg !4694
  %39 = load i32, i32* %a, align 4, !dbg !4695
  %idxprom = sext i32 %39 to i64, !dbg !4692
  %arrayidx = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %38, i64 %idxprom, !dbg !4692
  %40 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx, align 8, !dbg !4692
  %41 = load float, float* %x.addr, align 4, !dbg !4696
  %42 = load float, float* %y.addr, align 4, !dbg !4697
  %43 = load float, float* %z.addr, align 4, !dbg !4698
  %call18 = call float @densfunc(%struct.MetaElem* %40, float %41, float %42, float %43), !dbg !4699
  %44 = load float, float* %dens, align 4, !dbg !4700
  %add19 = fadd float %44, %call18, !dbg !4700
  store float %add19, float* %dens, align 4, !dbg !4700
  br label %for.inc20, !dbg !4701

for.inc20:                                        ; preds = %for.body17
  %45 = load i32, i32* %a, align 4, !dbg !4702
  %inc = add nsw i32 %45, 1, !dbg !4702
  store i32 %inc, i32* %a, align 4, !dbg !4702
  br label %for.cond13, !dbg !4703, !llvm.loop !4704

for.end21:                                        ; preds = %for.cond13
  br label %if.end

if.end:                                           ; preds = %for.end21, %for.end
  br label %if.end27, !dbg !4706

if.else22:                                        ; preds = %entry
  %46 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4707
  %mainb23 = getelementptr inbounds %struct.process, %struct.process* %46, i32 0, i32 2, !dbg !4709
  %47 = load %struct.MetaElem**, %struct.MetaElem*** %mainb23, align 8, !dbg !4709
  %arrayidx24 = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %47, i64 0, !dbg !4707
  %48 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx24, align 8, !dbg !4707
  %49 = load float, float* %x.addr, align 4, !dbg !4710
  %50 = load float, float* %y.addr, align 4, !dbg !4711
  %51 = load float, float* %z.addr, align 4, !dbg !4712
  %call25 = call float @densfunc(%struct.MetaElem* %48, float %49, float %50, float %51), !dbg !4713
  %52 = load float, float* %dens, align 4, !dbg !4714
  %add26 = fadd float %52, %call25, !dbg !4714
  store float %add26, float* %dens, align 4, !dbg !4714
  br label %if.end27

if.end27:                                         ; preds = %if.else22, %if.end
  %53 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4715
  %thresh = getelementptr inbounds %struct.process, %struct.process* %53, i32 0, i32 0, !dbg !4716
  %54 = load float, float* %thresh, align 8, !dbg !4716
  %55 = load float, float* %dens, align 4, !dbg !4717
  %sub28 = fsub float %54, %55, !dbg !4718
  ret float %sub28, !dbg !4719
}

; Function Attrs: noinline nounwind uwtable
define internal void @polygonize(%struct.process* %process, %struct.MetaBall* %mb) #0 !dbg !4720 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %mb.addr = alloca %struct.MetaBall*, align 8
  %c = alloca %struct.cube, align 8
  %a = alloca i32, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !4723, metadata !DIExpression()), !dbg !4724
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !4725, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.declare(metadata %struct.cube* %c, metadata !4727, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4729, metadata !DIExpression()), !dbg !4730
  %0 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4731
  %vertices = getelementptr inbounds %struct.process, %struct.process* %0, i32 0, i32 9, !dbg !4732
  %max = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices, i32 0, i32 1, !dbg !4733
  store i32 0, i32* %max, align 4, !dbg !4734
  %1 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4735
  %vertices1 = getelementptr inbounds %struct.process, %struct.process* %1, i32 0, i32 9, !dbg !4736
  %count = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices1, i32 0, i32 0, !dbg !4737
  store i32 0, i32* %count, align 8, !dbg !4738
  %2 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4739
  %vertices2 = getelementptr inbounds %struct.process, %struct.process* %2, i32 0, i32 9, !dbg !4740
  %ptr = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices2, i32 0, i32 2, !dbg !4741
  store %struct.vertex* null, %struct.vertex** %ptr, align 8, !dbg !4742
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4743
  %call = call i8* %3(i64 262144, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0)), !dbg !4743
  %4 = bitcast i8* %call to %struct.centerlist**, !dbg !4743
  %5 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4744
  %centers = getelementptr inbounds %struct.process, %struct.process* %5, i32 0, i32 10, !dbg !4745
  store %struct.centerlist** %4, %struct.centerlist*** %centers, align 8, !dbg !4746
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4747
  %call3 = call i8* %6(i64 262144, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0)), !dbg !4747
  %7 = bitcast i8* %call3 to %struct.corner**, !dbg !4747
  %8 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4748
  %corners = getelementptr inbounds %struct.process, %struct.process* %8, i32 0, i32 11, !dbg !4749
  store %struct.corner** %7, %struct.corner*** %corners, align 8, !dbg !4750
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4751
  %call4 = call i8* %9(i64 524288, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)), !dbg !4751
  %10 = bitcast i8* %call4 to %struct.edgelist**, !dbg !4751
  %11 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4752
  %edges = getelementptr inbounds %struct.process, %struct.process* %11, i32 0, i32 12, !dbg !4753
  store %struct.edgelist** %10, %struct.edgelist*** %edges, align 8, !dbg !4754
  call void @makecubetable(), !dbg !4755
  store i32 0, i32* %a, align 4, !dbg !4756
  br label %for.cond, !dbg !4758

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %a, align 4, !dbg !4759
  %13 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4761
  %totelem = getelementptr inbounds %struct.process, %struct.process* %13, i32 0, i32 1, !dbg !4762
  %14 = load i32, i32* %totelem, align 4, !dbg !4762
  %cmp = icmp slt i32 %12, %14, !dbg !4763
  br i1 %cmp, label %for.body, label %for.end, !dbg !4764

for.body:                                         ; preds = %for.cond
  %15 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4765
  %16 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !4767
  %17 = load i32, i32* %a, align 4, !dbg !4768
  call void @find_first_points(%struct.process* %15, %struct.MetaBall* %16, i32 %17), !dbg !4769
  br label %for.inc, !dbg !4770

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %a, align 4, !dbg !4771
  %inc = add nsw i32 %18, 1, !dbg !4771
  store i32 %inc, i32* %a, align 4, !dbg !4771
  br label %for.cond, !dbg !4772, !llvm.loop !4773

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !4775

while.cond:                                       ; preds = %while.body, %for.end
  %19 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4776
  %cubes = getelementptr inbounds %struct.process, %struct.process* %19, i32 0, i32 8, !dbg !4777
  %20 = load %struct.cubes*, %struct.cubes** %cubes, align 8, !dbg !4777
  %cmp5 = icmp ne %struct.cubes* %20, null, !dbg !4778
  br i1 %cmp5, label %while.body, label %while.end, !dbg !4775

while.body:                                       ; preds = %while.cond
  %21 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4779
  %cubes6 = getelementptr inbounds %struct.process, %struct.process* %21, i32 0, i32 8, !dbg !4781
  %22 = load %struct.cubes*, %struct.cubes** %cubes6, align 8, !dbg !4781
  %cube = getelementptr inbounds %struct.cubes, %struct.cubes* %22, i32 0, i32 0, !dbg !4782
  %23 = bitcast %struct.cube* %c to i8*, !dbg !4782
  %24 = bitcast %struct.cube* %cube to i8*, !dbg !4782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 80, i1 false), !dbg !4782
  %25 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4783
  %26 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !4784
  call void @docube(%struct.process* %25, %struct.cube* %c, %struct.MetaBall* %26), !dbg !4785
  %27 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4786
  %cubes7 = getelementptr inbounds %struct.process, %struct.process* %27, i32 0, i32 8, !dbg !4787
  %28 = load %struct.cubes*, %struct.cubes** %cubes7, align 8, !dbg !4787
  %next = getelementptr inbounds %struct.cubes, %struct.cubes* %28, i32 0, i32 1, !dbg !4788
  %29 = load %struct.cubes*, %struct.cubes** %next, align 8, !dbg !4788
  %30 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4789
  %cubes8 = getelementptr inbounds %struct.process, %struct.process* %30, i32 0, i32 8, !dbg !4790
  store %struct.cubes* %29, %struct.cubes** %cubes8, align 8, !dbg !4791
  %31 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4792
  %i = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 0, !dbg !4793
  %32 = load i32, i32* %i, align 8, !dbg !4793
  %sub = sub nsw i32 %32, 1, !dbg !4794
  %j = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 1, !dbg !4795
  %33 = load i32, i32* %j, align 4, !dbg !4795
  %k = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 2, !dbg !4796
  %34 = load i32, i32* %k, align 8, !dbg !4796
  call void @testface(%struct.process* %31, i32 %sub, i32 %33, i32 %34, %struct.cube* %c, i32 2, i32 0, i32 1, i32 2, i32 3), !dbg !4797
  %35 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4798
  %i9 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 0, !dbg !4799
  %36 = load i32, i32* %i9, align 8, !dbg !4799
  %add = add nsw i32 %36, 1, !dbg !4800
  %j10 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 1, !dbg !4801
  %37 = load i32, i32* %j10, align 4, !dbg !4801
  %k11 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 2, !dbg !4802
  %38 = load i32, i32* %k11, align 8, !dbg !4802
  call void @testface(%struct.process* %35, i32 %add, i32 %37, i32 %38, %struct.cube* %c, i32 2, i32 4, i32 5, i32 6, i32 7), !dbg !4803
  %39 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4804
  %i12 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 0, !dbg !4805
  %40 = load i32, i32* %i12, align 8, !dbg !4805
  %j13 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 1, !dbg !4806
  %41 = load i32, i32* %j13, align 4, !dbg !4806
  %sub14 = sub nsw i32 %41, 1, !dbg !4807
  %k15 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 2, !dbg !4808
  %42 = load i32, i32* %k15, align 8, !dbg !4808
  call void @testface(%struct.process* %39, i32 %40, i32 %sub14, i32 %42, %struct.cube* %c, i32 1, i32 0, i32 1, i32 4, i32 5), !dbg !4809
  %43 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4810
  %i16 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 0, !dbg !4811
  %44 = load i32, i32* %i16, align 8, !dbg !4811
  %j17 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 1, !dbg !4812
  %45 = load i32, i32* %j17, align 4, !dbg !4812
  %add18 = add nsw i32 %45, 1, !dbg !4813
  %k19 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 2, !dbg !4814
  %46 = load i32, i32* %k19, align 8, !dbg !4814
  call void @testface(%struct.process* %43, i32 %44, i32 %add18, i32 %46, %struct.cube* %c, i32 1, i32 2, i32 3, i32 6, i32 7), !dbg !4815
  %47 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4816
  %i20 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 0, !dbg !4817
  %48 = load i32, i32* %i20, align 8, !dbg !4817
  %j21 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 1, !dbg !4818
  %49 = load i32, i32* %j21, align 4, !dbg !4818
  %k22 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 2, !dbg !4819
  %50 = load i32, i32* %k22, align 8, !dbg !4819
  %sub23 = sub nsw i32 %50, 1, !dbg !4820
  call void @testface(%struct.process* %47, i32 %48, i32 %49, i32 %sub23, %struct.cube* %c, i32 0, i32 0, i32 2, i32 4, i32 6), !dbg !4821
  %51 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4822
  %i24 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 0, !dbg !4823
  %52 = load i32, i32* %i24, align 8, !dbg !4823
  %j25 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 1, !dbg !4824
  %53 = load i32, i32* %j25, align 4, !dbg !4824
  %k26 = getelementptr inbounds %struct.cube, %struct.cube* %c, i32 0, i32 2, !dbg !4825
  %54 = load i32, i32* %k26, align 8, !dbg !4825
  %add27 = add nsw i32 %54, 1, !dbg !4826
  call void @testface(%struct.process* %51, i32 %52, i32 %53, i32 %add27, %struct.cube* %c, i32 0, i32 1, i32 3, i32 5, i32 7), !dbg !4827
  br label %while.cond, !dbg !4775, !llvm.loop !4828

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4830
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4831 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4837, metadata !DIExpression()), !dbg !4838
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4839, metadata !DIExpression()), !dbg !4840
  %0 = load float*, float** %a.addr, align 8, !dbg !4841
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4841
  %1 = load float, float* %arrayidx, align 4, !dbg !4841
  %2 = load float*, float** %r.addr, align 8, !dbg !4842
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4842
  store float %1, float* %arrayidx1, align 4, !dbg !4843
  %3 = load float*, float** %a.addr, align 8, !dbg !4844
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4844
  %4 = load float, float* %arrayidx2, align 4, !dbg !4844
  %5 = load float*, float** %r.addr, align 8, !dbg !4845
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4845
  store float %4, float* %arrayidx3, align 4, !dbg !4846
  %6 = load float*, float** %a.addr, align 8, !dbg !4847
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4847
  %7 = load float, float* %arrayidx4, align 4, !dbg !4847
  %8 = load float*, float** %r.addr, align 8, !dbg !4848
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4848
  store float %7, float* %arrayidx5, align 4, !dbg !4849
  ret void, !dbg !4850
}

; Function Attrs: noinline nounwind uwtable
define internal void @freepolygonize(%struct.process* %process) #0 !dbg !4851 {
entry:
  %process.addr = alloca %struct.process*, align 8
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !4854, metadata !DIExpression()), !dbg !4855
  %0 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4856
  %1 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4857
  %corners = getelementptr inbounds %struct.process, %struct.process* %1, i32 0, i32 11, !dbg !4858
  %2 = load %struct.corner**, %struct.corner*** %corners, align 8, !dbg !4858
  %3 = bitcast %struct.corner** %2 to i8*, !dbg !4857
  call void %0(i8* %3), !dbg !4856
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4859
  %5 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4860
  %edges = getelementptr inbounds %struct.process, %struct.process* %5, i32 0, i32 12, !dbg !4861
  %6 = load %struct.edgelist**, %struct.edgelist*** %edges, align 8, !dbg !4861
  %7 = bitcast %struct.edgelist** %6 to i8*, !dbg !4860
  call void %4(i8* %7), !dbg !4859
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4862
  %9 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4863
  %centers = getelementptr inbounds %struct.process, %struct.process* %9, i32 0, i32 10, !dbg !4864
  %10 = load %struct.centerlist**, %struct.centerlist*** %centers, align 8, !dbg !4864
  %11 = bitcast %struct.centerlist** %10 to i8*, !dbg !4863
  call void %8(i8* %11), !dbg !4862
  %12 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4865
  %call = call i8* @new_pgn_element(%struct.process* %12, i32 -1), !dbg !4866
  %13 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4867
  %vertices = getelementptr inbounds %struct.process, %struct.process* %13, i32 0, i32 9, !dbg !4869
  %ptr = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices, i32 0, i32 2, !dbg !4870
  %14 = load %struct.vertex*, %struct.vertex** %ptr, align 8, !dbg !4870
  %tobool = icmp ne %struct.vertex* %14, null, !dbg !4867
  br i1 %tobool, label %if.then, label %if.end, !dbg !4871

if.then:                                          ; preds = %entry
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4872
  %16 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !4874
  %vertices1 = getelementptr inbounds %struct.process, %struct.process* %16, i32 0, i32 9, !dbg !4875
  %ptr2 = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices1, i32 0, i32 2, !dbg !4876
  %17 = load %struct.vertex*, %struct.vertex** %ptr2, align 8, !dbg !4876
  %18 = bitcast %struct.vertex* %17 to i8*, !dbg !4874
  call void %15(i8* %18), !dbg !4872
  br label %if.end, !dbg !4877

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4878
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mball_minmax_ex(%struct.MetaBall* %mb, float* %min, float* %max, [4 x float]* %obmat, i16 signext %flag) #0 !dbg !4879 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %obmat.addr = alloca [4 x float]*, align 8
  %flag.addr = alloca i16, align 2
  %scale = alloca float, align 4
  %ml = alloca %struct.MetaElem*, align 8
  %changed = alloca i8, align 1
  %centroid = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %scale_mb = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !4883, metadata !DIExpression()), !dbg !4884
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !4885, metadata !DIExpression()), !dbg !4886
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !4887, metadata !DIExpression()), !dbg !4888
  store [4 x float]* %obmat, [4 x float]** %obmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %obmat.addr, metadata !4889, metadata !DIExpression()), !dbg !4890
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !4891, metadata !DIExpression()), !dbg !4892
  call void @llvm.dbg.declare(metadata float* %scale, metadata !4893, metadata !DIExpression()), !dbg !4894
  %0 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !4895
  %tobool = icmp ne [4 x float]* %0, null, !dbg !4895
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4895

cond.true:                                        ; preds = %entry
  %1 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !4896
  %call = call float @mat4_to_scale([4 x float]* %1), !dbg !4897
  br label %cond.end, !dbg !4895

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4895

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %call, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !4895
  store float %cond, float* %scale, align 4, !dbg !4894
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !4898, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !4900, metadata !DIExpression()), !dbg !4901
  store i8 0, i8* %changed, align 1, !dbg !4901
  call void @llvm.dbg.declare(metadata [3 x float]* %centroid, metadata !4902, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !4904, metadata !DIExpression()), !dbg !4905
  %2 = load float*, float** %min.addr, align 8, !dbg !4906
  %arrayidx = getelementptr inbounds float, float* %2, i64 2, !dbg !4906
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !4906
  %3 = load float*, float** %min.addr, align 8, !dbg !4906
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !4906
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !4906
  %4 = load float*, float** %min.addr, align 8, !dbg !4906
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !4906
  store float 0x46293E5940000000, float* %arrayidx2, align 4, !dbg !4906
  %5 = load float*, float** %max.addr, align 8, !dbg !4906
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 2, !dbg !4906
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !4906
  %6 = load float*, float** %max.addr, align 8, !dbg !4906
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !4906
  store float 0xC6293E5940000000, float* %arrayidx4, align 4, !dbg !4906
  %7 = load float*, float** %max.addr, align 8, !dbg !4906
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 0, !dbg !4906
  store float 0xC6293E5940000000, float* %arrayidx5, align 4, !dbg !4906
  %8 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !4908
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %8, i32 0, i32 2, !dbg !4910
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !4911
  %9 = load i8*, i8** %first, align 8, !dbg !4911
  %10 = bitcast i8* %9 to %struct.MetaElem*, !dbg !4908
  store %struct.MetaElem* %10, %struct.MetaElem** %ml, align 8, !dbg !4912
  br label %for.cond, !dbg !4913

for.cond:                                         ; preds = %for.inc27, %cond.end
  %11 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !4914
  %tobool6 = icmp ne %struct.MetaElem* %11, null, !dbg !4916
  br i1 %tobool6, label %for.body, label %for.end28, !dbg !4916

for.body:                                         ; preds = %for.cond
  %12 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !4917
  %flag7 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %12, i32 0, i32 4, !dbg !4920
  %13 = load i16, i16* %flag7, align 2, !dbg !4920
  %conv = sext i16 %13 to i32, !dbg !4917
  %14 = load i16, i16* %flag.addr, align 2, !dbg !4921
  %conv8 = sext i16 %14 to i32, !dbg !4921
  %and = and i32 %conv, %conv8, !dbg !4922
  %15 = load i16, i16* %flag.addr, align 2, !dbg !4923
  %conv9 = sext i16 %15 to i32, !dbg !4923
  %cmp = icmp eq i32 %and, %conv9, !dbg !4924
  br i1 %cmp, label %if.then, label %if.end26, !dbg !4925

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %scale_mb, metadata !4926, metadata !DIExpression()), !dbg !4928
  %16 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !4929
  %rad = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %16, i32 0, i32 14, !dbg !4930
  %17 = load float, float* %rad, align 8, !dbg !4930
  %mul = fmul float %17, 5.000000e-01, !dbg !4931
  %18 = load float, float* %scale, align 4, !dbg !4932
  %mul11 = fmul float %mul, %18, !dbg !4933
  store float %mul11, float* %scale_mb, align 4, !dbg !4928
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4934, metadata !DIExpression()), !dbg !4935
  %19 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !4936
  %tobool12 = icmp ne [4 x float]* %19, null, !dbg !4936
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !4938

if.then13:                                        ; preds = %if.then
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %centroid, i64 0, i64 0, !dbg !4939
  %20 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !4941
  %21 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !4942
  %x = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %21, i32 0, i32 7, !dbg !4943
  call void @mul_v3_m4v3(float* %arraydecay, [4 x float]* %20, float* %x), !dbg !4944
  br label %if.end, !dbg !4945

if.else:                                          ; preds = %if.then
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %centroid, i64 0, i64 0, !dbg !4946
  %22 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !4948
  %x15 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %22, i32 0, i32 7, !dbg !4949
  call void @copy_v3_v3(float* %arraydecay14, float* %x15), !dbg !4950
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  store i32 -1, i32* %i, align 4, !dbg !4951
  br label %for.cond16, !dbg !4953

for.cond16:                                       ; preds = %for.inc, %if.end
  %23 = load i32, i32* %i, align 4, !dbg !4954
  %cmp17 = icmp ne i32 %23, 3, !dbg !4956
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !4957

for.body19:                                       ; preds = %for.cond16
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4958
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %centroid, i64 0, i64 0, !dbg !4960
  call void @copy_v3_v3(float* %arraydecay20, float* %arraydecay21), !dbg !4961
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4962
  %24 = load float, float* %scale_mb, align 4, !dbg !4963
  %25 = load i32, i32* %i, align 4, !dbg !4964
  %conv23 = sitofp i32 %25 to float, !dbg !4964
  %mul24 = fmul float %24, %conv23, !dbg !4965
  call void @add_v3_fl(float* %arraydecay22, float %mul24), !dbg !4966
  %26 = load float*, float** %min.addr, align 8, !dbg !4967
  %27 = load float*, float** %max.addr, align 8, !dbg !4968
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4969
  call void @minmax_v3v3_v3(float* %26, float* %27, float* %arraydecay25), !dbg !4970
  br label %for.inc, !dbg !4971

for.inc:                                          ; preds = %for.body19
  %28 = load i32, i32* %i, align 4, !dbg !4972
  %add = add nsw i32 %28, 2, !dbg !4972
  store i32 %add, i32* %i, align 4, !dbg !4972
  br label %for.cond16, !dbg !4973, !llvm.loop !4974

for.end:                                          ; preds = %for.cond16
  store i8 1, i8* %changed, align 1, !dbg !4976
  br label %if.end26, !dbg !4977

if.end26:                                         ; preds = %for.end, %for.body
  br label %for.inc27, !dbg !4978

for.inc27:                                        ; preds = %if.end26
  %29 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !4979
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %29, i32 0, i32 0, !dbg !4980
  %30 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !4980
  store %struct.MetaElem* %30, %struct.MetaElem** %ml, align 8, !dbg !4981
  br label %for.cond, !dbg !4982, !llvm.loop !4983

for.end28:                                        ; preds = %for.cond
  %31 = load i8, i8* %changed, align 1, !dbg !4985
  ret i8 %31, !dbg !4986
}

declare dso_local float @mat4_to_scale([4 x float]*) #2

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_fl(float* %r, float %f) #0 !dbg !4987 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4990, metadata !DIExpression()), !dbg !4991
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !4992, metadata !DIExpression()), !dbg !4993
  %0 = load float, float* %f.addr, align 4, !dbg !4994
  %1 = load float*, float** %r.addr, align 8, !dbg !4995
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !4995
  %2 = load float, float* %arrayidx, align 4, !dbg !4996
  %add = fadd float %2, %0, !dbg !4996
  store float %add, float* %arrayidx, align 4, !dbg !4996
  %3 = load float, float* %f.addr, align 4, !dbg !4997
  %4 = load float*, float** %r.addr, align 8, !dbg !4998
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !4998
  %5 = load float, float* %arrayidx1, align 4, !dbg !4999
  %add2 = fadd float %5, %3, !dbg !4999
  store float %add2, float* %arrayidx1, align 4, !dbg !4999
  %6 = load float, float* %f.addr, align 4, !dbg !5000
  %7 = load float*, float** %r.addr, align 8, !dbg !5001
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !5001
  %8 = load float, float* %arrayidx3, align 4, !dbg !5002
  %add4 = fadd float %8, %6, !dbg !5002
  store float %add4, float* %arrayidx3, align 4, !dbg !5002
  ret void, !dbg !5003
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mball_minmax(%struct.MetaBall* %mb, float* %min, float* %max) #0 !dbg !5004 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !5009, metadata !DIExpression()), !dbg !5010
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !5011, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !5013, metadata !DIExpression()), !dbg !5014
  %0 = load float*, float** %min.addr, align 8, !dbg !5015
  %arrayidx = getelementptr inbounds float, float* %0, i64 2, !dbg !5015
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !5015
  %1 = load float*, float** %min.addr, align 8, !dbg !5015
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !5015
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !5015
  %2 = load float*, float** %min.addr, align 8, !dbg !5015
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !5015
  store float 0x46293E5940000000, float* %arrayidx2, align 4, !dbg !5015
  %3 = load float*, float** %max.addr, align 8, !dbg !5015
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 2, !dbg !5015
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !5015
  %4 = load float*, float** %max.addr, align 8, !dbg !5015
  %arrayidx4 = getelementptr inbounds float, float* %4, i64 1, !dbg !5015
  store float 0xC6293E5940000000, float* %arrayidx4, align 4, !dbg !5015
  %5 = load float*, float** %max.addr, align 8, !dbg !5015
  %arrayidx5 = getelementptr inbounds float, float* %5, i64 0, !dbg !5015
  store float 0xC6293E5940000000, float* %arrayidx5, align 4, !dbg !5015
  %6 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5017
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %6, i32 0, i32 2, !dbg !5019
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !5020
  %7 = load i8*, i8** %first, align 8, !dbg !5020
  %8 = bitcast i8* %7 to %struct.MetaElem*, !dbg !5017
  store %struct.MetaElem* %8, %struct.MetaElem** %ml, align 8, !dbg !5021
  br label %for.cond, !dbg !5022

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5023
  %tobool = icmp ne %struct.MetaElem* %9, null, !dbg !5025
  br i1 %tobool, label %for.body, label %for.end, !dbg !5025

for.body:                                         ; preds = %for.cond
  %10 = load float*, float** %min.addr, align 8, !dbg !5026
  %11 = load float*, float** %max.addr, align 8, !dbg !5028
  %12 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5029
  %x = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %12, i32 0, i32 7, !dbg !5030
  call void @minmax_v3v3_v3(float* %10, float* %11, float* %x), !dbg !5031
  br label %for.inc, !dbg !5032

for.inc:                                          ; preds = %for.body
  %13 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5033
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %13, i32 0, i32 0, !dbg !5034
  %14 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !5034
  store %struct.MetaElem* %14, %struct.MetaElem** %ml, align 8, !dbg !5035
  br label %for.cond, !dbg !5036, !llvm.loop !5037

for.end:                                          ; preds = %for.cond
  %15 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5039
  %elems6 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %15, i32 0, i32 2, !dbg !5040
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %elems6), !dbg !5041
  %conv = zext i8 %call to i32, !dbg !5041
  %cmp = icmp eq i32 %conv, 0, !dbg !5042
  %conv7 = zext i1 %cmp to i32, !dbg !5042
  %conv8 = trunc i32 %conv7 to i8, !dbg !5043
  ret i8 %conv8, !dbg !5044
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !5045 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5051, metadata !DIExpression()), !dbg !5052
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5053
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5054
  %1 = load i8*, i8** %first, align 8, !dbg !5054
  %cmp = icmp eq i8* %1, null, !dbg !5055
  %conv = zext i1 %cmp to i32, !dbg !5055
  %conv1 = trunc i32 %conv to i8, !dbg !5056
  ret i8 %conv1, !dbg !5057
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mball_center_median(%struct.MetaBall* %mb, float* %r_cent) #0 !dbg !5058 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %r_cent.addr = alloca float*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  %total = alloca i32, align 4
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !5061, metadata !DIExpression()), !dbg !5062
  store float* %r_cent, float** %r_cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_cent.addr, metadata !5063, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !5065, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.declare(metadata i32* %total, metadata !5067, metadata !DIExpression()), !dbg !5068
  store i32 0, i32* %total, align 4, !dbg !5068
  %0 = load float*, float** %r_cent.addr, align 8, !dbg !5069
  call void @zero_v3(float* %0), !dbg !5070
  %1 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5071
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %1, i32 0, i32 2, !dbg !5073
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !5074
  %2 = load i8*, i8** %first, align 8, !dbg !5074
  %3 = bitcast i8* %2 to %struct.MetaElem*, !dbg !5071
  store %struct.MetaElem* %3, %struct.MetaElem** %ml, align 8, !dbg !5075
  br label %for.cond, !dbg !5076

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5077
  %tobool = icmp ne %struct.MetaElem* %4, null, !dbg !5079
  br i1 %tobool, label %for.body, label %for.end, !dbg !5079

for.body:                                         ; preds = %for.cond
  %5 = load float*, float** %r_cent.addr, align 8, !dbg !5080
  %6 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5082
  %x = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %6, i32 0, i32 7, !dbg !5083
  call void @add_v3_v3(float* %5, float* %x), !dbg !5084
  %7 = load i32, i32* %total, align 4, !dbg !5085
  %inc = add nsw i32 %7, 1, !dbg !5085
  store i32 %inc, i32* %total, align 4, !dbg !5085
  br label %for.inc, !dbg !5086

for.inc:                                          ; preds = %for.body
  %8 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5087
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %8, i32 0, i32 0, !dbg !5088
  %9 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !5088
  store %struct.MetaElem* %9, %struct.MetaElem** %ml, align 8, !dbg !5089
  br label %for.cond, !dbg !5090, !llvm.loop !5091

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %total, align 4, !dbg !5093
  %tobool1 = icmp ne i32 %10, 0, !dbg !5093
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5095

if.then:                                          ; preds = %for.end
  %11 = load float*, float** %r_cent.addr, align 8, !dbg !5096
  %12 = load i32, i32* %total, align 4, !dbg !5098
  %conv = sitofp i32 %12 to float, !dbg !5099
  %div = fdiv float 1.000000e+00, %conv, !dbg !5100
  call void @mul_v3_fl(float* %11, float %div), !dbg !5101
  br label %if.end, !dbg !5102

if.end:                                           ; preds = %if.then, %for.end
  %13 = load i32, i32* %total, align 4, !dbg !5103
  %cmp = icmp ne i32 %13, 0, !dbg !5104
  %conv2 = zext i1 %cmp to i32, !dbg !5104
  %conv3 = trunc i32 %conv2 to i8, !dbg !5105
  ret i8 %conv3, !dbg !5106
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !5107 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5110, metadata !DIExpression()), !dbg !5111
  %0 = load float*, float** %r.addr, align 8, !dbg !5112
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5112
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5113
  %1 = load float*, float** %r.addr, align 8, !dbg !5114
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !5114
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !5115
  %2 = load float*, float** %r.addr, align 8, !dbg !5116
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !5116
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !5117
  ret void, !dbg !5118
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !5119 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5120, metadata !DIExpression()), !dbg !5121
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5122, metadata !DIExpression()), !dbg !5123
  %0 = load float*, float** %a.addr, align 8, !dbg !5124
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5124
  %1 = load float, float* %arrayidx, align 4, !dbg !5124
  %2 = load float*, float** %r.addr, align 8, !dbg !5125
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5125
  %3 = load float, float* %arrayidx1, align 4, !dbg !5126
  %add = fadd float %3, %1, !dbg !5126
  store float %add, float* %arrayidx1, align 4, !dbg !5126
  %4 = load float*, float** %a.addr, align 8, !dbg !5127
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5127
  %5 = load float, float* %arrayidx2, align 4, !dbg !5127
  %6 = load float*, float** %r.addr, align 8, !dbg !5128
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5128
  %7 = load float, float* %arrayidx3, align 4, !dbg !5129
  %add4 = fadd float %7, %5, !dbg !5129
  store float %add4, float* %arrayidx3, align 4, !dbg !5129
  %8 = load float*, float** %a.addr, align 8, !dbg !5130
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5130
  %9 = load float, float* %arrayidx5, align 4, !dbg !5130
  %10 = load float*, float** %r.addr, align 8, !dbg !5131
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5131
  %11 = load float, float* %arrayidx6, align 4, !dbg !5132
  %add7 = fadd float %11, %9, !dbg !5132
  store float %add7, float* %arrayidx6, align 4, !dbg !5132
  ret void, !dbg !5133
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !5134 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5135, metadata !DIExpression()), !dbg !5136
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  %0 = load float, float* %f.addr, align 4, !dbg !5139
  %1 = load float*, float** %r.addr, align 8, !dbg !5140
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5140
  %2 = load float, float* %arrayidx, align 4, !dbg !5141
  %mul = fmul float %2, %0, !dbg !5141
  store float %mul, float* %arrayidx, align 4, !dbg !5141
  %3 = load float, float* %f.addr, align 4, !dbg !5142
  %4 = load float*, float** %r.addr, align 8, !dbg !5143
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !5143
  %5 = load float, float* %arrayidx1, align 4, !dbg !5144
  %mul2 = fmul float %5, %3, !dbg !5144
  store float %mul2, float* %arrayidx1, align 4, !dbg !5144
  %6 = load float, float* %f.addr, align 4, !dbg !5145
  %7 = load float*, float** %r.addr, align 8, !dbg !5146
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !5146
  %8 = load float, float* %arrayidx3, align 4, !dbg !5147
  %mul4 = fmul float %8, %6, !dbg !5147
  store float %mul4, float* %arrayidx3, align 4, !dbg !5147
  ret void, !dbg !5148
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mball_center_bounds(%struct.MetaBall* %mb, float* %r_cent) #0 !dbg !5149 {
entry:
  %retval = alloca i8, align 1
  %mb.addr = alloca %struct.MetaBall*, align 8
  %r_cent.addr = alloca float*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  store float* %r_cent, float** %r_cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_cent.addr, metadata !5152, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !5154, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !5156, metadata !DIExpression()), !dbg !5157
  %0 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5158
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !5160
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !5161
  %call = call zeroext i8 @BKE_mball_minmax(%struct.MetaBall* %0, float* %arraydecay, float* %arraydecay1), !dbg !5162
  %tobool = icmp ne i8 %call, 0, !dbg !5162
  br i1 %tobool, label %if.then, label %if.end, !dbg !5163

if.then:                                          ; preds = %entry
  %1 = load float*, float** %r_cent.addr, align 8, !dbg !5164
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !5166
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !5167
  call void @mid_v3_v3v3(float* %1, float* %arraydecay2, float* %arraydecay3), !dbg !5168
  store i8 1, i8* %retval, align 1, !dbg !5169
  br label %return, !dbg !5169

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5170
  br label %return, !dbg !5170

return:                                           ; preds = %if.end, %if.then
  %2 = load i8, i8* %retval, align 1, !dbg !5171
  ret i8 %2, !dbg !5171
}

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_transform(%struct.MetaBall* %mb, [4 x float]* %mat) #0 !dbg !5172 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %me = alloca %struct.MetaElem*, align 8
  %quat = alloca [4 x float], align 16
  %scale = alloca float, align 4
  %scale_sqrt = alloca float, align 4
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !5175, metadata !DIExpression()), !dbg !5176
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !5177, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %me, metadata !5179, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.declare(metadata [4 x float]* %quat, metadata !5181, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.declare(metadata float* %scale, metadata !5183, metadata !DIExpression()), !dbg !5184
  %0 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5185
  %call = call float @mat4_to_scale([4 x float]* %0), !dbg !5186
  store float %call, float* %scale, align 4, !dbg !5184
  call void @llvm.dbg.declare(metadata float* %scale_sqrt, metadata !5187, metadata !DIExpression()), !dbg !5188
  %1 = load float, float* %scale, align 4, !dbg !5189
  %call1 = call float @sqrtf(float %1) #9, !dbg !5190
  store float %call1, float* %scale_sqrt, align 4, !dbg !5188
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !5191
  %2 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5192
  call void @mat4_to_quat(float* %arraydecay, [4 x float]* %2), !dbg !5193
  %3 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5194
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %3, i32 0, i32 2, !dbg !5196
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !5197
  %4 = load i8*, i8** %first, align 8, !dbg !5197
  %5 = bitcast i8* %4 to %struct.MetaElem*, !dbg !5194
  store %struct.MetaElem* %5, %struct.MetaElem** %me, align 8, !dbg !5198
  br label %for.cond, !dbg !5199

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5200
  %tobool = icmp ne %struct.MetaElem* %6, null, !dbg !5202
  br i1 %tobool, label %for.body, label %for.end, !dbg !5202

for.body:                                         ; preds = %for.cond
  %7 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5203
  %8 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5205
  %x = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %8, i32 0, i32 7, !dbg !5206
  call void @mul_m4_v3([4 x float]* %7, float* %x), !dbg !5207
  %9 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5208
  %quat2 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %9, i32 0, i32 10, !dbg !5209
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %quat2, i64 0, i64 0, !dbg !5208
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !5210
  %10 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5211
  %quat5 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %10, i32 0, i32 10, !dbg !5212
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %quat5, i64 0, i64 0, !dbg !5211
  call void @mul_qt_qtqt(float* %arraydecay3, float* %arraydecay4, float* %arraydecay6), !dbg !5213
  %11 = load float, float* %scale, align 4, !dbg !5214
  %12 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5215
  %rad = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %12, i32 0, i32 14, !dbg !5216
  %13 = load float, float* %rad, align 8, !dbg !5217
  %mul = fmul float %13, %11, !dbg !5217
  store float %mul, float* %rad, align 8, !dbg !5217
  %14 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5218
  %type = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %14, i32 0, i32 3, !dbg !5218
  %15 = load i16, i16* %type, align 8, !dbg !5218
  %conv = sext i16 %15 to i32, !dbg !5218
  %cmp = icmp eq i32 %conv, 6, !dbg !5218
  br i1 %cmp, label %if.else, label %if.then, !dbg !5220

if.then:                                          ; preds = %for.body
  %16 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5221
  %expx = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %16, i32 0, i32 11, !dbg !5223
  %17 = load float, float* %scale, align 4, !dbg !5224
  call void @mul_v3_fl(float* %expx, float %17), !dbg !5225
  br label %if.end, !dbg !5226

if.else:                                          ; preds = %for.body
  %18 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5227
  %expx8 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %18, i32 0, i32 11, !dbg !5229
  %19 = load float, float* %scale_sqrt, align 4, !dbg !5230
  call void @mul_v3_fl(float* %expx8, float %19), !dbg !5231
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !5232

for.inc:                                          ; preds = %if.end
  %20 = load %struct.MetaElem*, %struct.MetaElem** %me, align 8, !dbg !5233
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %20, i32 0, i32 0, !dbg !5234
  %21 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !5234
  store %struct.MetaElem* %21, %struct.MetaElem** %me, align 8, !dbg !5235
  br label %for.cond, !dbg !5236, !llvm.loop !5237

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5239
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #6

declare dso_local void @mat4_to_quat(float*, [4 x float]*) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

declare dso_local void @mul_qt_qtqt(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_translate(%struct.MetaBall* %mb, float* %offset) #0 !dbg !5240 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %offset.addr = alloca float*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !5243, metadata !DIExpression()), !dbg !5244
  store float* %offset, float** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata float** %offset.addr, metadata !5245, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !5247, metadata !DIExpression()), !dbg !5248
  %0 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5249
  %elems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %0, i32 0, i32 2, !dbg !5251
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems, i32 0, i32 0, !dbg !5252
  %1 = load i8*, i8** %first, align 8, !dbg !5252
  %2 = bitcast i8* %1 to %struct.MetaElem*, !dbg !5249
  store %struct.MetaElem* %2, %struct.MetaElem** %ml, align 8, !dbg !5253
  br label %for.cond, !dbg !5254

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5255
  %tobool = icmp ne %struct.MetaElem* %3, null, !dbg !5257
  br i1 %tobool, label %for.body, label %for.end, !dbg !5257

for.body:                                         ; preds = %for.cond
  %4 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5258
  %x = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %4, i32 0, i32 7, !dbg !5260
  %5 = load float*, float** %offset.addr, align 8, !dbg !5261
  call void @add_v3_v3(float* %x, float* %5), !dbg !5262
  br label %for.inc, !dbg !5263

for.inc:                                          ; preds = %for.body
  %6 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5264
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %6, i32 0, i32 0, !dbg !5265
  %7 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !5265
  store %struct.MetaElem* %7, %struct.MetaElem** %ml, align 8, !dbg !5266
  br label %for.cond, !dbg !5267, !llvm.loop !5268

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5270
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_select_all(%struct.MetaBall* %mb) #0 !dbg !5271 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !5274, metadata !DIExpression()), !dbg !5275
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !5276, metadata !DIExpression()), !dbg !5277
  %0 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5278
  %editelems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %0, i32 0, i32 4, !dbg !5280
  %1 = load %struct.ListBase*, %struct.ListBase** %editelems, align 8, !dbg !5280
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5281
  %2 = load i8*, i8** %first, align 8, !dbg !5281
  %3 = bitcast i8* %2 to %struct.MetaElem*, !dbg !5278
  store %struct.MetaElem* %3, %struct.MetaElem** %ml, align 8, !dbg !5282
  br label %for.cond, !dbg !5283

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5284
  %tobool = icmp ne %struct.MetaElem* %4, null, !dbg !5286
  br i1 %tobool, label %for.body, label %for.end, !dbg !5286

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5287
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %5, i32 0, i32 4, !dbg !5289
  %6 = load i16, i16* %flag, align 2, !dbg !5290
  %conv = sext i16 %6 to i32, !dbg !5290
  %or = or i32 %conv, 1, !dbg !5290
  %conv1 = trunc i32 %or to i16, !dbg !5290
  store i16 %conv1, i16* %flag, align 2, !dbg !5290
  br label %for.inc, !dbg !5291

for.inc:                                          ; preds = %for.body
  %7 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5292
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %7, i32 0, i32 0, !dbg !5293
  %8 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !5293
  store %struct.MetaElem* %8, %struct.MetaElem** %ml, align 8, !dbg !5294
  br label %for.cond, !dbg !5295, !llvm.loop !5296

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5298
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_deselect_all(%struct.MetaBall* %mb) #0 !dbg !5299 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !5300, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !5302, metadata !DIExpression()), !dbg !5303
  %0 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5304
  %editelems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %0, i32 0, i32 4, !dbg !5306
  %1 = load %struct.ListBase*, %struct.ListBase** %editelems, align 8, !dbg !5306
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5307
  %2 = load i8*, i8** %first, align 8, !dbg !5307
  %3 = bitcast i8* %2 to %struct.MetaElem*, !dbg !5304
  store %struct.MetaElem* %3, %struct.MetaElem** %ml, align 8, !dbg !5308
  br label %for.cond, !dbg !5309

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5310
  %tobool = icmp ne %struct.MetaElem* %4, null, !dbg !5312
  br i1 %tobool, label %for.body, label %for.end, !dbg !5312

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5313
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %5, i32 0, i32 4, !dbg !5315
  %6 = load i16, i16* %flag, align 2, !dbg !5316
  %conv = sext i16 %6 to i32, !dbg !5316
  %and = and i32 %conv, -2, !dbg !5316
  %conv1 = trunc i32 %and to i16, !dbg !5316
  store i16 %conv1, i16* %flag, align 2, !dbg !5316
  br label %for.inc, !dbg !5317

for.inc:                                          ; preds = %for.body
  %7 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5318
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %7, i32 0, i32 0, !dbg !5319
  %8 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !5319
  store %struct.MetaElem* %8, %struct.MetaElem** %ml, align 8, !dbg !5320
  br label %for.cond, !dbg !5321, !llvm.loop !5322

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5324
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mball_select_swap(%struct.MetaBall* %mb) #0 !dbg !5325 {
entry:
  %mb.addr = alloca %struct.MetaBall*, align 8
  %ml = alloca %struct.MetaElem*, align 8
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !5328, metadata !DIExpression()), !dbg !5329
  %0 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !5330
  %editelems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %0, i32 0, i32 4, !dbg !5332
  %1 = load %struct.ListBase*, %struct.ListBase** %editelems, align 8, !dbg !5332
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5333
  %2 = load i8*, i8** %first, align 8, !dbg !5333
  %3 = bitcast i8* %2 to %struct.MetaElem*, !dbg !5330
  store %struct.MetaElem* %3, %struct.MetaElem** %ml, align 8, !dbg !5334
  br label %for.cond, !dbg !5335

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5336
  %tobool = icmp ne %struct.MetaElem* %4, null, !dbg !5338
  br i1 %tobool, label %for.body, label %for.end, !dbg !5338

for.body:                                         ; preds = %for.cond
  %5 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5339
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %5, i32 0, i32 4, !dbg !5341
  %6 = load i16, i16* %flag, align 2, !dbg !5342
  %conv = sext i16 %6 to i32, !dbg !5342
  %xor = xor i32 %conv, 1, !dbg !5342
  %conv1 = trunc i32 %xor to i16, !dbg !5342
  store i16 %conv1, i16* %flag, align 2, !dbg !5342
  br label %for.inc, !dbg !5343

for.inc:                                          ; preds = %for.body
  %7 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !5344
  %next = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %7, i32 0, i32 0, !dbg !5345
  %8 = load %struct.MetaElem*, %struct.MetaElem** %next, align 8, !dbg !5345
  store %struct.MetaElem* %8, %struct.MetaElem** %ml, align 8, !dbg !5346
  br label %for.cond, !dbg !5347, !llvm.loop !5348

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5350
}

declare dso_local void @extern_local_matarar(%struct.Material**, i16 signext) #2

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @has_zero_axis_m4([4 x float]*) #2

declare dso_local void @quat_to_mat4([4 x float]*, float*) #2

declare dso_local void @unit_m4([4 x float]*) #2

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_fl3(float* %v, float %x, float %y, float %z) #0 !dbg !5351 {
entry:
  %v.addr = alloca float*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !5354, metadata !DIExpression()), !dbg !5355
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !5356, metadata !DIExpression()), !dbg !5357
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !5358, metadata !DIExpression()), !dbg !5359
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !5360, metadata !DIExpression()), !dbg !5361
  %0 = load float, float* %x.addr, align 4, !dbg !5362
  %1 = load float*, float** %v.addr, align 8, !dbg !5363
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5363
  store float %0, float* %arrayidx, align 4, !dbg !5364
  %2 = load float, float* %y.addr, align 4, !dbg !5365
  %3 = load float*, float** %v.addr, align 8, !dbg !5366
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !5366
  store float %2, float* %arrayidx1, align 4, !dbg !5367
  %4 = load float, float* %z.addr, align 4, !dbg !5368
  %5 = load float*, float** %v.addr, align 8, !dbg !5369
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 2, !dbg !5369
  store float %4, float* %arrayidx2, align 4, !dbg !5370
  ret void, !dbg !5371
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_mballco(%struct.MetaElem* %ml, float* %vec) #0 !dbg !5372 {
entry:
  %ml.addr = alloca %struct.MetaElem*, align 8
  %vec.addr = alloca float*, align 8
  store %struct.MetaElem* %ml, %struct.MetaElem** %ml.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml.addr, metadata !5375, metadata !DIExpression()), !dbg !5376
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5377, metadata !DIExpression()), !dbg !5378
  %0 = load %struct.MetaElem*, %struct.MetaElem** %ml.addr, align 8, !dbg !5379
  %mat = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %0, i32 0, i32 18, !dbg !5381
  %1 = load float*, float** %mat, align 8, !dbg !5381
  %tobool = icmp ne float* %1, null, !dbg !5379
  br i1 %tobool, label %if.then, label %if.end, !dbg !5382

if.then:                                          ; preds = %entry
  %2 = load %struct.MetaElem*, %struct.MetaElem** %ml.addr, align 8, !dbg !5383
  %mat1 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %2, i32 0, i32 18, !dbg !5385
  %3 = load float*, float** %mat1, align 8, !dbg !5385
  %4 = bitcast float* %3 to [4 x float]*, !dbg !5386
  %5 = load float*, float** %vec.addr, align 8, !dbg !5387
  call void @mul_m4_v3([4 x float]* %4, float* %5), !dbg !5388
  br label %if.end, !dbg !5389

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5390
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal float @densfunc(%struct.MetaElem* %ball, float %x, float %y, float %z) #0 !dbg !5391 {
entry:
  %retval = alloca float, align 4
  %ball.addr = alloca %struct.MetaElem*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %dist2 = alloca float, align 4
  %dvec = alloca [3 x float], align 4
  store %struct.MetaElem* %ball, %struct.MetaElem** %ball.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ball.addr, metadata !5394, metadata !DIExpression()), !dbg !5395
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !5396, metadata !DIExpression()), !dbg !5397
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !5398, metadata !DIExpression()), !dbg !5399
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !5400, metadata !DIExpression()), !dbg !5401
  call void @llvm.dbg.declare(metadata float* %dist2, metadata !5402, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !5404, metadata !DIExpression()), !dbg !5405
  %arrayinit.begin = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5406
  %0 = load float, float* %x.addr, align 4, !dbg !5407
  store float %0, float* %arrayinit.begin, align 4, !dbg !5406
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !5406
  %1 = load float, float* %y.addr, align 4, !dbg !5408
  store float %1, float* %arrayinit.element, align 4, !dbg !5406
  %arrayinit.element1 = getelementptr inbounds float, float* %arrayinit.element, i64 1, !dbg !5406
  %2 = load float, float* %z.addr, align 4, !dbg !5409
  store float %2, float* %arrayinit.element1, align 4, !dbg !5406
  %3 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5410
  %imat = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %3, i32 0, i32 19, !dbg !5411
  %4 = load float*, float** %imat, align 8, !dbg !5411
  %5 = bitcast float* %4 to [4 x float]*, !dbg !5412
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5413
  call void @mul_m4_v3([4 x float]* %5, float* %arraydecay), !dbg !5414
  %6 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5415
  %type = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %6, i32 0, i32 3, !dbg !5416
  %7 = load i16, i16* %type, align 8, !dbg !5416
  %conv = sext i16 %7 to i32, !dbg !5415
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 4, label %sw.bb2
    i32 5, label %sw.bb16
    i32 6, label %sw.bb60
    i32 7, label %sw.bb68
    i32 1, label %sw.bb135
    i32 2, label %sw.bb157
    i32 3, label %sw.bb180
  ], !dbg !5417

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !5418

sw.bb2:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5420
  %8 = load float, float* %arrayidx, align 4, !dbg !5420
  %9 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5422
  %expx = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %9, i32 0, i32 11, !dbg !5423
  %10 = load float, float* %expx, align 4, !dbg !5423
  %cmp = fcmp ogt float %8, %10, !dbg !5424
  br i1 %cmp, label %if.then, label %if.else, !dbg !5425

if.then:                                          ; preds = %sw.bb2
  %11 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5426
  %expx4 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %11, i32 0, i32 11, !dbg !5427
  %12 = load float, float* %expx4, align 4, !dbg !5427
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5428
  %13 = load float, float* %arrayidx5, align 4, !dbg !5429
  %sub = fsub float %13, %12, !dbg !5429
  store float %sub, float* %arrayidx5, align 4, !dbg !5429
  br label %if.end15, !dbg !5428

if.else:                                          ; preds = %sw.bb2
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5430
  %14 = load float, float* %arrayidx6, align 4, !dbg !5430
  %15 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5432
  %expx7 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %15, i32 0, i32 11, !dbg !5433
  %16 = load float, float* %expx7, align 4, !dbg !5433
  %fneg = fneg float %16, !dbg !5434
  %cmp8 = fcmp olt float %14, %fneg, !dbg !5435
  br i1 %cmp8, label %if.then10, label %if.else13, !dbg !5436

if.then10:                                        ; preds = %if.else
  %17 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5437
  %expx11 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %17, i32 0, i32 11, !dbg !5438
  %18 = load float, float* %expx11, align 4, !dbg !5438
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5439
  %19 = load float, float* %arrayidx12, align 4, !dbg !5440
  %add = fadd float %19, %18, !dbg !5440
  store float %add, float* %arrayidx12, align 4, !dbg !5440
  br label %if.end, !dbg !5439

if.else13:                                        ; preds = %if.else
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5441
  store float 0.000000e+00, float* %arrayidx14, align 4, !dbg !5442
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then10
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !5443

sw.bb16:                                          ; preds = %entry
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5444
  %20 = load float, float* %arrayidx17, align 4, !dbg !5444
  %21 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5446
  %expx18 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %21, i32 0, i32 11, !dbg !5447
  %22 = load float, float* %expx18, align 4, !dbg !5447
  %cmp19 = fcmp ogt float %20, %22, !dbg !5448
  br i1 %cmp19, label %if.then21, label %if.else25, !dbg !5449

if.then21:                                        ; preds = %sw.bb16
  %23 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5450
  %expx22 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %23, i32 0, i32 11, !dbg !5451
  %24 = load float, float* %expx22, align 4, !dbg !5451
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5452
  %25 = load float, float* %arrayidx23, align 4, !dbg !5453
  %sub24 = fsub float %25, %24, !dbg !5453
  store float %sub24, float* %arrayidx23, align 4, !dbg !5453
  br label %if.end38, !dbg !5452

if.else25:                                        ; preds = %sw.bb16
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5454
  %26 = load float, float* %arrayidx26, align 4, !dbg !5454
  %27 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5456
  %expx27 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %27, i32 0, i32 11, !dbg !5457
  %28 = load float, float* %expx27, align 4, !dbg !5457
  %fneg28 = fneg float %28, !dbg !5458
  %cmp29 = fcmp olt float %26, %fneg28, !dbg !5459
  br i1 %cmp29, label %if.then31, label %if.else35, !dbg !5460

if.then31:                                        ; preds = %if.else25
  %29 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5461
  %expx32 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %29, i32 0, i32 11, !dbg !5462
  %30 = load float, float* %expx32, align 4, !dbg !5462
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5463
  %31 = load float, float* %arrayidx33, align 4, !dbg !5464
  %add34 = fadd float %31, %30, !dbg !5464
  store float %add34, float* %arrayidx33, align 4, !dbg !5464
  br label %if.end37, !dbg !5463

if.else35:                                        ; preds = %if.else25
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5465
  store float 0.000000e+00, float* %arrayidx36, align 4, !dbg !5466
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then31
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then21
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5467
  %32 = load float, float* %arrayidx39, align 4, !dbg !5467
  %33 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5469
  %expy = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %33, i32 0, i32 12, !dbg !5470
  %34 = load float, float* %expy, align 8, !dbg !5470
  %cmp40 = fcmp ogt float %32, %34, !dbg !5471
  br i1 %cmp40, label %if.then42, label %if.else46, !dbg !5472

if.then42:                                        ; preds = %if.end38
  %35 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5473
  %expy43 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %35, i32 0, i32 12, !dbg !5474
  %36 = load float, float* %expy43, align 8, !dbg !5474
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5475
  %37 = load float, float* %arrayidx44, align 4, !dbg !5476
  %sub45 = fsub float %37, %36, !dbg !5476
  store float %sub45, float* %arrayidx44, align 4, !dbg !5476
  br label %if.end59, !dbg !5475

if.else46:                                        ; preds = %if.end38
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5477
  %38 = load float, float* %arrayidx47, align 4, !dbg !5477
  %39 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5479
  %expy48 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %39, i32 0, i32 12, !dbg !5480
  %40 = load float, float* %expy48, align 8, !dbg !5480
  %fneg49 = fneg float %40, !dbg !5481
  %cmp50 = fcmp olt float %38, %fneg49, !dbg !5482
  br i1 %cmp50, label %if.then52, label %if.else56, !dbg !5483

if.then52:                                        ; preds = %if.else46
  %41 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5484
  %expy53 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %41, i32 0, i32 12, !dbg !5485
  %42 = load float, float* %expy53, align 8, !dbg !5485
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5486
  %43 = load float, float* %arrayidx54, align 4, !dbg !5487
  %add55 = fadd float %43, %42, !dbg !5487
  store float %add55, float* %arrayidx54, align 4, !dbg !5487
  br label %if.end58, !dbg !5486

if.else56:                                        ; preds = %if.else46
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5488
  store float 0.000000e+00, float* %arrayidx57, align 4, !dbg !5489
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then52
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then42
  br label %sw.epilog, !dbg !5490

sw.bb60:                                          ; preds = %entry
  %44 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5491
  %expx61 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %44, i32 0, i32 11, !dbg !5492
  %45 = load float, float* %expx61, align 4, !dbg !5492
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5493
  %46 = load float, float* %arrayidx62, align 4, !dbg !5494
  %div = fdiv float %46, %45, !dbg !5494
  store float %div, float* %arrayidx62, align 4, !dbg !5494
  %47 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5495
  %expy63 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %47, i32 0, i32 12, !dbg !5496
  %48 = load float, float* %expy63, align 8, !dbg !5496
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5497
  %49 = load float, float* %arrayidx64, align 4, !dbg !5498
  %div65 = fdiv float %49, %48, !dbg !5498
  store float %div65, float* %arrayidx64, align 4, !dbg !5498
  %50 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5499
  %expz = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %50, i32 0, i32 13, !dbg !5500
  %51 = load float, float* %expz, align 4, !dbg !5500
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5501
  %52 = load float, float* %arrayidx66, align 4, !dbg !5502
  %div67 = fdiv float %52, %51, !dbg !5502
  store float %div67, float* %arrayidx66, align 4, !dbg !5502
  br label %sw.epilog, !dbg !5503

sw.bb68:                                          ; preds = %entry
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5504
  %53 = load float, float* %arrayidx69, align 4, !dbg !5504
  %54 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5506
  %expx70 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %54, i32 0, i32 11, !dbg !5507
  %55 = load float, float* %expx70, align 4, !dbg !5507
  %cmp71 = fcmp ogt float %53, %55, !dbg !5508
  br i1 %cmp71, label %if.then73, label %if.else77, !dbg !5509

if.then73:                                        ; preds = %sw.bb68
  %56 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5510
  %expx74 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %56, i32 0, i32 11, !dbg !5511
  %57 = load float, float* %expx74, align 4, !dbg !5511
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5512
  %58 = load float, float* %arrayidx75, align 4, !dbg !5513
  %sub76 = fsub float %58, %57, !dbg !5513
  store float %sub76, float* %arrayidx75, align 4, !dbg !5513
  br label %if.end90, !dbg !5512

if.else77:                                        ; preds = %sw.bb68
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5514
  %59 = load float, float* %arrayidx78, align 4, !dbg !5514
  %60 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5516
  %expx79 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %60, i32 0, i32 11, !dbg !5517
  %61 = load float, float* %expx79, align 4, !dbg !5517
  %fneg80 = fneg float %61, !dbg !5518
  %cmp81 = fcmp olt float %59, %fneg80, !dbg !5519
  br i1 %cmp81, label %if.then83, label %if.else87, !dbg !5520

if.then83:                                        ; preds = %if.else77
  %62 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5521
  %expx84 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %62, i32 0, i32 11, !dbg !5522
  %63 = load float, float* %expx84, align 4, !dbg !5522
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5523
  %64 = load float, float* %arrayidx85, align 4, !dbg !5524
  %add86 = fadd float %64, %63, !dbg !5524
  store float %add86, float* %arrayidx85, align 4, !dbg !5524
  br label %if.end89, !dbg !5523

if.else87:                                        ; preds = %if.else77
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5525
  store float 0.000000e+00, float* %arrayidx88, align 4, !dbg !5526
  br label %if.end89

if.end89:                                         ; preds = %if.else87, %if.then83
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then73
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5527
  %65 = load float, float* %arrayidx91, align 4, !dbg !5527
  %66 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5529
  %expy92 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %66, i32 0, i32 12, !dbg !5530
  %67 = load float, float* %expy92, align 8, !dbg !5530
  %cmp93 = fcmp ogt float %65, %67, !dbg !5531
  br i1 %cmp93, label %if.then95, label %if.else99, !dbg !5532

if.then95:                                        ; preds = %if.end90
  %68 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5533
  %expy96 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %68, i32 0, i32 12, !dbg !5534
  %69 = load float, float* %expy96, align 8, !dbg !5534
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5535
  %70 = load float, float* %arrayidx97, align 4, !dbg !5536
  %sub98 = fsub float %70, %69, !dbg !5536
  store float %sub98, float* %arrayidx97, align 4, !dbg !5536
  br label %if.end112, !dbg !5535

if.else99:                                        ; preds = %if.end90
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5537
  %71 = load float, float* %arrayidx100, align 4, !dbg !5537
  %72 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5539
  %expy101 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %72, i32 0, i32 12, !dbg !5540
  %73 = load float, float* %expy101, align 8, !dbg !5540
  %fneg102 = fneg float %73, !dbg !5541
  %cmp103 = fcmp olt float %71, %fneg102, !dbg !5542
  br i1 %cmp103, label %if.then105, label %if.else109, !dbg !5543

if.then105:                                       ; preds = %if.else99
  %74 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5544
  %expy106 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %74, i32 0, i32 12, !dbg !5545
  %75 = load float, float* %expy106, align 8, !dbg !5545
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5546
  %76 = load float, float* %arrayidx107, align 4, !dbg !5547
  %add108 = fadd float %76, %75, !dbg !5547
  store float %add108, float* %arrayidx107, align 4, !dbg !5547
  br label %if.end111, !dbg !5546

if.else109:                                       ; preds = %if.else99
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5548
  store float 0.000000e+00, float* %arrayidx110, align 4, !dbg !5549
  br label %if.end111

if.end111:                                        ; preds = %if.else109, %if.then105
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then95
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5550
  %77 = load float, float* %arrayidx113, align 4, !dbg !5550
  %78 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5552
  %expz114 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %78, i32 0, i32 13, !dbg !5553
  %79 = load float, float* %expz114, align 4, !dbg !5553
  %cmp115 = fcmp ogt float %77, %79, !dbg !5554
  br i1 %cmp115, label %if.then117, label %if.else121, !dbg !5555

if.then117:                                       ; preds = %if.end112
  %80 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5556
  %expz118 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %80, i32 0, i32 13, !dbg !5557
  %81 = load float, float* %expz118, align 4, !dbg !5557
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5558
  %82 = load float, float* %arrayidx119, align 4, !dbg !5559
  %sub120 = fsub float %82, %81, !dbg !5559
  store float %sub120, float* %arrayidx119, align 4, !dbg !5559
  br label %if.end134, !dbg !5558

if.else121:                                       ; preds = %if.end112
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5560
  %83 = load float, float* %arrayidx122, align 4, !dbg !5560
  %84 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5562
  %expz123 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %84, i32 0, i32 13, !dbg !5563
  %85 = load float, float* %expz123, align 4, !dbg !5563
  %fneg124 = fneg float %85, !dbg !5564
  %cmp125 = fcmp olt float %83, %fneg124, !dbg !5565
  br i1 %cmp125, label %if.then127, label %if.else131, !dbg !5566

if.then127:                                       ; preds = %if.else121
  %86 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5567
  %expz128 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %86, i32 0, i32 13, !dbg !5568
  %87 = load float, float* %expz128, align 4, !dbg !5568
  %arrayidx129 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5569
  %88 = load float, float* %arrayidx129, align 4, !dbg !5570
  %add130 = fadd float %88, %87, !dbg !5570
  store float %add130, float* %arrayidx129, align 4, !dbg !5570
  br label %if.end133, !dbg !5569

if.else131:                                       ; preds = %if.else121
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5571
  store float 0.000000e+00, float* %arrayidx132, align 4, !dbg !5572
  br label %if.end133

if.end133:                                        ; preds = %if.else131, %if.then127
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then117
  br label %sw.epilog, !dbg !5573

sw.bb135:                                         ; preds = %entry
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5574
  %89 = load float, float* %arrayidx136, align 4, !dbg !5574
  %90 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5576
  %len = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %90, i32 0, i32 17, !dbg !5577
  %91 = load float, float* %len, align 4, !dbg !5577
  %cmp137 = fcmp ogt float %89, %91, !dbg !5578
  br i1 %cmp137, label %if.then139, label %if.else143, !dbg !5579

if.then139:                                       ; preds = %sw.bb135
  %92 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5580
  %len140 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %92, i32 0, i32 17, !dbg !5581
  %93 = load float, float* %len140, align 4, !dbg !5581
  %arrayidx141 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5582
  %94 = load float, float* %arrayidx141, align 4, !dbg !5583
  %sub142 = fsub float %94, %93, !dbg !5583
  store float %sub142, float* %arrayidx141, align 4, !dbg !5583
  br label %if.end156, !dbg !5582

if.else143:                                       ; preds = %sw.bb135
  %arrayidx144 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5584
  %95 = load float, float* %arrayidx144, align 4, !dbg !5584
  %96 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5586
  %len145 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %96, i32 0, i32 17, !dbg !5587
  %97 = load float, float* %len145, align 4, !dbg !5587
  %fneg146 = fneg float %97, !dbg !5588
  %cmp147 = fcmp olt float %95, %fneg146, !dbg !5589
  br i1 %cmp147, label %if.then149, label %if.else153, !dbg !5590

if.then149:                                       ; preds = %if.else143
  %98 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5591
  %len150 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %98, i32 0, i32 17, !dbg !5592
  %99 = load float, float* %len150, align 4, !dbg !5592
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5593
  %100 = load float, float* %arrayidx151, align 4, !dbg !5594
  %add152 = fadd float %100, %99, !dbg !5594
  store float %add152, float* %arrayidx151, align 4, !dbg !5594
  br label %if.end155, !dbg !5593

if.else153:                                       ; preds = %if.else143
  %arrayidx154 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5595
  store float 0.000000e+00, float* %arrayidx154, align 4, !dbg !5596
  br label %if.end155

if.end155:                                        ; preds = %if.else153, %if.then149
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.then139
  br label %sw.epilog, !dbg !5597

sw.bb157:                                         ; preds = %entry
  %arrayidx158 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5598
  %101 = load float, float* %arrayidx158, align 4, !dbg !5598
  %102 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5600
  %len159 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %102, i32 0, i32 17, !dbg !5601
  %103 = load float, float* %len159, align 4, !dbg !5601
  %cmp160 = fcmp ogt float %101, %103, !dbg !5602
  br i1 %cmp160, label %if.then162, label %if.else166, !dbg !5603

if.then162:                                       ; preds = %sw.bb157
  %104 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5604
  %len163 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %104, i32 0, i32 17, !dbg !5605
  %105 = load float, float* %len163, align 4, !dbg !5605
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5606
  %106 = load float, float* %arrayidx164, align 4, !dbg !5607
  %sub165 = fsub float %106, %105, !dbg !5607
  store float %sub165, float* %arrayidx164, align 4, !dbg !5607
  br label %if.end179, !dbg !5606

if.else166:                                       ; preds = %sw.bb157
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5608
  %107 = load float, float* %arrayidx167, align 4, !dbg !5608
  %108 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5610
  %len168 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %108, i32 0, i32 17, !dbg !5611
  %109 = load float, float* %len168, align 4, !dbg !5611
  %fneg169 = fneg float %109, !dbg !5612
  %cmp170 = fcmp olt float %107, %fneg169, !dbg !5613
  br i1 %cmp170, label %if.then172, label %if.else176, !dbg !5614

if.then172:                                       ; preds = %if.else166
  %110 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5615
  %len173 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %110, i32 0, i32 17, !dbg !5616
  %111 = load float, float* %len173, align 4, !dbg !5616
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5617
  %112 = load float, float* %arrayidx174, align 4, !dbg !5618
  %add175 = fadd float %112, %111, !dbg !5618
  store float %add175, float* %arrayidx174, align 4, !dbg !5618
  br label %if.end178, !dbg !5617

if.else176:                                       ; preds = %if.else166
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !5619
  store float 0.000000e+00, float* %arrayidx177, align 4, !dbg !5620
  br label %if.end178

if.end178:                                        ; preds = %if.else176, %if.then172
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then162
  br label %sw.epilog, !dbg !5621

sw.bb180:                                         ; preds = %entry
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5622
  %113 = load float, float* %arrayidx181, align 4, !dbg !5622
  %114 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5624
  %len182 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %114, i32 0, i32 17, !dbg !5625
  %115 = load float, float* %len182, align 4, !dbg !5625
  %cmp183 = fcmp ogt float %113, %115, !dbg !5626
  br i1 %cmp183, label %if.then185, label %if.else189, !dbg !5627

if.then185:                                       ; preds = %sw.bb180
  %116 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5628
  %len186 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %116, i32 0, i32 17, !dbg !5629
  %117 = load float, float* %len186, align 4, !dbg !5629
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5630
  %118 = load float, float* %arrayidx187, align 4, !dbg !5631
  %sub188 = fsub float %118, %117, !dbg !5631
  store float %sub188, float* %arrayidx187, align 4, !dbg !5631
  br label %if.end202, !dbg !5630

if.else189:                                       ; preds = %sw.bb180
  %arrayidx190 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5632
  %119 = load float, float* %arrayidx190, align 4, !dbg !5632
  %120 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5634
  %len191 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %120, i32 0, i32 17, !dbg !5635
  %121 = load float, float* %len191, align 4, !dbg !5635
  %fneg192 = fneg float %121, !dbg !5636
  %cmp193 = fcmp olt float %119, %fneg192, !dbg !5637
  br i1 %cmp193, label %if.then195, label %if.else199, !dbg !5638

if.then195:                                       ; preds = %if.else189
  %122 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5639
  %len196 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %122, i32 0, i32 17, !dbg !5640
  %123 = load float, float* %len196, align 4, !dbg !5640
  %arrayidx197 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5641
  %124 = load float, float* %arrayidx197, align 4, !dbg !5642
  %add198 = fadd float %124, %123, !dbg !5642
  store float %add198, float* %arrayidx197, align 4, !dbg !5642
  br label %if.end201, !dbg !5641

if.else199:                                       ; preds = %if.else189
  %arrayidx200 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !5643
  store float 0.000000e+00, float* %arrayidx200, align 4, !dbg !5644
  br label %if.end201

if.end201:                                        ; preds = %if.else199, %if.then195
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then185
  br label %sw.epilog, !dbg !5645

sw.epilog:                                        ; preds = %entry, %if.end202, %if.end179, %if.end156, %if.end134, %sw.bb60, %if.end59, %if.end15, %sw.bb
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !5646
  %call = call float @len_squared_v3(float* %arraydecay203), !dbg !5647
  %125 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5648
  %rad2 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %125, i32 0, i32 15, !dbg !5649
  %126 = load float, float* %rad2, align 4, !dbg !5649
  %div204 = fdiv float %call, %126, !dbg !5650
  %sub205 = fsub float 1.000000e+00, %div204, !dbg !5651
  store float %sub205, float* %dist2, align 4, !dbg !5652
  %127 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5653
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %127, i32 0, i32 4, !dbg !5655
  %128 = load i16, i16* %flag, align 2, !dbg !5655
  %conv206 = sext i16 %128 to i32, !dbg !5653
  %and = and i32 %conv206, 2, !dbg !5656
  %cmp207 = icmp eq i32 %and, 0, !dbg !5657
  br i1 %cmp207, label %if.then209, label %if.else215, !dbg !5658

if.then209:                                       ; preds = %sw.epilog
  %129 = load float, float* %dist2, align 4, !dbg !5659
  %cmp210 = fcmp olt float %129, 0.000000e+00, !dbg !5661
  br i1 %cmp210, label %cond.true, label %cond.false, !dbg !5662

cond.true:                                        ; preds = %if.then209
  br label %cond.end, !dbg !5662

cond.false:                                       ; preds = %if.then209
  %130 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5663
  %s = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %130, i32 0, i32 16, !dbg !5664
  %131 = load float, float* %s, align 8, !dbg !5664
  %132 = load float, float* %dist2, align 4, !dbg !5665
  %mul = fmul float %131, %132, !dbg !5666
  %133 = load float, float* %dist2, align 4, !dbg !5667
  %mul212 = fmul float %mul, %133, !dbg !5668
  %134 = load float, float* %dist2, align 4, !dbg !5669
  %mul213 = fmul float %mul212, %134, !dbg !5670
  %sub214 = fsub float %mul213, 5.000000e-01, !dbg !5671
  br label %cond.end, !dbg !5662

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ -5.000000e-01, %cond.true ], [ %sub214, %cond.false ], !dbg !5662
  store float %cond, float* %retval, align 4, !dbg !5672
  br label %return, !dbg !5672

if.else215:                                       ; preds = %sw.epilog
  %135 = load float, float* %dist2, align 4, !dbg !5673
  %cmp216 = fcmp olt float %135, 0.000000e+00, !dbg !5675
  br i1 %cmp216, label %cond.true218, label %cond.false219, !dbg !5676

cond.true218:                                     ; preds = %if.else215
  br label %cond.end225, !dbg !5676

cond.false219:                                    ; preds = %if.else215
  %136 = load %struct.MetaElem*, %struct.MetaElem** %ball.addr, align 8, !dbg !5677
  %s220 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %136, i32 0, i32 16, !dbg !5678
  %137 = load float, float* %s220, align 8, !dbg !5678
  %138 = load float, float* %dist2, align 4, !dbg !5679
  %mul221 = fmul float %137, %138, !dbg !5680
  %139 = load float, float* %dist2, align 4, !dbg !5681
  %mul222 = fmul float %mul221, %139, !dbg !5682
  %140 = load float, float* %dist2, align 4, !dbg !5683
  %mul223 = fmul float %mul222, %140, !dbg !5684
  %sub224 = fsub float 5.000000e-01, %mul223, !dbg !5685
  br label %cond.end225, !dbg !5676

cond.end225:                                      ; preds = %cond.false219, %cond.true218
  %cond226 = phi float [ 5.000000e-01, %cond.true218 ], [ %sub224, %cond.false219 ], !dbg !5676
  store float %cond226, float* %retval, align 4, !dbg !5686
  br label %return, !dbg !5686

return:                                           ; preds = %cond.end225, %cond.end
  %141 = load float, float* %retval, align 4, !dbg !5687
  ret float %141, !dbg !5687
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3(float* %v) #0 !dbg !5688 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !5691, metadata !DIExpression()), !dbg !5692
  %0 = load float*, float** %v.addr, align 8, !dbg !5693
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5693
  %1 = load float, float* %arrayidx, align 4, !dbg !5693
  %2 = load float*, float** %v.addr, align 8, !dbg !5694
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5694
  %3 = load float, float* %arrayidx1, align 4, !dbg !5694
  %mul = fmul float %1, %3, !dbg !5695
  %4 = load float*, float** %v.addr, align 8, !dbg !5696
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5696
  %5 = load float, float* %arrayidx2, align 4, !dbg !5696
  %6 = load float*, float** %v.addr, align 8, !dbg !5697
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5697
  %7 = load float, float* %arrayidx3, align 4, !dbg !5697
  %mul4 = fmul float %5, %7, !dbg !5698
  %add = fadd float %mul, %mul4, !dbg !5699
  %8 = load float*, float** %v.addr, align 8, !dbg !5700
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5700
  %9 = load float, float* %arrayidx5, align 4, !dbg !5700
  %10 = load float*, float** %v.addr, align 8, !dbg !5701
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5701
  %11 = load float, float* %arrayidx6, align 4, !dbg !5701
  %mul7 = fmul float %9, %11, !dbg !5702
  %add8 = fadd float %add, %mul7, !dbg !5703
  ret float %add8, !dbg !5704
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !5705 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5708, metadata !DIExpression()), !dbg !5709
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5710
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !5711
  store i8* null, i8** %last, align 8, !dbg !5712
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5713
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5714
  store i8* null, i8** %first, align 8, !dbg !5715
  ret void, !dbg !5716
}

; Function Attrs: noinline nounwind uwtable
define internal void @subdivide_metaball_octal_node(%struct.octal_node* %node, float %size_x, float %size_y, float %size_z, i16 signext %depth) #0 !dbg !5717 {
entry:
  %node.addr = alloca %struct.octal_node*, align 8
  %size_x.addr = alloca float, align 4
  %size_y.addr = alloca float, align 4
  %size_z.addr = alloca float, align 4
  %depth.addr = alloca i16, align 2
  %ml = alloca %struct.MetaElem*, align 8
  %ml_p = alloca %struct.ml_pointer*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.octal_node* %node, %struct.octal_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.octal_node** %node.addr, metadata !5720, metadata !DIExpression()), !dbg !5721
  store float %size_x, float* %size_x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size_x.addr, metadata !5722, metadata !DIExpression()), !dbg !5723
  store float %size_y, float* %size_y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size_y.addr, metadata !5724, metadata !DIExpression()), !dbg !5725
  store float %size_z, float* %size_z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size_z.addr, metadata !5726, metadata !DIExpression()), !dbg !5727
  store i16 %depth, i16* %depth.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %depth.addr, metadata !5728, metadata !DIExpression()), !dbg !5729
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !5730, metadata !DIExpression()), !dbg !5731
  call void @llvm.dbg.declare(metadata %struct.ml_pointer** %ml_p, metadata !5732, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.declare(metadata float* %x, metadata !5734, metadata !DIExpression()), !dbg !5735
  call void @llvm.dbg.declare(metadata float* %y, metadata !5736, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.declare(metadata float* %z, metadata !5738, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5740, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5742, metadata !DIExpression()), !dbg !5743
  store i32 0, i32* %a, align 4, !dbg !5744
  br label %for.cond, !dbg !5746

for.cond:                                         ; preds = %for.inc25, %entry
  %0 = load i32, i32* %a, align 4, !dbg !5747
  %cmp = icmp slt i32 %0, 8, !dbg !5749
  br i1 %cmp, label %for.body, label %for.end27, !dbg !5750

for.body:                                         ; preds = %for.cond
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5751
  %call = call i8* %1(i64 136, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)), !dbg !5751
  %2 = bitcast i8* %call to %struct.octal_node*, !dbg !5751
  %3 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5753
  %nodes = getelementptr inbounds %struct.octal_node, %struct.octal_node* %3, i32 0, i32 0, !dbg !5754
  %4 = load i32, i32* %a, align 4, !dbg !5755
  %idxprom = sext i32 %4 to i64, !dbg !5753
  %arrayidx = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes, i64 0, i64 %idxprom, !dbg !5753
  store %struct.octal_node* %2, %struct.octal_node** %arrayidx, align 8, !dbg !5756
  store i32 0, i32* %i, align 4, !dbg !5757
  br label %for.cond1, !dbg !5759

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %i, align 4, !dbg !5760
  %cmp2 = icmp slt i32 %5, 8, !dbg !5762
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !5763

for.body3:                                        ; preds = %for.cond1
  %6 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5764
  %nodes4 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %6, i32 0, i32 0, !dbg !5765
  %7 = load i32, i32* %a, align 4, !dbg !5766
  %idxprom5 = sext i32 %7 to i64, !dbg !5764
  %arrayidx6 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes4, i64 0, i64 %idxprom5, !dbg !5764
  %8 = load %struct.octal_node*, %struct.octal_node** %arrayidx6, align 8, !dbg !5764
  %nodes7 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %8, i32 0, i32 0, !dbg !5767
  %9 = load i32, i32* %i, align 4, !dbg !5768
  %idxprom8 = sext i32 %9 to i64, !dbg !5764
  %arrayidx9 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes7, i64 0, i64 %idxprom8, !dbg !5764
  store %struct.octal_node* null, %struct.octal_node** %arrayidx9, align 8, !dbg !5769
  br label %for.inc, !dbg !5764

for.inc:                                          ; preds = %for.body3
  %10 = load i32, i32* %i, align 4, !dbg !5770
  %inc = add nsw i32 %10, 1, !dbg !5770
  store i32 %inc, i32* %i, align 4, !dbg !5770
  br label %for.cond1, !dbg !5771, !llvm.loop !5772

for.end:                                          ; preds = %for.cond1
  %11 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5774
  %12 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5775
  %nodes10 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %12, i32 0, i32 0, !dbg !5776
  %13 = load i32, i32* %a, align 4, !dbg !5777
  %idxprom11 = sext i32 %13 to i64, !dbg !5775
  %arrayidx12 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes10, i64 0, i64 %idxprom11, !dbg !5775
  %14 = load %struct.octal_node*, %struct.octal_node** %arrayidx12, align 8, !dbg !5775
  %parent = getelementptr inbounds %struct.octal_node, %struct.octal_node* %14, i32 0, i32 1, !dbg !5778
  store %struct.octal_node* %11, %struct.octal_node** %parent, align 8, !dbg !5779
  %15 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5780
  %nodes13 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %15, i32 0, i32 0, !dbg !5781
  %16 = load i32, i32* %a, align 4, !dbg !5782
  %idxprom14 = sext i32 %16 to i64, !dbg !5780
  %arrayidx15 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes13, i64 0, i64 %idxprom14, !dbg !5780
  %17 = load %struct.octal_node*, %struct.octal_node** %arrayidx15, align 8, !dbg !5780
  %elems = getelementptr inbounds %struct.octal_node, %struct.octal_node* %17, i32 0, i32 2, !dbg !5783
  call void @BLI_listbase_clear(%struct.ListBase* %elems), !dbg !5784
  %18 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5785
  %nodes16 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %18, i32 0, i32 0, !dbg !5786
  %19 = load i32, i32* %a, align 4, !dbg !5787
  %idxprom17 = sext i32 %19 to i64, !dbg !5785
  %arrayidx18 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes16, i64 0, i64 %idxprom17, !dbg !5785
  %20 = load %struct.octal_node*, %struct.octal_node** %arrayidx18, align 8, !dbg !5785
  %count = getelementptr inbounds %struct.octal_node, %struct.octal_node* %20, i32 0, i32 14, !dbg !5788
  store i32 0, i32* %count, align 4, !dbg !5789
  %21 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5790
  %nodes19 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %21, i32 0, i32 0, !dbg !5791
  %22 = load i32, i32* %a, align 4, !dbg !5792
  %idxprom20 = sext i32 %22 to i64, !dbg !5790
  %arrayidx21 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes19, i64 0, i64 %idxprom20, !dbg !5790
  %23 = load %struct.octal_node*, %struct.octal_node** %arrayidx21, align 8, !dbg !5790
  %neg = getelementptr inbounds %struct.octal_node, %struct.octal_node* %23, i32 0, i32 13, !dbg !5793
  store i32 0, i32* %neg, align 8, !dbg !5794
  %24 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5795
  %nodes22 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %24, i32 0, i32 0, !dbg !5796
  %25 = load i32, i32* %a, align 4, !dbg !5797
  %idxprom23 = sext i32 %25 to i64, !dbg !5795
  %arrayidx24 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes22, i64 0, i64 %idxprom23, !dbg !5795
  %26 = load %struct.octal_node*, %struct.octal_node** %arrayidx24, align 8, !dbg !5795
  %pos = getelementptr inbounds %struct.octal_node, %struct.octal_node* %26, i32 0, i32 12, !dbg !5798
  store i32 0, i32* %pos, align 4, !dbg !5799
  br label %for.inc25, !dbg !5800

for.inc25:                                        ; preds = %for.end
  %27 = load i32, i32* %a, align 4, !dbg !5801
  %inc26 = add nsw i32 %27, 1, !dbg !5801
  store i32 %inc26, i32* %a, align 4, !dbg !5801
  br label %for.cond, !dbg !5802, !llvm.loop !5803

for.end27:                                        ; preds = %for.cond
  %28 = load float, float* %size_x.addr, align 4, !dbg !5805
  %div = fdiv float %28, 2.000000e+00, !dbg !5805
  store float %div, float* %size_x.addr, align 4, !dbg !5805
  %29 = load float, float* %size_y.addr, align 4, !dbg !5806
  %div28 = fdiv float %29, 2.000000e+00, !dbg !5806
  store float %div28, float* %size_y.addr, align 4, !dbg !5806
  %30 = load float, float* %size_z.addr, align 4, !dbg !5807
  %div29 = fdiv float %30, 2.000000e+00, !dbg !5807
  store float %div29, float* %size_z.addr, align 4, !dbg !5807
  %31 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5808
  %x_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %31, i32 0, i32 3, !dbg !5809
  %32 = load float, float* %x_min, align 8, !dbg !5809
  %33 = load float, float* %size_x.addr, align 4, !dbg !5810
  %add = fadd float %32, %33, !dbg !5811
  store float %add, float* %x, align 4, !dbg !5812
  %34 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5813
  %x30 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %34, i32 0, i32 9, !dbg !5814
  store float %add, float* %x30, align 8, !dbg !5815
  %35 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5816
  %y_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %35, i32 0, i32 4, !dbg !5817
  %36 = load float, float* %y_min, align 4, !dbg !5817
  %37 = load float, float* %size_y.addr, align 4, !dbg !5818
  %add31 = fadd float %36, %37, !dbg !5819
  store float %add31, float* %y, align 4, !dbg !5820
  %38 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5821
  %y32 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %38, i32 0, i32 10, !dbg !5822
  store float %add31, float* %y32, align 4, !dbg !5823
  %39 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5824
  %z_min = getelementptr inbounds %struct.octal_node, %struct.octal_node* %39, i32 0, i32 5, !dbg !5825
  %40 = load float, float* %z_min, align 8, !dbg !5825
  %41 = load float, float* %size_z.addr, align 4, !dbg !5826
  %add33 = fadd float %40, %41, !dbg !5827
  store float %add33, float* %z, align 4, !dbg !5828
  %42 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5829
  %z34 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %42, i32 0, i32 11, !dbg !5830
  store float %add33, float* %z34, align 8, !dbg !5831
  %43 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5832
  %x_min35 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %43, i32 0, i32 3, !dbg !5833
  %44 = load float, float* %x_min35, align 8, !dbg !5833
  %45 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5834
  %nodes36 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %45, i32 0, i32 0, !dbg !5835
  %arrayidx37 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes36, i64 0, i64 0, !dbg !5834
  %46 = load %struct.octal_node*, %struct.octal_node** %arrayidx37, align 8, !dbg !5834
  %x_min38 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %46, i32 0, i32 3, !dbg !5836
  store float %44, float* %x_min38, align 8, !dbg !5837
  %47 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5838
  %y_min39 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %47, i32 0, i32 4, !dbg !5839
  %48 = load float, float* %y_min39, align 4, !dbg !5839
  %49 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5840
  %nodes40 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %49, i32 0, i32 0, !dbg !5841
  %arrayidx41 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes40, i64 0, i64 0, !dbg !5840
  %50 = load %struct.octal_node*, %struct.octal_node** %arrayidx41, align 8, !dbg !5840
  %y_min42 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %50, i32 0, i32 4, !dbg !5842
  store float %48, float* %y_min42, align 4, !dbg !5843
  %51 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5844
  %z_min43 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %51, i32 0, i32 5, !dbg !5845
  %52 = load float, float* %z_min43, align 8, !dbg !5845
  %53 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5846
  %nodes44 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %53, i32 0, i32 0, !dbg !5847
  %arrayidx45 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes44, i64 0, i64 0, !dbg !5846
  %54 = load %struct.octal_node*, %struct.octal_node** %arrayidx45, align 8, !dbg !5846
  %z_min46 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %54, i32 0, i32 5, !dbg !5848
  store float %52, float* %z_min46, align 8, !dbg !5849
  %55 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5850
  %nodes47 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %55, i32 0, i32 0, !dbg !5851
  %arrayidx48 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes47, i64 0, i64 0, !dbg !5850
  %56 = load %struct.octal_node*, %struct.octal_node** %arrayidx48, align 8, !dbg !5850
  %x_min49 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %56, i32 0, i32 3, !dbg !5852
  %57 = load float, float* %x_min49, align 8, !dbg !5852
  %58 = load float, float* %size_x.addr, align 4, !dbg !5853
  %div50 = fdiv float %58, 2.000000e+00, !dbg !5854
  %add51 = fadd float %57, %div50, !dbg !5855
  %59 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5856
  %nodes52 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %59, i32 0, i32 0, !dbg !5857
  %arrayidx53 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes52, i64 0, i64 0, !dbg !5856
  %60 = load %struct.octal_node*, %struct.octal_node** %arrayidx53, align 8, !dbg !5856
  %x54 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %60, i32 0, i32 9, !dbg !5858
  store float %add51, float* %x54, align 8, !dbg !5859
  %61 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5860
  %nodes55 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %61, i32 0, i32 0, !dbg !5861
  %arrayidx56 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes55, i64 0, i64 0, !dbg !5860
  %62 = load %struct.octal_node*, %struct.octal_node** %arrayidx56, align 8, !dbg !5860
  %y_min57 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %62, i32 0, i32 4, !dbg !5862
  %63 = load float, float* %y_min57, align 4, !dbg !5862
  %64 = load float, float* %size_y.addr, align 4, !dbg !5863
  %div58 = fdiv float %64, 2.000000e+00, !dbg !5864
  %add59 = fadd float %63, %div58, !dbg !5865
  %65 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5866
  %nodes60 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %65, i32 0, i32 0, !dbg !5867
  %arrayidx61 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes60, i64 0, i64 0, !dbg !5866
  %66 = load %struct.octal_node*, %struct.octal_node** %arrayidx61, align 8, !dbg !5866
  %y62 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %66, i32 0, i32 10, !dbg !5868
  store float %add59, float* %y62, align 4, !dbg !5869
  %67 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5870
  %nodes63 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %67, i32 0, i32 0, !dbg !5871
  %arrayidx64 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes63, i64 0, i64 0, !dbg !5870
  %68 = load %struct.octal_node*, %struct.octal_node** %arrayidx64, align 8, !dbg !5870
  %z_min65 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %68, i32 0, i32 5, !dbg !5872
  %69 = load float, float* %z_min65, align 8, !dbg !5872
  %70 = load float, float* %size_z.addr, align 4, !dbg !5873
  %div66 = fdiv float %70, 2.000000e+00, !dbg !5874
  %add67 = fadd float %69, %div66, !dbg !5875
  %71 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5876
  %nodes68 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %71, i32 0, i32 0, !dbg !5877
  %arrayidx69 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes68, i64 0, i64 0, !dbg !5876
  %72 = load %struct.octal_node*, %struct.octal_node** %arrayidx69, align 8, !dbg !5876
  %z70 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %72, i32 0, i32 11, !dbg !5878
  store float %add67, float* %z70, align 8, !dbg !5879
  %73 = load float, float* %x, align 4, !dbg !5880
  %74 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5881
  %nodes71 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %74, i32 0, i32 0, !dbg !5882
  %arrayidx72 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes71, i64 0, i64 1, !dbg !5881
  %75 = load %struct.octal_node*, %struct.octal_node** %arrayidx72, align 8, !dbg !5881
  %x_min73 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %75, i32 0, i32 3, !dbg !5883
  store float %73, float* %x_min73, align 8, !dbg !5884
  %76 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5885
  %y_min74 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %76, i32 0, i32 4, !dbg !5886
  %77 = load float, float* %y_min74, align 4, !dbg !5886
  %78 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5887
  %nodes75 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %78, i32 0, i32 0, !dbg !5888
  %arrayidx76 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes75, i64 0, i64 1, !dbg !5887
  %79 = load %struct.octal_node*, %struct.octal_node** %arrayidx76, align 8, !dbg !5887
  %y_min77 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %79, i32 0, i32 4, !dbg !5889
  store float %77, float* %y_min77, align 4, !dbg !5890
  %80 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5891
  %z_min78 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %80, i32 0, i32 5, !dbg !5892
  %81 = load float, float* %z_min78, align 8, !dbg !5892
  %82 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5893
  %nodes79 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %82, i32 0, i32 0, !dbg !5894
  %arrayidx80 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes79, i64 0, i64 1, !dbg !5893
  %83 = load %struct.octal_node*, %struct.octal_node** %arrayidx80, align 8, !dbg !5893
  %z_min81 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %83, i32 0, i32 5, !dbg !5895
  store float %81, float* %z_min81, align 8, !dbg !5896
  %84 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5897
  %nodes82 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %84, i32 0, i32 0, !dbg !5898
  %arrayidx83 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes82, i64 0, i64 1, !dbg !5897
  %85 = load %struct.octal_node*, %struct.octal_node** %arrayidx83, align 8, !dbg !5897
  %x_min84 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %85, i32 0, i32 3, !dbg !5899
  %86 = load float, float* %x_min84, align 8, !dbg !5899
  %87 = load float, float* %size_x.addr, align 4, !dbg !5900
  %div85 = fdiv float %87, 2.000000e+00, !dbg !5901
  %add86 = fadd float %86, %div85, !dbg !5902
  %88 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5903
  %nodes87 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %88, i32 0, i32 0, !dbg !5904
  %arrayidx88 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes87, i64 0, i64 1, !dbg !5903
  %89 = load %struct.octal_node*, %struct.octal_node** %arrayidx88, align 8, !dbg !5903
  %x89 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %89, i32 0, i32 9, !dbg !5905
  store float %add86, float* %x89, align 8, !dbg !5906
  %90 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5907
  %nodes90 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %90, i32 0, i32 0, !dbg !5908
  %arrayidx91 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes90, i64 0, i64 1, !dbg !5907
  %91 = load %struct.octal_node*, %struct.octal_node** %arrayidx91, align 8, !dbg !5907
  %y_min92 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %91, i32 0, i32 4, !dbg !5909
  %92 = load float, float* %y_min92, align 4, !dbg !5909
  %93 = load float, float* %size_y.addr, align 4, !dbg !5910
  %div93 = fdiv float %93, 2.000000e+00, !dbg !5911
  %add94 = fadd float %92, %div93, !dbg !5912
  %94 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5913
  %nodes95 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %94, i32 0, i32 0, !dbg !5914
  %arrayidx96 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes95, i64 0, i64 1, !dbg !5913
  %95 = load %struct.octal_node*, %struct.octal_node** %arrayidx96, align 8, !dbg !5913
  %y97 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %95, i32 0, i32 10, !dbg !5915
  store float %add94, float* %y97, align 4, !dbg !5916
  %96 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5917
  %nodes98 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %96, i32 0, i32 0, !dbg !5918
  %arrayidx99 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes98, i64 0, i64 1, !dbg !5917
  %97 = load %struct.octal_node*, %struct.octal_node** %arrayidx99, align 8, !dbg !5917
  %z_min100 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %97, i32 0, i32 5, !dbg !5919
  %98 = load float, float* %z_min100, align 8, !dbg !5919
  %99 = load float, float* %size_z.addr, align 4, !dbg !5920
  %div101 = fdiv float %99, 2.000000e+00, !dbg !5921
  %add102 = fadd float %98, %div101, !dbg !5922
  %100 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5923
  %nodes103 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %100, i32 0, i32 0, !dbg !5924
  %arrayidx104 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes103, i64 0, i64 1, !dbg !5923
  %101 = load %struct.octal_node*, %struct.octal_node** %arrayidx104, align 8, !dbg !5923
  %z105 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %101, i32 0, i32 11, !dbg !5925
  store float %add102, float* %z105, align 8, !dbg !5926
  %102 = load float, float* %x, align 4, !dbg !5927
  %103 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5928
  %nodes106 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %103, i32 0, i32 0, !dbg !5929
  %arrayidx107 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes106, i64 0, i64 2, !dbg !5928
  %104 = load %struct.octal_node*, %struct.octal_node** %arrayidx107, align 8, !dbg !5928
  %x_min108 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %104, i32 0, i32 3, !dbg !5930
  store float %102, float* %x_min108, align 8, !dbg !5931
  %105 = load float, float* %y, align 4, !dbg !5932
  %106 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5933
  %nodes109 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %106, i32 0, i32 0, !dbg !5934
  %arrayidx110 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes109, i64 0, i64 2, !dbg !5933
  %107 = load %struct.octal_node*, %struct.octal_node** %arrayidx110, align 8, !dbg !5933
  %y_min111 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %107, i32 0, i32 4, !dbg !5935
  store float %105, float* %y_min111, align 4, !dbg !5936
  %108 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5937
  %z_min112 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %108, i32 0, i32 5, !dbg !5938
  %109 = load float, float* %z_min112, align 8, !dbg !5938
  %110 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5939
  %nodes113 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %110, i32 0, i32 0, !dbg !5940
  %arrayidx114 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes113, i64 0, i64 2, !dbg !5939
  %111 = load %struct.octal_node*, %struct.octal_node** %arrayidx114, align 8, !dbg !5939
  %z_min115 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %111, i32 0, i32 5, !dbg !5941
  store float %109, float* %z_min115, align 8, !dbg !5942
  %112 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5943
  %nodes116 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %112, i32 0, i32 0, !dbg !5944
  %arrayidx117 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes116, i64 0, i64 2, !dbg !5943
  %113 = load %struct.octal_node*, %struct.octal_node** %arrayidx117, align 8, !dbg !5943
  %x_min118 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %113, i32 0, i32 3, !dbg !5945
  %114 = load float, float* %x_min118, align 8, !dbg !5945
  %115 = load float, float* %size_x.addr, align 4, !dbg !5946
  %div119 = fdiv float %115, 2.000000e+00, !dbg !5947
  %add120 = fadd float %114, %div119, !dbg !5948
  %116 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5949
  %nodes121 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %116, i32 0, i32 0, !dbg !5950
  %arrayidx122 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes121, i64 0, i64 2, !dbg !5949
  %117 = load %struct.octal_node*, %struct.octal_node** %arrayidx122, align 8, !dbg !5949
  %x123 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %117, i32 0, i32 9, !dbg !5951
  store float %add120, float* %x123, align 8, !dbg !5952
  %118 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5953
  %nodes124 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %118, i32 0, i32 0, !dbg !5954
  %arrayidx125 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes124, i64 0, i64 2, !dbg !5953
  %119 = load %struct.octal_node*, %struct.octal_node** %arrayidx125, align 8, !dbg !5953
  %y_min126 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %119, i32 0, i32 4, !dbg !5955
  %120 = load float, float* %y_min126, align 4, !dbg !5955
  %121 = load float, float* %size_y.addr, align 4, !dbg !5956
  %div127 = fdiv float %121, 2.000000e+00, !dbg !5957
  %add128 = fadd float %120, %div127, !dbg !5958
  %122 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5959
  %nodes129 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %122, i32 0, i32 0, !dbg !5960
  %arrayidx130 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes129, i64 0, i64 2, !dbg !5959
  %123 = load %struct.octal_node*, %struct.octal_node** %arrayidx130, align 8, !dbg !5959
  %y131 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %123, i32 0, i32 10, !dbg !5961
  store float %add128, float* %y131, align 4, !dbg !5962
  %124 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5963
  %nodes132 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %124, i32 0, i32 0, !dbg !5964
  %arrayidx133 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes132, i64 0, i64 2, !dbg !5963
  %125 = load %struct.octal_node*, %struct.octal_node** %arrayidx133, align 8, !dbg !5963
  %z_min134 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %125, i32 0, i32 5, !dbg !5965
  %126 = load float, float* %z_min134, align 8, !dbg !5965
  %127 = load float, float* %size_z.addr, align 4, !dbg !5966
  %div135 = fdiv float %127, 2.000000e+00, !dbg !5967
  %add136 = fadd float %126, %div135, !dbg !5968
  %128 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5969
  %nodes137 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %128, i32 0, i32 0, !dbg !5970
  %arrayidx138 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes137, i64 0, i64 2, !dbg !5969
  %129 = load %struct.octal_node*, %struct.octal_node** %arrayidx138, align 8, !dbg !5969
  %z139 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %129, i32 0, i32 11, !dbg !5971
  store float %add136, float* %z139, align 8, !dbg !5972
  %130 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5973
  %x_min140 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %130, i32 0, i32 3, !dbg !5974
  %131 = load float, float* %x_min140, align 8, !dbg !5974
  %132 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5975
  %nodes141 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %132, i32 0, i32 0, !dbg !5976
  %arrayidx142 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes141, i64 0, i64 3, !dbg !5975
  %133 = load %struct.octal_node*, %struct.octal_node** %arrayidx142, align 8, !dbg !5975
  %x_min143 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %133, i32 0, i32 3, !dbg !5977
  store float %131, float* %x_min143, align 8, !dbg !5978
  %134 = load float, float* %y, align 4, !dbg !5979
  %135 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5980
  %nodes144 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %135, i32 0, i32 0, !dbg !5981
  %arrayidx145 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes144, i64 0, i64 3, !dbg !5980
  %136 = load %struct.octal_node*, %struct.octal_node** %arrayidx145, align 8, !dbg !5980
  %y_min146 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %136, i32 0, i32 4, !dbg !5982
  store float %134, float* %y_min146, align 4, !dbg !5983
  %137 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5984
  %z_min147 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %137, i32 0, i32 5, !dbg !5985
  %138 = load float, float* %z_min147, align 8, !dbg !5985
  %139 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5986
  %nodes148 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %139, i32 0, i32 0, !dbg !5987
  %arrayidx149 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes148, i64 0, i64 3, !dbg !5986
  %140 = load %struct.octal_node*, %struct.octal_node** %arrayidx149, align 8, !dbg !5986
  %z_min150 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %140, i32 0, i32 5, !dbg !5988
  store float %138, float* %z_min150, align 8, !dbg !5989
  %141 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5990
  %nodes151 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %141, i32 0, i32 0, !dbg !5991
  %arrayidx152 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes151, i64 0, i64 3, !dbg !5990
  %142 = load %struct.octal_node*, %struct.octal_node** %arrayidx152, align 8, !dbg !5990
  %x_min153 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %142, i32 0, i32 3, !dbg !5992
  %143 = load float, float* %x_min153, align 8, !dbg !5992
  %144 = load float, float* %size_x.addr, align 4, !dbg !5993
  %div154 = fdiv float %144, 2.000000e+00, !dbg !5994
  %add155 = fadd float %143, %div154, !dbg !5995
  %145 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !5996
  %nodes156 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %145, i32 0, i32 0, !dbg !5997
  %arrayidx157 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes156, i64 0, i64 3, !dbg !5996
  %146 = load %struct.octal_node*, %struct.octal_node** %arrayidx157, align 8, !dbg !5996
  %x158 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %146, i32 0, i32 9, !dbg !5998
  store float %add155, float* %x158, align 8, !dbg !5999
  %147 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6000
  %nodes159 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %147, i32 0, i32 0, !dbg !6001
  %arrayidx160 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes159, i64 0, i64 3, !dbg !6000
  %148 = load %struct.octal_node*, %struct.octal_node** %arrayidx160, align 8, !dbg !6000
  %y_min161 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %148, i32 0, i32 4, !dbg !6002
  %149 = load float, float* %y_min161, align 4, !dbg !6002
  %150 = load float, float* %size_y.addr, align 4, !dbg !6003
  %div162 = fdiv float %150, 2.000000e+00, !dbg !6004
  %add163 = fadd float %149, %div162, !dbg !6005
  %151 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6006
  %nodes164 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %151, i32 0, i32 0, !dbg !6007
  %arrayidx165 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes164, i64 0, i64 3, !dbg !6006
  %152 = load %struct.octal_node*, %struct.octal_node** %arrayidx165, align 8, !dbg !6006
  %y166 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %152, i32 0, i32 10, !dbg !6008
  store float %add163, float* %y166, align 4, !dbg !6009
  %153 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6010
  %nodes167 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %153, i32 0, i32 0, !dbg !6011
  %arrayidx168 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes167, i64 0, i64 3, !dbg !6010
  %154 = load %struct.octal_node*, %struct.octal_node** %arrayidx168, align 8, !dbg !6010
  %z_min169 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %154, i32 0, i32 5, !dbg !6012
  %155 = load float, float* %z_min169, align 8, !dbg !6012
  %156 = load float, float* %size_z.addr, align 4, !dbg !6013
  %div170 = fdiv float %156, 2.000000e+00, !dbg !6014
  %add171 = fadd float %155, %div170, !dbg !6015
  %157 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6016
  %nodes172 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %157, i32 0, i32 0, !dbg !6017
  %arrayidx173 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes172, i64 0, i64 3, !dbg !6016
  %158 = load %struct.octal_node*, %struct.octal_node** %arrayidx173, align 8, !dbg !6016
  %z174 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %158, i32 0, i32 11, !dbg !6018
  store float %add171, float* %z174, align 8, !dbg !6019
  %159 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6020
  %x_min175 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %159, i32 0, i32 3, !dbg !6021
  %160 = load float, float* %x_min175, align 8, !dbg !6021
  %161 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6022
  %nodes176 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %161, i32 0, i32 0, !dbg !6023
  %arrayidx177 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes176, i64 0, i64 4, !dbg !6022
  %162 = load %struct.octal_node*, %struct.octal_node** %arrayidx177, align 8, !dbg !6022
  %x_min178 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %162, i32 0, i32 3, !dbg !6024
  store float %160, float* %x_min178, align 8, !dbg !6025
  %163 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6026
  %y_min179 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %163, i32 0, i32 4, !dbg !6027
  %164 = load float, float* %y_min179, align 4, !dbg !6027
  %165 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6028
  %nodes180 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %165, i32 0, i32 0, !dbg !6029
  %arrayidx181 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes180, i64 0, i64 4, !dbg !6028
  %166 = load %struct.octal_node*, %struct.octal_node** %arrayidx181, align 8, !dbg !6028
  %y_min182 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %166, i32 0, i32 4, !dbg !6030
  store float %164, float* %y_min182, align 4, !dbg !6031
  %167 = load float, float* %z, align 4, !dbg !6032
  %168 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6033
  %nodes183 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %168, i32 0, i32 0, !dbg !6034
  %arrayidx184 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes183, i64 0, i64 4, !dbg !6033
  %169 = load %struct.octal_node*, %struct.octal_node** %arrayidx184, align 8, !dbg !6033
  %z_min185 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %169, i32 0, i32 5, !dbg !6035
  store float %167, float* %z_min185, align 8, !dbg !6036
  %170 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6037
  %nodes186 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %170, i32 0, i32 0, !dbg !6038
  %arrayidx187 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes186, i64 0, i64 4, !dbg !6037
  %171 = load %struct.octal_node*, %struct.octal_node** %arrayidx187, align 8, !dbg !6037
  %x_min188 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %171, i32 0, i32 3, !dbg !6039
  %172 = load float, float* %x_min188, align 8, !dbg !6039
  %173 = load float, float* %size_x.addr, align 4, !dbg !6040
  %div189 = fdiv float %173, 2.000000e+00, !dbg !6041
  %add190 = fadd float %172, %div189, !dbg !6042
  %174 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6043
  %nodes191 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %174, i32 0, i32 0, !dbg !6044
  %arrayidx192 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes191, i64 0, i64 4, !dbg !6043
  %175 = load %struct.octal_node*, %struct.octal_node** %arrayidx192, align 8, !dbg !6043
  %x193 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %175, i32 0, i32 9, !dbg !6045
  store float %add190, float* %x193, align 8, !dbg !6046
  %176 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6047
  %nodes194 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %176, i32 0, i32 0, !dbg !6048
  %arrayidx195 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes194, i64 0, i64 4, !dbg !6047
  %177 = load %struct.octal_node*, %struct.octal_node** %arrayidx195, align 8, !dbg !6047
  %y_min196 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %177, i32 0, i32 4, !dbg !6049
  %178 = load float, float* %y_min196, align 4, !dbg !6049
  %179 = load float, float* %size_y.addr, align 4, !dbg !6050
  %div197 = fdiv float %179, 2.000000e+00, !dbg !6051
  %add198 = fadd float %178, %div197, !dbg !6052
  %180 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6053
  %nodes199 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %180, i32 0, i32 0, !dbg !6054
  %arrayidx200 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes199, i64 0, i64 4, !dbg !6053
  %181 = load %struct.octal_node*, %struct.octal_node** %arrayidx200, align 8, !dbg !6053
  %y201 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %181, i32 0, i32 10, !dbg !6055
  store float %add198, float* %y201, align 4, !dbg !6056
  %182 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6057
  %nodes202 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %182, i32 0, i32 0, !dbg !6058
  %arrayidx203 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes202, i64 0, i64 4, !dbg !6057
  %183 = load %struct.octal_node*, %struct.octal_node** %arrayidx203, align 8, !dbg !6057
  %z_min204 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %183, i32 0, i32 5, !dbg !6059
  %184 = load float, float* %z_min204, align 8, !dbg !6059
  %185 = load float, float* %size_z.addr, align 4, !dbg !6060
  %div205 = fdiv float %185, 2.000000e+00, !dbg !6061
  %add206 = fadd float %184, %div205, !dbg !6062
  %186 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6063
  %nodes207 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %186, i32 0, i32 0, !dbg !6064
  %arrayidx208 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes207, i64 0, i64 4, !dbg !6063
  %187 = load %struct.octal_node*, %struct.octal_node** %arrayidx208, align 8, !dbg !6063
  %z209 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %187, i32 0, i32 11, !dbg !6065
  store float %add206, float* %z209, align 8, !dbg !6066
  %188 = load float, float* %x, align 4, !dbg !6067
  %189 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6068
  %nodes210 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %189, i32 0, i32 0, !dbg !6069
  %arrayidx211 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes210, i64 0, i64 5, !dbg !6068
  %190 = load %struct.octal_node*, %struct.octal_node** %arrayidx211, align 8, !dbg !6068
  %x_min212 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %190, i32 0, i32 3, !dbg !6070
  store float %188, float* %x_min212, align 8, !dbg !6071
  %191 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6072
  %y_min213 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %191, i32 0, i32 4, !dbg !6073
  %192 = load float, float* %y_min213, align 4, !dbg !6073
  %193 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6074
  %nodes214 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %193, i32 0, i32 0, !dbg !6075
  %arrayidx215 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes214, i64 0, i64 5, !dbg !6074
  %194 = load %struct.octal_node*, %struct.octal_node** %arrayidx215, align 8, !dbg !6074
  %y_min216 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %194, i32 0, i32 4, !dbg !6076
  store float %192, float* %y_min216, align 4, !dbg !6077
  %195 = load float, float* %z, align 4, !dbg !6078
  %196 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6079
  %nodes217 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %196, i32 0, i32 0, !dbg !6080
  %arrayidx218 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes217, i64 0, i64 5, !dbg !6079
  %197 = load %struct.octal_node*, %struct.octal_node** %arrayidx218, align 8, !dbg !6079
  %z_min219 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %197, i32 0, i32 5, !dbg !6081
  store float %195, float* %z_min219, align 8, !dbg !6082
  %198 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6083
  %nodes220 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %198, i32 0, i32 0, !dbg !6084
  %arrayidx221 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes220, i64 0, i64 5, !dbg !6083
  %199 = load %struct.octal_node*, %struct.octal_node** %arrayidx221, align 8, !dbg !6083
  %x_min222 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %199, i32 0, i32 3, !dbg !6085
  %200 = load float, float* %x_min222, align 8, !dbg !6085
  %201 = load float, float* %size_x.addr, align 4, !dbg !6086
  %div223 = fdiv float %201, 2.000000e+00, !dbg !6087
  %add224 = fadd float %200, %div223, !dbg !6088
  %202 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6089
  %nodes225 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %202, i32 0, i32 0, !dbg !6090
  %arrayidx226 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes225, i64 0, i64 5, !dbg !6089
  %203 = load %struct.octal_node*, %struct.octal_node** %arrayidx226, align 8, !dbg !6089
  %x227 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %203, i32 0, i32 9, !dbg !6091
  store float %add224, float* %x227, align 8, !dbg !6092
  %204 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6093
  %nodes228 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %204, i32 0, i32 0, !dbg !6094
  %arrayidx229 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes228, i64 0, i64 5, !dbg !6093
  %205 = load %struct.octal_node*, %struct.octal_node** %arrayidx229, align 8, !dbg !6093
  %y_min230 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %205, i32 0, i32 4, !dbg !6095
  %206 = load float, float* %y_min230, align 4, !dbg !6095
  %207 = load float, float* %size_y.addr, align 4, !dbg !6096
  %div231 = fdiv float %207, 2.000000e+00, !dbg !6097
  %add232 = fadd float %206, %div231, !dbg !6098
  %208 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6099
  %nodes233 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %208, i32 0, i32 0, !dbg !6100
  %arrayidx234 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes233, i64 0, i64 5, !dbg !6099
  %209 = load %struct.octal_node*, %struct.octal_node** %arrayidx234, align 8, !dbg !6099
  %y235 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %209, i32 0, i32 10, !dbg !6101
  store float %add232, float* %y235, align 4, !dbg !6102
  %210 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6103
  %nodes236 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %210, i32 0, i32 0, !dbg !6104
  %arrayidx237 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes236, i64 0, i64 5, !dbg !6103
  %211 = load %struct.octal_node*, %struct.octal_node** %arrayidx237, align 8, !dbg !6103
  %z_min238 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %211, i32 0, i32 5, !dbg !6105
  %212 = load float, float* %z_min238, align 8, !dbg !6105
  %213 = load float, float* %size_z.addr, align 4, !dbg !6106
  %div239 = fdiv float %213, 2.000000e+00, !dbg !6107
  %add240 = fadd float %212, %div239, !dbg !6108
  %214 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6109
  %nodes241 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %214, i32 0, i32 0, !dbg !6110
  %arrayidx242 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes241, i64 0, i64 5, !dbg !6109
  %215 = load %struct.octal_node*, %struct.octal_node** %arrayidx242, align 8, !dbg !6109
  %z243 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %215, i32 0, i32 11, !dbg !6111
  store float %add240, float* %z243, align 8, !dbg !6112
  %216 = load float, float* %x, align 4, !dbg !6113
  %217 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6114
  %nodes244 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %217, i32 0, i32 0, !dbg !6115
  %arrayidx245 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes244, i64 0, i64 6, !dbg !6114
  %218 = load %struct.octal_node*, %struct.octal_node** %arrayidx245, align 8, !dbg !6114
  %x_min246 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %218, i32 0, i32 3, !dbg !6116
  store float %216, float* %x_min246, align 8, !dbg !6117
  %219 = load float, float* %y, align 4, !dbg !6118
  %220 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6119
  %nodes247 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %220, i32 0, i32 0, !dbg !6120
  %arrayidx248 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes247, i64 0, i64 6, !dbg !6119
  %221 = load %struct.octal_node*, %struct.octal_node** %arrayidx248, align 8, !dbg !6119
  %y_min249 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %221, i32 0, i32 4, !dbg !6121
  store float %219, float* %y_min249, align 4, !dbg !6122
  %222 = load float, float* %z, align 4, !dbg !6123
  %223 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6124
  %nodes250 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %223, i32 0, i32 0, !dbg !6125
  %arrayidx251 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes250, i64 0, i64 6, !dbg !6124
  %224 = load %struct.octal_node*, %struct.octal_node** %arrayidx251, align 8, !dbg !6124
  %z_min252 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %224, i32 0, i32 5, !dbg !6126
  store float %222, float* %z_min252, align 8, !dbg !6127
  %225 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6128
  %nodes253 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %225, i32 0, i32 0, !dbg !6129
  %arrayidx254 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes253, i64 0, i64 6, !dbg !6128
  %226 = load %struct.octal_node*, %struct.octal_node** %arrayidx254, align 8, !dbg !6128
  %x_min255 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %226, i32 0, i32 3, !dbg !6130
  %227 = load float, float* %x_min255, align 8, !dbg !6130
  %228 = load float, float* %size_x.addr, align 4, !dbg !6131
  %div256 = fdiv float %228, 2.000000e+00, !dbg !6132
  %add257 = fadd float %227, %div256, !dbg !6133
  %229 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6134
  %nodes258 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %229, i32 0, i32 0, !dbg !6135
  %arrayidx259 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes258, i64 0, i64 6, !dbg !6134
  %230 = load %struct.octal_node*, %struct.octal_node** %arrayidx259, align 8, !dbg !6134
  %x260 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %230, i32 0, i32 9, !dbg !6136
  store float %add257, float* %x260, align 8, !dbg !6137
  %231 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6138
  %nodes261 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %231, i32 0, i32 0, !dbg !6139
  %arrayidx262 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes261, i64 0, i64 6, !dbg !6138
  %232 = load %struct.octal_node*, %struct.octal_node** %arrayidx262, align 8, !dbg !6138
  %y_min263 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %232, i32 0, i32 4, !dbg !6140
  %233 = load float, float* %y_min263, align 4, !dbg !6140
  %234 = load float, float* %size_y.addr, align 4, !dbg !6141
  %div264 = fdiv float %234, 2.000000e+00, !dbg !6142
  %add265 = fadd float %233, %div264, !dbg !6143
  %235 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6144
  %nodes266 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %235, i32 0, i32 0, !dbg !6145
  %arrayidx267 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes266, i64 0, i64 6, !dbg !6144
  %236 = load %struct.octal_node*, %struct.octal_node** %arrayidx267, align 8, !dbg !6144
  %y268 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %236, i32 0, i32 10, !dbg !6146
  store float %add265, float* %y268, align 4, !dbg !6147
  %237 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6148
  %nodes269 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %237, i32 0, i32 0, !dbg !6149
  %arrayidx270 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes269, i64 0, i64 6, !dbg !6148
  %238 = load %struct.octal_node*, %struct.octal_node** %arrayidx270, align 8, !dbg !6148
  %z_min271 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %238, i32 0, i32 5, !dbg !6150
  %239 = load float, float* %z_min271, align 8, !dbg !6150
  %240 = load float, float* %size_z.addr, align 4, !dbg !6151
  %div272 = fdiv float %240, 2.000000e+00, !dbg !6152
  %add273 = fadd float %239, %div272, !dbg !6153
  %241 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6154
  %nodes274 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %241, i32 0, i32 0, !dbg !6155
  %arrayidx275 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes274, i64 0, i64 6, !dbg !6154
  %242 = load %struct.octal_node*, %struct.octal_node** %arrayidx275, align 8, !dbg !6154
  %z276 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %242, i32 0, i32 11, !dbg !6156
  store float %add273, float* %z276, align 8, !dbg !6157
  %243 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6158
  %x_min277 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %243, i32 0, i32 3, !dbg !6159
  %244 = load float, float* %x_min277, align 8, !dbg !6159
  %245 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6160
  %nodes278 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %245, i32 0, i32 0, !dbg !6161
  %arrayidx279 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes278, i64 0, i64 7, !dbg !6160
  %246 = load %struct.octal_node*, %struct.octal_node** %arrayidx279, align 8, !dbg !6160
  %x_min280 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %246, i32 0, i32 3, !dbg !6162
  store float %244, float* %x_min280, align 8, !dbg !6163
  %247 = load float, float* %y, align 4, !dbg !6164
  %248 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6165
  %nodes281 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %248, i32 0, i32 0, !dbg !6166
  %arrayidx282 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes281, i64 0, i64 7, !dbg !6165
  %249 = load %struct.octal_node*, %struct.octal_node** %arrayidx282, align 8, !dbg !6165
  %y_min283 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %249, i32 0, i32 4, !dbg !6167
  store float %247, float* %y_min283, align 4, !dbg !6168
  %250 = load float, float* %z, align 4, !dbg !6169
  %251 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6170
  %nodes284 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %251, i32 0, i32 0, !dbg !6171
  %arrayidx285 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes284, i64 0, i64 7, !dbg !6170
  %252 = load %struct.octal_node*, %struct.octal_node** %arrayidx285, align 8, !dbg !6170
  %z_min286 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %252, i32 0, i32 5, !dbg !6172
  store float %250, float* %z_min286, align 8, !dbg !6173
  %253 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6174
  %nodes287 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %253, i32 0, i32 0, !dbg !6175
  %arrayidx288 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes287, i64 0, i64 7, !dbg !6174
  %254 = load %struct.octal_node*, %struct.octal_node** %arrayidx288, align 8, !dbg !6174
  %x_min289 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %254, i32 0, i32 3, !dbg !6176
  %255 = load float, float* %x_min289, align 8, !dbg !6176
  %256 = load float, float* %size_x.addr, align 4, !dbg !6177
  %div290 = fdiv float %256, 2.000000e+00, !dbg !6178
  %add291 = fadd float %255, %div290, !dbg !6179
  %257 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6180
  %nodes292 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %257, i32 0, i32 0, !dbg !6181
  %arrayidx293 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes292, i64 0, i64 7, !dbg !6180
  %258 = load %struct.octal_node*, %struct.octal_node** %arrayidx293, align 8, !dbg !6180
  %x294 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %258, i32 0, i32 9, !dbg !6182
  store float %add291, float* %x294, align 8, !dbg !6183
  %259 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6184
  %nodes295 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %259, i32 0, i32 0, !dbg !6185
  %arrayidx296 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes295, i64 0, i64 7, !dbg !6184
  %260 = load %struct.octal_node*, %struct.octal_node** %arrayidx296, align 8, !dbg !6184
  %y_min297 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %260, i32 0, i32 4, !dbg !6186
  %261 = load float, float* %y_min297, align 4, !dbg !6186
  %262 = load float, float* %size_y.addr, align 4, !dbg !6187
  %div298 = fdiv float %262, 2.000000e+00, !dbg !6188
  %add299 = fadd float %261, %div298, !dbg !6189
  %263 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6190
  %nodes300 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %263, i32 0, i32 0, !dbg !6191
  %arrayidx301 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes300, i64 0, i64 7, !dbg !6190
  %264 = load %struct.octal_node*, %struct.octal_node** %arrayidx301, align 8, !dbg !6190
  %y302 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %264, i32 0, i32 10, !dbg !6192
  store float %add299, float* %y302, align 4, !dbg !6193
  %265 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6194
  %nodes303 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %265, i32 0, i32 0, !dbg !6195
  %arrayidx304 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes303, i64 0, i64 7, !dbg !6194
  %266 = load %struct.octal_node*, %struct.octal_node** %arrayidx304, align 8, !dbg !6194
  %z_min305 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %266, i32 0, i32 5, !dbg !6196
  %267 = load float, float* %z_min305, align 8, !dbg !6196
  %268 = load float, float* %size_z.addr, align 4, !dbg !6197
  %div306 = fdiv float %268, 2.000000e+00, !dbg !6198
  %add307 = fadd float %267, %div306, !dbg !6199
  %269 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6200
  %nodes308 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %269, i32 0, i32 0, !dbg !6201
  %arrayidx309 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes308, i64 0, i64 7, !dbg !6200
  %270 = load %struct.octal_node*, %struct.octal_node** %arrayidx309, align 8, !dbg !6200
  %z310 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %270, i32 0, i32 11, !dbg !6202
  store float %add307, float* %z310, align 8, !dbg !6203
  %271 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6204
  %elems311 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %271, i32 0, i32 2, !dbg !6205
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %elems311, i32 0, i32 0, !dbg !6206
  %272 = load i8*, i8** %first, align 8, !dbg !6206
  %273 = bitcast i8* %272 to %struct.ml_pointer*, !dbg !6204
  store %struct.ml_pointer* %273, %struct.ml_pointer** %ml_p, align 8, !dbg !6207
  br label %while.cond, !dbg !6208

while.cond:                                       ; preds = %if.end531, %for.end27
  %274 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !6209
  %tobool = icmp ne %struct.ml_pointer* %274, null, !dbg !6208
  br i1 %tobool, label %while.body, label %while.end, !dbg !6208

while.body:                                       ; preds = %while.cond
  %275 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !6210
  %ml312 = getelementptr inbounds %struct.ml_pointer, %struct.ml_pointer* %275, i32 0, i32 2, !dbg !6212
  %276 = load %struct.MetaElem*, %struct.MetaElem** %ml312, align 8, !dbg !6212
  store %struct.MetaElem* %276, %struct.MetaElem** %ml, align 8, !dbg !6213
  %277 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6214
  %bb = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %277, i32 0, i32 2, !dbg !6216
  %278 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !6216
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %278, i32 0, i32 0, !dbg !6217
  %arrayidx313 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 0, !dbg !6214
  %arrayidx314 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx313, i64 0, i64 2, !dbg !6214
  %279 = load float, float* %arrayidx314, align 4, !dbg !6214
  %280 = load float, float* %z, align 4, !dbg !6218
  %cmp315 = fcmp olt float %279, %280, !dbg !6219
  br i1 %cmp315, label %if.then, label %if.else453, !dbg !6220

if.then:                                          ; preds = %while.body
  %281 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6221
  %bb316 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %281, i32 0, i32 2, !dbg !6224
  %282 = load %struct.BoundBox*, %struct.BoundBox** %bb316, align 8, !dbg !6224
  %vec317 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %282, i32 0, i32 0, !dbg !6225
  %arrayidx318 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec317, i64 0, i64 0, !dbg !6221
  %arrayidx319 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx318, i64 0, i64 1, !dbg !6221
  %283 = load float, float* %arrayidx319, align 4, !dbg !6221
  %284 = load float, float* %y, align 4, !dbg !6226
  %cmp320 = fcmp olt float %283, %284, !dbg !6227
  br i1 %cmp320, label %if.then321, label %if.else403, !dbg !6228

if.then321:                                       ; preds = %if.then
  %285 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6229
  %bb322 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %285, i32 0, i32 2, !dbg !6232
  %286 = load %struct.BoundBox*, %struct.BoundBox** %bb322, align 8, !dbg !6232
  %vec323 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %286, i32 0, i32 0, !dbg !6233
  %arrayidx324 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec323, i64 0, i64 0, !dbg !6229
  %arrayidx325 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx324, i64 0, i64 0, !dbg !6229
  %287 = load float, float* %arrayidx325, align 4, !dbg !6229
  %288 = load float, float* %x, align 4, !dbg !6234
  %cmp326 = fcmp olt float %287, %288, !dbg !6235
  br i1 %cmp326, label %if.then327, label %if.else, !dbg !6236

if.then327:                                       ; preds = %if.then321
  %289 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6237
  %290 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6239
  call void @fill_metaball_octal_node(%struct.octal_node* %289, %struct.MetaElem* %290, i16 signext 0), !dbg !6240
  %291 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6241
  %bb328 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %291, i32 0, i32 2, !dbg !6243
  %292 = load %struct.BoundBox*, %struct.BoundBox** %bb328, align 8, !dbg !6243
  %vec329 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %292, i32 0, i32 0, !dbg !6244
  %arrayidx330 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec329, i64 0, i64 6, !dbg !6241
  %arrayidx331 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx330, i64 0, i64 1, !dbg !6241
  %293 = load float, float* %arrayidx331, align 4, !dbg !6241
  %294 = load float, float* %y, align 4, !dbg !6245
  %cmp332 = fcmp oge float %293, %294, !dbg !6246
  br i1 %cmp332, label %if.then333, label %if.end340, !dbg !6247

if.then333:                                       ; preds = %if.then327
  %295 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6248
  %296 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6250
  call void @fill_metaball_octal_node(%struct.octal_node* %295, %struct.MetaElem* %296, i16 signext 3), !dbg !6251
  %297 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6252
  %bb334 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %297, i32 0, i32 2, !dbg !6254
  %298 = load %struct.BoundBox*, %struct.BoundBox** %bb334, align 8, !dbg !6254
  %vec335 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %298, i32 0, i32 0, !dbg !6255
  %arrayidx336 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec335, i64 0, i64 6, !dbg !6252
  %arrayidx337 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx336, i64 0, i64 2, !dbg !6252
  %299 = load float, float* %arrayidx337, align 4, !dbg !6252
  %300 = load float, float* %z, align 4, !dbg !6256
  %cmp338 = fcmp oge float %299, %300, !dbg !6257
  br i1 %cmp338, label %if.then339, label %if.end, !dbg !6258

if.then339:                                       ; preds = %if.then333
  %301 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6259
  %302 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6261
  call void @fill_metaball_octal_node(%struct.octal_node* %301, %struct.MetaElem* %302, i16 signext 7), !dbg !6262
  br label %if.end, !dbg !6263

if.end:                                           ; preds = %if.then339, %if.then333
  br label %if.end340, !dbg !6264

if.end340:                                        ; preds = %if.end, %if.then327
  %303 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6265
  %bb341 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %303, i32 0, i32 2, !dbg !6267
  %304 = load %struct.BoundBox*, %struct.BoundBox** %bb341, align 8, !dbg !6267
  %vec342 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %304, i32 0, i32 0, !dbg !6268
  %arrayidx343 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec342, i64 0, i64 6, !dbg !6265
  %arrayidx344 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx343, i64 0, i64 0, !dbg !6265
  %305 = load float, float* %arrayidx344, align 4, !dbg !6265
  %306 = load float, float* %x, align 4, !dbg !6269
  %cmp345 = fcmp oge float %305, %306, !dbg !6270
  br i1 %cmp345, label %if.then346, label %if.end354, !dbg !6271

if.then346:                                       ; preds = %if.end340
  %307 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6272
  %308 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6274
  call void @fill_metaball_octal_node(%struct.octal_node* %307, %struct.MetaElem* %308, i16 signext 1), !dbg !6275
  %309 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6276
  %bb347 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %309, i32 0, i32 2, !dbg !6278
  %310 = load %struct.BoundBox*, %struct.BoundBox** %bb347, align 8, !dbg !6278
  %vec348 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %310, i32 0, i32 0, !dbg !6279
  %arrayidx349 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec348, i64 0, i64 6, !dbg !6276
  %arrayidx350 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx349, i64 0, i64 2, !dbg !6276
  %311 = load float, float* %arrayidx350, align 4, !dbg !6276
  %312 = load float, float* %z, align 4, !dbg !6280
  %cmp351 = fcmp oge float %311, %312, !dbg !6281
  br i1 %cmp351, label %if.then352, label %if.end353, !dbg !6282

if.then352:                                       ; preds = %if.then346
  %313 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6283
  %314 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6285
  call void @fill_metaball_octal_node(%struct.octal_node* %313, %struct.MetaElem* %314, i16 signext 5), !dbg !6286
  br label %if.end353, !dbg !6287

if.end353:                                        ; preds = %if.then352, %if.then346
  br label %if.end354, !dbg !6288

if.end354:                                        ; preds = %if.end353, %if.end340
  %315 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6289
  %bb355 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %315, i32 0, i32 2, !dbg !6291
  %316 = load %struct.BoundBox*, %struct.BoundBox** %bb355, align 8, !dbg !6291
  %vec356 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %316, i32 0, i32 0, !dbg !6292
  %arrayidx357 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec356, i64 0, i64 6, !dbg !6289
  %arrayidx358 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx357, i64 0, i64 0, !dbg !6289
  %317 = load float, float* %arrayidx358, align 4, !dbg !6289
  %318 = load float, float* %x, align 4, !dbg !6293
  %cmp359 = fcmp oge float %317, %318, !dbg !6294
  br i1 %cmp359, label %land.lhs.true, label %if.end373, !dbg !6295

land.lhs.true:                                    ; preds = %if.end354
  %319 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6296
  %bb360 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %319, i32 0, i32 2, !dbg !6297
  %320 = load %struct.BoundBox*, %struct.BoundBox** %bb360, align 8, !dbg !6297
  %vec361 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %320, i32 0, i32 0, !dbg !6298
  %arrayidx362 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec361, i64 0, i64 6, !dbg !6296
  %arrayidx363 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx362, i64 0, i64 1, !dbg !6296
  %321 = load float, float* %arrayidx363, align 4, !dbg !6296
  %322 = load float, float* %y, align 4, !dbg !6299
  %cmp364 = fcmp oge float %321, %322, !dbg !6300
  br i1 %cmp364, label %if.then365, label %if.end373, !dbg !6301

if.then365:                                       ; preds = %land.lhs.true
  %323 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6302
  %324 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6304
  call void @fill_metaball_octal_node(%struct.octal_node* %323, %struct.MetaElem* %324, i16 signext 2), !dbg !6305
  %325 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6306
  %bb366 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %325, i32 0, i32 2, !dbg !6308
  %326 = load %struct.BoundBox*, %struct.BoundBox** %bb366, align 8, !dbg !6308
  %vec367 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %326, i32 0, i32 0, !dbg !6309
  %arrayidx368 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec367, i64 0, i64 6, !dbg !6306
  %arrayidx369 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx368, i64 0, i64 2, !dbg !6306
  %327 = load float, float* %arrayidx369, align 4, !dbg !6306
  %328 = load float, float* %z, align 4, !dbg !6310
  %cmp370 = fcmp oge float %327, %328, !dbg !6311
  br i1 %cmp370, label %if.then371, label %if.end372, !dbg !6312

if.then371:                                       ; preds = %if.then365
  %329 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6313
  %330 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6315
  call void @fill_metaball_octal_node(%struct.octal_node* %329, %struct.MetaElem* %330, i16 signext 6), !dbg !6316
  br label %if.end372, !dbg !6317

if.end372:                                        ; preds = %if.then371, %if.then365
  br label %if.end373, !dbg !6318

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %if.end354
  %331 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6319
  %bb374 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %331, i32 0, i32 2, !dbg !6321
  %332 = load %struct.BoundBox*, %struct.BoundBox** %bb374, align 8, !dbg !6321
  %vec375 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %332, i32 0, i32 0, !dbg !6322
  %arrayidx376 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec375, i64 0, i64 6, !dbg !6319
  %arrayidx377 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx376, i64 0, i64 2, !dbg !6319
  %333 = load float, float* %arrayidx377, align 4, !dbg !6319
  %334 = load float, float* %z, align 4, !dbg !6323
  %cmp378 = fcmp oge float %333, %334, !dbg !6324
  br i1 %cmp378, label %if.then379, label %if.end380, !dbg !6325

if.then379:                                       ; preds = %if.end373
  %335 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6326
  %336 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6328
  call void @fill_metaball_octal_node(%struct.octal_node* %335, %struct.MetaElem* %336, i16 signext 4), !dbg !6329
  br label %if.end380, !dbg !6330

if.end380:                                        ; preds = %if.then379, %if.end373
  br label %if.end402, !dbg !6331

if.else:                                          ; preds = %if.then321
  %337 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6332
  %338 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6334
  call void @fill_metaball_octal_node(%struct.octal_node* %337, %struct.MetaElem* %338, i16 signext 1), !dbg !6335
  %339 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6336
  %bb381 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %339, i32 0, i32 2, !dbg !6338
  %340 = load %struct.BoundBox*, %struct.BoundBox** %bb381, align 8, !dbg !6338
  %vec382 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %340, i32 0, i32 0, !dbg !6339
  %arrayidx383 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec382, i64 0, i64 6, !dbg !6336
  %arrayidx384 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx383, i64 0, i64 1, !dbg !6336
  %341 = load float, float* %arrayidx384, align 4, !dbg !6336
  %342 = load float, float* %y, align 4, !dbg !6340
  %cmp385 = fcmp oge float %341, %342, !dbg !6341
  br i1 %cmp385, label %if.then386, label %if.end394, !dbg !6342

if.then386:                                       ; preds = %if.else
  %343 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6343
  %344 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6345
  call void @fill_metaball_octal_node(%struct.octal_node* %343, %struct.MetaElem* %344, i16 signext 2), !dbg !6346
  %345 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6347
  %bb387 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %345, i32 0, i32 2, !dbg !6349
  %346 = load %struct.BoundBox*, %struct.BoundBox** %bb387, align 8, !dbg !6349
  %vec388 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %346, i32 0, i32 0, !dbg !6350
  %arrayidx389 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec388, i64 0, i64 6, !dbg !6347
  %arrayidx390 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx389, i64 0, i64 2, !dbg !6347
  %347 = load float, float* %arrayidx390, align 4, !dbg !6347
  %348 = load float, float* %z, align 4, !dbg !6351
  %cmp391 = fcmp oge float %347, %348, !dbg !6352
  br i1 %cmp391, label %if.then392, label %if.end393, !dbg !6353

if.then392:                                       ; preds = %if.then386
  %349 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6354
  %350 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6356
  call void @fill_metaball_octal_node(%struct.octal_node* %349, %struct.MetaElem* %350, i16 signext 6), !dbg !6357
  br label %if.end393, !dbg !6358

if.end393:                                        ; preds = %if.then392, %if.then386
  br label %if.end394, !dbg !6359

if.end394:                                        ; preds = %if.end393, %if.else
  %351 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6360
  %bb395 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %351, i32 0, i32 2, !dbg !6362
  %352 = load %struct.BoundBox*, %struct.BoundBox** %bb395, align 8, !dbg !6362
  %vec396 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %352, i32 0, i32 0, !dbg !6363
  %arrayidx397 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec396, i64 0, i64 6, !dbg !6360
  %arrayidx398 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx397, i64 0, i64 2, !dbg !6360
  %353 = load float, float* %arrayidx398, align 4, !dbg !6360
  %354 = load float, float* %z, align 4, !dbg !6364
  %cmp399 = fcmp oge float %353, %354, !dbg !6365
  br i1 %cmp399, label %if.then400, label %if.end401, !dbg !6366

if.then400:                                       ; preds = %if.end394
  %355 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6367
  %356 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6369
  call void @fill_metaball_octal_node(%struct.octal_node* %355, %struct.MetaElem* %356, i16 signext 5), !dbg !6370
  br label %if.end401, !dbg !6371

if.end401:                                        ; preds = %if.then400, %if.end394
  br label %if.end402

if.end402:                                        ; preds = %if.end401, %if.end380
  br label %if.end432, !dbg !6372

if.else403:                                       ; preds = %if.then
  %357 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6373
  %bb404 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %357, i32 0, i32 2, !dbg !6376
  %358 = load %struct.BoundBox*, %struct.BoundBox** %bb404, align 8, !dbg !6376
  %vec405 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %358, i32 0, i32 0, !dbg !6377
  %arrayidx406 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec405, i64 0, i64 0, !dbg !6373
  %arrayidx407 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx406, i64 0, i64 0, !dbg !6373
  %359 = load float, float* %arrayidx407, align 4, !dbg !6373
  %360 = load float, float* %x, align 4, !dbg !6378
  %cmp408 = fcmp olt float %359, %360, !dbg !6379
  br i1 %cmp408, label %if.then409, label %if.end431, !dbg !6380

if.then409:                                       ; preds = %if.else403
  %361 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6381
  %362 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6383
  call void @fill_metaball_octal_node(%struct.octal_node* %361, %struct.MetaElem* %362, i16 signext 3), !dbg !6384
  %363 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6385
  %bb410 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %363, i32 0, i32 2, !dbg !6387
  %364 = load %struct.BoundBox*, %struct.BoundBox** %bb410, align 8, !dbg !6387
  %vec411 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %364, i32 0, i32 0, !dbg !6388
  %arrayidx412 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec411, i64 0, i64 6, !dbg !6385
  %arrayidx413 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx412, i64 0, i64 2, !dbg !6385
  %365 = load float, float* %arrayidx413, align 4, !dbg !6385
  %366 = load float, float* %z, align 4, !dbg !6389
  %cmp414 = fcmp oge float %365, %366, !dbg !6390
  br i1 %cmp414, label %if.then415, label %if.end416, !dbg !6391

if.then415:                                       ; preds = %if.then409
  %367 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6392
  %368 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6394
  call void @fill_metaball_octal_node(%struct.octal_node* %367, %struct.MetaElem* %368, i16 signext 7), !dbg !6395
  br label %if.end416, !dbg !6396

if.end416:                                        ; preds = %if.then415, %if.then409
  %369 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6397
  %bb417 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %369, i32 0, i32 2, !dbg !6399
  %370 = load %struct.BoundBox*, %struct.BoundBox** %bb417, align 8, !dbg !6399
  %vec418 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %370, i32 0, i32 0, !dbg !6400
  %arrayidx419 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec418, i64 0, i64 6, !dbg !6397
  %arrayidx420 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx419, i64 0, i64 0, !dbg !6397
  %371 = load float, float* %arrayidx420, align 4, !dbg !6397
  %372 = load float, float* %x, align 4, !dbg !6401
  %cmp421 = fcmp oge float %371, %372, !dbg !6402
  br i1 %cmp421, label %if.then422, label %if.end430, !dbg !6403

if.then422:                                       ; preds = %if.end416
  %373 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6404
  %374 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6406
  call void @fill_metaball_octal_node(%struct.octal_node* %373, %struct.MetaElem* %374, i16 signext 2), !dbg !6407
  %375 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6408
  %bb423 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %375, i32 0, i32 2, !dbg !6410
  %376 = load %struct.BoundBox*, %struct.BoundBox** %bb423, align 8, !dbg !6410
  %vec424 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %376, i32 0, i32 0, !dbg !6411
  %arrayidx425 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec424, i64 0, i64 6, !dbg !6408
  %arrayidx426 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx425, i64 0, i64 2, !dbg !6408
  %377 = load float, float* %arrayidx426, align 4, !dbg !6408
  %378 = load float, float* %z, align 4, !dbg !6412
  %cmp427 = fcmp oge float %377, %378, !dbg !6413
  br i1 %cmp427, label %if.then428, label %if.end429, !dbg !6414

if.then428:                                       ; preds = %if.then422
  %379 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6415
  %380 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6417
  call void @fill_metaball_octal_node(%struct.octal_node* %379, %struct.MetaElem* %380, i16 signext 6), !dbg !6418
  br label %if.end429, !dbg !6419

if.end429:                                        ; preds = %if.then428, %if.then422
  br label %if.end430, !dbg !6420

if.end430:                                        ; preds = %if.end429, %if.end416
  br label %if.end431, !dbg !6421

if.end431:                                        ; preds = %if.end430, %if.else403
  br label %if.end432

if.end432:                                        ; preds = %if.end431, %if.end402
  %381 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6422
  %bb433 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %381, i32 0, i32 2, !dbg !6424
  %382 = load %struct.BoundBox*, %struct.BoundBox** %bb433, align 8, !dbg !6424
  %vec434 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %382, i32 0, i32 0, !dbg !6425
  %arrayidx435 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec434, i64 0, i64 0, !dbg !6422
  %arrayidx436 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx435, i64 0, i64 0, !dbg !6422
  %383 = load float, float* %arrayidx436, align 4, !dbg !6422
  %384 = load float, float* %x, align 4, !dbg !6426
  %cmp437 = fcmp oge float %383, %384, !dbg !6427
  br i1 %cmp437, label %land.lhs.true438, label %if.end452, !dbg !6428

land.lhs.true438:                                 ; preds = %if.end432
  %385 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6429
  %bb439 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %385, i32 0, i32 2, !dbg !6430
  %386 = load %struct.BoundBox*, %struct.BoundBox** %bb439, align 8, !dbg !6430
  %vec440 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %386, i32 0, i32 0, !dbg !6431
  %arrayidx441 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec440, i64 0, i64 0, !dbg !6429
  %arrayidx442 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx441, i64 0, i64 1, !dbg !6429
  %387 = load float, float* %arrayidx442, align 4, !dbg !6429
  %388 = load float, float* %y, align 4, !dbg !6432
  %cmp443 = fcmp oge float %387, %388, !dbg !6433
  br i1 %cmp443, label %if.then444, label %if.end452, !dbg !6434

if.then444:                                       ; preds = %land.lhs.true438
  %389 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6435
  %390 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6437
  call void @fill_metaball_octal_node(%struct.octal_node* %389, %struct.MetaElem* %390, i16 signext 2), !dbg !6438
  %391 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6439
  %bb445 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %391, i32 0, i32 2, !dbg !6441
  %392 = load %struct.BoundBox*, %struct.BoundBox** %bb445, align 8, !dbg !6441
  %vec446 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %392, i32 0, i32 0, !dbg !6442
  %arrayidx447 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec446, i64 0, i64 6, !dbg !6439
  %arrayidx448 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx447, i64 0, i64 2, !dbg !6439
  %393 = load float, float* %arrayidx448, align 4, !dbg !6439
  %394 = load float, float* %z, align 4, !dbg !6443
  %cmp449 = fcmp oge float %393, %394, !dbg !6444
  br i1 %cmp449, label %if.then450, label %if.end451, !dbg !6445

if.then450:                                       ; preds = %if.then444
  %395 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6446
  %396 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6448
  call void @fill_metaball_octal_node(%struct.octal_node* %395, %struct.MetaElem* %396, i16 signext 6), !dbg !6449
  br label %if.end451, !dbg !6450

if.end451:                                        ; preds = %if.then450, %if.then444
  br label %if.end452, !dbg !6451

if.end452:                                        ; preds = %if.end451, %land.lhs.true438, %if.end432
  br label %if.end531, !dbg !6452

if.else453:                                       ; preds = %while.body
  %397 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6453
  %bb454 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %397, i32 0, i32 2, !dbg !6456
  %398 = load %struct.BoundBox*, %struct.BoundBox** %bb454, align 8, !dbg !6456
  %vec455 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %398, i32 0, i32 0, !dbg !6457
  %arrayidx456 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec455, i64 0, i64 0, !dbg !6453
  %arrayidx457 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx456, i64 0, i64 1, !dbg !6453
  %399 = load float, float* %arrayidx457, align 4, !dbg !6453
  %400 = load float, float* %y, align 4, !dbg !6458
  %cmp458 = fcmp olt float %399, %400, !dbg !6459
  br i1 %cmp458, label %if.then459, label %if.else502, !dbg !6460

if.then459:                                       ; preds = %if.else453
  %401 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6461
  %bb460 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %401, i32 0, i32 2, !dbg !6464
  %402 = load %struct.BoundBox*, %struct.BoundBox** %bb460, align 8, !dbg !6464
  %vec461 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %402, i32 0, i32 0, !dbg !6465
  %arrayidx462 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec461, i64 0, i64 0, !dbg !6461
  %arrayidx463 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx462, i64 0, i64 0, !dbg !6461
  %403 = load float, float* %arrayidx463, align 4, !dbg !6461
  %404 = load float, float* %x, align 4, !dbg !6466
  %cmp464 = fcmp olt float %403, %404, !dbg !6467
  br i1 %cmp464, label %if.then465, label %if.else493, !dbg !6468

if.then465:                                       ; preds = %if.then459
  %405 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6469
  %406 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6471
  call void @fill_metaball_octal_node(%struct.octal_node* %405, %struct.MetaElem* %406, i16 signext 4), !dbg !6472
  %407 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6473
  %bb466 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %407, i32 0, i32 2, !dbg !6475
  %408 = load %struct.BoundBox*, %struct.BoundBox** %bb466, align 8, !dbg !6475
  %vec467 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %408, i32 0, i32 0, !dbg !6476
  %arrayidx468 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec467, i64 0, i64 6, !dbg !6473
  %arrayidx469 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx468, i64 0, i64 0, !dbg !6473
  %409 = load float, float* %arrayidx469, align 4, !dbg !6473
  %410 = load float, float* %x, align 4, !dbg !6477
  %cmp470 = fcmp oge float %409, %410, !dbg !6478
  br i1 %cmp470, label %if.then471, label %if.end472, !dbg !6479

if.then471:                                       ; preds = %if.then465
  %411 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6480
  %412 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6482
  call void @fill_metaball_octal_node(%struct.octal_node* %411, %struct.MetaElem* %412, i16 signext 5), !dbg !6483
  br label %if.end472, !dbg !6484

if.end472:                                        ; preds = %if.then471, %if.then465
  %413 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6485
  %bb473 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %413, i32 0, i32 2, !dbg !6487
  %414 = load %struct.BoundBox*, %struct.BoundBox** %bb473, align 8, !dbg !6487
  %vec474 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %414, i32 0, i32 0, !dbg !6488
  %arrayidx475 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec474, i64 0, i64 6, !dbg !6485
  %arrayidx476 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx475, i64 0, i64 1, !dbg !6485
  %415 = load float, float* %arrayidx476, align 4, !dbg !6485
  %416 = load float, float* %y, align 4, !dbg !6489
  %cmp477 = fcmp oge float %415, %416, !dbg !6490
  br i1 %cmp477, label %if.then478, label %if.end479, !dbg !6491

if.then478:                                       ; preds = %if.end472
  %417 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6492
  %418 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6494
  call void @fill_metaball_octal_node(%struct.octal_node* %417, %struct.MetaElem* %418, i16 signext 7), !dbg !6495
  br label %if.end479, !dbg !6496

if.end479:                                        ; preds = %if.then478, %if.end472
  %419 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6497
  %bb480 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %419, i32 0, i32 2, !dbg !6499
  %420 = load %struct.BoundBox*, %struct.BoundBox** %bb480, align 8, !dbg !6499
  %vec481 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %420, i32 0, i32 0, !dbg !6500
  %arrayidx482 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec481, i64 0, i64 6, !dbg !6497
  %arrayidx483 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx482, i64 0, i64 0, !dbg !6497
  %421 = load float, float* %arrayidx483, align 4, !dbg !6497
  %422 = load float, float* %x, align 4, !dbg !6501
  %cmp484 = fcmp oge float %421, %422, !dbg !6502
  br i1 %cmp484, label %land.lhs.true485, label %if.end492, !dbg !6503

land.lhs.true485:                                 ; preds = %if.end479
  %423 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6504
  %bb486 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %423, i32 0, i32 2, !dbg !6505
  %424 = load %struct.BoundBox*, %struct.BoundBox** %bb486, align 8, !dbg !6505
  %vec487 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %424, i32 0, i32 0, !dbg !6506
  %arrayidx488 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec487, i64 0, i64 6, !dbg !6504
  %arrayidx489 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx488, i64 0, i64 1, !dbg !6504
  %425 = load float, float* %arrayidx489, align 4, !dbg !6504
  %426 = load float, float* %y, align 4, !dbg !6507
  %cmp490 = fcmp oge float %425, %426, !dbg !6508
  br i1 %cmp490, label %if.then491, label %if.end492, !dbg !6509

if.then491:                                       ; preds = %land.lhs.true485
  %427 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6510
  %428 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6512
  call void @fill_metaball_octal_node(%struct.octal_node* %427, %struct.MetaElem* %428, i16 signext 6), !dbg !6513
  br label %if.end492, !dbg !6514

if.end492:                                        ; preds = %if.then491, %land.lhs.true485, %if.end479
  br label %if.end501, !dbg !6515

if.else493:                                       ; preds = %if.then459
  %429 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6516
  %430 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6518
  call void @fill_metaball_octal_node(%struct.octal_node* %429, %struct.MetaElem* %430, i16 signext 5), !dbg !6519
  %431 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6520
  %bb494 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %431, i32 0, i32 2, !dbg !6522
  %432 = load %struct.BoundBox*, %struct.BoundBox** %bb494, align 8, !dbg !6522
  %vec495 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %432, i32 0, i32 0, !dbg !6523
  %arrayidx496 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec495, i64 0, i64 6, !dbg !6520
  %arrayidx497 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx496, i64 0, i64 1, !dbg !6520
  %433 = load float, float* %arrayidx497, align 4, !dbg !6520
  %434 = load float, float* %y, align 4, !dbg !6524
  %cmp498 = fcmp oge float %433, %434, !dbg !6525
  br i1 %cmp498, label %if.then499, label %if.end500, !dbg !6526

if.then499:                                       ; preds = %if.else493
  %435 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6527
  %436 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6529
  call void @fill_metaball_octal_node(%struct.octal_node* %435, %struct.MetaElem* %436, i16 signext 6), !dbg !6530
  br label %if.end500, !dbg !6531

if.end500:                                        ; preds = %if.then499, %if.else493
  br label %if.end501

if.end501:                                        ; preds = %if.end500, %if.end492
  br label %if.end517, !dbg !6532

if.else502:                                       ; preds = %if.else453
  %437 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6533
  %bb503 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %437, i32 0, i32 2, !dbg !6536
  %438 = load %struct.BoundBox*, %struct.BoundBox** %bb503, align 8, !dbg !6536
  %vec504 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %438, i32 0, i32 0, !dbg !6537
  %arrayidx505 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec504, i64 0, i64 0, !dbg !6533
  %arrayidx506 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx505, i64 0, i64 0, !dbg !6533
  %439 = load float, float* %arrayidx506, align 4, !dbg !6533
  %440 = load float, float* %x, align 4, !dbg !6538
  %cmp507 = fcmp olt float %439, %440, !dbg !6539
  br i1 %cmp507, label %if.then508, label %if.end516, !dbg !6540

if.then508:                                       ; preds = %if.else502
  %441 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6541
  %442 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6543
  call void @fill_metaball_octal_node(%struct.octal_node* %441, %struct.MetaElem* %442, i16 signext 7), !dbg !6544
  %443 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6545
  %bb509 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %443, i32 0, i32 2, !dbg !6547
  %444 = load %struct.BoundBox*, %struct.BoundBox** %bb509, align 8, !dbg !6547
  %vec510 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %444, i32 0, i32 0, !dbg !6548
  %arrayidx511 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec510, i64 0, i64 6, !dbg !6545
  %arrayidx512 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx511, i64 0, i64 0, !dbg !6545
  %445 = load float, float* %arrayidx512, align 4, !dbg !6545
  %446 = load float, float* %x, align 4, !dbg !6549
  %cmp513 = fcmp oge float %445, %446, !dbg !6550
  br i1 %cmp513, label %if.then514, label %if.end515, !dbg !6551

if.then514:                                       ; preds = %if.then508
  %447 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6552
  %448 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6554
  call void @fill_metaball_octal_node(%struct.octal_node* %447, %struct.MetaElem* %448, i16 signext 6), !dbg !6555
  br label %if.end515, !dbg !6556

if.end515:                                        ; preds = %if.then514, %if.then508
  br label %if.end516, !dbg !6557

if.end516:                                        ; preds = %if.end515, %if.else502
  br label %if.end517

if.end517:                                        ; preds = %if.end516, %if.end501
  %449 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6558
  %bb518 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %449, i32 0, i32 2, !dbg !6560
  %450 = load %struct.BoundBox*, %struct.BoundBox** %bb518, align 8, !dbg !6560
  %vec519 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %450, i32 0, i32 0, !dbg !6561
  %arrayidx520 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec519, i64 0, i64 0, !dbg !6558
  %arrayidx521 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx520, i64 0, i64 0, !dbg !6558
  %451 = load float, float* %arrayidx521, align 4, !dbg !6558
  %452 = load float, float* %x, align 4, !dbg !6562
  %cmp522 = fcmp oge float %451, %452, !dbg !6563
  br i1 %cmp522, label %land.lhs.true523, label %if.end530, !dbg !6564

land.lhs.true523:                                 ; preds = %if.end517
  %453 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6565
  %bb524 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %453, i32 0, i32 2, !dbg !6566
  %454 = load %struct.BoundBox*, %struct.BoundBox** %bb524, align 8, !dbg !6566
  %vec525 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %454, i32 0, i32 0, !dbg !6567
  %arrayidx526 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec525, i64 0, i64 0, !dbg !6565
  %arrayidx527 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx526, i64 0, i64 1, !dbg !6565
  %455 = load float, float* %arrayidx527, align 4, !dbg !6565
  %456 = load float, float* %y, align 4, !dbg !6568
  %cmp528 = fcmp oge float %455, %456, !dbg !6569
  br i1 %cmp528, label %if.then529, label %if.end530, !dbg !6570

if.then529:                                       ; preds = %land.lhs.true523
  %457 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6571
  %458 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !6573
  call void @fill_metaball_octal_node(%struct.octal_node* %457, %struct.MetaElem* %458, i16 signext 6), !dbg !6574
  br label %if.end530, !dbg !6575

if.end530:                                        ; preds = %if.then529, %land.lhs.true523, %if.end517
  br label %if.end531

if.end531:                                        ; preds = %if.end530, %if.end452
  %459 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !6576
  %next = getelementptr inbounds %struct.ml_pointer, %struct.ml_pointer* %459, i32 0, i32 0, !dbg !6577
  %460 = load %struct.ml_pointer*, %struct.ml_pointer** %next, align 8, !dbg !6577
  store %struct.ml_pointer* %460, %struct.ml_pointer** %ml_p, align 8, !dbg !6578
  br label %while.cond, !dbg !6208, !llvm.loop !6579

while.end:                                        ; preds = %while.cond
  %461 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6581
  %elems532 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %461, i32 0, i32 2, !dbg !6582
  call void @BLI_freelistN(%struct.ListBase* %elems532), !dbg !6583
  %462 = load i16, i16* %depth.addr, align 2, !dbg !6584
  %dec = add i16 %462, -1, !dbg !6584
  store i16 %dec, i16* %depth.addr, align 2, !dbg !6584
  %463 = load i16, i16* %depth.addr, align 2, !dbg !6585
  %conv = sext i16 %463 to i32, !dbg !6585
  %cmp533 = icmp sgt i32 %conv, 0, !dbg !6587
  br i1 %cmp533, label %if.then535, label %if.end554, !dbg !6588

if.then535:                                       ; preds = %while.end
  store i32 0, i32* %a, align 4, !dbg !6589
  br label %for.cond536, !dbg !6592

for.cond536:                                      ; preds = %for.inc551, %if.then535
  %464 = load i32, i32* %a, align 4, !dbg !6593
  %cmp537 = icmp slt i32 %464, 8, !dbg !6595
  br i1 %cmp537, label %for.body539, label %for.end553, !dbg !6596

for.body539:                                      ; preds = %for.cond536
  %465 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6597
  %nodes540 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %465, i32 0, i32 0, !dbg !6600
  %466 = load i32, i32* %a, align 4, !dbg !6601
  %idxprom541 = sext i32 %466 to i64, !dbg !6597
  %arrayidx542 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes540, i64 0, i64 %idxprom541, !dbg !6597
  %467 = load %struct.octal_node*, %struct.octal_node** %arrayidx542, align 8, !dbg !6597
  %count543 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %467, i32 0, i32 14, !dbg !6602
  %468 = load i32, i32* %count543, align 4, !dbg !6602
  %cmp544 = icmp sgt i32 %468, 0, !dbg !6603
  br i1 %cmp544, label %if.then546, label %if.end550, !dbg !6604

if.then546:                                       ; preds = %for.body539
  %469 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6605
  %nodes547 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %469, i32 0, i32 0, !dbg !6606
  %470 = load i32, i32* %a, align 4, !dbg !6607
  %idxprom548 = sext i32 %470 to i64, !dbg !6605
  %arrayidx549 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes547, i64 0, i64 %idxprom548, !dbg !6605
  %471 = load %struct.octal_node*, %struct.octal_node** %arrayidx549, align 8, !dbg !6605
  %472 = load float, float* %size_x.addr, align 4, !dbg !6608
  %473 = load float, float* %size_y.addr, align 4, !dbg !6609
  %474 = load float, float* %size_z.addr, align 4, !dbg !6610
  %475 = load i16, i16* %depth.addr, align 2, !dbg !6611
  call void @subdivide_metaball_octal_node(%struct.octal_node* %471, float %472, float %473, float %474, i16 signext %475), !dbg !6612
  br label %if.end550, !dbg !6612

if.end550:                                        ; preds = %if.then546, %for.body539
  br label %for.inc551, !dbg !6613

for.inc551:                                       ; preds = %if.end550
  %476 = load i32, i32* %a, align 4, !dbg !6614
  %inc552 = add nsw i32 %476, 1, !dbg !6614
  store i32 %inc552, i32* %a, align 4, !dbg !6614
  br label %for.cond536, !dbg !6615, !llvm.loop !6616

for.end553:                                       ; preds = %for.cond536
  br label %if.end554, !dbg !6618

if.end554:                                        ; preds = %for.end553, %while.end
  ret void, !dbg !6619
}

; Function Attrs: noinline nounwind uwtable
define internal void @fill_metaball_octal_node(%struct.octal_node* %node, %struct.MetaElem* %ml, i16 signext %i) #0 !dbg !6620 {
entry:
  %node.addr = alloca %struct.octal_node*, align 8
  %ml.addr = alloca %struct.MetaElem*, align 8
  %i.addr = alloca i16, align 2
  %ml_p = alloca %struct.ml_pointer*, align 8
  store %struct.octal_node* %node, %struct.octal_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.octal_node** %node.addr, metadata !6623, metadata !DIExpression()), !dbg !6624
  store %struct.MetaElem* %ml, %struct.MetaElem** %ml.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml.addr, metadata !6625, metadata !DIExpression()), !dbg !6626
  store i16 %i, i16* %i.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %i.addr, metadata !6627, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.declare(metadata %struct.ml_pointer** %ml_p, metadata !6629, metadata !DIExpression()), !dbg !6630
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6631
  %call = call i8* %0(i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)), !dbg !6631
  %1 = bitcast i8* %call to %struct.ml_pointer*, !dbg !6631
  store %struct.ml_pointer* %1, %struct.ml_pointer** %ml_p, align 8, !dbg !6632
  %2 = load %struct.MetaElem*, %struct.MetaElem** %ml.addr, align 8, !dbg !6633
  %3 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !6634
  %ml1 = getelementptr inbounds %struct.ml_pointer, %struct.ml_pointer* %3, i32 0, i32 2, !dbg !6635
  store %struct.MetaElem* %2, %struct.MetaElem** %ml1, align 8, !dbg !6636
  %4 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6637
  %nodes = getelementptr inbounds %struct.octal_node, %struct.octal_node* %4, i32 0, i32 0, !dbg !6638
  %5 = load i16, i16* %i.addr, align 2, !dbg !6639
  %idxprom = sext i16 %5 to i64, !dbg !6637
  %arrayidx = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes, i64 0, i64 %idxprom, !dbg !6637
  %6 = load %struct.octal_node*, %struct.octal_node** %arrayidx, align 8, !dbg !6637
  %elems = getelementptr inbounds %struct.octal_node, %struct.octal_node* %6, i32 0, i32 2, !dbg !6640
  %7 = load %struct.ml_pointer*, %struct.ml_pointer** %ml_p, align 8, !dbg !6641
  %8 = bitcast %struct.ml_pointer* %7 to i8*, !dbg !6641
  call void @BLI_addtail(%struct.ListBase* %elems, i8* %8), !dbg !6642
  %9 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6643
  %count = getelementptr inbounds %struct.octal_node, %struct.octal_node* %9, i32 0, i32 14, !dbg !6644
  %10 = load i32, i32* %count, align 4, !dbg !6645
  %inc = add nsw i32 %10, 1, !dbg !6645
  store i32 %inc, i32* %count, align 4, !dbg !6645
  %11 = load %struct.MetaElem*, %struct.MetaElem** %ml.addr, align 8, !dbg !6646
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %11, i32 0, i32 4, !dbg !6648
  %12 = load i16, i16* %flag, align 2, !dbg !6648
  %conv = sext i16 %12 to i32, !dbg !6646
  %and = and i32 %conv, 2, !dbg !6649
  %cmp = icmp eq i32 %and, 0, !dbg !6650
  br i1 %cmp, label %if.then, label %if.else, !dbg !6651

if.then:                                          ; preds = %entry
  %13 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6652
  %nodes3 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %13, i32 0, i32 0, !dbg !6654
  %14 = load i16, i16* %i.addr, align 2, !dbg !6655
  %idxprom4 = sext i16 %14 to i64, !dbg !6652
  %arrayidx5 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes3, i64 0, i64 %idxprom4, !dbg !6652
  %15 = load %struct.octal_node*, %struct.octal_node** %arrayidx5, align 8, !dbg !6652
  %pos = getelementptr inbounds %struct.octal_node, %struct.octal_node* %15, i32 0, i32 12, !dbg !6656
  %16 = load i32, i32* %pos, align 4, !dbg !6657
  %inc6 = add nsw i32 %16, 1, !dbg !6657
  store i32 %inc6, i32* %pos, align 4, !dbg !6657
  br label %if.end, !dbg !6658

if.else:                                          ; preds = %entry
  %17 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6659
  %nodes7 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %17, i32 0, i32 0, !dbg !6661
  %18 = load i16, i16* %i.addr, align 2, !dbg !6662
  %idxprom8 = sext i16 %18 to i64, !dbg !6659
  %arrayidx9 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes7, i64 0, i64 %idxprom8, !dbg !6659
  %19 = load %struct.octal_node*, %struct.octal_node** %arrayidx9, align 8, !dbg !6659
  %neg = getelementptr inbounds %struct.octal_node, %struct.octal_node* %19, i32 0, i32 13, !dbg !6663
  %20 = load i32, i32* %neg, align 8, !dbg !6664
  %inc10 = add nsw i32 %20, 1, !dbg !6664
  store i32 %inc10, i32* %neg, align 8, !dbg !6664
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6665
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %node, float %x, float %y, float %z, i16 signext %depth) #0 !dbg !6666 {
entry:
  %retval = alloca %struct.octal_node*, align 8
  %node.addr = alloca %struct.octal_node*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %z.addr = alloca float, align 4
  %depth.addr = alloca i16, align 2
  store %struct.octal_node* %node, %struct.octal_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.octal_node** %node.addr, metadata !6669, metadata !DIExpression()), !dbg !6670
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6671, metadata !DIExpression()), !dbg !6672
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !6673, metadata !DIExpression()), !dbg !6674
  store float %z, float* %z.addr, align 4
  call void @llvm.dbg.declare(metadata float* %z.addr, metadata !6675, metadata !DIExpression()), !dbg !6676
  store i16 %depth, i16* %depth.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %depth.addr, metadata !6677, metadata !DIExpression()), !dbg !6678
  %0 = load i16, i16* %depth.addr, align 2, !dbg !6679
  %tobool = icmp ne i16 %0, 0, !dbg !6679
  br i1 %tobool, label %if.end, label %if.then, !dbg !6681

if.then:                                          ; preds = %entry
  %1 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6682
  store %struct.octal_node* %1, %struct.octal_node** %retval, align 8, !dbg !6683
  br label %return, !dbg !6683

if.end:                                           ; preds = %entry
  %2 = load float, float* %z.addr, align 4, !dbg !6684
  %3 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6686
  %z1 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %3, i32 0, i32 11, !dbg !6687
  %4 = load float, float* %z1, align 8, !dbg !6687
  %cmp = fcmp olt float %2, %4, !dbg !6688
  br i1 %cmp, label %if.then2, label %if.else46, !dbg !6689

if.then2:                                         ; preds = %if.end
  %5 = load float, float* %y.addr, align 4, !dbg !6690
  %6 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6693
  %y3 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %6, i32 0, i32 10, !dbg !6694
  %7 = load float, float* %y3, align 4, !dbg !6694
  %cmp4 = fcmp olt float %5, %7, !dbg !6695
  br i1 %cmp4, label %if.then5, label %if.else23, !dbg !6696

if.then5:                                         ; preds = %if.then2
  %8 = load float, float* %x.addr, align 4, !dbg !6697
  %9 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6700
  %x6 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %9, i32 0, i32 9, !dbg !6701
  %10 = load float, float* %x6, align 8, !dbg !6701
  %cmp7 = fcmp olt float %8, %10, !dbg !6702
  br i1 %cmp7, label %if.then8, label %if.else13, !dbg !6703

if.then8:                                         ; preds = %if.then5
  %11 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6704
  %nodes = getelementptr inbounds %struct.octal_node, %struct.octal_node* %11, i32 0, i32 0, !dbg !6707
  %arrayidx = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes, i64 0, i64 0, !dbg !6704
  %12 = load %struct.octal_node*, %struct.octal_node** %arrayidx, align 8, !dbg !6704
  %tobool9 = icmp ne %struct.octal_node* %12, null, !dbg !6704
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !6708

if.then10:                                        ; preds = %if.then8
  %13 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6709
  %nodes11 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %13, i32 0, i32 0, !dbg !6710
  %arrayidx12 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes11, i64 0, i64 0, !dbg !6709
  %14 = load %struct.octal_node*, %struct.octal_node** %arrayidx12, align 8, !dbg !6709
  %15 = load float, float* %x.addr, align 4, !dbg !6711
  %16 = load float, float* %y.addr, align 4, !dbg !6712
  %17 = load float, float* %z.addr, align 4, !dbg !6713
  %18 = load i16, i16* %depth.addr, align 2, !dbg !6714
  %dec = add i16 %18, -1, !dbg !6714
  store i16 %dec, i16* %depth.addr, align 2, !dbg !6714
  %call = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %14, float %15, float %16, float %17, i16 signext %18), !dbg !6715
  store %struct.octal_node* %call, %struct.octal_node** %retval, align 8, !dbg !6716
  br label %return, !dbg !6716

if.else:                                          ; preds = %if.then8
  %19 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6717
  store %struct.octal_node* %19, %struct.octal_node** %retval, align 8, !dbg !6718
  br label %return, !dbg !6718

if.else13:                                        ; preds = %if.then5
  %20 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6719
  %nodes14 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %20, i32 0, i32 0, !dbg !6722
  %arrayidx15 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes14, i64 0, i64 1, !dbg !6719
  %21 = load %struct.octal_node*, %struct.octal_node** %arrayidx15, align 8, !dbg !6719
  %tobool16 = icmp ne %struct.octal_node* %21, null, !dbg !6719
  br i1 %tobool16, label %if.then17, label %if.else22, !dbg !6723

if.then17:                                        ; preds = %if.else13
  %22 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6724
  %nodes18 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %22, i32 0, i32 0, !dbg !6725
  %arrayidx19 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes18, i64 0, i64 1, !dbg !6724
  %23 = load %struct.octal_node*, %struct.octal_node** %arrayidx19, align 8, !dbg !6724
  %24 = load float, float* %x.addr, align 4, !dbg !6726
  %25 = load float, float* %y.addr, align 4, !dbg !6727
  %26 = load float, float* %z.addr, align 4, !dbg !6728
  %27 = load i16, i16* %depth.addr, align 2, !dbg !6729
  %dec20 = add i16 %27, -1, !dbg !6729
  store i16 %dec20, i16* %depth.addr, align 2, !dbg !6729
  %call21 = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %23, float %24, float %25, float %26, i16 signext %27), !dbg !6730
  store %struct.octal_node* %call21, %struct.octal_node** %retval, align 8, !dbg !6731
  br label %return, !dbg !6731

if.else22:                                        ; preds = %if.else13
  %28 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6732
  store %struct.octal_node* %28, %struct.octal_node** %retval, align 8, !dbg !6733
  br label %return, !dbg !6733

if.else23:                                        ; preds = %if.then2
  %29 = load float, float* %x.addr, align 4, !dbg !6734
  %30 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6737
  %x24 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %30, i32 0, i32 9, !dbg !6738
  %31 = load float, float* %x24, align 8, !dbg !6738
  %cmp25 = fcmp olt float %29, %31, !dbg !6739
  br i1 %cmp25, label %if.then26, label %if.else36, !dbg !6740

if.then26:                                        ; preds = %if.else23
  %32 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6741
  %nodes27 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %32, i32 0, i32 0, !dbg !6744
  %arrayidx28 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes27, i64 0, i64 3, !dbg !6741
  %33 = load %struct.octal_node*, %struct.octal_node** %arrayidx28, align 8, !dbg !6741
  %tobool29 = icmp ne %struct.octal_node* %33, null, !dbg !6741
  br i1 %tobool29, label %if.then30, label %if.else35, !dbg !6745

if.then30:                                        ; preds = %if.then26
  %34 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6746
  %nodes31 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %34, i32 0, i32 0, !dbg !6747
  %arrayidx32 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes31, i64 0, i64 3, !dbg !6746
  %35 = load %struct.octal_node*, %struct.octal_node** %arrayidx32, align 8, !dbg !6746
  %36 = load float, float* %x.addr, align 4, !dbg !6748
  %37 = load float, float* %y.addr, align 4, !dbg !6749
  %38 = load float, float* %z.addr, align 4, !dbg !6750
  %39 = load i16, i16* %depth.addr, align 2, !dbg !6751
  %dec33 = add i16 %39, -1, !dbg !6751
  store i16 %dec33, i16* %depth.addr, align 2, !dbg !6751
  %call34 = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %35, float %36, float %37, float %38, i16 signext %39), !dbg !6752
  store %struct.octal_node* %call34, %struct.octal_node** %retval, align 8, !dbg !6753
  br label %return, !dbg !6753

if.else35:                                        ; preds = %if.then26
  %40 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6754
  store %struct.octal_node* %40, %struct.octal_node** %retval, align 8, !dbg !6755
  br label %return, !dbg !6755

if.else36:                                        ; preds = %if.else23
  %41 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6756
  %nodes37 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %41, i32 0, i32 0, !dbg !6759
  %arrayidx38 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes37, i64 0, i64 2, !dbg !6756
  %42 = load %struct.octal_node*, %struct.octal_node** %arrayidx38, align 8, !dbg !6756
  %tobool39 = icmp ne %struct.octal_node* %42, null, !dbg !6756
  br i1 %tobool39, label %if.then40, label %if.else45, !dbg !6760

if.then40:                                        ; preds = %if.else36
  %43 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6761
  %nodes41 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %43, i32 0, i32 0, !dbg !6762
  %arrayidx42 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes41, i64 0, i64 2, !dbg !6761
  %44 = load %struct.octal_node*, %struct.octal_node** %arrayidx42, align 8, !dbg !6761
  %45 = load float, float* %x.addr, align 4, !dbg !6763
  %46 = load float, float* %y.addr, align 4, !dbg !6764
  %47 = load float, float* %z.addr, align 4, !dbg !6765
  %48 = load i16, i16* %depth.addr, align 2, !dbg !6766
  %dec43 = add i16 %48, -1, !dbg !6766
  store i16 %dec43, i16* %depth.addr, align 2, !dbg !6766
  %call44 = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %44, float %45, float %46, float %47, i16 signext %48), !dbg !6767
  store %struct.octal_node* %call44, %struct.octal_node** %retval, align 8, !dbg !6768
  br label %return, !dbg !6768

if.else45:                                        ; preds = %if.else36
  %49 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6769
  store %struct.octal_node* %49, %struct.octal_node** %retval, align 8, !dbg !6770
  br label %return, !dbg !6770

if.else46:                                        ; preds = %if.end
  %50 = load float, float* %y.addr, align 4, !dbg !6771
  %51 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6774
  %y47 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %51, i32 0, i32 10, !dbg !6775
  %52 = load float, float* %y47, align 4, !dbg !6775
  %cmp48 = fcmp olt float %50, %52, !dbg !6776
  br i1 %cmp48, label %if.then49, label %if.else72, !dbg !6777

if.then49:                                        ; preds = %if.else46
  %53 = load float, float* %x.addr, align 4, !dbg !6778
  %54 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6781
  %x50 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %54, i32 0, i32 9, !dbg !6782
  %55 = load float, float* %x50, align 8, !dbg !6782
  %cmp51 = fcmp olt float %53, %55, !dbg !6783
  br i1 %cmp51, label %if.then52, label %if.else62, !dbg !6784

if.then52:                                        ; preds = %if.then49
  %56 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6785
  %nodes53 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %56, i32 0, i32 0, !dbg !6788
  %arrayidx54 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes53, i64 0, i64 4, !dbg !6785
  %57 = load %struct.octal_node*, %struct.octal_node** %arrayidx54, align 8, !dbg !6785
  %tobool55 = icmp ne %struct.octal_node* %57, null, !dbg !6785
  br i1 %tobool55, label %if.then56, label %if.else61, !dbg !6789

if.then56:                                        ; preds = %if.then52
  %58 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6790
  %nodes57 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %58, i32 0, i32 0, !dbg !6791
  %arrayidx58 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes57, i64 0, i64 4, !dbg !6790
  %59 = load %struct.octal_node*, %struct.octal_node** %arrayidx58, align 8, !dbg !6790
  %60 = load float, float* %x.addr, align 4, !dbg !6792
  %61 = load float, float* %y.addr, align 4, !dbg !6793
  %62 = load float, float* %z.addr, align 4, !dbg !6794
  %63 = load i16, i16* %depth.addr, align 2, !dbg !6795
  %dec59 = add i16 %63, -1, !dbg !6795
  store i16 %dec59, i16* %depth.addr, align 2, !dbg !6795
  %call60 = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %59, float %60, float %61, float %62, i16 signext %63), !dbg !6796
  store %struct.octal_node* %call60, %struct.octal_node** %retval, align 8, !dbg !6797
  br label %return, !dbg !6797

if.else61:                                        ; preds = %if.then52
  %64 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6798
  store %struct.octal_node* %64, %struct.octal_node** %retval, align 8, !dbg !6799
  br label %return, !dbg !6799

if.else62:                                        ; preds = %if.then49
  %65 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6800
  %nodes63 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %65, i32 0, i32 0, !dbg !6803
  %arrayidx64 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes63, i64 0, i64 5, !dbg !6800
  %66 = load %struct.octal_node*, %struct.octal_node** %arrayidx64, align 8, !dbg !6800
  %tobool65 = icmp ne %struct.octal_node* %66, null, !dbg !6800
  br i1 %tobool65, label %if.then66, label %if.else71, !dbg !6804

if.then66:                                        ; preds = %if.else62
  %67 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6805
  %nodes67 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %67, i32 0, i32 0, !dbg !6806
  %arrayidx68 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes67, i64 0, i64 5, !dbg !6805
  %68 = load %struct.octal_node*, %struct.octal_node** %arrayidx68, align 8, !dbg !6805
  %69 = load float, float* %x.addr, align 4, !dbg !6807
  %70 = load float, float* %y.addr, align 4, !dbg !6808
  %71 = load float, float* %z.addr, align 4, !dbg !6809
  %72 = load i16, i16* %depth.addr, align 2, !dbg !6810
  %dec69 = add i16 %72, -1, !dbg !6810
  store i16 %dec69, i16* %depth.addr, align 2, !dbg !6810
  %call70 = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %68, float %69, float %70, float %71, i16 signext %72), !dbg !6811
  store %struct.octal_node* %call70, %struct.octal_node** %retval, align 8, !dbg !6812
  br label %return, !dbg !6812

if.else71:                                        ; preds = %if.else62
  %73 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6813
  store %struct.octal_node* %73, %struct.octal_node** %retval, align 8, !dbg !6814
  br label %return, !dbg !6814

if.else72:                                        ; preds = %if.else46
  %74 = load float, float* %x.addr, align 4, !dbg !6815
  %75 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6818
  %x73 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %75, i32 0, i32 9, !dbg !6819
  %76 = load float, float* %x73, align 8, !dbg !6819
  %cmp74 = fcmp olt float %74, %76, !dbg !6820
  br i1 %cmp74, label %if.then75, label %if.else85, !dbg !6821

if.then75:                                        ; preds = %if.else72
  %77 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6822
  %nodes76 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %77, i32 0, i32 0, !dbg !6825
  %arrayidx77 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes76, i64 0, i64 7, !dbg !6822
  %78 = load %struct.octal_node*, %struct.octal_node** %arrayidx77, align 8, !dbg !6822
  %tobool78 = icmp ne %struct.octal_node* %78, null, !dbg !6822
  br i1 %tobool78, label %if.then79, label %if.else84, !dbg !6826

if.then79:                                        ; preds = %if.then75
  %79 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6827
  %nodes80 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %79, i32 0, i32 0, !dbg !6828
  %arrayidx81 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes80, i64 0, i64 7, !dbg !6827
  %80 = load %struct.octal_node*, %struct.octal_node** %arrayidx81, align 8, !dbg !6827
  %81 = load float, float* %x.addr, align 4, !dbg !6829
  %82 = load float, float* %y.addr, align 4, !dbg !6830
  %83 = load float, float* %z.addr, align 4, !dbg !6831
  %84 = load i16, i16* %depth.addr, align 2, !dbg !6832
  %dec82 = add i16 %84, -1, !dbg !6832
  store i16 %dec82, i16* %depth.addr, align 2, !dbg !6832
  %call83 = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %80, float %81, float %82, float %83, i16 signext %84), !dbg !6833
  store %struct.octal_node* %call83, %struct.octal_node** %retval, align 8, !dbg !6834
  br label %return, !dbg !6834

if.else84:                                        ; preds = %if.then75
  %85 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6835
  store %struct.octal_node* %85, %struct.octal_node** %retval, align 8, !dbg !6836
  br label %return, !dbg !6836

if.else85:                                        ; preds = %if.else72
  %86 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6837
  %nodes86 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %86, i32 0, i32 0, !dbg !6840
  %arrayidx87 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes86, i64 0, i64 6, !dbg !6837
  %87 = load %struct.octal_node*, %struct.octal_node** %arrayidx87, align 8, !dbg !6837
  %tobool88 = icmp ne %struct.octal_node* %87, null, !dbg !6837
  br i1 %tobool88, label %if.then89, label %if.else94, !dbg !6841

if.then89:                                        ; preds = %if.else85
  %88 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6842
  %nodes90 = getelementptr inbounds %struct.octal_node, %struct.octal_node* %88, i32 0, i32 0, !dbg !6843
  %arrayidx91 = getelementptr inbounds [8 x %struct.octal_node*], [8 x %struct.octal_node*]* %nodes90, i64 0, i64 6, !dbg !6842
  %89 = load %struct.octal_node*, %struct.octal_node** %arrayidx91, align 8, !dbg !6842
  %90 = load float, float* %x.addr, align 4, !dbg !6844
  %91 = load float, float* %y.addr, align 4, !dbg !6845
  %92 = load float, float* %z.addr, align 4, !dbg !6846
  %93 = load i16, i16* %depth.addr, align 2, !dbg !6847
  %dec92 = add i16 %93, -1, !dbg !6847
  store i16 %dec92, i16* %depth.addr, align 2, !dbg !6847
  %call93 = call %struct.octal_node* @find_metaball_octal_node(%struct.octal_node* %89, float %90, float %91, float %92, i16 signext %93), !dbg !6848
  store %struct.octal_node* %call93, %struct.octal_node** %retval, align 8, !dbg !6849
  br label %return, !dbg !6849

if.else94:                                        ; preds = %if.else85
  %94 = load %struct.octal_node*, %struct.octal_node** %node.addr, align 8, !dbg !6850
  store %struct.octal_node* %94, %struct.octal_node** %retval, align 8, !dbg !6851
  br label %return, !dbg !6851

return:                                           ; preds = %if.else94, %if.then89, %if.else84, %if.then79, %if.else71, %if.then66, %if.else61, %if.then56, %if.else45, %if.then40, %if.else35, %if.then30, %if.else22, %if.then17, %if.else, %if.then10, %if.then
  %95 = load %struct.octal_node*, %struct.octal_node** %retval, align 8, !dbg !6852
  ret %struct.octal_node* %95, !dbg !6852
}

; Function Attrs: noinline nounwind uwtable
define internal void @makecubetable() #0 !dbg !1716 {
entry:
  %i = alloca i32, align 4
  %e = alloca i32, align 4
  %c = alloca i32, align 4
  %done = alloca [12 x i32], align 16
  %pos = alloca [8 x i32], align 16
  %ints = alloca %struct.intlist*, align 8
  %lists = alloca %struct.intlists*, align 8
  %start = alloca i32, align 4
  %edge = alloca i32, align 4
  %face = alloca i32, align 4
  %tmp = alloca %struct.intlist*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6853, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.declare(metadata i32* %e, metadata !6855, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6857, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.declare(metadata [12 x i32]* %done, metadata !6859, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.declare(metadata [8 x i32]* %pos, metadata !6861, metadata !DIExpression()), !dbg !6862
  %0 = load i8, i8* @makecubetable.is_done, align 1, !dbg !6863
  %tobool = icmp ne i8 %0, 0, !dbg !6863
  br i1 %tobool, label %if.then, label %if.end, !dbg !6865

if.then:                                          ; preds = %entry
  br label %for.end68, !dbg !6866

if.end:                                           ; preds = %entry
  store i8 1, i8* @makecubetable.is_done, align 1, !dbg !6867
  store i32 0, i32* %i, align 4, !dbg !6868
  br label %for.cond, !dbg !6870

for.cond:                                         ; preds = %for.inc66, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !6871
  %cmp = icmp slt i32 %1, 256, !dbg !6873
  br i1 %cmp, label %for.body, label %for.end68, !dbg !6874

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %e, align 4, !dbg !6875
  br label %for.cond1, !dbg !6878

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %e, align 4, !dbg !6879
  %cmp2 = icmp slt i32 %2, 12, !dbg !6881
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6882

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %e, align 4, !dbg !6883
  %idxprom = sext i32 %3 to i64, !dbg !6884
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* %done, i64 0, i64 %idxprom, !dbg !6884
  store i32 0, i32* %arrayidx, align 4, !dbg !6885
  br label %for.inc, !dbg !6884

for.inc:                                          ; preds = %for.body3
  %4 = load i32, i32* %e, align 4, !dbg !6886
  %inc = add nsw i32 %4, 1, !dbg !6886
  store i32 %inc, i32* %e, align 4, !dbg !6886
  br label %for.cond1, !dbg !6887, !llvm.loop !6888

for.end:                                          ; preds = %for.cond1
  store i32 0, i32* %c, align 4, !dbg !6890
  br label %for.cond4, !dbg !6892

for.cond4:                                        ; preds = %for.inc9, %for.end
  %5 = load i32, i32* %c, align 4, !dbg !6893
  %cmp5 = icmp slt i32 %5, 8, !dbg !6895
  br i1 %cmp5, label %for.body6, label %for.end11, !dbg !6896

for.body6:                                        ; preds = %for.cond4
  %6 = load i32, i32* %i, align 4, !dbg !6897
  %7 = load i32, i32* %c, align 4, !dbg !6897
  %shr = ashr i32 %6, %7, !dbg !6897
  %and = and i32 %shr, 1, !dbg !6897
  %8 = load i32, i32* %c, align 4, !dbg !6898
  %idxprom7 = sext i32 %8 to i64, !dbg !6899
  %arrayidx8 = getelementptr inbounds [8 x i32], [8 x i32]* %pos, i64 0, i64 %idxprom7, !dbg !6899
  store i32 %and, i32* %arrayidx8, align 4, !dbg !6900
  br label %for.inc9, !dbg !6899

for.inc9:                                         ; preds = %for.body6
  %9 = load i32, i32* %c, align 4, !dbg !6901
  %inc10 = add nsw i32 %9, 1, !dbg !6901
  store i32 %inc10, i32* %c, align 4, !dbg !6901
  br label %for.cond4, !dbg !6902, !llvm.loop !6903

for.end11:                                        ; preds = %for.cond4
  store i32 0, i32* %e, align 4, !dbg !6905
  br label %for.cond12, !dbg !6907

for.cond12:                                       ; preds = %for.inc63, %for.end11
  %10 = load i32, i32* %e, align 4, !dbg !6908
  %cmp13 = icmp slt i32 %10, 12, !dbg !6910
  br i1 %cmp13, label %for.body14, label %for.end65, !dbg !6911

for.body14:                                       ; preds = %for.cond12
  %11 = load i32, i32* %e, align 4, !dbg !6912
  %idxprom15 = sext i32 %11 to i64, !dbg !6914
  %arrayidx16 = getelementptr inbounds [12 x i32], [12 x i32]* %done, i64 0, i64 %idxprom15, !dbg !6914
  %12 = load i32, i32* %arrayidx16, align 4, !dbg !6914
  %tobool17 = icmp ne i32 %12, 0, !dbg !6914
  br i1 %tobool17, label %if.end62, label %land.lhs.true, !dbg !6915

land.lhs.true:                                    ; preds = %for.body14
  %13 = load i32, i32* %e, align 4, !dbg !6916
  %idxprom18 = sext i32 %13 to i64, !dbg !6917
  %arrayidx19 = getelementptr inbounds [12 x i32], [12 x i32]* @corner1, i64 0, i64 %idxprom18, !dbg !6917
  %14 = load i32, i32* %arrayidx19, align 4, !dbg !6917
  %idxprom20 = sext i32 %14 to i64, !dbg !6918
  %arrayidx21 = getelementptr inbounds [8 x i32], [8 x i32]* %pos, i64 0, i64 %idxprom20, !dbg !6918
  %15 = load i32, i32* %arrayidx21, align 4, !dbg !6918
  %16 = load i32, i32* %e, align 4, !dbg !6919
  %idxprom22 = sext i32 %16 to i64, !dbg !6920
  %arrayidx23 = getelementptr inbounds [12 x i32], [12 x i32]* @corner2, i64 0, i64 %idxprom22, !dbg !6920
  %17 = load i32, i32* %arrayidx23, align 4, !dbg !6920
  %idxprom24 = sext i32 %17 to i64, !dbg !6921
  %arrayidx25 = getelementptr inbounds [8 x i32], [8 x i32]* %pos, i64 0, i64 %idxprom24, !dbg !6921
  %18 = load i32, i32* %arrayidx25, align 4, !dbg !6921
  %cmp26 = icmp ne i32 %15, %18, !dbg !6922
  br i1 %cmp26, label %if.then27, label %if.end62, !dbg !6923

if.then27:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.intlist** %ints, metadata !6924, metadata !DIExpression()), !dbg !6926
  store %struct.intlist* null, %struct.intlist** %ints, align 8, !dbg !6926
  call void @llvm.dbg.declare(metadata %struct.intlists** %lists, metadata !6927, metadata !DIExpression()), !dbg !6928
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6929
  %call = call i8* %19(i64 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0)), !dbg !6929
  %20 = bitcast i8* %call to %struct.intlists*, !dbg !6930
  store %struct.intlists* %20, %struct.intlists** %lists, align 8, !dbg !6928
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6931, metadata !DIExpression()), !dbg !6932
  %21 = load i32, i32* %e, align 4, !dbg !6933
  store i32 %21, i32* %start, align 4, !dbg !6932
  call void @llvm.dbg.declare(metadata i32* %edge, metadata !6934, metadata !DIExpression()), !dbg !6935
  %22 = load i32, i32* %e, align 4, !dbg !6936
  store i32 %22, i32* %edge, align 4, !dbg !6935
  call void @llvm.dbg.declare(metadata i32* %face, metadata !6937, metadata !DIExpression()), !dbg !6938
  %23 = load i32, i32* %e, align 4, !dbg !6939
  %idxprom28 = sext i32 %23 to i64, !dbg !6940
  %arrayidx29 = getelementptr inbounds [12 x i32], [12 x i32]* @corner1, i64 0, i64 %idxprom28, !dbg !6940
  %24 = load i32, i32* %arrayidx29, align 4, !dbg !6940
  %idxprom30 = sext i32 %24 to i64, !dbg !6941
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* %pos, i64 0, i64 %idxprom30, !dbg !6941
  %25 = load i32, i32* %arrayidx31, align 4, !dbg !6941
  %tobool32 = icmp ne i32 %25, 0, !dbg !6941
  br i1 %tobool32, label %cond.true, label %cond.false, !dbg !6941

cond.true:                                        ; preds = %if.then27
  %26 = load i32, i32* %e, align 4, !dbg !6942
  %idxprom33 = sext i32 %26 to i64, !dbg !6943
  %arrayidx34 = getelementptr inbounds [12 x i32], [12 x i32]* @rightface, i64 0, i64 %idxprom33, !dbg !6943
  %27 = load i32, i32* %arrayidx34, align 4, !dbg !6943
  br label %cond.end, !dbg !6941

cond.false:                                       ; preds = %if.then27
  %28 = load i32, i32* %e, align 4, !dbg !6944
  %idxprom35 = sext i32 %28 to i64, !dbg !6945
  %arrayidx36 = getelementptr inbounds [12 x i32], [12 x i32]* @leftface, i64 0, i64 %idxprom35, !dbg !6945
  %29 = load i32, i32* %arrayidx36, align 4, !dbg !6945
  br label %cond.end, !dbg !6941

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %27, %cond.true ], [ %29, %cond.false ], !dbg !6941
  store i32 %cond, i32* %face, align 4, !dbg !6938
  br label %while.body, !dbg !6946

while.body:                                       ; preds = %cond.end, %if.end56
  %30 = load i32, i32* %edge, align 4, !dbg !6947
  %31 = load i32, i32* %face, align 4, !dbg !6949
  %call37 = call i32 @nextcwedge(i32 %30, i32 %31), !dbg !6950
  store i32 %call37, i32* %edge, align 4, !dbg !6951
  %32 = load i32, i32* %edge, align 4, !dbg !6952
  %idxprom38 = sext i32 %32 to i64, !dbg !6953
  %arrayidx39 = getelementptr inbounds [12 x i32], [12 x i32]* %done, i64 0, i64 %idxprom38, !dbg !6953
  store i32 1, i32* %arrayidx39, align 4, !dbg !6954
  %33 = load i32, i32* %edge, align 4, !dbg !6955
  %idxprom40 = sext i32 %33 to i64, !dbg !6957
  %arrayidx41 = getelementptr inbounds [12 x i32], [12 x i32]* @corner1, i64 0, i64 %idxprom40, !dbg !6957
  %34 = load i32, i32* %arrayidx41, align 4, !dbg !6957
  %idxprom42 = sext i32 %34 to i64, !dbg !6958
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %pos, i64 0, i64 %idxprom42, !dbg !6958
  %35 = load i32, i32* %arrayidx43, align 4, !dbg !6958
  %36 = load i32, i32* %edge, align 4, !dbg !6959
  %idxprom44 = sext i32 %36 to i64, !dbg !6960
  %arrayidx45 = getelementptr inbounds [12 x i32], [12 x i32]* @corner2, i64 0, i64 %idxprom44, !dbg !6960
  %37 = load i32, i32* %arrayidx45, align 4, !dbg !6960
  %idxprom46 = sext i32 %37 to i64, !dbg !6961
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %pos, i64 0, i64 %idxprom46, !dbg !6961
  %38 = load i32, i32* %arrayidx47, align 4, !dbg !6961
  %cmp48 = icmp ne i32 %35, %38, !dbg !6962
  br i1 %cmp48, label %if.then49, label %if.end56, !dbg !6963

if.then49:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.intlist** %tmp, metadata !6964, metadata !DIExpression()), !dbg !6966
  %39 = load %struct.intlist*, %struct.intlist** %ints, align 8, !dbg !6967
  store %struct.intlist* %39, %struct.intlist** %tmp, align 8, !dbg !6966
  %40 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6968
  %call50 = call i8* %40(i64 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0)), !dbg !6968
  %41 = bitcast i8* %call50 to %struct.intlist*, !dbg !6969
  store %struct.intlist* %41, %struct.intlist** %ints, align 8, !dbg !6970
  %42 = load i32, i32* %edge, align 4, !dbg !6971
  %43 = load %struct.intlist*, %struct.intlist** %ints, align 8, !dbg !6972
  %i51 = getelementptr inbounds %struct.intlist, %struct.intlist* %43, i32 0, i32 0, !dbg !6973
  store i32 %42, i32* %i51, align 8, !dbg !6974
  %44 = load %struct.intlist*, %struct.intlist** %tmp, align 8, !dbg !6975
  %45 = load %struct.intlist*, %struct.intlist** %ints, align 8, !dbg !6976
  %next = getelementptr inbounds %struct.intlist, %struct.intlist* %45, i32 0, i32 1, !dbg !6977
  store %struct.intlist* %44, %struct.intlist** %next, align 8, !dbg !6978
  %46 = load i32, i32* %edge, align 4, !dbg !6979
  %47 = load i32, i32* %start, align 4, !dbg !6981
  %cmp52 = icmp eq i32 %46, %47, !dbg !6982
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !6983

if.then53:                                        ; preds = %if.then49
  br label %while.end, !dbg !6984

if.end54:                                         ; preds = %if.then49
  %48 = load i32, i32* %edge, align 4, !dbg !6985
  %49 = load i32, i32* %face, align 4, !dbg !6986
  %call55 = call i32 @otherface(i32 %48, i32 %49), !dbg !6987
  store i32 %call55, i32* %face, align 4, !dbg !6988
  br label %if.end56, !dbg !6989

if.end56:                                         ; preds = %if.end54, %while.body
  br label %while.body, !dbg !6946, !llvm.loop !6990

while.end:                                        ; preds = %if.then53
  %50 = load %struct.intlist*, %struct.intlist** %ints, align 8, !dbg !6992
  %51 = load %struct.intlists*, %struct.intlists** %lists, align 8, !dbg !6993
  %list = getelementptr inbounds %struct.intlists, %struct.intlists* %51, i32 0, i32 0, !dbg !6994
  store %struct.intlist* %50, %struct.intlist** %list, align 8, !dbg !6995
  %52 = load i32, i32* %i, align 4, !dbg !6996
  %idxprom57 = sext i32 %52 to i64, !dbg !6997
  %arrayidx58 = getelementptr inbounds [256 x %struct.intlists*], [256 x %struct.intlists*]* @cubetable, i64 0, i64 %idxprom57, !dbg !6997
  %53 = load %struct.intlists*, %struct.intlists** %arrayidx58, align 8, !dbg !6997
  %54 = load %struct.intlists*, %struct.intlists** %lists, align 8, !dbg !6998
  %next59 = getelementptr inbounds %struct.intlists, %struct.intlists* %54, i32 0, i32 1, !dbg !6999
  store %struct.intlists* %53, %struct.intlists** %next59, align 8, !dbg !7000
  %55 = load %struct.intlists*, %struct.intlists** %lists, align 8, !dbg !7001
  %56 = load i32, i32* %i, align 4, !dbg !7002
  %idxprom60 = sext i32 %56 to i64, !dbg !7003
  %arrayidx61 = getelementptr inbounds [256 x %struct.intlists*], [256 x %struct.intlists*]* @cubetable, i64 0, i64 %idxprom60, !dbg !7003
  store %struct.intlists* %55, %struct.intlists** %arrayidx61, align 8, !dbg !7004
  br label %if.end62, !dbg !7005

if.end62:                                         ; preds = %while.end, %land.lhs.true, %for.body14
  br label %for.inc63, !dbg !7006

for.inc63:                                        ; preds = %if.end62
  %57 = load i32, i32* %e, align 4, !dbg !7007
  %inc64 = add nsw i32 %57, 1, !dbg !7007
  store i32 %inc64, i32* %e, align 4, !dbg !7007
  br label %for.cond12, !dbg !7008, !llvm.loop !7009

for.end65:                                        ; preds = %for.cond12
  br label %for.inc66, !dbg !7011

for.inc66:                                        ; preds = %for.end65
  %58 = load i32, i32* %i, align 4, !dbg !7012
  %inc67 = add nsw i32 %58, 1, !dbg !7012
  store i32 %inc67, i32* %i, align 4, !dbg !7012
  br label %for.cond, !dbg !7013, !llvm.loop !7014

for.end68:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !7016
}

; Function Attrs: noinline nounwind uwtable
define internal void @find_first_points(%struct.process* %process, %struct.MetaBall* %mb, i32 %a) #0 !dbg !7017 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %mb.addr = alloca %struct.MetaBall*, align 8
  %a.addr = alloca i32, align 4
  %ml = alloca %struct.MetaElem*, align 8
  %f = alloca float, align 4
  %IN = alloca [3 x float], align 4
  %OUT = alloca [3 x float], align 4
  %in = alloca [3 x float], align 4
  %out = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %c_i = alloca i32, align 4
  %c_j = alloca i32, align 4
  %c_k = alloca i32, align 4
  %index = alloca [3 x i32], align 4
  %in_v = alloca float, align 4
  %workp = alloca [3 x float], align 4
  %dvec = alloca [3 x float], align 4
  %tmp_v = alloca float, align 4
  %workp_v = alloca float, align 4
  %max_len_sq = alloca float, align 4
  %nx = alloca float, align 4
  %ny = alloca float, align 4
  %nz = alloca float, align 4
  %max_dim = alloca float, align 4
  %len_sq = alloca float, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !7022, metadata !DIExpression()), !dbg !7023
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7024, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.declare(metadata %struct.MetaElem** %ml, metadata !7026, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.declare(metadata float* %f, metadata !7028, metadata !DIExpression()), !dbg !7029
  %0 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7030
  %mainb = getelementptr inbounds %struct.process, %struct.process* %0, i32 0, i32 2, !dbg !7031
  %1 = load %struct.MetaElem**, %struct.MetaElem*** %mainb, align 8, !dbg !7031
  %2 = load i32, i32* %a.addr, align 4, !dbg !7032
  %idxprom = sext i32 %2 to i64, !dbg !7030
  %arrayidx = getelementptr inbounds %struct.MetaElem*, %struct.MetaElem** %1, i64 %idxprom, !dbg !7030
  %3 = load %struct.MetaElem*, %struct.MetaElem** %arrayidx, align 8, !dbg !7030
  store %struct.MetaElem* %3, %struct.MetaElem** %ml, align 8, !dbg !7033
  %4 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !7034
  %thresh = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %4, i32 0, i32 17, !dbg !7035
  %5 = load float, float* %thresh, align 4, !dbg !7035
  %6 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7036
  %s = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %6, i32 0, i32 16, !dbg !7037
  %7 = load float, float* %s, align 8, !dbg !7037
  %div = fdiv float %5, %7, !dbg !7038
  %sub = fsub float 1.000000e+00, %div, !dbg !7039
  store float %sub, float* %f, align 4, !dbg !7040
  %8 = load float, float* %f, align 4, !dbg !7041
  %cmp = fcmp ogt float %8, 0.000000e+00, !dbg !7043
  br i1 %cmp, label %if.then, label %if.end168, !dbg !7044

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %IN, metadata !7045, metadata !DIExpression()), !dbg !7047
  %9 = bitcast [3 x float]* %IN to i8*, !dbg !7047
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 12, i1 false), !dbg !7047
  call void @llvm.dbg.declare(metadata [3 x float]* %OUT, metadata !7048, metadata !DIExpression()), !dbg !7049
  %10 = bitcast [3 x float]* %OUT to i8*, !dbg !7049
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 12, i1 false), !dbg !7049
  call void @llvm.dbg.declare(metadata [3 x float]* %in, metadata !7050, metadata !DIExpression()), !dbg !7051
  %11 = bitcast [3 x float]* %in to i8*, !dbg !7051
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 12, i1 false), !dbg !7051
  call void @llvm.dbg.declare(metadata [3 x float]* %out, metadata !7052, metadata !DIExpression()), !dbg !7053
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7054, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7056, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7058, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.declare(metadata i32* %c_i, metadata !7060, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.declare(metadata i32* %c_j, metadata !7062, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.declare(metadata i32* %c_k, metadata !7064, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.declare(metadata [3 x i32]* %index, metadata !7066, metadata !DIExpression()), !dbg !7067
  %12 = bitcast [3 x i32]* %index to i8*, !dbg !7067
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 bitcast ([3 x i32]* @__const.find_first_points.index to i8*), i64 12, i1 false), !dbg !7067
  call void @llvm.dbg.declare(metadata float* %in_v, metadata !7068, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata [3 x float]* %workp, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !7072, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.declare(metadata float* %tmp_v, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata float* %workp_v, metadata !7076, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata float* %max_len_sq, metadata !7078, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata float* %nx, metadata !7080, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.declare(metadata float* %ny, metadata !7082, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.declare(metadata float* %nz, metadata !7084, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.declare(metadata float* %max_dim, metadata !7086, metadata !DIExpression()), !dbg !7087
  %13 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7088
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !7089
  call void @calc_mballco(%struct.MetaElem* %13, float* %arraydecay), !dbg !7090
  %14 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7091
  %function = getelementptr inbounds %struct.process, %struct.process* %14, i32 0, i32 4, !dbg !7092
  %15 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function, align 8, !dbg !7092
  %16 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7093
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !7094
  %17 = load float, float* %arrayidx1, align 4, !dbg !7094
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 1, !dbg !7095
  %18 = load float, float* %arrayidx2, align 4, !dbg !7095
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 2, !dbg !7096
  %19 = load float, float* %arrayidx3, align 4, !dbg !7096
  %call = call float %15(%struct.process* %16, float %17, float %18, float %19), !dbg !7091
  store float %call, float* %in_v, align 4, !dbg !7097
  store i32 0, i32* %i, align 4, !dbg !7098
  br label %for.cond, !dbg !7100

for.cond:                                         ; preds = %for.inc165, %if.then
  %20 = load i32, i32* %i, align 4, !dbg !7101
  %cmp4 = icmp slt i32 %20, 3, !dbg !7103
  br i1 %cmp4, label %for.body, label %for.end167, !dbg !7104

for.body:                                         ; preds = %for.cond
  %21 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7105
  %type = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %21, i32 0, i32 3, !dbg !7107
  %22 = load i16, i16* %type, align 8, !dbg !7107
  %conv = sext i16 %22 to i32, !dbg !7105
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 4, label %sw.bb11
    i32 5, label %sw.bb11
    i32 6, label %sw.bb11
    i32 7, label %sw.bb11
  ], !dbg !7108

sw.bb:                                            ; preds = %for.body
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %IN, i64 0, i64 0, !dbg !7109
  %23 = load float, float* %arrayidx5, align 4, !dbg !7109
  %24 = load i32, i32* %i, align 4, !dbg !7111
  %idxprom6 = sext i32 %24 to i64, !dbg !7112
  %arrayidx7 = getelementptr inbounds [3 x i32], [3 x i32]* %index, i64 0, i64 %idxprom6, !dbg !7112
  %25 = load i32, i32* %arrayidx7, align 4, !dbg !7112
  %conv8 = sitofp i32 %25 to float, !dbg !7112
  %26 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7113
  %rad = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %26, i32 0, i32 14, !dbg !7114
  %27 = load float, float* %rad, align 8, !dbg !7114
  %mul = fmul float %conv8, %27, !dbg !7115
  %add = fadd float %23, %mul, !dbg !7116
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !7117
  store float %add, float* %arrayidx9, align 4, !dbg !7118
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %OUT, i64 0, i64 0, !dbg !7119
  store float %add, float* %arrayidx10, align 4, !dbg !7120
  br label %sw.epilog, !dbg !7121

sw.bb11:                                          ; preds = %for.body, %for.body, %for.body, %for.body
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %IN, i64 0, i64 0, !dbg !7122
  %28 = load float, float* %arrayidx12, align 4, !dbg !7122
  %29 = load i32, i32* %i, align 4, !dbg !7123
  %idxprom13 = sext i32 %29 to i64, !dbg !7124
  %arrayidx14 = getelementptr inbounds [3 x i32], [3 x i32]* %index, i64 0, i64 %idxprom13, !dbg !7124
  %30 = load i32, i32* %arrayidx14, align 4, !dbg !7124
  %conv15 = sitofp i32 %30 to float, !dbg !7124
  %31 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7125
  %expx = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %31, i32 0, i32 11, !dbg !7126
  %32 = load float, float* %expx, align 4, !dbg !7126
  %33 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7127
  %rad16 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %33, i32 0, i32 14, !dbg !7128
  %34 = load float, float* %rad16, align 8, !dbg !7128
  %add17 = fadd float %32, %34, !dbg !7129
  %mul18 = fmul float %conv15, %add17, !dbg !7130
  %add19 = fadd float %28, %mul18, !dbg !7131
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !7132
  store float %add19, float* %arrayidx20, align 4, !dbg !7133
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %OUT, i64 0, i64 0, !dbg !7134
  store float %add19, float* %arrayidx21, align 4, !dbg !7135
  br label %sw.epilog, !dbg !7136

sw.epilog:                                        ; preds = %for.body, %sw.bb11, %sw.bb
  store i32 0, i32* %j, align 4, !dbg !7137
  br label %for.cond22, !dbg !7139

for.cond22:                                       ; preds = %for.inc162, %sw.epilog
  %35 = load i32, i32* %j, align 4, !dbg !7140
  %cmp23 = icmp slt i32 %35, 3, !dbg !7142
  br i1 %cmp23, label %for.body25, label %for.end164, !dbg !7143

for.body25:                                       ; preds = %for.cond22
  %36 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7144
  %type26 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %36, i32 0, i32 3, !dbg !7146
  %37 = load i16, i16* %type26, align 8, !dbg !7146
  %conv27 = sext i16 %37 to i32, !dbg !7144
  switch i32 %conv27, label %sw.epilog49 [
    i32 0, label %sw.bb28
    i32 4, label %sw.bb38
    i32 5, label %sw.bb38
    i32 6, label %sw.bb38
    i32 7, label %sw.bb38
  ], !dbg !7147

sw.bb28:                                          ; preds = %for.body25
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %IN, i64 0, i64 1, !dbg !7148
  %38 = load float, float* %arrayidx29, align 4, !dbg !7148
  %39 = load i32, i32* %j, align 4, !dbg !7150
  %idxprom30 = sext i32 %39 to i64, !dbg !7151
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %index, i64 0, i64 %idxprom30, !dbg !7151
  %40 = load i32, i32* %arrayidx31, align 4, !dbg !7151
  %conv32 = sitofp i32 %40 to float, !dbg !7151
  %41 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7152
  %rad33 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %41, i32 0, i32 14, !dbg !7153
  %42 = load float, float* %rad33, align 8, !dbg !7153
  %mul34 = fmul float %conv32, %42, !dbg !7154
  %add35 = fadd float %38, %mul34, !dbg !7155
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 1, !dbg !7156
  store float %add35, float* %arrayidx36, align 4, !dbg !7157
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %OUT, i64 0, i64 1, !dbg !7158
  store float %add35, float* %arrayidx37, align 4, !dbg !7159
  br label %sw.epilog49, !dbg !7160

sw.bb38:                                          ; preds = %for.body25, %for.body25, %for.body25, %for.body25
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %IN, i64 0, i64 1, !dbg !7161
  %43 = load float, float* %arrayidx39, align 4, !dbg !7161
  %44 = load i32, i32* %j, align 4, !dbg !7162
  %idxprom40 = sext i32 %44 to i64, !dbg !7163
  %arrayidx41 = getelementptr inbounds [3 x i32], [3 x i32]* %index, i64 0, i64 %idxprom40, !dbg !7163
  %45 = load i32, i32* %arrayidx41, align 4, !dbg !7163
  %conv42 = sitofp i32 %45 to float, !dbg !7163
  %46 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7164
  %expy = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %46, i32 0, i32 12, !dbg !7165
  %47 = load float, float* %expy, align 8, !dbg !7165
  %48 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7166
  %rad43 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %48, i32 0, i32 14, !dbg !7167
  %49 = load float, float* %rad43, align 8, !dbg !7167
  %add44 = fadd float %47, %49, !dbg !7168
  %mul45 = fmul float %conv42, %add44, !dbg !7169
  %add46 = fadd float %43, %mul45, !dbg !7170
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 1, !dbg !7171
  store float %add46, float* %arrayidx47, align 4, !dbg !7172
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %OUT, i64 0, i64 1, !dbg !7173
  store float %add46, float* %arrayidx48, align 4, !dbg !7174
  br label %sw.epilog49, !dbg !7175

sw.epilog49:                                      ; preds = %for.body25, %sw.bb38, %sw.bb28
  store i32 0, i32* %k, align 4, !dbg !7176
  br label %for.cond50, !dbg !7178

for.cond50:                                       ; preds = %for.inc, %sw.epilog49
  %50 = load i32, i32* %k, align 4, !dbg !7179
  %cmp51 = icmp slt i32 %50, 3, !dbg !7181
  br i1 %cmp51, label %for.body53, label %for.end, !dbg !7182

for.body53:                                       ; preds = %for.cond50
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %OUT, i64 0, i64 0, !dbg !7183
  %51 = load float, float* %arrayidx54, align 4, !dbg !7183
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !7185
  store float %51, float* %arrayidx55, align 4, !dbg !7186
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %OUT, i64 0, i64 1, !dbg !7187
  %52 = load float, float* %arrayidx56, align 4, !dbg !7187
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 1, !dbg !7188
  store float %52, float* %arrayidx57, align 4, !dbg !7189
  %53 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7190
  %type58 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %53, i32 0, i32 3, !dbg !7191
  %54 = load i16, i16* %type58, align 8, !dbg !7191
  %conv59 = sext i16 %54 to i32, !dbg !7190
  switch i32 %conv59, label %sw.epilog79 [
    i32 0, label %sw.bb60
    i32 4, label %sw.bb60
    i32 5, label %sw.bb60
    i32 6, label %sw.bb69
    i32 7, label %sw.bb69
  ], !dbg !7192

sw.bb60:                                          ; preds = %for.body53, %for.body53, %for.body53
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %IN, i64 0, i64 2, !dbg !7193
  %55 = load float, float* %arrayidx61, align 4, !dbg !7193
  %56 = load i32, i32* %k, align 4, !dbg !7195
  %idxprom62 = sext i32 %56 to i64, !dbg !7196
  %arrayidx63 = getelementptr inbounds [3 x i32], [3 x i32]* %index, i64 0, i64 %idxprom62, !dbg !7196
  %57 = load i32, i32* %arrayidx63, align 4, !dbg !7196
  %conv64 = sitofp i32 %57 to float, !dbg !7196
  %58 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7197
  %rad65 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %58, i32 0, i32 14, !dbg !7198
  %59 = load float, float* %rad65, align 8, !dbg !7198
  %mul66 = fmul float %conv64, %59, !dbg !7199
  %add67 = fadd float %55, %mul66, !dbg !7200
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 2, !dbg !7201
  store float %add67, float* %arrayidx68, align 4, !dbg !7202
  br label %sw.epilog79, !dbg !7203

sw.bb69:                                          ; preds = %for.body53, %for.body53
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %IN, i64 0, i64 2, !dbg !7204
  %60 = load float, float* %arrayidx70, align 4, !dbg !7204
  %61 = load i32, i32* %k, align 4, !dbg !7205
  %idxprom71 = sext i32 %61 to i64, !dbg !7206
  %arrayidx72 = getelementptr inbounds [3 x i32], [3 x i32]* %index, i64 0, i64 %idxprom71, !dbg !7206
  %62 = load i32, i32* %arrayidx72, align 4, !dbg !7206
  %conv73 = sitofp i32 %62 to float, !dbg !7206
  %63 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7207
  %expz = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %63, i32 0, i32 13, !dbg !7208
  %64 = load float, float* %expz, align 4, !dbg !7208
  %65 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7209
  %rad74 = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %65, i32 0, i32 14, !dbg !7210
  %66 = load float, float* %rad74, align 8, !dbg !7210
  %add75 = fadd float %64, %66, !dbg !7211
  %mul76 = fmul float %conv73, %add75, !dbg !7212
  %add77 = fadd float %60, %mul76, !dbg !7213
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 2, !dbg !7214
  store float %add77, float* %arrayidx78, align 4, !dbg !7215
  br label %sw.epilog79, !dbg !7216

sw.epilog79:                                      ; preds = %for.body53, %sw.bb69, %sw.bb60
  %67 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7217
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !7218
  call void @calc_mballco(%struct.MetaElem* %67, float* %arraydecay80), !dbg !7219
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 0, !dbg !7220
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !7221
  call void @copy_v3_v3(float* %arraydecay81, float* %arraydecay82), !dbg !7222
  %68 = load float, float* %in_v, align 4, !dbg !7223
  store float %68, float* %workp_v, align 4, !dbg !7224
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !7225
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !7226
  %call85 = call float @len_squared_v3v3(float* %arraydecay83, float* %arraydecay84), !dbg !7227
  store float %call85, float* %max_len_sq, align 4, !dbg !7228
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !7229
  %69 = load float, float* %arrayidx86, align 4, !dbg !7229
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !7230
  %70 = load float, float* %arrayidx87, align 4, !dbg !7230
  %sub88 = fsub float %69, %70, !dbg !7231
  %71 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7232
  %size = getelementptr inbounds %struct.process, %struct.process* %71, i32 0, i32 5, !dbg !7233
  %72 = load float, float* %size, align 8, !dbg !7233
  %div89 = fdiv float %sub88, %72, !dbg !7234
  %73 = call float @llvm.fabs.f32(float %div89), !dbg !7235
  store float %73, float* %nx, align 4, !dbg !7236
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 1, !dbg !7237
  %74 = load float, float* %arrayidx90, align 4, !dbg !7237
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 1, !dbg !7238
  %75 = load float, float* %arrayidx91, align 4, !dbg !7238
  %sub92 = fsub float %74, %75, !dbg !7239
  %76 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7240
  %size93 = getelementptr inbounds %struct.process, %struct.process* %76, i32 0, i32 5, !dbg !7241
  %77 = load float, float* %size93, align 8, !dbg !7241
  %div94 = fdiv float %sub92, %77, !dbg !7242
  %78 = call float @llvm.fabs.f32(float %div94), !dbg !7243
  store float %78, float* %ny, align 4, !dbg !7244
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 2, !dbg !7245
  %79 = load float, float* %arrayidx95, align 4, !dbg !7245
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 2, !dbg !7246
  %80 = load float, float* %arrayidx96, align 4, !dbg !7246
  %sub97 = fsub float %79, %80, !dbg !7247
  %81 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7248
  %size98 = getelementptr inbounds %struct.process, %struct.process* %81, i32 0, i32 5, !dbg !7249
  %82 = load float, float* %size98, align 8, !dbg !7249
  %div99 = fdiv float %sub97, %82, !dbg !7250
  %83 = call float @llvm.fabs.f32(float %div99), !dbg !7251
  store float %83, float* %nz, align 4, !dbg !7252
  %84 = load float, float* %nx, align 4, !dbg !7253
  %85 = load float, float* %ny, align 4, !dbg !7254
  %86 = load float, float* %nz, align 4, !dbg !7255
  %call100 = call float @max_fff(float %84, float %85, float %86), !dbg !7256
  store float %call100, float* %max_dim, align 4, !dbg !7257
  %87 = load float, float* %max_dim, align 4, !dbg !7258
  %cmp101 = fcmp une float %87, 0.000000e+00, !dbg !7260
  br i1 %cmp101, label %if.then103, label %if.end161, !dbg !7261

if.then103:                                       ; preds = %sw.epilog79
  call void @llvm.dbg.declare(metadata float* %len_sq, metadata !7262, metadata !DIExpression()), !dbg !7264
  store float 0.000000e+00, float* %len_sq, align 4, !dbg !7264
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 0, !dbg !7265
  %88 = load float, float* %arrayidx104, align 4, !dbg !7265
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !7266
  %89 = load float, float* %arrayidx105, align 4, !dbg !7266
  %sub106 = fsub float %88, %89, !dbg !7267
  %90 = load float, float* %max_dim, align 4, !dbg !7268
  %div107 = fdiv float %sub106, %90, !dbg !7269
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !7270
  store float %div107, float* %arrayidx108, align 4, !dbg !7271
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 1, !dbg !7272
  %91 = load float, float* %arrayidx109, align 4, !dbg !7272
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 1, !dbg !7273
  %92 = load float, float* %arrayidx110, align 4, !dbg !7273
  %sub111 = fsub float %91, %92, !dbg !7274
  %93 = load float, float* %max_dim, align 4, !dbg !7275
  %div112 = fdiv float %sub111, %93, !dbg !7276
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !7277
  store float %div112, float* %arrayidx113, align 4, !dbg !7278
  %arrayidx114 = getelementptr inbounds [3 x float], [3 x float]* %out, i64 0, i64 2, !dbg !7279
  %94 = load float, float* %arrayidx114, align 4, !dbg !7279
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 2, !dbg !7280
  %95 = load float, float* %arrayidx115, align 4, !dbg !7280
  %sub116 = fsub float %94, %95, !dbg !7281
  %96 = load float, float* %max_dim, align 4, !dbg !7282
  %div117 = fdiv float %sub116, %96, !dbg !7283
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !7284
  store float %div117, float* %arrayidx118, align 4, !dbg !7285
  br label %while.cond, !dbg !7286

while.cond:                                       ; preds = %if.end157, %if.then103
  %97 = load float, float* %len_sq, align 4, !dbg !7287
  %98 = load float, float* %max_len_sq, align 4, !dbg !7288
  %cmp119 = fcmp ole float %97, %98, !dbg !7289
  br i1 %cmp119, label %while.body, label %while.end, !dbg !7286

while.body:                                       ; preds = %while.cond
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 0, !dbg !7290
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !7292
  call void @add_v3_v3(float* %arraydecay121, float* %arraydecay122), !dbg !7293
  %99 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7294
  %function123 = getelementptr inbounds %struct.process, %struct.process* %99, i32 0, i32 4, !dbg !7295
  %100 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function123, align 8, !dbg !7295
  %101 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7296
  %arrayidx124 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 0, !dbg !7297
  %102 = load float, float* %arrayidx124, align 4, !dbg !7297
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 1, !dbg !7298
  %103 = load float, float* %arrayidx125, align 4, !dbg !7298
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 2, !dbg !7299
  %104 = load float, float* %arrayidx126, align 4, !dbg !7299
  %call127 = call float %100(%struct.process* %101, float %102, float %103, float %104), !dbg !7294
  store float %call127, float* %tmp_v, align 4, !dbg !7300
  %105 = load float, float* %tmp_v, align 4, !dbg !7301
  %cmp128 = fcmp olt float %105, 0.000000e+00, !dbg !7303
  br i1 %cmp128, label %land.lhs.true, label %lor.lhs.false, !dbg !7304

land.lhs.true:                                    ; preds = %while.body
  %106 = load float, float* %workp_v, align 4, !dbg !7305
  %cmp130 = fcmp oge float %106, 0.000000e+00, !dbg !7306
  br i1 %cmp130, label %if.then137, label %lor.lhs.false, !dbg !7307

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.body
  %107 = load float, float* %tmp_v, align 4, !dbg !7308
  %cmp132 = fcmp ogt float %107, 0.000000e+00, !dbg !7309
  br i1 %cmp132, label %land.lhs.true134, label %if.end157, !dbg !7310

land.lhs.true134:                                 ; preds = %lor.lhs.false
  %108 = load float, float* %workp_v, align 4, !dbg !7311
  %cmp135 = fcmp ole float %108, 0.000000e+00, !dbg !7312
  br i1 %cmp135, label %if.then137, label %if.end157, !dbg !7313

if.then137:                                       ; preds = %land.lhs.true134, %land.lhs.true
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 0, !dbg !7314
  %109 = load float, float* %arrayidx138, align 4, !dbg !7314
  %110 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7316
  %size139 = getelementptr inbounds %struct.process, %struct.process* %110, i32 0, i32 5, !dbg !7317
  %111 = load float, float* %size139, align 8, !dbg !7317
  %div140 = fdiv float %109, %111, !dbg !7318
  %conv141 = fpext float %div140 to double, !dbg !7314
  %112 = call double @llvm.floor.f64(double %conv141), !dbg !7319
  %conv142 = fptosi double %112 to i32, !dbg !7320
  store i32 %conv142, i32* %c_i, align 4, !dbg !7321
  %arrayidx143 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 1, !dbg !7322
  %113 = load float, float* %arrayidx143, align 4, !dbg !7322
  %114 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7323
  %size144 = getelementptr inbounds %struct.process, %struct.process* %114, i32 0, i32 5, !dbg !7324
  %115 = load float, float* %size144, align 8, !dbg !7324
  %div145 = fdiv float %113, %115, !dbg !7325
  %conv146 = fpext float %div145 to double, !dbg !7322
  %116 = call double @llvm.floor.f64(double %conv146), !dbg !7326
  %conv147 = fptosi double %116 to i32, !dbg !7327
  store i32 %conv147, i32* %c_j, align 4, !dbg !7328
  %arrayidx148 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 2, !dbg !7329
  %117 = load float, float* %arrayidx148, align 4, !dbg !7329
  %118 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7330
  %size149 = getelementptr inbounds %struct.process, %struct.process* %118, i32 0, i32 5, !dbg !7331
  %119 = load float, float* %size149, align 8, !dbg !7331
  %div150 = fdiv float %117, %119, !dbg !7332
  %conv151 = fpext float %div150 to double, !dbg !7329
  %120 = call double @llvm.floor.f64(double %conv151), !dbg !7333
  %conv152 = fptosi double %120 to i32, !dbg !7334
  store i32 %conv152, i32* %c_k, align 4, !dbg !7335
  %121 = load %struct.MetaElem*, %struct.MetaElem** %ml, align 8, !dbg !7336
  %flag = getelementptr inbounds %struct.MetaElem, %struct.MetaElem* %121, i32 0, i32 4, !dbg !7338
  %122 = load i16, i16* %flag, align 2, !dbg !7338
  %conv153 = sext i16 %122 to i32, !dbg !7336
  %and = and i32 %conv153, 2, !dbg !7339
  %cmp154 = icmp eq i32 %and, 0, !dbg !7340
  br i1 %cmp154, label %if.then156, label %if.else, !dbg !7341

if.then156:                                       ; preds = %if.then137
  %123 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7342
  %124 = load i32, i32* %c_i, align 4, !dbg !7344
  %125 = load i32, i32* %c_j, align 4, !dbg !7345
  %126 = load i32, i32* %c_k, align 4, !dbg !7346
  call void @add_cube(%struct.process* %123, i32 %124, i32 %125, i32 %126, i32 1), !dbg !7347
  br label %if.end, !dbg !7348

if.else:                                          ; preds = %if.then137
  %127 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7349
  %128 = load i32, i32* %c_i, align 4, !dbg !7351
  %129 = load i32, i32* %c_j, align 4, !dbg !7352
  %130 = load i32, i32* %c_k, align 4, !dbg !7353
  call void @add_cube(%struct.process* %127, i32 %128, i32 %129, i32 %130, i32 2), !dbg !7354
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then156
  br label %if.end157, !dbg !7355

if.end157:                                        ; preds = %if.end, %land.lhs.true134, %lor.lhs.false
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %workp, i64 0, i64 0, !dbg !7356
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %in, i64 0, i64 0, !dbg !7357
  %call160 = call float @len_squared_v3v3(float* %arraydecay158, float* %arraydecay159), !dbg !7358
  store float %call160, float* %len_sq, align 4, !dbg !7359
  %131 = load float, float* %tmp_v, align 4, !dbg !7360
  store float %131, float* %workp_v, align 4, !dbg !7361
  br label %while.cond, !dbg !7286, !llvm.loop !7362

while.end:                                        ; preds = %while.cond
  br label %if.end161, !dbg !7364

if.end161:                                        ; preds = %while.end, %sw.epilog79
  br label %for.inc, !dbg !7365

for.inc:                                          ; preds = %if.end161
  %132 = load i32, i32* %k, align 4, !dbg !7366
  %inc = add nsw i32 %132, 1, !dbg !7366
  store i32 %inc, i32* %k, align 4, !dbg !7366
  br label %for.cond50, !dbg !7367, !llvm.loop !7368

for.end:                                          ; preds = %for.cond50
  br label %for.inc162, !dbg !7370

for.inc162:                                       ; preds = %for.end
  %133 = load i32, i32* %j, align 4, !dbg !7371
  %inc163 = add nsw i32 %133, 1, !dbg !7371
  store i32 %inc163, i32* %j, align 4, !dbg !7371
  br label %for.cond22, !dbg !7372, !llvm.loop !7373

for.end164:                                       ; preds = %for.cond22
  br label %for.inc165, !dbg !7375

for.inc165:                                       ; preds = %for.end164
  %134 = load i32, i32* %i, align 4, !dbg !7376
  %inc166 = add nsw i32 %134, 1, !dbg !7376
  store i32 %inc166, i32* %i, align 4, !dbg !7376
  br label %for.cond, !dbg !7377, !llvm.loop !7378

for.end167:                                       ; preds = %for.cond
  br label %if.end168, !dbg !7380

if.end168:                                        ; preds = %for.end167, %entry
  ret void, !dbg !7381
}

; Function Attrs: noinline nounwind uwtable
define internal void @docube(%struct.process* %process, %struct.cube* %cube, %struct.MetaBall* %mb) #0 !dbg !7382 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %cube.addr = alloca %struct.cube*, align 8
  %mb.addr = alloca %struct.MetaBall*, align 8
  %polys = alloca %struct.intlists*, align 8
  %c1 = alloca %struct.corner*, align 8
  %c2 = alloca %struct.corner*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %count = alloca i32, align 4
  %indexar = alloca [8 x i32], align 16
  %edges = alloca %struct.intlist*, align 8
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !7386, metadata !DIExpression()), !dbg !7387
  store %struct.cube* %cube, %struct.cube** %cube.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cube** %cube.addr, metadata !7388, metadata !DIExpression()), !dbg !7389
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata %struct.intlists** %polys, metadata !7392, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.declare(metadata %struct.corner** %c1, metadata !7394, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.declare(metadata %struct.corner** %c2, metadata !7396, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7398, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7400, metadata !DIExpression()), !dbg !7401
  store i32 0, i32* %index, align 4, !dbg !7401
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7402, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.declare(metadata [8 x i32]* %indexar, metadata !7404, metadata !DIExpression()), !dbg !7405
  store i32 0, i32* %i, align 4, !dbg !7406
  br label %for.cond, !dbg !7408

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7409
  %cmp = icmp slt i32 %0, 8, !dbg !7411
  br i1 %cmp, label %for.body, label %for.end, !dbg !7412

for.body:                                         ; preds = %for.cond
  %1 = load %struct.cube*, %struct.cube** %cube.addr, align 8, !dbg !7413
  %corners = getelementptr inbounds %struct.cube, %struct.cube* %1, i32 0, i32 3, !dbg !7415
  %2 = load i32, i32* %i, align 4, !dbg !7416
  %idxprom = sext i32 %2 to i64, !dbg !7413
  %arrayidx = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners, i64 0, i64 %idxprom, !dbg !7413
  %3 = load %struct.corner*, %struct.corner** %arrayidx, align 8, !dbg !7413
  %value = getelementptr inbounds %struct.corner, %struct.corner* %3, i32 0, i32 4, !dbg !7417
  %4 = load float, float* %value, align 8, !dbg !7417
  %cmp1 = fcmp ogt float %4, 0.000000e+00, !dbg !7418
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7419

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !7420
  %shl = shl i32 1, %5, !dbg !7421
  %6 = load i32, i32* %index, align 4, !dbg !7422
  %add = add nsw i32 %6, %shl, !dbg !7422
  store i32 %add, i32* %index, align 4, !dbg !7422
  br label %if.end, !dbg !7423

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7424

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !7425
  %inc = add nsw i32 %7, 1, !dbg !7425
  store i32 %inc, i32* %i, align 4, !dbg !7425
  br label %for.cond, !dbg !7426, !llvm.loop !7427

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %index, align 4, !dbg !7429
  %idxprom2 = sext i32 %8 to i64, !dbg !7431
  %arrayidx3 = getelementptr inbounds [256 x %struct.intlists*], [256 x %struct.intlists*]* @cubetable, i64 0, i64 %idxprom2, !dbg !7431
  %9 = load %struct.intlists*, %struct.intlists** %arrayidx3, align 8, !dbg !7431
  store %struct.intlists* %9, %struct.intlists** %polys, align 8, !dbg !7432
  br label %for.cond4, !dbg !7433

for.cond4:                                        ; preds = %for.inc109, %for.end
  %10 = load %struct.intlists*, %struct.intlists** %polys, align 8, !dbg !7434
  %tobool = icmp ne %struct.intlists* %10, null, !dbg !7436
  br i1 %tobool, label %for.body5, label %for.end111, !dbg !7436

for.body5:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.intlist** %edges, metadata !7437, metadata !DIExpression()), !dbg !7439
  store i32 0, i32* %count, align 4, !dbg !7440
  %11 = load %struct.intlists*, %struct.intlists** %polys, align 8, !dbg !7441
  %list = getelementptr inbounds %struct.intlists, %struct.intlists* %11, i32 0, i32 0, !dbg !7443
  %12 = load %struct.intlist*, %struct.intlist** %list, align 8, !dbg !7443
  store %struct.intlist* %12, %struct.intlist** %edges, align 8, !dbg !7444
  br label %for.cond6, !dbg !7445

for.cond6:                                        ; preds = %for.inc24, %for.body5
  %13 = load %struct.intlist*, %struct.intlist** %edges, align 8, !dbg !7446
  %tobool7 = icmp ne %struct.intlist* %13, null, !dbg !7448
  br i1 %tobool7, label %for.body8, label %for.end25, !dbg !7448

for.body8:                                        ; preds = %for.cond6
  %14 = load %struct.cube*, %struct.cube** %cube.addr, align 8, !dbg !7449
  %corners9 = getelementptr inbounds %struct.cube, %struct.cube* %14, i32 0, i32 3, !dbg !7451
  %15 = load %struct.intlist*, %struct.intlist** %edges, align 8, !dbg !7452
  %i10 = getelementptr inbounds %struct.intlist, %struct.intlist* %15, i32 0, i32 0, !dbg !7453
  %16 = load i32, i32* %i10, align 8, !dbg !7453
  %idxprom11 = sext i32 %16 to i64, !dbg !7454
  %arrayidx12 = getelementptr inbounds [12 x i32], [12 x i32]* @corner1, i64 0, i64 %idxprom11, !dbg !7454
  %17 = load i32, i32* %arrayidx12, align 4, !dbg !7454
  %idxprom13 = sext i32 %17 to i64, !dbg !7449
  %arrayidx14 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners9, i64 0, i64 %idxprom13, !dbg !7449
  %18 = load %struct.corner*, %struct.corner** %arrayidx14, align 8, !dbg !7449
  store %struct.corner* %18, %struct.corner** %c1, align 8, !dbg !7455
  %19 = load %struct.cube*, %struct.cube** %cube.addr, align 8, !dbg !7456
  %corners15 = getelementptr inbounds %struct.cube, %struct.cube* %19, i32 0, i32 3, !dbg !7457
  %20 = load %struct.intlist*, %struct.intlist** %edges, align 8, !dbg !7458
  %i16 = getelementptr inbounds %struct.intlist, %struct.intlist* %20, i32 0, i32 0, !dbg !7459
  %21 = load i32, i32* %i16, align 8, !dbg !7459
  %idxprom17 = sext i32 %21 to i64, !dbg !7460
  %arrayidx18 = getelementptr inbounds [12 x i32], [12 x i32]* @corner2, i64 0, i64 %idxprom17, !dbg !7460
  %22 = load i32, i32* %arrayidx18, align 4, !dbg !7460
  %idxprom19 = sext i32 %22 to i64, !dbg !7456
  %arrayidx20 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners15, i64 0, i64 %idxprom19, !dbg !7456
  %23 = load %struct.corner*, %struct.corner** %arrayidx20, align 8, !dbg !7456
  store %struct.corner* %23, %struct.corner** %c2, align 8, !dbg !7461
  %24 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7462
  %25 = load %struct.corner*, %struct.corner** %c1, align 8, !dbg !7463
  %26 = load %struct.corner*, %struct.corner** %c2, align 8, !dbg !7464
  %27 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !7465
  %call = call i32 @vertid(%struct.process* %24, %struct.corner* %25, %struct.corner* %26, %struct.MetaBall* %27), !dbg !7466
  %28 = load i32, i32* %count, align 4, !dbg !7467
  %idxprom21 = sext i32 %28 to i64, !dbg !7468
  %arrayidx22 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 %idxprom21, !dbg !7468
  store i32 %call, i32* %arrayidx22, align 4, !dbg !7469
  %29 = load i32, i32* %count, align 4, !dbg !7470
  %inc23 = add nsw i32 %29, 1, !dbg !7470
  store i32 %inc23, i32* %count, align 4, !dbg !7470
  br label %for.inc24, !dbg !7471

for.inc24:                                        ; preds = %for.body8
  %30 = load %struct.intlist*, %struct.intlist** %edges, align 8, !dbg !7472
  %next = getelementptr inbounds %struct.intlist, %struct.intlist* %30, i32 0, i32 1, !dbg !7473
  %31 = load %struct.intlist*, %struct.intlist** %next, align 8, !dbg !7473
  store %struct.intlist* %31, %struct.intlist** %edges, align 8, !dbg !7474
  br label %for.cond6, !dbg !7475, !llvm.loop !7476

for.end25:                                        ; preds = %for.cond6
  %32 = load i32, i32* %count, align 4, !dbg !7478
  %cmp26 = icmp sgt i32 %32, 2, !dbg !7480
  br i1 %cmp26, label %if.then27, label %if.end108, !dbg !7481

if.then27:                                        ; preds = %for.end25
  %33 = load i32, i32* %count, align 4, !dbg !7482
  switch i32 %33, label %sw.epilog [
    i32 3, label %sw.bb
    i32 4, label %sw.bb31
    i32 5, label %sw.bb44
    i32 6, label %sw.bb61
    i32 7, label %sw.bb83
  ], !dbg !7484

sw.bb:                                            ; preds = %if.then27
  %34 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7485
  %arrayidx28 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7487
  %35 = load i32, i32* %arrayidx28, align 8, !dbg !7487
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7488
  %36 = load i32, i32* %arrayidx29, align 4, !dbg !7488
  %arrayidx30 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7489
  %37 = load i32, i32* %arrayidx30, align 16, !dbg !7489
  call void @accum_mballfaces(%struct.process* %34, i32 %35, i32 %36, i32 %37, i32 0), !dbg !7490
  br label %sw.epilog, !dbg !7491

sw.bb31:                                          ; preds = %if.then27
  %arrayidx32 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7492
  %38 = load i32, i32* %arrayidx32, align 16, !dbg !7492
  %cmp33 = icmp eq i32 %38, 0, !dbg !7494
  br i1 %cmp33, label %if.then34, label %if.else, !dbg !7495

if.then34:                                        ; preds = %sw.bb31
  %39 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7496
  %arrayidx35 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7497
  %40 = load i32, i32* %arrayidx35, align 16, !dbg !7497
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7498
  %41 = load i32, i32* %arrayidx36, align 4, !dbg !7498
  %arrayidx37 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7499
  %42 = load i32, i32* %arrayidx37, align 8, !dbg !7499
  %arrayidx38 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7500
  %43 = load i32, i32* %arrayidx38, align 4, !dbg !7500
  call void @accum_mballfaces(%struct.process* %39, i32 %40, i32 %41, i32 %42, i32 %43), !dbg !7501
  br label %if.end43, !dbg !7501

if.else:                                          ; preds = %sw.bb31
  %44 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7502
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7503
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !7503
  %arrayidx40 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7504
  %46 = load i32, i32* %arrayidx40, align 8, !dbg !7504
  %arrayidx41 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7505
  %47 = load i32, i32* %arrayidx41, align 4, !dbg !7505
  %arrayidx42 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7506
  %48 = load i32, i32* %arrayidx42, align 16, !dbg !7506
  call void @accum_mballfaces(%struct.process* %44, i32 %45, i32 %46, i32 %47, i32 %48), !dbg !7507
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then34
  br label %sw.epilog, !dbg !7508

sw.bb44:                                          ; preds = %if.then27
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7509
  %49 = load i32, i32* %arrayidx45, align 16, !dbg !7509
  %cmp46 = icmp eq i32 %49, 0, !dbg !7511
  br i1 %cmp46, label %if.then47, label %if.else52, !dbg !7512

if.then47:                                        ; preds = %sw.bb44
  %50 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7513
  %arrayidx48 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7514
  %51 = load i32, i32* %arrayidx48, align 16, !dbg !7514
  %arrayidx49 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7515
  %52 = load i32, i32* %arrayidx49, align 4, !dbg !7515
  %arrayidx50 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7516
  %53 = load i32, i32* %arrayidx50, align 8, !dbg !7516
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7517
  %54 = load i32, i32* %arrayidx51, align 4, !dbg !7517
  call void @accum_mballfaces(%struct.process* %50, i32 %51, i32 %52, i32 %53, i32 %54), !dbg !7518
  br label %if.end57, !dbg !7518

if.else52:                                        ; preds = %sw.bb44
  %55 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7519
  %arrayidx53 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7520
  %56 = load i32, i32* %arrayidx53, align 4, !dbg !7520
  %arrayidx54 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7521
  %57 = load i32, i32* %arrayidx54, align 8, !dbg !7521
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7522
  %58 = load i32, i32* %arrayidx55, align 4, !dbg !7522
  %arrayidx56 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7523
  %59 = load i32, i32* %arrayidx56, align 16, !dbg !7523
  call void @accum_mballfaces(%struct.process* %55, i32 %56, i32 %57, i32 %58, i32 %59), !dbg !7524
  br label %if.end57

if.end57:                                         ; preds = %if.else52, %if.then47
  %60 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7525
  %arrayidx58 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 4, !dbg !7526
  %61 = load i32, i32* %arrayidx58, align 16, !dbg !7526
  %arrayidx59 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7527
  %62 = load i32, i32* %arrayidx59, align 4, !dbg !7527
  %arrayidx60 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7528
  %63 = load i32, i32* %arrayidx60, align 16, !dbg !7528
  call void @accum_mballfaces(%struct.process* %60, i32 %61, i32 %62, i32 %63, i32 0), !dbg !7529
  br label %sw.epilog, !dbg !7530

sw.bb61:                                          ; preds = %if.then27
  %arrayidx62 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7531
  %64 = load i32, i32* %arrayidx62, align 16, !dbg !7531
  %cmp63 = icmp eq i32 %64, 0, !dbg !7533
  br i1 %cmp63, label %if.then64, label %if.else73, !dbg !7534

if.then64:                                        ; preds = %sw.bb61
  %65 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7535
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7537
  %66 = load i32, i32* %arrayidx65, align 16, !dbg !7537
  %arrayidx66 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7538
  %67 = load i32, i32* %arrayidx66, align 4, !dbg !7538
  %arrayidx67 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7539
  %68 = load i32, i32* %arrayidx67, align 8, !dbg !7539
  %arrayidx68 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7540
  %69 = load i32, i32* %arrayidx68, align 4, !dbg !7540
  call void @accum_mballfaces(%struct.process* %65, i32 %66, i32 %67, i32 %68, i32 %69), !dbg !7541
  %70 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7542
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7543
  %71 = load i32, i32* %arrayidx69, align 16, !dbg !7543
  %arrayidx70 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 5, !dbg !7544
  %72 = load i32, i32* %arrayidx70, align 4, !dbg !7544
  %arrayidx71 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 4, !dbg !7545
  %73 = load i32, i32* %arrayidx71, align 16, !dbg !7545
  %arrayidx72 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7546
  %74 = load i32, i32* %arrayidx72, align 4, !dbg !7546
  call void @accum_mballfaces(%struct.process* %70, i32 %71, i32 %72, i32 %73, i32 %74), !dbg !7547
  br label %if.end82, !dbg !7548

if.else73:                                        ; preds = %sw.bb61
  %75 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7549
  %arrayidx74 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7551
  %76 = load i32, i32* %arrayidx74, align 4, !dbg !7551
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7552
  %77 = load i32, i32* %arrayidx75, align 8, !dbg !7552
  %arrayidx76 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7553
  %78 = load i32, i32* %arrayidx76, align 4, !dbg !7553
  %arrayidx77 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7554
  %79 = load i32, i32* %arrayidx77, align 16, !dbg !7554
  call void @accum_mballfaces(%struct.process* %75, i32 %76, i32 %77, i32 %78, i32 %79), !dbg !7555
  %80 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7556
  %arrayidx78 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 5, !dbg !7557
  %81 = load i32, i32* %arrayidx78, align 4, !dbg !7557
  %arrayidx79 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 4, !dbg !7558
  %82 = load i32, i32* %arrayidx79, align 16, !dbg !7558
  %arrayidx80 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7559
  %83 = load i32, i32* %arrayidx80, align 4, !dbg !7559
  %arrayidx81 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7560
  %84 = load i32, i32* %arrayidx81, align 16, !dbg !7560
  call void @accum_mballfaces(%struct.process* %80, i32 %81, i32 %82, i32 %83, i32 %84), !dbg !7561
  br label %if.end82

if.end82:                                         ; preds = %if.else73, %if.then64
  br label %sw.epilog, !dbg !7562

sw.bb83:                                          ; preds = %if.then27
  %arrayidx84 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7563
  %85 = load i32, i32* %arrayidx84, align 16, !dbg !7563
  %cmp85 = icmp eq i32 %85, 0, !dbg !7565
  br i1 %cmp85, label %if.then86, label %if.else95, !dbg !7566

if.then86:                                        ; preds = %sw.bb83
  %86 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7567
  %arrayidx87 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7569
  %87 = load i32, i32* %arrayidx87, align 16, !dbg !7569
  %arrayidx88 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7570
  %88 = load i32, i32* %arrayidx88, align 4, !dbg !7570
  %arrayidx89 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7571
  %89 = load i32, i32* %arrayidx89, align 8, !dbg !7571
  %arrayidx90 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7572
  %90 = load i32, i32* %arrayidx90, align 4, !dbg !7572
  call void @accum_mballfaces(%struct.process* %86, i32 %87, i32 %88, i32 %89, i32 %90), !dbg !7573
  %91 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7574
  %arrayidx91 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7575
  %92 = load i32, i32* %arrayidx91, align 16, !dbg !7575
  %arrayidx92 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 5, !dbg !7576
  %93 = load i32, i32* %arrayidx92, align 4, !dbg !7576
  %arrayidx93 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 4, !dbg !7577
  %94 = load i32, i32* %arrayidx93, align 16, !dbg !7577
  %arrayidx94 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7578
  %95 = load i32, i32* %arrayidx94, align 4, !dbg !7578
  call void @accum_mballfaces(%struct.process* %91, i32 %92, i32 %93, i32 %94, i32 %95), !dbg !7579
  br label %if.end104, !dbg !7580

if.else95:                                        ; preds = %sw.bb83
  %96 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7581
  %arrayidx96 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7583
  %97 = load i32, i32* %arrayidx96, align 4, !dbg !7583
  %arrayidx97 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 2, !dbg !7584
  %98 = load i32, i32* %arrayidx97, align 8, !dbg !7584
  %arrayidx98 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 1, !dbg !7585
  %99 = load i32, i32* %arrayidx98, align 4, !dbg !7585
  %arrayidx99 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7586
  %100 = load i32, i32* %arrayidx99, align 16, !dbg !7586
  call void @accum_mballfaces(%struct.process* %96, i32 %97, i32 %98, i32 %99, i32 %100), !dbg !7587
  %101 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7588
  %arrayidx100 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 5, !dbg !7589
  %102 = load i32, i32* %arrayidx100, align 4, !dbg !7589
  %arrayidx101 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 4, !dbg !7590
  %103 = load i32, i32* %arrayidx101, align 16, !dbg !7590
  %arrayidx102 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 3, !dbg !7591
  %104 = load i32, i32* %arrayidx102, align 4, !dbg !7591
  %arrayidx103 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7592
  %105 = load i32, i32* %arrayidx103, align 16, !dbg !7592
  call void @accum_mballfaces(%struct.process* %101, i32 %102, i32 %103, i32 %104, i32 %105), !dbg !7593
  br label %if.end104

if.end104:                                        ; preds = %if.else95, %if.then86
  %106 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7594
  %arrayidx105 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 6, !dbg !7595
  %107 = load i32, i32* %arrayidx105, align 8, !dbg !7595
  %arrayidx106 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 5, !dbg !7596
  %108 = load i32, i32* %arrayidx106, align 4, !dbg !7596
  %arrayidx107 = getelementptr inbounds [8 x i32], [8 x i32]* %indexar, i64 0, i64 0, !dbg !7597
  %109 = load i32, i32* %arrayidx107, align 16, !dbg !7597
  call void @accum_mballfaces(%struct.process* %106, i32 %107, i32 %108, i32 %109, i32 0), !dbg !7598
  br label %sw.epilog, !dbg !7599

sw.epilog:                                        ; preds = %if.then27, %if.end104, %if.end82, %if.end57, %if.end43, %sw.bb
  br label %if.end108, !dbg !7600

if.end108:                                        ; preds = %sw.epilog, %for.end25
  br label %for.inc109, !dbg !7601

for.inc109:                                       ; preds = %if.end108
  %110 = load %struct.intlists*, %struct.intlists** %polys, align 8, !dbg !7602
  %next110 = getelementptr inbounds %struct.intlists, %struct.intlists* %110, i32 0, i32 1, !dbg !7603
  %111 = load %struct.intlists*, %struct.intlists** %next110, align 8, !dbg !7603
  store %struct.intlists* %111, %struct.intlists** %polys, align 8, !dbg !7604
  br label %for.cond4, !dbg !7605, !llvm.loop !7606

for.end111:                                       ; preds = %for.cond4
  ret void, !dbg !7608
}

; Function Attrs: noinline nounwind uwtable
define internal void @testface(%struct.process* %process, i32 %i, i32 %j, i32 %k, %struct.cube* %old, i32 %bit, i32 %c1, i32 %c2, i32 %c3, i32 %c4) #0 !dbg !7609 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %old.addr = alloca %struct.cube*, align 8
  %bit.addr = alloca i32, align 4
  %c1.addr = alloca i32, align 4
  %c2.addr = alloca i32, align 4
  %c3.addr = alloca i32, align 4
  %c4.addr = alloca i32, align 4
  %newc = alloca %struct.cube, align 8
  %oldcubes = alloca %struct.cubes*, align 8
  %corn1 = alloca %struct.corner*, align 8
  %corn2 = alloca %struct.corner*, align 8
  %corn3 = alloca %struct.corner*, align 8
  %corn4 = alloca %struct.corner*, align 8
  %n = alloca i32, align 4
  %pos = alloca i32, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !7612, metadata !DIExpression()), !dbg !7613
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7614, metadata !DIExpression()), !dbg !7615
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !7616, metadata !DIExpression()), !dbg !7617
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !7618, metadata !DIExpression()), !dbg !7619
  store %struct.cube* %old, %struct.cube** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cube** %old.addr, metadata !7620, metadata !DIExpression()), !dbg !7621
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !7622, metadata !DIExpression()), !dbg !7623
  store i32 %c1, i32* %c1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c1.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  store i32 %c2, i32* %c2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c2.addr, metadata !7626, metadata !DIExpression()), !dbg !7627
  store i32 %c3, i32* %c3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c3.addr, metadata !7628, metadata !DIExpression()), !dbg !7629
  store i32 %c4, i32* %c4.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c4.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata %struct.cube* %newc, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.declare(metadata %struct.cubes** %oldcubes, metadata !7634, metadata !DIExpression()), !dbg !7635
  %0 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7636
  %cubes = getelementptr inbounds %struct.process, %struct.process* %0, i32 0, i32 8, !dbg !7637
  %1 = load %struct.cubes*, %struct.cubes** %cubes, align 8, !dbg !7637
  store %struct.cubes* %1, %struct.cubes** %oldcubes, align 8, !dbg !7635
  call void @llvm.dbg.declare(metadata %struct.corner** %corn1, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.declare(metadata %struct.corner** %corn2, metadata !7640, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.declare(metadata %struct.corner** %corn3, metadata !7642, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.declare(metadata %struct.corner** %corn4, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7646, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !7648, metadata !DIExpression()), !dbg !7649
  %2 = load %struct.cube*, %struct.cube** %old.addr, align 8, !dbg !7650
  %corners = getelementptr inbounds %struct.cube, %struct.cube* %2, i32 0, i32 3, !dbg !7651
  %3 = load i32, i32* %c1.addr, align 4, !dbg !7652
  %idxprom = sext i32 %3 to i64, !dbg !7650
  %arrayidx = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners, i64 0, i64 %idxprom, !dbg !7650
  %4 = load %struct.corner*, %struct.corner** %arrayidx, align 8, !dbg !7650
  store %struct.corner* %4, %struct.corner** %corn1, align 8, !dbg !7653
  %5 = load %struct.cube*, %struct.cube** %old.addr, align 8, !dbg !7654
  %corners1 = getelementptr inbounds %struct.cube, %struct.cube* %5, i32 0, i32 3, !dbg !7655
  %6 = load i32, i32* %c2.addr, align 4, !dbg !7656
  %idxprom2 = sext i32 %6 to i64, !dbg !7654
  %arrayidx3 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners1, i64 0, i64 %idxprom2, !dbg !7654
  %7 = load %struct.corner*, %struct.corner** %arrayidx3, align 8, !dbg !7654
  store %struct.corner* %7, %struct.corner** %corn2, align 8, !dbg !7657
  %8 = load %struct.cube*, %struct.cube** %old.addr, align 8, !dbg !7658
  %corners4 = getelementptr inbounds %struct.cube, %struct.cube* %8, i32 0, i32 3, !dbg !7659
  %9 = load i32, i32* %c3.addr, align 4, !dbg !7660
  %idxprom5 = sext i32 %9 to i64, !dbg !7658
  %arrayidx6 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners4, i64 0, i64 %idxprom5, !dbg !7658
  %10 = load %struct.corner*, %struct.corner** %arrayidx6, align 8, !dbg !7658
  store %struct.corner* %10, %struct.corner** %corn3, align 8, !dbg !7661
  %11 = load %struct.cube*, %struct.cube** %old.addr, align 8, !dbg !7662
  %corners7 = getelementptr inbounds %struct.cube, %struct.cube* %11, i32 0, i32 3, !dbg !7663
  %12 = load i32, i32* %c4.addr, align 4, !dbg !7664
  %idxprom8 = sext i32 %12 to i64, !dbg !7662
  %arrayidx9 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners7, i64 0, i64 %idxprom8, !dbg !7662
  %13 = load %struct.corner*, %struct.corner** %arrayidx9, align 8, !dbg !7662
  store %struct.corner* %13, %struct.corner** %corn4, align 8, !dbg !7665
  %14 = load %struct.corner*, %struct.corner** %corn1, align 8, !dbg !7666
  %value = getelementptr inbounds %struct.corner, %struct.corner* %14, i32 0, i32 4, !dbg !7667
  %15 = load float, float* %value, align 8, !dbg !7667
  %cmp = fcmp ogt float %15, 0.000000e+00, !dbg !7668
  %16 = zext i1 %cmp to i64, !dbg !7666
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !7666
  store i32 %cond, i32* %pos, align 4, !dbg !7669
  %17 = load %struct.corner*, %struct.corner** %corn2, align 8, !dbg !7670
  %value10 = getelementptr inbounds %struct.corner, %struct.corner* %17, i32 0, i32 4, !dbg !7672
  %18 = load float, float* %value10, align 8, !dbg !7672
  %cmp11 = fcmp ogt float %18, 0.000000e+00, !dbg !7673
  %conv = zext i1 %cmp11 to i32, !dbg !7673
  %19 = load i32, i32* %pos, align 4, !dbg !7674
  %cmp12 = icmp eq i32 %conv, %19, !dbg !7675
  br i1 %cmp12, label %land.lhs.true, label %if.end, !dbg !7676

land.lhs.true:                                    ; preds = %entry
  %20 = load %struct.corner*, %struct.corner** %corn3, align 8, !dbg !7677
  %value14 = getelementptr inbounds %struct.corner, %struct.corner* %20, i32 0, i32 4, !dbg !7678
  %21 = load float, float* %value14, align 8, !dbg !7678
  %cmp15 = fcmp ogt float %21, 0.000000e+00, !dbg !7679
  %conv16 = zext i1 %cmp15 to i32, !dbg !7679
  %22 = load i32, i32* %pos, align 4, !dbg !7680
  %cmp17 = icmp eq i32 %conv16, %22, !dbg !7681
  br i1 %cmp17, label %land.lhs.true19, label %if.end, !dbg !7682

land.lhs.true19:                                  ; preds = %land.lhs.true
  %23 = load %struct.corner*, %struct.corner** %corn4, align 8, !dbg !7683
  %value20 = getelementptr inbounds %struct.corner, %struct.corner* %23, i32 0, i32 4, !dbg !7684
  %24 = load float, float* %value20, align 8, !dbg !7684
  %cmp21 = fcmp ogt float %24, 0.000000e+00, !dbg !7685
  %conv22 = zext i1 %cmp21 to i32, !dbg !7685
  %25 = load i32, i32* %pos, align 4, !dbg !7686
  %cmp23 = icmp eq i32 %conv22, %25, !dbg !7687
  br i1 %cmp23, label %if.then, label %if.end, !dbg !7688

if.then:                                          ; preds = %land.lhs.true19
  br label %return, !dbg !7689

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true, %entry
  %26 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7690
  %27 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7692
  %centers = getelementptr inbounds %struct.process, %struct.process* %27, i32 0, i32 10, !dbg !7693
  %28 = load %struct.centerlist**, %struct.centerlist*** %centers, align 8, !dbg !7693
  %29 = load i32, i32* %i.addr, align 4, !dbg !7694
  %30 = load i32, i32* %j.addr, align 4, !dbg !7695
  %31 = load i32, i32* %k.addr, align 4, !dbg !7696
  %call = call i32 @setcenter(%struct.process* %26, %struct.centerlist** %28, i32 %29, i32 %30, i32 %31), !dbg !7697
  %tobool = icmp ne i32 %call, 0, !dbg !7697
  br i1 %tobool, label %if.then25, label %if.end26, !dbg !7698

if.then25:                                        ; preds = %if.end
  br label %return, !dbg !7699

if.end26:                                         ; preds = %if.end
  %32 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7701
  %call27 = call i8* @new_pgn_element(%struct.process* %32, i32 88), !dbg !7702
  %33 = bitcast i8* %call27 to %struct.cubes*, !dbg !7703
  %34 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7704
  %cubes28 = getelementptr inbounds %struct.process, %struct.process* %34, i32 0, i32 8, !dbg !7705
  store %struct.cubes* %33, %struct.cubes** %cubes28, align 8, !dbg !7706
  %35 = load %struct.cubes*, %struct.cubes** %oldcubes, align 8, !dbg !7707
  %36 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7708
  %cubes29 = getelementptr inbounds %struct.process, %struct.process* %36, i32 0, i32 8, !dbg !7709
  %37 = load %struct.cubes*, %struct.cubes** %cubes29, align 8, !dbg !7709
  %next = getelementptr inbounds %struct.cubes, %struct.cubes* %37, i32 0, i32 1, !dbg !7710
  store %struct.cubes* %35, %struct.cubes** %next, align 8, !dbg !7711
  %38 = load i32, i32* %i.addr, align 4, !dbg !7712
  %i30 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 0, !dbg !7713
  store i32 %38, i32* %i30, align 8, !dbg !7714
  %39 = load i32, i32* %j.addr, align 4, !dbg !7715
  %j31 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 1, !dbg !7716
  store i32 %39, i32* %j31, align 4, !dbg !7717
  %40 = load i32, i32* %k.addr, align 4, !dbg !7718
  %k32 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 2, !dbg !7719
  store i32 %40, i32* %k32, align 8, !dbg !7720
  store i32 0, i32* %n, align 4, !dbg !7721
  br label %for.cond, !dbg !7723

for.cond:                                         ; preds = %for.inc, %if.end26
  %41 = load i32, i32* %n, align 4, !dbg !7724
  %cmp33 = icmp slt i32 %41, 8, !dbg !7726
  br i1 %cmp33, label %for.body, label %for.end, !dbg !7727

for.body:                                         ; preds = %for.cond
  %corners35 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7728
  %42 = load i32, i32* %n, align 4, !dbg !7729
  %idxprom36 = sext i32 %42 to i64, !dbg !7730
  %arrayidx37 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners35, i64 0, i64 %idxprom36, !dbg !7730
  store %struct.corner* null, %struct.corner** %arrayidx37, align 8, !dbg !7731
  br label %for.inc, !dbg !7730

for.inc:                                          ; preds = %for.body
  %43 = load i32, i32* %n, align 4, !dbg !7732
  %inc = add nsw i32 %43, 1, !dbg !7732
  store i32 %inc, i32* %n, align 4, !dbg !7732
  br label %for.cond, !dbg !7733, !llvm.loop !7734

for.end:                                          ; preds = %for.cond
  %44 = load %struct.corner*, %struct.corner** %corn1, align 8, !dbg !7736
  %corners38 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7737
  %45 = load i32, i32* %c1.addr, align 4, !dbg !7738
  %46 = load i32, i32* %bit.addr, align 4, !dbg !7738
  %shl = shl i32 1, %46, !dbg !7738
  %xor = xor i32 %45, %shl, !dbg !7738
  %idxprom39 = sext i32 %xor to i64, !dbg !7739
  %arrayidx40 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners38, i64 0, i64 %idxprom39, !dbg !7739
  store %struct.corner* %44, %struct.corner** %arrayidx40, align 8, !dbg !7740
  %47 = load %struct.corner*, %struct.corner** %corn2, align 8, !dbg !7741
  %corners41 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7742
  %48 = load i32, i32* %c2.addr, align 4, !dbg !7743
  %49 = load i32, i32* %bit.addr, align 4, !dbg !7743
  %shl42 = shl i32 1, %49, !dbg !7743
  %xor43 = xor i32 %48, %shl42, !dbg !7743
  %idxprom44 = sext i32 %xor43 to i64, !dbg !7744
  %arrayidx45 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners41, i64 0, i64 %idxprom44, !dbg !7744
  store %struct.corner* %47, %struct.corner** %arrayidx45, align 8, !dbg !7745
  %50 = load %struct.corner*, %struct.corner** %corn3, align 8, !dbg !7746
  %corners46 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7747
  %51 = load i32, i32* %c3.addr, align 4, !dbg !7748
  %52 = load i32, i32* %bit.addr, align 4, !dbg !7748
  %shl47 = shl i32 1, %52, !dbg !7748
  %xor48 = xor i32 %51, %shl47, !dbg !7748
  %idxprom49 = sext i32 %xor48 to i64, !dbg !7749
  %arrayidx50 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners46, i64 0, i64 %idxprom49, !dbg !7749
  store %struct.corner* %50, %struct.corner** %arrayidx50, align 8, !dbg !7750
  %53 = load %struct.corner*, %struct.corner** %corn4, align 8, !dbg !7751
  %corners51 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7752
  %54 = load i32, i32* %c4.addr, align 4, !dbg !7753
  %55 = load i32, i32* %bit.addr, align 4, !dbg !7753
  %shl52 = shl i32 1, %55, !dbg !7753
  %xor53 = xor i32 %54, %shl52, !dbg !7753
  %idxprom54 = sext i32 %xor53 to i64, !dbg !7754
  %arrayidx55 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners51, i64 0, i64 %idxprom54, !dbg !7754
  store %struct.corner* %53, %struct.corner** %arrayidx55, align 8, !dbg !7755
  %corners56 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7756
  %arrayidx57 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners56, i64 0, i64 0, !dbg !7758
  %56 = load %struct.corner*, %struct.corner** %arrayidx57, align 8, !dbg !7758
  %cmp58 = icmp eq %struct.corner* %56, null, !dbg !7759
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !7760

if.then60:                                        ; preds = %for.end
  %57 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7761
  %58 = load i32, i32* %i.addr, align 4, !dbg !7762
  %59 = load i32, i32* %j.addr, align 4, !dbg !7763
  %60 = load i32, i32* %k.addr, align 4, !dbg !7764
  %call61 = call %struct.corner* @setcorner(%struct.process* %57, i32 %58, i32 %59, i32 %60), !dbg !7765
  %corners62 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7766
  %arrayidx63 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners62, i64 0, i64 0, !dbg !7767
  store %struct.corner* %call61, %struct.corner** %arrayidx63, align 8, !dbg !7768
  br label %if.end64, !dbg !7767

if.end64:                                         ; preds = %if.then60, %for.end
  %corners65 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7769
  %arrayidx66 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners65, i64 0, i64 1, !dbg !7771
  %61 = load %struct.corner*, %struct.corner** %arrayidx66, align 8, !dbg !7771
  %cmp67 = icmp eq %struct.corner* %61, null, !dbg !7772
  br i1 %cmp67, label %if.then69, label %if.end73, !dbg !7773

if.then69:                                        ; preds = %if.end64
  %62 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7774
  %63 = load i32, i32* %i.addr, align 4, !dbg !7775
  %64 = load i32, i32* %j.addr, align 4, !dbg !7776
  %65 = load i32, i32* %k.addr, align 4, !dbg !7777
  %add = add nsw i32 %65, 1, !dbg !7778
  %call70 = call %struct.corner* @setcorner(%struct.process* %62, i32 %63, i32 %64, i32 %add), !dbg !7779
  %corners71 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7780
  %arrayidx72 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners71, i64 0, i64 1, !dbg !7781
  store %struct.corner* %call70, %struct.corner** %arrayidx72, align 8, !dbg !7782
  br label %if.end73, !dbg !7781

if.end73:                                         ; preds = %if.then69, %if.end64
  %corners74 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7783
  %arrayidx75 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners74, i64 0, i64 2, !dbg !7785
  %66 = load %struct.corner*, %struct.corner** %arrayidx75, align 8, !dbg !7785
  %cmp76 = icmp eq %struct.corner* %66, null, !dbg !7786
  br i1 %cmp76, label %if.then78, label %if.end83, !dbg !7787

if.then78:                                        ; preds = %if.end73
  %67 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7788
  %68 = load i32, i32* %i.addr, align 4, !dbg !7789
  %69 = load i32, i32* %j.addr, align 4, !dbg !7790
  %add79 = add nsw i32 %69, 1, !dbg !7791
  %70 = load i32, i32* %k.addr, align 4, !dbg !7792
  %call80 = call %struct.corner* @setcorner(%struct.process* %67, i32 %68, i32 %add79, i32 %70), !dbg !7793
  %corners81 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7794
  %arrayidx82 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners81, i64 0, i64 2, !dbg !7795
  store %struct.corner* %call80, %struct.corner** %arrayidx82, align 8, !dbg !7796
  br label %if.end83, !dbg !7795

if.end83:                                         ; preds = %if.then78, %if.end73
  %corners84 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7797
  %arrayidx85 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners84, i64 0, i64 3, !dbg !7799
  %71 = load %struct.corner*, %struct.corner** %arrayidx85, align 8, !dbg !7799
  %cmp86 = icmp eq %struct.corner* %71, null, !dbg !7800
  br i1 %cmp86, label %if.then88, label %if.end94, !dbg !7801

if.then88:                                        ; preds = %if.end83
  %72 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7802
  %73 = load i32, i32* %i.addr, align 4, !dbg !7803
  %74 = load i32, i32* %j.addr, align 4, !dbg !7804
  %add89 = add nsw i32 %74, 1, !dbg !7805
  %75 = load i32, i32* %k.addr, align 4, !dbg !7806
  %add90 = add nsw i32 %75, 1, !dbg !7807
  %call91 = call %struct.corner* @setcorner(%struct.process* %72, i32 %73, i32 %add89, i32 %add90), !dbg !7808
  %corners92 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7809
  %arrayidx93 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners92, i64 0, i64 3, !dbg !7810
  store %struct.corner* %call91, %struct.corner** %arrayidx93, align 8, !dbg !7811
  br label %if.end94, !dbg !7810

if.end94:                                         ; preds = %if.then88, %if.end83
  %corners95 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7812
  %arrayidx96 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners95, i64 0, i64 4, !dbg !7814
  %76 = load %struct.corner*, %struct.corner** %arrayidx96, align 8, !dbg !7814
  %cmp97 = icmp eq %struct.corner* %76, null, !dbg !7815
  br i1 %cmp97, label %if.then99, label %if.end104, !dbg !7816

if.then99:                                        ; preds = %if.end94
  %77 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7817
  %78 = load i32, i32* %i.addr, align 4, !dbg !7818
  %add100 = add nsw i32 %78, 1, !dbg !7819
  %79 = load i32, i32* %j.addr, align 4, !dbg !7820
  %80 = load i32, i32* %k.addr, align 4, !dbg !7821
  %call101 = call %struct.corner* @setcorner(%struct.process* %77, i32 %add100, i32 %79, i32 %80), !dbg !7822
  %corners102 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7823
  %arrayidx103 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners102, i64 0, i64 4, !dbg !7824
  store %struct.corner* %call101, %struct.corner** %arrayidx103, align 8, !dbg !7825
  br label %if.end104, !dbg !7824

if.end104:                                        ; preds = %if.then99, %if.end94
  %corners105 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7826
  %arrayidx106 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners105, i64 0, i64 5, !dbg !7828
  %81 = load %struct.corner*, %struct.corner** %arrayidx106, align 8, !dbg !7828
  %cmp107 = icmp eq %struct.corner* %81, null, !dbg !7829
  br i1 %cmp107, label %if.then109, label %if.end115, !dbg !7830

if.then109:                                       ; preds = %if.end104
  %82 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7831
  %83 = load i32, i32* %i.addr, align 4, !dbg !7832
  %add110 = add nsw i32 %83, 1, !dbg !7833
  %84 = load i32, i32* %j.addr, align 4, !dbg !7834
  %85 = load i32, i32* %k.addr, align 4, !dbg !7835
  %add111 = add nsw i32 %85, 1, !dbg !7836
  %call112 = call %struct.corner* @setcorner(%struct.process* %82, i32 %add110, i32 %84, i32 %add111), !dbg !7837
  %corners113 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7838
  %arrayidx114 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners113, i64 0, i64 5, !dbg !7839
  store %struct.corner* %call112, %struct.corner** %arrayidx114, align 8, !dbg !7840
  br label %if.end115, !dbg !7839

if.end115:                                        ; preds = %if.then109, %if.end104
  %corners116 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7841
  %arrayidx117 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners116, i64 0, i64 6, !dbg !7843
  %86 = load %struct.corner*, %struct.corner** %arrayidx117, align 8, !dbg !7843
  %cmp118 = icmp eq %struct.corner* %86, null, !dbg !7844
  br i1 %cmp118, label %if.then120, label %if.end126, !dbg !7845

if.then120:                                       ; preds = %if.end115
  %87 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7846
  %88 = load i32, i32* %i.addr, align 4, !dbg !7847
  %add121 = add nsw i32 %88, 1, !dbg !7848
  %89 = load i32, i32* %j.addr, align 4, !dbg !7849
  %add122 = add nsw i32 %89, 1, !dbg !7850
  %90 = load i32, i32* %k.addr, align 4, !dbg !7851
  %call123 = call %struct.corner* @setcorner(%struct.process* %87, i32 %add121, i32 %add122, i32 %90), !dbg !7852
  %corners124 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7853
  %arrayidx125 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners124, i64 0, i64 6, !dbg !7854
  store %struct.corner* %call123, %struct.corner** %arrayidx125, align 8, !dbg !7855
  br label %if.end126, !dbg !7854

if.end126:                                        ; preds = %if.then120, %if.end115
  %corners127 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7856
  %arrayidx128 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners127, i64 0, i64 7, !dbg !7858
  %91 = load %struct.corner*, %struct.corner** %arrayidx128, align 8, !dbg !7858
  %cmp129 = icmp eq %struct.corner* %91, null, !dbg !7859
  br i1 %cmp129, label %if.then131, label %if.end138, !dbg !7860

if.then131:                                       ; preds = %if.end126
  %92 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7861
  %93 = load i32, i32* %i.addr, align 4, !dbg !7862
  %add132 = add nsw i32 %93, 1, !dbg !7863
  %94 = load i32, i32* %j.addr, align 4, !dbg !7864
  %add133 = add nsw i32 %94, 1, !dbg !7865
  %95 = load i32, i32* %k.addr, align 4, !dbg !7866
  %add134 = add nsw i32 %95, 1, !dbg !7867
  %call135 = call %struct.corner* @setcorner(%struct.process* %92, i32 %add132, i32 %add133, i32 %add134), !dbg !7868
  %corners136 = getelementptr inbounds %struct.cube, %struct.cube* %newc, i32 0, i32 3, !dbg !7869
  %arrayidx137 = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners136, i64 0, i64 7, !dbg !7870
  store %struct.corner* %call135, %struct.corner** %arrayidx137, align 8, !dbg !7871
  br label %if.end138, !dbg !7870

if.end138:                                        ; preds = %if.then131, %if.end126
  %96 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !7872
  %cubes139 = getelementptr inbounds %struct.process, %struct.process* %96, i32 0, i32 8, !dbg !7873
  %97 = load %struct.cubes*, %struct.cubes** %cubes139, align 8, !dbg !7873
  %cube = getelementptr inbounds %struct.cubes, %struct.cubes* %97, i32 0, i32 0, !dbg !7874
  %98 = bitcast %struct.cube* %cube to i8*, !dbg !7875
  %99 = bitcast %struct.cube* %newc to i8*, !dbg !7875
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 80, i1 false), !dbg !7875
  br label %return, !dbg !7876

return:                                           ; preds = %if.end138, %if.then25, %if.then
  ret void, !dbg !7876
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @nextcwedge(i32 %edge, i32 %face) #0 !dbg !7877 {
entry:
  %retval = alloca i32, align 4
  %edge.addr = alloca i32, align 4
  %face.addr = alloca i32, align 4
  store i32 %edge, i32* %edge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edge.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  store i32 %face, i32* %face.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face.addr, metadata !7882, metadata !DIExpression()), !dbg !7883
  %0 = load i32, i32* %edge.addr, align 4, !dbg !7884
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb4
    i32 3, label %sw.bb7
    i32 4, label %sw.bb10
    i32 5, label %sw.bb13
    i32 6, label %sw.bb16
    i32 7, label %sw.bb19
    i32 8, label %sw.bb22
    i32 9, label %sw.bb25
    i32 10, label %sw.bb28
    i32 11, label %sw.bb31
  ], !dbg !7885

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %face.addr, align 4, !dbg !7886
  %cmp = icmp eq i32 %1, 0, !dbg !7888
  %2 = zext i1 %cmp to i64, !dbg !7889
  %cond = select i1 %cmp, i32 3, i32 8, !dbg !7889
  store i32 %cond, i32* %retval, align 4, !dbg !7890
  br label %return, !dbg !7890

sw.bb1:                                           ; preds = %entry
  %3 = load i32, i32* %face.addr, align 4, !dbg !7891
  %cmp2 = icmp eq i32 %3, 0, !dbg !7892
  %4 = zext i1 %cmp2 to i64, !dbg !7893
  %cond3 = select i1 %cmp2, i32 2, i32 11, !dbg !7893
  store i32 %cond3, i32* %retval, align 4, !dbg !7894
  br label %return, !dbg !7894

sw.bb4:                                           ; preds = %entry
  %5 = load i32, i32* %face.addr, align 4, !dbg !7895
  %cmp5 = icmp eq i32 %5, 0, !dbg !7896
  %6 = zext i1 %cmp5 to i64, !dbg !7897
  %cond6 = select i1 %cmp5, i32 0, i32 10, !dbg !7897
  store i32 %cond6, i32* %retval, align 4, !dbg !7898
  br label %return, !dbg !7898

sw.bb7:                                           ; preds = %entry
  %7 = load i32, i32* %face.addr, align 4, !dbg !7899
  %cmp8 = icmp eq i32 %7, 0, !dbg !7900
  %8 = zext i1 %cmp8 to i64, !dbg !7901
  %cond9 = select i1 %cmp8, i32 1, i32 9, !dbg !7901
  store i32 %cond9, i32* %retval, align 4, !dbg !7902
  br label %return, !dbg !7902

sw.bb10:                                          ; preds = %entry
  %9 = load i32, i32* %face.addr, align 4, !dbg !7903
  %cmp11 = icmp eq i32 %9, 1, !dbg !7904
  %10 = zext i1 %cmp11 to i64, !dbg !7905
  %cond12 = select i1 %cmp11, i32 6, i32 9, !dbg !7905
  store i32 %cond12, i32* %retval, align 4, !dbg !7906
  br label %return, !dbg !7906

sw.bb13:                                          ; preds = %entry
  %11 = load i32, i32* %face.addr, align 4, !dbg !7907
  %cmp14 = icmp eq i32 %11, 1, !dbg !7908
  %12 = zext i1 %cmp14 to i64, !dbg !7909
  %cond15 = select i1 %cmp14, i32 7, i32 10, !dbg !7909
  store i32 %cond15, i32* %retval, align 4, !dbg !7910
  br label %return, !dbg !7910

sw.bb16:                                          ; preds = %entry
  %13 = load i32, i32* %face.addr, align 4, !dbg !7911
  %cmp17 = icmp eq i32 %13, 1, !dbg !7912
  %14 = zext i1 %cmp17 to i64, !dbg !7913
  %cond18 = select i1 %cmp17, i32 5, i32 8, !dbg !7913
  store i32 %cond18, i32* %retval, align 4, !dbg !7914
  br label %return, !dbg !7914

sw.bb19:                                          ; preds = %entry
  %15 = load i32, i32* %face.addr, align 4, !dbg !7915
  %cmp20 = icmp eq i32 %15, 1, !dbg !7916
  %16 = zext i1 %cmp20 to i64, !dbg !7917
  %cond21 = select i1 %cmp20, i32 4, i32 11, !dbg !7917
  store i32 %cond21, i32* %retval, align 4, !dbg !7918
  br label %return, !dbg !7918

sw.bb22:                                          ; preds = %entry
  %17 = load i32, i32* %face.addr, align 4, !dbg !7919
  %cmp23 = icmp eq i32 %17, 2, !dbg !7920
  %18 = zext i1 %cmp23 to i64, !dbg !7921
  %cond24 = select i1 %cmp23, i32 4, i32 2, !dbg !7921
  store i32 %cond24, i32* %retval, align 4, !dbg !7922
  br label %return, !dbg !7922

sw.bb25:                                          ; preds = %entry
  %19 = load i32, i32* %face.addr, align 4, !dbg !7923
  %cmp26 = icmp eq i32 %19, 2, !dbg !7924
  %20 = zext i1 %cmp26 to i64, !dbg !7925
  %cond27 = select i1 %cmp26, i32 0, i32 7, !dbg !7925
  store i32 %cond27, i32* %retval, align 4, !dbg !7926
  br label %return, !dbg !7926

sw.bb28:                                          ; preds = %entry
  %21 = load i32, i32* %face.addr, align 4, !dbg !7927
  %cmp29 = icmp eq i32 %21, 3, !dbg !7928
  %22 = zext i1 %cmp29 to i64, !dbg !7929
  %cond30 = select i1 %cmp29, i32 1, i32 6, !dbg !7929
  store i32 %cond30, i32* %retval, align 4, !dbg !7930
  br label %return, !dbg !7930

sw.bb31:                                          ; preds = %entry
  %23 = load i32, i32* %face.addr, align 4, !dbg !7931
  %cmp32 = icmp eq i32 %23, 3, !dbg !7932
  %24 = zext i1 %cmp32 to i64, !dbg !7933
  %cond33 = select i1 %cmp32, i32 5, i32 3, !dbg !7933
  store i32 %cond33, i32* %retval, align 4, !dbg !7934
  br label %return, !dbg !7934

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7935
  br label %return, !dbg !7935

return:                                           ; preds = %sw.epilog, %sw.bb31, %sw.bb28, %sw.bb25, %sw.bb22, %sw.bb19, %sw.bb16, %sw.bb13, %sw.bb10, %sw.bb7, %sw.bb4, %sw.bb1, %sw.bb
  %25 = load i32, i32* %retval, align 4, !dbg !7936
  ret i32 %25, !dbg !7936
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @otherface(i32 %edge, i32 %face) #0 !dbg !7937 {
entry:
  %edge.addr = alloca i32, align 4
  %face.addr = alloca i32, align 4
  %other = alloca i32, align 4
  store i32 %edge, i32* %edge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edge.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  store i32 %face, i32* %face.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata i32* %other, metadata !7942, metadata !DIExpression()), !dbg !7943
  %0 = load i32, i32* %edge.addr, align 4, !dbg !7944
  %idxprom = sext i32 %0 to i64, !dbg !7945
  %arrayidx = getelementptr inbounds [12 x i32], [12 x i32]* @leftface, i64 0, i64 %idxprom, !dbg !7945
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7945
  store i32 %1, i32* %other, align 4, !dbg !7943
  %2 = load i32, i32* %face.addr, align 4, !dbg !7946
  %3 = load i32, i32* %other, align 4, !dbg !7947
  %cmp = icmp eq i32 %2, %3, !dbg !7948
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7946

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %edge.addr, align 4, !dbg !7949
  %idxprom1 = sext i32 %4 to i64, !dbg !7950
  %arrayidx2 = getelementptr inbounds [12 x i32], [12 x i32]* @rightface, i64 0, i64 %idxprom1, !dbg !7950
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !7950
  br label %cond.end, !dbg !7946

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %other, align 4, !dbg !7951
  br label %cond.end, !dbg !7946

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !7946
  ret i32 %cond, !dbg !7952
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !7953 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7956, metadata !DIExpression()), !dbg !7957
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7958, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !7960, metadata !DIExpression()), !dbg !7961
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !7962
  %0 = load float*, float** %b.addr, align 8, !dbg !7963
  %1 = load float*, float** %a.addr, align 8, !dbg !7964
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !7965
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !7966
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !7967
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !7968
  ret float %call, !dbg !7969
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_fff(float %a, float %b, float %c) #0 !dbg !7970 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7974, metadata !DIExpression()), !dbg !7975
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  %0 = load float, float* %a.addr, align 4, !dbg !7980
  %1 = load float, float* %b.addr, align 4, !dbg !7981
  %call = call float @max_ff(float %0, float %1), !dbg !7982
  %2 = load float, float* %c.addr, align 4, !dbg !7983
  %call1 = call float @max_ff(float %call, float %2), !dbg !7984
  ret float %call1, !dbg !7985
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @add_cube(%struct.process* %process, i32 %i, i32 %j, i32 %k, i32 %count) #0 !dbg !7986 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %ncube = alloca %struct.cubes*, align 8
  %n = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !7989, metadata !DIExpression()), !dbg !7990
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7991, metadata !DIExpression()), !dbg !7992
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !7993, metadata !DIExpression()), !dbg !7994
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !7995, metadata !DIExpression()), !dbg !7996
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !7997, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.declare(metadata %struct.cubes** %ncube, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8001, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8003, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.declare(metadata i32* %b, metadata !8005, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.declare(metadata i32* %c, metadata !8007, metadata !DIExpression()), !dbg !8008
  %0 = load i32, i32* %i.addr, align 4, !dbg !8009
  %sub = sub nsw i32 %0, 1, !dbg !8011
  store i32 %sub, i32* %a, align 4, !dbg !8012
  br label %for.cond, !dbg !8013

for.cond:                                         ; preds = %for.inc37, %entry
  %1 = load i32, i32* %a, align 4, !dbg !8014
  %2 = load i32, i32* %i.addr, align 4, !dbg !8016
  %3 = load i32, i32* %count.addr, align 4, !dbg !8017
  %add = add nsw i32 %2, %3, !dbg !8018
  %cmp = icmp slt i32 %1, %add, !dbg !8019
  br i1 %cmp, label %for.body, label %for.end39, !dbg !8020

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %j.addr, align 4, !dbg !8021
  %sub1 = sub nsw i32 %4, 1, !dbg !8023
  store i32 %sub1, i32* %b, align 4, !dbg !8024
  br label %for.cond2, !dbg !8025

for.cond2:                                        ; preds = %for.inc34, %for.body
  %5 = load i32, i32* %b, align 4, !dbg !8026
  %6 = load i32, i32* %j.addr, align 4, !dbg !8028
  %7 = load i32, i32* %count.addr, align 4, !dbg !8029
  %add3 = add nsw i32 %6, %7, !dbg !8030
  %cmp4 = icmp slt i32 %5, %add3, !dbg !8031
  br i1 %cmp4, label %for.body5, label %for.end36, !dbg !8032

for.body5:                                        ; preds = %for.cond2
  %8 = load i32, i32* %k.addr, align 4, !dbg !8033
  %sub6 = sub nsw i32 %8, 1, !dbg !8035
  store i32 %sub6, i32* %c, align 4, !dbg !8036
  br label %for.cond7, !dbg !8037

for.cond7:                                        ; preds = %for.inc31, %for.body5
  %9 = load i32, i32* %c, align 4, !dbg !8038
  %10 = load i32, i32* %k.addr, align 4, !dbg !8040
  %11 = load i32, i32* %count.addr, align 4, !dbg !8041
  %add8 = add nsw i32 %10, %11, !dbg !8042
  %cmp9 = icmp slt i32 %9, %add8, !dbg !8043
  br i1 %cmp9, label %for.body10, label %for.end33, !dbg !8044

for.body10:                                       ; preds = %for.cond7
  %12 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8045
  %13 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8048
  %centers = getelementptr inbounds %struct.process, %struct.process* %13, i32 0, i32 10, !dbg !8049
  %14 = load %struct.centerlist**, %struct.centerlist*** %centers, align 8, !dbg !8049
  %15 = load i32, i32* %a, align 4, !dbg !8050
  %16 = load i32, i32* %b, align 4, !dbg !8051
  %17 = load i32, i32* %c, align 4, !dbg !8052
  %call = call i32 @setcenter(%struct.process* %12, %struct.centerlist** %14, i32 %15, i32 %16, i32 %17), !dbg !8053
  %cmp11 = icmp eq i32 %call, 0, !dbg !8054
  br i1 %cmp11, label %if.then, label %if.end, !dbg !8055

if.then:                                          ; preds = %for.body10
  %18 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8056
  %call12 = call i8* @new_pgn_element(%struct.process* %18, i32 88), !dbg !8058
  %19 = bitcast i8* %call12 to %struct.cubes*, !dbg !8059
  store %struct.cubes* %19, %struct.cubes** %ncube, align 8, !dbg !8060
  %20 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8061
  %cubes = getelementptr inbounds %struct.process, %struct.process* %20, i32 0, i32 8, !dbg !8062
  %21 = load %struct.cubes*, %struct.cubes** %cubes, align 8, !dbg !8062
  %22 = load %struct.cubes*, %struct.cubes** %ncube, align 8, !dbg !8063
  %next = getelementptr inbounds %struct.cubes, %struct.cubes* %22, i32 0, i32 1, !dbg !8064
  store %struct.cubes* %21, %struct.cubes** %next, align 8, !dbg !8065
  %23 = load %struct.cubes*, %struct.cubes** %ncube, align 8, !dbg !8066
  %24 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8067
  %cubes13 = getelementptr inbounds %struct.process, %struct.process* %24, i32 0, i32 8, !dbg !8068
  store %struct.cubes* %23, %struct.cubes** %cubes13, align 8, !dbg !8069
  %25 = load i32, i32* %a, align 4, !dbg !8070
  %26 = load %struct.cubes*, %struct.cubes** %ncube, align 8, !dbg !8071
  %cube = getelementptr inbounds %struct.cubes, %struct.cubes* %26, i32 0, i32 0, !dbg !8072
  %i14 = getelementptr inbounds %struct.cube, %struct.cube* %cube, i32 0, i32 0, !dbg !8073
  store i32 %25, i32* %i14, align 8, !dbg !8074
  %27 = load i32, i32* %b, align 4, !dbg !8075
  %28 = load %struct.cubes*, %struct.cubes** %ncube, align 8, !dbg !8076
  %cube15 = getelementptr inbounds %struct.cubes, %struct.cubes* %28, i32 0, i32 0, !dbg !8077
  %j16 = getelementptr inbounds %struct.cube, %struct.cube* %cube15, i32 0, i32 1, !dbg !8078
  store i32 %27, i32* %j16, align 4, !dbg !8079
  %29 = load i32, i32* %c, align 4, !dbg !8080
  %30 = load %struct.cubes*, %struct.cubes** %ncube, align 8, !dbg !8081
  %cube17 = getelementptr inbounds %struct.cubes, %struct.cubes* %30, i32 0, i32 0, !dbg !8082
  %k18 = getelementptr inbounds %struct.cube, %struct.cube* %cube17, i32 0, i32 2, !dbg !8083
  store i32 %29, i32* %k18, align 8, !dbg !8084
  store i32 0, i32* %n, align 4, !dbg !8085
  br label %for.cond19, !dbg !8087

for.cond19:                                       ; preds = %for.inc, %if.then
  %31 = load i32, i32* %n, align 4, !dbg !8088
  %cmp20 = icmp slt i32 %31, 8, !dbg !8090
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !8091

for.body21:                                       ; preds = %for.cond19
  %32 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8092
  %33 = load i32, i32* %a, align 4, !dbg !8093
  %34 = load i32, i32* %n, align 4, !dbg !8094
  %shr = ashr i32 %34, 2, !dbg !8094
  %and = and i32 %shr, 1, !dbg !8094
  %add22 = add nsw i32 %33, %and, !dbg !8095
  %35 = load i32, i32* %b, align 4, !dbg !8096
  %36 = load i32, i32* %n, align 4, !dbg !8097
  %shr23 = ashr i32 %36, 1, !dbg !8097
  %and24 = and i32 %shr23, 1, !dbg !8097
  %add25 = add nsw i32 %35, %and24, !dbg !8098
  %37 = load i32, i32* %c, align 4, !dbg !8099
  %38 = load i32, i32* %n, align 4, !dbg !8100
  %shr26 = ashr i32 %38, 0, !dbg !8100
  %and27 = and i32 %shr26, 1, !dbg !8100
  %add28 = add nsw i32 %37, %and27, !dbg !8101
  %call29 = call %struct.corner* @setcorner(%struct.process* %32, i32 %add22, i32 %add25, i32 %add28), !dbg !8102
  %39 = load %struct.cubes*, %struct.cubes** %ncube, align 8, !dbg !8103
  %cube30 = getelementptr inbounds %struct.cubes, %struct.cubes* %39, i32 0, i32 0, !dbg !8104
  %corners = getelementptr inbounds %struct.cube, %struct.cube* %cube30, i32 0, i32 3, !dbg !8105
  %40 = load i32, i32* %n, align 4, !dbg !8106
  %idxprom = sext i32 %40 to i64, !dbg !8103
  %arrayidx = getelementptr inbounds [8 x %struct.corner*], [8 x %struct.corner*]* %corners, i64 0, i64 %idxprom, !dbg !8103
  store %struct.corner* %call29, %struct.corner** %arrayidx, align 8, !dbg !8107
  br label %for.inc, !dbg !8103

for.inc:                                          ; preds = %for.body21
  %41 = load i32, i32* %n, align 4, !dbg !8108
  %inc = add nsw i32 %41, 1, !dbg !8108
  store i32 %inc, i32* %n, align 4, !dbg !8108
  br label %for.cond19, !dbg !8109, !llvm.loop !8110

for.end:                                          ; preds = %for.cond19
  br label %if.end, !dbg !8112

if.end:                                           ; preds = %for.end, %for.body10
  br label %for.inc31, !dbg !8113

for.inc31:                                        ; preds = %if.end
  %42 = load i32, i32* %c, align 4, !dbg !8114
  %inc32 = add nsw i32 %42, 1, !dbg !8114
  store i32 %inc32, i32* %c, align 4, !dbg !8114
  br label %for.cond7, !dbg !8115, !llvm.loop !8116

for.end33:                                        ; preds = %for.cond7
  br label %for.inc34, !dbg !8117

for.inc34:                                        ; preds = %for.end33
  %43 = load i32, i32* %b, align 4, !dbg !8118
  %inc35 = add nsw i32 %43, 1, !dbg !8118
  store i32 %inc35, i32* %b, align 4, !dbg !8118
  br label %for.cond2, !dbg !8119, !llvm.loop !8120

for.end36:                                        ; preds = %for.cond2
  br label %for.inc37, !dbg !8121

for.inc37:                                        ; preds = %for.end36
  %44 = load i32, i32* %a, align 4, !dbg !8122
  %inc38 = add nsw i32 %44, 1, !dbg !8122
  store i32 %inc38, i32* %a, align 4, !dbg !8122
  br label %for.cond, !dbg !8123, !llvm.loop !8124

for.end39:                                        ; preds = %for.cond
  ret void, !dbg !8126
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8127 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8130, metadata !DIExpression()), !dbg !8131
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8134, metadata !DIExpression()), !dbg !8135
  %0 = load float*, float** %a.addr, align 8, !dbg !8136
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8136
  %1 = load float, float* %arrayidx, align 4, !dbg !8136
  %2 = load float*, float** %b.addr, align 8, !dbg !8137
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8137
  %3 = load float, float* %arrayidx1, align 4, !dbg !8137
  %sub = fsub float %1, %3, !dbg !8138
  %4 = load float*, float** %r.addr, align 8, !dbg !8139
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8139
  store float %sub, float* %arrayidx2, align 4, !dbg !8140
  %5 = load float*, float** %a.addr, align 8, !dbg !8141
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8141
  %6 = load float, float* %arrayidx3, align 4, !dbg !8141
  %7 = load float*, float** %b.addr, align 8, !dbg !8142
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8142
  %8 = load float, float* %arrayidx4, align 4, !dbg !8142
  %sub5 = fsub float %6, %8, !dbg !8143
  %9 = load float*, float** %r.addr, align 8, !dbg !8144
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8144
  store float %sub5, float* %arrayidx6, align 4, !dbg !8145
  %10 = load float*, float** %a.addr, align 8, !dbg !8146
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !8146
  %11 = load float, float* %arrayidx7, align 4, !dbg !8146
  %12 = load float*, float** %b.addr, align 8, !dbg !8147
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8147
  %13 = load float, float* %arrayidx8, align 4, !dbg !8147
  %sub9 = fsub float %11, %13, !dbg !8148
  %14 = load float*, float** %r.addr, align 8, !dbg !8149
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !8149
  store float %sub9, float* %arrayidx10, align 4, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !8152 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8153, metadata !DIExpression()), !dbg !8154
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8155, metadata !DIExpression()), !dbg !8156
  %0 = load float*, float** %a.addr, align 8, !dbg !8157
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8157
  %1 = load float, float* %arrayidx, align 4, !dbg !8157
  %2 = load float*, float** %b.addr, align 8, !dbg !8158
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8158
  %3 = load float, float* %arrayidx1, align 4, !dbg !8158
  %mul = fmul float %1, %3, !dbg !8159
  %4 = load float*, float** %a.addr, align 8, !dbg !8160
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8160
  %5 = load float, float* %arrayidx2, align 4, !dbg !8160
  %6 = load float*, float** %b.addr, align 8, !dbg !8161
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8161
  %7 = load float, float* %arrayidx3, align 4, !dbg !8161
  %mul4 = fmul float %5, %7, !dbg !8162
  %add = fadd float %mul, %mul4, !dbg !8163
  %8 = load float*, float** %a.addr, align 8, !dbg !8164
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8164
  %9 = load float, float* %arrayidx5, align 4, !dbg !8164
  %10 = load float*, float** %b.addr, align 8, !dbg !8165
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8165
  %11 = load float, float* %arrayidx6, align 4, !dbg !8165
  %mul7 = fmul float %9, %11, !dbg !8166
  %add8 = fadd float %add, %mul7, !dbg !8167
  ret float %add8, !dbg !8168
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !8169 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8172, metadata !DIExpression()), !dbg !8173
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8174, metadata !DIExpression()), !dbg !8175
  %0 = load float, float* %a.addr, align 4, !dbg !8176
  %1 = load float, float* %b.addr, align 4, !dbg !8177
  %cmp = fcmp ogt float %0, %1, !dbg !8178
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8179

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !8180
  br label %cond.end, !dbg !8179

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !8181
  br label %cond.end, !dbg !8179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8179
  ret float %cond, !dbg !8182
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @setcenter(%struct.process* %process, %struct.centerlist** %table, i32 %i, i32 %j, i32 %k) #0 !dbg !8183 {
entry:
  %retval = alloca i32, align 4
  %process.addr = alloca %struct.process*, align 8
  %table.addr = alloca %struct.centerlist**, align 8
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %index = alloca i32, align 4
  %newc = alloca %struct.centerlist*, align 8
  %l = alloca %struct.centerlist*, align 8
  %q = alloca %struct.centerlist*, align 8
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  store %struct.centerlist** %table, %struct.centerlist*** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.centerlist*** %table.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !8190, metadata !DIExpression()), !dbg !8191
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !8194, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8196, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.declare(metadata %struct.centerlist** %newc, metadata !8198, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.declare(metadata %struct.centerlist** %l, metadata !8200, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.declare(metadata %struct.centerlist** %q, metadata !8202, metadata !DIExpression()), !dbg !8203
  %0 = load i32, i32* %i.addr, align 4, !dbg !8204
  %and = and i32 %0, 31, !dbg !8204
  %shl = shl i32 %and, 5, !dbg !8204
  %1 = load i32, i32* %j.addr, align 4, !dbg !8204
  %and1 = and i32 %1, 31, !dbg !8204
  %or = or i32 %shl, %and1, !dbg !8204
  %shl2 = shl i32 %or, 5, !dbg !8204
  %2 = load i32, i32* %k.addr, align 4, !dbg !8204
  %and3 = and i32 %2, 31, !dbg !8204
  %or4 = or i32 %shl2, %and3, !dbg !8204
  store i32 %or4, i32* %index, align 4, !dbg !8205
  %3 = load %struct.centerlist**, %struct.centerlist*** %table.addr, align 8, !dbg !8206
  %4 = load i32, i32* %index, align 4, !dbg !8207
  %idxprom = sext i32 %4 to i64, !dbg !8206
  %arrayidx = getelementptr inbounds %struct.centerlist*, %struct.centerlist** %3, i64 %idxprom, !dbg !8206
  %5 = load %struct.centerlist*, %struct.centerlist** %arrayidx, align 8, !dbg !8206
  store %struct.centerlist* %5, %struct.centerlist** %q, align 8, !dbg !8208
  %6 = load %struct.centerlist*, %struct.centerlist** %q, align 8, !dbg !8209
  store %struct.centerlist* %6, %struct.centerlist** %l, align 8, !dbg !8211
  br label %for.cond, !dbg !8212

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.centerlist*, %struct.centerlist** %l, align 8, !dbg !8213
  %cmp = icmp ne %struct.centerlist* %7, null, !dbg !8215
  br i1 %cmp, label %for.body, label %for.end, !dbg !8216

for.body:                                         ; preds = %for.cond
  %8 = load %struct.centerlist*, %struct.centerlist** %l, align 8, !dbg !8217
  %i5 = getelementptr inbounds %struct.centerlist, %struct.centerlist* %8, i32 0, i32 0, !dbg !8220
  %9 = load i32, i32* %i5, align 8, !dbg !8220
  %10 = load i32, i32* %i.addr, align 4, !dbg !8221
  %cmp6 = icmp eq i32 %9, %10, !dbg !8222
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !8223

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.centerlist*, %struct.centerlist** %l, align 8, !dbg !8224
  %j7 = getelementptr inbounds %struct.centerlist, %struct.centerlist* %11, i32 0, i32 1, !dbg !8225
  %12 = load i32, i32* %j7, align 4, !dbg !8225
  %13 = load i32, i32* %j.addr, align 4, !dbg !8226
  %cmp8 = icmp eq i32 %12, %13, !dbg !8227
  br i1 %cmp8, label %land.lhs.true9, label %if.end, !dbg !8228

land.lhs.true9:                                   ; preds = %land.lhs.true
  %14 = load %struct.centerlist*, %struct.centerlist** %l, align 8, !dbg !8229
  %k10 = getelementptr inbounds %struct.centerlist, %struct.centerlist* %14, i32 0, i32 2, !dbg !8230
  %15 = load i32, i32* %k10, align 8, !dbg !8230
  %16 = load i32, i32* %k.addr, align 4, !dbg !8231
  %cmp11 = icmp eq i32 %15, %16, !dbg !8232
  br i1 %cmp11, label %if.then, label %if.end, !dbg !8233

if.then:                                          ; preds = %land.lhs.true9
  store i32 1, i32* %retval, align 4, !dbg !8234
  br label %return, !dbg !8234

if.end:                                           ; preds = %land.lhs.true9, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8235

for.inc:                                          ; preds = %if.end
  %17 = load %struct.centerlist*, %struct.centerlist** %l, align 8, !dbg !8236
  %next = getelementptr inbounds %struct.centerlist, %struct.centerlist* %17, i32 0, i32 3, !dbg !8237
  %18 = load %struct.centerlist*, %struct.centerlist** %next, align 8, !dbg !8237
  store %struct.centerlist* %18, %struct.centerlist** %l, align 8, !dbg !8238
  br label %for.cond, !dbg !8239, !llvm.loop !8240

for.end:                                          ; preds = %for.cond
  %19 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8242
  %call = call i8* @new_pgn_element(%struct.process* %19, i32 24), !dbg !8243
  %20 = bitcast i8* %call to %struct.centerlist*, !dbg !8244
  store %struct.centerlist* %20, %struct.centerlist** %newc, align 8, !dbg !8245
  %21 = load i32, i32* %i.addr, align 4, !dbg !8246
  %22 = load %struct.centerlist*, %struct.centerlist** %newc, align 8, !dbg !8247
  %i12 = getelementptr inbounds %struct.centerlist, %struct.centerlist* %22, i32 0, i32 0, !dbg !8248
  store i32 %21, i32* %i12, align 8, !dbg !8249
  %23 = load i32, i32* %j.addr, align 4, !dbg !8250
  %24 = load %struct.centerlist*, %struct.centerlist** %newc, align 8, !dbg !8251
  %j13 = getelementptr inbounds %struct.centerlist, %struct.centerlist* %24, i32 0, i32 1, !dbg !8252
  store i32 %23, i32* %j13, align 4, !dbg !8253
  %25 = load i32, i32* %k.addr, align 4, !dbg !8254
  %26 = load %struct.centerlist*, %struct.centerlist** %newc, align 8, !dbg !8255
  %k14 = getelementptr inbounds %struct.centerlist, %struct.centerlist* %26, i32 0, i32 2, !dbg !8256
  store i32 %25, i32* %k14, align 8, !dbg !8257
  %27 = load %struct.centerlist*, %struct.centerlist** %q, align 8, !dbg !8258
  %28 = load %struct.centerlist*, %struct.centerlist** %newc, align 8, !dbg !8259
  %next15 = getelementptr inbounds %struct.centerlist, %struct.centerlist* %28, i32 0, i32 3, !dbg !8260
  store %struct.centerlist* %27, %struct.centerlist** %next15, align 8, !dbg !8261
  %29 = load %struct.centerlist*, %struct.centerlist** %newc, align 8, !dbg !8262
  %30 = load %struct.centerlist**, %struct.centerlist*** %table.addr, align 8, !dbg !8263
  %31 = load i32, i32* %index, align 4, !dbg !8264
  %idxprom16 = sext i32 %31 to i64, !dbg !8263
  %arrayidx17 = getelementptr inbounds %struct.centerlist*, %struct.centerlist** %30, i64 %idxprom16, !dbg !8263
  store %struct.centerlist* %29, %struct.centerlist** %arrayidx17, align 8, !dbg !8265
  store i32 0, i32* %retval, align 4, !dbg !8266
  br label %return, !dbg !8266

return:                                           ; preds = %for.end, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !8267
  ret i32 %32, !dbg !8267
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.corner* @setcorner(%struct.process* %process, i32 %i, i32 %j, i32 %k) #0 !dbg !8268 {
entry:
  %retval = alloca %struct.corner*, align 8
  %process.addr = alloca %struct.process*, align 8
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %c = alloca %struct.corner*, align 8
  %index = alloca i32, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !8271, metadata !DIExpression()), !dbg !8272
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !8277, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.declare(metadata %struct.corner** %c, metadata !8279, metadata !DIExpression()), !dbg !8280
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8281, metadata !DIExpression()), !dbg !8282
  %0 = load i32, i32* %i.addr, align 4, !dbg !8283
  %and = and i32 %0, 31, !dbg !8283
  %shl = shl i32 %and, 5, !dbg !8283
  %1 = load i32, i32* %j.addr, align 4, !dbg !8283
  %and1 = and i32 %1, 31, !dbg !8283
  %or = or i32 %shl, %and1, !dbg !8283
  %shl2 = shl i32 %or, 5, !dbg !8283
  %2 = load i32, i32* %k.addr, align 4, !dbg !8283
  %and3 = and i32 %2, 31, !dbg !8283
  %or4 = or i32 %shl2, %and3, !dbg !8283
  store i32 %or4, i32* %index, align 4, !dbg !8284
  %3 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8285
  %corners = getelementptr inbounds %struct.process, %struct.process* %3, i32 0, i32 11, !dbg !8286
  %4 = load %struct.corner**, %struct.corner*** %corners, align 8, !dbg !8286
  %5 = load i32, i32* %index, align 4, !dbg !8287
  %idxprom = sext i32 %5 to i64, !dbg !8285
  %arrayidx = getelementptr inbounds %struct.corner*, %struct.corner** %4, i64 %idxprom, !dbg !8285
  %6 = load %struct.corner*, %struct.corner** %arrayidx, align 8, !dbg !8285
  store %struct.corner* %6, %struct.corner** %c, align 8, !dbg !8288
  br label %for.cond, !dbg !8289

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8290
  %cmp = icmp ne %struct.corner* %7, null, !dbg !8293
  br i1 %cmp, label %for.body, label %for.end, !dbg !8294

for.body:                                         ; preds = %for.cond
  %8 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8295
  %i5 = getelementptr inbounds %struct.corner, %struct.corner* %8, i32 0, i32 0, !dbg !8298
  %9 = load i32, i32* %i5, align 8, !dbg !8298
  %10 = load i32, i32* %i.addr, align 4, !dbg !8299
  %cmp6 = icmp eq i32 %9, %10, !dbg !8300
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !8301

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8302
  %j7 = getelementptr inbounds %struct.corner, %struct.corner* %11, i32 0, i32 1, !dbg !8303
  %12 = load i32, i32* %j7, align 4, !dbg !8303
  %13 = load i32, i32* %j.addr, align 4, !dbg !8304
  %cmp8 = icmp eq i32 %12, %13, !dbg !8305
  br i1 %cmp8, label %land.lhs.true9, label %if.end, !dbg !8306

land.lhs.true9:                                   ; preds = %land.lhs.true
  %14 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8307
  %k10 = getelementptr inbounds %struct.corner, %struct.corner* %14, i32 0, i32 2, !dbg !8308
  %15 = load i32, i32* %k10, align 8, !dbg !8308
  %16 = load i32, i32* %k.addr, align 4, !dbg !8309
  %cmp11 = icmp eq i32 %15, %16, !dbg !8310
  br i1 %cmp11, label %if.then, label %if.end, !dbg !8311

if.then:                                          ; preds = %land.lhs.true9
  %17 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8312
  store %struct.corner* %17, %struct.corner** %retval, align 8, !dbg !8314
  br label %return, !dbg !8314

if.end:                                           ; preds = %land.lhs.true9, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8315

for.inc:                                          ; preds = %if.end
  %18 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8316
  %next = getelementptr inbounds %struct.corner, %struct.corner* %18, i32 0, i32 5, !dbg !8317
  %19 = load %struct.corner*, %struct.corner** %next, align 8, !dbg !8317
  store %struct.corner* %19, %struct.corner** %c, align 8, !dbg !8318
  br label %for.cond, !dbg !8319, !llvm.loop !8320

for.end:                                          ; preds = %for.cond
  %20 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8322
  %call = call i8* @new_pgn_element(%struct.process* %20, i32 40), !dbg !8323
  %21 = bitcast i8* %call to %struct.corner*, !dbg !8324
  store %struct.corner* %21, %struct.corner** %c, align 8, !dbg !8325
  %22 = load i32, i32* %i.addr, align 4, !dbg !8326
  %23 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8327
  %i12 = getelementptr inbounds %struct.corner, %struct.corner* %23, i32 0, i32 0, !dbg !8328
  store i32 %22, i32* %i12, align 8, !dbg !8329
  %24 = load i32, i32* %i.addr, align 4, !dbg !8330
  %conv = sitofp i32 %24 to float, !dbg !8331
  %sub = fsub float %conv, 5.000000e-01, !dbg !8332
  %25 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8333
  %size = getelementptr inbounds %struct.process, %struct.process* %25, i32 0, i32 5, !dbg !8334
  %26 = load float, float* %size, align 8, !dbg !8334
  %mul = fmul float %sub, %26, !dbg !8335
  %27 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8336
  %co = getelementptr inbounds %struct.corner, %struct.corner* %27, i32 0, i32 3, !dbg !8337
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8336
  store float %mul, float* %arrayidx13, align 4, !dbg !8338
  %28 = load i32, i32* %j.addr, align 4, !dbg !8339
  %29 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8340
  %j14 = getelementptr inbounds %struct.corner, %struct.corner* %29, i32 0, i32 1, !dbg !8341
  store i32 %28, i32* %j14, align 4, !dbg !8342
  %30 = load i32, i32* %j.addr, align 4, !dbg !8343
  %conv15 = sitofp i32 %30 to float, !dbg !8344
  %sub16 = fsub float %conv15, 5.000000e-01, !dbg !8345
  %31 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8346
  %size17 = getelementptr inbounds %struct.process, %struct.process* %31, i32 0, i32 5, !dbg !8347
  %32 = load float, float* %size17, align 8, !dbg !8347
  %mul18 = fmul float %sub16, %32, !dbg !8348
  %33 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8349
  %co19 = getelementptr inbounds %struct.corner, %struct.corner* %33, i32 0, i32 3, !dbg !8350
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %co19, i64 0, i64 1, !dbg !8349
  store float %mul18, float* %arrayidx20, align 4, !dbg !8351
  %34 = load i32, i32* %k.addr, align 4, !dbg !8352
  %35 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8353
  %k21 = getelementptr inbounds %struct.corner, %struct.corner* %35, i32 0, i32 2, !dbg !8354
  store i32 %34, i32* %k21, align 8, !dbg !8355
  %36 = load i32, i32* %k.addr, align 4, !dbg !8356
  %conv22 = sitofp i32 %36 to float, !dbg !8357
  %sub23 = fsub float %conv22, 5.000000e-01, !dbg !8358
  %37 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8359
  %size24 = getelementptr inbounds %struct.process, %struct.process* %37, i32 0, i32 5, !dbg !8360
  %38 = load float, float* %size24, align 8, !dbg !8360
  %mul25 = fmul float %sub23, %38, !dbg !8361
  %39 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8362
  %co26 = getelementptr inbounds %struct.corner, %struct.corner* %39, i32 0, i32 3, !dbg !8363
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %co26, i64 0, i64 2, !dbg !8362
  store float %mul25, float* %arrayidx27, align 4, !dbg !8364
  %40 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8365
  %function = getelementptr inbounds %struct.process, %struct.process* %40, i32 0, i32 4, !dbg !8366
  %41 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function, align 8, !dbg !8366
  %42 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8367
  %43 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8368
  %co28 = getelementptr inbounds %struct.corner, %struct.corner* %43, i32 0, i32 3, !dbg !8369
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !8368
  %44 = load float, float* %arrayidx29, align 4, !dbg !8368
  %45 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8370
  %co30 = getelementptr inbounds %struct.corner, %struct.corner* %45, i32 0, i32 3, !dbg !8371
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 1, !dbg !8370
  %46 = load float, float* %arrayidx31, align 4, !dbg !8370
  %47 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8372
  %co32 = getelementptr inbounds %struct.corner, %struct.corner* %47, i32 0, i32 3, !dbg !8373
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 2, !dbg !8372
  %48 = load float, float* %arrayidx33, align 4, !dbg !8372
  %call34 = call float %41(%struct.process* %42, float %44, float %46, float %48), !dbg !8365
  %49 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8374
  %value = getelementptr inbounds %struct.corner, %struct.corner* %49, i32 0, i32 4, !dbg !8375
  store float %call34, float* %value, align 8, !dbg !8376
  %50 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8377
  %corners35 = getelementptr inbounds %struct.process, %struct.process* %50, i32 0, i32 11, !dbg !8378
  %51 = load %struct.corner**, %struct.corner*** %corners35, align 8, !dbg !8378
  %52 = load i32, i32* %index, align 4, !dbg !8379
  %idxprom36 = sext i32 %52 to i64, !dbg !8377
  %arrayidx37 = getelementptr inbounds %struct.corner*, %struct.corner** %51, i64 %idxprom36, !dbg !8377
  %53 = load %struct.corner*, %struct.corner** %arrayidx37, align 8, !dbg !8377
  %54 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8380
  %next38 = getelementptr inbounds %struct.corner, %struct.corner* %54, i32 0, i32 5, !dbg !8381
  store %struct.corner* %53, %struct.corner** %next38, align 8, !dbg !8382
  %55 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8383
  %56 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8384
  %corners39 = getelementptr inbounds %struct.process, %struct.process* %56, i32 0, i32 11, !dbg !8385
  %57 = load %struct.corner**, %struct.corner*** %corners39, align 8, !dbg !8385
  %58 = load i32, i32* %index, align 4, !dbg !8386
  %idxprom40 = sext i32 %58 to i64, !dbg !8384
  %arrayidx41 = getelementptr inbounds %struct.corner*, %struct.corner** %57, i64 %idxprom40, !dbg !8384
  store %struct.corner* %55, %struct.corner** %arrayidx41, align 8, !dbg !8387
  %59 = load %struct.corner*, %struct.corner** %c, align 8, !dbg !8388
  store %struct.corner* %59, %struct.corner** %retval, align 8, !dbg !8389
  br label %return, !dbg !8389

return:                                           ; preds = %for.end, %if.then
  %60 = load %struct.corner*, %struct.corner** %retval, align 8, !dbg !8390
  ret %struct.corner* %60, !dbg !8390
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertid(%struct.process* %process, %struct.corner* %c1, %struct.corner* %c2, %struct.MetaBall* %mb) #0 !dbg !8391 {
entry:
  %retval = alloca i32, align 4
  %process.addr = alloca %struct.process*, align 8
  %c1.addr = alloca %struct.corner*, align 8
  %c2.addr = alloca %struct.corner*, align 8
  %mb.addr = alloca %struct.MetaBall*, align 8
  %v = alloca %struct.vertex, align 8
  %vid = alloca i32, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !8396, metadata !DIExpression()), !dbg !8397
  store %struct.corner* %c1, %struct.corner** %c1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.corner** %c1.addr, metadata !8398, metadata !DIExpression()), !dbg !8399
  store %struct.corner* %c2, %struct.corner** %c2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.corner** %c2.addr, metadata !8400, metadata !DIExpression()), !dbg !8401
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !8402, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.declare(metadata %struct.vertex* %v, metadata !8404, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.declare(metadata i32* %vid, metadata !8406, metadata !DIExpression()), !dbg !8407
  %0 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8408
  %edges = getelementptr inbounds %struct.process, %struct.process* %0, i32 0, i32 12, !dbg !8409
  %1 = load %struct.edgelist**, %struct.edgelist*** %edges, align 8, !dbg !8409
  %2 = load %struct.corner*, %struct.corner** %c1.addr, align 8, !dbg !8410
  %i = getelementptr inbounds %struct.corner, %struct.corner* %2, i32 0, i32 0, !dbg !8411
  %3 = load i32, i32* %i, align 8, !dbg !8411
  %4 = load %struct.corner*, %struct.corner** %c1.addr, align 8, !dbg !8412
  %j = getelementptr inbounds %struct.corner, %struct.corner* %4, i32 0, i32 1, !dbg !8413
  %5 = load i32, i32* %j, align 4, !dbg !8413
  %6 = load %struct.corner*, %struct.corner** %c1.addr, align 8, !dbg !8414
  %k = getelementptr inbounds %struct.corner, %struct.corner* %6, i32 0, i32 2, !dbg !8415
  %7 = load i32, i32* %k, align 8, !dbg !8415
  %8 = load %struct.corner*, %struct.corner** %c2.addr, align 8, !dbg !8416
  %i1 = getelementptr inbounds %struct.corner, %struct.corner* %8, i32 0, i32 0, !dbg !8417
  %9 = load i32, i32* %i1, align 8, !dbg !8417
  %10 = load %struct.corner*, %struct.corner** %c2.addr, align 8, !dbg !8418
  %j2 = getelementptr inbounds %struct.corner, %struct.corner* %10, i32 0, i32 1, !dbg !8419
  %11 = load i32, i32* %j2, align 4, !dbg !8419
  %12 = load %struct.corner*, %struct.corner** %c2.addr, align 8, !dbg !8420
  %k3 = getelementptr inbounds %struct.corner, %struct.corner* %12, i32 0, i32 2, !dbg !8421
  %13 = load i32, i32* %k3, align 8, !dbg !8421
  %call = call i32 @getedge(%struct.edgelist** %1, i32 %3, i32 %5, i32 %7, i32 %9, i32 %11, i32 %13), !dbg !8422
  store i32 %call, i32* %vid, align 4, !dbg !8407
  %14 = load i32, i32* %vid, align 4, !dbg !8423
  %cmp = icmp ne i32 %14, -1, !dbg !8425
  br i1 %cmp, label %if.then, label %if.end, !dbg !8426

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %vid, align 4, !dbg !8427
  store i32 %15, i32* %retval, align 4, !dbg !8429
  br label %return, !dbg !8429

if.end:                                           ; preds = %entry
  %16 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8430
  %17 = load %struct.corner*, %struct.corner** %c1.addr, align 8, !dbg !8431
  %co = getelementptr inbounds %struct.corner, %struct.corner* %17, i32 0, i32 3, !dbg !8432
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8431
  %18 = load %struct.corner*, %struct.corner** %c2.addr, align 8, !dbg !8433
  %co4 = getelementptr inbounds %struct.corner, %struct.corner* %18, i32 0, i32 3, !dbg !8434
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %co4, i64 0, i64 0, !dbg !8433
  %19 = load %struct.corner*, %struct.corner** %c1.addr, align 8, !dbg !8435
  %value = getelementptr inbounds %struct.corner, %struct.corner* %19, i32 0, i32 4, !dbg !8436
  %20 = load float, float* %value, align 8, !dbg !8436
  %21 = load %struct.corner*, %struct.corner** %c2.addr, align 8, !dbg !8437
  %value6 = getelementptr inbounds %struct.corner, %struct.corner* %21, i32 0, i32 4, !dbg !8438
  %22 = load float, float* %value6, align 8, !dbg !8438
  %co7 = getelementptr inbounds %struct.vertex, %struct.vertex* %v, i32 0, i32 0, !dbg !8439
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !8440
  %23 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !8441
  call void @converge(%struct.process* %16, float* %arraydecay, float* %arraydecay5, float %20, float %22, float* %arraydecay8, %struct.MetaBall* %23, i32 1), !dbg !8442
  %24 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8443
  %co9 = getelementptr inbounds %struct.vertex, %struct.vertex* %v, i32 0, i32 0, !dbg !8444
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !8445
  %no = getelementptr inbounds %struct.vertex, %struct.vertex* %v, i32 0, i32 1, !dbg !8446
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !8447
  call void @vnormal(%struct.process* %24, float* %arraydecay10, float* %arraydecay11), !dbg !8448
  %25 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8449
  %vertices = getelementptr inbounds %struct.process, %struct.process* %25, i32 0, i32 9, !dbg !8450
  call void @addtovertices(%struct.vertices* %vertices, %struct.vertex* byval(%struct.vertex) align 8 %v), !dbg !8451
  %26 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8452
  %vertices12 = getelementptr inbounds %struct.process, %struct.process* %26, i32 0, i32 9, !dbg !8453
  %count = getelementptr inbounds %struct.vertices, %struct.vertices* %vertices12, i32 0, i32 0, !dbg !8454
  %27 = load i32, i32* %count, align 8, !dbg !8454
  %sub = sub nsw i32 %27, 1, !dbg !8455
  store i32 %sub, i32* %vid, align 4, !dbg !8456
  %28 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8457
  %29 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8458
  %edges13 = getelementptr inbounds %struct.process, %struct.process* %29, i32 0, i32 12, !dbg !8459
  %30 = load %struct.edgelist**, %struct.edgelist*** %edges13, align 8, !dbg !8459
  %31 = load %struct.corner*, %struct.corner** %c1.addr, align 8, !dbg !8460
  %i14 = getelementptr inbounds %struct.corner, %struct.corner* %31, i32 0, i32 0, !dbg !8461
  %32 = load i32, i32* %i14, align 8, !dbg !8461
  %33 = load %struct.corner*, %struct.corner** %c1.addr, align 8, !dbg !8462
  %j15 = getelementptr inbounds %struct.corner, %struct.corner* %33, i32 0, i32 1, !dbg !8463
  %34 = load i32, i32* %j15, align 4, !dbg !8463
  %35 = load %struct.corner*, %struct.corner** %c1.addr, align 8, !dbg !8464
  %k16 = getelementptr inbounds %struct.corner, %struct.corner* %35, i32 0, i32 2, !dbg !8465
  %36 = load i32, i32* %k16, align 8, !dbg !8465
  %37 = load %struct.corner*, %struct.corner** %c2.addr, align 8, !dbg !8466
  %i17 = getelementptr inbounds %struct.corner, %struct.corner* %37, i32 0, i32 0, !dbg !8467
  %38 = load i32, i32* %i17, align 8, !dbg !8467
  %39 = load %struct.corner*, %struct.corner** %c2.addr, align 8, !dbg !8468
  %j18 = getelementptr inbounds %struct.corner, %struct.corner* %39, i32 0, i32 1, !dbg !8469
  %40 = load i32, i32* %j18, align 4, !dbg !8469
  %41 = load %struct.corner*, %struct.corner** %c2.addr, align 8, !dbg !8470
  %k19 = getelementptr inbounds %struct.corner, %struct.corner* %41, i32 0, i32 2, !dbg !8471
  %42 = load i32, i32* %k19, align 8, !dbg !8471
  %43 = load i32, i32* %vid, align 4, !dbg !8472
  call void @setedge(%struct.process* %28, %struct.edgelist** %30, i32 %32, i32 %34, i32 %36, i32 %38, i32 %40, i32 %42, i32 %43), !dbg !8473
  %44 = load i32, i32* %vid, align 4, !dbg !8474
  store i32 %44, i32* %retval, align 4, !dbg !8475
  br label %return, !dbg !8475

return:                                           ; preds = %if.end, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !8476
  ret i32 %45, !dbg !8476
}

; Function Attrs: noinline nounwind uwtable
define internal void @accum_mballfaces(%struct.process* %process, i32 %i1, i32 %i2, i32 %i3, i32 %i4) #0 !dbg !8477 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %i1.addr = alloca i32, align 4
  %i2.addr = alloca i32, align 4
  %i3.addr = alloca i32, align 4
  %i4.addr = alloca i32, align 4
  %newi = alloca i32*, align 8
  %cur = alloca i32*, align 8
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  store i32 %i1, i32* %i1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i1.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  store i32 %i2, i32* %i2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i2.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  store i32 %i3, i32* %i3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i3.addr, metadata !8484, metadata !DIExpression()), !dbg !8485
  store i32 %i4, i32* %i4.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i4.addr, metadata !8486, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.declare(metadata i32** %newi, metadata !8488, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.declare(metadata i32** %cur, metadata !8490, metadata !DIExpression()), !dbg !8491
  %0 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8492
  %totindex = getelementptr inbounds %struct.process, %struct.process* %0, i32 0, i32 14, !dbg !8494
  %1 = load i32, i32* %totindex, align 8, !dbg !8494
  %2 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8495
  %curindex = getelementptr inbounds %struct.process, %struct.process* %2, i32 0, i32 15, !dbg !8496
  %3 = load i32, i32* %curindex, align 4, !dbg !8496
  %cmp = icmp eq i32 %1, %3, !dbg !8497
  br i1 %cmp, label %if.then, label %if.end10, !dbg !8498

if.then:                                          ; preds = %entry
  %4 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8499
  %totindex1 = getelementptr inbounds %struct.process, %struct.process* %4, i32 0, i32 14, !dbg !8501
  %5 = load i32, i32* %totindex1, align 8, !dbg !8502
  %add = add nsw i32 %5, 256, !dbg !8502
  store i32 %add, i32* %totindex1, align 8, !dbg !8502
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8503
  %7 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8504
  %totindex2 = getelementptr inbounds %struct.process, %struct.process* %7, i32 0, i32 14, !dbg !8505
  %8 = load i32, i32* %totindex2, align 8, !dbg !8505
  %conv = sext i32 %8 to i64, !dbg !8504
  %mul = mul i64 16, %conv, !dbg !8506
  %call = call i8* %6(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0)), !dbg !8503
  %9 = bitcast i8* %call to i32*, !dbg !8503
  store i32* %9, i32** %newi, align 8, !dbg !8507
  %10 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8508
  %indices = getelementptr inbounds %struct.process, %struct.process* %10, i32 0, i32 13, !dbg !8510
  %11 = load i32*, i32** %indices, align 8, !dbg !8510
  %tobool = icmp ne i32* %11, null, !dbg !8508
  br i1 %tobool, label %if.then3, label %if.end, !dbg !8511

if.then3:                                         ; preds = %if.then
  %12 = load i32*, i32** %newi, align 8, !dbg !8512
  %13 = bitcast i32* %12 to i8*, !dbg !8514
  %14 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8515
  %indices4 = getelementptr inbounds %struct.process, %struct.process* %14, i32 0, i32 13, !dbg !8516
  %15 = load i32*, i32** %indices4, align 8, !dbg !8516
  %16 = bitcast i32* %15 to i8*, !dbg !8514
  %17 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8517
  %totindex5 = getelementptr inbounds %struct.process, %struct.process* %17, i32 0, i32 14, !dbg !8518
  %18 = load i32, i32* %totindex5, align 8, !dbg !8518
  %sub = sub nsw i32 %18, 256, !dbg !8519
  %conv6 = sext i32 %sub to i64, !dbg !8520
  %mul7 = mul i64 16, %conv6, !dbg !8521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %16, i64 %mul7, i1 false), !dbg !8514
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8522
  %20 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8523
  %indices8 = getelementptr inbounds %struct.process, %struct.process* %20, i32 0, i32 13, !dbg !8524
  %21 = load i32*, i32** %indices8, align 8, !dbg !8524
  %22 = bitcast i32* %21 to i8*, !dbg !8523
  call void %19(i8* %22), !dbg !8522
  br label %if.end, !dbg !8525

if.end:                                           ; preds = %if.then3, %if.then
  %23 = load i32*, i32** %newi, align 8, !dbg !8526
  %24 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8527
  %indices9 = getelementptr inbounds %struct.process, %struct.process* %24, i32 0, i32 13, !dbg !8528
  store i32* %23, i32** %indices9, align 8, !dbg !8529
  br label %if.end10, !dbg !8530

if.end10:                                         ; preds = %if.end, %entry
  %25 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8531
  %indices11 = getelementptr inbounds %struct.process, %struct.process* %25, i32 0, i32 13, !dbg !8532
  %26 = load i32*, i32** %indices11, align 8, !dbg !8532
  %27 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8533
  %curindex12 = getelementptr inbounds %struct.process, %struct.process* %27, i32 0, i32 15, !dbg !8534
  %28 = load i32, i32* %curindex12, align 4, !dbg !8534
  %mul13 = mul nsw i32 4, %28, !dbg !8535
  %idx.ext = sext i32 %mul13 to i64, !dbg !8536
  %add.ptr = getelementptr inbounds i32, i32* %26, i64 %idx.ext, !dbg !8536
  store i32* %add.ptr, i32** %cur, align 8, !dbg !8537
  %29 = load i32, i32* %i1.addr, align 4, !dbg !8538
  %30 = load i32*, i32** %cur, align 8, !dbg !8539
  %arrayidx = getelementptr inbounds i32, i32* %30, i64 0, !dbg !8539
  store i32 %29, i32* %arrayidx, align 4, !dbg !8540
  %31 = load i32, i32* %i2.addr, align 4, !dbg !8541
  %32 = load i32*, i32** %cur, align 8, !dbg !8542
  %arrayidx14 = getelementptr inbounds i32, i32* %32, i64 1, !dbg !8542
  store i32 %31, i32* %arrayidx14, align 4, !dbg !8543
  %33 = load i32, i32* %i3.addr, align 4, !dbg !8544
  %34 = load i32*, i32** %cur, align 8, !dbg !8545
  %arrayidx15 = getelementptr inbounds i32, i32* %34, i64 2, !dbg !8545
  store i32 %33, i32* %arrayidx15, align 4, !dbg !8546
  %35 = load i32, i32* %i4.addr, align 4, !dbg !8547
  %cmp16 = icmp eq i32 %35, 0, !dbg !8549
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !8550

if.then18:                                        ; preds = %if.end10
  %36 = load i32, i32* %i3.addr, align 4, !dbg !8551
  %37 = load i32*, i32** %cur, align 8, !dbg !8552
  %arrayidx19 = getelementptr inbounds i32, i32* %37, i64 3, !dbg !8552
  store i32 %36, i32* %arrayidx19, align 4, !dbg !8553
  br label %if.end21, !dbg !8552

if.else:                                          ; preds = %if.end10
  %38 = load i32, i32* %i4.addr, align 4, !dbg !8554
  %39 = load i32*, i32** %cur, align 8, !dbg !8555
  %arrayidx20 = getelementptr inbounds i32, i32* %39, i64 3, !dbg !8555
  store i32 %38, i32* %arrayidx20, align 4, !dbg !8556
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  %40 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8557
  %curindex22 = getelementptr inbounds %struct.process, %struct.process* %40, i32 0, i32 15, !dbg !8558
  %41 = load i32, i32* %curindex22, align 4, !dbg !8559
  %inc = add nsw i32 %41, 1, !dbg !8559
  store i32 %inc, i32* %curindex22, align 4, !dbg !8559
  ret void, !dbg !8560
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getedge(%struct.edgelist** %table, i32 %i1, i32 %j1, i32 %k1, i32 %i2, i32 %j2, i32 %k2) #0 !dbg !8561 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.edgelist**, align 8
  %i1.addr = alloca i32, align 4
  %j1.addr = alloca i32, align 4
  %k1.addr = alloca i32, align 4
  %i2.addr = alloca i32, align 4
  %j2.addr = alloca i32, align 4
  %k2.addr = alloca i32, align 4
  %q = alloca %struct.edgelist*, align 8
  %t = alloca i32, align 4
  store %struct.edgelist** %table, %struct.edgelist*** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edgelist*** %table.addr, metadata !8564, metadata !DIExpression()), !dbg !8565
  store i32 %i1, i32* %i1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i1.addr, metadata !8566, metadata !DIExpression()), !dbg !8567
  store i32 %j1, i32* %j1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j1.addr, metadata !8568, metadata !DIExpression()), !dbg !8569
  store i32 %k1, i32* %k1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k1.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  store i32 %i2, i32* %i2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i2.addr, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i32 %j2, i32* %j2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j2.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  store i32 %k2, i32* %k2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k2.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.declare(metadata %struct.edgelist** %q, metadata !8578, metadata !DIExpression()), !dbg !8579
  %0 = load i32, i32* %i1.addr, align 4, !dbg !8580
  %1 = load i32, i32* %i2.addr, align 4, !dbg !8582
  %cmp = icmp sgt i32 %0, %1, !dbg !8583
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8584

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %i1.addr, align 4, !dbg !8585
  %3 = load i32, i32* %i2.addr, align 4, !dbg !8586
  %cmp1 = icmp eq i32 %2, %3, !dbg !8587
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !8588

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load i32, i32* %j1.addr, align 4, !dbg !8589
  %5 = load i32, i32* %j2.addr, align 4, !dbg !8590
  %cmp2 = icmp sgt i32 %4, %5, !dbg !8591
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !8592

lor.lhs.false3:                                   ; preds = %land.lhs.true
  %6 = load i32, i32* %j1.addr, align 4, !dbg !8593
  %7 = load i32, i32* %j2.addr, align 4, !dbg !8594
  %cmp4 = icmp eq i32 %6, %7, !dbg !8595
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !8596

land.lhs.true5:                                   ; preds = %lor.lhs.false3
  %8 = load i32, i32* %k1.addr, align 4, !dbg !8597
  %9 = load i32, i32* %k2.addr, align 4, !dbg !8598
  %cmp6 = icmp sgt i32 %8, %9, !dbg !8599
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8600

if.then:                                          ; preds = %land.lhs.true5, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %t, metadata !8601, metadata !DIExpression()), !dbg !8603
  %10 = load i32, i32* %i1.addr, align 4, !dbg !8604
  store i32 %10, i32* %t, align 4, !dbg !8603
  %11 = load i32, i32* %i2.addr, align 4, !dbg !8605
  store i32 %11, i32* %i1.addr, align 4, !dbg !8606
  %12 = load i32, i32* %t, align 4, !dbg !8607
  store i32 %12, i32* %i2.addr, align 4, !dbg !8608
  %13 = load i32, i32* %j1.addr, align 4, !dbg !8609
  store i32 %13, i32* %t, align 4, !dbg !8610
  %14 = load i32, i32* %j2.addr, align 4, !dbg !8611
  store i32 %14, i32* %j1.addr, align 4, !dbg !8612
  %15 = load i32, i32* %t, align 4, !dbg !8613
  store i32 %15, i32* %j2.addr, align 4, !dbg !8614
  %16 = load i32, i32* %k1.addr, align 4, !dbg !8615
  store i32 %16, i32* %t, align 4, !dbg !8616
  %17 = load i32, i32* %k2.addr, align 4, !dbg !8617
  store i32 %17, i32* %k1.addr, align 4, !dbg !8618
  %18 = load i32, i32* %t, align 4, !dbg !8619
  store i32 %18, i32* %k2.addr, align 4, !dbg !8620
  br label %if.end, !dbg !8621

if.end:                                           ; preds = %if.then, %land.lhs.true5, %lor.lhs.false3, %lor.lhs.false
  %19 = load %struct.edgelist**, %struct.edgelist*** %table.addr, align 8, !dbg !8622
  %20 = load i32, i32* %i1.addr, align 4, !dbg !8623
  %and = and i32 %20, 31, !dbg !8623
  %shl = shl i32 %and, 5, !dbg !8623
  %21 = load i32, i32* %j1.addr, align 4, !dbg !8623
  %and7 = and i32 %21, 31, !dbg !8623
  %or = or i32 %shl, %and7, !dbg !8623
  %shl8 = shl i32 %or, 5, !dbg !8623
  %22 = load i32, i32* %k1.addr, align 4, !dbg !8623
  %and9 = and i32 %22, 31, !dbg !8623
  %or10 = or i32 %shl8, %and9, !dbg !8623
  %23 = load i32, i32* %i2.addr, align 4, !dbg !8624
  %and11 = and i32 %23, 31, !dbg !8624
  %shl12 = shl i32 %and11, 5, !dbg !8624
  %24 = load i32, i32* %j2.addr, align 4, !dbg !8624
  %and13 = and i32 %24, 31, !dbg !8624
  %or14 = or i32 %shl12, %and13, !dbg !8624
  %shl15 = shl i32 %or14, 5, !dbg !8624
  %25 = load i32, i32* %k2.addr, align 4, !dbg !8624
  %and16 = and i32 %25, 31, !dbg !8624
  %or17 = or i32 %shl15, %and16, !dbg !8624
  %add = add nsw i32 %or10, %or17, !dbg !8625
  %idxprom = sext i32 %add to i64, !dbg !8622
  %arrayidx = getelementptr inbounds %struct.edgelist*, %struct.edgelist** %19, i64 %idxprom, !dbg !8622
  %26 = load %struct.edgelist*, %struct.edgelist** %arrayidx, align 8, !dbg !8622
  store %struct.edgelist* %26, %struct.edgelist** %q, align 8, !dbg !8626
  br label %for.cond, !dbg !8627

for.cond:                                         ; preds = %for.inc, %if.end
  %27 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8628
  %cmp18 = icmp ne %struct.edgelist* %27, null, !dbg !8631
  br i1 %cmp18, label %for.body, label %for.end, !dbg !8632

for.body:                                         ; preds = %for.cond
  %28 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8633
  %i119 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %28, i32 0, i32 0, !dbg !8636
  %29 = load i32, i32* %i119, align 8, !dbg !8636
  %30 = load i32, i32* %i1.addr, align 4, !dbg !8637
  %cmp20 = icmp eq i32 %29, %30, !dbg !8638
  br i1 %cmp20, label %land.lhs.true21, label %if.end37, !dbg !8639

land.lhs.true21:                                  ; preds = %for.body
  %31 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8640
  %j122 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %31, i32 0, i32 1, !dbg !8641
  %32 = load i32, i32* %j122, align 4, !dbg !8641
  %33 = load i32, i32* %j1.addr, align 4, !dbg !8642
  %cmp23 = icmp eq i32 %32, %33, !dbg !8643
  br i1 %cmp23, label %land.lhs.true24, label %if.end37, !dbg !8644

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %34 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8645
  %k125 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %34, i32 0, i32 2, !dbg !8646
  %35 = load i32, i32* %k125, align 8, !dbg !8646
  %36 = load i32, i32* %k1.addr, align 4, !dbg !8647
  %cmp26 = icmp eq i32 %35, %36, !dbg !8648
  br i1 %cmp26, label %land.lhs.true27, label %if.end37, !dbg !8649

land.lhs.true27:                                  ; preds = %land.lhs.true24
  %37 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8650
  %i228 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %37, i32 0, i32 3, !dbg !8651
  %38 = load i32, i32* %i228, align 4, !dbg !8651
  %39 = load i32, i32* %i2.addr, align 4, !dbg !8652
  %cmp29 = icmp eq i32 %38, %39, !dbg !8653
  br i1 %cmp29, label %land.lhs.true30, label %if.end37, !dbg !8654

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %40 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8655
  %j231 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %40, i32 0, i32 4, !dbg !8656
  %41 = load i32, i32* %j231, align 8, !dbg !8656
  %42 = load i32, i32* %j2.addr, align 4, !dbg !8657
  %cmp32 = icmp eq i32 %41, %42, !dbg !8658
  br i1 %cmp32, label %land.lhs.true33, label %if.end37, !dbg !8659

land.lhs.true33:                                  ; preds = %land.lhs.true30
  %43 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8660
  %k234 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %43, i32 0, i32 5, !dbg !8661
  %44 = load i32, i32* %k234, align 4, !dbg !8661
  %45 = load i32, i32* %k2.addr, align 4, !dbg !8662
  %cmp35 = icmp eq i32 %44, %45, !dbg !8663
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !8664

if.then36:                                        ; preds = %land.lhs.true33
  %46 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8665
  %vid = getelementptr inbounds %struct.edgelist, %struct.edgelist* %46, i32 0, i32 6, !dbg !8667
  %47 = load i32, i32* %vid, align 8, !dbg !8667
  store i32 %47, i32* %retval, align 4, !dbg !8668
  br label %return, !dbg !8668

if.end37:                                         ; preds = %land.lhs.true33, %land.lhs.true30, %land.lhs.true27, %land.lhs.true24, %land.lhs.true21, %for.body
  br label %for.inc, !dbg !8669

for.inc:                                          ; preds = %if.end37
  %48 = load %struct.edgelist*, %struct.edgelist** %q, align 8, !dbg !8670
  %next = getelementptr inbounds %struct.edgelist, %struct.edgelist* %48, i32 0, i32 7, !dbg !8671
  %49 = load %struct.edgelist*, %struct.edgelist** %next, align 8, !dbg !8671
  store %struct.edgelist* %49, %struct.edgelist** %q, align 8, !dbg !8672
  br label %for.cond, !dbg !8673, !llvm.loop !8674

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !8676
  br label %return, !dbg !8676

return:                                           ; preds = %for.end, %if.then36
  %50 = load i32, i32* %retval, align 4, !dbg !8677
  ret i32 %50, !dbg !8677
}

; Function Attrs: noinline nounwind uwtable
define internal void @converge(%struct.process* %process, float* %p1, float* %p2, float %v1, float %v2, float* %p, %struct.MetaBall* %mb, i32 %f) #0 !dbg !8678 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %v1.addr = alloca float, align 4
  %v2.addr = alloca float, align 4
  %p.addr = alloca float*, align 8
  %mb.addr = alloca %struct.MetaBall*, align 8
  %f.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pos = alloca [3 x float], align 4
  %neg = alloca [3 x float], align 4
  %positive = alloca float, align 4
  %negative = alloca float, align 4
  %dvec = alloca [3 x float], align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !8681, metadata !DIExpression()), !dbg !8682
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !8683, metadata !DIExpression()), !dbg !8684
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !8685, metadata !DIExpression()), !dbg !8686
  store float %v1, float* %v1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v1.addr, metadata !8687, metadata !DIExpression()), !dbg !8688
  store float %v2, float* %v2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v2.addr, metadata !8689, metadata !DIExpression()), !dbg !8690
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  store %struct.MetaBall* %mb, %struct.MetaBall** %mb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb.addr, metadata !8693, metadata !DIExpression()), !dbg !8694
  store i32 %f, i32* %f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f.addr, metadata !8695, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8697, metadata !DIExpression()), !dbg !8698
  store i32 0, i32* %i, align 4, !dbg !8698
  call void @llvm.dbg.declare(metadata [3 x float]* %pos, metadata !8699, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.declare(metadata [3 x float]* %neg, metadata !8701, metadata !DIExpression()), !dbg !8702
  call void @llvm.dbg.declare(metadata float* %positive, metadata !8703, metadata !DIExpression()), !dbg !8704
  store float 0.000000e+00, float* %positive, align 4, !dbg !8704
  call void @llvm.dbg.declare(metadata float* %negative, metadata !8705, metadata !DIExpression()), !dbg !8706
  store float 0.000000e+00, float* %negative, align 4, !dbg !8706
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !8707, metadata !DIExpression()), !dbg !8708
  %0 = load float, float* %v1.addr, align 4, !dbg !8709
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !8711
  br i1 %cmp, label %if.then, label %if.else, !dbg !8712

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8713
  %1 = load float*, float** %p2.addr, align 8, !dbg !8715
  call void @copy_v3_v3(float* %arraydecay, float* %1), !dbg !8716
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8717
  %2 = load float*, float** %p1.addr, align 8, !dbg !8718
  call void @copy_v3_v3(float* %arraydecay1, float* %2), !dbg !8719
  %3 = load float, float* %v2.addr, align 4, !dbg !8720
  store float %3, float* %positive, align 4, !dbg !8721
  %4 = load float, float* %v1.addr, align 4, !dbg !8722
  store float %4, float* %negative, align 4, !dbg !8723
  br label %if.end, !dbg !8724

if.else:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8725
  %5 = load float*, float** %p1.addr, align 8, !dbg !8727
  call void @copy_v3_v3(float* %arraydecay2, float* %5), !dbg !8728
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8729
  %6 = load float*, float** %p2.addr, align 8, !dbg !8730
  call void @copy_v3_v3(float* %arraydecay3, float* %6), !dbg !8731
  %7 = load float, float* %v1.addr, align 4, !dbg !8732
  store float %7, float* %positive, align 4, !dbg !8733
  %8 = load float, float* %v2.addr, align 4, !dbg !8734
  store float %8, float* %negative, align 4, !dbg !8735
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !8736
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8737
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8738
  call void @sub_v3_v3v3(float* %arraydecay4, float* %arraydecay5, float* %arraydecay6), !dbg !8739
  %9 = load %struct.MetaBall*, %struct.MetaBall** %mb.addr, align 8, !dbg !8740
  %thresh = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %9, i32 0, i32 17, !dbg !8742
  %10 = load float, float* %thresh, align 4, !dbg !8742
  %cmp7 = fcmp ogt float %10, 0x3FC99999A0000000, !dbg !8743
  br i1 %cmp7, label %land.lhs.true, label %if.end60, !dbg !8744

land.lhs.true:                                    ; preds = %if.end
  %11 = load i32, i32* %f.addr, align 4, !dbg !8745
  %cmp8 = icmp eq i32 %11, 1, !dbg !8746
  br i1 %cmp8, label %if.then9, label %if.end60, !dbg !8747

if.then9:                                         ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !8748
  %12 = load float, float* %arrayidx, align 4, !dbg !8748
  %cmp10 = fcmp oeq float %12, 0.000000e+00, !dbg !8751
  br i1 %cmp10, label %land.lhs.true11, label %if.end23, !dbg !8752

land.lhs.true11:                                  ; preds = %if.then9
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !8753
  %13 = load float, float* %arrayidx12, align 4, !dbg !8753
  %cmp13 = fcmp oeq float %13, 0.000000e+00, !dbg !8754
  br i1 %cmp13, label %if.then14, label %if.end23, !dbg !8755

if.then14:                                        ; preds = %land.lhs.true11
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8756
  %14 = load float, float* %arrayidx15, align 4, !dbg !8756
  %15 = load float, float* %negative, align 4, !dbg !8758
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !8759
  %16 = load float, float* %arrayidx16, align 4, !dbg !8759
  %mul = fmul float %15, %16, !dbg !8760
  %17 = load float, float* %positive, align 4, !dbg !8761
  %18 = load float, float* %negative, align 4, !dbg !8762
  %sub = fsub float %17, %18, !dbg !8763
  %div = fdiv float %mul, %sub, !dbg !8764
  %sub17 = fsub float %14, %div, !dbg !8765
  %19 = load float*, float** %p.addr, align 8, !dbg !8766
  %arrayidx18 = getelementptr inbounds float, float* %19, i64 0, !dbg !8766
  store float %sub17, float* %arrayidx18, align 4, !dbg !8767
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 1, !dbg !8768
  %20 = load float, float* %arrayidx19, align 4, !dbg !8768
  %21 = load float*, float** %p.addr, align 8, !dbg !8769
  %arrayidx20 = getelementptr inbounds float, float* %21, i64 1, !dbg !8769
  store float %20, float* %arrayidx20, align 4, !dbg !8770
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 2, !dbg !8771
  %22 = load float, float* %arrayidx21, align 4, !dbg !8771
  %23 = load float*, float** %p.addr, align 8, !dbg !8772
  %arrayidx22 = getelementptr inbounds float, float* %23, i64 2, !dbg !8772
  store float %22, float* %arrayidx22, align 4, !dbg !8773
  br label %return, !dbg !8774

if.end23:                                         ; preds = %land.lhs.true11, %if.then9
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !8775
  %24 = load float, float* %arrayidx24, align 4, !dbg !8775
  %cmp25 = fcmp oeq float %24, 0.000000e+00, !dbg !8777
  br i1 %cmp25, label %land.lhs.true26, label %if.end41, !dbg !8778

land.lhs.true26:                                  ; preds = %if.end23
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !8779
  %25 = load float, float* %arrayidx27, align 4, !dbg !8779
  %cmp28 = fcmp oeq float %25, 0.000000e+00, !dbg !8780
  br i1 %cmp28, label %if.then29, label %if.end41, !dbg !8781

if.then29:                                        ; preds = %land.lhs.true26
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8782
  %26 = load float, float* %arrayidx30, align 4, !dbg !8782
  %27 = load float*, float** %p.addr, align 8, !dbg !8784
  %arrayidx31 = getelementptr inbounds float, float* %27, i64 0, !dbg !8784
  store float %26, float* %arrayidx31, align 4, !dbg !8785
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 1, !dbg !8786
  %28 = load float, float* %arrayidx32, align 4, !dbg !8786
  %29 = load float, float* %negative, align 4, !dbg !8787
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !8788
  %30 = load float, float* %arrayidx33, align 4, !dbg !8788
  %mul34 = fmul float %29, %30, !dbg !8789
  %31 = load float, float* %positive, align 4, !dbg !8790
  %32 = load float, float* %negative, align 4, !dbg !8791
  %sub35 = fsub float %31, %32, !dbg !8792
  %div36 = fdiv float %mul34, %sub35, !dbg !8793
  %sub37 = fsub float %28, %div36, !dbg !8794
  %33 = load float*, float** %p.addr, align 8, !dbg !8795
  %arrayidx38 = getelementptr inbounds float, float* %33, i64 1, !dbg !8795
  store float %sub37, float* %arrayidx38, align 4, !dbg !8796
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 2, !dbg !8797
  %34 = load float, float* %arrayidx39, align 4, !dbg !8797
  %35 = load float*, float** %p.addr, align 8, !dbg !8798
  %arrayidx40 = getelementptr inbounds float, float* %35, i64 2, !dbg !8798
  store float %34, float* %arrayidx40, align 4, !dbg !8799
  br label %return, !dbg !8800

if.end41:                                         ; preds = %land.lhs.true26, %if.end23
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !8801
  %36 = load float, float* %arrayidx42, align 4, !dbg !8801
  %cmp43 = fcmp oeq float %36, 0.000000e+00, !dbg !8803
  br i1 %cmp43, label %land.lhs.true44, label %if.end59, !dbg !8804

land.lhs.true44:                                  ; preds = %if.end41
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !8805
  %37 = load float, float* %arrayidx45, align 4, !dbg !8805
  %cmp46 = fcmp oeq float %37, 0.000000e+00, !dbg !8806
  br i1 %cmp46, label %if.then47, label %if.end59, !dbg !8807

if.then47:                                        ; preds = %land.lhs.true44
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8808
  %38 = load float, float* %arrayidx48, align 4, !dbg !8808
  %39 = load float*, float** %p.addr, align 8, !dbg !8810
  %arrayidx49 = getelementptr inbounds float, float* %39, i64 0, !dbg !8810
  store float %38, float* %arrayidx49, align 4, !dbg !8811
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 1, !dbg !8812
  %40 = load float, float* %arrayidx50, align 4, !dbg !8812
  %41 = load float*, float** %p.addr, align 8, !dbg !8813
  %arrayidx51 = getelementptr inbounds float, float* %41, i64 1, !dbg !8813
  store float %40, float* %arrayidx51, align 4, !dbg !8814
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 2, !dbg !8815
  %42 = load float, float* %arrayidx52, align 4, !dbg !8815
  %43 = load float, float* %negative, align 4, !dbg !8816
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !8817
  %44 = load float, float* %arrayidx53, align 4, !dbg !8817
  %mul54 = fmul float %43, %44, !dbg !8818
  %45 = load float, float* %positive, align 4, !dbg !8819
  %46 = load float, float* %negative, align 4, !dbg !8820
  %sub55 = fsub float %45, %46, !dbg !8821
  %div56 = fdiv float %mul54, %sub55, !dbg !8822
  %sub57 = fsub float %42, %div56, !dbg !8823
  %47 = load float*, float** %p.addr, align 8, !dbg !8824
  %arrayidx58 = getelementptr inbounds float, float* %47, i64 2, !dbg !8824
  store float %sub57, float* %arrayidx58, align 4, !dbg !8825
  br label %return, !dbg !8826

if.end59:                                         ; preds = %land.lhs.true44, %if.end41
  br label %if.end60, !dbg !8827

if.end60:                                         ; preds = %if.end59, %land.lhs.true, %if.end
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !8828
  %48 = load float, float* %arrayidx61, align 4, !dbg !8828
  %cmp62 = fcmp oeq float %48, 0.000000e+00, !dbg !8830
  br i1 %cmp62, label %land.lhs.true63, label %if.end89, !dbg !8831

land.lhs.true63:                                  ; preds = %if.end60
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !8832
  %49 = load float, float* %arrayidx64, align 4, !dbg !8832
  %cmp65 = fcmp oeq float %49, 0.000000e+00, !dbg !8833
  br i1 %cmp65, label %if.then66, label %if.end89, !dbg !8834

if.then66:                                        ; preds = %land.lhs.true63
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 1, !dbg !8835
  %50 = load float, float* %arrayidx67, align 4, !dbg !8835
  %51 = load float*, float** %p.addr, align 8, !dbg !8837
  %arrayidx68 = getelementptr inbounds float, float* %51, i64 1, !dbg !8837
  store float %50, float* %arrayidx68, align 4, !dbg !8838
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 2, !dbg !8839
  %52 = load float, float* %arrayidx69, align 4, !dbg !8839
  %53 = load float*, float** %p.addr, align 8, !dbg !8840
  %arrayidx70 = getelementptr inbounds float, float* %53, i64 2, !dbg !8840
  store float %52, float* %arrayidx70, align 4, !dbg !8841
  br label %while.body, !dbg !8842

while.body:                                       ; preds = %if.then66, %if.end88
  %54 = load i32, i32* %i, align 4, !dbg !8843
  %inc = add nsw i32 %54, 1, !dbg !8843
  store i32 %inc, i32* %i, align 4, !dbg !8843
  %cmp71 = icmp eq i32 %54, 12, !dbg !8846
  br i1 %cmp71, label %if.then72, label %if.end73, !dbg !8847

if.then72:                                        ; preds = %while.body
  br label %return, !dbg !8848

if.end73:                                         ; preds = %while.body
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8849
  %55 = load float, float* %arrayidx74, align 4, !dbg !8849
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8850
  %56 = load float, float* %arrayidx75, align 4, !dbg !8850
  %add = fadd float %55, %56, !dbg !8851
  %mul76 = fmul float 5.000000e-01, %add, !dbg !8852
  %57 = load float*, float** %p.addr, align 8, !dbg !8853
  %arrayidx77 = getelementptr inbounds float, float* %57, i64 0, !dbg !8853
  store float %mul76, float* %arrayidx77, align 4, !dbg !8854
  %58 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8855
  %function = getelementptr inbounds %struct.process, %struct.process* %58, i32 0, i32 4, !dbg !8857
  %59 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function, align 8, !dbg !8857
  %60 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8858
  %61 = load float*, float** %p.addr, align 8, !dbg !8859
  %arrayidx78 = getelementptr inbounds float, float* %61, i64 0, !dbg !8859
  %62 = load float, float* %arrayidx78, align 4, !dbg !8859
  %63 = load float*, float** %p.addr, align 8, !dbg !8860
  %arrayidx79 = getelementptr inbounds float, float* %63, i64 1, !dbg !8860
  %64 = load float, float* %arrayidx79, align 4, !dbg !8860
  %65 = load float*, float** %p.addr, align 8, !dbg !8861
  %arrayidx80 = getelementptr inbounds float, float* %65, i64 2, !dbg !8861
  %66 = load float, float* %arrayidx80, align 4, !dbg !8861
  %call = call float %59(%struct.process* %60, float %62, float %64, float %66), !dbg !8855
  %cmp81 = fcmp ogt float %call, 0.000000e+00, !dbg !8862
  br i1 %cmp81, label %if.then82, label %if.else85, !dbg !8863

if.then82:                                        ; preds = %if.end73
  %67 = load float*, float** %p.addr, align 8, !dbg !8864
  %arrayidx83 = getelementptr inbounds float, float* %67, i64 0, !dbg !8864
  %68 = load float, float* %arrayidx83, align 4, !dbg !8864
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8865
  store float %68, float* %arrayidx84, align 4, !dbg !8866
  br label %if.end88, !dbg !8865

if.else85:                                        ; preds = %if.end73
  %69 = load float*, float** %p.addr, align 8, !dbg !8867
  %arrayidx86 = getelementptr inbounds float, float* %69, i64 0, !dbg !8867
  %70 = load float, float* %arrayidx86, align 4, !dbg !8867
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8868
  store float %70, float* %arrayidx87, align 4, !dbg !8869
  br label %if.end88

if.end88:                                         ; preds = %if.else85, %if.then82
  br label %while.body, !dbg !8842, !llvm.loop !8870

if.end89:                                         ; preds = %land.lhs.true63, %if.end60
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !8872
  %71 = load float, float* %arrayidx90, align 4, !dbg !8872
  %cmp91 = fcmp oeq float %71, 0.000000e+00, !dbg !8874
  br i1 %cmp91, label %land.lhs.true92, label %if.end123, !dbg !8875

land.lhs.true92:                                  ; preds = %if.end89
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 2, !dbg !8876
  %72 = load float, float* %arrayidx93, align 4, !dbg !8876
  %cmp94 = fcmp oeq float %72, 0.000000e+00, !dbg !8877
  br i1 %cmp94, label %if.then95, label %if.end123, !dbg !8878

if.then95:                                        ; preds = %land.lhs.true92
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8879
  %73 = load float, float* %arrayidx96, align 4, !dbg !8879
  %74 = load float*, float** %p.addr, align 8, !dbg !8881
  %arrayidx97 = getelementptr inbounds float, float* %74, i64 0, !dbg !8881
  store float %73, float* %arrayidx97, align 4, !dbg !8882
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 2, !dbg !8883
  %75 = load float, float* %arrayidx98, align 4, !dbg !8883
  %76 = load float*, float** %p.addr, align 8, !dbg !8884
  %arrayidx99 = getelementptr inbounds float, float* %76, i64 2, !dbg !8884
  store float %75, float* %arrayidx99, align 4, !dbg !8885
  br label %while.body100, !dbg !8886

while.body100:                                    ; preds = %if.then95, %if.end122
  %77 = load i32, i32* %i, align 4, !dbg !8887
  %inc101 = add nsw i32 %77, 1, !dbg !8887
  store i32 %inc101, i32* %i, align 4, !dbg !8887
  %cmp102 = icmp eq i32 %77, 12, !dbg !8890
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !8891

if.then103:                                       ; preds = %while.body100
  br label %return, !dbg !8892

if.end104:                                        ; preds = %while.body100
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 1, !dbg !8893
  %78 = load float, float* %arrayidx105, align 4, !dbg !8893
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 1, !dbg !8894
  %79 = load float, float* %arrayidx106, align 4, !dbg !8894
  %add107 = fadd float %78, %79, !dbg !8895
  %mul108 = fmul float 5.000000e-01, %add107, !dbg !8896
  %80 = load float*, float** %p.addr, align 8, !dbg !8897
  %arrayidx109 = getelementptr inbounds float, float* %80, i64 1, !dbg !8897
  store float %mul108, float* %arrayidx109, align 4, !dbg !8898
  %81 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8899
  %function110 = getelementptr inbounds %struct.process, %struct.process* %81, i32 0, i32 4, !dbg !8901
  %82 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function110, align 8, !dbg !8901
  %83 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8902
  %84 = load float*, float** %p.addr, align 8, !dbg !8903
  %arrayidx111 = getelementptr inbounds float, float* %84, i64 0, !dbg !8903
  %85 = load float, float* %arrayidx111, align 4, !dbg !8903
  %86 = load float*, float** %p.addr, align 8, !dbg !8904
  %arrayidx112 = getelementptr inbounds float, float* %86, i64 1, !dbg !8904
  %87 = load float, float* %arrayidx112, align 4, !dbg !8904
  %88 = load float*, float** %p.addr, align 8, !dbg !8905
  %arrayidx113 = getelementptr inbounds float, float* %88, i64 2, !dbg !8905
  %89 = load float, float* %arrayidx113, align 4, !dbg !8905
  %call114 = call float %82(%struct.process* %83, float %85, float %87, float %89), !dbg !8899
  %cmp115 = fcmp ogt float %call114, 0.000000e+00, !dbg !8906
  br i1 %cmp115, label %if.then116, label %if.else119, !dbg !8907

if.then116:                                       ; preds = %if.end104
  %90 = load float*, float** %p.addr, align 8, !dbg !8908
  %arrayidx117 = getelementptr inbounds float, float* %90, i64 1, !dbg !8908
  %91 = load float, float* %arrayidx117, align 4, !dbg !8908
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 1, !dbg !8909
  store float %91, float* %arrayidx118, align 4, !dbg !8910
  br label %if.end122, !dbg !8909

if.else119:                                       ; preds = %if.end104
  %92 = load float*, float** %p.addr, align 8, !dbg !8911
  %arrayidx120 = getelementptr inbounds float, float* %92, i64 1, !dbg !8911
  %93 = load float, float* %arrayidx120, align 4, !dbg !8911
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 1, !dbg !8912
  store float %93, float* %arrayidx121, align 4, !dbg !8913
  br label %if.end122

if.end122:                                        ; preds = %if.else119, %if.then116
  br label %while.body100, !dbg !8886, !llvm.loop !8914

if.end123:                                        ; preds = %land.lhs.true92, %if.end89
  %arrayidx124 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !8916
  %94 = load float, float* %arrayidx124, align 4, !dbg !8916
  %cmp125 = fcmp oeq float %94, 0.000000e+00, !dbg !8918
  br i1 %cmp125, label %land.lhs.true126, label %if.end157, !dbg !8919

land.lhs.true126:                                 ; preds = %if.end123
  %arrayidx127 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !8920
  %95 = load float, float* %arrayidx127, align 4, !dbg !8920
  %cmp128 = fcmp oeq float %95, 0.000000e+00, !dbg !8921
  br i1 %cmp128, label %if.then129, label %if.end157, !dbg !8922

if.then129:                                       ; preds = %land.lhs.true126
  %arrayidx130 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8923
  %96 = load float, float* %arrayidx130, align 4, !dbg !8923
  %97 = load float*, float** %p.addr, align 8, !dbg !8925
  %arrayidx131 = getelementptr inbounds float, float* %97, i64 0, !dbg !8925
  store float %96, float* %arrayidx131, align 4, !dbg !8926
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 1, !dbg !8927
  %98 = load float, float* %arrayidx132, align 4, !dbg !8927
  %99 = load float*, float** %p.addr, align 8, !dbg !8928
  %arrayidx133 = getelementptr inbounds float, float* %99, i64 1, !dbg !8928
  store float %98, float* %arrayidx133, align 4, !dbg !8929
  br label %while.body134, !dbg !8930

while.body134:                                    ; preds = %if.then129, %if.end156
  %100 = load i32, i32* %i, align 4, !dbg !8931
  %inc135 = add nsw i32 %100, 1, !dbg !8931
  store i32 %inc135, i32* %i, align 4, !dbg !8931
  %cmp136 = icmp eq i32 %100, 12, !dbg !8934
  br i1 %cmp136, label %if.then137, label %if.end138, !dbg !8935

if.then137:                                       ; preds = %while.body134
  br label %return, !dbg !8936

if.end138:                                        ; preds = %while.body134
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 2, !dbg !8937
  %101 = load float, float* %arrayidx139, align 4, !dbg !8937
  %arrayidx140 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 2, !dbg !8938
  %102 = load float, float* %arrayidx140, align 4, !dbg !8938
  %add141 = fadd float %101, %102, !dbg !8939
  %mul142 = fmul float 5.000000e-01, %add141, !dbg !8940
  %103 = load float*, float** %p.addr, align 8, !dbg !8941
  %arrayidx143 = getelementptr inbounds float, float* %103, i64 2, !dbg !8941
  store float %mul142, float* %arrayidx143, align 4, !dbg !8942
  %104 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8943
  %function144 = getelementptr inbounds %struct.process, %struct.process* %104, i32 0, i32 4, !dbg !8945
  %105 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function144, align 8, !dbg !8945
  %106 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8946
  %107 = load float*, float** %p.addr, align 8, !dbg !8947
  %arrayidx145 = getelementptr inbounds float, float* %107, i64 0, !dbg !8947
  %108 = load float, float* %arrayidx145, align 4, !dbg !8947
  %109 = load float*, float** %p.addr, align 8, !dbg !8948
  %arrayidx146 = getelementptr inbounds float, float* %109, i64 1, !dbg !8948
  %110 = load float, float* %arrayidx146, align 4, !dbg !8948
  %111 = load float*, float** %p.addr, align 8, !dbg !8949
  %arrayidx147 = getelementptr inbounds float, float* %111, i64 2, !dbg !8949
  %112 = load float, float* %arrayidx147, align 4, !dbg !8949
  %call148 = call float %105(%struct.process* %106, float %108, float %110, float %112), !dbg !8943
  %cmp149 = fcmp ogt float %call148, 0.000000e+00, !dbg !8950
  br i1 %cmp149, label %if.then150, label %if.else153, !dbg !8951

if.then150:                                       ; preds = %if.end138
  %113 = load float*, float** %p.addr, align 8, !dbg !8952
  %arrayidx151 = getelementptr inbounds float, float* %113, i64 2, !dbg !8952
  %114 = load float, float* %arrayidx151, align 4, !dbg !8952
  %arrayidx152 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 2, !dbg !8953
  store float %114, float* %arrayidx152, align 4, !dbg !8954
  br label %if.end156, !dbg !8953

if.else153:                                       ; preds = %if.end138
  %115 = load float*, float** %p.addr, align 8, !dbg !8955
  %arrayidx154 = getelementptr inbounds float, float* %115, i64 2, !dbg !8955
  %116 = load float, float* %arrayidx154, align 4, !dbg !8955
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 2, !dbg !8956
  store float %116, float* %arrayidx155, align 4, !dbg !8957
  br label %if.end156

if.end156:                                        ; preds = %if.else153, %if.then150
  br label %while.body134, !dbg !8930, !llvm.loop !8958

if.end157:                                        ; preds = %land.lhs.true126, %if.end123
  br label %while.body158, !dbg !8960

while.body158:                                    ; preds = %if.end157, %if.end178
  %117 = load float*, float** %p.addr, align 8, !dbg !8961
  %arrayidx159 = getelementptr inbounds float, float* %117, i64 0, !dbg !8961
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8963
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8964
  call void @mid_v3_v3v3(float* %arrayidx159, float* %arraydecay160, float* %arraydecay161), !dbg !8965
  %118 = load i32, i32* %i, align 4, !dbg !8966
  %inc162 = add nsw i32 %118, 1, !dbg !8966
  store i32 %inc162, i32* %i, align 4, !dbg !8966
  %cmp163 = icmp eq i32 %118, 12, !dbg !8968
  br i1 %cmp163, label %if.then164, label %if.end165, !dbg !8969

if.then164:                                       ; preds = %while.body158
  br label %return, !dbg !8970

if.end165:                                        ; preds = %while.body158
  %119 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8972
  %function166 = getelementptr inbounds %struct.process, %struct.process* %119, i32 0, i32 4, !dbg !8974
  %120 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function166, align 8, !dbg !8974
  %121 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !8975
  %122 = load float*, float** %p.addr, align 8, !dbg !8976
  %arrayidx167 = getelementptr inbounds float, float* %122, i64 0, !dbg !8976
  %123 = load float, float* %arrayidx167, align 4, !dbg !8976
  %124 = load float*, float** %p.addr, align 8, !dbg !8977
  %arrayidx168 = getelementptr inbounds float, float* %124, i64 1, !dbg !8977
  %125 = load float, float* %arrayidx168, align 4, !dbg !8977
  %126 = load float*, float** %p.addr, align 8, !dbg !8978
  %arrayidx169 = getelementptr inbounds float, float* %126, i64 2, !dbg !8978
  %127 = load float, float* %arrayidx169, align 4, !dbg !8978
  %call170 = call float %120(%struct.process* %121, float %123, float %125, float %127), !dbg !8972
  %cmp171 = fcmp ogt float %call170, 0.000000e+00, !dbg !8979
  br i1 %cmp171, label %if.then172, label %if.else175, !dbg !8980

if.then172:                                       ; preds = %if.end165
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !8981
  %128 = load float*, float** %p.addr, align 8, !dbg !8983
  %arrayidx174 = getelementptr inbounds float, float* %128, i64 0, !dbg !8983
  call void @copy_v3_v3(float* %arraydecay173, float* %arrayidx174), !dbg !8984
  br label %if.end178, !dbg !8985

if.else175:                                       ; preds = %if.end165
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %neg, i64 0, i64 0, !dbg !8986
  %129 = load float*, float** %p.addr, align 8, !dbg !8988
  %arrayidx177 = getelementptr inbounds float, float* %129, i64 0, !dbg !8988
  call void @copy_v3_v3(float* %arraydecay176, float* %arrayidx177), !dbg !8989
  br label %if.end178

if.end178:                                        ; preds = %if.else175, %if.then172
  br label %while.body158, !dbg !8960, !llvm.loop !8990

return:                                           ; preds = %if.then164, %if.then137, %if.then103, %if.then72, %if.then47, %if.then29, %if.then14
  ret void, !dbg !8992
}

; Function Attrs: noinline nounwind uwtable
define internal void @vnormal(%struct.process* %process, float* %point, float* %r_no) #0 !dbg !8993 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %point.addr = alloca float*, align 8
  %r_no.addr = alloca float*, align 8
  %delta = alloca float, align 4
  %f = alloca float, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !8996, metadata !DIExpression()), !dbg !8997
  store float* %point, float** %point.addr, align 8
  call void @llvm.dbg.declare(metadata float** %point.addr, metadata !8998, metadata !DIExpression()), !dbg !8999
  store float* %r_no, float** %r_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_no.addr, metadata !9000, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.declare(metadata float* %delta, metadata !9002, metadata !DIExpression()), !dbg !9003
  %0 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9004
  %delta1 = getelementptr inbounds %struct.process, %struct.process* %0, i32 0, i32 6, !dbg !9005
  %1 = load float, float* %delta1, align 4, !dbg !9005
  %mul = fmul float 0x3FC99999A0000000, %1, !dbg !9006
  store float %mul, float* %delta, align 4, !dbg !9003
  call void @llvm.dbg.declare(metadata float* %f, metadata !9007, metadata !DIExpression()), !dbg !9008
  %2 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9009
  %function = getelementptr inbounds %struct.process, %struct.process* %2, i32 0, i32 4, !dbg !9010
  %3 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function, align 8, !dbg !9010
  %4 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9011
  %5 = load float*, float** %point.addr, align 8, !dbg !9012
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !9012
  %6 = load float, float* %arrayidx, align 4, !dbg !9012
  %7 = load float*, float** %point.addr, align 8, !dbg !9013
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !9013
  %8 = load float, float* %arrayidx2, align 4, !dbg !9013
  %9 = load float*, float** %point.addr, align 8, !dbg !9014
  %arrayidx3 = getelementptr inbounds float, float* %9, i64 2, !dbg !9014
  %10 = load float, float* %arrayidx3, align 4, !dbg !9014
  %call = call float %3(%struct.process* %4, float %6, float %8, float %10), !dbg !9009
  store float %call, float* %f, align 4, !dbg !9008
  %11 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9015
  %function4 = getelementptr inbounds %struct.process, %struct.process* %11, i32 0, i32 4, !dbg !9016
  %12 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function4, align 8, !dbg !9016
  %13 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9017
  %14 = load float*, float** %point.addr, align 8, !dbg !9018
  %arrayidx5 = getelementptr inbounds float, float* %14, i64 0, !dbg !9018
  %15 = load float, float* %arrayidx5, align 4, !dbg !9018
  %16 = load float, float* %delta, align 4, !dbg !9019
  %add = fadd float %15, %16, !dbg !9020
  %17 = load float*, float** %point.addr, align 8, !dbg !9021
  %arrayidx6 = getelementptr inbounds float, float* %17, i64 1, !dbg !9021
  %18 = load float, float* %arrayidx6, align 4, !dbg !9021
  %19 = load float*, float** %point.addr, align 8, !dbg !9022
  %arrayidx7 = getelementptr inbounds float, float* %19, i64 2, !dbg !9022
  %20 = load float, float* %arrayidx7, align 4, !dbg !9022
  %call8 = call float %12(%struct.process* %13, float %add, float %18, float %20), !dbg !9015
  %21 = load float, float* %f, align 4, !dbg !9023
  %sub = fsub float %call8, %21, !dbg !9024
  %22 = load float*, float** %r_no.addr, align 8, !dbg !9025
  %arrayidx9 = getelementptr inbounds float, float* %22, i64 0, !dbg !9025
  store float %sub, float* %arrayidx9, align 4, !dbg !9026
  %23 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9027
  %function10 = getelementptr inbounds %struct.process, %struct.process* %23, i32 0, i32 4, !dbg !9028
  %24 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function10, align 8, !dbg !9028
  %25 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9029
  %26 = load float*, float** %point.addr, align 8, !dbg !9030
  %arrayidx11 = getelementptr inbounds float, float* %26, i64 0, !dbg !9030
  %27 = load float, float* %arrayidx11, align 4, !dbg !9030
  %28 = load float*, float** %point.addr, align 8, !dbg !9031
  %arrayidx12 = getelementptr inbounds float, float* %28, i64 1, !dbg !9031
  %29 = load float, float* %arrayidx12, align 4, !dbg !9031
  %30 = load float, float* %delta, align 4, !dbg !9032
  %add13 = fadd float %29, %30, !dbg !9033
  %31 = load float*, float** %point.addr, align 8, !dbg !9034
  %arrayidx14 = getelementptr inbounds float, float* %31, i64 2, !dbg !9034
  %32 = load float, float* %arrayidx14, align 4, !dbg !9034
  %call15 = call float %24(%struct.process* %25, float %27, float %add13, float %32), !dbg !9027
  %33 = load float, float* %f, align 4, !dbg !9035
  %sub16 = fsub float %call15, %33, !dbg !9036
  %34 = load float*, float** %r_no.addr, align 8, !dbg !9037
  %arrayidx17 = getelementptr inbounds float, float* %34, i64 1, !dbg !9037
  store float %sub16, float* %arrayidx17, align 4, !dbg !9038
  %35 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9039
  %function18 = getelementptr inbounds %struct.process, %struct.process* %35, i32 0, i32 4, !dbg !9040
  %36 = load float (%struct.process*, float, float, float)*, float (%struct.process*, float, float, float)** %function18, align 8, !dbg !9040
  %37 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9041
  %38 = load float*, float** %point.addr, align 8, !dbg !9042
  %arrayidx19 = getelementptr inbounds float, float* %38, i64 0, !dbg !9042
  %39 = load float, float* %arrayidx19, align 4, !dbg !9042
  %40 = load float*, float** %point.addr, align 8, !dbg !9043
  %arrayidx20 = getelementptr inbounds float, float* %40, i64 1, !dbg !9043
  %41 = load float, float* %arrayidx20, align 4, !dbg !9043
  %42 = load float*, float** %point.addr, align 8, !dbg !9044
  %arrayidx21 = getelementptr inbounds float, float* %42, i64 2, !dbg !9044
  %43 = load float, float* %arrayidx21, align 4, !dbg !9044
  %44 = load float, float* %delta, align 4, !dbg !9045
  %add22 = fadd float %43, %44, !dbg !9046
  %call23 = call float %36(%struct.process* %37, float %39, float %41, float %add22), !dbg !9039
  %45 = load float, float* %f, align 4, !dbg !9047
  %sub24 = fsub float %call23, %45, !dbg !9048
  %46 = load float*, float** %r_no.addr, align 8, !dbg !9049
  %arrayidx25 = getelementptr inbounds float, float* %46, i64 2, !dbg !9049
  store float %sub24, float* %arrayidx25, align 4, !dbg !9050
  %47 = load float*, float** %r_no.addr, align 8, !dbg !9051
  %call26 = call float @normalize_v3(float* %47), !dbg !9052
  ret void, !dbg !9053
}

; Function Attrs: noinline nounwind uwtable
define internal void @addtovertices(%struct.vertices* %vertices, %struct.vertex* byval(%struct.vertex) align 8 %v) #0 !dbg !9054 {
entry:
  %vertices.addr = alloca %struct.vertices*, align 8
  %i = alloca i32, align 4
  %newv = alloca %struct.vertex*, align 8
  store %struct.vertices* %vertices, %struct.vertices** %vertices.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vertices** %vertices.addr, metadata !9058, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.declare(metadata %struct.vertex* %v, metadata !9060, metadata !DIExpression()), !dbg !9061
  %0 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9062
  %count = getelementptr inbounds %struct.vertices, %struct.vertices* %0, i32 0, i32 0, !dbg !9064
  %1 = load i32, i32* %count, align 8, !dbg !9064
  %2 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9065
  %max = getelementptr inbounds %struct.vertices, %struct.vertices* %2, i32 0, i32 1, !dbg !9066
  %3 = load i32, i32* %max, align 4, !dbg !9066
  %cmp = icmp eq i32 %1, %3, !dbg !9067
  br i1 %cmp, label %if.then, label %if.end18, !dbg !9068

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9069, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata %struct.vertex** %newv, metadata !9072, metadata !DIExpression()), !dbg !9073
  %4 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9074
  %count1 = getelementptr inbounds %struct.vertices, %struct.vertices* %4, i32 0, i32 0, !dbg !9075
  %5 = load i32, i32* %count1, align 8, !dbg !9075
  %cmp2 = icmp eq i32 %5, 0, !dbg !9076
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !9074

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9074

cond.false:                                       ; preds = %if.then
  %6 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9077
  %count3 = getelementptr inbounds %struct.vertices, %struct.vertices* %6, i32 0, i32 0, !dbg !9078
  %7 = load i32, i32* %count3, align 8, !dbg !9078
  %mul = mul nsw i32 2, %7, !dbg !9079
  br label %cond.end, !dbg !9074

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 10, %cond.true ], [ %mul, %cond.false ], !dbg !9074
  %8 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9080
  %max4 = getelementptr inbounds %struct.vertices, %struct.vertices* %8, i32 0, i32 1, !dbg !9081
  store i32 %cond, i32* %max4, align 4, !dbg !9082
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9083
  %10 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9084
  %max5 = getelementptr inbounds %struct.vertices, %struct.vertices* %10, i32 0, i32 1, !dbg !9085
  %11 = load i32, i32* %max5, align 4, !dbg !9085
  %conv = sext i32 %11 to i64, !dbg !9084
  %mul6 = mul i64 %conv, 24, !dbg !9086
  %call = call i8* %9(i64 %mul6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0)), !dbg !9083
  %12 = bitcast i8* %call to %struct.vertex*, !dbg !9087
  store %struct.vertex* %12, %struct.vertex** %newv, align 8, !dbg !9088
  store i32 0, i32* %i, align 4, !dbg !9089
  br label %for.cond, !dbg !9091

for.cond:                                         ; preds = %for.inc, %cond.end
  %13 = load i32, i32* %i, align 4, !dbg !9092
  %14 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9094
  %count7 = getelementptr inbounds %struct.vertices, %struct.vertices* %14, i32 0, i32 0, !dbg !9095
  %15 = load i32, i32* %count7, align 8, !dbg !9095
  %cmp8 = icmp slt i32 %13, %15, !dbg !9096
  br i1 %cmp8, label %for.body, label %for.end, !dbg !9097

for.body:                                         ; preds = %for.cond
  %16 = load %struct.vertex*, %struct.vertex** %newv, align 8, !dbg !9098
  %17 = load i32, i32* %i, align 4, !dbg !9099
  %idxprom = sext i32 %17 to i64, !dbg !9098
  %arrayidx = getelementptr inbounds %struct.vertex, %struct.vertex* %16, i64 %idxprom, !dbg !9098
  %18 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9100
  %ptr = getelementptr inbounds %struct.vertices, %struct.vertices* %18, i32 0, i32 2, !dbg !9101
  %19 = load %struct.vertex*, %struct.vertex** %ptr, align 8, !dbg !9101
  %20 = load i32, i32* %i, align 4, !dbg !9102
  %idxprom10 = sext i32 %20 to i64, !dbg !9100
  %arrayidx11 = getelementptr inbounds %struct.vertex, %struct.vertex* %19, i64 %idxprom10, !dbg !9100
  %21 = bitcast %struct.vertex* %arrayidx to i8*, !dbg !9100
  %22 = bitcast %struct.vertex* %arrayidx11 to i8*, !dbg !9100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 24, i1 false), !dbg !9100
  br label %for.inc, !dbg !9098

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !9103
  %inc = add nsw i32 %23, 1, !dbg !9103
  store i32 %inc, i32* %i, align 4, !dbg !9103
  br label %for.cond, !dbg !9104, !llvm.loop !9105

for.end:                                          ; preds = %for.cond
  %24 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9107
  %ptr12 = getelementptr inbounds %struct.vertices, %struct.vertices* %24, i32 0, i32 2, !dbg !9109
  %25 = load %struct.vertex*, %struct.vertex** %ptr12, align 8, !dbg !9109
  %cmp13 = icmp ne %struct.vertex* %25, null, !dbg !9110
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !9111

if.then15:                                        ; preds = %for.end
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9112
  %27 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9113
  %ptr16 = getelementptr inbounds %struct.vertices, %struct.vertices* %27, i32 0, i32 2, !dbg !9114
  %28 = load %struct.vertex*, %struct.vertex** %ptr16, align 8, !dbg !9114
  %29 = bitcast %struct.vertex* %28 to i8*, !dbg !9113
  call void %26(i8* %29), !dbg !9112
  br label %if.end, !dbg !9112

if.end:                                           ; preds = %if.then15, %for.end
  %30 = load %struct.vertex*, %struct.vertex** %newv, align 8, !dbg !9115
  %31 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9116
  %ptr17 = getelementptr inbounds %struct.vertices, %struct.vertices* %31, i32 0, i32 2, !dbg !9117
  store %struct.vertex* %30, %struct.vertex** %ptr17, align 8, !dbg !9118
  br label %if.end18, !dbg !9119

if.end18:                                         ; preds = %if.end, %entry
  %32 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9120
  %ptr19 = getelementptr inbounds %struct.vertices, %struct.vertices* %32, i32 0, i32 2, !dbg !9121
  %33 = load %struct.vertex*, %struct.vertex** %ptr19, align 8, !dbg !9121
  %34 = load %struct.vertices*, %struct.vertices** %vertices.addr, align 8, !dbg !9122
  %count20 = getelementptr inbounds %struct.vertices, %struct.vertices* %34, i32 0, i32 0, !dbg !9123
  %35 = load i32, i32* %count20, align 8, !dbg !9124
  %inc21 = add nsw i32 %35, 1, !dbg !9124
  store i32 %inc21, i32* %count20, align 8, !dbg !9124
  %idxprom22 = sext i32 %35 to i64, !dbg !9120
  %arrayidx23 = getelementptr inbounds %struct.vertex, %struct.vertex* %33, i64 %idxprom22, !dbg !9120
  %36 = bitcast %struct.vertex* %arrayidx23 to i8*, !dbg !9125
  %37 = bitcast %struct.vertex* %v to i8*, !dbg !9125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 8 %37, i64 24, i1 false), !dbg !9125
  ret void, !dbg !9126
}

; Function Attrs: noinline nounwind uwtable
define internal void @setedge(%struct.process* %process, %struct.edgelist** %table, i32 %i1, i32 %j1, i32 %k1, i32 %i2, i32 %j2, i32 %k2, i32 %vid) #0 !dbg !9127 {
entry:
  %process.addr = alloca %struct.process*, align 8
  %table.addr = alloca %struct.edgelist**, align 8
  %i1.addr = alloca i32, align 4
  %j1.addr = alloca i32, align 4
  %k1.addr = alloca i32, align 4
  %i2.addr = alloca i32, align 4
  %j2.addr = alloca i32, align 4
  %k2.addr = alloca i32, align 4
  %vid.addr = alloca i32, align 4
  %index = alloca i32, align 4
  %newe = alloca %struct.edgelist*, align 8
  %t = alloca i32, align 4
  store %struct.process* %process, %struct.process** %process.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.process** %process.addr, metadata !9130, metadata !DIExpression()), !dbg !9131
  store %struct.edgelist** %table, %struct.edgelist*** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edgelist*** %table.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  store i32 %i1, i32* %i1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i1.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  store i32 %j1, i32* %j1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j1.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  store i32 %k1, i32* %k1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k1.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  store i32 %i2, i32* %i2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i2.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  store i32 %j2, i32* %j2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j2.addr, metadata !9142, metadata !DIExpression()), !dbg !9143
  store i32 %k2, i32* %k2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k2.addr, metadata !9144, metadata !DIExpression()), !dbg !9145
  store i32 %vid, i32* %vid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vid.addr, metadata !9146, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9148, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.declare(metadata %struct.edgelist** %newe, metadata !9150, metadata !DIExpression()), !dbg !9151
  %0 = load i32, i32* %i1.addr, align 4, !dbg !9152
  %1 = load i32, i32* %i2.addr, align 4, !dbg !9154
  %cmp = icmp sgt i32 %0, %1, !dbg !9155
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9156

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %i1.addr, align 4, !dbg !9157
  %3 = load i32, i32* %i2.addr, align 4, !dbg !9158
  %cmp1 = icmp eq i32 %2, %3, !dbg !9159
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !9160

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load i32, i32* %j1.addr, align 4, !dbg !9161
  %5 = load i32, i32* %j2.addr, align 4, !dbg !9162
  %cmp2 = icmp sgt i32 %4, %5, !dbg !9163
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !9164

lor.lhs.false3:                                   ; preds = %land.lhs.true
  %6 = load i32, i32* %j1.addr, align 4, !dbg !9165
  %7 = load i32, i32* %j2.addr, align 4, !dbg !9166
  %cmp4 = icmp eq i32 %6, %7, !dbg !9167
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !9168

land.lhs.true5:                                   ; preds = %lor.lhs.false3
  %8 = load i32, i32* %k1.addr, align 4, !dbg !9169
  %9 = load i32, i32* %k2.addr, align 4, !dbg !9170
  %cmp6 = icmp sgt i32 %8, %9, !dbg !9171
  br i1 %cmp6, label %if.then, label %if.end, !dbg !9172

if.then:                                          ; preds = %land.lhs.true5, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %t, metadata !9173, metadata !DIExpression()), !dbg !9175
  %10 = load i32, i32* %i1.addr, align 4, !dbg !9176
  store i32 %10, i32* %t, align 4, !dbg !9175
  %11 = load i32, i32* %i2.addr, align 4, !dbg !9177
  store i32 %11, i32* %i1.addr, align 4, !dbg !9178
  %12 = load i32, i32* %t, align 4, !dbg !9179
  store i32 %12, i32* %i2.addr, align 4, !dbg !9180
  %13 = load i32, i32* %j1.addr, align 4, !dbg !9181
  store i32 %13, i32* %t, align 4, !dbg !9182
  %14 = load i32, i32* %j2.addr, align 4, !dbg !9183
  store i32 %14, i32* %j1.addr, align 4, !dbg !9184
  %15 = load i32, i32* %t, align 4, !dbg !9185
  store i32 %15, i32* %j2.addr, align 4, !dbg !9186
  %16 = load i32, i32* %k1.addr, align 4, !dbg !9187
  store i32 %16, i32* %t, align 4, !dbg !9188
  %17 = load i32, i32* %k2.addr, align 4, !dbg !9189
  store i32 %17, i32* %k1.addr, align 4, !dbg !9190
  %18 = load i32, i32* %t, align 4, !dbg !9191
  store i32 %18, i32* %k2.addr, align 4, !dbg !9192
  br label %if.end, !dbg !9193

if.end:                                           ; preds = %if.then, %land.lhs.true5, %lor.lhs.false3, %lor.lhs.false
  %19 = load i32, i32* %i1.addr, align 4, !dbg !9194
  %and = and i32 %19, 31, !dbg !9194
  %shl = shl i32 %and, 5, !dbg !9194
  %20 = load i32, i32* %j1.addr, align 4, !dbg !9194
  %and7 = and i32 %20, 31, !dbg !9194
  %or = or i32 %shl, %and7, !dbg !9194
  %shl8 = shl i32 %or, 5, !dbg !9194
  %21 = load i32, i32* %k1.addr, align 4, !dbg !9194
  %and9 = and i32 %21, 31, !dbg !9194
  %or10 = or i32 %shl8, %and9, !dbg !9194
  %22 = load i32, i32* %i2.addr, align 4, !dbg !9195
  %and11 = and i32 %22, 31, !dbg !9195
  %shl12 = shl i32 %and11, 5, !dbg !9195
  %23 = load i32, i32* %j2.addr, align 4, !dbg !9195
  %and13 = and i32 %23, 31, !dbg !9195
  %or14 = or i32 %shl12, %and13, !dbg !9195
  %shl15 = shl i32 %or14, 5, !dbg !9195
  %24 = load i32, i32* %k2.addr, align 4, !dbg !9195
  %and16 = and i32 %24, 31, !dbg !9195
  %or17 = or i32 %shl15, %and16, !dbg !9195
  %add = add nsw i32 %or10, %or17, !dbg !9196
  store i32 %add, i32* %index, align 4, !dbg !9197
  %25 = load %struct.process*, %struct.process** %process.addr, align 8, !dbg !9198
  %call = call i8* @new_pgn_element(%struct.process* %25, i32 40), !dbg !9199
  %26 = bitcast i8* %call to %struct.edgelist*, !dbg !9200
  store %struct.edgelist* %26, %struct.edgelist** %newe, align 8, !dbg !9201
  %27 = load i32, i32* %i1.addr, align 4, !dbg !9202
  %28 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9203
  %i118 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %28, i32 0, i32 0, !dbg !9204
  store i32 %27, i32* %i118, align 8, !dbg !9205
  %29 = load i32, i32* %j1.addr, align 4, !dbg !9206
  %30 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9207
  %j119 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %30, i32 0, i32 1, !dbg !9208
  store i32 %29, i32* %j119, align 4, !dbg !9209
  %31 = load i32, i32* %k1.addr, align 4, !dbg !9210
  %32 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9211
  %k120 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %32, i32 0, i32 2, !dbg !9212
  store i32 %31, i32* %k120, align 8, !dbg !9213
  %33 = load i32, i32* %i2.addr, align 4, !dbg !9214
  %34 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9215
  %i221 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %34, i32 0, i32 3, !dbg !9216
  store i32 %33, i32* %i221, align 4, !dbg !9217
  %35 = load i32, i32* %j2.addr, align 4, !dbg !9218
  %36 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9219
  %j222 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %36, i32 0, i32 4, !dbg !9220
  store i32 %35, i32* %j222, align 8, !dbg !9221
  %37 = load i32, i32* %k2.addr, align 4, !dbg !9222
  %38 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9223
  %k223 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %38, i32 0, i32 5, !dbg !9224
  store i32 %37, i32* %k223, align 4, !dbg !9225
  %39 = load i32, i32* %vid.addr, align 4, !dbg !9226
  %40 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9227
  %vid24 = getelementptr inbounds %struct.edgelist, %struct.edgelist* %40, i32 0, i32 6, !dbg !9228
  store i32 %39, i32* %vid24, align 8, !dbg !9229
  %41 = load %struct.edgelist**, %struct.edgelist*** %table.addr, align 8, !dbg !9230
  %42 = load i32, i32* %index, align 4, !dbg !9231
  %idxprom = zext i32 %42 to i64, !dbg !9230
  %arrayidx = getelementptr inbounds %struct.edgelist*, %struct.edgelist** %41, i64 %idxprom, !dbg !9230
  %43 = load %struct.edgelist*, %struct.edgelist** %arrayidx, align 8, !dbg !9230
  %44 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9232
  %next = getelementptr inbounds %struct.edgelist, %struct.edgelist* %44, i32 0, i32 7, !dbg !9233
  store %struct.edgelist* %43, %struct.edgelist** %next, align 8, !dbg !9234
  %45 = load %struct.edgelist*, %struct.edgelist** %newe, align 8, !dbg !9235
  %46 = load %struct.edgelist**, %struct.edgelist*** %table.addr, align 8, !dbg !9236
  %47 = load i32, i32* %index, align 4, !dbg !9237
  %idxprom25 = zext i32 %47 to i64, !dbg !9236
  %arrayidx26 = getelementptr inbounds %struct.edgelist*, %struct.edgelist** %46, i64 %idxprom25, !dbg !9236
  store %struct.edgelist* %45, %struct.edgelist** %arrayidx26, align 8, !dbg !9238
  ret void, !dbg !9239
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !9240 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !9243, metadata !DIExpression()), !dbg !9244
  %0 = load float*, float** %n.addr, align 8, !dbg !9245
  %1 = load float*, float** %n.addr, align 8, !dbg !9246
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !9247
  ret float %call, !dbg !9248
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !9249 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9252, metadata !DIExpression()), !dbg !9253
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.declare(metadata float* %d, metadata !9256, metadata !DIExpression()), !dbg !9257
  %0 = load float*, float** %a.addr, align 8, !dbg !9258
  %1 = load float*, float** %a.addr, align 8, !dbg !9259
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !9260
  store float %call, float* %d, align 4, !dbg !9257
  %2 = load float, float* %d, align 4, !dbg !9261
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !9263
  br i1 %cmp, label %if.then, label %if.else, !dbg !9264

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !9265
  %call1 = call float @sqrtf(float %3) #9, !dbg !9267
  store float %call1, float* %d, align 4, !dbg !9268
  %4 = load float*, float** %r.addr, align 8, !dbg !9269
  %5 = load float*, float** %a.addr, align 8, !dbg !9270
  %6 = load float, float* %d, align 4, !dbg !9271
  %div = fdiv float 1.000000e+00, %6, !dbg !9272
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !9273
  br label %if.end, !dbg !9274

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !9275
  call void @zero_v3(float* %7), !dbg !9277
  store float 0.000000e+00, float* %d, align 4, !dbg !9278
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !9279
  ret float %8, !dbg !9280
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !9281 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9284, metadata !DIExpression()), !dbg !9285
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9286, metadata !DIExpression()), !dbg !9287
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !9288, metadata !DIExpression()), !dbg !9289
  %0 = load float*, float** %a.addr, align 8, !dbg !9290
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9290
  %1 = load float, float* %arrayidx, align 4, !dbg !9290
  %2 = load float, float* %f.addr, align 4, !dbg !9291
  %mul = fmul float %1, %2, !dbg !9292
  %3 = load float*, float** %r.addr, align 8, !dbg !9293
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !9293
  store float %mul, float* %arrayidx1, align 4, !dbg !9294
  %4 = load float*, float** %a.addr, align 8, !dbg !9295
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9295
  %5 = load float, float* %arrayidx2, align 4, !dbg !9295
  %6 = load float, float* %f.addr, align 4, !dbg !9296
  %mul3 = fmul float %5, %6, !dbg !9297
  %7 = load float*, float** %r.addr, align 8, !dbg !9298
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9298
  store float %mul3, float* %arrayidx4, align 4, !dbg !9299
  %8 = load float*, float** %a.addr, align 8, !dbg !9300
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9300
  %9 = load float, float* %arrayidx5, align 4, !dbg !9300
  %10 = load float, float* %f.addr, align 4, !dbg !9301
  %mul6 = fmul float %9, %10, !dbg !9302
  %11 = load float*, float** %r.addr, align 8, !dbg !9303
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !9303
  store float %mul6, float* %arrayidx7, align 4, !dbg !9304
  ret void, !dbg !9305
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1734, !1735, !1736}
!llvm.ident = !{!1737}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "cubetable", scope: !2, file: !3, line: 885, type: !1731, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !41, globals: !1713, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/mball.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !21, !35}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 46, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20}
!9 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!10 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!11 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!12 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!13 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!14 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!15 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!16 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!17 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!20 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !22, line: 339, baseType: !7, size: 32, elements: !23)
!22 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!23 = !{!24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34}
!24 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!25 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!26 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!27 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!28 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!29 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!30 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!31 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!32 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!33 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!34 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eEvaluationMode", file: !36, line: 62, baseType: !7, size: 32, elements: !37)
!36 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!37 = !{!38, !39, !40}
!38 = !DIEnumerator(name: "DAG_EVAL_VIEWPORT", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "DAG_EVAL_PREVIEW", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "DAG_EVAL_RENDER", value: 2, isUnsigned: true)
!41 = !{!42, !48, !78, !113, !114, !141, !1461, !1642, !1643, !1645, !1650, !1659, !1685, !1672, !1694, !1700}
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !44, line: 130, baseType: !45)
!44 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!45 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !44, line: 117, size: 960, elements: !46)
!46 = !{!47, !49, !50, !52, !71, !75, !77, !79, !80, !81}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !45, file: !44, line: 118, baseType: !48, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !45, file: !44, line: 118, baseType: !48, size: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !45, file: !44, line: 119, baseType: !51, size: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !45, file: !44, line: 120, baseType: !53, size: 64, offset: 192)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!54 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !44, line: 136, size: 17600, elements: !55)
!55 = !{!56, !57, !58, !61, !66, !67, !68}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !54, file: !44, line: 137, baseType: !43, size: 960)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !54, file: !44, line: 138, baseType: !42, size: 64, offset: 960)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !54, file: !44, line: 139, baseType: !59, size: 64, offset: 1024)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !44, line: 43, flags: DIFlagFwdDecl)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !54, file: !44, line: 140, baseType: !62, size: 8192, offset: 1088)
!62 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 8192, elements: !64)
!63 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!64 = !{!65}
!65 = !DISubrange(count: 1024)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !54, file: !44, line: 141, baseType: !62, size: 8192, offset: 9280)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !54, file: !44, line: 148, baseType: !53, size: 64, offset: 17472)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !54, file: !44, line: 150, baseType: !69, size: 64, offset: 17536)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !44, line: 45, flags: DIFlagFwdDecl)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !45, file: !44, line: 121, baseType: !72, size: 528, offset: 256)
!72 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 528, elements: !73)
!73 = !{!74}
!74 = !DISubrange(count: 66)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !45, file: !44, line: 126, baseType: !76, size: 16, offset: 784)
!76 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !45, file: !44, line: 127, baseType: !78, size: 32, offset: 800)
!78 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !45, file: !44, line: 128, baseType: !78, size: 32, offset: 832)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !45, file: !44, line: 128, baseType: !78, size: 32, offset: 864)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !45, file: !44, line: 129, baseType: !82, size: 64, offset: 896)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !44, line: 75, baseType: !84)
!84 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !44, line: 62, size: 1024, elements: !85)
!85 = !{!86, !88, !89, !90, !91, !92, !96, !97, !111, !112}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !84, file: !44, line: 63, baseType: !87, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !84, file: !44, line: 63, baseType: !87, size: 64, offset: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !84, file: !44, line: 64, baseType: !63, size: 8, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !84, file: !44, line: 64, baseType: !63, size: 8, offset: 136)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !84, file: !44, line: 65, baseType: !76, size: 16, offset: 144)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !84, file: !44, line: 66, baseType: !93, size: 512, offset: 160)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 512, elements: !94)
!94 = !{!95}
!95 = !DISubrange(count: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !84, file: !44, line: 67, baseType: !78, size: 32, offset: 672)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !84, file: !44, line: 69, baseType: !98, size: 256, offset: 704)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !44, line: 60, baseType: !99)
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !44, line: 48, size: 256, elements: !100)
!100 = !{!101, !102, !109, !110}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !99, file: !44, line: 49, baseType: !48, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !99, file: !44, line: 58, baseType: !103, size: 128, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !104, line: 71, baseType: !105)
!104 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !104, line: 69, size: 128, elements: !106)
!106 = !{!107, !108}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !105, file: !104, line: 70, baseType: !48, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !105, file: !104, line: 70, baseType: !48, size: 64, offset: 64)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !99, file: !44, line: 59, baseType: !78, size: 32, offset: 192)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !99, file: !44, line: 59, baseType: !78, size: 32, offset: 224)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !84, file: !44, line: 70, baseType: !78, size: 32, offset: 960)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !84, file: !44, line: 74, baseType: !78, size: 32, offset: 992)
!113 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaBall", file: !116, line: 95, baseType: !117)
!116 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meta_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaBall", file: !116, line: 64, size: 1984, elements: !118)
!118 = !{!119, !120, !124, !125, !126, !128, !131, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !117, file: !116, line: 65, baseType: !43, size: 960)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !117, file: !116, line: 66, baseType: !121, size: 64, offset: 960)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !123, line: 48, flags: DIFlagFwdDecl)
!123 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!124 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !117, file: !116, line: 68, baseType: !103, size: 128, offset: 1024)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !117, file: !116, line: 69, baseType: !103, size: 128, offset: 1152)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "editelems", scope: !117, file: !116, line: 70, baseType: !127, size: 64, offset: 1280)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !117, file: !116, line: 71, baseType: !129, size: 64, offset: 1344)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !123, line: 49, flags: DIFlagFwdDecl)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !117, file: !116, line: 74, baseType: !132, size: 64, offset: 1408)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !123, line: 93, size: 7552, elements: !135)
!135 = !{!136, !137, !138, !139, !140, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !188, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !257, !258, !259, !260, !261, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1604}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !134, file: !123, line: 94, baseType: !43, size: 960)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !134, file: !123, line: 95, baseType: !121, size: 64, offset: 960)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !134, file: !123, line: 97, baseType: !76, size: 16, offset: 1024)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !134, file: !123, line: 97, baseType: !76, size: 16, offset: 1040)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !134, file: !123, line: 99, baseType: !141, size: 32, offset: 1056)
!141 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !134, file: !123, line: 99, baseType: !141, size: 32, offset: 1088)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !134, file: !123, line: 99, baseType: !141, size: 32, offset: 1120)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !134, file: !123, line: 100, baseType: !141, size: 32, offset: 1152)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !134, file: !123, line: 100, baseType: !141, size: 32, offset: 1184)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !134, file: !123, line: 100, baseType: !141, size: 32, offset: 1216)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !134, file: !123, line: 101, baseType: !141, size: 32, offset: 1248)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !134, file: !123, line: 101, baseType: !141, size: 32, offset: 1280)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !134, file: !123, line: 101, baseType: !141, size: 32, offset: 1312)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !134, file: !123, line: 102, baseType: !141, size: 32, offset: 1344)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !134, file: !123, line: 102, baseType: !141, size: 32, offset: 1376)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !134, file: !123, line: 102, baseType: !141, size: 32, offset: 1408)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !134, file: !123, line: 103, baseType: !141, size: 32, offset: 1440)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !134, file: !123, line: 103, baseType: !141, size: 32, offset: 1472)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !134, file: !123, line: 103, baseType: !141, size: 32, offset: 1504)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !134, file: !123, line: 103, baseType: !141, size: 32, offset: 1536)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !134, file: !123, line: 103, baseType: !141, size: 32, offset: 1568)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !134, file: !123, line: 104, baseType: !141, size: 32, offset: 1600)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !134, file: !123, line: 104, baseType: !141, size: 32, offset: 1632)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !134, file: !123, line: 104, baseType: !141, size: 32, offset: 1664)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !134, file: !123, line: 104, baseType: !141, size: 32, offset: 1696)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !134, file: !123, line: 104, baseType: !141, size: 32, offset: 1728)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !134, file: !123, line: 105, baseType: !141, size: 32, offset: 1760)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !134, file: !123, line: 108, baseType: !165, size: 704, offset: 1792)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !123, line: 53, size: 704, elements: !166)
!166 = !{!167, !168, !169, !170, !171, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !165, file: !123, line: 54, baseType: !141, size: 32)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !165, file: !123, line: 55, baseType: !141, size: 32, offset: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !165, file: !123, line: 56, baseType: !141, size: 32, offset: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !165, file: !123, line: 57, baseType: !141, size: 32, offset: 96)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !165, file: !123, line: 59, baseType: !172, size: 96, offset: 128)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 96, elements: !173)
!173 = !{!174}
!174 = !DISubrange(count: 3)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !165, file: !123, line: 60, baseType: !172, size: 96, offset: 224)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !165, file: !123, line: 61, baseType: !172, size: 96, offset: 320)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !165, file: !123, line: 63, baseType: !141, size: 32, offset: 416)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !165, file: !123, line: 64, baseType: !141, size: 32, offset: 448)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !165, file: !123, line: 65, baseType: !141, size: 32, offset: 480)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !165, file: !123, line: 67, baseType: !76, size: 16, offset: 512)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !165, file: !123, line: 68, baseType: !76, size: 16, offset: 528)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !165, file: !123, line: 69, baseType: !76, size: 16, offset: 544)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !165, file: !123, line: 70, baseType: !76, size: 16, offset: 560)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !165, file: !123, line: 72, baseType: !141, size: 32, offset: 576)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !165, file: !123, line: 73, baseType: !141, size: 32, offset: 608)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !165, file: !123, line: 74, baseType: !141, size: 32, offset: 640)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !165, file: !123, line: 75, baseType: !141, size: 32, offset: 672)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !134, file: !123, line: 109, baseType: !189, size: 128, offset: 2496)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !123, line: 79, size: 128, elements: !190)
!190 = !{!191, !192, !193, !194}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !189, file: !123, line: 80, baseType: !78, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !189, file: !123, line: 81, baseType: !78, size: 32, offset: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !189, file: !123, line: 82, baseType: !78, size: 32, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !189, file: !123, line: 83, baseType: !78, size: 32, offset: 96)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !134, file: !123, line: 111, baseType: !141, size: 32, offset: 2624)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !134, file: !123, line: 111, baseType: !141, size: 32, offset: 2656)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !134, file: !123, line: 112, baseType: !141, size: 32, offset: 2688)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !134, file: !123, line: 112, baseType: !141, size: 32, offset: 2720)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !134, file: !123, line: 113, baseType: !141, size: 32, offset: 2752)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !134, file: !123, line: 114, baseType: !141, size: 32, offset: 2784)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !134, file: !123, line: 114, baseType: !141, size: 32, offset: 2816)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !134, file: !123, line: 115, baseType: !76, size: 16, offset: 2848)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !134, file: !123, line: 115, baseType: !76, size: 16, offset: 2864)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !134, file: !123, line: 116, baseType: !76, size: 16, offset: 2880)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !134, file: !123, line: 117, baseType: !63, size: 8, offset: 2896)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !134, file: !123, line: 117, baseType: !63, size: 8, offset: 2904)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !134, file: !123, line: 119, baseType: !141, size: 32, offset: 2912)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !134, file: !123, line: 119, baseType: !141, size: 32, offset: 2944)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !134, file: !123, line: 120, baseType: !76, size: 16, offset: 2976)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !134, file: !123, line: 120, baseType: !76, size: 16, offset: 2992)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !134, file: !123, line: 121, baseType: !141, size: 32, offset: 3008)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !134, file: !123, line: 121, baseType: !141, size: 32, offset: 3040)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !134, file: !123, line: 122, baseType: !141, size: 32, offset: 3072)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !134, file: !123, line: 123, baseType: !141, size: 32, offset: 3104)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !134, file: !123, line: 124, baseType: !76, size: 16, offset: 3136)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !134, file: !123, line: 125, baseType: !76, size: 16, offset: 3152)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !134, file: !123, line: 127, baseType: !78, size: 32, offset: 3168)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !134, file: !123, line: 127, baseType: !78, size: 32, offset: 3200)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !134, file: !123, line: 128, baseType: !78, size: 32, offset: 3232)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !134, file: !123, line: 128, baseType: !78, size: 32, offset: 3264)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !134, file: !123, line: 129, baseType: !76, size: 16, offset: 3296)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !134, file: !123, line: 129, baseType: !76, size: 16, offset: 3312)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !134, file: !123, line: 129, baseType: !76, size: 16, offset: 3328)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !134, file: !123, line: 129, baseType: !76, size: 16, offset: 3344)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !134, file: !123, line: 130, baseType: !141, size: 32, offset: 3360)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !134, file: !123, line: 130, baseType: !141, size: 32, offset: 3392)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !134, file: !123, line: 130, baseType: !141, size: 32, offset: 3424)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !134, file: !123, line: 130, baseType: !141, size: 32, offset: 3456)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !134, file: !123, line: 131, baseType: !141, size: 32, offset: 3488)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !134, file: !123, line: 131, baseType: !141, size: 32, offset: 3520)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !134, file: !123, line: 131, baseType: !141, size: 32, offset: 3552)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !134, file: !123, line: 131, baseType: !141, size: 32, offset: 3584)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !134, file: !123, line: 132, baseType: !141, size: 32, offset: 3616)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !134, file: !123, line: 132, baseType: !141, size: 32, offset: 3648)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !134, file: !123, line: 133, baseType: !93, size: 512, offset: 3680)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !134, file: !123, line: 135, baseType: !141, size: 32, offset: 4192)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !134, file: !123, line: 136, baseType: !141, size: 32, offset: 4224)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !134, file: !123, line: 137, baseType: !141, size: 32, offset: 4256)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !134, file: !123, line: 138, baseType: !78, size: 32, offset: 4288)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !134, file: !123, line: 141, baseType: !63, size: 8, offset: 4320)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !134, file: !123, line: 141, baseType: !63, size: 8, offset: 4328)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !134, file: !123, line: 141, baseType: !63, size: 8, offset: 4336)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !134, file: !123, line: 141, baseType: !63, size: 8, offset: 4344)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !134, file: !123, line: 142, baseType: !76, size: 16, offset: 4352)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !134, file: !123, line: 142, baseType: !76, size: 16, offset: 4368)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !134, file: !123, line: 142, baseType: !76, size: 16, offset: 4384)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !134, file: !123, line: 145, baseType: !63, size: 8, offset: 4400)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !134, file: !123, line: 145, baseType: !63, size: 8, offset: 4408)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !134, file: !123, line: 148, baseType: !76, size: 16, offset: 4416)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !134, file: !123, line: 148, baseType: !76, size: 16, offset: 4432)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !134, file: !123, line: 149, baseType: !141, size: 32, offset: 4448)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !134, file: !123, line: 149, baseType: !141, size: 32, offset: 4480)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !134, file: !123, line: 152, baseType: !254, size: 128, offset: 4512)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 128, elements: !255)
!255 = !{!256}
!256 = !DISubrange(count: 4)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !134, file: !123, line: 153, baseType: !141, size: 32, offset: 4640)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !134, file: !123, line: 154, baseType: !141, size: 32, offset: 4672)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !134, file: !123, line: 157, baseType: !76, size: 16, offset: 4704)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !134, file: !123, line: 157, baseType: !76, size: 16, offset: 4720)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !134, file: !123, line: 160, baseType: !262, size: 64, offset: 4736)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !264, line: 113, size: 6208, elements: !265)
!264 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!265 = !{!266, !267, !268, !269, !270, !271, !275}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !263, file: !264, line: 114, baseType: !76, size: 16)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !263, file: !264, line: 114, baseType: !76, size: 16, offset: 16)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !263, file: !264, line: 115, baseType: !63, size: 8, offset: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !263, file: !264, line: 115, baseType: !63, size: 8, offset: 40)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !263, file: !264, line: 116, baseType: !63, size: 8, offset: 48)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !263, file: !264, line: 117, baseType: !272, size: 8, offset: 56)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 8, elements: !273)
!273 = !{!274}
!274 = !DISubrange(count: 1)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !263, file: !264, line: 119, baseType: !276, size: 6144, offset: 64)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 6144, elements: !286)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !264, line: 109, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !264, line: 106, size: 192, elements: !279)
!279 = !{!280, !281, !282, !283, !284, !285}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !278, file: !264, line: 107, baseType: !141, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !278, file: !264, line: 107, baseType: !141, size: 32, offset: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !278, file: !264, line: 107, baseType: !141, size: 32, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !278, file: !264, line: 107, baseType: !141, size: 32, offset: 96)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !278, file: !264, line: 107, baseType: !141, size: 32, offset: 128)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !278, file: !264, line: 108, baseType: !78, size: 32, offset: 160)
!286 = !{!287}
!287 = !DISubrange(count: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !134, file: !123, line: 161, baseType: !262, size: 64, offset: 4800)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !134, file: !123, line: 162, baseType: !63, size: 8, offset: 4864)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !134, file: !123, line: 162, baseType: !63, size: 8, offset: 4872)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !134, file: !123, line: 163, baseType: !63, size: 8, offset: 4880)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !134, file: !123, line: 163, baseType: !63, size: 8, offset: 4888)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !134, file: !123, line: 164, baseType: !76, size: 16, offset: 4896)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !134, file: !123, line: 164, baseType: !76, size: 16, offset: 4912)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !134, file: !123, line: 165, baseType: !141, size: 32, offset: 4928)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !134, file: !123, line: 165, baseType: !141, size: 32, offset: 4960)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !134, file: !123, line: 167, baseType: !298, size: 1152, offset: 4992)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 1152, elements: !1562)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !264, line: 57, size: 2496, elements: !301)
!301 = !{!302, !303, !304, !305, !306, !1356, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !300, file: !264, line: 59, baseType: !76, size: 16)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !300, file: !264, line: 59, baseType: !76, size: 16, offset: 16)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !300, file: !264, line: 59, baseType: !76, size: 16, offset: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !300, file: !264, line: 59, baseType: !76, size: 16, offset: 48)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !300, file: !264, line: 60, baseType: !307, size: 64, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !22, line: 115, size: 11392, elements: !309)
!309 = !{!310, !311, !312, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !337, !351, !352, !393, !394, !397, !398, !414, !415, !416, !417, !418, !419, !420, !421, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !498, !499, !500, !501, !502, !503, !504, !505, !506, !509, !512, !515, !516, !517, !518, !519, !522, !533, !536, !537, !543, !544, !545, !546, !547, !548, !549, !552, !555, !559, !1344, !1345}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !308, file: !22, line: 116, baseType: !43, size: 960)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !308, file: !22, line: 117, baseType: !121, size: 64, offset: 960)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !308, file: !22, line: 119, baseType: !313, size: 64, offset: 1024)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !22, line: 57, flags: DIFlagFwdDecl)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !308, file: !22, line: 121, baseType: !76, size: 16, offset: 1088)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !308, file: !22, line: 121, baseType: !76, size: 16, offset: 1104)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !308, file: !22, line: 122, baseType: !78, size: 32, offset: 1120)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !308, file: !22, line: 122, baseType: !78, size: 32, offset: 1152)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !308, file: !22, line: 122, baseType: !78, size: 32, offset: 1184)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !308, file: !22, line: 123, baseType: !93, size: 512, offset: 1216)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !308, file: !22, line: 124, baseType: !307, size: 64, offset: 1728)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !308, file: !22, line: 124, baseType: !307, size: 64, offset: 1792)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !308, file: !22, line: 127, baseType: !307, size: 64, offset: 1856)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !308, file: !22, line: 127, baseType: !307, size: 64, offset: 1920)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !308, file: !22, line: 127, baseType: !307, size: 64, offset: 1984)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !308, file: !22, line: 128, baseType: !129, size: 64, offset: 2048)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !308, file: !22, line: 130, baseType: !328, size: 64, offset: 2112)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !22, line: 97, size: 832, elements: !330)
!330 = !{!331, !335, !336}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !329, file: !22, line: 98, baseType: !332, size: 768)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 768, elements: !333)
!333 = !{!334, !174}
!334 = !DISubrange(count: 8)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !329, file: !22, line: 99, baseType: !78, size: 32, offset: 768)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !329, file: !22, line: 99, baseType: !78, size: 32, offset: 800)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !308, file: !22, line: 131, baseType: !338, size: 64, offset: 2176)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !340, line: 486, size: 1600, elements: !341)
!340 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!341 = !{!342, !343, !344, !345, !346, !347, !348, !349, !350}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !339, file: !340, line: 487, baseType: !43, size: 960)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !339, file: !340, line: 489, baseType: !103, size: 128, offset: 960)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !339, file: !340, line: 490, baseType: !103, size: 128, offset: 1088)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !339, file: !340, line: 491, baseType: !103, size: 128, offset: 1216)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !339, file: !340, line: 492, baseType: !103, size: 128, offset: 1344)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !339, file: !340, line: 494, baseType: !78, size: 32, offset: 1472)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !339, file: !340, line: 495, baseType: !78, size: 32, offset: 1504)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !339, file: !340, line: 497, baseType: !78, size: 32, offset: 1536)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !339, file: !340, line: 498, baseType: !78, size: 32, offset: 1568)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !308, file: !22, line: 132, baseType: !338, size: 64, offset: 2240)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !308, file: !22, line: 133, baseType: !353, size: 64, offset: 2304)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !340, line: 334, size: 1728, elements: !355)
!355 = !{!356, !357, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !392}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !354, file: !340, line: 335, baseType: !103, size: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !354, file: !340, line: 336, baseType: !358, size: 64, offset: 128)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !340, line: 47, flags: DIFlagFwdDecl)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !354, file: !340, line: 338, baseType: !76, size: 16, offset: 192)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !354, file: !340, line: 338, baseType: !76, size: 16, offset: 208)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !354, file: !340, line: 339, baseType: !7, size: 32, offset: 224)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !354, file: !340, line: 340, baseType: !78, size: 32, offset: 256)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !354, file: !340, line: 342, baseType: !141, size: 32, offset: 288)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !354, file: !340, line: 343, baseType: !172, size: 96, offset: 320)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !354, file: !340, line: 344, baseType: !172, size: 96, offset: 416)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !354, file: !340, line: 347, baseType: !103, size: 128, offset: 512)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !354, file: !340, line: 349, baseType: !78, size: 32, offset: 640)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !354, file: !340, line: 350, baseType: !78, size: 32, offset: 672)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !354, file: !340, line: 351, baseType: !48, size: 64, offset: 704)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !354, file: !340, line: 352, baseType: !48, size: 64, offset: 768)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !354, file: !340, line: 354, baseType: !373, size: 384, offset: 832)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !340, line: 116, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !340, line: 94, size: 384, elements: !375)
!375 = !{!376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !374, file: !340, line: 96, baseType: !78, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !374, file: !340, line: 96, baseType: !78, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !374, file: !340, line: 97, baseType: !78, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !374, file: !340, line: 97, baseType: !78, size: 32, offset: 96)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !374, file: !340, line: 99, baseType: !76, size: 16, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !374, file: !340, line: 100, baseType: !76, size: 16, offset: 144)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !374, file: !340, line: 102, baseType: !76, size: 16, offset: 160)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !374, file: !340, line: 105, baseType: !76, size: 16, offset: 176)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !374, file: !340, line: 108, baseType: !76, size: 16, offset: 192)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !374, file: !340, line: 109, baseType: !76, size: 16, offset: 208)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !374, file: !340, line: 111, baseType: !76, size: 16, offset: 224)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !374, file: !340, line: 112, baseType: !76, size: 16, offset: 240)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !374, file: !340, line: 114, baseType: !78, size: 32, offset: 256)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !374, file: !340, line: 114, baseType: !78, size: 32, offset: 288)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !374, file: !340, line: 115, baseType: !78, size: 32, offset: 320)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !374, file: !340, line: 115, baseType: !78, size: 32, offset: 352)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !354, file: !340, line: 355, baseType: !93, size: 512, offset: 1216)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !308, file: !22, line: 134, baseType: !48, size: 64, offset: 2368)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !308, file: !22, line: 136, baseType: !395, size: 64, offset: 2432)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !22, line: 58, flags: DIFlagFwdDecl)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !308, file: !22, line: 138, baseType: !373, size: 384, offset: 2496)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !308, file: !22, line: 139, baseType: !399, size: 64, offset: 2880)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !340, line: 80, baseType: !401)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !340, line: 72, size: 192, elements: !402)
!402 = !{!403, !410, !411, !412, !413}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !401, file: !340, line: 73, baseType: !404, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !340, line: 59, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !340, line: 56, size: 128, elements: !407)
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !406, file: !340, line: 57, baseType: !172, size: 96)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !406, file: !340, line: 58, baseType: !78, size: 32, offset: 96)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !401, file: !340, line: 74, baseType: !78, size: 32, offset: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !401, file: !340, line: 76, baseType: !78, size: 32, offset: 96)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !401, file: !340, line: 77, baseType: !78, size: 32, offset: 128)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !401, file: !340, line: 79, baseType: !78, size: 32, offset: 160)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !308, file: !22, line: 141, baseType: !103, size: 128, offset: 2944)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !308, file: !22, line: 142, baseType: !103, size: 128, offset: 3072)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !308, file: !22, line: 143, baseType: !103, size: 128, offset: 3200)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !308, file: !22, line: 144, baseType: !103, size: 128, offset: 3328)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !308, file: !22, line: 146, baseType: !78, size: 32, offset: 3456)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !308, file: !22, line: 147, baseType: !78, size: 32, offset: 3488)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !308, file: !22, line: 150, baseType: !132, size: 64, offset: 3520)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !308, file: !22, line: 151, baseType: !422, size: 64, offset: 3584)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !308, file: !22, line: 152, baseType: !78, size: 32, offset: 3648)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !308, file: !22, line: 153, baseType: !78, size: 32, offset: 3680)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !308, file: !22, line: 156, baseType: !172, size: 96, offset: 3712)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !308, file: !22, line: 156, baseType: !172, size: 96, offset: 3808)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !308, file: !22, line: 156, baseType: !172, size: 96, offset: 3904)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !308, file: !22, line: 157, baseType: !172, size: 96, offset: 4000)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !308, file: !22, line: 158, baseType: !172, size: 96, offset: 4096)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !308, file: !22, line: 159, baseType: !172, size: 96, offset: 4192)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !308, file: !22, line: 160, baseType: !172, size: 96, offset: 4288)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !308, file: !22, line: 160, baseType: !172, size: 96, offset: 4384)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !308, file: !22, line: 161, baseType: !254, size: 128, offset: 4480)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !308, file: !22, line: 161, baseType: !254, size: 128, offset: 4608)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !308, file: !22, line: 162, baseType: !172, size: 96, offset: 4736)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !308, file: !22, line: 162, baseType: !172, size: 96, offset: 4832)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !308, file: !22, line: 163, baseType: !141, size: 32, offset: 4928)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !308, file: !22, line: 163, baseType: !141, size: 32, offset: 4960)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !308, file: !22, line: 164, baseType: !440, size: 512, offset: 4992)
!440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 512, elements: !441)
!441 = !{!256, !256}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !308, file: !22, line: 165, baseType: !440, size: 512, offset: 5504)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !308, file: !22, line: 166, baseType: !440, size: 512, offset: 6016)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !308, file: !22, line: 167, baseType: !440, size: 512, offset: 6528)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !308, file: !22, line: 176, baseType: !440, size: 512, offset: 7040)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !308, file: !22, line: 178, baseType: !7, size: 32, offset: 7552)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !308, file: !22, line: 180, baseType: !76, size: 16, offset: 7584)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !308, file: !22, line: 181, baseType: !76, size: 16, offset: 7600)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !308, file: !22, line: 183, baseType: !76, size: 16, offset: 7616)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !308, file: !22, line: 183, baseType: !76, size: 16, offset: 7632)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !308, file: !22, line: 184, baseType: !76, size: 16, offset: 7648)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !308, file: !22, line: 184, baseType: !76, size: 16, offset: 7664)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !308, file: !22, line: 185, baseType: !76, size: 16, offset: 7680)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !308, file: !22, line: 186, baseType: !76, size: 16, offset: 7696)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !308, file: !22, line: 187, baseType: !76, size: 16, offset: 7712)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !308, file: !22, line: 188, baseType: !63, size: 8, offset: 7728)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !308, file: !22, line: 189, baseType: !63, size: 8, offset: 7736)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !308, file: !22, line: 192, baseType: !78, size: 32, offset: 7744)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !308, file: !22, line: 192, baseType: !78, size: 32, offset: 7776)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !308, file: !22, line: 192, baseType: !78, size: 32, offset: 7808)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !308, file: !22, line: 192, baseType: !78, size: 32, offset: 7840)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !308, file: !22, line: 194, baseType: !78, size: 32, offset: 7872)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !308, file: !22, line: 202, baseType: !141, size: 32, offset: 7904)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !308, file: !22, line: 202, baseType: !141, size: 32, offset: 7936)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !308, file: !22, line: 202, baseType: !141, size: 32, offset: 7968)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !308, file: !22, line: 211, baseType: !141, size: 32, offset: 8000)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !308, file: !22, line: 212, baseType: !141, size: 32, offset: 8032)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !308, file: !22, line: 213, baseType: !141, size: 32, offset: 8064)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !308, file: !22, line: 214, baseType: !141, size: 32, offset: 8096)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !308, file: !22, line: 215, baseType: !141, size: 32, offset: 8128)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !308, file: !22, line: 216, baseType: !141, size: 32, offset: 8160)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !308, file: !22, line: 219, baseType: !141, size: 32, offset: 8192)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !308, file: !22, line: 220, baseType: !141, size: 32, offset: 8224)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !308, file: !22, line: 221, baseType: !141, size: 32, offset: 8256)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !308, file: !22, line: 224, baseType: !113, size: 16, offset: 8288)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !308, file: !22, line: 224, baseType: !113, size: 16, offset: 8304)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !308, file: !22, line: 226, baseType: !76, size: 16, offset: 8320)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !308, file: !22, line: 228, baseType: !63, size: 8, offset: 8336)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !308, file: !22, line: 229, baseType: !63, size: 8, offset: 8344)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !308, file: !22, line: 231, baseType: !76, size: 16, offset: 8352)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !308, file: !22, line: 232, baseType: !63, size: 8, offset: 8368)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !308, file: !22, line: 233, baseType: !63, size: 8, offset: 8376)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !308, file: !22, line: 234, baseType: !141, size: 32, offset: 8384)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !308, file: !22, line: 235, baseType: !141, size: 32, offset: 8416)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !308, file: !22, line: 237, baseType: !103, size: 128, offset: 8448)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !308, file: !22, line: 238, baseType: !103, size: 128, offset: 8576)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !308, file: !22, line: 239, baseType: !103, size: 128, offset: 8704)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !308, file: !22, line: 240, baseType: !103, size: 128, offset: 8832)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !308, file: !22, line: 242, baseType: !141, size: 32, offset: 8960)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !308, file: !22, line: 244, baseType: !76, size: 16, offset: 8992)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !308, file: !22, line: 245, baseType: !113, size: 16, offset: 9008)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !308, file: !22, line: 246, baseType: !254, size: 128, offset: 9024)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !308, file: !22, line: 248, baseType: !78, size: 32, offset: 9152)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !308, file: !22, line: 249, baseType: !78, size: 32, offset: 9184)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !308, file: !22, line: 251, baseType: !496, size: 64, offset: 9216)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !22, line: 251, flags: DIFlagFwdDecl)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !308, file: !22, line: 253, baseType: !63, size: 8, offset: 9280)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !308, file: !22, line: 254, baseType: !63, size: 8, offset: 9288)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !308, file: !22, line: 255, baseType: !76, size: 16, offset: 9296)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !308, file: !22, line: 256, baseType: !172, size: 96, offset: 9312)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !308, file: !22, line: 258, baseType: !103, size: 128, offset: 9408)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !308, file: !22, line: 259, baseType: !103, size: 128, offset: 9536)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !308, file: !22, line: 260, baseType: !103, size: 128, offset: 9664)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !308, file: !22, line: 261, baseType: !103, size: 128, offset: 9792)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !308, file: !22, line: 263, baseType: !507, size: 64, offset: 9920)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !22, line: 52, flags: DIFlagFwdDecl)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !308, file: !22, line: 264, baseType: !510, size: 64, offset: 9984)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !22, line: 53, flags: DIFlagFwdDecl)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !308, file: !22, line: 265, baseType: !513, size: 64, offset: 10048)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !123, line: 46, flags: DIFlagFwdDecl)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !308, file: !22, line: 267, baseType: !63, size: 8, offset: 10112)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !308, file: !22, line: 268, baseType: !63, size: 8, offset: 10120)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !308, file: !22, line: 269, baseType: !76, size: 16, offset: 10128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !308, file: !22, line: 270, baseType: !141, size: 32, offset: 10144)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !308, file: !22, line: 272, baseType: !520, size: 64, offset: 10176)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !22, line: 54, flags: DIFlagFwdDecl)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !308, file: !22, line: 275, baseType: !523, size: 64, offset: 10240)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !525, line: 49, size: 448, elements: !526)
!525 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!526 = !{!527, !528, !529, !530}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !524, file: !525, line: 50, baseType: !103, size: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !524, file: !525, line: 51, baseType: !103, size: 128, offset: 128)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !524, file: !525, line: 52, baseType: !103, size: 128, offset: 256)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !524, file: !525, line: 53, baseType: !531, size: 64, offset: 384)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !22, line: 49, flags: DIFlagFwdDecl)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !308, file: !22, line: 277, baseType: !534, size: 64, offset: 10304)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !22, line: 56, flags: DIFlagFwdDecl)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !308, file: !22, line: 277, baseType: !534, size: 64, offset: 10368)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !308, file: !22, line: 278, baseType: !538, size: 64, offset: 10432)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !539, line: 27, baseType: !540)
!539 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !541, line: 45, baseType: !542)
!541 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!542 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !308, file: !22, line: 279, baseType: !538, size: 64, offset: 10496)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !308, file: !22, line: 280, baseType: !7, size: 32, offset: 10560)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !308, file: !22, line: 281, baseType: !7, size: 32, offset: 10592)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !308, file: !22, line: 283, baseType: !103, size: 128, offset: 10624)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !308, file: !22, line: 284, baseType: !103, size: 128, offset: 10752)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !308, file: !22, line: 285, baseType: !127, size: 64, offset: 10880)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !308, file: !22, line: 287, baseType: !550, size: 64, offset: 10944)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !22, line: 59, flags: DIFlagFwdDecl)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !308, file: !22, line: 288, baseType: !553, size: 64, offset: 11008)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !22, line: 288, flags: DIFlagFwdDecl)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !308, file: !22, line: 290, baseType: !556, size: 64, offset: 11072)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 64, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 2)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !308, file: !22, line: 291, baseType: !560, size: 64, offset: 11136)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !562, line: 65, baseType: !563)
!562 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !562, line: 50, size: 320, elements: !564)
!564 = !{!565, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !563, file: !562, line: 51, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !568, line: 1216, size: 39680, elements: !569)
!568 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!569 = !{!570, !571, !572, !573, !576, !577, !578, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !604, !607, !903, !906, !1204, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1226, !1227, !1228, !1229, !1230, !1238, !1305, !1312, !1313, !1320, !1323, !1324, !1325, !1326, !1327, !1328}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !567, file: !568, line: 1217, baseType: !43, size: 960)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !567, file: !568, line: 1218, baseType: !121, size: 64, offset: 960)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !567, file: !568, line: 1220, baseType: !307, size: 64, offset: 1024)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !567, file: !568, line: 1221, baseType: !574, size: 64, offset: 1088)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !568, line: 52, flags: DIFlagFwdDecl)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !567, file: !568, line: 1223, baseType: !566, size: 64, offset: 1152)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !567, file: !568, line: 1225, baseType: !103, size: 128, offset: 1216)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !567, file: !568, line: 1226, baseType: !579, size: 64, offset: 1344)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !568, line: 69, size: 320, elements: !581)
!581 = !{!582, !583, !584, !585, !586, !587, !588, !589}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !580, file: !568, line: 70, baseType: !579, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !580, file: !568, line: 70, baseType: !579, size: 64, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !580, file: !568, line: 71, baseType: !7, size: 32, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !580, file: !568, line: 71, baseType: !7, size: 32, offset: 160)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !580, file: !568, line: 72, baseType: !78, size: 32, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !580, file: !568, line: 73, baseType: !76, size: 16, offset: 224)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !580, file: !568, line: 73, baseType: !76, size: 16, offset: 240)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !580, file: !568, line: 74, baseType: !307, size: 64, offset: 256)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !567, file: !568, line: 1227, baseType: !307, size: 64, offset: 1408)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !567, file: !568, line: 1229, baseType: !172, size: 96, offset: 1472)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !567, file: !568, line: 1230, baseType: !172, size: 96, offset: 1568)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !567, file: !568, line: 1231, baseType: !172, size: 96, offset: 1664)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !567, file: !568, line: 1231, baseType: !172, size: 96, offset: 1760)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !567, file: !568, line: 1233, baseType: !7, size: 32, offset: 1856)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !567, file: !568, line: 1234, baseType: !78, size: 32, offset: 1888)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !567, file: !568, line: 1235, baseType: !7, size: 32, offset: 1920)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !567, file: !568, line: 1237, baseType: !76, size: 16, offset: 1952)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !567, file: !568, line: 1239, baseType: !63, size: 8, offset: 1968)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !567, file: !568, line: 1240, baseType: !272, size: 8, offset: 1976)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !567, file: !568, line: 1242, baseType: !602, size: 64, offset: 1984)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !123, line: 47, flags: DIFlagFwdDecl)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !567, file: !568, line: 1244, baseType: !605, size: 64, offset: 2048)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !568, line: 59, flags: DIFlagFwdDecl)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !567, file: !568, line: 1246, baseType: !608, size: 64, offset: 2112)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !568, line: 1067, size: 5184, elements: !610)
!610 = !{!611, !642, !643, !658, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !680, !775, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !824, !825, !826, !827, !828, !829, !830, !831, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !886}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !609, file: !568, line: 1068, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !568, line: 934, baseType: !614)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !568, line: 925, size: 576, elements: !615)
!615 = !{!616, !633, !634, !635, !636, !638, !641}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !614, file: !568, line: 926, baseType: !617, size: 320)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !568, line: 830, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !568, line: 813, size: 320, elements: !619)
!619 = !{!620, !623, !626, !627, !630, !631, !632}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !618, file: !568, line: 814, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !568, line: 51, flags: DIFlagFwdDecl)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !618, file: !568, line: 815, baseType: !624, size: 64, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !568, line: 815, flags: DIFlagFwdDecl)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !618, file: !568, line: 818, baseType: !48, size: 64, offset: 128)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !618, file: !568, line: 819, baseType: !628, size: 32, offset: 192)
!628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !629, size: 32, elements: !255)
!629 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !618, file: !568, line: 822, baseType: !78, size: 32, offset: 224)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !618, file: !568, line: 826, baseType: !78, size: 32, offset: 256)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !618, file: !568, line: 829, baseType: !78, size: 32, offset: 288)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !614, file: !568, line: 928, baseType: !76, size: 16, offset: 320)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !614, file: !568, line: 928, baseType: !76, size: 16, offset: 336)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !614, file: !568, line: 929, baseType: !78, size: 32, offset: 352)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !614, file: !568, line: 930, baseType: !637, size: 64, offset: 384)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !614, file: !568, line: 931, baseType: !639, size: 64, offset: 448)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !568, line: 931, flags: DIFlagFwdDecl)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !614, file: !568, line: 933, baseType: !48, size: 64, offset: 512)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !609, file: !568, line: 1069, baseType: !612, size: 64, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !609, file: !568, line: 1070, baseType: !644, size: 64, offset: 128)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !568, line: 916, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !568, line: 891, size: 704, elements: !647)
!647 = !{!648, !649, !650, !652, !653, !654, !655, !656, !657}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !646, file: !568, line: 892, baseType: !617, size: 320)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !646, file: !568, line: 896, baseType: !78, size: 32, offset: 320)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !646, file: !568, line: 900, baseType: !651, size: 96, offset: 352)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 96, elements: !173)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !646, file: !568, line: 903, baseType: !141, size: 32, offset: 448)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !646, file: !568, line: 906, baseType: !78, size: 32, offset: 480)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !646, file: !568, line: 909, baseType: !141, size: 32, offset: 512)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !646, file: !568, line: 912, baseType: !141, size: 32, offset: 544)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !646, file: !568, line: 914, baseType: !307, size: 64, offset: 576)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !646, file: !568, line: 915, baseType: !48, size: 64, offset: 640)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !609, file: !568, line: 1071, baseType: !659, size: 64, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !568, line: 920, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !568, line: 918, size: 320, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !661, file: !568, line: 919, baseType: !617, size: 320)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !609, file: !568, line: 1075, baseType: !141, size: 32, offset: 256)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !609, file: !568, line: 1077, baseType: !141, size: 32, offset: 288)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !609, file: !568, line: 1078, baseType: !141, size: 32, offset: 320)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !609, file: !568, line: 1079, baseType: !76, size: 16, offset: 352)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !609, file: !568, line: 1082, baseType: !76, size: 16, offset: 368)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !609, file: !568, line: 1085, baseType: !63, size: 8, offset: 384)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !609, file: !568, line: 1086, baseType: !63, size: 8, offset: 392)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !609, file: !568, line: 1087, baseType: !63, size: 8, offset: 400)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !609, file: !568, line: 1088, baseType: !63, size: 8, offset: 408)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !609, file: !568, line: 1090, baseType: !141, size: 32, offset: 416)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !609, file: !568, line: 1093, baseType: !76, size: 16, offset: 448)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !609, file: !568, line: 1096, baseType: !63, size: 8, offset: 464)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !609, file: !568, line: 1098, baseType: !677, size: 40, offset: 472)
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 40, elements: !678)
!678 = !{!679}
!679 = !DISubrange(count: 5)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !609, file: !568, line: 1101, baseType: !681, size: 832, offset: 512)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !568, line: 836, size: 832, elements: !682)
!682 = !{!683, !684, !685, !686, !687, !688, !690, !691, !692, !771, !772, !773, !774}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !681, file: !568, line: 837, baseType: !617, size: 320)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !681, file: !568, line: 839, baseType: !76, size: 16, offset: 320)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !681, file: !568, line: 839, baseType: !76, size: 16, offset: 336)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !681, file: !568, line: 842, baseType: !76, size: 16, offset: 352)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !681, file: !568, line: 842, baseType: !76, size: 16, offset: 368)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !681, file: !568, line: 843, baseType: !689, size: 32, offset: 384)
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 32, elements: !557)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !681, file: !568, line: 845, baseType: !78, size: 32, offset: 416)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !681, file: !568, line: 847, baseType: !48, size: 64, offset: 448)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !681, file: !568, line: 848, baseType: !693, size: 64, offset: 512)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !562, line: 77, size: 15424, elements: !695)
!695 = !{!696, !697, !698, !701, !704, !707, !710, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !760, !761, !765}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !694, file: !562, line: 78, baseType: !43, size: 960)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !694, file: !562, line: 80, baseType: !62, size: 8192, offset: 960)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !694, file: !562, line: 82, baseType: !699, size: 64, offset: 9152)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !562, line: 43, flags: DIFlagFwdDecl)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !694, file: !562, line: 83, baseType: !702, size: 64, offset: 9216)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !44, line: 46, flags: DIFlagFwdDecl)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !694, file: !562, line: 86, baseType: !705, size: 64, offset: 9280)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !562, line: 41, flags: DIFlagFwdDecl)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !694, file: !562, line: 87, baseType: !708, size: 64, offset: 9344)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !562, line: 44, flags: DIFlagFwdDecl)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !694, file: !562, line: 89, baseType: !711, size: 512, offset: 9408)
!711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 512, elements: !712)
!712 = !{!334}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !694, file: !562, line: 90, baseType: !76, size: 16, offset: 9920)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !694, file: !562, line: 90, baseType: !76, size: 16, offset: 9936)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !694, file: !562, line: 92, baseType: !76, size: 16, offset: 9952)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !694, file: !562, line: 92, baseType: !76, size: 16, offset: 9968)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !694, file: !562, line: 93, baseType: !76, size: 16, offset: 9984)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !694, file: !562, line: 93, baseType: !76, size: 16, offset: 10000)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !694, file: !562, line: 94, baseType: !78, size: 32, offset: 10016)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !694, file: !562, line: 97, baseType: !76, size: 16, offset: 10048)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !694, file: !562, line: 97, baseType: !76, size: 16, offset: 10064)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !694, file: !562, line: 98, baseType: !76, size: 16, offset: 10080)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !694, file: !562, line: 98, baseType: !76, size: 16, offset: 10096)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !694, file: !562, line: 99, baseType: !76, size: 16, offset: 10112)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !694, file: !562, line: 99, baseType: !76, size: 16, offset: 10128)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !694, file: !562, line: 100, baseType: !7, size: 32, offset: 10144)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !694, file: !562, line: 101, baseType: !637, size: 64, offset: 10176)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !694, file: !562, line: 103, baseType: !69, size: 64, offset: 10240)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !694, file: !562, line: 104, baseType: !730, size: 64, offset: 10304)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !44, line: 159, size: 448, elements: !732)
!732 = !{!733, !735, !736, !737, !738, !740}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !731, file: !44, line: 161, baseType: !734, size: 64)
!734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !557)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !731, file: !44, line: 162, baseType: !734, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !731, file: !44, line: 163, baseType: !689, size: 32, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !731, file: !44, line: 164, baseType: !689, size: 32, offset: 160)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !731, file: !44, line: 165, baseType: !739, size: 128, offset: 192)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !557)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !731, file: !44, line: 166, baseType: !741, size: 128, offset: 320)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 128, elements: !557)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !694, file: !562, line: 107, baseType: !141, size: 32, offset: 10368)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !694, file: !562, line: 108, baseType: !78, size: 32, offset: 10400)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !694, file: !562, line: 109, baseType: !76, size: 16, offset: 10432)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !694, file: !562, line: 110, baseType: !76, size: 16, offset: 10448)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !694, file: !562, line: 113, baseType: !78, size: 32, offset: 10464)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !694, file: !562, line: 113, baseType: !78, size: 32, offset: 10496)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !694, file: !562, line: 114, baseType: !63, size: 8, offset: 10528)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !694, file: !562, line: 114, baseType: !63, size: 8, offset: 10536)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !694, file: !562, line: 115, baseType: !76, size: 16, offset: 10544)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !694, file: !562, line: 116, baseType: !254, size: 128, offset: 10560)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !694, file: !562, line: 119, baseType: !141, size: 32, offset: 10688)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !694, file: !562, line: 119, baseType: !141, size: 32, offset: 10720)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !694, file: !562, line: 122, baseType: !755, size: 512, offset: 10752)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !756, line: 182, baseType: !757)
!756 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !756, line: 180, size: 512, elements: !758)
!758 = !{!759}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !757, file: !756, line: 181, baseType: !93, size: 512)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !694, file: !562, line: 123, baseType: !63, size: 8, offset: 11264)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !694, file: !562, line: 125, baseType: !762, size: 56, offset: 11272)
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 56, elements: !763)
!763 = !{!764}
!764 = !DISubrange(count: 7)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !694, file: !562, line: 126, baseType: !766, size: 4096, offset: 11328)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 4096, elements: !712)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !562, line: 69, baseType: !768)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !562, line: 67, size: 512, elements: !769)
!769 = !{!770}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !768, file: !562, line: 68, baseType: !93, size: 512)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !681, file: !568, line: 849, baseType: !693, size: 64, offset: 576)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !681, file: !568, line: 850, baseType: !693, size: 64, offset: 640)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !681, file: !568, line: 851, baseType: !172, size: 96, offset: 704)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !681, file: !568, line: 852, baseType: !141, size: 32, offset: 800)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !609, file: !568, line: 1104, baseType: !776, size: 1344, offset: 1344)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !568, line: 867, size: 1344, elements: !777)
!777 = !{!778, !779, !780, !781, !782, !793, !794, !795, !796, !797, !798, !799, !800, !801}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !776, file: !568, line: 868, baseType: !76, size: 16)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !776, file: !568, line: 869, baseType: !76, size: 16, offset: 16)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !776, file: !568, line: 870, baseType: !76, size: 16, offset: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !776, file: !568, line: 871, baseType: !76, size: 16, offset: 48)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !776, file: !568, line: 873, baseType: !783, size: 896, offset: 64)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, size: 896, elements: !763)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !568, line: 864, baseType: !785)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !568, line: 859, size: 128, elements: !786)
!786 = !{!787, !788, !789, !790, !791, !792}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !785, file: !568, line: 860, baseType: !76, size: 16)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !785, file: !568, line: 861, baseType: !76, size: 16, offset: 16)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !785, file: !568, line: 861, baseType: !76, size: 16, offset: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !785, file: !568, line: 861, baseType: !76, size: 16, offset: 48)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !785, file: !568, line: 862, baseType: !78, size: 32, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !785, file: !568, line: 863, baseType: !141, size: 32, offset: 96)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !776, file: !568, line: 874, baseType: !48, size: 64, offset: 960)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !776, file: !568, line: 876, baseType: !141, size: 32, offset: 1024)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !776, file: !568, line: 876, baseType: !141, size: 32, offset: 1056)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !776, file: !568, line: 878, baseType: !78, size: 32, offset: 1088)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !776, file: !568, line: 879, baseType: !78, size: 32, offset: 1120)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !776, file: !568, line: 881, baseType: !78, size: 32, offset: 1152)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !776, file: !568, line: 881, baseType: !78, size: 32, offset: 1184)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !776, file: !568, line: 883, baseType: !566, size: 64, offset: 1216)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !776, file: !568, line: 884, baseType: !307, size: 64, offset: 1280)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !609, file: !568, line: 1107, baseType: !141, size: 32, offset: 2688)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !609, file: !568, line: 1110, baseType: !141, size: 32, offset: 2720)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !609, file: !568, line: 1113, baseType: !76, size: 16, offset: 2752)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !609, file: !568, line: 1113, baseType: !76, size: 16, offset: 2768)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !609, file: !568, line: 1116, baseType: !63, size: 8, offset: 2784)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !609, file: !568, line: 1117, baseType: !272, size: 8, offset: 2792)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !609, file: !568, line: 1120, baseType: !76, size: 16, offset: 2800)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !609, file: !568, line: 1121, baseType: !141, size: 32, offset: 2816)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !609, file: !568, line: 1122, baseType: !141, size: 32, offset: 2848)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !609, file: !568, line: 1123, baseType: !141, size: 32, offset: 2880)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !609, file: !568, line: 1124, baseType: !141, size: 32, offset: 2912)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !609, file: !568, line: 1125, baseType: !141, size: 32, offset: 2944)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !609, file: !568, line: 1126, baseType: !141, size: 32, offset: 2976)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !609, file: !568, line: 1127, baseType: !141, size: 32, offset: 3008)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !609, file: !568, line: 1128, baseType: !141, size: 32, offset: 3040)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !609, file: !568, line: 1129, baseType: !141, size: 32, offset: 3072)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !609, file: !568, line: 1130, baseType: !141, size: 32, offset: 3104)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !609, file: !568, line: 1131, baseType: !76, size: 16, offset: 3136)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !609, file: !568, line: 1132, baseType: !63, size: 8, offset: 3152)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !609, file: !568, line: 1133, baseType: !63, size: 8, offset: 3160)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !609, file: !568, line: 1134, baseType: !823, size: 24, offset: 3168)
!823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 24, elements: !173)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !609, file: !568, line: 1135, baseType: !63, size: 8, offset: 3192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !609, file: !568, line: 1138, baseType: !307, size: 64, offset: 3200)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !609, file: !568, line: 1139, baseType: !63, size: 8, offset: 3264)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !609, file: !568, line: 1140, baseType: !63, size: 8, offset: 3272)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !609, file: !568, line: 1141, baseType: !63, size: 8, offset: 3280)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !609, file: !568, line: 1142, baseType: !63, size: 8, offset: 3288)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !609, file: !568, line: 1143, baseType: !63, size: 8, offset: 3296)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !609, file: !568, line: 1144, baseType: !832, size: 64, offset: 3304)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 64, elements: !712)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !609, file: !568, line: 1145, baseType: !832, size: 64, offset: 3368)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !609, file: !568, line: 1148, baseType: !63, size: 8, offset: 3432)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !609, file: !568, line: 1149, baseType: !63, size: 8, offset: 3440)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !609, file: !568, line: 1152, baseType: !63, size: 8, offset: 3448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !609, file: !568, line: 1152, baseType: !63, size: 8, offset: 3456)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !609, file: !568, line: 1153, baseType: !63, size: 8, offset: 3464)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !609, file: !568, line: 1154, baseType: !76, size: 16, offset: 3472)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !609, file: !568, line: 1154, baseType: !76, size: 16, offset: 3488)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !609, file: !568, line: 1155, baseType: !76, size: 16, offset: 3504)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !609, file: !568, line: 1155, baseType: !76, size: 16, offset: 3520)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !609, file: !568, line: 1156, baseType: !63, size: 8, offset: 3536)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !609, file: !568, line: 1157, baseType: !63, size: 8, offset: 3544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !609, file: !568, line: 1159, baseType: !63, size: 8, offset: 3552)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !609, file: !568, line: 1160, baseType: !63, size: 8, offset: 3560)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !609, file: !568, line: 1161, baseType: !63, size: 8, offset: 3568)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !609, file: !568, line: 1162, baseType: !63, size: 8, offset: 3576)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !609, file: !568, line: 1165, baseType: !78, size: 32, offset: 3584)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !609, file: !568, line: 1166, baseType: !78, size: 32, offset: 3616)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !609, file: !568, line: 1167, baseType: !78, size: 32, offset: 3648)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !609, file: !568, line: 1168, baseType: !78, size: 32, offset: 3680)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !609, file: !568, line: 1171, baseType: !76, size: 16, offset: 3712)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !609, file: !568, line: 1171, baseType: !76, size: 16, offset: 3728)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !609, file: !568, line: 1172, baseType: !78, size: 32, offset: 3744)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !609, file: !568, line: 1173, baseType: !141, size: 32, offset: 3776)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !609, file: !568, line: 1174, baseType: !141, size: 32, offset: 3808)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !609, file: !568, line: 1177, baseType: !859, size: 1024, offset: 3840)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !568, line: 963, size: 1024, elements: !860)
!860 = !{!861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !884, !885}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !859, file: !568, line: 965, baseType: !78, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !859, file: !568, line: 968, baseType: !141, size: 32, offset: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !859, file: !568, line: 971, baseType: !141, size: 32, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !859, file: !568, line: 974, baseType: !141, size: 32, offset: 96)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !859, file: !568, line: 977, baseType: !172, size: 96, offset: 128)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !859, file: !568, line: 979, baseType: !172, size: 96, offset: 224)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !859, file: !568, line: 982, baseType: !78, size: 32, offset: 320)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !859, file: !568, line: 987, baseType: !556, size: 64, offset: 352)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !859, file: !568, line: 989, baseType: !141, size: 32, offset: 416)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !859, file: !568, line: 994, baseType: !78, size: 32, offset: 448)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !859, file: !568, line: 995, baseType: !78, size: 32, offset: 480)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !859, file: !568, line: 997, baseType: !63, size: 8, offset: 512)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !859, file: !568, line: 998, baseType: !762, size: 56, offset: 520)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !859, file: !568, line: 1000, baseType: !141, size: 32, offset: 576)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !859, file: !568, line: 1003, baseType: !556, size: 64, offset: 608)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !859, file: !568, line: 1006, baseType: !78, size: 32, offset: 672)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !859, file: !568, line: 1009, baseType: !141, size: 32, offset: 704)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !859, file: !568, line: 1012, baseType: !556, size: 64, offset: 736)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !859, file: !568, line: 1015, baseType: !556, size: 64, offset: 800)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !859, file: !568, line: 1018, baseType: !78, size: 32, offset: 864)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !859, file: !568, line: 1019, baseType: !882, size: 64, offset: 896)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !568, line: 63, flags: DIFlagFwdDecl)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !859, file: !568, line: 1023, baseType: !141, size: 32, offset: 960)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !859, file: !568, line: 1024, baseType: !78, size: 32, offset: 992)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !609, file: !568, line: 1179, baseType: !887, size: 320, offset: 4864)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !568, line: 1043, size: 320, elements: !888)
!888 = !{!889, !890, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !887, file: !568, line: 1044, baseType: !63, size: 8)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !887, file: !568, line: 1045, baseType: !891, size: 16, offset: 8)
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 16, elements: !557)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !887, file: !568, line: 1048, baseType: !63, size: 8, offset: 24)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !887, file: !568, line: 1049, baseType: !141, size: 32, offset: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !887, file: !568, line: 1049, baseType: !141, size: 32, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !887, file: !568, line: 1052, baseType: !141, size: 32, offset: 96)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !887, file: !568, line: 1052, baseType: !141, size: 32, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !887, file: !568, line: 1053, baseType: !63, size: 8, offset: 160)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !887, file: !568, line: 1054, baseType: !823, size: 24, offset: 168)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !887, file: !568, line: 1057, baseType: !141, size: 32, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !887, file: !568, line: 1057, baseType: !141, size: 32, offset: 224)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !887, file: !568, line: 1060, baseType: !141, size: 32, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !887, file: !568, line: 1060, baseType: !141, size: 32, offset: 288)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !567, file: !568, line: 1247, baseType: !904, size: 64, offset: 2176)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !568, line: 60, flags: DIFlagFwdDecl)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !567, file: !568, line: 1251, baseType: !907, size: 31872, offset: 2240)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !568, line: 403, size: 31872, elements: !908)
!908 = !{!909, !992, !1012, !1021, !1041, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1182, !1183, !1184, !1186, !1202, !1203}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !907, file: !568, line: 404, baseType: !910, size: 1984)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !568, line: 259, size: 1984, elements: !911)
!911 = !{!912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !929, !987}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !910, file: !568, line: 260, baseType: !63, size: 8)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !910, file: !568, line: 263, baseType: !63, size: 8, offset: 8)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !910, file: !568, line: 266, baseType: !63, size: 8, offset: 16)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !910, file: !568, line: 267, baseType: !63, size: 8, offset: 24)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !910, file: !568, line: 269, baseType: !63, size: 8, offset: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !910, file: !568, line: 270, baseType: !63, size: 8, offset: 40)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !910, file: !568, line: 276, baseType: !63, size: 8, offset: 48)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !910, file: !568, line: 279, baseType: !63, size: 8, offset: 56)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !910, file: !568, line: 280, baseType: !76, size: 16, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !910, file: !568, line: 280, baseType: !76, size: 16, offset: 80)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !910, file: !568, line: 281, baseType: !141, size: 32, offset: 96)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !910, file: !568, line: 284, baseType: !63, size: 8, offset: 128)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !910, file: !568, line: 285, baseType: !63, size: 8, offset: 136)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !910, file: !568, line: 287, baseType: !926, size: 48, offset: 144)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 48, elements: !927)
!927 = !{!928}
!928 = !DISubrange(count: 6)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !910, file: !568, line: 290, baseType: !930, size: 1280, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !756, line: 174, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !756, line: 166, size: 1280, elements: !932)
!932 = !{!933, !934, !935, !936, !937, !938, !939, !986}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !931, file: !756, line: 167, baseType: !78, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !931, file: !756, line: 167, baseType: !78, size: 32, offset: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !931, file: !756, line: 168, baseType: !93, size: 512, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !931, file: !756, line: 169, baseType: !93, size: 512, offset: 576)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !931, file: !756, line: 170, baseType: !141, size: 32, offset: 1088)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !931, file: !756, line: 171, baseType: !141, size: 32, offset: 1120)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !931, file: !756, line: 172, baseType: !940, size: 64, offset: 1152)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !756, line: 72, size: 3072, elements: !942)
!942 = !{!943, !944, !945, !946, !947, !956, !957, !982, !983, !984, !985}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !941, file: !756, line: 73, baseType: !78, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !941, file: !756, line: 73, baseType: !78, size: 32, offset: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !941, file: !756, line: 74, baseType: !78, size: 32, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !941, file: !756, line: 75, baseType: !78, size: 32, offset: 96)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !941, file: !756, line: 77, baseType: !948, size: 128, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !949, line: 95, baseType: !950)
!949 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !949, line: 92, size: 128, elements: !951)
!951 = !{!952, !953, !954, !955}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !950, file: !949, line: 93, baseType: !141, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !950, file: !949, line: 93, baseType: !141, size: 32, offset: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !950, file: !949, line: 94, baseType: !141, size: 32, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !950, file: !949, line: 94, baseType: !141, size: 32, offset: 96)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !941, file: !756, line: 77, baseType: !948, size: 128, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !941, file: !756, line: 79, baseType: !958, size: 2304, offset: 384)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 2304, elements: !255)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !756, line: 67, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !756, line: 55, size: 576, elements: !961)
!961 = !{!962, !963, !964, !965, !966, !967, !968, !969, !978, !979, !980, !981}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !960, file: !756, line: 56, baseType: !76, size: 16)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !960, file: !756, line: 56, baseType: !76, size: 16, offset: 16)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !960, file: !756, line: 58, baseType: !141, size: 32, offset: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !960, file: !756, line: 59, baseType: !141, size: 32, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !960, file: !756, line: 59, baseType: !141, size: 32, offset: 96)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !960, file: !756, line: 60, baseType: !556, size: 64, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !960, file: !756, line: 60, baseType: !556, size: 64, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !960, file: !756, line: 61, baseType: !970, size: 64, offset: 256)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !756, line: 47, baseType: !972)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !756, line: 44, size: 96, elements: !973)
!973 = !{!974, !975, !976, !977}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !972, file: !756, line: 45, baseType: !141, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !972, file: !756, line: 45, baseType: !141, size: 32, offset: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !972, file: !756, line: 46, baseType: !76, size: 16, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !972, file: !756, line: 46, baseType: !76, size: 16, offset: 80)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !960, file: !756, line: 62, baseType: !970, size: 64, offset: 320)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !960, file: !756, line: 64, baseType: !970, size: 64, offset: 384)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !960, file: !756, line: 65, baseType: !556, size: 64, offset: 448)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !960, file: !756, line: 66, baseType: !556, size: 64, offset: 512)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !941, file: !756, line: 80, baseType: !172, size: 96, offset: 2688)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !941, file: !756, line: 80, baseType: !172, size: 96, offset: 2784)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !941, file: !756, line: 81, baseType: !172, size: 96, offset: 2880)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !941, file: !756, line: 83, baseType: !172, size: 96, offset: 2976)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !931, file: !756, line: 173, baseType: !48, size: 64, offset: 1216)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !910, file: !568, line: 291, baseType: !988, size: 512, offset: 1472)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !756, line: 178, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !756, line: 176, size: 512, elements: !990)
!990 = !{!991}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !989, file: !756, line: 177, baseType: !93, size: 512)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !907, file: !568, line: 406, baseType: !993, size: 64, offset: 1984)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !568, line: 80, size: 1472, elements: !995)
!995 = !{!996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !994, file: !568, line: 81, baseType: !48, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !994, file: !568, line: 82, baseType: !48, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !994, file: !568, line: 83, baseType: !7, size: 32, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !994, file: !568, line: 84, baseType: !7, size: 32, offset: 160)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !994, file: !568, line: 86, baseType: !7, size: 32, offset: 192)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !994, file: !568, line: 87, baseType: !7, size: 32, offset: 224)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !994, file: !568, line: 88, baseType: !7, size: 32, offset: 256)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !994, file: !568, line: 89, baseType: !7, size: 32, offset: 288)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !994, file: !568, line: 90, baseType: !7, size: 32, offset: 320)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !994, file: !568, line: 91, baseType: !7, size: 32, offset: 352)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !994, file: !568, line: 92, baseType: !7, size: 32, offset: 384)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !994, file: !568, line: 93, baseType: !7, size: 32, offset: 416)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !994, file: !568, line: 95, baseType: !1009, size: 1024, offset: 448)
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 1024, elements: !1010)
!1010 = !{!1011}
!1011 = !DISubrange(count: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !907, file: !568, line: 407, baseType: !1013, size: 64, offset: 2048)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !568, line: 98, size: 1216, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019, !1020}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1014, file: !568, line: 100, baseType: !48, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1014, file: !568, line: 101, baseType: !48, size: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1014, file: !568, line: 103, baseType: !7, size: 32, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1014, file: !568, line: 104, baseType: !7, size: 32, offset: 160)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1014, file: !568, line: 106, baseType: !1009, size: 1024, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !907, file: !568, line: 408, baseType: !1022, size: 512, offset: 2112)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !568, line: 109, size: 512, elements: !1023)
!1023 = !{!1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1022, file: !568, line: 111, baseType: !78, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1022, file: !568, line: 112, baseType: !78, size: 32, offset: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1022, file: !568, line: 115, baseType: !78, size: 32, offset: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1022, file: !568, line: 116, baseType: !78, size: 32, offset: 96)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1022, file: !568, line: 117, baseType: !78, size: 32, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1022, file: !568, line: 118, baseType: !78, size: 32, offset: 160)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1022, file: !568, line: 119, baseType: !78, size: 32, offset: 192)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1022, file: !568, line: 120, baseType: !78, size: 32, offset: 224)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1022, file: !568, line: 121, baseType: !78, size: 32, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1022, file: !568, line: 122, baseType: !78, size: 32, offset: 288)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1022, file: !568, line: 125, baseType: !78, size: 32, offset: 320)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1022, file: !568, line: 126, baseType: !78, size: 32, offset: 352)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1022, file: !568, line: 127, baseType: !76, size: 16, offset: 384)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1022, file: !568, line: 128, baseType: !76, size: 16, offset: 400)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1022, file: !568, line: 129, baseType: !78, size: 32, offset: 416)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1022, file: !568, line: 130, baseType: !78, size: 32, offset: 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1022, file: !568, line: 131, baseType: !78, size: 32, offset: 480)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !907, file: !568, line: 409, baseType: !1042, size: 576, offset: 2624)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !568, line: 134, size: 576, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1042, file: !568, line: 135, baseType: !78, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1042, file: !568, line: 136, baseType: !78, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1042, file: !568, line: 137, baseType: !78, size: 32, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1042, file: !568, line: 138, baseType: !78, size: 32, offset: 96)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1042, file: !568, line: 139, baseType: !78, size: 32, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1042, file: !568, line: 140, baseType: !78, size: 32, offset: 160)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1042, file: !568, line: 141, baseType: !78, size: 32, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1042, file: !568, line: 142, baseType: !78, size: 32, offset: 224)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1042, file: !568, line: 143, baseType: !141, size: 32, offset: 256)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1042, file: !568, line: 144, baseType: !78, size: 32, offset: 288)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1042, file: !568, line: 145, baseType: !78, size: 32, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1042, file: !568, line: 147, baseType: !78, size: 32, offset: 352)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1042, file: !568, line: 148, baseType: !78, size: 32, offset: 384)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1042, file: !568, line: 149, baseType: !78, size: 32, offset: 416)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1042, file: !568, line: 150, baseType: !78, size: 32, offset: 448)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1042, file: !568, line: 151, baseType: !78, size: 32, offset: 480)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1042, file: !568, line: 152, baseType: !82, size: 64, offset: 512)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !907, file: !568, line: 411, baseType: !78, size: 32, offset: 3200)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !907, file: !568, line: 411, baseType: !78, size: 32, offset: 3232)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !907, file: !568, line: 411, baseType: !78, size: 32, offset: 3264)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !907, file: !568, line: 412, baseType: !141, size: 32, offset: 3296)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !907, file: !568, line: 413, baseType: !78, size: 32, offset: 3328)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !907, file: !568, line: 413, baseType: !78, size: 32, offset: 3360)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !907, file: !568, line: 415, baseType: !78, size: 32, offset: 3392)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !907, file: !568, line: 415, baseType: !78, size: 32, offset: 3424)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !907, file: !568, line: 416, baseType: !76, size: 16, offset: 3456)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !907, file: !568, line: 416, baseType: !76, size: 16, offset: 3472)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !907, file: !568, line: 418, baseType: !141, size: 32, offset: 3488)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !907, file: !568, line: 418, baseType: !141, size: 32, offset: 3520)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !907, file: !568, line: 421, baseType: !141, size: 32, offset: 3552)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !907, file: !568, line: 421, baseType: !141, size: 32, offset: 3584)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !907, file: !568, line: 421, baseType: !141, size: 32, offset: 3616)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !907, file: !568, line: 425, baseType: !76, size: 16, offset: 3648)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !907, file: !568, line: 425, baseType: !76, size: 16, offset: 3664)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !907, file: !568, line: 425, baseType: !76, size: 16, offset: 3680)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !907, file: !568, line: 426, baseType: !76, size: 16, offset: 3696)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !907, file: !568, line: 428, baseType: !76, size: 16, offset: 3712)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !907, file: !568, line: 428, baseType: !76, size: 16, offset: 3728)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !907, file: !568, line: 431, baseType: !78, size: 32, offset: 3744)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !907, file: !568, line: 433, baseType: !76, size: 16, offset: 3776)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !907, file: !568, line: 435, baseType: !76, size: 16, offset: 3792)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !907, file: !568, line: 437, baseType: !76, size: 16, offset: 3808)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !907, file: !568, line: 439, baseType: !76, size: 16, offset: 3824)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !907, file: !568, line: 441, baseType: !76, size: 16, offset: 3840)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !907, file: !568, line: 443, baseType: !76, size: 16, offset: 3856)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !907, file: !568, line: 449, baseType: !78, size: 32, offset: 3872)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !907, file: !568, line: 453, baseType: !78, size: 32, offset: 3904)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !907, file: !568, line: 458, baseType: !76, size: 16, offset: 3936)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !907, file: !568, line: 462, baseType: !76, size: 16, offset: 3952)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !907, file: !568, line: 467, baseType: !78, size: 32, offset: 3968)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !907, file: !568, line: 467, baseType: !78, size: 32, offset: 4000)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !907, file: !568, line: 469, baseType: !76, size: 16, offset: 4032)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !907, file: !568, line: 469, baseType: !76, size: 16, offset: 4048)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !907, file: !568, line: 469, baseType: !76, size: 16, offset: 4064)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !907, file: !568, line: 469, baseType: !76, size: 16, offset: 4080)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !907, file: !568, line: 474, baseType: !76, size: 16, offset: 4096)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !907, file: !568, line: 475, baseType: !63, size: 8, offset: 4112)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !907, file: !568, line: 476, baseType: !63, size: 8, offset: 4120)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !907, file: !568, line: 481, baseType: !78, size: 32, offset: 4128)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !907, file: !568, line: 486, baseType: !78, size: 32, offset: 4160)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !907, file: !568, line: 491, baseType: !78, size: 32, offset: 4192)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !907, file: !568, line: 496, baseType: !76, size: 16, offset: 4224)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !907, file: !568, line: 498, baseType: !76, size: 16, offset: 4240)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !907, file: !568, line: 501, baseType: !76, size: 16, offset: 4256)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !907, file: !568, line: 502, baseType: !76, size: 16, offset: 4272)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !907, file: !568, line: 508, baseType: !76, size: 16, offset: 4288)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !907, file: !568, line: 513, baseType: !76, size: 16, offset: 4304)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !907, file: !568, line: 515, baseType: !76, size: 16, offset: 4320)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !907, file: !568, line: 515, baseType: !76, size: 16, offset: 4336)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !907, file: !568, line: 519, baseType: !948, size: 128, offset: 4352)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !907, file: !568, line: 519, baseType: !948, size: 128, offset: 4480)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !907, file: !568, line: 520, baseType: !1116, size: 128, offset: 4608)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !949, line: 89, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !949, line: 86, size: 128, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1117, file: !949, line: 87, baseType: !78, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1117, file: !949, line: 87, baseType: !78, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1117, file: !949, line: 88, baseType: !78, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1117, file: !949, line: 88, baseType: !78, size: 32, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !907, file: !568, line: 523, baseType: !103, size: 128, offset: 4736)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !907, file: !568, line: 524, baseType: !76, size: 16, offset: 4864)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !907, file: !568, line: 527, baseType: !76, size: 16, offset: 4880)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !907, file: !568, line: 532, baseType: !141, size: 32, offset: 4896)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !907, file: !568, line: 532, baseType: !141, size: 32, offset: 4928)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !907, file: !568, line: 534, baseType: !141, size: 32, offset: 4960)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !907, file: !568, line: 538, baseType: !141, size: 32, offset: 4992)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !907, file: !568, line: 542, baseType: !78, size: 32, offset: 5024)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !907, file: !568, line: 545, baseType: !141, size: 32, offset: 5056)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !907, file: !568, line: 545, baseType: !141, size: 32, offset: 5088)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !907, file: !568, line: 545, baseType: !141, size: 32, offset: 5120)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !907, file: !568, line: 548, baseType: !141, size: 32, offset: 5152)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !907, file: !568, line: 551, baseType: !76, size: 16, offset: 5184)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !907, file: !568, line: 551, baseType: !76, size: 16, offset: 5200)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !907, file: !568, line: 551, baseType: !76, size: 16, offset: 5216)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !907, file: !568, line: 551, baseType: !76, size: 16, offset: 5232)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !907, file: !568, line: 552, baseType: !76, size: 16, offset: 5248)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !907, file: !568, line: 552, baseType: !76, size: 16, offset: 5264)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !907, file: !568, line: 553, baseType: !141, size: 32, offset: 5280)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !907, file: !568, line: 553, baseType: !141, size: 32, offset: 5312)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !907, file: !568, line: 554, baseType: !76, size: 16, offset: 5344)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !907, file: !568, line: 554, baseType: !76, size: 16, offset: 5360)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !907, file: !568, line: 555, baseType: !141, size: 32, offset: 5376)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !907, file: !568, line: 555, baseType: !141, size: 32, offset: 5408)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !907, file: !568, line: 558, baseType: !62, size: 8192, offset: 5440)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !907, file: !568, line: 561, baseType: !78, size: 32, offset: 13632)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !907, file: !568, line: 562, baseType: !76, size: 16, offset: 13664)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !907, file: !568, line: 562, baseType: !76, size: 16, offset: 13680)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !907, file: !568, line: 565, baseType: !1152, size: 6144, offset: 13696)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 6144, elements: !1153)
!1153 = !{!1154}
!1154 = !DISubrange(count: 768)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !907, file: !568, line: 568, baseType: !254, size: 128, offset: 19840)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !907, file: !568, line: 569, baseType: !254, size: 128, offset: 19968)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !907, file: !568, line: 572, baseType: !63, size: 8, offset: 20096)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !907, file: !568, line: 573, baseType: !63, size: 8, offset: 20104)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !907, file: !568, line: 574, baseType: !63, size: 8, offset: 20112)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !907, file: !568, line: 575, baseType: !677, size: 40, offset: 20120)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !907, file: !568, line: 578, baseType: !78, size: 32, offset: 20160)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !907, file: !568, line: 579, baseType: !76, size: 16, offset: 20192)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !907, file: !568, line: 580, baseType: !76, size: 16, offset: 20208)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !907, file: !568, line: 581, baseType: !141, size: 32, offset: 20224)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !907, file: !568, line: 582, baseType: !141, size: 32, offset: 20256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !907, file: !568, line: 585, baseType: !76, size: 16, offset: 20288)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !907, file: !568, line: 585, baseType: !76, size: 16, offset: 20304)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !907, file: !568, line: 586, baseType: !141, size: 32, offset: 20320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !907, file: !568, line: 589, baseType: !76, size: 16, offset: 20352)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !907, file: !568, line: 589, baseType: !76, size: 16, offset: 20368)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !907, file: !568, line: 590, baseType: !78, size: 32, offset: 20384)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !907, file: !568, line: 593, baseType: !76, size: 16, offset: 20416)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !907, file: !568, line: 593, baseType: !76, size: 16, offset: 20432)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !907, file: !568, line: 594, baseType: !76, size: 16, offset: 20448)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !907, file: !568, line: 594, baseType: !76, size: 16, offset: 20464)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !907, file: !568, line: 595, baseType: !141, size: 32, offset: 20480)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !907, file: !568, line: 596, baseType: !141, size: 32, offset: 20512)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !907, file: !568, line: 597, baseType: !1179, size: 64, offset: 20544)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1181, line: 44, flags: DIFlagFwdDecl)
!1181 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !907, file: !568, line: 600, baseType: !78, size: 32, offset: 20608)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !907, file: !568, line: 601, baseType: !141, size: 32, offset: 20640)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !907, file: !568, line: 604, baseType: !1185, size: 256, offset: 20672)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 256, elements: !286)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !907, file: !568, line: 607, baseType: !1187, size: 10880, offset: 20928)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !568, line: 364, size: 10880, elements: !1188)
!1188 = !{!1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1187, file: !568, line: 365, baseType: !910, size: 1984)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1187, file: !568, line: 367, baseType: !62, size: 8192, offset: 1984)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1187, file: !568, line: 369, baseType: !76, size: 16, offset: 10176)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1187, file: !568, line: 369, baseType: !76, size: 16, offset: 10192)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1187, file: !568, line: 370, baseType: !76, size: 16, offset: 10208)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1187, file: !568, line: 370, baseType: !76, size: 16, offset: 10224)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1187, file: !568, line: 372, baseType: !141, size: 32, offset: 10240)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1187, file: !568, line: 373, baseType: !141, size: 32, offset: 10272)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1187, file: !568, line: 375, baseType: !823, size: 24, offset: 10304)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1187, file: !568, line: 376, baseType: !63, size: 8, offset: 10328)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1187, file: !568, line: 378, baseType: !63, size: 8, offset: 10336)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1187, file: !568, line: 379, baseType: !823, size: 24, offset: 10344)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1187, file: !568, line: 381, baseType: !93, size: 512, offset: 10368)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !907, file: !568, line: 609, baseType: !78, size: 32, offset: 31808)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !907, file: !568, line: 610, baseType: !78, size: 32, offset: 31840)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !567, file: !568, line: 1252, baseType: !1205, size: 256, offset: 34112)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !568, line: 158, size: 256, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1205, file: !568, line: 159, baseType: !78, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1205, file: !568, line: 160, baseType: !141, size: 32, offset: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1205, file: !568, line: 161, baseType: !141, size: 32, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1205, file: !568, line: 162, baseType: !141, size: 32, offset: 96)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1205, file: !568, line: 163, baseType: !78, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1205, file: !568, line: 164, baseType: !76, size: 16, offset: 160)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1205, file: !568, line: 165, baseType: !76, size: 16, offset: 176)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1205, file: !568, line: 166, baseType: !141, size: 32, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1205, file: !568, line: 167, baseType: !141, size: 32, offset: 224)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !567, file: !568, line: 1254, baseType: !103, size: 128, offset: 34368)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !567, file: !568, line: 1255, baseType: !103, size: 128, offset: 34496)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !567, file: !568, line: 1257, baseType: !48, size: 64, offset: 34624)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !567, file: !568, line: 1258, baseType: !48, size: 64, offset: 34688)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !567, file: !568, line: 1259, baseType: !48, size: 64, offset: 34752)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !567, file: !568, line: 1260, baseType: !48, size: 64, offset: 34816)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !567, file: !568, line: 1262, baseType: !48, size: 64, offset: 34880)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !567, file: !568, line: 1265, baseType: !1224, size: 64, offset: 34944)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !568, line: 1265, flags: DIFlagFwdDecl)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !567, file: !568, line: 1266, baseType: !76, size: 16, offset: 35008)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !567, file: !568, line: 1267, baseType: !76, size: 16, offset: 35024)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !567, file: !568, line: 1270, baseType: !78, size: 32, offset: 35040)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !567, file: !568, line: 1271, baseType: !103, size: 128, offset: 35072)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !567, file: !568, line: 1274, baseType: !1231, size: 128, offset: 35200)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !568, line: 650, size: 128, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1236, !1237}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1231, file: !568, line: 651, baseType: !172, size: 96)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1231, file: !568, line: 652, baseType: !63, size: 8, offset: 96)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1231, file: !568, line: 652, baseType: !63, size: 8, offset: 104)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1231, file: !568, line: 652, baseType: !63, size: 8, offset: 112)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1231, file: !568, line: 652, baseType: !63, size: 8, offset: 120)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !567, file: !568, line: 1275, baseType: !1239, size: 1472, offset: 35328)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !568, line: 676, size: 1472, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1253, !1263, !1264, !1265, !1266, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1239, file: !568, line: 679, baseType: !1231, size: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1239, file: !568, line: 680, baseType: !76, size: 16, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1239, file: !568, line: 680, baseType: !76, size: 16, offset: 144)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1239, file: !568, line: 680, baseType: !76, size: 16, offset: 160)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1239, file: !568, line: 680, baseType: !76, size: 16, offset: 176)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1239, file: !568, line: 681, baseType: !76, size: 16, offset: 192)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1239, file: !568, line: 681, baseType: !76, size: 16, offset: 208)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1239, file: !568, line: 681, baseType: !76, size: 16, offset: 224)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1239, file: !568, line: 681, baseType: !76, size: 16, offset: 240)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1239, file: !568, line: 682, baseType: !76, size: 16, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1239, file: !568, line: 682, baseType: !1252, size: 48, offset: 272)
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 48, elements: !173)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1239, file: !568, line: 685, baseType: !1254, size: 192, offset: 320)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !568, line: 633, size: 192, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1254, file: !568, line: 634, baseType: !76, size: 16)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1254, file: !568, line: 634, baseType: !76, size: 16, offset: 16)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1254, file: !568, line: 635, baseType: !76, size: 16, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1254, file: !568, line: 635, baseType: !76, size: 16, offset: 48)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1254, file: !568, line: 636, baseType: !141, size: 32, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1254, file: !568, line: 636, baseType: !141, size: 32, offset: 96)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1254, file: !568, line: 637, baseType: !1179, size: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1239, file: !568, line: 686, baseType: !76, size: 16, offset: 512)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1239, file: !568, line: 686, baseType: !76, size: 16, offset: 528)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1239, file: !568, line: 687, baseType: !141, size: 32, offset: 544)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1239, file: !568, line: 688, baseType: !1267, size: 448, offset: 576)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !568, line: 674, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !568, line: 659, size: 448, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1268, file: !568, line: 660, baseType: !141, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1268, file: !568, line: 661, baseType: !141, size: 32, offset: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1268, file: !568, line: 662, baseType: !141, size: 32, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1268, file: !568, line: 663, baseType: !141, size: 32, offset: 96)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1268, file: !568, line: 664, baseType: !141, size: 32, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1268, file: !568, line: 665, baseType: !141, size: 32, offset: 160)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1268, file: !568, line: 666, baseType: !141, size: 32, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1268, file: !568, line: 667, baseType: !141, size: 32, offset: 224)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1268, file: !568, line: 668, baseType: !141, size: 32, offset: 256)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1268, file: !568, line: 669, baseType: !141, size: 32, offset: 288)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1268, file: !568, line: 670, baseType: !78, size: 32, offset: 320)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1268, file: !568, line: 671, baseType: !141, size: 32, offset: 352)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1268, file: !568, line: 672, baseType: !141, size: 32, offset: 384)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1268, file: !568, line: 673, baseType: !76, size: 16, offset: 416)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1268, file: !568, line: 673, baseType: !76, size: 16, offset: 432)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1239, file: !568, line: 692, baseType: !141, size: 32, offset: 1024)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1239, file: !568, line: 697, baseType: !141, size: 32, offset: 1056)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1239, file: !568, line: 703, baseType: !78, size: 32, offset: 1088)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1239, file: !568, line: 704, baseType: !76, size: 16, offset: 1120)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1239, file: !568, line: 704, baseType: !76, size: 16, offset: 1136)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1239, file: !568, line: 705, baseType: !76, size: 16, offset: 1152)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1239, file: !568, line: 706, baseType: !76, size: 16, offset: 1168)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1239, file: !568, line: 707, baseType: !76, size: 16, offset: 1184)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1239, file: !568, line: 708, baseType: !76, size: 16, offset: 1200)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1239, file: !568, line: 709, baseType: !76, size: 16, offset: 1216)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1239, file: !568, line: 709, baseType: !76, size: 16, offset: 1232)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1239, file: !568, line: 709, baseType: !76, size: 16, offset: 1248)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1239, file: !568, line: 709, baseType: !76, size: 16, offset: 1264)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1239, file: !568, line: 710, baseType: !76, size: 16, offset: 1280)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1239, file: !568, line: 711, baseType: !76, size: 16, offset: 1296)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1239, file: !568, line: 712, baseType: !141, size: 32, offset: 1312)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1239, file: !568, line: 713, baseType: !141, size: 32, offset: 1344)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1239, file: !568, line: 713, baseType: !141, size: 32, offset: 1376)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1239, file: !568, line: 713, baseType: !141, size: 32, offset: 1408)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1239, file: !568, line: 713, baseType: !141, size: 32, offset: 1440)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !567, file: !568, line: 1278, baseType: !1306, size: 64, offset: 36800)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !568, line: 1197, size: 64, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1306, file: !568, line: 1199, baseType: !141, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1306, file: !568, line: 1200, baseType: !63, size: 8, offset: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1306, file: !568, line: 1201, baseType: !63, size: 8, offset: 40)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1306, file: !568, line: 1202, baseType: !76, size: 16, offset: 48)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !567, file: !568, line: 1281, baseType: !395, size: 64, offset: 36864)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !567, file: !568, line: 1284, baseType: !1314, size: 192, offset: 36928)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !568, line: 1208, size: 192, elements: !1315)
!1315 = !{!1316, !1317, !1318, !1319}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1314, file: !568, line: 1209, baseType: !172, size: 96)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1314, file: !568, line: 1210, baseType: !78, size: 32, offset: 96)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1314, file: !568, line: 1210, baseType: !78, size: 32, offset: 128)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1314, file: !568, line: 1210, baseType: !78, size: 32, offset: 160)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !567, file: !568, line: 1287, baseType: !1321, size: 64, offset: 37120)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !568, line: 62, flags: DIFlagFwdDecl)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !567, file: !568, line: 1289, baseType: !538, size: 64, offset: 37184)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !567, file: !568, line: 1290, baseType: !538, size: 64, offset: 37248)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !567, file: !568, line: 1293, baseType: !930, size: 1280, offset: 37312)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !567, file: !568, line: 1294, baseType: !988, size: 512, offset: 38592)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !567, file: !568, line: 1295, baseType: !755, size: 512, offset: 39104)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !567, file: !568, line: 1298, baseType: !1329, size: 64, offset: 39616)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !568, line: 1298, flags: DIFlagFwdDecl)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !563, file: !562, line: 53, baseType: !78, size: 32, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !563, file: !562, line: 54, baseType: !78, size: 32, offset: 96)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !563, file: !562, line: 55, baseType: !78, size: 32, offset: 128)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !563, file: !562, line: 55, baseType: !78, size: 32, offset: 160)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !563, file: !562, line: 56, baseType: !63, size: 8, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !563, file: !562, line: 56, baseType: !63, size: 8, offset: 200)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !563, file: !562, line: 57, baseType: !63, size: 8, offset: 208)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !563, file: !562, line: 57, baseType: !63, size: 8, offset: 216)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !563, file: !562, line: 59, baseType: !76, size: 16, offset: 224)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !563, file: !562, line: 59, baseType: !76, size: 16, offset: 240)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !563, file: !562, line: 59, baseType: !76, size: 16, offset: 256)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !563, file: !562, line: 61, baseType: !76, size: 16, offset: 272)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !563, file: !562, line: 63, baseType: !78, size: 32, offset: 288)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !308, file: !22, line: 293, baseType: !103, size: 128, offset: 11200)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !308, file: !22, line: 294, baseType: !1346, size: 64, offset: 11328)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !22, line: 113, baseType: !1348)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !22, line: 108, size: 256, elements: !1349)
!1349 = !{!1350, !1352, !1353, !1354, !1355}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1348, file: !22, line: 109, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1348, file: !22, line: 109, baseType: !1351, size: 64, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1348, file: !22, line: 110, baseType: !307, size: 64, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1348, file: !22, line: 111, baseType: !78, size: 32, offset: 192)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1348, file: !22, line: 112, baseType: !141, size: 32, offset: 224)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !300, file: !264, line: 61, baseType: !1357, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !264, line: 202, size: 3328, elements: !1359)
!1359 = !{!1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1442, !1443, !1473, !1493, !1501, !1502}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1358, file: !264, line: 203, baseType: !43, size: 960)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1358, file: !264, line: 204, baseType: !121, size: 64, offset: 960)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1358, file: !264, line: 206, baseType: !141, size: 32, offset: 1024)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1358, file: !264, line: 206, baseType: !141, size: 32, offset: 1056)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1358, file: !264, line: 207, baseType: !141, size: 32, offset: 1088)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1358, file: !264, line: 207, baseType: !141, size: 32, offset: 1120)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1358, file: !264, line: 207, baseType: !141, size: 32, offset: 1152)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1358, file: !264, line: 207, baseType: !141, size: 32, offset: 1184)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1358, file: !264, line: 207, baseType: !141, size: 32, offset: 1216)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1358, file: !264, line: 207, baseType: !141, size: 32, offset: 1248)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1358, file: !264, line: 208, baseType: !141, size: 32, offset: 1280)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1358, file: !264, line: 208, baseType: !141, size: 32, offset: 1312)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1358, file: !264, line: 211, baseType: !141, size: 32, offset: 1344)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1358, file: !264, line: 211, baseType: !141, size: 32, offset: 1376)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1358, file: !264, line: 211, baseType: !141, size: 32, offset: 1408)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1358, file: !264, line: 211, baseType: !141, size: 32, offset: 1440)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1358, file: !264, line: 211, baseType: !141, size: 32, offset: 1472)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1358, file: !264, line: 214, baseType: !141, size: 32, offset: 1504)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1358, file: !264, line: 214, baseType: !141, size: 32, offset: 1536)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1358, file: !264, line: 217, baseType: !141, size: 32, offset: 1568)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1358, file: !264, line: 218, baseType: !141, size: 32, offset: 1600)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1358, file: !264, line: 219, baseType: !141, size: 32, offset: 1632)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1358, file: !264, line: 220, baseType: !141, size: 32, offset: 1664)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1358, file: !264, line: 221, baseType: !141, size: 32, offset: 1696)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1358, file: !264, line: 222, baseType: !76, size: 16, offset: 1728)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1358, file: !264, line: 222, baseType: !76, size: 16, offset: 1744)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1358, file: !264, line: 224, baseType: !76, size: 16, offset: 1760)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1358, file: !264, line: 224, baseType: !76, size: 16, offset: 1776)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1358, file: !264, line: 227, baseType: !76, size: 16, offset: 1792)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1358, file: !264, line: 227, baseType: !76, size: 16, offset: 1808)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1358, file: !264, line: 229, baseType: !76, size: 16, offset: 1824)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1358, file: !264, line: 229, baseType: !76, size: 16, offset: 1840)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1358, file: !264, line: 230, baseType: !76, size: 16, offset: 1856)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1358, file: !264, line: 230, baseType: !76, size: 16, offset: 1872)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1358, file: !264, line: 232, baseType: !141, size: 32, offset: 1888)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1358, file: !264, line: 232, baseType: !141, size: 32, offset: 1920)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1358, file: !264, line: 232, baseType: !141, size: 32, offset: 1952)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1358, file: !264, line: 232, baseType: !141, size: 32, offset: 1984)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1358, file: !264, line: 233, baseType: !78, size: 32, offset: 2016)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1358, file: !264, line: 234, baseType: !78, size: 32, offset: 2048)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1358, file: !264, line: 235, baseType: !76, size: 16, offset: 2080)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1358, file: !264, line: 235, baseType: !76, size: 16, offset: 2096)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1358, file: !264, line: 236, baseType: !76, size: 16, offset: 2112)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1358, file: !264, line: 239, baseType: !76, size: 16, offset: 2128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1358, file: !264, line: 240, baseType: !78, size: 32, offset: 2144)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1358, file: !264, line: 241, baseType: !78, size: 32, offset: 2176)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1358, file: !264, line: 241, baseType: !78, size: 32, offset: 2208)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1358, file: !264, line: 241, baseType: !78, size: 32, offset: 2240)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1358, file: !264, line: 243, baseType: !141, size: 32, offset: 2272)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1358, file: !264, line: 243, baseType: !141, size: 32, offset: 2304)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1358, file: !264, line: 244, baseType: !141, size: 32, offset: 2336)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1358, file: !264, line: 246, baseType: !563, size: 320, offset: 2368)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1358, file: !264, line: 248, baseType: !602, size: 64, offset: 2688)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1358, file: !264, line: 249, baseType: !129, size: 64, offset: 2752)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1358, file: !264, line: 250, baseType: !693, size: 64, offset: 2816)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1358, file: !264, line: 251, baseType: !262, size: 64, offset: 2880)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1358, file: !264, line: 252, baseType: !1417, size: 64, offset: 2944)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !264, line: 122, size: 1600, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1426, !1427, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1418, file: !264, line: 123, baseType: !307, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1418, file: !264, line: 124, baseType: !693, size: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1418, file: !264, line: 125, baseType: !1423, size: 384, offset: 128)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1424, size: 384, elements: !927)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !756, line: 136, flags: DIFlagFwdDecl)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1418, file: !264, line: 126, baseType: !440, size: 512, offset: 512)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1418, file: !264, line: 127, baseType: !1428, size: 288, offset: 1024)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 288, elements: !1429)
!1429 = !{!174, !174}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1418, file: !264, line: 128, baseType: !76, size: 16, offset: 1312)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1418, file: !264, line: 128, baseType: !76, size: 16, offset: 1328)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1418, file: !264, line: 129, baseType: !141, size: 32, offset: 1344)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1418, file: !264, line: 129, baseType: !141, size: 32, offset: 1376)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1418, file: !264, line: 130, baseType: !141, size: 32, offset: 1408)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1418, file: !264, line: 131, baseType: !7, size: 32, offset: 1440)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1418, file: !264, line: 132, baseType: !76, size: 16, offset: 1472)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1418, file: !264, line: 132, baseType: !76, size: 16, offset: 1488)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1418, file: !264, line: 133, baseType: !78, size: 32, offset: 1504)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1418, file: !264, line: 133, baseType: !78, size: 32, offset: 1536)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1418, file: !264, line: 134, baseType: !76, size: 16, offset: 1568)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1418, file: !264, line: 134, baseType: !76, size: 16, offset: 1584)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1358, file: !264, line: 253, baseType: !730, size: 64, offset: 3008)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1358, file: !264, line: 254, baseType: !1444, size: 64, offset: 3072)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !264, line: 137, size: 832, elements: !1446)
!1446 = !{!1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1445, file: !264, line: 138, baseType: !76, size: 16)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1445, file: !264, line: 140, baseType: !76, size: 16, offset: 16)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1445, file: !264, line: 141, baseType: !141, size: 32, offset: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1445, file: !264, line: 142, baseType: !141, size: 32, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1445, file: !264, line: 143, baseType: !76, size: 16, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1445, file: !264, line: 144, baseType: !76, size: 16, offset: 112)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1445, file: !264, line: 145, baseType: !78, size: 32, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1445, file: !264, line: 147, baseType: !78, size: 32, offset: 160)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1445, file: !264, line: 149, baseType: !307, size: 64, offset: 192)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1445, file: !264, line: 150, baseType: !78, size: 32, offset: 256)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1445, file: !264, line: 151, baseType: !76, size: 16, offset: 288)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1445, file: !264, line: 152, baseType: !76, size: 16, offset: 304)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1445, file: !264, line: 154, baseType: !48, size: 64, offset: 320)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1445, file: !264, line: 155, baseType: !1461, size: 64, offset: 384)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1445, file: !264, line: 157, baseType: !141, size: 32, offset: 448)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1445, file: !264, line: 158, baseType: !76, size: 16, offset: 480)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1445, file: !264, line: 159, baseType: !76, size: 16, offset: 496)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1445, file: !264, line: 160, baseType: !76, size: 16, offset: 512)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1445, file: !264, line: 161, baseType: !1252, size: 48, offset: 528)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1445, file: !264, line: 162, baseType: !141, size: 32, offset: 576)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1445, file: !264, line: 164, baseType: !141, size: 32, offset: 608)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1445, file: !264, line: 164, baseType: !141, size: 32, offset: 640)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1445, file: !264, line: 164, baseType: !141, size: 32, offset: 672)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1445, file: !264, line: 165, baseType: !262, size: 64, offset: 704)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1445, file: !264, line: 167, baseType: !940, size: 64, offset: 768)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1358, file: !264, line: 255, baseType: !1474, size: 64, offset: 3136)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !264, line: 170, size: 8704, elements: !1476)
!1476 = !{!1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1475, file: !264, line: 171, baseType: !651, size: 96)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1475, file: !264, line: 172, baseType: !78, size: 32, offset: 96)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1475, file: !264, line: 173, baseType: !76, size: 16, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1475, file: !264, line: 174, baseType: !76, size: 16, offset: 144)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1475, file: !264, line: 175, baseType: !76, size: 16, offset: 160)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1475, file: !264, line: 176, baseType: !76, size: 16, offset: 176)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1475, file: !264, line: 177, baseType: !76, size: 16, offset: 192)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1475, file: !264, line: 178, baseType: !76, size: 16, offset: 208)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1475, file: !264, line: 179, baseType: !78, size: 32, offset: 224)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1475, file: !264, line: 181, baseType: !307, size: 64, offset: 256)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1475, file: !264, line: 182, baseType: !141, size: 32, offset: 320)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1475, file: !264, line: 183, baseType: !78, size: 32, offset: 352)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1475, file: !264, line: 184, baseType: !62, size: 8192, offset: 384)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1475, file: !264, line: 187, baseType: !1461, size: 64, offset: 8576)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1475, file: !264, line: 188, baseType: !78, size: 32, offset: 8640)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1475, file: !264, line: 189, baseType: !78, size: 32, offset: 8672)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1358, file: !264, line: 256, baseType: !1494, size: 64, offset: 3200)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !264, line: 193, size: 640, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1495, file: !264, line: 194, baseType: !307, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1495, file: !264, line: 195, baseType: !93, size: 512, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1495, file: !264, line: 197, baseType: !78, size: 32, offset: 576)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1495, file: !264, line: 198, baseType: !78, size: 32, offset: 608)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1358, file: !264, line: 258, baseType: !63, size: 8, offset: 3264)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1358, file: !264, line: 259, baseType: !762, size: 56, offset: 3272)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !300, file: !264, line: 62, baseType: !93, size: 512, offset: 192)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !300, file: !264, line: 64, baseType: !63, size: 8, offset: 704)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !300, file: !264, line: 64, baseType: !63, size: 8, offset: 712)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !300, file: !264, line: 64, baseType: !63, size: 8, offset: 720)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !300, file: !264, line: 64, baseType: !63, size: 8, offset: 728)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !300, file: !264, line: 65, baseType: !172, size: 96, offset: 736)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !300, file: !264, line: 65, baseType: !172, size: 96, offset: 832)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !300, file: !264, line: 65, baseType: !141, size: 32, offset: 928)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !300, file: !264, line: 67, baseType: !76, size: 16, offset: 960)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !300, file: !264, line: 67, baseType: !76, size: 16, offset: 976)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !300, file: !264, line: 67, baseType: !76, size: 16, offset: 992)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !300, file: !264, line: 67, baseType: !76, size: 16, offset: 1008)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !300, file: !264, line: 68, baseType: !76, size: 16, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !300, file: !264, line: 68, baseType: !76, size: 16, offset: 1040)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !300, file: !264, line: 69, baseType: !63, size: 8, offset: 1056)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !300, file: !264, line: 69, baseType: !762, size: 56, offset: 1064)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !300, file: !264, line: 70, baseType: !141, size: 32, offset: 1120)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !300, file: !264, line: 70, baseType: !141, size: 32, offset: 1152)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !300, file: !264, line: 70, baseType: !141, size: 32, offset: 1184)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !300, file: !264, line: 70, baseType: !141, size: 32, offset: 1216)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !300, file: !264, line: 71, baseType: !141, size: 32, offset: 1248)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !300, file: !264, line: 71, baseType: !141, size: 32, offset: 1280)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !300, file: !264, line: 74, baseType: !141, size: 32, offset: 1312)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !300, file: !264, line: 74, baseType: !141, size: 32, offset: 1344)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !300, file: !264, line: 77, baseType: !141, size: 32, offset: 1376)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !300, file: !264, line: 77, baseType: !141, size: 32, offset: 1408)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !300, file: !264, line: 77, baseType: !141, size: 32, offset: 1440)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !300, file: !264, line: 78, baseType: !141, size: 32, offset: 1472)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !300, file: !264, line: 78, baseType: !141, size: 32, offset: 1504)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !300, file: !264, line: 78, baseType: !141, size: 32, offset: 1536)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !300, file: !264, line: 79, baseType: !141, size: 32, offset: 1568)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !300, file: !264, line: 79, baseType: !141, size: 32, offset: 1600)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !300, file: !264, line: 79, baseType: !141, size: 32, offset: 1632)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !300, file: !264, line: 79, baseType: !141, size: 32, offset: 1664)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !300, file: !264, line: 80, baseType: !141, size: 32, offset: 1696)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !300, file: !264, line: 80, baseType: !141, size: 32, offset: 1728)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !300, file: !264, line: 80, baseType: !141, size: 32, offset: 1760)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !300, file: !264, line: 81, baseType: !141, size: 32, offset: 1792)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !300, file: !264, line: 81, baseType: !141, size: 32, offset: 1824)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !300, file: !264, line: 81, baseType: !141, size: 32, offset: 1856)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !300, file: !264, line: 82, baseType: !141, size: 32, offset: 1888)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !300, file: !264, line: 82, baseType: !141, size: 32, offset: 1920)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !300, file: !264, line: 82, baseType: !141, size: 32, offset: 1952)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !300, file: !264, line: 85, baseType: !141, size: 32, offset: 1984)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !300, file: !264, line: 85, baseType: !141, size: 32, offset: 2016)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !300, file: !264, line: 85, baseType: !141, size: 32, offset: 2048)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !300, file: !264, line: 85, baseType: !141, size: 32, offset: 2080)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !300, file: !264, line: 86, baseType: !141, size: 32, offset: 2112)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !300, file: !264, line: 86, baseType: !141, size: 32, offset: 2144)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !300, file: !264, line: 86, baseType: !141, size: 32, offset: 2176)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !300, file: !264, line: 86, baseType: !141, size: 32, offset: 2208)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !300, file: !264, line: 87, baseType: !141, size: 32, offset: 2240)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !300, file: !264, line: 87, baseType: !141, size: 32, offset: 2272)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !300, file: !264, line: 87, baseType: !141, size: 32, offset: 2304)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !300, file: !264, line: 87, baseType: !141, size: 32, offset: 2336)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !300, file: !264, line: 90, baseType: !141, size: 32, offset: 2368)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !300, file: !264, line: 93, baseType: !141, size: 32, offset: 2400)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !300, file: !264, line: 93, baseType: !141, size: 32, offset: 2432)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !300, file: !264, line: 93, baseType: !141, size: 32, offset: 2464)
!1562 = !{!1563}
!1563 = !DISubrange(count: 18)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !134, file: !123, line: 168, baseType: !602, size: 64, offset: 6144)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !134, file: !123, line: 169, baseType: !129, size: 64, offset: 6208)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !134, file: !123, line: 170, baseType: !513, size: 64, offset: 6272)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !134, file: !123, line: 171, baseType: !730, size: 64, offset: 6336)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !134, file: !123, line: 174, baseType: !141, size: 32, offset: 6400)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !134, file: !123, line: 174, baseType: !141, size: 32, offset: 6432)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !134, file: !123, line: 174, baseType: !141, size: 32, offset: 6464)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !134, file: !123, line: 175, baseType: !141, size: 32, offset: 6496)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !134, file: !123, line: 175, baseType: !141, size: 32, offset: 6528)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !134, file: !123, line: 176, baseType: !76, size: 16, offset: 6560)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !134, file: !123, line: 176, baseType: !76, size: 16, offset: 6576)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !134, file: !123, line: 179, baseType: !172, size: 96, offset: 6592)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !134, file: !123, line: 179, baseType: !172, size: 96, offset: 6688)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !134, file: !123, line: 180, baseType: !141, size: 32, offset: 6784)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !134, file: !123, line: 180, baseType: !141, size: 32, offset: 6816)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !134, file: !123, line: 180, baseType: !141, size: 32, offset: 6848)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !134, file: !123, line: 181, baseType: !141, size: 32, offset: 6880)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !134, file: !123, line: 181, baseType: !141, size: 32, offset: 6912)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !134, file: !123, line: 182, baseType: !141, size: 32, offset: 6944)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !134, file: !123, line: 182, baseType: !141, size: 32, offset: 6976)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !134, file: !123, line: 183, baseType: !76, size: 16, offset: 7008)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !134, file: !123, line: 183, baseType: !76, size: 16, offset: 7024)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !134, file: !123, line: 185, baseType: !78, size: 32, offset: 7040)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !134, file: !123, line: 186, baseType: !76, size: 16, offset: 7072)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !134, file: !123, line: 187, baseType: !76, size: 16, offset: 7088)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !134, file: !123, line: 190, baseType: !254, size: 128, offset: 7104)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !134, file: !123, line: 191, baseType: !76, size: 16, offset: 7232)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !134, file: !123, line: 192, baseType: !76, size: 16, offset: 7248)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !134, file: !123, line: 195, baseType: !76, size: 16, offset: 7264)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !134, file: !123, line: 196, baseType: !76, size: 16, offset: 7280)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !134, file: !123, line: 197, baseType: !76, size: 16, offset: 7296)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !134, file: !123, line: 198, baseType: !1252, size: 48, offset: 7312)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !134, file: !123, line: 200, baseType: !1597, size: 64, offset: 7360)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !123, line: 86, size: 192, elements: !1599)
!1599 = !{!1600, !1601, !1602, !1603}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1598, file: !123, line: 87, baseType: !693, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1598, file: !123, line: 88, baseType: !422, size: 64, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1598, file: !123, line: 89, baseType: !78, size: 32, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1598, file: !123, line: 90, baseType: !78, size: 32, offset: 160)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !134, file: !123, line: 202, baseType: !103, size: 128, offset: 7424)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !117, file: !116, line: 76, baseType: !63, size: 8, offset: 1472)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !117, file: !116, line: 76, baseType: !63, size: 8, offset: 1480)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !117, file: !116, line: 77, baseType: !76, size: 16, offset: 1488)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !117, file: !116, line: 78, baseType: !76, size: 16, offset: 1504)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !117, file: !116, line: 78, baseType: !76, size: 16, offset: 1520)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !117, file: !116, line: 81, baseType: !172, size: 96, offset: 1536)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !117, file: !116, line: 82, baseType: !172, size: 96, offset: 1632)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !117, file: !116, line: 83, baseType: !172, size: 96, offset: 1728)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "wiresize", scope: !117, file: !116, line: 85, baseType: !141, size: 32, offset: 1824)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "rendersize", scope: !117, file: !116, line: 85, baseType: !141, size: 32, offset: 1856)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "thresh", scope: !117, file: !116, line: 90, baseType: !141, size: 32, offset: 1888)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "lastelem", scope: !117, file: !116, line: 94, baseType: !1617, size: 64, offset: 1920)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaElem", file: !116, line: 62, baseType: !1619)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaElem", file: !116, line: 44, size: 832, elements: !1620)
!1620 = !{!1621, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1619, file: !116, line: 45, baseType: !1622, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1619, file: !116, line: 45, baseType: !1622, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1619, file: !116, line: 47, baseType: !328, size: 64, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1619, file: !116, line: 49, baseType: !76, size: 16, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1619, file: !116, line: 49, baseType: !76, size: 16, offset: 208)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "selcol1", scope: !1619, file: !116, line: 49, baseType: !76, size: 16, offset: 224)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "selcol2", scope: !1619, file: !116, line: 49, baseType: !76, size: 16, offset: 240)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1619, file: !116, line: 50, baseType: !141, size: 32, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1619, file: !116, line: 50, baseType: !141, size: 32, offset: 288)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !1619, file: !116, line: 50, baseType: !141, size: 32, offset: 320)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1619, file: !116, line: 51, baseType: !254, size: 128, offset: 352)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "expx", scope: !1619, file: !116, line: 52, baseType: !141, size: 32, offset: 480)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "expy", scope: !1619, file: !116, line: 53, baseType: !141, size: 32, offset: 512)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "expz", scope: !1619, file: !116, line: 54, baseType: !141, size: 32, offset: 544)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !1619, file: !116, line: 55, baseType: !141, size: 32, offset: 576)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "rad2", scope: !1619, file: !116, line: 56, baseType: !141, size: 32, offset: 608)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1619, file: !116, line: 57, baseType: !141, size: 32, offset: 640)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1619, file: !116, line: 58, baseType: !141, size: 32, offset: 672)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1619, file: !116, line: 60, baseType: !1461, size: 64, offset: 704)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1619, file: !116, line: 60, baseType: !1461, size: 64, offset: 768)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1644, line: 46, baseType: !542)
!1644 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTLISTS", file: !3, line: 115, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "intlists", file: !3, line: 112, size: 128, elements: !1648)
!1648 = !{!1649, !1657}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1647, file: !3, line: 113, baseType: !1650, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTLIST", file: !3, line: 110, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "intlist", file: !3, line: 107, size: 128, elements: !1653)
!1653 = !{!1654, !1655}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1652, file: !3, line: 108, baseType: !78, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1652, file: !3, line: 109, baseType: !1656, size: 64, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1647, file: !3, line: 114, baseType: !1658, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "CUBES", file: !3, line: 94, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cubes", file: !3, line: 91, size: 704, elements: !1662)
!1662 = !{!1663, !1683}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1661, file: !3, line: 92, baseType: !1664, size: 640)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "CUBE", file: !3, line: 89, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cube", file: !3, line: 86, size: 640, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1665, file: !3, line: 87, baseType: !78, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "j", scope: !1665, file: !3, line: 87, baseType: !78, size: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1665, file: !3, line: 87, baseType: !78, size: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1665, file: !3, line: 88, baseType: !1671, size: 512, offset: 128)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1672, size: 512, elements: !712)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "CORNER", file: !3, line: 84, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "corner", file: !3, line: 80, size: 320, elements: !1675)
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1674, file: !3, line: 81, baseType: !78, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "j", scope: !1674, file: !3, line: 81, baseType: !78, size: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1674, file: !3, line: 81, baseType: !78, size: 32, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1674, file: !3, line: 82, baseType: !172, size: 96, offset: 96)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1674, file: !3, line: 82, baseType: !141, size: 32, offset: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1674, file: !3, line: 83, baseType: !1682, size: 64, offset: 256)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1661, file: !3, line: 93, baseType: !1684, size: 64, offset: 640)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "CENTERLIST", file: !3, line: 99, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "centerlist", file: !3, line: 96, size: 192, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1687, file: !3, line: 97, baseType: !78, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "j", scope: !1687, file: !3, line: 97, baseType: !78, size: 32, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1687, file: !3, line: 97, baseType: !78, size: 32, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1687, file: !3, line: 98, baseType: !1693, size: 64, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "VERTEX", file: !3, line: 73, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vertex", file: !3, line: 70, size: 192, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1696, file: !3, line: 71, baseType: !172, size: 96)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1696, file: !3, line: 72, baseType: !172, size: 96, offset: 96)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "EDGELIST", file: !3, line: 105, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edgelist", file: !3, line: 101, size: 320, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !1702, file: !3, line: 102, baseType: !78, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "j1", scope: !1702, file: !3, line: 102, baseType: !78, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1702, file: !3, line: 102, baseType: !78, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !1702, file: !3, line: 102, baseType: !78, size: 32, offset: 96)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "j2", scope: !1702, file: !3, line: 102, baseType: !78, size: 32, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1702, file: !3, line: 102, baseType: !78, size: 32, offset: 160)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !1702, file: !3, line: 103, baseType: !78, size: 32, offset: 192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1702, file: !3, line: 104, baseType: !1712, size: 64, offset: 256)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1713 = !{!0, !1714, !1720, !1725, !1727, !1729}
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "is_done", scope: !1716, file: !3, line: 1106, type: !629, isLocal: true, isDefinition: true)
!1716 = distinct !DISubprogram(name: "makecubetable", scope: !3, file: !3, line: 1104, type: !1717, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{null}
!1719 = !{}
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "corner1", scope: !2, file: !3, line: 888, type: !1722, isLocal: true, isDefinition: true)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 384, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 12)
!1725 = !DIGlobalVariableExpression(var: !1726, expr: !DIExpression())
!1726 = distinct !DIGlobalVariable(name: "corner2", scope: !2, file: !3, line: 891, type: !1722, isLocal: true, isDefinition: true)
!1727 = !DIGlobalVariableExpression(var: !1728, expr: !DIExpression())
!1728 = distinct !DIGlobalVariable(name: "rightface", scope: !2, file: !3, line: 898, type: !1722, isLocal: true, isDefinition: true)
!1729 = !DIGlobalVariableExpression(var: !1730, expr: !DIExpression())
!1730 = distinct !DIGlobalVariable(name: "leftface", scope: !2, file: !3, line: 894, type: !1722, isLocal: true, isDefinition: true)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1645, size: 16384, elements: !1732)
!1732 = !{!1733}
!1733 = !DISubrange(count: 256)
!1734 = !{i32 7, !"Dwarf Version", i32 4}
!1735 = !{i32 2, !"Debug Info Version", i32 3}
!1736 = !{i32 1, !"wchar_size", i32 4}
!1737 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1738 = distinct !DISubprogram(name: "BKE_mball_unlink", scope: !3, file: !3, line: 183, type: !1739, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{null, !114}
!1741 = !DILocalVariable(name: "mb", arg: 1, scope: !1738, file: !3, line: 183, type: !114)
!1742 = !DILocation(line: 183, column: 33, scope: !1738)
!1743 = !DILocalVariable(name: "a", scope: !1738, file: !3, line: 185, type: !78)
!1744 = !DILocation(line: 185, column: 6, scope: !1738)
!1745 = !DILocation(line: 187, column: 9, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1738, file: !3, line: 187, column: 2)
!1747 = !DILocation(line: 187, column: 7, scope: !1746)
!1748 = !DILocation(line: 187, column: 14, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1746, file: !3, line: 187, column: 2)
!1750 = !DILocation(line: 187, column: 18, scope: !1749)
!1751 = !DILocation(line: 187, column: 22, scope: !1749)
!1752 = !DILocation(line: 187, column: 16, scope: !1749)
!1753 = !DILocation(line: 187, column: 2, scope: !1746)
!1754 = !DILocation(line: 188, column: 7, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1756, file: !3, line: 188, column: 7)
!1756 = distinct !DILexicalBlock(scope: !1749, file: !3, line: 187, column: 35)
!1757 = !DILocation(line: 188, column: 11, scope: !1755)
!1758 = !DILocation(line: 188, column: 15, scope: !1755)
!1759 = !DILocation(line: 188, column: 7, scope: !1756)
!1760 = !DILocation(line: 188, column: 19, scope: !1755)
!1761 = !DILocation(line: 188, column: 23, scope: !1755)
!1762 = !DILocation(line: 188, column: 27, scope: !1755)
!1763 = !DILocation(line: 188, column: 31, scope: !1755)
!1764 = !DILocation(line: 188, column: 34, scope: !1755)
!1765 = !DILocation(line: 188, column: 36, scope: !1755)
!1766 = !DILocation(line: 189, column: 3, scope: !1756)
!1767 = !DILocation(line: 189, column: 7, scope: !1756)
!1768 = !DILocation(line: 189, column: 11, scope: !1756)
!1769 = !DILocation(line: 189, column: 14, scope: !1756)
!1770 = !DILocation(line: 190, column: 2, scope: !1756)
!1771 = !DILocation(line: 187, column: 31, scope: !1749)
!1772 = !DILocation(line: 187, column: 2, scope: !1749)
!1773 = distinct !{!1773, !1753, !1774}
!1774 = !DILocation(line: 190, column: 2, scope: !1746)
!1775 = !DILocation(line: 191, column: 1, scope: !1738)
!1776 = distinct !DISubprogram(name: "BKE_mball_free", scope: !3, file: !3, line: 195, type: !1739, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!1777 = !DILocalVariable(name: "mb", arg: 1, scope: !1776, file: !3, line: 195, type: !114)
!1778 = !DILocation(line: 195, column: 31, scope: !1776)
!1779 = !DILocation(line: 197, column: 19, scope: !1776)
!1780 = !DILocation(line: 197, column: 2, scope: !1776)
!1781 = !DILocation(line: 199, column: 6, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 199, column: 6)
!1783 = !DILocation(line: 199, column: 10, scope: !1782)
!1784 = !DILocation(line: 199, column: 6, scope: !1776)
!1785 = !DILocation(line: 200, column: 27, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 199, column: 15)
!1787 = !DILocation(line: 200, column: 21, scope: !1786)
!1788 = !DILocation(line: 200, column: 3, scope: !1786)
!1789 = !DILocation(line: 201, column: 3, scope: !1786)
!1790 = !DILocation(line: 201, column: 7, scope: !1786)
!1791 = !DILocation(line: 201, column: 11, scope: !1786)
!1792 = !DILocation(line: 202, column: 2, scope: !1786)
!1793 = !DILocation(line: 203, column: 6, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 203, column: 6)
!1795 = !DILocation(line: 203, column: 10, scope: !1794)
!1796 = !DILocation(line: 203, column: 6, scope: !1776)
!1797 = !DILocation(line: 203, column: 15, scope: !1794)
!1798 = !DILocation(line: 203, column: 25, scope: !1794)
!1799 = !DILocation(line: 203, column: 29, scope: !1794)
!1800 = !DILocation(line: 204, column: 17, scope: !1776)
!1801 = !DILocation(line: 204, column: 21, scope: !1776)
!1802 = !DILocation(line: 204, column: 2, scope: !1776)
!1803 = !DILocation(line: 205, column: 6, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1776, file: !3, line: 205, column: 6)
!1805 = !DILocation(line: 205, column: 10, scope: !1804)
!1806 = !DILocation(line: 205, column: 15, scope: !1804)
!1807 = !DILocation(line: 205, column: 6, scope: !1776)
!1808 = !DILocation(line: 205, column: 41, scope: !1804)
!1809 = !DILocation(line: 205, column: 45, scope: !1804)
!1810 = !DILocation(line: 205, column: 22, scope: !1804)
!1811 = !DILocation(line: 206, column: 1, scope: !1776)
!1812 = distinct !DISubprogram(name: "BKE_mball_add", scope: !3, file: !3, line: 208, type: !1813, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!1815, !1816, !1880}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !1818, line: 104, baseType: !1819)
!1818 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !1818, line: 53, size: 15232, elements: !1820)
!1820 = !{!1821, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1872, !1877}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1819, file: !1818, line: 54, baseType: !1822, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1819, file: !1818, line: 54, baseType: !1822, size: 64, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1819, file: !1818, line: 55, baseType: !62, size: 8192, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !1819, file: !1818, line: 56, baseType: !76, size: 16, offset: 8320)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !1819, file: !1818, line: 56, baseType: !76, size: 16, offset: 8336)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !1819, file: !1818, line: 57, baseType: !76, size: 16, offset: 8352)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !1819, file: !1818, line: 57, baseType: !76, size: 16, offset: 8368)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !1819, file: !1818, line: 58, baseType: !538, size: 64, offset: 8384)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !1819, file: !1818, line: 59, baseType: !1831, size: 128, offset: 8448)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 128, elements: !1832)
!1832 = !{!1833}
!1833 = !DISubrange(count: 16)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !1819, file: !1818, line: 60, baseType: !76, size: 16, offset: 8576)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !1819, file: !1818, line: 62, baseType: !53, size: 64, offset: 8640)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1819, file: !1818, line: 63, baseType: !103, size: 128, offset: 8704)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !1819, file: !1818, line: 64, baseType: !103, size: 128, offset: 8832)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1819, file: !1818, line: 65, baseType: !103, size: 128, offset: 8960)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !1819, file: !1818, line: 66, baseType: !103, size: 128, offset: 9088)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1819, file: !1818, line: 67, baseType: !103, size: 128, offset: 9216)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !1819, file: !1818, line: 68, baseType: !103, size: 128, offset: 9344)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1819, file: !1818, line: 69, baseType: !103, size: 128, offset: 9472)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1819, file: !1818, line: 70, baseType: !103, size: 128, offset: 9600)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1819, file: !1818, line: 71, baseType: !103, size: 128, offset: 9728)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !1819, file: !1818, line: 72, baseType: !103, size: 128, offset: 9856)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !1819, file: !1818, line: 73, baseType: !103, size: 128, offset: 9984)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1819, file: !1818, line: 74, baseType: !103, size: 128, offset: 10112)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1819, file: !1818, line: 75, baseType: !103, size: 128, offset: 10240)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1819, file: !1818, line: 76, baseType: !103, size: 128, offset: 10368)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1819, file: !1818, line: 77, baseType: !103, size: 128, offset: 10496)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1819, file: !1818, line: 78, baseType: !103, size: 128, offset: 10624)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !1819, file: !1818, line: 79, baseType: !103, size: 128, offset: 10752)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !1819, file: !1818, line: 80, baseType: !103, size: 128, offset: 10880)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1819, file: !1818, line: 81, baseType: !103, size: 128, offset: 11008)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !1819, file: !1818, line: 82, baseType: !103, size: 128, offset: 11136)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1819, file: !1818, line: 83, baseType: !103, size: 128, offset: 11264)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1819, file: !1818, line: 84, baseType: !103, size: 128, offset: 11392)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !1819, file: !1818, line: 85, baseType: !103, size: 128, offset: 11520)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1819, file: !1818, line: 86, baseType: !103, size: 128, offset: 11648)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1819, file: !1818, line: 87, baseType: !103, size: 128, offset: 11776)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1819, file: !1818, line: 88, baseType: !103, size: 128, offset: 11904)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1819, file: !1818, line: 89, baseType: !103, size: 128, offset: 12032)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !1819, file: !1818, line: 90, baseType: !103, size: 128, offset: 12160)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !1819, file: !1818, line: 91, baseType: !103, size: 128, offset: 12288)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !1819, file: !1818, line: 92, baseType: !103, size: 128, offset: 12416)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !1819, file: !1818, line: 93, baseType: !103, size: 128, offset: 12544)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !1819, file: !1818, line: 94, baseType: !103, size: 128, offset: 12672)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1819, file: !1818, line: 95, baseType: !103, size: 128, offset: 12800)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !1819, file: !1818, line: 96, baseType: !103, size: 128, offset: 12928)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !1819, file: !1818, line: 98, baseType: !1871, size: 2048, offset: 13056)
!1871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !63, size: 2048, elements: !1732)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !1819, file: !1818, line: 101, baseType: !1873, size: 64, offset: 15104)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !36, line: 58, size: 32, elements: !1875)
!1875 = !{!1876}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1874, file: !36, line: 59, baseType: !78, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1819, file: !1818, line: 103, baseType: !1878, size: 64, offset: 15168)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !1818, line: 51, flags: DIFlagFwdDecl)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !63)
!1882 = !DILocalVariable(name: "bmain", arg: 1, scope: !1812, file: !3, line: 208, type: !1816)
!1883 = !DILocation(line: 208, column: 31, scope: !1812)
!1884 = !DILocalVariable(name: "name", arg: 2, scope: !1812, file: !3, line: 208, type: !1880)
!1885 = !DILocation(line: 208, column: 50, scope: !1812)
!1886 = !DILocalVariable(name: "mb", scope: !1812, file: !3, line: 210, type: !114)
!1887 = !DILocation(line: 210, column: 12, scope: !1812)
!1888 = !DILocation(line: 212, column: 26, scope: !1812)
!1889 = !DILocation(line: 212, column: 40, scope: !1812)
!1890 = !DILocation(line: 212, column: 7, scope: !1812)
!1891 = !DILocation(line: 212, column: 5, scope: !1812)
!1892 = !DILocation(line: 214, column: 30, scope: !1812)
!1893 = !DILocation(line: 214, column: 34, scope: !1812)
!1894 = !DILocation(line: 214, column: 42, scope: !1812)
!1895 = !DILocation(line: 214, column: 16, scope: !1812)
!1896 = !DILocation(line: 214, column: 20, scope: !1812)
!1897 = !DILocation(line: 214, column: 28, scope: !1812)
!1898 = !DILocation(line: 214, column: 2, scope: !1812)
!1899 = !DILocation(line: 214, column: 6, scope: !1812)
!1900 = !DILocation(line: 214, column: 14, scope: !1812)
!1901 = !DILocation(line: 215, column: 2, scope: !1812)
!1902 = !DILocation(line: 215, column: 6, scope: !1812)
!1903 = !DILocation(line: 215, column: 14, scope: !1812)
!1904 = !DILocation(line: 217, column: 2, scope: !1812)
!1905 = !DILocation(line: 217, column: 6, scope: !1812)
!1906 = !DILocation(line: 217, column: 15, scope: !1812)
!1907 = !DILocation(line: 218, column: 2, scope: !1812)
!1908 = !DILocation(line: 218, column: 6, scope: !1812)
!1909 = !DILocation(line: 218, column: 17, scope: !1812)
!1910 = !DILocation(line: 219, column: 2, scope: !1812)
!1911 = !DILocation(line: 219, column: 6, scope: !1812)
!1912 = !DILocation(line: 219, column: 13, scope: !1812)
!1913 = !DILocation(line: 221, column: 9, scope: !1812)
!1914 = !DILocation(line: 221, column: 2, scope: !1812)
!1915 = distinct !DISubprogram(name: "BKE_mball_copy", scope: !3, file: !3, line: 224, type: !1916, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!1815, !114}
!1918 = !DILocalVariable(name: "mb", arg: 1, scope: !1915, file: !3, line: 224, type: !114)
!1919 = !DILocation(line: 224, column: 36, scope: !1915)
!1920 = !DILocalVariable(name: "mbn", scope: !1915, file: !3, line: 226, type: !114)
!1921 = !DILocation(line: 226, column: 12, scope: !1915)
!1922 = !DILocalVariable(name: "a", scope: !1915, file: !3, line: 227, type: !78)
!1923 = !DILocation(line: 227, column: 6, scope: !1915)
!1924 = !DILocation(line: 229, column: 27, scope: !1915)
!1925 = !DILocation(line: 229, column: 31, scope: !1915)
!1926 = !DILocation(line: 229, column: 8, scope: !1915)
!1927 = !DILocation(line: 229, column: 6, scope: !1915)
!1928 = !DILocation(line: 231, column: 21, scope: !1915)
!1929 = !DILocation(line: 231, column: 26, scope: !1915)
!1930 = !DILocation(line: 231, column: 34, scope: !1915)
!1931 = !DILocation(line: 231, column: 38, scope: !1915)
!1932 = !DILocation(line: 231, column: 2, scope: !1915)
!1933 = !DILocation(line: 233, column: 13, scope: !1915)
!1934 = !DILocation(line: 233, column: 27, scope: !1915)
!1935 = !DILocation(line: 233, column: 31, scope: !1915)
!1936 = !DILocation(line: 233, column: 2, scope: !1915)
!1937 = !DILocation(line: 233, column: 7, scope: !1915)
!1938 = !DILocation(line: 233, column: 11, scope: !1915)
!1939 = !DILocation(line: 234, column: 9, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1915, file: !3, line: 234, column: 2)
!1941 = !DILocation(line: 234, column: 7, scope: !1940)
!1942 = !DILocation(line: 234, column: 14, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1940, file: !3, line: 234, column: 2)
!1944 = !DILocation(line: 234, column: 18, scope: !1943)
!1945 = !DILocation(line: 234, column: 23, scope: !1943)
!1946 = !DILocation(line: 234, column: 16, scope: !1943)
!1947 = !DILocation(line: 234, column: 2, scope: !1940)
!1948 = !DILocation(line: 235, column: 20, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1943, file: !3, line: 234, column: 36)
!1950 = !DILocation(line: 235, column: 25, scope: !1949)
!1951 = !DILocation(line: 235, column: 29, scope: !1949)
!1952 = !DILocation(line: 235, column: 14, scope: !1949)
!1953 = !DILocation(line: 235, column: 3, scope: !1949)
!1954 = !DILocation(line: 236, column: 2, scope: !1949)
!1955 = !DILocation(line: 234, column: 32, scope: !1943)
!1956 = !DILocation(line: 234, column: 2, scope: !1943)
!1957 = distinct !{!1957, !1947, !1958}
!1958 = !DILocation(line: 236, column: 2, scope: !1940)
!1959 = !DILocation(line: 238, column: 2, scope: !1915)
!1960 = !DILocation(line: 238, column: 7, scope: !1915)
!1961 = !DILocation(line: 238, column: 17, scope: !1915)
!1962 = !DILocation(line: 239, column: 2, scope: !1915)
!1963 = !DILocation(line: 239, column: 7, scope: !1915)
!1964 = !DILocation(line: 239, column: 16, scope: !1915)
!1965 = !DILocation(line: 241, column: 9, scope: !1915)
!1966 = !DILocation(line: 241, column: 2, scope: !1915)
!1967 = distinct !DISubprogram(name: "BKE_mball_make_local", scope: !3, file: !3, line: 251, type: !1739, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!1968 = !DILocalVariable(name: "mb", arg: 1, scope: !1967, file: !3, line: 251, type: !114)
!1969 = !DILocation(line: 251, column: 37, scope: !1967)
!1970 = !DILocalVariable(name: "bmain", scope: !1967, file: !3, line: 253, type: !1816)
!1971 = !DILocation(line: 253, column: 8, scope: !1967)
!1972 = !DILocation(line: 253, column: 18, scope: !1967)
!1973 = !DILocalVariable(name: "ob", scope: !1967, file: !3, line: 254, type: !1974)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !22, line: 295, baseType: !308)
!1976 = !DILocation(line: 254, column: 10, scope: !1967)
!1977 = !DILocalVariable(name: "is_local", scope: !1967, file: !3, line: 255, type: !629)
!1978 = !DILocation(line: 255, column: 7, scope: !1967)
!1979 = !DILocalVariable(name: "is_lib", scope: !1967, file: !3, line: 255, type: !629)
!1980 = !DILocation(line: 255, column: 25, scope: !1967)
!1981 = !DILocation(line: 262, column: 6, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1967, file: !3, line: 262, column: 6)
!1983 = !DILocation(line: 262, column: 10, scope: !1982)
!1984 = !DILocation(line: 262, column: 13, scope: !1982)
!1985 = !DILocation(line: 262, column: 17, scope: !1982)
!1986 = !DILocation(line: 262, column: 6, scope: !1967)
!1987 = !DILocation(line: 262, column: 26, scope: !1982)
!1988 = !DILocation(line: 263, column: 6, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1967, file: !3, line: 263, column: 6)
!1990 = !DILocation(line: 263, column: 10, scope: !1989)
!1991 = !DILocation(line: 263, column: 13, scope: !1989)
!1992 = !DILocation(line: 263, column: 16, scope: !1989)
!1993 = !DILocation(line: 263, column: 6, scope: !1967)
!1994 = !DILocation(line: 264, column: 21, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1989, file: !3, line: 263, column: 22)
!1996 = !DILocation(line: 264, column: 29, scope: !1995)
!1997 = !DILocation(line: 264, column: 33, scope: !1995)
!1998 = !DILocation(line: 264, column: 3, scope: !1995)
!1999 = !DILocation(line: 265, column: 22, scope: !1995)
!2000 = !DILocation(line: 265, column: 3, scope: !1995)
!2001 = !DILocation(line: 267, column: 3, scope: !1995)
!2002 = !DILocation(line: 270, column: 14, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1967, file: !3, line: 270, column: 2)
!2004 = !DILocation(line: 270, column: 20, scope: !2003)
!2005 = !DILocation(line: 270, column: 27, scope: !2003)
!2006 = !DILocation(line: 270, column: 12, scope: !2003)
!2007 = !DILocation(line: 270, column: 10, scope: !2003)
!2008 = !DILocation(line: 270, column: 7, scope: !2003)
!2009 = !DILocation(line: 270, column: 34, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 270, column: 2)
!2011 = !DILocation(line: 270, column: 37, scope: !2010)
!2012 = !DILocation(line: 270, column: 40, scope: !2010)
!2013 = !DILocation(line: 0, scope: !2010)
!2014 = !DILocation(line: 270, column: 2, scope: !2003)
!2015 = !DILocation(line: 271, column: 7, scope: !2016)
!2016 = distinct !DILexicalBlock(scope: !2017, file: !3, line: 271, column: 7)
!2017 = distinct !DILexicalBlock(scope: !2010, file: !3, line: 270, column: 85)
!2018 = !DILocation(line: 271, column: 11, scope: !2016)
!2019 = !DILocation(line: 271, column: 19, scope: !2016)
!2020 = !DILocation(line: 271, column: 16, scope: !2016)
!2021 = !DILocation(line: 271, column: 7, scope: !2017)
!2022 = !DILocation(line: 272, column: 8, scope: !2023)
!2023 = distinct !DILexicalBlock(scope: !2024, file: !3, line: 272, column: 8)
!2024 = distinct !DILexicalBlock(scope: !2016, file: !3, line: 271, column: 23)
!2025 = !DILocation(line: 272, column: 12, scope: !2023)
!2026 = !DILocation(line: 272, column: 15, scope: !2023)
!2027 = !DILocation(line: 272, column: 8, scope: !2024)
!2028 = !DILocation(line: 272, column: 27, scope: !2023)
!2029 = !DILocation(line: 272, column: 20, scope: !2023)
!2030 = !DILocation(line: 273, column: 18, scope: !2023)
!2031 = !DILocation(line: 274, column: 3, scope: !2024)
!2032 = !DILocation(line: 275, column: 2, scope: !2017)
!2033 = !DILocation(line: 270, column: 72, scope: !2010)
!2034 = !DILocation(line: 270, column: 76, scope: !2010)
!2035 = !DILocation(line: 270, column: 79, scope: !2010)
!2036 = !DILocation(line: 270, column: 70, scope: !2010)
!2037 = !DILocation(line: 270, column: 2, scope: !2010)
!2038 = distinct !{!2038, !2014, !2039}
!2039 = !DILocation(line: 275, column: 2, scope: !2003)
!2040 = !DILocation(line: 277, column: 6, scope: !2041)
!2041 = distinct !DILexicalBlock(scope: !1967, file: !3, line: 277, column: 6)
!2042 = !DILocation(line: 277, column: 15, scope: !2041)
!2043 = !DILocation(line: 277, column: 18, scope: !2041)
!2044 = !DILocation(line: 277, column: 25, scope: !2041)
!2045 = !DILocation(line: 277, column: 6, scope: !1967)
!2046 = !DILocation(line: 278, column: 21, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 277, column: 35)
!2048 = !DILocation(line: 278, column: 29, scope: !2047)
!2049 = !DILocation(line: 278, column: 33, scope: !2047)
!2050 = !DILocation(line: 278, column: 3, scope: !2047)
!2051 = !DILocation(line: 279, column: 22, scope: !2047)
!2052 = !DILocation(line: 279, column: 3, scope: !2047)
!2053 = !DILocation(line: 280, column: 2, scope: !2047)
!2054 = !DILocation(line: 281, column: 11, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 281, column: 11)
!2056 = !DILocation(line: 281, column: 20, scope: !2055)
!2057 = !DILocation(line: 281, column: 23, scope: !2055)
!2058 = !DILocation(line: 281, column: 11, scope: !2041)
!2059 = !DILocalVariable(name: "mb_new", scope: !2060, file: !3, line: 282, type: !114)
!2060 = distinct !DILexicalBlock(scope: !2055, file: !3, line: 281, column: 31)
!2061 = !DILocation(line: 282, column: 13, scope: !2060)
!2062 = !DILocation(line: 282, column: 37, scope: !2060)
!2063 = !DILocation(line: 282, column: 22, scope: !2060)
!2064 = !DILocation(line: 283, column: 3, scope: !2060)
!2065 = !DILocation(line: 283, column: 11, scope: !2060)
!2066 = !DILocation(line: 283, column: 14, scope: !2060)
!2067 = !DILocation(line: 283, column: 17, scope: !2060)
!2068 = !DILocation(line: 286, column: 26, scope: !2060)
!2069 = !DILocation(line: 286, column: 33, scope: !2060)
!2070 = !DILocation(line: 286, column: 37, scope: !2060)
!2071 = !DILocation(line: 286, column: 40, scope: !2060)
!2072 = !DILocation(line: 286, column: 46, scope: !2060)
!2073 = !DILocation(line: 286, column: 54, scope: !2060)
!2074 = !DILocation(line: 286, column: 3, scope: !2060)
!2075 = !DILocation(line: 288, column: 15, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !2060, file: !3, line: 288, column: 3)
!2077 = !DILocation(line: 288, column: 21, scope: !2076)
!2078 = !DILocation(line: 288, column: 28, scope: !2076)
!2079 = !DILocation(line: 288, column: 13, scope: !2076)
!2080 = !DILocation(line: 288, column: 11, scope: !2076)
!2081 = !DILocation(line: 288, column: 8, scope: !2076)
!2082 = !DILocation(line: 288, column: 35, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2076, file: !3, line: 288, column: 3)
!2084 = !DILocation(line: 288, column: 3, scope: !2076)
!2085 = !DILocation(line: 289, column: 8, scope: !2086)
!2086 = distinct !DILexicalBlock(scope: !2087, file: !3, line: 289, column: 8)
!2087 = distinct !DILexicalBlock(scope: !2083, file: !3, line: 288, column: 57)
!2088 = !DILocation(line: 289, column: 12, scope: !2086)
!2089 = !DILocation(line: 289, column: 20, scope: !2086)
!2090 = !DILocation(line: 289, column: 17, scope: !2086)
!2091 = !DILocation(line: 289, column: 8, scope: !2087)
!2092 = !DILocation(line: 290, column: 9, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2094, file: !3, line: 290, column: 9)
!2094 = distinct !DILexicalBlock(scope: !2086, file: !3, line: 289, column: 24)
!2095 = !DILocation(line: 290, column: 13, scope: !2093)
!2096 = !DILocation(line: 290, column: 16, scope: !2093)
!2097 = !DILocation(line: 290, column: 20, scope: !2093)
!2098 = !DILocation(line: 290, column: 9, scope: !2094)
!2099 = !DILocation(line: 291, column: 17, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2093, file: !3, line: 290, column: 29)
!2101 = !DILocation(line: 291, column: 6, scope: !2100)
!2102 = !DILocation(line: 291, column: 10, scope: !2100)
!2103 = !DILocation(line: 291, column: 15, scope: !2100)
!2104 = !DILocation(line: 292, column: 6, scope: !2100)
!2105 = !DILocation(line: 292, column: 14, scope: !2100)
!2106 = !DILocation(line: 292, column: 17, scope: !2100)
!2107 = !DILocation(line: 292, column: 19, scope: !2100)
!2108 = !DILocation(line: 293, column: 6, scope: !2100)
!2109 = !DILocation(line: 293, column: 10, scope: !2100)
!2110 = !DILocation(line: 293, column: 13, scope: !2100)
!2111 = !DILocation(line: 293, column: 15, scope: !2100)
!2112 = !DILocation(line: 294, column: 5, scope: !2100)
!2113 = !DILocation(line: 295, column: 4, scope: !2094)
!2114 = !DILocation(line: 296, column: 3, scope: !2087)
!2115 = !DILocation(line: 288, column: 44, scope: !2083)
!2116 = !DILocation(line: 288, column: 48, scope: !2083)
!2117 = !DILocation(line: 288, column: 51, scope: !2083)
!2118 = !DILocation(line: 288, column: 42, scope: !2083)
!2119 = !DILocation(line: 288, column: 3, scope: !2083)
!2120 = distinct !{!2120, !2084, !2121}
!2121 = !DILocation(line: 296, column: 3, scope: !2076)
!2122 = !DILocation(line: 297, column: 2, scope: !2060)
!2123 = !DILocation(line: 298, column: 1, scope: !1967)
!2124 = distinct !DISubprogram(name: "extern_local_mball", scope: !3, file: !3, line: 244, type: !1739, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2125 = !DILocalVariable(name: "mb", arg: 1, scope: !2124, file: !3, line: 244, type: !114)
!2126 = !DILocation(line: 244, column: 42, scope: !2124)
!2127 = !DILocation(line: 246, column: 6, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2124, file: !3, line: 246, column: 6)
!2129 = !DILocation(line: 246, column: 10, scope: !2128)
!2130 = !DILocation(line: 246, column: 6, scope: !2124)
!2131 = !DILocation(line: 247, column: 24, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2128, file: !3, line: 246, column: 15)
!2133 = !DILocation(line: 247, column: 28, scope: !2132)
!2134 = !DILocation(line: 247, column: 33, scope: !2132)
!2135 = !DILocation(line: 247, column: 37, scope: !2132)
!2136 = !DILocation(line: 247, column: 3, scope: !2132)
!2137 = !DILocation(line: 248, column: 2, scope: !2132)
!2138 = !DILocation(line: 249, column: 1, scope: !2124)
!2139 = distinct !DISubprogram(name: "BKE_mball_element_add", scope: !3, file: !3, line: 302, type: !2140, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!1622, !114, !2142}
!2142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !78)
!2143 = !DILocalVariable(name: "mb", arg: 1, scope: !2139, file: !3, line: 302, type: !114)
!2144 = !DILocation(line: 302, column: 43, scope: !2139)
!2145 = !DILocalVariable(name: "type", arg: 2, scope: !2139, file: !3, line: 302, type: !2142)
!2146 = !DILocation(line: 302, column: 57, scope: !2139)
!2147 = !DILocalVariable(name: "ml", scope: !2139, file: !3, line: 304, type: !1617)
!2148 = !DILocation(line: 304, column: 12, scope: !2139)
!2149 = !DILocation(line: 304, column: 17, scope: !2139)
!2150 = !DILocation(line: 306, column: 10, scope: !2139)
!2151 = !DILocation(line: 306, column: 14, scope: !2139)
!2152 = !DILocation(line: 306, column: 2, scope: !2139)
!2153 = !DILocation(line: 308, column: 2, scope: !2139)
!2154 = !DILocation(line: 308, column: 6, scope: !2139)
!2155 = !DILocation(line: 308, column: 10, scope: !2139)
!2156 = !DILocation(line: 309, column: 2, scope: !2139)
!2157 = !DILocation(line: 309, column: 6, scope: !2139)
!2158 = !DILocation(line: 309, column: 8, scope: !2139)
!2159 = !DILocation(line: 310, column: 2, scope: !2139)
!2160 = !DILocation(line: 310, column: 6, scope: !2139)
!2161 = !DILocation(line: 310, column: 11, scope: !2139)
!2162 = !DILocation(line: 312, column: 10, scope: !2139)
!2163 = !DILocation(line: 312, column: 2, scope: !2139)
!2164 = !DILocation(line: 314, column: 4, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2139, file: !3, line: 312, column: 16)
!2166 = !DILocation(line: 314, column: 8, scope: !2165)
!2167 = !DILocation(line: 314, column: 13, scope: !2165)
!2168 = !DILocation(line: 315, column: 26, scope: !2165)
!2169 = !DILocation(line: 315, column: 30, scope: !2165)
!2170 = !DILocation(line: 315, column: 35, scope: !2165)
!2171 = !DILocation(line: 315, column: 15, scope: !2165)
!2172 = !DILocation(line: 315, column: 19, scope: !2165)
!2173 = !DILocation(line: 315, column: 24, scope: !2165)
!2174 = !DILocation(line: 315, column: 4, scope: !2165)
!2175 = !DILocation(line: 315, column: 8, scope: !2165)
!2176 = !DILocation(line: 315, column: 13, scope: !2165)
!2177 = !DILocation(line: 317, column: 4, scope: !2165)
!2178 = !DILocation(line: 319, column: 4, scope: !2165)
!2179 = !DILocation(line: 319, column: 8, scope: !2165)
!2180 = !DILocation(line: 319, column: 13, scope: !2165)
!2181 = !DILocation(line: 320, column: 26, scope: !2165)
!2182 = !DILocation(line: 320, column: 30, scope: !2165)
!2183 = !DILocation(line: 320, column: 35, scope: !2165)
!2184 = !DILocation(line: 320, column: 15, scope: !2165)
!2185 = !DILocation(line: 320, column: 19, scope: !2165)
!2186 = !DILocation(line: 320, column: 24, scope: !2165)
!2187 = !DILocation(line: 320, column: 4, scope: !2165)
!2188 = !DILocation(line: 320, column: 8, scope: !2165)
!2189 = !DILocation(line: 320, column: 13, scope: !2165)
!2190 = !DILocation(line: 322, column: 4, scope: !2165)
!2191 = !DILocation(line: 324, column: 4, scope: !2165)
!2192 = !DILocation(line: 324, column: 8, scope: !2165)
!2193 = !DILocation(line: 324, column: 13, scope: !2165)
!2194 = !DILocation(line: 325, column: 26, scope: !2165)
!2195 = !DILocation(line: 325, column: 30, scope: !2165)
!2196 = !DILocation(line: 325, column: 35, scope: !2165)
!2197 = !DILocation(line: 325, column: 15, scope: !2165)
!2198 = !DILocation(line: 325, column: 19, scope: !2165)
!2199 = !DILocation(line: 325, column: 24, scope: !2165)
!2200 = !DILocation(line: 325, column: 4, scope: !2165)
!2201 = !DILocation(line: 325, column: 8, scope: !2165)
!2202 = !DILocation(line: 325, column: 13, scope: !2165)
!2203 = !DILocation(line: 327, column: 4, scope: !2165)
!2204 = !DILocation(line: 329, column: 4, scope: !2165)
!2205 = !DILocation(line: 329, column: 8, scope: !2165)
!2206 = !DILocation(line: 329, column: 13, scope: !2165)
!2207 = !DILocation(line: 330, column: 4, scope: !2165)
!2208 = !DILocation(line: 330, column: 8, scope: !2165)
!2209 = !DILocation(line: 330, column: 13, scope: !2165)
!2210 = !DILocation(line: 331, column: 4, scope: !2165)
!2211 = !DILocation(line: 331, column: 8, scope: !2165)
!2212 = !DILocation(line: 331, column: 13, scope: !2165)
!2213 = !DILocation(line: 332, column: 4, scope: !2165)
!2214 = !DILocation(line: 332, column: 8, scope: !2165)
!2215 = !DILocation(line: 332, column: 13, scope: !2165)
!2216 = !DILocation(line: 334, column: 4, scope: !2165)
!2217 = !DILocation(line: 336, column: 4, scope: !2165)
!2218 = !DILocation(line: 336, column: 8, scope: !2165)
!2219 = !DILocation(line: 336, column: 13, scope: !2165)
!2220 = !DILocation(line: 337, column: 26, scope: !2165)
!2221 = !DILocation(line: 337, column: 30, scope: !2165)
!2222 = !DILocation(line: 337, column: 35, scope: !2165)
!2223 = !DILocation(line: 337, column: 15, scope: !2165)
!2224 = !DILocation(line: 337, column: 19, scope: !2165)
!2225 = !DILocation(line: 337, column: 24, scope: !2165)
!2226 = !DILocation(line: 337, column: 4, scope: !2165)
!2227 = !DILocation(line: 337, column: 8, scope: !2165)
!2228 = !DILocation(line: 337, column: 13, scope: !2165)
!2229 = !DILocation(line: 339, column: 4, scope: !2165)
!2230 = !DILocation(line: 341, column: 4, scope: !2165)
!2231 = !DILocation(line: 344, column: 15, scope: !2139)
!2232 = !DILocation(line: 344, column: 19, scope: !2139)
!2233 = !DILocation(line: 344, column: 26, scope: !2139)
!2234 = !DILocation(line: 344, column: 2, scope: !2139)
!2235 = !DILocation(line: 346, column: 9, scope: !2139)
!2236 = !DILocation(line: 346, column: 2, scope: !2139)
!2237 = distinct !DISubprogram(name: "BKE_mball_texspace_calc", scope: !3, file: !3, line: 354, type: !2238, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2238 = !DISubroutineType(types: !2239)
!2239 = !{null, !1974}
!2240 = !DILocalVariable(name: "ob", arg: 1, scope: !2237, file: !3, line: 354, type: !1974)
!2241 = !DILocation(line: 354, column: 38, scope: !2237)
!2242 = !DILocalVariable(name: "dl", scope: !2237, file: !3, line: 356, type: !2243)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "DispList", file: !2245, line: 79, baseType: !2246)
!2245 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_displist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DispList", file: !2245, line: 68, size: 576, elements: !2247)
!2247 = !{!2248, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2261, !2262, !2263}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2246, file: !2245, line: 69, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2246, file: !2245, line: 69, baseType: !2249, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2246, file: !2245, line: 70, baseType: !76, size: 16, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2246, file: !2245, line: 70, baseType: !76, size: 16, offset: 144)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !2246, file: !2245, line: 71, baseType: !78, size: 32, offset: 160)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2246, file: !2245, line: 71, baseType: !78, size: 32, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2246, file: !2245, line: 72, baseType: !76, size: 16, offset: 224)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2246, file: !2245, line: 72, baseType: !76, size: 16, offset: 240)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2246, file: !2245, line: 73, baseType: !1461, size: 64, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "nors", scope: !2246, file: !2245, line: 73, baseType: !1461, size: 64, offset: 320)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2246, file: !2245, line: 74, baseType: !2260, size: 64, offset: 384)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !2246, file: !2245, line: 75, baseType: !78, size: 32, offset: 448)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !2246, file: !2245, line: 76, baseType: !78, size: 32, offset: 480)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "bevelSplitFlag", scope: !2246, file: !2245, line: 78, baseType: !637, size: 64, offset: 512)
!2264 = !DILocation(line: 356, column: 12, scope: !2237)
!2265 = !DILocalVariable(name: "bb", scope: !2237, file: !3, line: 357, type: !2266)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoundBox", file: !22, line: 100, baseType: !329)
!2268 = !DILocation(line: 357, column: 12, scope: !2237)
!2269 = !DILocalVariable(name: "data", scope: !2237, file: !3, line: 358, type: !1461)
!2270 = !DILocation(line: 358, column: 9, scope: !2237)
!2271 = !DILocalVariable(name: "min", scope: !2237, file: !3, line: 358, type: !172)
!2272 = !DILocation(line: 358, column: 15, scope: !2237)
!2273 = !DILocalVariable(name: "max", scope: !2237, file: !3, line: 358, type: !172)
!2274 = !DILocation(line: 358, column: 23, scope: !2237)
!2275 = !DILocalVariable(name: "tot", scope: !2237, file: !3, line: 359, type: !78)
!2276 = !DILocation(line: 359, column: 6, scope: !2237)
!2277 = !DILocalVariable(name: "do_it", scope: !2237, file: !3, line: 360, type: !629)
!2278 = !DILocation(line: 360, column: 7, scope: !2237)
!2279 = !DILocation(line: 362, column: 6, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 362, column: 6)
!2281 = !DILocation(line: 362, column: 10, scope: !2280)
!2282 = !DILocation(line: 362, column: 13, scope: !2280)
!2283 = !DILocation(line: 362, column: 6, scope: !2237)
!2284 = !DILocation(line: 362, column: 31, scope: !2280)
!2285 = !DILocation(line: 362, column: 22, scope: !2280)
!2286 = !DILocation(line: 362, column: 26, scope: !2280)
!2287 = !DILocation(line: 362, column: 29, scope: !2280)
!2288 = !DILocation(line: 363, column: 7, scope: !2237)
!2289 = !DILocation(line: 363, column: 11, scope: !2237)
!2290 = !DILocation(line: 363, column: 5, scope: !2237)
!2291 = !DILocation(line: 367, column: 24, scope: !2237)
!2292 = !DILocation(line: 367, column: 33, scope: !2237)
!2293 = !DILocation(line: 367, column: 13, scope: !2237)
!2294 = !DILocation(line: 367, column: 22, scope: !2237)
!2295 = !DILocation(line: 367, column: 2, scope: !2237)
!2296 = !DILocation(line: 367, column: 11, scope: !2237)
!2297 = !DILocation(line: 368, column: 24, scope: !2237)
!2298 = !DILocation(line: 368, column: 33, scope: !2237)
!2299 = !DILocation(line: 368, column: 13, scope: !2237)
!2300 = !DILocation(line: 368, column: 22, scope: !2237)
!2301 = !DILocation(line: 368, column: 2, scope: !2237)
!2302 = !DILocation(line: 368, column: 11, scope: !2237)
!2303 = !DILocation(line: 370, column: 7, scope: !2237)
!2304 = !DILocation(line: 370, column: 11, scope: !2237)
!2305 = !DILocation(line: 370, column: 24, scope: !2237)
!2306 = !DILocation(line: 370, column: 29, scope: !2237)
!2307 = !DILocation(line: 370, column: 5, scope: !2237)
!2308 = !DILocation(line: 371, column: 2, scope: !2237)
!2309 = !DILocation(line: 371, column: 9, scope: !2237)
!2310 = !DILocation(line: 372, column: 9, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 371, column: 13)
!2312 = !DILocation(line: 372, column: 13, scope: !2311)
!2313 = !DILocation(line: 372, column: 7, scope: !2311)
!2314 = !DILocation(line: 373, column: 7, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2311, file: !3, line: 373, column: 7)
!2316 = !DILocation(line: 373, column: 7, scope: !2311)
!2317 = !DILocation(line: 373, column: 18, scope: !2315)
!2318 = !DILocation(line: 373, column: 12, scope: !2315)
!2319 = !DILocation(line: 374, column: 10, scope: !2311)
!2320 = !DILocation(line: 374, column: 14, scope: !2311)
!2321 = !DILocation(line: 374, column: 8, scope: !2311)
!2322 = !DILocation(line: 375, column: 3, scope: !2311)
!2323 = !DILocation(line: 375, column: 13, scope: !2311)
!2324 = !DILocation(line: 377, column: 19, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2311, file: !3, line: 375, column: 17)
!2326 = !DILocation(line: 377, column: 24, scope: !2325)
!2327 = !DILocation(line: 377, column: 29, scope: !2325)
!2328 = !DILocation(line: 377, column: 4, scope: !2325)
!2329 = !DILocation(line: 378, column: 9, scope: !2325)
!2330 = distinct !{!2330, !2322, !2331}
!2331 = !DILocation(line: 379, column: 3, scope: !2311)
!2332 = !DILocation(line: 380, column: 8, scope: !2311)
!2333 = !DILocation(line: 380, column: 12, scope: !2311)
!2334 = !DILocation(line: 380, column: 6, scope: !2311)
!2335 = distinct !{!2335, !2308, !2336}
!2336 = !DILocation(line: 381, column: 2, scope: !2237)
!2337 = !DILocation(line: 383, column: 7, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2237, file: !3, line: 383, column: 6)
!2339 = !DILocation(line: 383, column: 6, scope: !2237)
!2340 = !DILocation(line: 384, column: 21, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2338, file: !3, line: 383, column: 14)
!2342 = !DILocation(line: 384, column: 28, scope: !2341)
!2343 = !DILocation(line: 384, column: 12, scope: !2341)
!2344 = !DILocation(line: 384, column: 19, scope: !2341)
!2345 = !DILocation(line: 384, column: 3, scope: !2341)
!2346 = !DILocation(line: 384, column: 10, scope: !2341)
!2347 = !DILocation(line: 385, column: 21, scope: !2341)
!2348 = !DILocation(line: 385, column: 28, scope: !2341)
!2349 = !DILocation(line: 385, column: 12, scope: !2341)
!2350 = !DILocation(line: 385, column: 19, scope: !2341)
!2351 = !DILocation(line: 385, column: 3, scope: !2341)
!2352 = !DILocation(line: 385, column: 10, scope: !2341)
!2353 = !DILocation(line: 386, column: 2, scope: !2341)
!2354 = !DILocation(line: 396, column: 32, scope: !2237)
!2355 = !DILocation(line: 396, column: 36, scope: !2237)
!2356 = !DILocation(line: 396, column: 41, scope: !2237)
!2357 = !DILocation(line: 396, column: 2, scope: !2237)
!2358 = !DILocation(line: 397, column: 1, scope: !2237)
!2359 = distinct !DISubprogram(name: "BKE_mball_make_orco", scope: !3, file: !3, line: 399, type: !2360, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!1461, !1974, !127}
!2362 = !DILocalVariable(name: "ob", arg: 1, scope: !2359, file: !3, line: 399, type: !1974)
!2363 = !DILocation(line: 399, column: 36, scope: !2359)
!2364 = !DILocalVariable(name: "dispbase", arg: 2, scope: !2359, file: !3, line: 399, type: !127)
!2365 = !DILocation(line: 399, column: 50, scope: !2359)
!2366 = !DILocalVariable(name: "bb", scope: !2359, file: !3, line: 401, type: !2266)
!2367 = !DILocation(line: 401, column: 12, scope: !2359)
!2368 = !DILocalVariable(name: "dl", scope: !2359, file: !3, line: 402, type: !2243)
!2369 = !DILocation(line: 402, column: 12, scope: !2359)
!2370 = !DILocalVariable(name: "data", scope: !2359, file: !3, line: 403, type: !1461)
!2371 = !DILocation(line: 403, column: 9, scope: !2359)
!2372 = !DILocalVariable(name: "orco", scope: !2359, file: !3, line: 403, type: !1461)
!2373 = !DILocation(line: 403, column: 16, scope: !2359)
!2374 = !DILocalVariable(name: "orcodata", scope: !2359, file: !3, line: 403, type: !1461)
!2375 = !DILocation(line: 403, column: 23, scope: !2359)
!2376 = !DILocalVariable(name: "loc", scope: !2359, file: !3, line: 404, type: !172)
!2377 = !DILocation(line: 404, column: 8, scope: !2359)
!2378 = !DILocalVariable(name: "size", scope: !2359, file: !3, line: 404, type: !172)
!2379 = !DILocation(line: 404, column: 16, scope: !2359)
!2380 = !DILocalVariable(name: "a", scope: !2359, file: !3, line: 405, type: !78)
!2381 = !DILocation(line: 405, column: 6, scope: !2359)
!2382 = !DILocation(line: 408, column: 7, scope: !2359)
!2383 = !DILocation(line: 408, column: 11, scope: !2359)
!2384 = !DILocation(line: 408, column: 5, scope: !2359)
!2385 = !DILocation(line: 409, column: 12, scope: !2359)
!2386 = !DILocation(line: 409, column: 16, scope: !2359)
!2387 = !DILocation(line: 409, column: 28, scope: !2359)
!2388 = !DILocation(line: 409, column: 32, scope: !2359)
!2389 = !DILocation(line: 409, column: 26, scope: !2359)
!2390 = !DILocation(line: 409, column: 43, scope: !2359)
!2391 = !DILocation(line: 409, column: 2, scope: !2359)
!2392 = !DILocation(line: 409, column: 9, scope: !2359)
!2393 = !DILocation(line: 410, column: 12, scope: !2359)
!2394 = !DILocation(line: 410, column: 16, scope: !2359)
!2395 = !DILocation(line: 410, column: 28, scope: !2359)
!2396 = !DILocation(line: 410, column: 26, scope: !2359)
!2397 = !DILocation(line: 410, column: 2, scope: !2359)
!2398 = !DILocation(line: 410, column: 10, scope: !2359)
!2399 = !DILocation(line: 411, column: 12, scope: !2359)
!2400 = !DILocation(line: 411, column: 16, scope: !2359)
!2401 = !DILocation(line: 411, column: 28, scope: !2359)
!2402 = !DILocation(line: 411, column: 32, scope: !2359)
!2403 = !DILocation(line: 411, column: 26, scope: !2359)
!2404 = !DILocation(line: 411, column: 43, scope: !2359)
!2405 = !DILocation(line: 411, column: 2, scope: !2359)
!2406 = !DILocation(line: 411, column: 9, scope: !2359)
!2407 = !DILocation(line: 412, column: 12, scope: !2359)
!2408 = !DILocation(line: 412, column: 16, scope: !2359)
!2409 = !DILocation(line: 412, column: 28, scope: !2359)
!2410 = !DILocation(line: 412, column: 26, scope: !2359)
!2411 = !DILocation(line: 412, column: 2, scope: !2359)
!2412 = !DILocation(line: 412, column: 10, scope: !2359)
!2413 = !DILocation(line: 413, column: 12, scope: !2359)
!2414 = !DILocation(line: 413, column: 16, scope: !2359)
!2415 = !DILocation(line: 413, column: 28, scope: !2359)
!2416 = !DILocation(line: 413, column: 32, scope: !2359)
!2417 = !DILocation(line: 413, column: 26, scope: !2359)
!2418 = !DILocation(line: 413, column: 43, scope: !2359)
!2419 = !DILocation(line: 413, column: 2, scope: !2359)
!2420 = !DILocation(line: 413, column: 9, scope: !2359)
!2421 = !DILocation(line: 414, column: 12, scope: !2359)
!2422 = !DILocation(line: 414, column: 16, scope: !2359)
!2423 = !DILocation(line: 414, column: 28, scope: !2359)
!2424 = !DILocation(line: 414, column: 26, scope: !2359)
!2425 = !DILocation(line: 414, column: 2, scope: !2359)
!2426 = !DILocation(line: 414, column: 10, scope: !2359)
!2427 = !DILocation(line: 416, column: 7, scope: !2359)
!2428 = !DILocation(line: 416, column: 17, scope: !2359)
!2429 = !DILocation(line: 416, column: 5, scope: !2359)
!2430 = !DILocation(line: 417, column: 13, scope: !2359)
!2431 = !DILocation(line: 417, column: 45, scope: !2359)
!2432 = !DILocation(line: 417, column: 49, scope: !2359)
!2433 = !DILocation(line: 417, column: 43, scope: !2359)
!2434 = !DILocation(line: 417, column: 11, scope: !2359)
!2435 = !DILocation(line: 419, column: 9, scope: !2359)
!2436 = !DILocation(line: 419, column: 13, scope: !2359)
!2437 = !DILocation(line: 419, column: 7, scope: !2359)
!2438 = !DILocation(line: 420, column: 9, scope: !2359)
!2439 = !DILocation(line: 420, column: 7, scope: !2359)
!2440 = !DILocation(line: 421, column: 6, scope: !2359)
!2441 = !DILocation(line: 421, column: 10, scope: !2359)
!2442 = !DILocation(line: 421, column: 4, scope: !2359)
!2443 = !DILocation(line: 422, column: 2, scope: !2359)
!2444 = !DILocation(line: 422, column: 10, scope: !2359)
!2445 = !DILocation(line: 423, column: 14, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 422, column: 14)
!2447 = !DILocation(line: 423, column: 24, scope: !2446)
!2448 = !DILocation(line: 423, column: 22, scope: !2446)
!2449 = !DILocation(line: 423, column: 34, scope: !2446)
!2450 = !DILocation(line: 423, column: 32, scope: !2446)
!2451 = !DILocation(line: 423, column: 3, scope: !2446)
!2452 = !DILocation(line: 423, column: 11, scope: !2446)
!2453 = !DILocation(line: 424, column: 14, scope: !2446)
!2454 = !DILocation(line: 424, column: 24, scope: !2446)
!2455 = !DILocation(line: 424, column: 22, scope: !2446)
!2456 = !DILocation(line: 424, column: 34, scope: !2446)
!2457 = !DILocation(line: 424, column: 32, scope: !2446)
!2458 = !DILocation(line: 424, column: 3, scope: !2446)
!2459 = !DILocation(line: 424, column: 11, scope: !2446)
!2460 = !DILocation(line: 425, column: 14, scope: !2446)
!2461 = !DILocation(line: 425, column: 24, scope: !2446)
!2462 = !DILocation(line: 425, column: 22, scope: !2446)
!2463 = !DILocation(line: 425, column: 34, scope: !2446)
!2464 = !DILocation(line: 425, column: 32, scope: !2446)
!2465 = !DILocation(line: 425, column: 3, scope: !2446)
!2466 = !DILocation(line: 425, column: 11, scope: !2446)
!2467 = !DILocation(line: 427, column: 8, scope: !2446)
!2468 = !DILocation(line: 428, column: 8, scope: !2446)
!2469 = distinct !{!2469, !2443, !2470}
!2470 = !DILocation(line: 429, column: 2, scope: !2359)
!2471 = !DILocation(line: 431, column: 9, scope: !2359)
!2472 = !DILocation(line: 431, column: 2, scope: !2359)
!2473 = distinct !DISubprogram(name: "BKE_mball_is_basis", scope: !3, file: !3, line: 451, type: !2474, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!629, !1974}
!2476 = !DILocalVariable(name: "ob", arg: 1, scope: !2473, file: !3, line: 451, type: !1974)
!2477 = !DILocation(line: 451, column: 33, scope: !2473)
!2478 = !DILocalVariable(name: "len", scope: !2473, file: !3, line: 454, type: !2142)
!2479 = !DILocation(line: 454, column: 12, scope: !2473)
!2480 = !DILocation(line: 454, column: 25, scope: !2473)
!2481 = !DILocation(line: 454, column: 29, scope: !2473)
!2482 = !DILocation(line: 454, column: 32, scope: !2473)
!2483 = !DILocation(line: 454, column: 18, scope: !2473)
!2484 = !DILocation(line: 455, column: 11, scope: !2473)
!2485 = !DILocation(line: 455, column: 10, scope: !2473)
!2486 = !DILocation(line: 455, column: 9, scope: !2473)
!2487 = !DILocation(line: 455, column: 2, scope: !2473)
!2488 = distinct !DISubprogram(name: "BKE_mball_is_basis_for", scope: !3, file: !3, line: 459, type: !2489, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!629, !1974, !1974}
!2491 = !DILocalVariable(name: "ob1", arg: 1, scope: !2488, file: !3, line: 459, type: !1974)
!2492 = !DILocation(line: 459, column: 37, scope: !2488)
!2493 = !DILocalVariable(name: "ob2", arg: 2, scope: !2488, file: !3, line: 459, type: !1974)
!2494 = !DILocation(line: 459, column: 50, scope: !2488)
!2495 = !DILocalVariable(name: "basis1nr", scope: !2488, file: !3, line: 461, type: !78)
!2496 = !DILocation(line: 461, column: 6, scope: !2488)
!2497 = !DILocalVariable(name: "basis2nr", scope: !2488, file: !3, line: 461, type: !78)
!2498 = !DILocation(line: 461, column: 16, scope: !2488)
!2499 = !DILocalVariable(name: "basis1name", scope: !2488, file: !3, line: 462, type: !72)
!2500 = !DILocation(line: 462, column: 7, scope: !2488)
!2501 = !DILocalVariable(name: "basis2name", scope: !2488, file: !3, line: 462, type: !72)
!2502 = !DILocation(line: 462, column: 32, scope: !2488)
!2503 = !DILocation(line: 464, column: 21, scope: !2488)
!2504 = !DILocation(line: 464, column: 44, scope: !2488)
!2505 = !DILocation(line: 464, column: 49, scope: !2488)
!2506 = !DILocation(line: 464, column: 52, scope: !2488)
!2507 = !DILocation(line: 464, column: 57, scope: !2488)
!2508 = !DILocation(line: 464, column: 2, scope: !2488)
!2509 = !DILocation(line: 465, column: 21, scope: !2488)
!2510 = !DILocation(line: 465, column: 44, scope: !2488)
!2511 = !DILocation(line: 465, column: 49, scope: !2488)
!2512 = !DILocation(line: 465, column: 52, scope: !2488)
!2513 = !DILocation(line: 465, column: 57, scope: !2488)
!2514 = !DILocation(line: 465, column: 2, scope: !2488)
!2515 = !DILocation(line: 467, column: 14, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 467, column: 6)
!2517 = !DILocation(line: 467, column: 26, scope: !2516)
!2518 = !DILocation(line: 467, column: 7, scope: !2516)
!2519 = !DILocation(line: 467, column: 6, scope: !2488)
!2520 = !DILocation(line: 468, column: 29, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 467, column: 39)
!2522 = !DILocation(line: 468, column: 10, scope: !2521)
!2523 = !DILocation(line: 468, column: 3, scope: !2521)
!2524 = !DILocation(line: 471, column: 3, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 470, column: 7)
!2526 = !DILocation(line: 473, column: 1, scope: !2488)
!2527 = distinct !DISubprogram(name: "BKE_mball_properties_copy", scope: !3, file: !3, line: 481, type: !2528, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{null, !2530, !1974}
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !568, line: 1299, baseType: !567)
!2532 = !DILocalVariable(name: "scene", arg: 1, scope: !2527, file: !3, line: 481, type: !2530)
!2533 = !DILocation(line: 481, column: 39, scope: !2527)
!2534 = !DILocalVariable(name: "active_object", arg: 2, scope: !2527, file: !3, line: 481, type: !1974)
!2535 = !DILocation(line: 481, column: 54, scope: !2527)
!2536 = !DILocalVariable(name: "sce_iter", scope: !2527, file: !3, line: 483, type: !2530)
!2537 = !DILocation(line: 483, column: 9, scope: !2527)
!2538 = !DILocation(line: 483, column: 20, scope: !2527)
!2539 = !DILocalVariable(name: "base", scope: !2527, file: !3, line: 484, type: !2540)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !568, line: 75, baseType: !580)
!2542 = !DILocation(line: 484, column: 8, scope: !2527)
!2543 = !DILocalVariable(name: "ob", scope: !2527, file: !3, line: 485, type: !1974)
!2544 = !DILocation(line: 485, column: 10, scope: !2527)
!2545 = !DILocalVariable(name: "active_mball", scope: !2527, file: !3, line: 486, type: !114)
!2546 = !DILocation(line: 486, column: 12, scope: !2527)
!2547 = !DILocation(line: 486, column: 39, scope: !2527)
!2548 = !DILocation(line: 486, column: 54, scope: !2527)
!2549 = !DILocation(line: 486, column: 27, scope: !2527)
!2550 = !DILocalVariable(name: "basisnr", scope: !2527, file: !3, line: 487, type: !78)
!2551 = !DILocation(line: 487, column: 6, scope: !2527)
!2552 = !DILocalVariable(name: "obnr", scope: !2527, file: !3, line: 487, type: !78)
!2553 = !DILocation(line: 487, column: 15, scope: !2527)
!2554 = !DILocalVariable(name: "basisname", scope: !2527, file: !3, line: 488, type: !72)
!2555 = !DILocation(line: 488, column: 7, scope: !2527)
!2556 = !DILocalVariable(name: "obname", scope: !2527, file: !3, line: 488, type: !72)
!2557 = !DILocation(line: 488, column: 31, scope: !2527)
!2558 = !DILocalVariable(name: "iter", scope: !2527, file: !3, line: 489, type: !2559)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "SceneBaseIter", file: !2560, line: 90, baseType: !2561)
!2560 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_scene.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SceneBaseIter", file: !2560, line: 84, size: 768, elements: !2562)
!2562 = !{!2563, !2565, !2583, !2584, !2585}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !2561, file: !2560, line: 85, baseType: !2564, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "dupob", scope: !2561, file: !2560, line: 86, baseType: !2566, size: 64, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DupliObject", file: !22, line: 316, size: 1216, elements: !2568)
!2568 = !{!2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2580}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2567, file: !22, line: 317, baseType: !2566, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2567, file: !22, line: 317, baseType: !2566, size: 64, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2567, file: !22, line: 318, baseType: !307, size: 64, offset: 128)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2567, file: !22, line: 319, baseType: !440, size: 512, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2567, file: !22, line: 320, baseType: !172, size: 96, offset: 704)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2567, file: !22, line: 320, baseType: !556, size: 64, offset: 800)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2567, file: !22, line: 322, baseType: !76, size: 16, offset: 864)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "no_draw", scope: !2567, file: !22, line: 323, baseType: !63, size: 8, offset: 880)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "animated", scope: !2567, file: !22, line: 323, baseType: !63, size: 8, offset: 888)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "persistent_id", scope: !2567, file: !22, line: 327, baseType: !2579, size: 256, offset: 896)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 256, elements: !712)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "particle_system", scope: !2567, file: !22, line: 330, baseType: !2581, size: 64, offset: 1152)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !22, line: 55, flags: DIFlagFwdDecl)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !2561, file: !2560, line: 87, baseType: !440, size: 512, offset: 128)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_refob", scope: !2561, file: !2560, line: 88, baseType: !307, size: 64, offset: 640)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !2561, file: !2560, line: 89, baseType: !78, size: 32, offset: 704)
!2586 = !DILocation(line: 489, column: 16, scope: !2527)
!2587 = !DILocalVariable(name: "eval_ctx", scope: !2527, file: !3, line: 490, type: !2588)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "EvaluationContext", file: !36, line: 60, baseType: !1874)
!2590 = !DILocation(line: 490, column: 21, scope: !2527)
!2591 = !DILocation(line: 490, column: 34, scope: !2527)
!2592 = !DILocation(line: 490, column: 40, scope: !2527)
!2593 = !DILocation(line: 492, column: 21, scope: !2527)
!2594 = !DILocation(line: 492, column: 42, scope: !2527)
!2595 = !DILocation(line: 492, column: 57, scope: !2527)
!2596 = !DILocation(line: 492, column: 60, scope: !2527)
!2597 = !DILocation(line: 492, column: 65, scope: !2527)
!2598 = !DILocation(line: 492, column: 2, scope: !2527)
!2599 = !DILocation(line: 494, column: 27, scope: !2527)
!2600 = !DILocation(line: 494, column: 2, scope: !2527)
!2601 = !DILocation(line: 495, column: 2, scope: !2527)
!2602 = !DILocation(line: 495, column: 34, scope: !2527)
!2603 = !DILocation(line: 495, column: 9, scope: !2527)
!2604 = !DILocation(line: 496, column: 7, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2606, file: !3, line: 496, column: 7)
!2606 = distinct !DILexicalBlock(scope: !2527, file: !3, line: 495, column: 78)
!2607 = !DILocation(line: 496, column: 11, scope: !2605)
!2608 = !DILocation(line: 496, column: 16, scope: !2605)
!2609 = !DILocation(line: 496, column: 7, scope: !2606)
!2610 = !DILocation(line: 497, column: 8, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 497, column: 8)
!2612 = distinct !DILexicalBlock(scope: !2605, file: !3, line: 496, column: 29)
!2613 = !DILocation(line: 497, column: 14, scope: !2611)
!2614 = !DILocation(line: 497, column: 11, scope: !2611)
!2615 = !DILocation(line: 497, column: 8, scope: !2612)
!2616 = !DILocation(line: 498, column: 24, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 497, column: 29)
!2618 = !DILocation(line: 498, column: 39, scope: !2617)
!2619 = !DILocation(line: 498, column: 43, scope: !2617)
!2620 = !DILocation(line: 498, column: 46, scope: !2617)
!2621 = !DILocation(line: 498, column: 51, scope: !2617)
!2622 = !DILocation(line: 498, column: 5, scope: !2617)
!2623 = !DILocation(line: 502, column: 16, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 502, column: 9)
!2625 = !DILocation(line: 502, column: 24, scope: !2624)
!2626 = !DILocation(line: 502, column: 9, scope: !2624)
!2627 = !DILocation(line: 502, column: 35, scope: !2624)
!2628 = !DILocation(line: 502, column: 9, scope: !2617)
!2629 = !DILocalVariable(name: "mb", scope: !2630, file: !3, line: 503, type: !114)
!2630 = distinct !DILexicalBlock(scope: !2624, file: !3, line: 502, column: 41)
!2631 = !DILocation(line: 503, column: 16, scope: !2630)
!2632 = !DILocation(line: 503, column: 21, scope: !2630)
!2633 = !DILocation(line: 503, column: 25, scope: !2630)
!2634 = !DILocation(line: 506, column: 21, scope: !2630)
!2635 = !DILocation(line: 506, column: 35, scope: !2630)
!2636 = !DILocation(line: 506, column: 6, scope: !2630)
!2637 = !DILocation(line: 506, column: 10, scope: !2630)
!2638 = !DILocation(line: 506, column: 19, scope: !2630)
!2639 = !DILocation(line: 507, column: 23, scope: !2630)
!2640 = !DILocation(line: 507, column: 37, scope: !2630)
!2641 = !DILocation(line: 507, column: 6, scope: !2630)
!2642 = !DILocation(line: 507, column: 10, scope: !2630)
!2643 = !DILocation(line: 507, column: 21, scope: !2630)
!2644 = !DILocation(line: 508, column: 19, scope: !2630)
!2645 = !DILocation(line: 508, column: 33, scope: !2630)
!2646 = !DILocation(line: 508, column: 6, scope: !2630)
!2647 = !DILocation(line: 508, column: 10, scope: !2630)
!2648 = !DILocation(line: 508, column: 17, scope: !2630)
!2649 = !DILocation(line: 509, column: 17, scope: !2630)
!2650 = !DILocation(line: 509, column: 31, scope: !2630)
!2651 = !DILocation(line: 509, column: 6, scope: !2630)
!2652 = !DILocation(line: 509, column: 10, scope: !2630)
!2653 = !DILocation(line: 509, column: 15, scope: !2630)
!2654 = !DILocation(line: 510, column: 5, scope: !2630)
!2655 = !DILocation(line: 511, column: 4, scope: !2617)
!2656 = !DILocation(line: 512, column: 3, scope: !2612)
!2657 = distinct !{!2657, !2601, !2658}
!2658 = !DILocation(line: 513, column: 2, scope: !2527)
!2659 = !DILocation(line: 514, column: 1, scope: !2527)
!2660 = distinct !DISubprogram(name: "BKE_mball_basis_find", scope: !3, file: !3, line: 525, type: !2661, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{!307, !2530, !1974}
!2663 = !DILocalVariable(name: "scene", arg: 1, scope: !2660, file: !3, line: 525, type: !2530)
!2664 = !DILocation(line: 525, column: 37, scope: !2660)
!2665 = !DILocalVariable(name: "basis", arg: 2, scope: !2660, file: !3, line: 525, type: !1974)
!2666 = !DILocation(line: 525, column: 52, scope: !2660)
!2667 = !DILocalVariable(name: "sce_iter", scope: !2660, file: !3, line: 527, type: !2530)
!2668 = !DILocation(line: 527, column: 9, scope: !2660)
!2669 = !DILocation(line: 527, column: 20, scope: !2660)
!2670 = !DILocalVariable(name: "base", scope: !2660, file: !3, line: 528, type: !2540)
!2671 = !DILocation(line: 528, column: 8, scope: !2660)
!2672 = !DILocalVariable(name: "ob", scope: !2660, file: !3, line: 529, type: !1974)
!2673 = !DILocation(line: 529, column: 10, scope: !2660)
!2674 = !DILocalVariable(name: "bob", scope: !2660, file: !3, line: 529, type: !1974)
!2675 = !DILocation(line: 529, column: 15, scope: !2660)
!2676 = !DILocation(line: 529, column: 21, scope: !2660)
!2677 = !DILocalVariable(name: "basisnr", scope: !2660, file: !3, line: 530, type: !78)
!2678 = !DILocation(line: 530, column: 6, scope: !2660)
!2679 = !DILocalVariable(name: "obnr", scope: !2660, file: !3, line: 530, type: !78)
!2680 = !DILocation(line: 530, column: 15, scope: !2660)
!2681 = !DILocalVariable(name: "basisname", scope: !2660, file: !3, line: 531, type: !72)
!2682 = !DILocation(line: 531, column: 7, scope: !2660)
!2683 = !DILocalVariable(name: "obname", scope: !2660, file: !3, line: 531, type: !72)
!2684 = !DILocation(line: 531, column: 31, scope: !2660)
!2685 = !DILocalVariable(name: "iter", scope: !2660, file: !3, line: 532, type: !2559)
!2686 = !DILocation(line: 532, column: 16, scope: !2660)
!2687 = !DILocalVariable(name: "eval_ctx", scope: !2660, file: !3, line: 533, type: !2588)
!2688 = !DILocation(line: 533, column: 21, scope: !2660)
!2689 = !DILocation(line: 533, column: 34, scope: !2660)
!2690 = !DILocation(line: 533, column: 40, scope: !2660)
!2691 = !DILocation(line: 535, column: 21, scope: !2660)
!2692 = !DILocation(line: 535, column: 42, scope: !2660)
!2693 = !DILocation(line: 535, column: 49, scope: !2660)
!2694 = !DILocation(line: 535, column: 52, scope: !2660)
!2695 = !DILocation(line: 535, column: 57, scope: !2660)
!2696 = !DILocation(line: 535, column: 2, scope: !2660)
!2697 = !DILocation(line: 537, column: 27, scope: !2660)
!2698 = !DILocation(line: 537, column: 2, scope: !2660)
!2699 = !DILocation(line: 538, column: 2, scope: !2660)
!2700 = !DILocation(line: 538, column: 34, scope: !2660)
!2701 = !DILocation(line: 538, column: 9, scope: !2660)
!2702 = !DILocation(line: 539, column: 8, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 539, column: 7)
!2704 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 538, column: 78)
!2705 = !DILocation(line: 539, column: 12, scope: !2703)
!2706 = !DILocation(line: 539, column: 17, scope: !2703)
!2707 = !DILocation(line: 539, column: 30, scope: !2703)
!2708 = !DILocation(line: 539, column: 35, scope: !2703)
!2709 = !DILocation(line: 539, column: 41, scope: !2703)
!2710 = !DILocation(line: 539, column: 46, scope: !2703)
!2711 = !DILocation(line: 539, column: 7, scope: !2704)
!2712 = !DILocation(line: 540, column: 8, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 540, column: 8)
!2714 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 539, column: 63)
!2715 = !DILocation(line: 540, column: 14, scope: !2713)
!2716 = !DILocation(line: 540, column: 11, scope: !2713)
!2717 = !DILocation(line: 540, column: 8, scope: !2714)
!2718 = !DILocation(line: 541, column: 24, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 540, column: 19)
!2720 = !DILocation(line: 541, column: 39, scope: !2719)
!2721 = !DILocation(line: 541, column: 43, scope: !2719)
!2722 = !DILocation(line: 541, column: 46, scope: !2719)
!2723 = !DILocation(line: 541, column: 51, scope: !2719)
!2724 = !DILocation(line: 541, column: 5, scope: !2719)
!2725 = !DILocation(line: 544, column: 16, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 544, column: 9)
!2727 = !DILocation(line: 544, column: 24, scope: !2726)
!2728 = !DILocation(line: 544, column: 9, scope: !2726)
!2729 = !DILocation(line: 544, column: 35, scope: !2726)
!2730 = !DILocation(line: 544, column: 9, scope: !2719)
!2731 = !DILocation(line: 545, column: 10, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2733, file: !3, line: 545, column: 10)
!2733 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 544, column: 41)
!2734 = !DILocation(line: 545, column: 17, scope: !2732)
!2735 = !DILocation(line: 545, column: 15, scope: !2732)
!2736 = !DILocation(line: 545, column: 10, scope: !2733)
!2737 = !DILocation(line: 546, column: 15, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2732, file: !3, line: 545, column: 26)
!2739 = !DILocation(line: 546, column: 13, scope: !2738)
!2740 = !DILocation(line: 547, column: 17, scope: !2738)
!2741 = !DILocation(line: 547, column: 15, scope: !2738)
!2742 = !DILocation(line: 548, column: 6, scope: !2738)
!2743 = !DILocation(line: 549, column: 5, scope: !2733)
!2744 = !DILocation(line: 550, column: 4, scope: !2719)
!2745 = !DILocation(line: 551, column: 3, scope: !2714)
!2746 = distinct !{!2746, !2699, !2747}
!2747 = !DILocation(line: 552, column: 2, scope: !2660)
!2748 = !DILocation(line: 554, column: 9, scope: !2660)
!2749 = !DILocation(line: 554, column: 2, scope: !2660)
!2750 = distinct !DISubprogram(name: "BKE_mball_cubeTable_free", scope: !3, file: !3, line: 1145, type: !1717, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2751 = !DILocalVariable(name: "i", scope: !2750, file: !3, line: 1147, type: !78)
!2752 = !DILocation(line: 1147, column: 6, scope: !2750)
!2753 = !DILocalVariable(name: "lists", scope: !2750, file: !3, line: 1148, type: !1645)
!2754 = !DILocation(line: 1148, column: 12, scope: !2750)
!2755 = !DILocalVariable(name: "nlists", scope: !2750, file: !3, line: 1148, type: !1645)
!2756 = !DILocation(line: 1148, column: 20, scope: !2750)
!2757 = !DILocalVariable(name: "ints", scope: !2750, file: !3, line: 1149, type: !1650)
!2758 = !DILocation(line: 1149, column: 11, scope: !2750)
!2759 = !DILocalVariable(name: "nints", scope: !2750, file: !3, line: 1149, type: !1650)
!2760 = !DILocation(line: 1149, column: 18, scope: !2750)
!2761 = !DILocation(line: 1151, column: 9, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 1151, column: 2)
!2763 = !DILocation(line: 1151, column: 7, scope: !2762)
!2764 = !DILocation(line: 1151, column: 14, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 1151, column: 2)
!2766 = !DILocation(line: 1151, column: 16, scope: !2765)
!2767 = !DILocation(line: 1151, column: 2, scope: !2762)
!2768 = !DILocation(line: 1152, column: 21, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 1151, column: 28)
!2770 = !DILocation(line: 1152, column: 11, scope: !2769)
!2771 = !DILocation(line: 1152, column: 9, scope: !2769)
!2772 = !DILocation(line: 1153, column: 3, scope: !2769)
!2773 = !DILocation(line: 1153, column: 10, scope: !2769)
!2774 = !DILocation(line: 1154, column: 13, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 1153, column: 17)
!2776 = !DILocation(line: 1154, column: 20, scope: !2775)
!2777 = !DILocation(line: 1154, column: 11, scope: !2775)
!2778 = !DILocation(line: 1156, column: 11, scope: !2775)
!2779 = !DILocation(line: 1156, column: 18, scope: !2775)
!2780 = !DILocation(line: 1156, column: 9, scope: !2775)
!2781 = !DILocation(line: 1157, column: 4, scope: !2775)
!2782 = !DILocation(line: 1157, column: 11, scope: !2775)
!2783 = !DILocation(line: 1158, column: 13, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 1157, column: 17)
!2785 = !DILocation(line: 1158, column: 19, scope: !2784)
!2786 = !DILocation(line: 1158, column: 11, scope: !2784)
!2787 = !DILocation(line: 1159, column: 5, scope: !2784)
!2788 = !DILocation(line: 1159, column: 15, scope: !2784)
!2789 = !DILocation(line: 1160, column: 12, scope: !2784)
!2790 = !DILocation(line: 1160, column: 10, scope: !2784)
!2791 = distinct !{!2791, !2781, !2792}
!2792 = !DILocation(line: 1161, column: 4, scope: !2775)
!2793 = !DILocation(line: 1163, column: 4, scope: !2775)
!2794 = !DILocation(line: 1163, column: 14, scope: !2775)
!2795 = !DILocation(line: 1164, column: 12, scope: !2775)
!2796 = !DILocation(line: 1164, column: 10, scope: !2775)
!2797 = distinct !{!2797, !2772, !2798}
!2798 = !DILocation(line: 1165, column: 3, scope: !2769)
!2799 = !DILocation(line: 1166, column: 13, scope: !2769)
!2800 = !DILocation(line: 1166, column: 3, scope: !2769)
!2801 = !DILocation(line: 1166, column: 16, scope: !2769)
!2802 = !DILocation(line: 1167, column: 2, scope: !2769)
!2803 = !DILocation(line: 1151, column: 24, scope: !2765)
!2804 = !DILocation(line: 1151, column: 2, scope: !2765)
!2805 = distinct !{!2805, !2767, !2806}
!2806 = !DILocation(line: 1167, column: 2, scope: !2762)
!2807 = !DILocation(line: 1168, column: 1, scope: !2750)
!2808 = distinct !DISubprogram(name: "BKE_mball_polygonize", scope: !3, file: !3, line: 2258, type: !2809, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{null, !2588, !2530, !1974, !127}
!2811 = !DILocalVariable(name: "eval_ctx", arg: 1, scope: !2808, file: !3, line: 2258, type: !2588)
!2812 = !DILocation(line: 2258, column: 46, scope: !2808)
!2813 = !DILocalVariable(name: "scene", arg: 2, scope: !2808, file: !3, line: 2258, type: !2530)
!2814 = !DILocation(line: 2258, column: 63, scope: !2808)
!2815 = !DILocalVariable(name: "ob", arg: 3, scope: !2808, file: !3, line: 2258, type: !1974)
!2816 = !DILocation(line: 2258, column: 78, scope: !2808)
!2817 = !DILocalVariable(name: "dispbase", arg: 4, scope: !2808, file: !3, line: 2258, type: !127)
!2818 = !DILocation(line: 2258, column: 92, scope: !2808)
!2819 = !DILocalVariable(name: "mb", scope: !2808, file: !3, line: 2260, type: !114)
!2820 = !DILocation(line: 2260, column: 12, scope: !2808)
!2821 = !DILocalVariable(name: "dl", scope: !2808, file: !3, line: 2261, type: !2243)
!2822 = !DILocation(line: 2261, column: 12, scope: !2808)
!2823 = !DILocalVariable(name: "a", scope: !2808, file: !3, line: 2262, type: !78)
!2824 = !DILocation(line: 2262, column: 6, scope: !2808)
!2825 = !DILocalVariable(name: "nr_cubes", scope: !2808, file: !3, line: 2262, type: !78)
!2826 = !DILocation(line: 2262, column: 9, scope: !2808)
!2827 = !DILocalVariable(name: "co", scope: !2808, file: !3, line: 2263, type: !1461)
!2828 = !DILocation(line: 2263, column: 9, scope: !2808)
!2829 = !DILocalVariable(name: "no", scope: !2808, file: !3, line: 2263, type: !1461)
!2830 = !DILocation(line: 2263, column: 14, scope: !2808)
!2831 = !DILocalVariable(name: "totsize", scope: !2808, file: !3, line: 2263, type: !141)
!2832 = !DILocation(line: 2263, column: 18, scope: !2808)
!2833 = !DILocalVariable(name: "width", scope: !2808, file: !3, line: 2263, type: !141)
!2834 = !DILocation(line: 2263, column: 27, scope: !2808)
!2835 = !DILocalVariable(name: "process", scope: !2808, file: !3, line: 2264, type: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "PROCESS", file: !3, line: 172, baseType: !2837)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "process", file: !3, line: 145, size: 1152, elements: !2838)
!2838 = !{!2839, !2840, !2841, !2843, !2871, !2876, !2877, !2878, !2879, !2880, !2887, !2889, !2891, !2893, !2894, !2895, !2896, !2897, !2904}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "thresh", scope: !2837, file: !3, line: 147, baseType: !141, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !2837, file: !3, line: 148, baseType: !78, size: 32, offset: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "mainb", scope: !2837, file: !3, line: 149, baseType: !2842, size: 64, offset: 64)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "metaball_tree", scope: !2837, file: !3, line: 150, baseType: !2844, size: 64, offset: 128)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "octal_tree", file: !3, line: 138, baseType: !2846)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "octal_tree", file: !3, line: 134, size: 192, elements: !2847)
!2847 = !{!2848, !2868, !2869, !2870}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2846, file: !3, line: 135, baseType: !2849, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "octal_node", file: !3, line: 123, size: 1088, elements: !2851)
!2851 = !{!2852, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2850, file: !3, line: 124, baseType: !2853, size: 512)
!2853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2849, size: 512, elements: !712)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2850, file: !3, line: 125, baseType: !2849, size: 64, offset: 512)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !2850, file: !3, line: 126, baseType: !105, size: 128, offset: 576)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "x_min", scope: !2850, file: !3, line: 127, baseType: !141, size: 32, offset: 704)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "y_min", scope: !2850, file: !3, line: 127, baseType: !141, size: 32, offset: 736)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "z_min", scope: !2850, file: !3, line: 127, baseType: !141, size: 32, offset: 768)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "x_max", scope: !2850, file: !3, line: 128, baseType: !141, size: 32, offset: 800)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "y_max", scope: !2850, file: !3, line: 128, baseType: !141, size: 32, offset: 832)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "z_max", scope: !2850, file: !3, line: 128, baseType: !141, size: 32, offset: 864)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2850, file: !3, line: 129, baseType: !141, size: 32, offset: 896)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2850, file: !3, line: 129, baseType: !141, size: 32, offset: 928)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !2850, file: !3, line: 129, baseType: !141, size: 32, offset: 960)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2850, file: !3, line: 130, baseType: !78, size: 32, offset: 992)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "neg", scope: !2850, file: !3, line: 130, baseType: !78, size: 32, offset: 1024)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2850, file: !3, line: 131, baseType: !78, size: 32, offset: 1056)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2846, file: !3, line: 136, baseType: !78, size: 32, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "neg", scope: !2846, file: !3, line: 136, baseType: !78, size: 32, offset: 96)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2846, file: !3, line: 137, baseType: !76, size: 16, offset: 128)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2837, file: !3, line: 156, baseType: !2872, size: 64, offset: 192)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DISubroutineType(types: !2874)
!2874 = !{!141, !2875, !141, !141, !141}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2837, file: !3, line: 157, baseType: !141, size: 32, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2837, file: !3, line: 157, baseType: !141, size: 32, offset: 288)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !2837, file: !3, line: 158, baseType: !78, size: 32, offset: 320)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "cubes", scope: !2837, file: !3, line: 159, baseType: !1659, size: 64, offset: 384)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "vertices", scope: !2837, file: !3, line: 160, baseType: !2881, size: 128, offset: 448)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "VERTICES", file: !3, line: 78, baseType: !2882)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vertices", file: !3, line: 75, size: 128, elements: !2883)
!2883 = !{!2884, !2885, !2886}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2882, file: !3, line: 76, baseType: !78, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2882, file: !3, line: 76, baseType: !78, size: 32, offset: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2882, file: !3, line: 77, baseType: !1694, size: 64, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "centers", scope: !2837, file: !3, line: 161, baseType: !2888, size: 64, offset: 576)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2837, file: !3, line: 162, baseType: !2890, size: 64, offset: 640)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !2837, file: !3, line: 163, baseType: !2892, size: 64, offset: 704)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !2837, file: !3, line: 166, baseType: !2260, size: 64, offset: 768)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !2837, file: !3, line: 167, baseType: !78, size: 32, offset: 832)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !2837, file: !3, line: 167, baseType: !78, size: 32, offset: 864)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "pgn_offset", scope: !2837, file: !3, line: 169, baseType: !78, size: 32, offset: 896)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "pgn_current", scope: !2837, file: !3, line: 170, baseType: !2898, size: 64, offset: 960)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgn_elements", file: !3, line: 140, size: 192, elements: !2900)
!2900 = !{!2901, !2902, !2903}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2899, file: !3, line: 141, baseType: !2898, size: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2899, file: !3, line: 141, baseType: !2898, size: 64, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2899, file: !3, line: 142, baseType: !422, size: 64, offset: 128)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "pgn_list", scope: !2837, file: !3, line: 171, baseType: !103, size: 128, offset: 1024)
!2905 = !DILocation(line: 2264, column: 10, scope: !2808)
!2906 = !DILocation(line: 2266, column: 7, scope: !2808)
!2907 = !DILocation(line: 2266, column: 11, scope: !2808)
!2908 = !DILocation(line: 2266, column: 5, scope: !2808)
!2909 = !DILocation(line: 2268, column: 14, scope: !2808)
!2910 = !DILocation(line: 2268, column: 34, scope: !2808)
!2911 = !DILocation(line: 2268, column: 41, scope: !2808)
!2912 = !DILocation(line: 2268, column: 2, scope: !2808)
!2913 = !DILocation(line: 2270, column: 14, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2270, column: 6)
!2915 = !DILocation(line: 2270, column: 22, scope: !2914)
!2916 = !DILocation(line: 2270, column: 6, scope: !2808)
!2917 = !DILocation(line: 2270, column: 28, scope: !2914)
!2918 = !DILocation(line: 2271, column: 7, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2271, column: 6)
!2920 = !DILocation(line: 2271, column: 17, scope: !2919)
!2921 = !DILocation(line: 2271, column: 22, scope: !2919)
!2922 = !DILocation(line: 2271, column: 42, scope: !2919)
!2923 = !DILocation(line: 2271, column: 46, scope: !2919)
!2924 = !DILocation(line: 2271, column: 50, scope: !2919)
!2925 = !DILocation(line: 2271, column: 55, scope: !2919)
!2926 = !DILocation(line: 2271, column: 6, scope: !2808)
!2927 = !DILocation(line: 2271, column: 76, scope: !2919)
!2928 = !DILocation(line: 2272, column: 9, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2272, column: 6)
!2930 = !DILocation(line: 2272, column: 7, scope: !2929)
!2931 = !DILocation(line: 2272, column: 16, scope: !2929)
!2932 = !DILocation(line: 2272, column: 56, scope: !2929)
!2933 = !DILocation(line: 2272, column: 59, scope: !2929)
!2934 = !DILocation(line: 2272, column: 63, scope: !2929)
!2935 = !DILocation(line: 2272, column: 68, scope: !2929)
!2936 = !DILocation(line: 2272, column: 6, scope: !2808)
!2937 = !DILocation(line: 2272, column: 87, scope: !2929)
!2938 = !DILocation(line: 2274, column: 19, scope: !2808)
!2939 = !DILocation(line: 2274, column: 23, scope: !2808)
!2940 = !DILocation(line: 2274, column: 10, scope: !2808)
!2941 = !DILocation(line: 2274, column: 17, scope: !2808)
!2942 = !DILocation(line: 2277, column: 18, scope: !2808)
!2943 = !DILocation(line: 2277, column: 55, scope: !2808)
!2944 = !DILocation(line: 2277, column: 47, scope: !2808)
!2945 = !DILocation(line: 2277, column: 45, scope: !2808)
!2946 = !DILocation(line: 2277, column: 10, scope: !2808)
!2947 = !DILocation(line: 2277, column: 16, scope: !2808)
!2948 = !DILocation(line: 2280, column: 22, scope: !2808)
!2949 = !DILocation(line: 2280, column: 42, scope: !2808)
!2950 = !DILocation(line: 2280, column: 49, scope: !2808)
!2951 = !DILocation(line: 2280, column: 12, scope: !2808)
!2952 = !DILocation(line: 2280, column: 10, scope: !2808)
!2953 = !DILocation(line: 2283, column: 15, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2283, column: 6)
!2955 = !DILocation(line: 2283, column: 23, scope: !2954)
!2956 = !DILocation(line: 2283, column: 31, scope: !2954)
!2957 = !DILocation(line: 2283, column: 43, scope: !2954)
!2958 = !DILocation(line: 2283, column: 51, scope: !2954)
!2959 = !DILocation(line: 2283, column: 6, scope: !2808)
!2960 = !DILocation(line: 2283, column: 61, scope: !2954)
!2961 = !DILocation(line: 2284, column: 15, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2284, column: 6)
!2963 = !DILocation(line: 2284, column: 23, scope: !2962)
!2964 = !DILocation(line: 2284, column: 31, scope: !2962)
!2965 = !DILocation(line: 2284, column: 43, scope: !2962)
!2966 = !DILocation(line: 2284, column: 51, scope: !2962)
!2967 = !DILocation(line: 2284, column: 6, scope: !2808)
!2968 = !DILocation(line: 2284, column: 61, scope: !2962)
!2969 = !DILocation(line: 2285, column: 15, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2285, column: 6)
!2971 = !DILocation(line: 2285, column: 23, scope: !2970)
!2972 = !DILocation(line: 2285, column: 31, scope: !2970)
!2973 = !DILocation(line: 2285, column: 43, scope: !2970)
!2974 = !DILocation(line: 2285, column: 51, scope: !2970)
!2975 = !DILocation(line: 2285, column: 6, scope: !2808)
!2976 = !DILocation(line: 2285, column: 61, scope: !2970)
!2977 = !DILocation(line: 2286, column: 15, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2286, column: 6)
!2979 = !DILocation(line: 2286, column: 23, scope: !2978)
!2980 = !DILocation(line: 2286, column: 31, scope: !2978)
!2981 = !DILocation(line: 2286, column: 43, scope: !2978)
!2982 = !DILocation(line: 2286, column: 51, scope: !2978)
!2983 = !DILocation(line: 2286, column: 6, scope: !2808)
!2984 = !DILocation(line: 2286, column: 61, scope: !2978)
!2985 = !DILocation(line: 2287, column: 14, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2287, column: 6)
!2987 = !DILocation(line: 2287, column: 23, scope: !2986)
!2988 = !DILocation(line: 2287, column: 6, scope: !2808)
!2989 = !DILocation(line: 2287, column: 61, scope: !2986)
!2990 = !DILocation(line: 2291, column: 14, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2291, column: 6)
!2992 = !DILocation(line: 2291, column: 6, scope: !2991)
!2993 = !DILocation(line: 2291, column: 6, scope: !2808)
!2994 = !DILocation(line: 2292, column: 7, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 2292, column: 7)
!2996 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 2291, column: 29)
!2997 = !DILocation(line: 2292, column: 11, scope: !2995)
!2998 = !DILocation(line: 2292, column: 42, scope: !2995)
!2999 = !DILocation(line: 2292, column: 57, scope: !2995)
!3000 = !DILocation(line: 2292, column: 64, scope: !2995)
!3001 = !DILocation(line: 2292, column: 80, scope: !2995)
!3002 = !DILocation(line: 2292, column: 95, scope: !2995)
!3003 = !DILocation(line: 2292, column: 102, scope: !2995)
!3004 = !DILocation(line: 2292, column: 70, scope: !2995)
!3005 = !DILocation(line: 2292, column: 31, scope: !2995)
!3006 = !DILocation(line: 2292, column: 19, scope: !2995)
!3007 = !DILocation(line: 2292, column: 109, scope: !2995)
!3008 = !DILocation(line: 2293, column: 7, scope: !2995)
!3009 = !DILocation(line: 2293, column: 11, scope: !2995)
!3010 = !DILocation(line: 2293, column: 42, scope: !2995)
!3011 = !DILocation(line: 2293, column: 57, scope: !2995)
!3012 = !DILocation(line: 2293, column: 64, scope: !2995)
!3013 = !DILocation(line: 2293, column: 80, scope: !2995)
!3014 = !DILocation(line: 2293, column: 95, scope: !2995)
!3015 = !DILocation(line: 2293, column: 102, scope: !2995)
!3016 = !DILocation(line: 2293, column: 70, scope: !2995)
!3017 = !DILocation(line: 2293, column: 31, scope: !2995)
!3018 = !DILocation(line: 2293, column: 19, scope: !2995)
!3019 = !DILocation(line: 2293, column: 109, scope: !2995)
!3020 = !DILocation(line: 2294, column: 7, scope: !2995)
!3021 = !DILocation(line: 2294, column: 11, scope: !2995)
!3022 = !DILocation(line: 2294, column: 42, scope: !2995)
!3023 = !DILocation(line: 2294, column: 57, scope: !2995)
!3024 = !DILocation(line: 2294, column: 64, scope: !2995)
!3025 = !DILocation(line: 2294, column: 80, scope: !2995)
!3026 = !DILocation(line: 2294, column: 95, scope: !2995)
!3027 = !DILocation(line: 2294, column: 102, scope: !2995)
!3028 = !DILocation(line: 2294, column: 70, scope: !2995)
!3029 = !DILocation(line: 2294, column: 31, scope: !2995)
!3030 = !DILocation(line: 2294, column: 19, scope: !2995)
!3031 = !DILocation(line: 2292, column: 7, scope: !2996)
!3032 = !DILocation(line: 2296, column: 4, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 2295, column: 3)
!3034 = !DILocation(line: 2298, column: 4, scope: !3033)
!3035 = !DILocation(line: 2298, column: 22, scope: !3033)
!3036 = !DILocation(line: 2298, column: 14, scope: !3033)
!3037 = !DILocation(line: 2301, column: 37, scope: !3033)
!3038 = !DILocation(line: 2301, column: 52, scope: !3033)
!3039 = !DILocation(line: 2301, column: 4, scope: !3033)
!3040 = !DILocation(line: 2302, column: 4, scope: !3033)
!3041 = !DILocation(line: 2302, column: 22, scope: !3033)
!3042 = !DILocation(line: 2302, column: 14, scope: !3033)
!3043 = !DILocation(line: 2304, column: 4, scope: !3033)
!3044 = !DILocation(line: 2306, column: 2, scope: !2996)
!3045 = !DILocation(line: 2309, column: 6, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2309, column: 6)
!3047 = !DILocation(line: 2309, column: 16, scope: !3046)
!3048 = !DILocation(line: 2309, column: 21, scope: !3046)
!3049 = !DILocation(line: 2309, column: 6, scope: !2808)
!3050 = !DILocation(line: 2310, column: 11, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 2309, column: 41)
!3052 = !DILocation(line: 2310, column: 15, scope: !3051)
!3053 = !DILocation(line: 2310, column: 9, scope: !3051)
!3054 = !DILocation(line: 2311, column: 2, scope: !3051)
!3055 = !DILocation(line: 2313, column: 11, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 2312, column: 7)
!3057 = !DILocation(line: 2313, column: 15, scope: !3056)
!3058 = !DILocation(line: 2313, column: 9, scope: !3056)
!3059 = !DILocation(line: 2314, column: 10, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 2314, column: 7)
!3061 = !DILocation(line: 2314, column: 8, scope: !3060)
!3062 = !DILocation(line: 2314, column: 17, scope: !3060)
!3063 = !DILocation(line: 2314, column: 57, scope: !3060)
!3064 = !DILocation(line: 2314, column: 60, scope: !3060)
!3065 = !DILocation(line: 2314, column: 64, scope: !3060)
!3066 = !DILocation(line: 2314, column: 69, scope: !3060)
!3067 = !DILocation(line: 2314, column: 7, scope: !3056)
!3068 = !DILocation(line: 2315, column: 10, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 2314, column: 91)
!3070 = !DILocation(line: 2316, column: 3, scope: !3069)
!3071 = !DILocation(line: 2319, column: 26, scope: !2808)
!3072 = !DILocation(line: 2319, column: 36, scope: !2808)
!3073 = !DILocation(line: 2319, column: 34, scope: !2808)
!3074 = !DILocation(line: 2319, column: 24, scope: !2808)
!3075 = !DILocation(line: 2319, column: 13, scope: !2808)
!3076 = !DILocation(line: 2319, column: 11, scope: !2808)
!3077 = !DILocation(line: 2322, column: 10, scope: !2808)
!3078 = !DILocation(line: 2322, column: 19, scope: !2808)
!3079 = !DILocation(line: 2323, column: 17, scope: !2808)
!3080 = !DILocation(line: 2323, column: 10, scope: !2808)
!3081 = !DILocation(line: 2323, column: 15, scope: !2808)
!3082 = !DILocation(line: 2324, column: 19, scope: !2808)
!3083 = !DILocation(line: 2324, column: 10, scope: !2808)
!3084 = !DILocation(line: 2324, column: 17, scope: !2808)
!3085 = !DILocation(line: 2325, column: 10, scope: !2808)
!3086 = !DILocation(line: 2325, column: 16, scope: !2808)
!3087 = !DILocation(line: 2326, column: 18, scope: !2808)
!3088 = !DILocation(line: 2326, column: 24, scope: !2808)
!3089 = !DILocation(line: 2326, column: 10, scope: !2808)
!3090 = !DILocation(line: 2326, column: 16, scope: !2808)
!3091 = !DILocation(line: 2328, column: 23, scope: !2808)
!3092 = !DILocation(line: 2328, column: 2, scope: !2808)
!3093 = !DILocation(line: 2330, column: 2, scope: !2808)
!3094 = !DILocation(line: 2330, column: 20, scope: !2808)
!3095 = !DILocation(line: 2330, column: 12, scope: !2808)
!3096 = !DILocation(line: 2333, column: 14, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2333, column: 6)
!3098 = !DILocation(line: 2333, column: 22, scope: !3097)
!3099 = !DILocation(line: 2333, column: 6, scope: !2808)
!3100 = !DILocation(line: 2334, column: 36, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3097, file: !3, line: 2333, column: 27)
!3102 = !DILocation(line: 2334, column: 51, scope: !3101)
!3103 = !DILocation(line: 2334, column: 3, scope: !3101)
!3104 = !DILocation(line: 2335, column: 3, scope: !3101)
!3105 = !DILocation(line: 2335, column: 21, scope: !3101)
!3106 = !DILocation(line: 2335, column: 13, scope: !3101)
!3107 = !DILocation(line: 2336, column: 11, scope: !3101)
!3108 = !DILocation(line: 2336, column: 25, scope: !3101)
!3109 = !DILocation(line: 2337, column: 2, scope: !3101)
!3110 = !DILocation(line: 2339, column: 14, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2339, column: 6)
!3112 = !DILocation(line: 2339, column: 6, scope: !3111)
!3113 = !DILocation(line: 2339, column: 6, scope: !2808)
!3114 = !DILocalVariable(name: "ptr", scope: !3115, file: !3, line: 2340, type: !1694)
!3115 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 2339, column: 24)
!3116 = !DILocation(line: 2340, column: 11, scope: !3115)
!3117 = !DILocation(line: 2340, column: 25, scope: !3115)
!3118 = !DILocation(line: 2340, column: 34, scope: !3115)
!3119 = !DILocation(line: 2342, column: 8, scope: !3115)
!3120 = !DILocation(line: 2342, column: 6, scope: !3115)
!3121 = !DILocation(line: 2343, column: 15, scope: !3115)
!3122 = !DILocation(line: 2343, column: 25, scope: !3115)
!3123 = !DILocation(line: 2343, column: 3, scope: !3115)
!3124 = !DILocation(line: 2344, column: 3, scope: !3115)
!3125 = !DILocation(line: 2344, column: 7, scope: !3115)
!3126 = !DILocation(line: 2344, column: 12, scope: !3115)
!3127 = !DILocation(line: 2345, column: 20, scope: !3115)
!3128 = !DILocation(line: 2345, column: 29, scope: !3115)
!3129 = !DILocation(line: 2345, column: 3, scope: !3115)
!3130 = !DILocation(line: 2345, column: 7, scope: !3115)
!3131 = !DILocation(line: 2345, column: 10, scope: !3115)
!3132 = !DILocation(line: 2346, column: 23, scope: !3115)
!3133 = !DILocation(line: 2346, column: 3, scope: !3115)
!3134 = !DILocation(line: 2346, column: 7, scope: !3115)
!3135 = !DILocation(line: 2346, column: 13, scope: !3115)
!3136 = !DILocation(line: 2348, column: 23, scope: !3115)
!3137 = !DILocation(line: 2348, column: 3, scope: !3115)
!3138 = !DILocation(line: 2348, column: 7, scope: !3115)
!3139 = !DILocation(line: 2348, column: 13, scope: !3115)
!3140 = !DILocation(line: 2349, column: 11, scope: !3115)
!3141 = !DILocation(line: 2349, column: 19, scope: !3115)
!3142 = !DILocation(line: 2351, column: 15, scope: !3115)
!3143 = !DILocation(line: 2351, column: 24, scope: !3115)
!3144 = !DILocation(line: 2351, column: 5, scope: !3115)
!3145 = !DILocation(line: 2352, column: 20, scope: !3115)
!3146 = !DILocation(line: 2352, column: 51, scope: !3115)
!3147 = !DILocation(line: 2352, column: 49, scope: !3115)
!3148 = !DILocation(line: 2352, column: 18, scope: !3115)
!3149 = !DILocation(line: 2352, column: 3, scope: !3115)
!3150 = !DILocation(line: 2352, column: 7, scope: !3115)
!3151 = !DILocation(line: 2352, column: 13, scope: !3115)
!3152 = !DILocation(line: 2353, column: 19, scope: !3115)
!3153 = !DILocation(line: 2353, column: 50, scope: !3115)
!3154 = !DILocation(line: 2353, column: 48, scope: !3115)
!3155 = !DILocation(line: 2353, column: 17, scope: !3115)
!3156 = !DILocation(line: 2353, column: 3, scope: !3115)
!3157 = !DILocation(line: 2353, column: 7, scope: !3115)
!3158 = !DILocation(line: 2353, column: 12, scope: !3115)
!3159 = !DILocation(line: 2355, column: 10, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3115, file: !3, line: 2355, column: 3)
!3161 = !DILocation(line: 2355, column: 8, scope: !3160)
!3162 = !DILocation(line: 2355, column: 15, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 2355, column: 3)
!3164 = !DILocation(line: 2355, column: 27, scope: !3163)
!3165 = !DILocation(line: 2355, column: 36, scope: !3163)
!3166 = !DILocation(line: 2355, column: 17, scope: !3163)
!3167 = !DILocation(line: 2355, column: 3, scope: !3160)
!3168 = !DILocation(line: 2356, column: 15, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 2355, column: 73)
!3170 = !DILocation(line: 2356, column: 19, scope: !3169)
!3171 = !DILocation(line: 2356, column: 24, scope: !3169)
!3172 = !DILocation(line: 2356, column: 4, scope: !3169)
!3173 = !DILocation(line: 2357, column: 15, scope: !3169)
!3174 = !DILocation(line: 2357, column: 19, scope: !3169)
!3175 = !DILocation(line: 2357, column: 24, scope: !3169)
!3176 = !DILocation(line: 2357, column: 4, scope: !3169)
!3177 = !DILocation(line: 2358, column: 3, scope: !3169)
!3178 = !DILocation(line: 2355, column: 46, scope: !3163)
!3179 = !DILocation(line: 2355, column: 51, scope: !3163)
!3180 = !DILocation(line: 2355, column: 58, scope: !3163)
!3181 = !DILocation(line: 2355, column: 67, scope: !3163)
!3182 = !DILocation(line: 2355, column: 3, scope: !3163)
!3183 = distinct !{!3183, !3167, !3184}
!3184 = !DILocation(line: 2358, column: 3, scope: !3160)
!3185 = !DILocation(line: 2359, column: 2, scope: !3115)
!3186 = !DILocation(line: 2361, column: 2, scope: !2808)
!3187 = !DILocation(line: 2362, column: 1, scope: !2808)
!3188 = distinct !DISubprogram(name: "mball_count", scope: !3, file: !3, line: 2208, type: !3189, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{null, !2588, !3191, !2530, !1974}
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!3192 = !DILocalVariable(name: "eval_ctx", arg: 1, scope: !3188, file: !3, line: 2208, type: !2588)
!3193 = !DILocation(line: 2208, column: 44, scope: !3188)
!3194 = !DILocalVariable(name: "process", arg: 2, scope: !3188, file: !3, line: 2208, type: !3191)
!3195 = !DILocation(line: 2208, column: 63, scope: !3188)
!3196 = !DILocalVariable(name: "scene", arg: 3, scope: !3188, file: !3, line: 2208, type: !2530)
!3197 = !DILocation(line: 2208, column: 79, scope: !3188)
!3198 = !DILocalVariable(name: "basis", arg: 4, scope: !3188, file: !3, line: 2208, type: !1974)
!3199 = !DILocation(line: 2208, column: 94, scope: !3188)
!3200 = !DILocalVariable(name: "sce_iter", scope: !3188, file: !3, line: 2210, type: !2530)
!3201 = !DILocation(line: 2210, column: 9, scope: !3188)
!3202 = !DILocation(line: 2210, column: 20, scope: !3188)
!3203 = !DILocalVariable(name: "base", scope: !3188, file: !3, line: 2211, type: !2540)
!3204 = !DILocation(line: 2211, column: 8, scope: !3188)
!3205 = !DILocalVariable(name: "ob", scope: !3188, file: !3, line: 2212, type: !1974)
!3206 = !DILocation(line: 2212, column: 10, scope: !3188)
!3207 = !DILocalVariable(name: "bob", scope: !3188, file: !3, line: 2212, type: !1974)
!3208 = !DILocation(line: 2212, column: 15, scope: !3188)
!3209 = !DILocation(line: 2212, column: 21, scope: !3188)
!3210 = !DILocalVariable(name: "ml", scope: !3188, file: !3, line: 2213, type: !1617)
!3211 = !DILocation(line: 2213, column: 12, scope: !3188)
!3212 = !DILocalVariable(name: "basisnr", scope: !3188, file: !3, line: 2214, type: !78)
!3213 = !DILocation(line: 2214, column: 6, scope: !3188)
!3214 = !DILocalVariable(name: "obnr", scope: !3188, file: !3, line: 2214, type: !78)
!3215 = !DILocation(line: 2214, column: 15, scope: !3188)
!3216 = !DILocalVariable(name: "basisname", scope: !3188, file: !3, line: 2215, type: !72)
!3217 = !DILocation(line: 2215, column: 7, scope: !3188)
!3218 = !DILocalVariable(name: "obname", scope: !3188, file: !3, line: 2215, type: !72)
!3219 = !DILocation(line: 2215, column: 31, scope: !3188)
!3220 = !DILocalVariable(name: "iter", scope: !3188, file: !3, line: 2216, type: !2559)
!3221 = !DILocation(line: 2216, column: 16, scope: !3188)
!3222 = !DILocation(line: 2218, column: 21, scope: !3188)
!3223 = !DILocation(line: 2218, column: 42, scope: !3188)
!3224 = !DILocation(line: 2218, column: 49, scope: !3188)
!3225 = !DILocation(line: 2218, column: 52, scope: !3188)
!3226 = !DILocation(line: 2218, column: 57, scope: !3188)
!3227 = !DILocation(line: 2218, column: 2, scope: !3188)
!3228 = !DILocation(line: 2219, column: 2, scope: !3188)
!3229 = !DILocation(line: 2219, column: 11, scope: !3188)
!3230 = !DILocation(line: 2219, column: 19, scope: !3188)
!3231 = !DILocation(line: 2221, column: 27, scope: !3188)
!3232 = !DILocation(line: 2221, column: 2, scope: !3188)
!3233 = !DILocation(line: 2222, column: 2, scope: !3188)
!3234 = !DILocation(line: 2222, column: 34, scope: !3188)
!3235 = !DILocation(line: 2222, column: 9, scope: !3188)
!3236 = !DILocation(line: 2223, column: 7, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 2223, column: 7)
!3238 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 2222, column: 78)
!3239 = !DILocation(line: 2223, column: 11, scope: !3237)
!3240 = !DILocation(line: 2223, column: 16, scope: !3237)
!3241 = !DILocation(line: 2223, column: 7, scope: !3238)
!3242 = !DILocation(line: 2224, column: 8, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 2224, column: 8)
!3244 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 2223, column: 29)
!3245 = !DILocation(line: 2224, column: 14, scope: !3243)
!3246 = !DILocation(line: 2224, column: 11, scope: !3243)
!3247 = !DILocation(line: 2224, column: 8, scope: !3244)
!3248 = !DILocalVariable(name: "mb", scope: !3249, file: !3, line: 2225, type: !114)
!3249 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 2224, column: 19)
!3250 = !DILocation(line: 2225, column: 15, scope: !3249)
!3251 = !DILocation(line: 2225, column: 20, scope: !3249)
!3252 = !DILocation(line: 2225, column: 24, scope: !3249)
!3253 = !DILocation(line: 2229, column: 9, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 2229, column: 9)
!3255 = !DILocation(line: 2229, column: 13, scope: !3254)
!3256 = !DILocation(line: 2229, column: 9, scope: !3249)
!3257 = !DILocation(line: 2229, column: 29, scope: !3254)
!3258 = !DILocation(line: 2229, column: 33, scope: !3254)
!3259 = !DILocation(line: 2229, column: 44, scope: !3254)
!3260 = !DILocation(line: 2229, column: 27, scope: !3254)
!3261 = !DILocation(line: 2229, column: 24, scope: !3254)
!3262 = !DILocation(line: 2231, column: 15, scope: !3254)
!3263 = !DILocation(line: 2231, column: 19, scope: !3254)
!3264 = !DILocation(line: 2231, column: 25, scope: !3254)
!3265 = !DILocation(line: 2231, column: 13, scope: !3254)
!3266 = !DILocation(line: 2232, column: 4, scope: !3249)
!3267 = !DILocation(line: 2234, column: 24, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 2233, column: 9)
!3269 = !DILocation(line: 2234, column: 39, scope: !3268)
!3270 = !DILocation(line: 2234, column: 43, scope: !3268)
!3271 = !DILocation(line: 2234, column: 46, scope: !3268)
!3272 = !DILocation(line: 2234, column: 51, scope: !3268)
!3273 = !DILocation(line: 2234, column: 5, scope: !3268)
!3274 = !DILocation(line: 2238, column: 16, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 2238, column: 9)
!3276 = !DILocation(line: 2238, column: 24, scope: !3275)
!3277 = !DILocation(line: 2238, column: 9, scope: !3275)
!3278 = !DILocation(line: 2238, column: 35, scope: !3275)
!3279 = !DILocation(line: 2238, column: 9, scope: !3268)
!3280 = !DILocalVariable(name: "mb", scope: !3281, file: !3, line: 2239, type: !114)
!3281 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 2238, column: 41)
!3282 = !DILocation(line: 2239, column: 16, scope: !3281)
!3283 = !DILocation(line: 2239, column: 21, scope: !3281)
!3284 = !DILocation(line: 2239, column: 25, scope: !3281)
!3285 = !DILocation(line: 2243, column: 10, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3281, file: !3, line: 2243, column: 10)
!3287 = !DILocation(line: 2243, column: 14, scope: !3286)
!3288 = !DILocation(line: 2243, column: 10, scope: !3281)
!3289 = !DILocation(line: 2243, column: 30, scope: !3286)
!3290 = !DILocation(line: 2243, column: 34, scope: !3286)
!3291 = !DILocation(line: 2243, column: 45, scope: !3286)
!3292 = !DILocation(line: 2243, column: 28, scope: !3286)
!3293 = !DILocation(line: 2243, column: 25, scope: !3286)
!3294 = !DILocation(line: 2245, column: 16, scope: !3286)
!3295 = !DILocation(line: 2245, column: 20, scope: !3286)
!3296 = !DILocation(line: 2245, column: 26, scope: !3286)
!3297 = !DILocation(line: 2245, column: 14, scope: !3286)
!3298 = !DILocation(line: 2246, column: 5, scope: !3281)
!3299 = !DILocation(line: 2249, column: 4, scope: !3244)
!3300 = !DILocation(line: 2249, column: 12, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 2249, column: 4)
!3302 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 2249, column: 4)
!3303 = !DILocation(line: 2249, column: 4, scope: !3302)
!3304 = !DILocation(line: 2250, column: 11, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 2250, column: 9)
!3306 = distinct !DILexicalBlock(scope: !3301, file: !3, line: 2249, column: 31)
!3307 = !DILocation(line: 2250, column: 15, scope: !3305)
!3308 = !DILocation(line: 2250, column: 20, scope: !3305)
!3309 = !DILocation(line: 2250, column: 9, scope: !3306)
!3310 = !DILocation(line: 2251, column: 6, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 2250, column: 32)
!3312 = !DILocation(line: 2251, column: 15, scope: !3311)
!3313 = !DILocation(line: 2251, column: 22, scope: !3311)
!3314 = !DILocation(line: 2252, column: 5, scope: !3311)
!3315 = !DILocation(line: 2253, column: 4, scope: !3306)
!3316 = !DILocation(line: 2249, column: 21, scope: !3301)
!3317 = !DILocation(line: 2249, column: 25, scope: !3301)
!3318 = !DILocation(line: 2249, column: 19, scope: !3301)
!3319 = !DILocation(line: 2249, column: 4, scope: !3301)
!3320 = distinct !{!3320, !3303, !3321}
!3321 = !DILocation(line: 2253, column: 4, scope: !3302)
!3322 = !DILocation(line: 2254, column: 3, scope: !3244)
!3323 = distinct !{!3323, !3233, !3324}
!3324 = !DILocation(line: 2255, column: 2, scope: !3188)
!3325 = !DILocation(line: 2256, column: 1, scope: !3188)
!3326 = distinct !DISubprogram(name: "init_meta", scope: !3, file: !3, line: 1636, type: !3327, scopeLine: 1637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{!141, !2588, !3191, !2530, !1974}
!3329 = !DILocalVariable(name: "eval_ctx", arg: 1, scope: !3326, file: !3, line: 1636, type: !2588)
!3330 = !DILocation(line: 1636, column: 43, scope: !3326)
!3331 = !DILocalVariable(name: "process", arg: 2, scope: !3326, file: !3, line: 1636, type: !3191)
!3332 = !DILocation(line: 1636, column: 62, scope: !3326)
!3333 = !DILocalVariable(name: "scene", arg: 3, scope: !3326, file: !3, line: 1636, type: !2530)
!3334 = !DILocation(line: 1636, column: 78, scope: !3326)
!3335 = !DILocalVariable(name: "ob", arg: 4, scope: !3326, file: !3, line: 1636, type: !1974)
!3336 = !DILocation(line: 1636, column: 93, scope: !3326)
!3337 = !DILocalVariable(name: "sce_iter", scope: !3326, file: !3, line: 1638, type: !2530)
!3338 = !DILocation(line: 1638, column: 9, scope: !3326)
!3339 = !DILocation(line: 1638, column: 20, scope: !3326)
!3340 = !DILocalVariable(name: "base", scope: !3326, file: !3, line: 1639, type: !2540)
!3341 = !DILocation(line: 1639, column: 8, scope: !3326)
!3342 = !DILocalVariable(name: "bob", scope: !3326, file: !3, line: 1640, type: !1974)
!3343 = !DILocation(line: 1640, column: 10, scope: !3326)
!3344 = !DILocalVariable(name: "mb", scope: !3326, file: !3, line: 1641, type: !114)
!3345 = !DILocation(line: 1641, column: 12, scope: !3326)
!3346 = !DILocalVariable(name: "ml", scope: !3326, file: !3, line: 1642, type: !1617)
!3347 = !DILocation(line: 1642, column: 12, scope: !3326)
!3348 = !DILocalVariable(name: "size", scope: !3326, file: !3, line: 1643, type: !141)
!3349 = !DILocation(line: 1643, column: 8, scope: !3326)
!3350 = !DILocalVariable(name: "totsize", scope: !3326, file: !3, line: 1643, type: !141)
!3351 = !DILocation(line: 1643, column: 14, scope: !3326)
!3352 = !DILocalVariable(name: "obinv", scope: !3326, file: !3, line: 1643, type: !440)
!3353 = !DILocation(line: 1643, column: 23, scope: !3326)
!3354 = !DILocalVariable(name: "obmat", scope: !3326, file: !3, line: 1643, type: !440)
!3355 = !DILocation(line: 1643, column: 36, scope: !3326)
!3356 = !DILocalVariable(name: "vec", scope: !3326, file: !3, line: 1643, type: !172)
!3357 = !DILocation(line: 1643, column: 49, scope: !3326)
!3358 = !DILocalVariable(name: "a", scope: !3326, file: !3, line: 1645, type: !78)
!3359 = !DILocation(line: 1645, column: 6, scope: !3326)
!3360 = !DILocalVariable(name: "obnr", scope: !3326, file: !3, line: 1645, type: !78)
!3361 = !DILocation(line: 1645, column: 9, scope: !3326)
!3362 = !DILocalVariable(name: "zero_size", scope: !3326, file: !3, line: 1645, type: !78)
!3363 = !DILocation(line: 1645, column: 15, scope: !3326)
!3364 = !DILocalVariable(name: "obname", scope: !3326, file: !3, line: 1646, type: !72)
!3365 = !DILocation(line: 1646, column: 7, scope: !3326)
!3366 = !DILocalVariable(name: "iter", scope: !3326, file: !3, line: 1647, type: !2559)
!3367 = !DILocation(line: 1647, column: 16, scope: !3326)
!3368 = !DILocation(line: 1649, column: 13, scope: !3326)
!3369 = !DILocation(line: 1649, column: 20, scope: !3326)
!3370 = !DILocation(line: 1649, column: 24, scope: !3326)
!3371 = !DILocation(line: 1649, column: 2, scope: !3326)
!3372 = !DILocation(line: 1650, column: 15, scope: !3326)
!3373 = !DILocation(line: 1650, column: 22, scope: !3326)
!3374 = !DILocation(line: 1650, column: 26, scope: !3326)
!3375 = !DILocation(line: 1650, column: 2, scope: !3326)
!3376 = !DILocation(line: 1651, column: 4, scope: !3326)
!3377 = !DILocation(line: 1653, column: 21, scope: !3326)
!3378 = !DILocation(line: 1653, column: 36, scope: !3326)
!3379 = !DILocation(line: 1653, column: 40, scope: !3326)
!3380 = !DILocation(line: 1653, column: 43, scope: !3326)
!3381 = !DILocation(line: 1653, column: 48, scope: !3326)
!3382 = !DILocation(line: 1653, column: 2, scope: !3326)
!3383 = !DILocation(line: 1656, column: 27, scope: !3326)
!3384 = !DILocation(line: 1656, column: 2, scope: !3326)
!3385 = !DILocation(line: 1657, column: 2, scope: !3326)
!3386 = !DILocation(line: 1657, column: 34, scope: !3326)
!3387 = !DILocation(line: 1657, column: 9, scope: !3326)
!3388 = !DILocation(line: 1659, column: 7, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 1659, column: 7)
!3390 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 1657, column: 79)
!3391 = !DILocation(line: 1659, column: 12, scope: !3389)
!3392 = !DILocation(line: 1659, column: 17, scope: !3389)
!3393 = !DILocation(line: 1659, column: 7, scope: !3390)
!3394 = !DILocation(line: 1660, column: 14, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 1659, column: 30)
!3396 = !DILocation(line: 1661, column: 7, scope: !3395)
!3397 = !DILocation(line: 1663, column: 8, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 1663, column: 8)
!3399 = !DILocation(line: 1663, column: 15, scope: !3398)
!3400 = !DILocation(line: 1663, column: 12, scope: !3398)
!3401 = !DILocation(line: 1663, column: 18, scope: !3398)
!3402 = !DILocation(line: 1663, column: 22, scope: !3398)
!3403 = !DILocation(line: 1663, column: 28, scope: !3398)
!3404 = !DILocation(line: 1663, column: 33, scope: !3398)
!3405 = !DILocation(line: 1663, column: 49, scope: !3398)
!3406 = !DILocation(line: 1663, column: 8, scope: !3395)
!3407 = !DILocation(line: 1664, column: 10, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 1663, column: 55)
!3409 = !DILocation(line: 1664, column: 14, scope: !3408)
!3410 = !DILocation(line: 1664, column: 8, scope: !3408)
!3411 = !DILocation(line: 1666, column: 9, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 1666, column: 9)
!3413 = !DILocation(line: 1666, column: 13, scope: !3412)
!3414 = !DILocation(line: 1666, column: 9, scope: !3408)
!3415 = !DILocation(line: 1666, column: 29, scope: !3412)
!3416 = !DILocation(line: 1666, column: 33, scope: !3412)
!3417 = !DILocation(line: 1666, column: 44, scope: !3412)
!3418 = !DILocation(line: 1666, column: 27, scope: !3412)
!3419 = !DILocation(line: 1666, column: 24, scope: !3412)
!3420 = !DILocation(line: 1667, column: 15, scope: !3412)
!3421 = !DILocation(line: 1667, column: 19, scope: !3412)
!3422 = !DILocation(line: 1667, column: 25, scope: !3412)
!3423 = !DILocation(line: 1667, column: 13, scope: !3412)
!3424 = !DILocation(line: 1668, column: 4, scope: !3408)
!3425 = !DILocalVariable(name: "name", scope: !3426, file: !3, line: 1670, type: !72)
!3426 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 1669, column: 9)
!3427 = !DILocation(line: 1670, column: 10, scope: !3426)
!3428 = !DILocalVariable(name: "nr", scope: !3426, file: !3, line: 1671, type: !78)
!3429 = !DILocation(line: 1671, column: 9, scope: !3426)
!3430 = !DILocation(line: 1673, column: 24, scope: !3426)
!3431 = !DILocation(line: 1673, column: 35, scope: !3426)
!3432 = !DILocation(line: 1673, column: 40, scope: !3426)
!3433 = !DILocation(line: 1673, column: 43, scope: !3426)
!3434 = !DILocation(line: 1673, column: 48, scope: !3426)
!3435 = !DILocation(line: 1673, column: 5, scope: !3426)
!3436 = !DILocation(line: 1674, column: 16, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 1674, column: 9)
!3438 = !DILocation(line: 1674, column: 24, scope: !3437)
!3439 = !DILocation(line: 1674, column: 9, scope: !3437)
!3440 = !DILocation(line: 1674, column: 30, scope: !3437)
!3441 = !DILocation(line: 1674, column: 9, scope: !3426)
!3442 = !DILocation(line: 1675, column: 11, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 1674, column: 36)
!3444 = !DILocation(line: 1675, column: 16, scope: !3443)
!3445 = !DILocation(line: 1675, column: 9, scope: !3443)
!3446 = !DILocation(line: 1677, column: 10, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 1677, column: 10)
!3448 = !DILocation(line: 1677, column: 14, scope: !3447)
!3449 = !DILocation(line: 1677, column: 10, scope: !3443)
!3450 = !DILocation(line: 1677, column: 30, scope: !3447)
!3451 = !DILocation(line: 1677, column: 34, scope: !3447)
!3452 = !DILocation(line: 1677, column: 45, scope: !3447)
!3453 = !DILocation(line: 1677, column: 28, scope: !3447)
!3454 = !DILocation(line: 1677, column: 25, scope: !3447)
!3455 = !DILocation(line: 1678, column: 16, scope: !3447)
!3456 = !DILocation(line: 1678, column: 20, scope: !3447)
!3457 = !DILocation(line: 1678, column: 26, scope: !3447)
!3458 = !DILocation(line: 1678, column: 14, scope: !3447)
!3459 = !DILocation(line: 1679, column: 5, scope: !3443)
!3460 = !DILocation(line: 1684, column: 25, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 1684, column: 8)
!3462 = !DILocation(line: 1684, column: 30, scope: !3461)
!3463 = !DILocation(line: 1684, column: 8, scope: !3461)
!3464 = !DILocation(line: 1684, column: 8, scope: !3395)
!3465 = !DILocation(line: 1685, column: 15, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 1684, column: 38)
!3467 = !DILocation(line: 1686, column: 4, scope: !3466)
!3468 = !DILocation(line: 1687, column: 13, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 1687, column: 13)
!3470 = !DILocation(line: 1687, column: 18, scope: !3469)
!3471 = !DILocation(line: 1687, column: 13, scope: !3461)
!3472 = !DILocalVariable(name: "pob", scope: !3473, file: !3, line: 1688, type: !307)
!3473 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 1687, column: 26)
!3474 = !DILocation(line: 1688, column: 20, scope: !3473)
!3475 = !DILocation(line: 1688, column: 26, scope: !3473)
!3476 = !DILocation(line: 1688, column: 31, scope: !3473)
!3477 = !DILocation(line: 1689, column: 5, scope: !3473)
!3478 = !DILocation(line: 1689, column: 12, scope: !3473)
!3479 = !DILocation(line: 1690, column: 27, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 1690, column: 10)
!3481 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 1689, column: 17)
!3482 = !DILocation(line: 1690, column: 32, scope: !3480)
!3483 = !DILocation(line: 1690, column: 10, scope: !3480)
!3484 = !DILocation(line: 1690, column: 10, scope: !3481)
!3485 = !DILocation(line: 1691, column: 17, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 1690, column: 40)
!3487 = !DILocation(line: 1692, column: 7, scope: !3486)
!3488 = !DILocation(line: 1694, column: 12, scope: !3481)
!3489 = !DILocation(line: 1694, column: 17, scope: !3481)
!3490 = !DILocation(line: 1694, column: 10, scope: !3481)
!3491 = distinct !{!3491, !3477, !3492}
!3492 = !DILocation(line: 1695, column: 5, scope: !3473)
!3493 = !DILocation(line: 1696, column: 4, scope: !3473)
!3494 = !DILocation(line: 1698, column: 8, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 1698, column: 8)
!3496 = !DILocation(line: 1698, column: 8, scope: !3395)
!3497 = !DILocalVariable(name: "ml_count", scope: !3498, file: !3, line: 1699, type: !7)
!3498 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 1698, column: 19)
!3499 = !DILocation(line: 1699, column: 18, scope: !3498)
!3500 = !DILocation(line: 1700, column: 5, scope: !3498)
!3501 = !DILocation(line: 1700, column: 12, scope: !3498)
!3502 = !DILocation(line: 1701, column: 14, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 1700, column: 16)
!3504 = !DILocation(line: 1702, column: 11, scope: !3503)
!3505 = !DILocation(line: 1702, column: 15, scope: !3503)
!3506 = !DILocation(line: 1702, column: 9, scope: !3503)
!3507 = distinct !{!3507, !3500, !3508}
!3508 = !DILocation(line: 1703, column: 5, scope: !3498)
!3509 = !DILocation(line: 1704, column: 25, scope: !3498)
!3510 = !DILocation(line: 1704, column: 5, scope: !3498)
!3511 = !DILocation(line: 1704, column: 14, scope: !3498)
!3512 = !DILocation(line: 1704, column: 22, scope: !3498)
!3513 = !DILocation(line: 1705, column: 4, scope: !3498)
!3514 = !DILocation(line: 1707, column: 5, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 1706, column: 9)
!3516 = !DILocation(line: 1707, column: 12, scope: !3515)
!3517 = !DILocation(line: 1708, column: 12, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 1708, column: 10)
!3519 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 1707, column: 16)
!3520 = !DILocation(line: 1708, column: 16, scope: !3518)
!3521 = !DILocation(line: 1708, column: 21, scope: !3518)
!3522 = !DILocation(line: 1708, column: 10, scope: !3519)
!3523 = !DILocalVariable(name: "i", scope: !3524, file: !3, line: 1709, type: !78)
!3524 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 1708, column: 33)
!3525 = !DILocation(line: 1709, column: 11, scope: !3524)
!3526 = !DILocalVariable(name: "temp1", scope: !3524, file: !3, line: 1710, type: !440)
!3527 = !DILocation(line: 1710, column: 13, scope: !3524)
!3528 = !DILocalVariable(name: "temp2", scope: !3524, file: !3, line: 1710, type: !440)
!3529 = !DILocation(line: 1710, column: 26, scope: !3524)
!3530 = !DILocalVariable(name: "temp3", scope: !3524, file: !3, line: 1710, type: !440)
!3531 = !DILocation(line: 1710, column: 39, scope: !3524)
!3532 = !DILocalVariable(name: "mat", scope: !3524, file: !3, line: 1711, type: !1642)
!3533 = !DILocation(line: 1711, column: 15, scope: !3524)
!3534 = !DILocalVariable(name: "imat", scope: !3524, file: !3, line: 1711, type: !1642)
!3535 = !DILocation(line: 1711, column: 33, scope: !3524)
!3536 = !DILocalVariable(name: "max_x", scope: !3524, file: !3, line: 1712, type: !141)
!3537 = !DILocation(line: 1712, column: 13, scope: !3524)
!3538 = !DILocalVariable(name: "max_y", scope: !3524, file: !3, line: 1712, type: !141)
!3539 = !DILocation(line: 1712, column: 20, scope: !3524)
!3540 = !DILocalVariable(name: "max_z", scope: !3524, file: !3, line: 1712, type: !141)
!3541 = !DILocation(line: 1712, column: 27, scope: !3524)
!3542 = !DILocalVariable(name: "min_x", scope: !3524, file: !3, line: 1712, type: !141)
!3543 = !DILocation(line: 1712, column: 34, scope: !3524)
!3544 = !DILocalVariable(name: "min_y", scope: !3524, file: !3, line: 1712, type: !141)
!3545 = !DILocation(line: 1712, column: 41, scope: !3524)
!3546 = !DILocalVariable(name: "min_z", scope: !3524, file: !3, line: 1712, type: !141)
!3547 = !DILocation(line: 1712, column: 48, scope: !3524)
!3548 = !DILocalVariable(name: "expx", scope: !3524, file: !3, line: 1713, type: !141)
!3549 = !DILocation(line: 1713, column: 13, scope: !3524)
!3550 = !DILocalVariable(name: "expy", scope: !3524, file: !3, line: 1713, type: !141)
!3551 = !DILocation(line: 1713, column: 19, scope: !3524)
!3552 = !DILocalVariable(name: "expz", scope: !3524, file: !3, line: 1713, type: !141)
!3553 = !DILocation(line: 1713, column: 25, scope: !3524)
!3554 = !DILocation(line: 1715, column: 29, scope: !3524)
!3555 = !DILocation(line: 1715, column: 21, scope: !3524)
!3556 = !DILocation(line: 1715, column: 13, scope: !3524)
!3557 = !DILocation(line: 1716, column: 29, scope: !3524)
!3558 = !DILocation(line: 1716, column: 21, scope: !3524)
!3559 = !DILocation(line: 1716, column: 13, scope: !3524)
!3560 = !DILocation(line: 1720, column: 11, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1720, column: 11)
!3562 = !DILocation(line: 1720, column: 15, scope: !3561)
!3563 = !DILocation(line: 1720, column: 17, scope: !3561)
!3564 = !DILocation(line: 1720, column: 11, scope: !3524)
!3565 = !DILocation(line: 1720, column: 26, scope: !3561)
!3566 = !DILocation(line: 1720, column: 30, scope: !3561)
!3567 = !DILocation(line: 1720, column: 32, scope: !3561)
!3568 = !DILocation(line: 1723, column: 20, scope: !3524)
!3569 = !DILocation(line: 1723, column: 27, scope: !3524)
!3570 = !DILocation(line: 1723, column: 31, scope: !3524)
!3571 = !DILocation(line: 1723, column: 7, scope: !3524)
!3572 = !DILocation(line: 1726, column: 15, scope: !3524)
!3573 = !DILocation(line: 1726, column: 7, scope: !3524)
!3574 = !DILocation(line: 1727, column: 21, scope: !3524)
!3575 = !DILocation(line: 1727, column: 25, scope: !3524)
!3576 = !DILocation(line: 1727, column: 7, scope: !3524)
!3577 = !DILocation(line: 1727, column: 19, scope: !3524)
!3578 = !DILocation(line: 1728, column: 21, scope: !3524)
!3579 = !DILocation(line: 1728, column: 25, scope: !3524)
!3580 = !DILocation(line: 1728, column: 7, scope: !3524)
!3581 = !DILocation(line: 1728, column: 19, scope: !3524)
!3582 = !DILocation(line: 1729, column: 21, scope: !3524)
!3583 = !DILocation(line: 1729, column: 25, scope: !3524)
!3584 = !DILocation(line: 1729, column: 7, scope: !3524)
!3585 = !DILocation(line: 1729, column: 19, scope: !3524)
!3586 = !DILocation(line: 1731, column: 19, scope: !3524)
!3587 = !DILocation(line: 1731, column: 26, scope: !3524)
!3588 = !DILocation(line: 1731, column: 33, scope: !3524)
!3589 = !DILocation(line: 1731, column: 7, scope: !3524)
!3590 = !DILocation(line: 1734, column: 43, scope: !3524)
!3591 = !DILocation(line: 1734, column: 27, scope: !3524)
!3592 = !DILocation(line: 1734, column: 7, scope: !3524)
!3593 = !DILocation(line: 1734, column: 16, scope: !3524)
!3594 = !DILocation(line: 1734, column: 22, scope: !3524)
!3595 = !DILocation(line: 1734, column: 25, scope: !3524)
!3596 = !DILocation(line: 1735, column: 9, scope: !3524)
!3597 = !DILocation(line: 1735, column: 18, scope: !3524)
!3598 = !DILocation(line: 1735, column: 24, scope: !3524)
!3599 = !DILocation(line: 1735, column: 31, scope: !3524)
!3600 = !DILocation(line: 1735, column: 30, scope: !3524)
!3601 = !DILocation(line: 1736, column: 47, scope: !3524)
!3602 = !DILocation(line: 1736, column: 31, scope: !3524)
!3603 = !DILocation(line: 1736, column: 7, scope: !3524)
!3604 = !DILocation(line: 1736, column: 16, scope: !3524)
!3605 = !DILocation(line: 1736, column: 22, scope: !3524)
!3606 = !DILocation(line: 1736, column: 26, scope: !3524)
!3607 = !DILocation(line: 1736, column: 29, scope: !3524)
!3608 = !DILocation(line: 1738, column: 29, scope: !3524)
!3609 = !DILocation(line: 1738, column: 13, scope: !3524)
!3610 = !DILocation(line: 1738, column: 11, scope: !3524)
!3611 = !DILocation(line: 1739, column: 30, scope: !3524)
!3612 = !DILocation(line: 1739, column: 14, scope: !3524)
!3613 = !DILocation(line: 1739, column: 12, scope: !3524)
!3614 = !DILocation(line: 1742, column: 20, scope: !3524)
!3615 = !DILocation(line: 1742, column: 27, scope: !3524)
!3616 = !DILocation(line: 1742, column: 7, scope: !3524)
!3617 = !DILocation(line: 1743, column: 19, scope: !3524)
!3618 = !DILocation(line: 1743, column: 26, scope: !3524)
!3619 = !DILocation(line: 1743, column: 33, scope: !3524)
!3620 = !DILocation(line: 1743, column: 38, scope: !3524)
!3621 = !DILocation(line: 1743, column: 7, scope: !3524)
!3622 = !DILocation(line: 1745, column: 19, scope: !3524)
!3623 = !DILocation(line: 1745, column: 24, scope: !3524)
!3624 = !DILocation(line: 1745, column: 31, scope: !3524)
!3625 = !DILocation(line: 1745, column: 7, scope: !3524)
!3626 = !DILocation(line: 1747, column: 20, scope: !3524)
!3627 = !DILocation(line: 1747, column: 26, scope: !3524)
!3628 = !DILocation(line: 1747, column: 7, scope: !3524)
!3629 = !DILocation(line: 1749, column: 33, scope: !3524)
!3630 = !DILocation(line: 1749, column: 37, scope: !3524)
!3631 = !DILocation(line: 1749, column: 43, scope: !3524)
!3632 = !DILocation(line: 1749, column: 47, scope: !3524)
!3633 = !DILocation(line: 1749, column: 41, scope: !3524)
!3634 = !DILocation(line: 1749, column: 7, scope: !3524)
!3635 = !DILocation(line: 1749, column: 16, scope: !3524)
!3636 = !DILocation(line: 1749, column: 22, scope: !3524)
!3637 = !DILocation(line: 1749, column: 26, scope: !3524)
!3638 = !DILocation(line: 1749, column: 31, scope: !3524)
!3639 = !DILocation(line: 1751, column: 42, scope: !3524)
!3640 = !DILocation(line: 1751, column: 32, scope: !3524)
!3641 = !DILocation(line: 1751, column: 7, scope: !3524)
!3642 = !DILocation(line: 1751, column: 16, scope: !3524)
!3643 = !DILocation(line: 1751, column: 22, scope: !3524)
!3644 = !DILocation(line: 1751, column: 26, scope: !3524)
!3645 = !DILocation(line: 1751, column: 30, scope: !3524)
!3646 = !DILocation(line: 1752, column: 43, scope: !3524)
!3647 = !DILocation(line: 1752, column: 33, scope: !3524)
!3648 = !DILocation(line: 1752, column: 7, scope: !3524)
!3649 = !DILocation(line: 1752, column: 16, scope: !3524)
!3650 = !DILocation(line: 1752, column: 22, scope: !3524)
!3651 = !DILocation(line: 1752, column: 26, scope: !3524)
!3652 = !DILocation(line: 1752, column: 31, scope: !3524)
!3653 = !DILocation(line: 1754, column: 12, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1754, column: 11)
!3655 = !DILocation(line: 1754, column: 11, scope: !3524)
!3656 = !DILocation(line: 1755, column: 15, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 1754, column: 44)
!3658 = !DILocation(line: 1755, column: 19, scope: !3657)
!3659 = !DILocation(line: 1755, column: 13, scope: !3657)
!3660 = !DILocation(line: 1756, column: 15, scope: !3657)
!3661 = !DILocation(line: 1756, column: 19, scope: !3657)
!3662 = !DILocation(line: 1756, column: 13, scope: !3657)
!3663 = !DILocation(line: 1757, column: 15, scope: !3657)
!3664 = !DILocation(line: 1757, column: 19, scope: !3657)
!3665 = !DILocation(line: 1757, column: 13, scope: !3657)
!3666 = !DILocation(line: 1758, column: 7, scope: !3657)
!3667 = !DILocation(line: 1760, column: 15, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 1759, column: 12)
!3669 = !DILocation(line: 1760, column: 19, scope: !3668)
!3670 = !DILocation(line: 1760, column: 26, scope: !3668)
!3671 = !DILocation(line: 1760, column: 30, scope: !3668)
!3672 = !DILocation(line: 1760, column: 24, scope: !3668)
!3673 = !DILocation(line: 1760, column: 13, scope: !3668)
!3674 = !DILocation(line: 1761, column: 15, scope: !3668)
!3675 = !DILocation(line: 1761, column: 19, scope: !3668)
!3676 = !DILocation(line: 1761, column: 26, scope: !3668)
!3677 = !DILocation(line: 1761, column: 30, scope: !3668)
!3678 = !DILocation(line: 1761, column: 24, scope: !3668)
!3679 = !DILocation(line: 1761, column: 13, scope: !3668)
!3680 = !DILocation(line: 1762, column: 15, scope: !3668)
!3681 = !DILocation(line: 1762, column: 19, scope: !3668)
!3682 = !DILocation(line: 1762, column: 26, scope: !3668)
!3683 = !DILocation(line: 1762, column: 30, scope: !3668)
!3684 = !DILocation(line: 1762, column: 24, scope: !3668)
!3685 = !DILocation(line: 1762, column: 13, scope: !3668)
!3686 = !DILocation(line: 1767, column: 19, scope: !3524)
!3687 = !DILocation(line: 1767, column: 28, scope: !3524)
!3688 = !DILocation(line: 1767, column: 34, scope: !3524)
!3689 = !DILocation(line: 1767, column: 38, scope: !3524)
!3690 = !DILocation(line: 1767, column: 42, scope: !3524)
!3691 = !DILocation(line: 1767, column: 51, scope: !3524)
!3692 = !DILocation(line: 1767, column: 50, scope: !3524)
!3693 = !DILocation(line: 1767, column: 58, scope: !3524)
!3694 = !DILocation(line: 1767, column: 57, scope: !3524)
!3695 = !DILocation(line: 1767, column: 65, scope: !3524)
!3696 = !DILocation(line: 1767, column: 64, scope: !3524)
!3697 = !DILocation(line: 1767, column: 7, scope: !3524)
!3698 = !DILocation(line: 1768, column: 19, scope: !3524)
!3699 = !DILocation(line: 1768, column: 28, scope: !3524)
!3700 = !DILocation(line: 1768, column: 34, scope: !3524)
!3701 = !DILocation(line: 1768, column: 38, scope: !3524)
!3702 = !DILocation(line: 1768, column: 42, scope: !3524)
!3703 = !DILocation(line: 1768, column: 51, scope: !3524)
!3704 = !DILocation(line: 1768, column: 58, scope: !3524)
!3705 = !DILocation(line: 1768, column: 57, scope: !3524)
!3706 = !DILocation(line: 1768, column: 65, scope: !3524)
!3707 = !DILocation(line: 1768, column: 64, scope: !3524)
!3708 = !DILocation(line: 1768, column: 7, scope: !3524)
!3709 = !DILocation(line: 1769, column: 19, scope: !3524)
!3710 = !DILocation(line: 1769, column: 28, scope: !3524)
!3711 = !DILocation(line: 1769, column: 34, scope: !3524)
!3712 = !DILocation(line: 1769, column: 38, scope: !3524)
!3713 = !DILocation(line: 1769, column: 42, scope: !3524)
!3714 = !DILocation(line: 1769, column: 51, scope: !3524)
!3715 = !DILocation(line: 1769, column: 58, scope: !3524)
!3716 = !DILocation(line: 1769, column: 65, scope: !3524)
!3717 = !DILocation(line: 1769, column: 64, scope: !3524)
!3718 = !DILocation(line: 1769, column: 7, scope: !3524)
!3719 = !DILocation(line: 1770, column: 19, scope: !3524)
!3720 = !DILocation(line: 1770, column: 28, scope: !3524)
!3721 = !DILocation(line: 1770, column: 34, scope: !3524)
!3722 = !DILocation(line: 1770, column: 38, scope: !3524)
!3723 = !DILocation(line: 1770, column: 42, scope: !3524)
!3724 = !DILocation(line: 1770, column: 51, scope: !3524)
!3725 = !DILocation(line: 1770, column: 50, scope: !3524)
!3726 = !DILocation(line: 1770, column: 58, scope: !3524)
!3727 = !DILocation(line: 1770, column: 65, scope: !3524)
!3728 = !DILocation(line: 1770, column: 64, scope: !3524)
!3729 = !DILocation(line: 1770, column: 7, scope: !3524)
!3730 = !DILocation(line: 1771, column: 19, scope: !3524)
!3731 = !DILocation(line: 1771, column: 28, scope: !3524)
!3732 = !DILocation(line: 1771, column: 34, scope: !3524)
!3733 = !DILocation(line: 1771, column: 38, scope: !3524)
!3734 = !DILocation(line: 1771, column: 42, scope: !3524)
!3735 = !DILocation(line: 1771, column: 51, scope: !3524)
!3736 = !DILocation(line: 1771, column: 50, scope: !3524)
!3737 = !DILocation(line: 1771, column: 58, scope: !3524)
!3738 = !DILocation(line: 1771, column: 57, scope: !3524)
!3739 = !DILocation(line: 1771, column: 65, scope: !3524)
!3740 = !DILocation(line: 1771, column: 7, scope: !3524)
!3741 = !DILocation(line: 1772, column: 19, scope: !3524)
!3742 = !DILocation(line: 1772, column: 28, scope: !3524)
!3743 = !DILocation(line: 1772, column: 34, scope: !3524)
!3744 = !DILocation(line: 1772, column: 38, scope: !3524)
!3745 = !DILocation(line: 1772, column: 42, scope: !3524)
!3746 = !DILocation(line: 1772, column: 51, scope: !3524)
!3747 = !DILocation(line: 1772, column: 58, scope: !3524)
!3748 = !DILocation(line: 1772, column: 57, scope: !3524)
!3749 = !DILocation(line: 1772, column: 65, scope: !3524)
!3750 = !DILocation(line: 1772, column: 7, scope: !3524)
!3751 = !DILocation(line: 1773, column: 19, scope: !3524)
!3752 = !DILocation(line: 1773, column: 28, scope: !3524)
!3753 = !DILocation(line: 1773, column: 34, scope: !3524)
!3754 = !DILocation(line: 1773, column: 38, scope: !3524)
!3755 = !DILocation(line: 1773, column: 42, scope: !3524)
!3756 = !DILocation(line: 1773, column: 51, scope: !3524)
!3757 = !DILocation(line: 1773, column: 58, scope: !3524)
!3758 = !DILocation(line: 1773, column: 65, scope: !3524)
!3759 = !DILocation(line: 1773, column: 7, scope: !3524)
!3760 = !DILocation(line: 1774, column: 19, scope: !3524)
!3761 = !DILocation(line: 1774, column: 28, scope: !3524)
!3762 = !DILocation(line: 1774, column: 34, scope: !3524)
!3763 = !DILocation(line: 1774, column: 38, scope: !3524)
!3764 = !DILocation(line: 1774, column: 42, scope: !3524)
!3765 = !DILocation(line: 1774, column: 51, scope: !3524)
!3766 = !DILocation(line: 1774, column: 50, scope: !3524)
!3767 = !DILocation(line: 1774, column: 58, scope: !3524)
!3768 = !DILocation(line: 1774, column: 65, scope: !3524)
!3769 = !DILocation(line: 1774, column: 7, scope: !3524)
!3770 = !DILocation(line: 1777, column: 14, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1777, column: 7)
!3772 = !DILocation(line: 1777, column: 12, scope: !3771)
!3773 = !DILocation(line: 1777, column: 19, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3771, file: !3, line: 1777, column: 7)
!3775 = !DILocation(line: 1777, column: 21, scope: !3774)
!3776 = !DILocation(line: 1777, column: 7, scope: !3771)
!3777 = !DILocation(line: 1778, column: 32, scope: !3774)
!3778 = !DILocation(line: 1778, column: 37, scope: !3774)
!3779 = !DILocation(line: 1778, column: 46, scope: !3774)
!3780 = !DILocation(line: 1778, column: 52, scope: !3774)
!3781 = !DILocation(line: 1778, column: 56, scope: !3774)
!3782 = !DILocation(line: 1778, column: 60, scope: !3774)
!3783 = !DILocation(line: 1778, column: 64, scope: !3774)
!3784 = !DILocation(line: 1778, column: 8, scope: !3774)
!3785 = !DILocation(line: 1777, column: 27, scope: !3774)
!3786 = !DILocation(line: 1777, column: 7, scope: !3774)
!3787 = distinct !{!3787, !3776, !3788}
!3788 = !DILocation(line: 1778, column: 66, scope: !3771)
!3789 = !DILocation(line: 1781, column: 14, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 1781, column: 7)
!3791 = !DILocation(line: 1781, column: 12, scope: !3790)
!3792 = !DILocation(line: 1781, column: 19, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 1781, column: 7)
!3794 = !DILocation(line: 1781, column: 21, scope: !3793)
!3795 = !DILocation(line: 1781, column: 7, scope: !3790)
!3796 = !DILocation(line: 1783, column: 12, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1783, column: 12)
!3798 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 1781, column: 31)
!3799 = !DILocation(line: 1783, column: 21, scope: !3797)
!3800 = !DILocation(line: 1783, column: 27, scope: !3797)
!3801 = !DILocation(line: 1783, column: 31, scope: !3797)
!3802 = !DILocation(line: 1783, column: 35, scope: !3797)
!3803 = !DILocation(line: 1783, column: 39, scope: !3797)
!3804 = !DILocation(line: 1783, column: 47, scope: !3797)
!3805 = !DILocation(line: 1783, column: 45, scope: !3797)
!3806 = !DILocation(line: 1783, column: 12, scope: !3798)
!3807 = !DILocation(line: 1783, column: 62, scope: !3797)
!3808 = !DILocation(line: 1783, column: 71, scope: !3797)
!3809 = !DILocation(line: 1783, column: 77, scope: !3797)
!3810 = !DILocation(line: 1783, column: 81, scope: !3797)
!3811 = !DILocation(line: 1783, column: 85, scope: !3797)
!3812 = !DILocation(line: 1783, column: 89, scope: !3797)
!3813 = !DILocation(line: 1783, column: 60, scope: !3797)
!3814 = !DILocation(line: 1783, column: 54, scope: !3797)
!3815 = !DILocation(line: 1784, column: 12, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1784, column: 12)
!3817 = !DILocation(line: 1784, column: 21, scope: !3816)
!3818 = !DILocation(line: 1784, column: 27, scope: !3816)
!3819 = !DILocation(line: 1784, column: 31, scope: !3816)
!3820 = !DILocation(line: 1784, column: 35, scope: !3816)
!3821 = !DILocation(line: 1784, column: 39, scope: !3816)
!3822 = !DILocation(line: 1784, column: 47, scope: !3816)
!3823 = !DILocation(line: 1784, column: 45, scope: !3816)
!3824 = !DILocation(line: 1784, column: 12, scope: !3798)
!3825 = !DILocation(line: 1784, column: 62, scope: !3816)
!3826 = !DILocation(line: 1784, column: 71, scope: !3816)
!3827 = !DILocation(line: 1784, column: 77, scope: !3816)
!3828 = !DILocation(line: 1784, column: 81, scope: !3816)
!3829 = !DILocation(line: 1784, column: 85, scope: !3816)
!3830 = !DILocation(line: 1784, column: 89, scope: !3816)
!3831 = !DILocation(line: 1784, column: 60, scope: !3816)
!3832 = !DILocation(line: 1784, column: 54, scope: !3816)
!3833 = !DILocation(line: 1785, column: 12, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1785, column: 12)
!3835 = !DILocation(line: 1785, column: 21, scope: !3834)
!3836 = !DILocation(line: 1785, column: 27, scope: !3834)
!3837 = !DILocation(line: 1785, column: 31, scope: !3834)
!3838 = !DILocation(line: 1785, column: 35, scope: !3834)
!3839 = !DILocation(line: 1785, column: 39, scope: !3834)
!3840 = !DILocation(line: 1785, column: 47, scope: !3834)
!3841 = !DILocation(line: 1785, column: 45, scope: !3834)
!3842 = !DILocation(line: 1785, column: 12, scope: !3798)
!3843 = !DILocation(line: 1785, column: 62, scope: !3834)
!3844 = !DILocation(line: 1785, column: 71, scope: !3834)
!3845 = !DILocation(line: 1785, column: 77, scope: !3834)
!3846 = !DILocation(line: 1785, column: 81, scope: !3834)
!3847 = !DILocation(line: 1785, column: 85, scope: !3834)
!3848 = !DILocation(line: 1785, column: 89, scope: !3834)
!3849 = !DILocation(line: 1785, column: 60, scope: !3834)
!3850 = !DILocation(line: 1785, column: 54, scope: !3834)
!3851 = !DILocation(line: 1787, column: 12, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1787, column: 12)
!3853 = !DILocation(line: 1787, column: 21, scope: !3852)
!3854 = !DILocation(line: 1787, column: 27, scope: !3852)
!3855 = !DILocation(line: 1787, column: 31, scope: !3852)
!3856 = !DILocation(line: 1787, column: 35, scope: !3852)
!3857 = !DILocation(line: 1787, column: 39, scope: !3852)
!3858 = !DILocation(line: 1787, column: 47, scope: !3852)
!3859 = !DILocation(line: 1787, column: 45, scope: !3852)
!3860 = !DILocation(line: 1787, column: 12, scope: !3798)
!3861 = !DILocation(line: 1787, column: 62, scope: !3852)
!3862 = !DILocation(line: 1787, column: 71, scope: !3852)
!3863 = !DILocation(line: 1787, column: 77, scope: !3852)
!3864 = !DILocation(line: 1787, column: 81, scope: !3852)
!3865 = !DILocation(line: 1787, column: 85, scope: !3852)
!3866 = !DILocation(line: 1787, column: 89, scope: !3852)
!3867 = !DILocation(line: 1787, column: 60, scope: !3852)
!3868 = !DILocation(line: 1787, column: 54, scope: !3852)
!3869 = !DILocation(line: 1788, column: 12, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1788, column: 12)
!3871 = !DILocation(line: 1788, column: 21, scope: !3870)
!3872 = !DILocation(line: 1788, column: 27, scope: !3870)
!3873 = !DILocation(line: 1788, column: 31, scope: !3870)
!3874 = !DILocation(line: 1788, column: 35, scope: !3870)
!3875 = !DILocation(line: 1788, column: 39, scope: !3870)
!3876 = !DILocation(line: 1788, column: 47, scope: !3870)
!3877 = !DILocation(line: 1788, column: 45, scope: !3870)
!3878 = !DILocation(line: 1788, column: 12, scope: !3798)
!3879 = !DILocation(line: 1788, column: 62, scope: !3870)
!3880 = !DILocation(line: 1788, column: 71, scope: !3870)
!3881 = !DILocation(line: 1788, column: 77, scope: !3870)
!3882 = !DILocation(line: 1788, column: 81, scope: !3870)
!3883 = !DILocation(line: 1788, column: 85, scope: !3870)
!3884 = !DILocation(line: 1788, column: 89, scope: !3870)
!3885 = !DILocation(line: 1788, column: 60, scope: !3870)
!3886 = !DILocation(line: 1788, column: 54, scope: !3870)
!3887 = !DILocation(line: 1789, column: 12, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 1789, column: 12)
!3889 = !DILocation(line: 1789, column: 21, scope: !3888)
!3890 = !DILocation(line: 1789, column: 27, scope: !3888)
!3891 = !DILocation(line: 1789, column: 31, scope: !3888)
!3892 = !DILocation(line: 1789, column: 35, scope: !3888)
!3893 = !DILocation(line: 1789, column: 39, scope: !3888)
!3894 = !DILocation(line: 1789, column: 47, scope: !3888)
!3895 = !DILocation(line: 1789, column: 45, scope: !3888)
!3896 = !DILocation(line: 1789, column: 12, scope: !3798)
!3897 = !DILocation(line: 1789, column: 62, scope: !3888)
!3898 = !DILocation(line: 1789, column: 71, scope: !3888)
!3899 = !DILocation(line: 1789, column: 77, scope: !3888)
!3900 = !DILocation(line: 1789, column: 81, scope: !3888)
!3901 = !DILocation(line: 1789, column: 85, scope: !3888)
!3902 = !DILocation(line: 1789, column: 89, scope: !3888)
!3903 = !DILocation(line: 1789, column: 60, scope: !3888)
!3904 = !DILocation(line: 1789, column: 54, scope: !3888)
!3905 = !DILocation(line: 1790, column: 7, scope: !3798)
!3906 = !DILocation(line: 1781, column: 27, scope: !3793)
!3907 = !DILocation(line: 1781, column: 7, scope: !3793)
!3908 = distinct !{!3908, !3795, !3909}
!3909 = !DILocation(line: 1790, column: 7, scope: !3790)
!3910 = !DILocation(line: 1794, column: 42, scope: !3524)
!3911 = !DILocation(line: 1794, column: 50, scope: !3524)
!3912 = !DILocation(line: 1794, column: 54, scope: !3524)
!3913 = !DILocation(line: 1794, column: 48, scope: !3524)
!3914 = !DILocation(line: 1794, column: 7, scope: !3524)
!3915 = !DILocation(line: 1794, column: 16, scope: !3524)
!3916 = !DILocation(line: 1794, column: 22, scope: !3524)
!3917 = !DILocation(line: 1794, column: 26, scope: !3524)
!3918 = !DILocation(line: 1794, column: 30, scope: !3524)
!3919 = !DILocation(line: 1794, column: 40, scope: !3524)
!3920 = !DILocation(line: 1795, column: 42, scope: !3524)
!3921 = !DILocation(line: 1795, column: 50, scope: !3524)
!3922 = !DILocation(line: 1795, column: 54, scope: !3524)
!3923 = !DILocation(line: 1795, column: 48, scope: !3524)
!3924 = !DILocation(line: 1795, column: 7, scope: !3524)
!3925 = !DILocation(line: 1795, column: 16, scope: !3524)
!3926 = !DILocation(line: 1795, column: 22, scope: !3524)
!3927 = !DILocation(line: 1795, column: 26, scope: !3524)
!3928 = !DILocation(line: 1795, column: 30, scope: !3524)
!3929 = !DILocation(line: 1795, column: 40, scope: !3524)
!3930 = !DILocation(line: 1796, column: 42, scope: !3524)
!3931 = !DILocation(line: 1796, column: 50, scope: !3524)
!3932 = !DILocation(line: 1796, column: 54, scope: !3524)
!3933 = !DILocation(line: 1796, column: 48, scope: !3524)
!3934 = !DILocation(line: 1796, column: 7, scope: !3524)
!3935 = !DILocation(line: 1796, column: 16, scope: !3524)
!3936 = !DILocation(line: 1796, column: 22, scope: !3524)
!3937 = !DILocation(line: 1796, column: 26, scope: !3524)
!3938 = !DILocation(line: 1796, column: 30, scope: !3524)
!3939 = !DILocation(line: 1796, column: 40, scope: !3524)
!3940 = !DILocation(line: 1798, column: 42, scope: !3524)
!3941 = !DILocation(line: 1798, column: 50, scope: !3524)
!3942 = !DILocation(line: 1798, column: 54, scope: !3524)
!3943 = !DILocation(line: 1798, column: 48, scope: !3524)
!3944 = !DILocation(line: 1798, column: 7, scope: !3524)
!3945 = !DILocation(line: 1798, column: 16, scope: !3524)
!3946 = !DILocation(line: 1798, column: 22, scope: !3524)
!3947 = !DILocation(line: 1798, column: 26, scope: !3524)
!3948 = !DILocation(line: 1798, column: 30, scope: !3524)
!3949 = !DILocation(line: 1798, column: 40, scope: !3524)
!3950 = !DILocation(line: 1799, column: 42, scope: !3524)
!3951 = !DILocation(line: 1799, column: 50, scope: !3524)
!3952 = !DILocation(line: 1799, column: 54, scope: !3524)
!3953 = !DILocation(line: 1799, column: 48, scope: !3524)
!3954 = !DILocation(line: 1799, column: 7, scope: !3524)
!3955 = !DILocation(line: 1799, column: 16, scope: !3524)
!3956 = !DILocation(line: 1799, column: 22, scope: !3524)
!3957 = !DILocation(line: 1799, column: 26, scope: !3524)
!3958 = !DILocation(line: 1799, column: 30, scope: !3524)
!3959 = !DILocation(line: 1799, column: 40, scope: !3524)
!3960 = !DILocation(line: 1800, column: 42, scope: !3524)
!3961 = !DILocation(line: 1800, column: 50, scope: !3524)
!3962 = !DILocation(line: 1800, column: 54, scope: !3524)
!3963 = !DILocation(line: 1800, column: 48, scope: !3524)
!3964 = !DILocation(line: 1800, column: 7, scope: !3524)
!3965 = !DILocation(line: 1800, column: 16, scope: !3524)
!3966 = !DILocation(line: 1800, column: 22, scope: !3524)
!3967 = !DILocation(line: 1800, column: 26, scope: !3524)
!3968 = !DILocation(line: 1800, column: 30, scope: !3524)
!3969 = !DILocation(line: 1800, column: 40, scope: !3524)
!3970 = !DILocation(line: 1802, column: 8, scope: !3524)
!3971 = !DILocation(line: 1803, column: 6, scope: !3524)
!3972 = !DILocation(line: 1804, column: 11, scope: !3519)
!3973 = !DILocation(line: 1804, column: 15, scope: !3519)
!3974 = !DILocation(line: 1804, column: 9, scope: !3519)
!3975 = distinct !{!3975, !3514, !3976}
!3976 = !DILocation(line: 1805, column: 5, scope: !3515)
!3977 = !DILocation(line: 1807, column: 3, scope: !3395)
!3978 = distinct !{!3978, !3385, !3979}
!3979 = !DILocation(line: 1808, column: 2, scope: !3326)
!3980 = !DILocation(line: 1812, column: 10, scope: !3326)
!3981 = !DILocation(line: 1813, column: 9, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 1813, column: 2)
!3983 = !DILocation(line: 1813, column: 7, scope: !3982)
!3984 = !DILocation(line: 1813, column: 14, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 1813, column: 2)
!3986 = !DILocation(line: 1813, column: 18, scope: !3985)
!3987 = !DILocation(line: 1813, column: 27, scope: !3985)
!3988 = !DILocation(line: 1813, column: 16, scope: !3985)
!3989 = !DILocation(line: 1813, column: 2, scope: !3982)
!3990 = !DILocation(line: 1815, column: 12, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1813, column: 41)
!3992 = !DILocation(line: 1815, column: 21, scope: !3991)
!3993 = !DILocation(line: 1815, column: 27, scope: !3991)
!3994 = !DILocation(line: 1815, column: 31, scope: !3991)
!3995 = !DILocation(line: 1815, column: 35, scope: !3991)
!3996 = !DILocation(line: 1815, column: 44, scope: !3991)
!3997 = !DILocation(line: 1815, column: 50, scope: !3991)
!3998 = !DILocation(line: 1815, column: 54, scope: !3991)
!3999 = !DILocation(line: 1815, column: 33, scope: !3991)
!4000 = !DILocation(line: 1815, column: 60, scope: !3991)
!4001 = !DILocation(line: 1815, column: 69, scope: !3991)
!4002 = !DILocation(line: 1815, column: 75, scope: !3991)
!4003 = !DILocation(line: 1815, column: 79, scope: !3991)
!4004 = !DILocation(line: 1815, column: 58, scope: !3991)
!4005 = !DILocation(line: 1815, column: 3, scope: !3991)
!4006 = !DILocation(line: 1815, column: 10, scope: !3991)
!4007 = !DILocation(line: 1816, column: 12, scope: !3991)
!4008 = !DILocation(line: 1816, column: 21, scope: !3991)
!4009 = !DILocation(line: 1816, column: 27, scope: !3991)
!4010 = !DILocation(line: 1816, column: 31, scope: !3991)
!4011 = !DILocation(line: 1816, column: 35, scope: !3991)
!4012 = !DILocation(line: 1816, column: 44, scope: !3991)
!4013 = !DILocation(line: 1816, column: 50, scope: !3991)
!4014 = !DILocation(line: 1816, column: 54, scope: !3991)
!4015 = !DILocation(line: 1816, column: 33, scope: !3991)
!4016 = !DILocation(line: 1816, column: 60, scope: !3991)
!4017 = !DILocation(line: 1816, column: 69, scope: !3991)
!4018 = !DILocation(line: 1816, column: 75, scope: !3991)
!4019 = !DILocation(line: 1816, column: 79, scope: !3991)
!4020 = !DILocation(line: 1816, column: 58, scope: !3991)
!4021 = !DILocation(line: 1816, column: 3, scope: !3991)
!4022 = !DILocation(line: 1816, column: 10, scope: !3991)
!4023 = !DILocation(line: 1817, column: 12, scope: !3991)
!4024 = !DILocation(line: 1817, column: 21, scope: !3991)
!4025 = !DILocation(line: 1817, column: 27, scope: !3991)
!4026 = !DILocation(line: 1817, column: 31, scope: !3991)
!4027 = !DILocation(line: 1817, column: 35, scope: !3991)
!4028 = !DILocation(line: 1817, column: 44, scope: !3991)
!4029 = !DILocation(line: 1817, column: 50, scope: !3991)
!4030 = !DILocation(line: 1817, column: 54, scope: !3991)
!4031 = !DILocation(line: 1817, column: 33, scope: !3991)
!4032 = !DILocation(line: 1817, column: 60, scope: !3991)
!4033 = !DILocation(line: 1817, column: 69, scope: !3991)
!4034 = !DILocation(line: 1817, column: 75, scope: !3991)
!4035 = !DILocation(line: 1817, column: 79, scope: !3991)
!4036 = !DILocation(line: 1817, column: 58, scope: !3991)
!4037 = !DILocation(line: 1817, column: 3, scope: !3991)
!4038 = !DILocation(line: 1817, column: 10, scope: !3991)
!4039 = !DILocation(line: 1819, column: 16, scope: !3991)
!4040 = !DILocation(line: 1819, column: 25, scope: !3991)
!4041 = !DILocation(line: 1819, column: 31, scope: !3991)
!4042 = !DILocation(line: 1819, column: 35, scope: !3991)
!4043 = !DILocation(line: 1819, column: 3, scope: !3991)
!4044 = !DILocation(line: 1821, column: 16, scope: !3991)
!4045 = !DILocation(line: 1821, column: 10, scope: !3991)
!4046 = !DILocation(line: 1821, column: 8, scope: !3991)
!4047 = !DILocation(line: 1822, column: 7, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 1822, column: 7)
!4049 = !DILocation(line: 1822, column: 14, scope: !4048)
!4050 = !DILocation(line: 1822, column: 12, scope: !4048)
!4051 = !DILocation(line: 1822, column: 7, scope: !3991)
!4052 = !DILocation(line: 1822, column: 33, scope: !4048)
!4053 = !DILocation(line: 1822, column: 31, scope: !4048)
!4054 = !DILocation(line: 1822, column: 23, scope: !4048)
!4055 = !DILocation(line: 1823, column: 16, scope: !3991)
!4056 = !DILocation(line: 1823, column: 10, scope: !3991)
!4057 = !DILocation(line: 1823, column: 8, scope: !3991)
!4058 = !DILocation(line: 1824, column: 7, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 1824, column: 7)
!4060 = !DILocation(line: 1824, column: 14, scope: !4059)
!4061 = !DILocation(line: 1824, column: 12, scope: !4059)
!4062 = !DILocation(line: 1824, column: 7, scope: !3991)
!4063 = !DILocation(line: 1824, column: 33, scope: !4059)
!4064 = !DILocation(line: 1824, column: 31, scope: !4059)
!4065 = !DILocation(line: 1824, column: 23, scope: !4059)
!4066 = !DILocation(line: 1825, column: 16, scope: !3991)
!4067 = !DILocation(line: 1825, column: 10, scope: !3991)
!4068 = !DILocation(line: 1825, column: 8, scope: !3991)
!4069 = !DILocation(line: 1826, column: 7, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 1826, column: 7)
!4071 = !DILocation(line: 1826, column: 14, scope: !4070)
!4072 = !DILocation(line: 1826, column: 12, scope: !4070)
!4073 = !DILocation(line: 1826, column: 7, scope: !3991)
!4074 = !DILocation(line: 1826, column: 33, scope: !4070)
!4075 = !DILocation(line: 1826, column: 31, scope: !4070)
!4076 = !DILocation(line: 1826, column: 23, scope: !4070)
!4077 = !DILocation(line: 1828, column: 12, scope: !3991)
!4078 = !DILocation(line: 1828, column: 21, scope: !3991)
!4079 = !DILocation(line: 1828, column: 27, scope: !3991)
!4080 = !DILocation(line: 1828, column: 31, scope: !3991)
!4081 = !DILocation(line: 1828, column: 35, scope: !3991)
!4082 = !DILocation(line: 1828, column: 44, scope: !3991)
!4083 = !DILocation(line: 1828, column: 50, scope: !3991)
!4084 = !DILocation(line: 1828, column: 54, scope: !3991)
!4085 = !DILocation(line: 1828, column: 33, scope: !3991)
!4086 = !DILocation(line: 1828, column: 3, scope: !3991)
!4087 = !DILocation(line: 1828, column: 10, scope: !3991)
!4088 = !DILocation(line: 1829, column: 12, scope: !3991)
!4089 = !DILocation(line: 1829, column: 21, scope: !3991)
!4090 = !DILocation(line: 1829, column: 27, scope: !3991)
!4091 = !DILocation(line: 1829, column: 31, scope: !3991)
!4092 = !DILocation(line: 1829, column: 35, scope: !3991)
!4093 = !DILocation(line: 1829, column: 44, scope: !3991)
!4094 = !DILocation(line: 1829, column: 50, scope: !3991)
!4095 = !DILocation(line: 1829, column: 54, scope: !3991)
!4096 = !DILocation(line: 1829, column: 33, scope: !3991)
!4097 = !DILocation(line: 1829, column: 3, scope: !3991)
!4098 = !DILocation(line: 1829, column: 10, scope: !3991)
!4099 = !DILocation(line: 1830, column: 12, scope: !3991)
!4100 = !DILocation(line: 1830, column: 21, scope: !3991)
!4101 = !DILocation(line: 1830, column: 27, scope: !3991)
!4102 = !DILocation(line: 1830, column: 31, scope: !3991)
!4103 = !DILocation(line: 1830, column: 35, scope: !3991)
!4104 = !DILocation(line: 1830, column: 44, scope: !3991)
!4105 = !DILocation(line: 1830, column: 50, scope: !3991)
!4106 = !DILocation(line: 1830, column: 54, scope: !3991)
!4107 = !DILocation(line: 1830, column: 33, scope: !3991)
!4108 = !DILocation(line: 1830, column: 3, scope: !3991)
!4109 = !DILocation(line: 1830, column: 10, scope: !3991)
!4110 = !DILocation(line: 1832, column: 16, scope: !3991)
!4111 = !DILocation(line: 1832, column: 25, scope: !3991)
!4112 = !DILocation(line: 1832, column: 31, scope: !3991)
!4113 = !DILocation(line: 1832, column: 35, scope: !3991)
!4114 = !DILocation(line: 1832, column: 3, scope: !3991)
!4115 = !DILocation(line: 1834, column: 16, scope: !3991)
!4116 = !DILocation(line: 1834, column: 10, scope: !3991)
!4117 = !DILocation(line: 1834, column: 8, scope: !3991)
!4118 = !DILocation(line: 1835, column: 7, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 1835, column: 7)
!4120 = !DILocation(line: 1835, column: 14, scope: !4119)
!4121 = !DILocation(line: 1835, column: 12, scope: !4119)
!4122 = !DILocation(line: 1835, column: 7, scope: !3991)
!4123 = !DILocation(line: 1835, column: 33, scope: !4119)
!4124 = !DILocation(line: 1835, column: 31, scope: !4119)
!4125 = !DILocation(line: 1835, column: 23, scope: !4119)
!4126 = !DILocation(line: 1836, column: 16, scope: !3991)
!4127 = !DILocation(line: 1836, column: 10, scope: !3991)
!4128 = !DILocation(line: 1836, column: 8, scope: !3991)
!4129 = !DILocation(line: 1837, column: 7, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 1837, column: 7)
!4131 = !DILocation(line: 1837, column: 14, scope: !4130)
!4132 = !DILocation(line: 1837, column: 12, scope: !4130)
!4133 = !DILocation(line: 1837, column: 7, scope: !3991)
!4134 = !DILocation(line: 1837, column: 33, scope: !4130)
!4135 = !DILocation(line: 1837, column: 31, scope: !4130)
!4136 = !DILocation(line: 1837, column: 23, scope: !4130)
!4137 = !DILocation(line: 1838, column: 16, scope: !3991)
!4138 = !DILocation(line: 1838, column: 10, scope: !3991)
!4139 = !DILocation(line: 1838, column: 8, scope: !3991)
!4140 = !DILocation(line: 1839, column: 7, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 1839, column: 7)
!4142 = !DILocation(line: 1839, column: 14, scope: !4141)
!4143 = !DILocation(line: 1839, column: 12, scope: !4141)
!4144 = !DILocation(line: 1839, column: 7, scope: !3991)
!4145 = !DILocation(line: 1839, column: 33, scope: !4141)
!4146 = !DILocation(line: 1839, column: 31, scope: !4141)
!4147 = !DILocation(line: 1839, column: 23, scope: !4141)
!4148 = !DILocation(line: 1840, column: 2, scope: !3991)
!4149 = !DILocation(line: 1813, column: 37, scope: !3985)
!4150 = !DILocation(line: 1813, column: 2, scope: !3985)
!4151 = distinct !{!4151, !3989, !4152}
!4152 = !DILocation(line: 1840, column: 2, scope: !3982)
!4153 = !DILocation(line: 1842, column: 9, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 1842, column: 2)
!4155 = !DILocation(line: 1842, column: 7, scope: !4154)
!4156 = !DILocation(line: 1842, column: 14, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 1842, column: 2)
!4158 = !DILocation(line: 1842, column: 18, scope: !4157)
!4159 = !DILocation(line: 1842, column: 27, scope: !4157)
!4160 = !DILocation(line: 1842, column: 16, scope: !4157)
!4161 = !DILocation(line: 1842, column: 2, scope: !4154)
!4162 = !DILocation(line: 1843, column: 31, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 1842, column: 41)
!4164 = !DILocation(line: 1843, column: 40, scope: !4163)
!4165 = !DILocation(line: 1843, column: 46, scope: !4163)
!4166 = !DILocation(line: 1843, column: 57, scope: !4163)
!4167 = !DILocation(line: 1843, column: 55, scope: !4163)
!4168 = !DILocation(line: 1843, column: 73, scope: !4163)
!4169 = !DILocation(line: 1843, column: 71, scope: !4163)
!4170 = !DILocation(line: 1843, column: 89, scope: !4163)
!4171 = !DILocation(line: 1843, column: 87, scope: !4163)
!4172 = !DILocation(line: 1843, column: 22, scope: !4163)
!4173 = !DILocation(line: 1843, column: 3, scope: !4163)
!4174 = !DILocation(line: 1843, column: 12, scope: !4163)
!4175 = !DILocation(line: 1843, column: 19, scope: !4163)
!4176 = !DILocation(line: 1844, column: 2, scope: !4163)
!4177 = !DILocation(line: 1842, column: 37, scope: !4157)
!4178 = !DILocation(line: 1842, column: 2, scope: !4157)
!4179 = distinct !{!4179, !4161, !4180}
!4180 = !DILocation(line: 1844, column: 2, scope: !4154)
!4181 = !DILocation(line: 1846, column: 9, scope: !3326)
!4182 = !DILocation(line: 1846, column: 2, scope: !3326)
!4183 = distinct !DISubprogram(name: "init_metaball_octal_tree", scope: !3, file: !3, line: 2151, type: !4184, scopeLine: 2152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{null, !3191, !78}
!4186 = !DILocalVariable(name: "process", arg: 1, scope: !4183, file: !3, line: 2151, type: !3191)
!4187 = !DILocation(line: 2151, column: 47, scope: !4183)
!4188 = !DILocalVariable(name: "depth", arg: 2, scope: !4183, file: !3, line: 2151, type: !78)
!4189 = !DILocation(line: 2151, column: 60, scope: !4183)
!4190 = !DILocalVariable(name: "node", scope: !4183, file: !3, line: 2153, type: !2849)
!4191 = !DILocation(line: 2153, column: 21, scope: !4183)
!4192 = !DILocalVariable(name: "ml_p", scope: !4183, file: !3, line: 2154, type: !4193)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4194 = !DIDerivedType(tag: DW_TAG_typedef, name: "ml_pointer", file: !3, line: 121, baseType: !4195)
!4195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ml_pointer", file: !3, line: 118, size: 192, elements: !4196)
!4196 = !{!4197, !4199, !4200}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4195, file: !3, line: 119, baseType: !4198, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4195, file: !3, line: 119, baseType: !4198, size: 64, offset: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "ml", scope: !4195, file: !3, line: 120, baseType: !1622, size: 64, offset: 128)
!4201 = !DILocation(line: 2154, column: 14, scope: !4183)
!4202 = !DILocalVariable(name: "size", scope: !4183, file: !3, line: 2155, type: !172)
!4203 = !DILocation(line: 2155, column: 8, scope: !4183)
!4204 = !DILocalVariable(name: "a", scope: !4183, file: !3, line: 2156, type: !78)
!4205 = !DILocation(line: 2156, column: 6, scope: !4183)
!4206 = !DILocation(line: 2158, column: 27, scope: !4183)
!4207 = !DILocation(line: 2158, column: 2, scope: !4183)
!4208 = !DILocation(line: 2158, column: 11, scope: !4183)
!4209 = !DILocation(line: 2158, column: 25, scope: !4183)
!4210 = !DILocation(line: 2159, column: 41, scope: !4183)
!4211 = !DILocation(line: 2159, column: 39, scope: !4183)
!4212 = !DILocation(line: 2159, column: 2, scope: !4183)
!4213 = !DILocation(line: 2159, column: 11, scope: !4183)
!4214 = !DILocation(line: 2159, column: 26, scope: !4183)
!4215 = !DILocation(line: 2159, column: 32, scope: !4183)
!4216 = !DILocation(line: 2161, column: 34, scope: !4183)
!4217 = !DILocation(line: 2161, column: 2, scope: !4183)
!4218 = !DILocation(line: 2161, column: 11, scope: !4183)
!4219 = !DILocation(line: 2161, column: 26, scope: !4183)
!4220 = !DILocation(line: 2161, column: 32, scope: !4183)
!4221 = !DILocation(line: 2163, column: 32, scope: !4183)
!4222 = !DILocation(line: 2163, column: 38, scope: !4183)
!4223 = !DILocation(line: 2163, column: 42, scope: !4183)
!4224 = !DILocation(line: 2163, column: 2, scope: !4183)
!4225 = !DILocation(line: 2163, column: 11, scope: !4183)
!4226 = !DILocation(line: 2163, column: 26, scope: !4183)
!4227 = !DILocation(line: 2163, column: 30, scope: !4183)
!4228 = !DILocation(line: 2164, column: 32, scope: !4183)
!4229 = !DILocation(line: 2164, column: 38, scope: !4183)
!4230 = !DILocation(line: 2164, column: 42, scope: !4183)
!4231 = !DILocation(line: 2164, column: 2, scope: !4183)
!4232 = !DILocation(line: 2164, column: 11, scope: !4183)
!4233 = !DILocation(line: 2164, column: 26, scope: !4183)
!4234 = !DILocation(line: 2164, column: 30, scope: !4183)
!4235 = !DILocation(line: 2166, column: 22, scope: !4183)
!4236 = !DILocation(line: 2166, column: 28, scope: !4183)
!4237 = !DILocation(line: 2166, column: 2, scope: !4183)
!4238 = !DILocation(line: 2167, column: 2, scope: !4183)
!4239 = !DILocation(line: 2167, column: 8, scope: !4183)
!4240 = !DILocation(line: 2167, column: 14, scope: !4183)
!4241 = !DILocation(line: 2169, column: 9, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 2169, column: 2)
!4243 = !DILocation(line: 2169, column: 7, scope: !4242)
!4244 = !DILocation(line: 2169, column: 14, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 2169, column: 2)
!4246 = !DILocation(line: 2169, column: 16, scope: !4245)
!4247 = !DILocation(line: 2169, column: 2, scope: !4242)
!4248 = !DILocation(line: 2170, column: 3, scope: !4245)
!4249 = !DILocation(line: 2170, column: 9, scope: !4245)
!4250 = !DILocation(line: 2170, column: 15, scope: !4245)
!4251 = !DILocation(line: 2170, column: 18, scope: !4245)
!4252 = !DILocation(line: 2169, column: 22, scope: !4245)
!4253 = !DILocation(line: 2169, column: 2, scope: !4245)
!4254 = distinct !{!4254, !4247, !4255}
!4255 = !DILocation(line: 2170, column: 20, scope: !4242)
!4256 = !DILocation(line: 2172, column: 30, scope: !4183)
!4257 = !DILocation(line: 2172, column: 36, scope: !4183)
!4258 = !DILocation(line: 2172, column: 42, scope: !4183)
!4259 = !DILocation(line: 2172, column: 16, scope: !4183)
!4260 = !DILocation(line: 2172, column: 22, scope: !4183)
!4261 = !DILocation(line: 2172, column: 28, scope: !4183)
!4262 = !DILocation(line: 2172, column: 2, scope: !4183)
!4263 = !DILocation(line: 2172, column: 8, scope: !4183)
!4264 = !DILocation(line: 2172, column: 14, scope: !4183)
!4265 = !DILocation(line: 2173, column: 30, scope: !4183)
!4266 = !DILocation(line: 2173, column: 36, scope: !4183)
!4267 = !DILocation(line: 2173, column: 42, scope: !4183)
!4268 = !DILocation(line: 2173, column: 16, scope: !4183)
!4269 = !DILocation(line: 2173, column: 22, scope: !4183)
!4270 = !DILocation(line: 2173, column: 28, scope: !4183)
!4271 = !DILocation(line: 2173, column: 2, scope: !4183)
!4272 = !DILocation(line: 2173, column: 8, scope: !4183)
!4273 = !DILocation(line: 2173, column: 14, scope: !4183)
!4274 = !DILocation(line: 2176, column: 9, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 2176, column: 2)
!4276 = !DILocation(line: 2176, column: 7, scope: !4275)
!4277 = !DILocation(line: 2176, column: 14, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 2176, column: 2)
!4279 = !DILocation(line: 2176, column: 18, scope: !4278)
!4280 = !DILocation(line: 2176, column: 27, scope: !4278)
!4281 = !DILocation(line: 2176, column: 16, scope: !4278)
!4282 = !DILocation(line: 2176, column: 2, scope: !4275)
!4283 = !DILocation(line: 2177, column: 7, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 2177, column: 7)
!4285 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 2176, column: 41)
!4286 = !DILocation(line: 2177, column: 16, scope: !4284)
!4287 = !DILocation(line: 2177, column: 22, scope: !4284)
!4288 = !DILocation(line: 2177, column: 26, scope: !4284)
!4289 = !DILocation(line: 2177, column: 30, scope: !4284)
!4290 = !DILocation(line: 2177, column: 42, scope: !4284)
!4291 = !DILocation(line: 2177, column: 48, scope: !4284)
!4292 = !DILocation(line: 2177, column: 40, scope: !4284)
!4293 = !DILocation(line: 2177, column: 7, scope: !4285)
!4294 = !DILocation(line: 2177, column: 69, scope: !4284)
!4295 = !DILocation(line: 2177, column: 78, scope: !4284)
!4296 = !DILocation(line: 2177, column: 84, scope: !4284)
!4297 = !DILocation(line: 2177, column: 88, scope: !4284)
!4298 = !DILocation(line: 2177, column: 92, scope: !4284)
!4299 = !DILocation(line: 2177, column: 55, scope: !4284)
!4300 = !DILocation(line: 2177, column: 61, scope: !4284)
!4301 = !DILocation(line: 2177, column: 67, scope: !4284)
!4302 = !DILocation(line: 2178, column: 7, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 2178, column: 7)
!4304 = !DILocation(line: 2178, column: 16, scope: !4303)
!4305 = !DILocation(line: 2178, column: 22, scope: !4303)
!4306 = !DILocation(line: 2178, column: 26, scope: !4303)
!4307 = !DILocation(line: 2178, column: 30, scope: !4303)
!4308 = !DILocation(line: 2178, column: 42, scope: !4303)
!4309 = !DILocation(line: 2178, column: 48, scope: !4303)
!4310 = !DILocation(line: 2178, column: 40, scope: !4303)
!4311 = !DILocation(line: 2178, column: 7, scope: !4285)
!4312 = !DILocation(line: 2178, column: 69, scope: !4303)
!4313 = !DILocation(line: 2178, column: 78, scope: !4303)
!4314 = !DILocation(line: 2178, column: 84, scope: !4303)
!4315 = !DILocation(line: 2178, column: 88, scope: !4303)
!4316 = !DILocation(line: 2178, column: 92, scope: !4303)
!4317 = !DILocation(line: 2178, column: 55, scope: !4303)
!4318 = !DILocation(line: 2178, column: 61, scope: !4303)
!4319 = !DILocation(line: 2178, column: 67, scope: !4303)
!4320 = !DILocation(line: 2179, column: 7, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 2179, column: 7)
!4322 = !DILocation(line: 2179, column: 16, scope: !4321)
!4323 = !DILocation(line: 2179, column: 22, scope: !4321)
!4324 = !DILocation(line: 2179, column: 26, scope: !4321)
!4325 = !DILocation(line: 2179, column: 30, scope: !4321)
!4326 = !DILocation(line: 2179, column: 42, scope: !4321)
!4327 = !DILocation(line: 2179, column: 48, scope: !4321)
!4328 = !DILocation(line: 2179, column: 40, scope: !4321)
!4329 = !DILocation(line: 2179, column: 7, scope: !4285)
!4330 = !DILocation(line: 2179, column: 69, scope: !4321)
!4331 = !DILocation(line: 2179, column: 78, scope: !4321)
!4332 = !DILocation(line: 2179, column: 84, scope: !4321)
!4333 = !DILocation(line: 2179, column: 88, scope: !4321)
!4334 = !DILocation(line: 2179, column: 92, scope: !4321)
!4335 = !DILocation(line: 2179, column: 55, scope: !4321)
!4336 = !DILocation(line: 2179, column: 61, scope: !4321)
!4337 = !DILocation(line: 2179, column: 67, scope: !4321)
!4338 = !DILocation(line: 2181, column: 7, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 2181, column: 7)
!4340 = !DILocation(line: 2181, column: 16, scope: !4339)
!4341 = !DILocation(line: 2181, column: 22, scope: !4339)
!4342 = !DILocation(line: 2181, column: 26, scope: !4339)
!4343 = !DILocation(line: 2181, column: 30, scope: !4339)
!4344 = !DILocation(line: 2181, column: 42, scope: !4339)
!4345 = !DILocation(line: 2181, column: 48, scope: !4339)
!4346 = !DILocation(line: 2181, column: 40, scope: !4339)
!4347 = !DILocation(line: 2181, column: 7, scope: !4285)
!4348 = !DILocation(line: 2181, column: 69, scope: !4339)
!4349 = !DILocation(line: 2181, column: 78, scope: !4339)
!4350 = !DILocation(line: 2181, column: 84, scope: !4339)
!4351 = !DILocation(line: 2181, column: 88, scope: !4339)
!4352 = !DILocation(line: 2181, column: 92, scope: !4339)
!4353 = !DILocation(line: 2181, column: 55, scope: !4339)
!4354 = !DILocation(line: 2181, column: 61, scope: !4339)
!4355 = !DILocation(line: 2181, column: 67, scope: !4339)
!4356 = !DILocation(line: 2182, column: 7, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 2182, column: 7)
!4358 = !DILocation(line: 2182, column: 16, scope: !4357)
!4359 = !DILocation(line: 2182, column: 22, scope: !4357)
!4360 = !DILocation(line: 2182, column: 26, scope: !4357)
!4361 = !DILocation(line: 2182, column: 30, scope: !4357)
!4362 = !DILocation(line: 2182, column: 42, scope: !4357)
!4363 = !DILocation(line: 2182, column: 48, scope: !4357)
!4364 = !DILocation(line: 2182, column: 40, scope: !4357)
!4365 = !DILocation(line: 2182, column: 7, scope: !4285)
!4366 = !DILocation(line: 2182, column: 69, scope: !4357)
!4367 = !DILocation(line: 2182, column: 78, scope: !4357)
!4368 = !DILocation(line: 2182, column: 84, scope: !4357)
!4369 = !DILocation(line: 2182, column: 88, scope: !4357)
!4370 = !DILocation(line: 2182, column: 92, scope: !4357)
!4371 = !DILocation(line: 2182, column: 55, scope: !4357)
!4372 = !DILocation(line: 2182, column: 61, scope: !4357)
!4373 = !DILocation(line: 2182, column: 67, scope: !4357)
!4374 = !DILocation(line: 2183, column: 7, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 2183, column: 7)
!4376 = !DILocation(line: 2183, column: 16, scope: !4375)
!4377 = !DILocation(line: 2183, column: 22, scope: !4375)
!4378 = !DILocation(line: 2183, column: 26, scope: !4375)
!4379 = !DILocation(line: 2183, column: 30, scope: !4375)
!4380 = !DILocation(line: 2183, column: 42, scope: !4375)
!4381 = !DILocation(line: 2183, column: 48, scope: !4375)
!4382 = !DILocation(line: 2183, column: 40, scope: !4375)
!4383 = !DILocation(line: 2183, column: 7, scope: !4285)
!4384 = !DILocation(line: 2183, column: 69, scope: !4375)
!4385 = !DILocation(line: 2183, column: 78, scope: !4375)
!4386 = !DILocation(line: 2183, column: 84, scope: !4375)
!4387 = !DILocation(line: 2183, column: 88, scope: !4375)
!4388 = !DILocation(line: 2183, column: 92, scope: !4375)
!4389 = !DILocation(line: 2183, column: 55, scope: !4375)
!4390 = !DILocation(line: 2183, column: 61, scope: !4375)
!4391 = !DILocation(line: 2183, column: 67, scope: !4375)
!4392 = !DILocation(line: 2185, column: 10, scope: !4285)
!4393 = !DILocation(line: 2185, column: 8, scope: !4285)
!4394 = !DILocation(line: 2186, column: 14, scope: !4285)
!4395 = !DILocation(line: 2186, column: 23, scope: !4285)
!4396 = !DILocation(line: 2186, column: 29, scope: !4285)
!4397 = !DILocation(line: 2186, column: 3, scope: !4285)
!4398 = !DILocation(line: 2186, column: 9, scope: !4285)
!4399 = !DILocation(line: 2186, column: 12, scope: !4285)
!4400 = !DILocation(line: 2187, column: 16, scope: !4285)
!4401 = !DILocation(line: 2187, column: 22, scope: !4285)
!4402 = !DILocation(line: 2187, column: 29, scope: !4285)
!4403 = !DILocation(line: 2187, column: 3, scope: !4285)
!4404 = !DILocation(line: 2189, column: 8, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 2189, column: 7)
!4406 = !DILocation(line: 2189, column: 17, scope: !4405)
!4407 = !DILocation(line: 2189, column: 23, scope: !4405)
!4408 = !DILocation(line: 2189, column: 27, scope: !4405)
!4409 = !DILocation(line: 2189, column: 32, scope: !4405)
!4410 = !DILocation(line: 2189, column: 47, scope: !4405)
!4411 = !DILocation(line: 2189, column: 7, scope: !4285)
!4412 = !DILocation(line: 2191, column: 4, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 2189, column: 53)
!4414 = !DILocation(line: 2191, column: 13, scope: !4413)
!4415 = !DILocation(line: 2191, column: 28, scope: !4413)
!4416 = !DILocation(line: 2191, column: 31, scope: !4413)
!4417 = !DILocation(line: 2192, column: 3, scope: !4413)
!4418 = !DILocation(line: 2195, column: 4, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 2193, column: 8)
!4420 = !DILocation(line: 2195, column: 13, scope: !4419)
!4421 = !DILocation(line: 2195, column: 28, scope: !4419)
!4422 = !DILocation(line: 2195, column: 31, scope: !4419)
!4423 = !DILocation(line: 2197, column: 2, scope: !4285)
!4424 = !DILocation(line: 2176, column: 37, scope: !4278)
!4425 = !DILocation(line: 2176, column: 2, scope: !4278)
!4426 = distinct !{!4426, !4282, !4427}
!4427 = !DILocation(line: 2197, column: 2, scope: !4275)
!4428 = !DILocation(line: 2200, column: 12, scope: !4183)
!4429 = !DILocation(line: 2200, column: 18, scope: !4183)
!4430 = !DILocation(line: 2200, column: 26, scope: !4183)
!4431 = !DILocation(line: 2200, column: 32, scope: !4183)
!4432 = !DILocation(line: 2200, column: 24, scope: !4183)
!4433 = !DILocation(line: 2200, column: 2, scope: !4183)
!4434 = !DILocation(line: 2200, column: 10, scope: !4183)
!4435 = !DILocation(line: 2201, column: 12, scope: !4183)
!4436 = !DILocation(line: 2201, column: 18, scope: !4183)
!4437 = !DILocation(line: 2201, column: 26, scope: !4183)
!4438 = !DILocation(line: 2201, column: 32, scope: !4183)
!4439 = !DILocation(line: 2201, column: 24, scope: !4183)
!4440 = !DILocation(line: 2201, column: 2, scope: !4183)
!4441 = !DILocation(line: 2201, column: 10, scope: !4183)
!4442 = !DILocation(line: 2202, column: 12, scope: !4183)
!4443 = !DILocation(line: 2202, column: 18, scope: !4183)
!4444 = !DILocation(line: 2202, column: 26, scope: !4183)
!4445 = !DILocation(line: 2202, column: 32, scope: !4183)
!4446 = !DILocation(line: 2202, column: 24, scope: !4183)
!4447 = !DILocation(line: 2202, column: 2, scope: !4183)
!4448 = !DILocation(line: 2202, column: 10, scope: !4183)
!4449 = !DILocation(line: 2205, column: 32, scope: !4183)
!4450 = !DILocation(line: 2205, column: 38, scope: !4183)
!4451 = !DILocation(line: 2205, column: 47, scope: !4183)
!4452 = !DILocation(line: 2205, column: 56, scope: !4183)
!4453 = !DILocation(line: 2205, column: 65, scope: !4183)
!4454 = !DILocation(line: 2205, column: 74, scope: !4183)
!4455 = !DILocation(line: 2205, column: 89, scope: !4183)
!4456 = !DILocation(line: 2205, column: 2, scope: !4183)
!4457 = !DILocation(line: 2206, column: 1, scope: !4183)
!4458 = distinct !DISubprogram(name: "new_pgn_element", scope: !3, file: !3, line: 817, type: !4459, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!48, !3191, !78}
!4461 = !DILocalVariable(name: "process", arg: 1, scope: !4458, file: !3, line: 817, type: !3191)
!4462 = !DILocation(line: 817, column: 39, scope: !4458)
!4463 = !DILocalVariable(name: "size", arg: 2, scope: !4458, file: !3, line: 817, type: !78)
!4464 = !DILocation(line: 817, column: 52, scope: !4458)
!4465 = !DILocalVariable(name: "blocksize", scope: !4458, file: !3, line: 822, type: !78)
!4466 = !DILocation(line: 822, column: 6, scope: !4458)
!4467 = !DILocalVariable(name: "adr", scope: !4458, file: !3, line: 823, type: !48)
!4468 = !DILocation(line: 823, column: 8, scope: !4458)
!4469 = !DILocation(line: 825, column: 6, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 825, column: 6)
!4471 = !DILocation(line: 825, column: 11, scope: !4470)
!4472 = !DILocation(line: 825, column: 19, scope: !4470)
!4473 = !DILocation(line: 825, column: 22, scope: !4470)
!4474 = !DILocation(line: 825, column: 27, scope: !4470)
!4475 = !DILocation(line: 825, column: 6, scope: !4458)
!4476 = !DILocation(line: 826, column: 3, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4470, file: !3, line: 825, column: 33)
!4478 = !DILocation(line: 827, column: 2, scope: !4477)
!4479 = !DILocation(line: 828, column: 11, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4470, file: !3, line: 828, column: 11)
!4481 = !DILocation(line: 828, column: 16, scope: !4480)
!4482 = !DILocation(line: 828, column: 11, scope: !4470)
!4483 = !DILocalVariable(name: "cur", scope: !4484, file: !3, line: 829, type: !2898)
!4484 = distinct !DILexicalBlock(scope: !4480, file: !3, line: 828, column: 23)
!4485 = !DILocation(line: 829, column: 24, scope: !4484)
!4486 = !DILocation(line: 829, column: 30, scope: !4484)
!4487 = !DILocation(line: 829, column: 39, scope: !4484)
!4488 = !DILocation(line: 829, column: 48, scope: !4484)
!4489 = !DILocation(line: 830, column: 3, scope: !4484)
!4490 = !DILocation(line: 830, column: 10, scope: !4484)
!4491 = !DILocation(line: 831, column: 4, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 830, column: 15)
!4493 = !DILocation(line: 831, column: 14, scope: !4492)
!4494 = !DILocation(line: 831, column: 19, scope: !4492)
!4495 = !DILocation(line: 832, column: 10, scope: !4492)
!4496 = !DILocation(line: 832, column: 15, scope: !4492)
!4497 = !DILocation(line: 832, column: 8, scope: !4492)
!4498 = distinct !{!4498, !4489, !4499}
!4499 = !DILocation(line: 833, column: 3, scope: !4484)
!4500 = !DILocation(line: 834, column: 18, scope: !4484)
!4501 = !DILocation(line: 834, column: 27, scope: !4484)
!4502 = !DILocation(line: 834, column: 3, scope: !4484)
!4503 = !DILocation(line: 836, column: 3, scope: !4484)
!4504 = !DILocation(line: 839, column: 16, scope: !4458)
!4505 = !DILocation(line: 839, column: 21, scope: !4458)
!4506 = !DILocation(line: 839, column: 26, scope: !4458)
!4507 = !DILocation(line: 839, column: 11, scope: !4458)
!4508 = !DILocation(line: 839, column: 7, scope: !4458)
!4509 = !DILocation(line: 841, column: 6, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 841, column: 6)
!4511 = !DILocation(line: 841, column: 15, scope: !4510)
!4512 = !DILocation(line: 841, column: 6, scope: !4458)
!4513 = !DILocation(line: 842, column: 7, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 842, column: 7)
!4515 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 841, column: 28)
!4516 = !DILocation(line: 842, column: 14, scope: !4514)
!4517 = !DILocation(line: 842, column: 23, scope: !4514)
!4518 = !DILocation(line: 842, column: 12, scope: !4514)
!4519 = !DILocation(line: 842, column: 36, scope: !4514)
!4520 = !DILocation(line: 842, column: 34, scope: !4514)
!4521 = !DILocation(line: 842, column: 7, scope: !4515)
!4522 = !DILocation(line: 843, column: 20, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 842, column: 47)
!4524 = !DILocation(line: 843, column: 29, scope: !4523)
!4525 = !DILocation(line: 843, column: 42, scope: !4523)
!4526 = !DILocation(line: 843, column: 49, scope: !4523)
!4527 = !DILocation(line: 843, column: 58, scope: !4523)
!4528 = !DILocation(line: 843, column: 47, scope: !4523)
!4529 = !DILocation(line: 843, column: 8, scope: !4523)
!4530 = !DILocation(line: 844, column: 27, scope: !4523)
!4531 = !DILocation(line: 844, column: 4, scope: !4523)
!4532 = !DILocation(line: 844, column: 13, scope: !4523)
!4533 = !DILocation(line: 844, column: 24, scope: !4523)
!4534 = !DILocation(line: 845, column: 11, scope: !4523)
!4535 = !DILocation(line: 845, column: 4, scope: !4523)
!4536 = !DILocation(line: 847, column: 2, scope: !4515)
!4537 = !DILocation(line: 849, column: 25, scope: !4458)
!4538 = !DILocation(line: 849, column: 2, scope: !4458)
!4539 = !DILocation(line: 849, column: 11, scope: !4458)
!4540 = !DILocation(line: 849, column: 23, scope: !4458)
!4541 = !DILocation(line: 850, column: 31, scope: !4458)
!4542 = !DILocation(line: 850, column: 43, scope: !4458)
!4543 = !DILocation(line: 850, column: 2, scope: !4458)
!4544 = !DILocation(line: 850, column: 11, scope: !4458)
!4545 = !DILocation(line: 850, column: 24, scope: !4458)
!4546 = !DILocation(line: 850, column: 29, scope: !4458)
!4547 = !DILocation(line: 851, column: 15, scope: !4458)
!4548 = !DILocation(line: 851, column: 24, scope: !4458)
!4549 = !DILocation(line: 851, column: 34, scope: !4458)
!4550 = !DILocation(line: 851, column: 43, scope: !4458)
!4551 = !DILocation(line: 851, column: 2, scope: !4458)
!4552 = !DILocation(line: 853, column: 24, scope: !4458)
!4553 = !DILocation(line: 853, column: 2, scope: !4458)
!4554 = !DILocation(line: 853, column: 11, scope: !4458)
!4555 = !DILocation(line: 853, column: 22, scope: !4458)
!4556 = !DILocation(line: 854, column: 9, scope: !4458)
!4557 = !DILocation(line: 854, column: 18, scope: !4458)
!4558 = !DILocation(line: 854, column: 31, scope: !4458)
!4559 = !DILocation(line: 854, column: 2, scope: !4458)
!4560 = !DILocation(line: 855, column: 1, scope: !4458)
!4561 = distinct !DISubprogram(name: "free_metaball_octal_node", scope: !3, file: !3, line: 2140, type: !4562, scopeLine: 2141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{null, !4564}
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_typedef, name: "octal_node", file: !3, line: 132, baseType: !2850)
!4566 = !DILocalVariable(name: "node", arg: 1, scope: !4561, file: !3, line: 2140, type: !4564)
!4567 = !DILocation(line: 2140, column: 50, scope: !4561)
!4568 = !DILocalVariable(name: "a", scope: !4561, file: !3, line: 2142, type: !78)
!4569 = !DILocation(line: 2142, column: 6, scope: !4561)
!4570 = !DILocation(line: 2143, column: 9, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 2143, column: 2)
!4572 = !DILocation(line: 2143, column: 7, scope: !4571)
!4573 = !DILocation(line: 2143, column: 14, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 2143, column: 2)
!4575 = !DILocation(line: 2143, column: 16, scope: !4574)
!4576 = !DILocation(line: 2143, column: 2, scope: !4571)
!4577 = !DILocation(line: 2144, column: 7, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 2144, column: 7)
!4579 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 2143, column: 26)
!4580 = !DILocation(line: 2144, column: 13, scope: !4578)
!4581 = !DILocation(line: 2144, column: 19, scope: !4578)
!4582 = !DILocation(line: 2144, column: 22, scope: !4578)
!4583 = !DILocation(line: 2144, column: 7, scope: !4579)
!4584 = !DILocation(line: 2144, column: 56, scope: !4578)
!4585 = !DILocation(line: 2144, column: 62, scope: !4578)
!4586 = !DILocation(line: 2144, column: 68, scope: !4578)
!4587 = !DILocation(line: 2144, column: 31, scope: !4578)
!4588 = !DILocation(line: 2145, column: 2, scope: !4579)
!4589 = !DILocation(line: 2143, column: 22, scope: !4574)
!4590 = !DILocation(line: 2143, column: 2, scope: !4574)
!4591 = distinct !{!4591, !4576, !4592}
!4592 = !DILocation(line: 2145, column: 2, scope: !4571)
!4593 = !DILocation(line: 2146, column: 17, scope: !4561)
!4594 = !DILocation(line: 2146, column: 23, scope: !4561)
!4595 = !DILocation(line: 2146, column: 2, scope: !4561)
!4596 = !DILocation(line: 2147, column: 2, scope: !4561)
!4597 = !DILocation(line: 2147, column: 12, scope: !4561)
!4598 = !DILocation(line: 2148, column: 1, scope: !4561)
!4599 = distinct !DISubprogram(name: "metaball", scope: !3, file: !3, line: 750, type: !4600, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{!141, !3191, !141, !141, !141}
!4602 = !DILocalVariable(name: "process", arg: 1, scope: !4599, file: !3, line: 750, type: !3191)
!4603 = !DILocation(line: 750, column: 32, scope: !4599)
!4604 = !DILocalVariable(name: "x", arg: 2, scope: !4599, file: !3, line: 750, type: !141)
!4605 = !DILocation(line: 750, column: 47, scope: !4599)
!4606 = !DILocalVariable(name: "y", arg: 3, scope: !4599, file: !3, line: 750, type: !141)
!4607 = !DILocation(line: 750, column: 56, scope: !4599)
!4608 = !DILocalVariable(name: "z", arg: 4, scope: !4599, file: !3, line: 750, type: !141)
!4609 = !DILocation(line: 750, column: 65, scope: !4599)
!4610 = !DILocalVariable(name: "metaball_tree", scope: !4599, file: !3, line: 753, type: !2844)
!4611 = !DILocation(line: 753, column: 14, scope: !4599)
!4612 = !DILocation(line: 753, column: 30, scope: !4599)
!4613 = !DILocation(line: 753, column: 39, scope: !4599)
!4614 = !DILocalVariable(name: "node", scope: !4599, file: !3, line: 754, type: !2849)
!4615 = !DILocation(line: 754, column: 21, scope: !4599)
!4616 = !DILocalVariable(name: "ml_p", scope: !4599, file: !3, line: 755, type: !4198)
!4617 = !DILocation(line: 755, column: 21, scope: !4599)
!4618 = !DILocalVariable(name: "dens", scope: !4599, file: !3, line: 756, type: !141)
!4619 = !DILocation(line: 756, column: 8, scope: !4599)
!4620 = !DILocalVariable(name: "a", scope: !4599, file: !3, line: 757, type: !78)
!4621 = !DILocation(line: 757, column: 6, scope: !4599)
!4622 = !DILocation(line: 759, column: 6, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 759, column: 6)
!4624 = !DILocation(line: 759, column: 15, scope: !4623)
!4625 = !DILocation(line: 759, column: 23, scope: !4623)
!4626 = !DILocation(line: 759, column: 6, scope: !4599)
!4627 = !DILocation(line: 760, column: 35, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 759, column: 28)
!4629 = !DILocation(line: 760, column: 50, scope: !4628)
!4630 = !DILocation(line: 760, column: 57, scope: !4628)
!4631 = !DILocation(line: 760, column: 60, scope: !4628)
!4632 = !DILocation(line: 760, column: 63, scope: !4628)
!4633 = !DILocation(line: 760, column: 66, scope: !4628)
!4634 = !DILocation(line: 760, column: 81, scope: !4628)
!4635 = !DILocation(line: 760, column: 10, scope: !4628)
!4636 = !DILocation(line: 760, column: 8, scope: !4628)
!4637 = !DILocation(line: 761, column: 7, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 761, column: 7)
!4639 = !DILocation(line: 761, column: 7, scope: !4628)
!4640 = !DILocation(line: 762, column: 16, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 762, column: 4)
!4642 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 761, column: 13)
!4643 = !DILocation(line: 762, column: 22, scope: !4641)
!4644 = !DILocation(line: 762, column: 28, scope: !4641)
!4645 = !DILocation(line: 762, column: 14, scope: !4641)
!4646 = !DILocation(line: 762, column: 9, scope: !4641)
!4647 = !DILocation(line: 762, column: 35, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 762, column: 4)
!4649 = !DILocation(line: 762, column: 4, scope: !4641)
!4650 = !DILocation(line: 763, column: 22, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 762, column: 60)
!4652 = !DILocation(line: 763, column: 28, scope: !4651)
!4653 = !DILocation(line: 763, column: 32, scope: !4651)
!4654 = !DILocation(line: 763, column: 35, scope: !4651)
!4655 = !DILocation(line: 763, column: 38, scope: !4651)
!4656 = !DILocation(line: 763, column: 13, scope: !4651)
!4657 = !DILocation(line: 763, column: 10, scope: !4651)
!4658 = !DILocation(line: 764, column: 4, scope: !4651)
!4659 = !DILocation(line: 762, column: 48, scope: !4648)
!4660 = !DILocation(line: 762, column: 54, scope: !4648)
!4661 = !DILocation(line: 762, column: 46, scope: !4648)
!4662 = !DILocation(line: 762, column: 4, scope: !4648)
!4663 = distinct !{!4663, !4649, !4664}
!4664 = !DILocation(line: 764, column: 4, scope: !4641)
!4665 = !DILocation(line: 766, column: 21, scope: !4642)
!4666 = !DILocation(line: 766, column: 36, scope: !4642)
!4667 = !DILocation(line: 766, column: 42, scope: !4642)
!4668 = !DILocation(line: 766, column: 48, scope: !4642)
!4669 = !DILocation(line: 766, column: 40, scope: !4642)
!4670 = !DILocation(line: 766, column: 20, scope: !4642)
!4671 = !DILocation(line: 766, column: 18, scope: !4642)
!4672 = !DILocation(line: 766, column: 9, scope: !4642)
!4673 = !DILocation(line: 767, column: 21, scope: !4642)
!4674 = !DILocation(line: 767, column: 36, scope: !4642)
!4675 = !DILocation(line: 767, column: 42, scope: !4642)
!4676 = !DILocation(line: 767, column: 48, scope: !4642)
!4677 = !DILocation(line: 767, column: 40, scope: !4642)
!4678 = !DILocation(line: 767, column: 20, scope: !4642)
!4679 = !DILocation(line: 767, column: 18, scope: !4642)
!4680 = !DILocation(line: 767, column: 9, scope: !4642)
!4681 = !DILocation(line: 768, column: 3, scope: !4642)
!4682 = !DILocation(line: 770, column: 11, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 770, column: 4)
!4684 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 769, column: 8)
!4685 = !DILocation(line: 770, column: 9, scope: !4683)
!4686 = !DILocation(line: 770, column: 16, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 770, column: 4)
!4688 = !DILocation(line: 770, column: 20, scope: !4687)
!4689 = !DILocation(line: 770, column: 29, scope: !4687)
!4690 = !DILocation(line: 770, column: 18, scope: !4687)
!4691 = !DILocation(line: 770, column: 4, scope: !4683)
!4692 = !DILocation(line: 771, column: 22, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 770, column: 43)
!4694 = !DILocation(line: 771, column: 31, scope: !4693)
!4695 = !DILocation(line: 771, column: 37, scope: !4693)
!4696 = !DILocation(line: 771, column: 41, scope: !4693)
!4697 = !DILocation(line: 771, column: 44, scope: !4693)
!4698 = !DILocation(line: 771, column: 47, scope: !4693)
!4699 = !DILocation(line: 771, column: 13, scope: !4693)
!4700 = !DILocation(line: 771, column: 10, scope: !4693)
!4701 = !DILocation(line: 772, column: 4, scope: !4693)
!4702 = !DILocation(line: 770, column: 39, scope: !4687)
!4703 = !DILocation(line: 770, column: 4, scope: !4687)
!4704 = distinct !{!4704, !4691, !4705}
!4705 = !DILocation(line: 772, column: 4, scope: !4683)
!4706 = !DILocation(line: 774, column: 2, scope: !4628)
!4707 = !DILocation(line: 776, column: 20, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 775, column: 7)
!4709 = !DILocation(line: 776, column: 29, scope: !4708)
!4710 = !DILocation(line: 776, column: 39, scope: !4708)
!4711 = !DILocation(line: 776, column: 42, scope: !4708)
!4712 = !DILocation(line: 776, column: 45, scope: !4708)
!4713 = !DILocation(line: 776, column: 11, scope: !4708)
!4714 = !DILocation(line: 776, column: 8, scope: !4708)
!4715 = !DILocation(line: 779, column: 9, scope: !4599)
!4716 = !DILocation(line: 779, column: 18, scope: !4599)
!4717 = !DILocation(line: 779, column: 27, scope: !4599)
!4718 = !DILocation(line: 779, column: 25, scope: !4599)
!4719 = !DILocation(line: 779, column: 2, scope: !4599)
!4720 = distinct !DISubprogram(name: "polygonize", scope: !3, file: !3, line: 1596, type: !4721, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{null, !3191, !114}
!4723 = !DILocalVariable(name: "process", arg: 1, scope: !4720, file: !3, line: 1596, type: !3191)
!4724 = !DILocation(line: 1596, column: 33, scope: !4720)
!4725 = !DILocalVariable(name: "mb", arg: 2, scope: !4720, file: !3, line: 1596, type: !114)
!4726 = !DILocation(line: 1596, column: 52, scope: !4720)
!4727 = !DILocalVariable(name: "c", scope: !4720, file: !3, line: 1598, type: !1664)
!4728 = !DILocation(line: 1598, column: 7, scope: !4720)
!4729 = !DILocalVariable(name: "a", scope: !4720, file: !3, line: 1599, type: !78)
!4730 = !DILocation(line: 1599, column: 6, scope: !4720)
!4731 = !DILocation(line: 1601, column: 28, scope: !4720)
!4732 = !DILocation(line: 1601, column: 37, scope: !4720)
!4733 = !DILocation(line: 1601, column: 46, scope: !4720)
!4734 = !DILocation(line: 1601, column: 50, scope: !4720)
!4735 = !DILocation(line: 1601, column: 2, scope: !4720)
!4736 = !DILocation(line: 1601, column: 11, scope: !4720)
!4737 = !DILocation(line: 1601, column: 20, scope: !4720)
!4738 = !DILocation(line: 1601, column: 26, scope: !4720)
!4739 = !DILocation(line: 1602, column: 2, scope: !4720)
!4740 = !DILocation(line: 1602, column: 11, scope: !4720)
!4741 = !DILocation(line: 1602, column: 20, scope: !4720)
!4742 = !DILocation(line: 1602, column: 24, scope: !4720)
!4743 = !DILocation(line: 1605, column: 21, scope: !4720)
!4744 = !DILocation(line: 1605, column: 2, scope: !4720)
!4745 = !DILocation(line: 1605, column: 11, scope: !4720)
!4746 = !DILocation(line: 1605, column: 19, scope: !4720)
!4747 = !DILocation(line: 1606, column: 21, scope: !4720)
!4748 = !DILocation(line: 1606, column: 2, scope: !4720)
!4749 = !DILocation(line: 1606, column: 11, scope: !4720)
!4750 = !DILocation(line: 1606, column: 19, scope: !4720)
!4751 = !DILocation(line: 1607, column: 19, scope: !4720)
!4752 = !DILocation(line: 1607, column: 2, scope: !4720)
!4753 = !DILocation(line: 1607, column: 11, scope: !4720)
!4754 = !DILocation(line: 1607, column: 17, scope: !4720)
!4755 = !DILocation(line: 1608, column: 2, scope: !4720)
!4756 = !DILocation(line: 1610, column: 9, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 1610, column: 2)
!4758 = !DILocation(line: 1610, column: 7, scope: !4757)
!4759 = !DILocation(line: 1610, column: 14, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 1610, column: 2)
!4761 = !DILocation(line: 1610, column: 18, scope: !4760)
!4762 = !DILocation(line: 1610, column: 27, scope: !4760)
!4763 = !DILocation(line: 1610, column: 16, scope: !4760)
!4764 = !DILocation(line: 1610, column: 2, scope: !4757)
!4765 = !DILocation(line: 1613, column: 21, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4760, file: !3, line: 1610, column: 41)
!4767 = !DILocation(line: 1613, column: 30, scope: !4766)
!4768 = !DILocation(line: 1613, column: 34, scope: !4766)
!4769 = !DILocation(line: 1613, column: 3, scope: !4766)
!4770 = !DILocation(line: 1614, column: 2, scope: !4766)
!4771 = !DILocation(line: 1610, column: 37, scope: !4760)
!4772 = !DILocation(line: 1610, column: 2, scope: !4760)
!4773 = distinct !{!4773, !4764, !4774}
!4774 = !DILocation(line: 1614, column: 2, scope: !4757)
!4775 = !DILocation(line: 1617, column: 2, scope: !4720)
!4776 = !DILocation(line: 1617, column: 9, scope: !4720)
!4777 = !DILocation(line: 1617, column: 18, scope: !4720)
!4778 = !DILocation(line: 1617, column: 24, scope: !4720)
!4779 = !DILocation(line: 1618, column: 7, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 1617, column: 33)
!4781 = !DILocation(line: 1618, column: 16, scope: !4780)
!4782 = !DILocation(line: 1618, column: 23, scope: !4780)
!4783 = !DILocation(line: 1621, column: 10, scope: !4780)
!4784 = !DILocation(line: 1621, column: 23, scope: !4780)
!4785 = !DILocation(line: 1621, column: 3, scope: !4780)
!4786 = !DILocation(line: 1624, column: 20, scope: !4780)
!4787 = !DILocation(line: 1624, column: 29, scope: !4780)
!4788 = !DILocation(line: 1624, column: 36, scope: !4780)
!4789 = !DILocation(line: 1624, column: 3, scope: !4780)
!4790 = !DILocation(line: 1624, column: 12, scope: !4780)
!4791 = !DILocation(line: 1624, column: 18, scope: !4780)
!4792 = !DILocation(line: 1627, column: 12, scope: !4780)
!4793 = !DILocation(line: 1627, column: 23, scope: !4780)
!4794 = !DILocation(line: 1627, column: 25, scope: !4780)
!4795 = !DILocation(line: 1627, column: 32, scope: !4780)
!4796 = !DILocation(line: 1627, column: 37, scope: !4780)
!4797 = !DILocation(line: 1627, column: 3, scope: !4780)
!4798 = !DILocation(line: 1628, column: 12, scope: !4780)
!4799 = !DILocation(line: 1628, column: 23, scope: !4780)
!4800 = !DILocation(line: 1628, column: 25, scope: !4780)
!4801 = !DILocation(line: 1628, column: 32, scope: !4780)
!4802 = !DILocation(line: 1628, column: 37, scope: !4780)
!4803 = !DILocation(line: 1628, column: 3, scope: !4780)
!4804 = !DILocation(line: 1629, column: 12, scope: !4780)
!4805 = !DILocation(line: 1629, column: 23, scope: !4780)
!4806 = !DILocation(line: 1629, column: 28, scope: !4780)
!4807 = !DILocation(line: 1629, column: 30, scope: !4780)
!4808 = !DILocation(line: 1629, column: 37, scope: !4780)
!4809 = !DILocation(line: 1629, column: 3, scope: !4780)
!4810 = !DILocation(line: 1630, column: 12, scope: !4780)
!4811 = !DILocation(line: 1630, column: 23, scope: !4780)
!4812 = !DILocation(line: 1630, column: 28, scope: !4780)
!4813 = !DILocation(line: 1630, column: 30, scope: !4780)
!4814 = !DILocation(line: 1630, column: 37, scope: !4780)
!4815 = !DILocation(line: 1630, column: 3, scope: !4780)
!4816 = !DILocation(line: 1631, column: 12, scope: !4780)
!4817 = !DILocation(line: 1631, column: 23, scope: !4780)
!4818 = !DILocation(line: 1631, column: 28, scope: !4780)
!4819 = !DILocation(line: 1631, column: 33, scope: !4780)
!4820 = !DILocation(line: 1631, column: 35, scope: !4780)
!4821 = !DILocation(line: 1631, column: 3, scope: !4780)
!4822 = !DILocation(line: 1632, column: 12, scope: !4780)
!4823 = !DILocation(line: 1632, column: 23, scope: !4780)
!4824 = !DILocation(line: 1632, column: 28, scope: !4780)
!4825 = !DILocation(line: 1632, column: 33, scope: !4780)
!4826 = !DILocation(line: 1632, column: 35, scope: !4780)
!4827 = !DILocation(line: 1632, column: 3, scope: !4780)
!4828 = distinct !{!4828, !4775, !4829}
!4829 = !DILocation(line: 1633, column: 2, scope: !4720)
!4830 = !DILocation(line: 1634, column: 1, scope: !4720)
!4831 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4832, file: !4832, line: 64, type: !4833, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4832 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4833 = !DISubroutineType(types: !4834)
!4834 = !{null, !1461, !4835}
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!4837 = !DILocalVariable(name: "r", arg: 1, scope: !4831, file: !4832, line: 64, type: !1461)
!4838 = !DILocation(line: 64, column: 31, scope: !4831)
!4839 = !DILocalVariable(name: "a", arg: 2, scope: !4831, file: !4832, line: 64, type: !4835)
!4840 = !DILocation(line: 64, column: 49, scope: !4831)
!4841 = !DILocation(line: 66, column: 9, scope: !4831)
!4842 = !DILocation(line: 66, column: 2, scope: !4831)
!4843 = !DILocation(line: 66, column: 7, scope: !4831)
!4844 = !DILocation(line: 67, column: 9, scope: !4831)
!4845 = !DILocation(line: 67, column: 2, scope: !4831)
!4846 = !DILocation(line: 67, column: 7, scope: !4831)
!4847 = !DILocation(line: 68, column: 9, scope: !4831)
!4848 = !DILocation(line: 68, column: 2, scope: !4831)
!4849 = !DILocation(line: 68, column: 7, scope: !4831)
!4850 = !DILocation(line: 69, column: 1, scope: !4831)
!4851 = distinct !DISubprogram(name: "freepolygonize", scope: !3, file: !3, line: 857, type: !4852, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{null, !3191}
!4854 = !DILocalVariable(name: "process", arg: 1, scope: !4851, file: !3, line: 857, type: !3191)
!4855 = !DILocation(line: 857, column: 37, scope: !4851)
!4856 = !DILocation(line: 859, column: 2, scope: !4851)
!4857 = !DILocation(line: 859, column: 12, scope: !4851)
!4858 = !DILocation(line: 859, column: 21, scope: !4851)
!4859 = !DILocation(line: 860, column: 2, scope: !4851)
!4860 = !DILocation(line: 860, column: 12, scope: !4851)
!4861 = !DILocation(line: 860, column: 21, scope: !4851)
!4862 = !DILocation(line: 861, column: 2, scope: !4851)
!4863 = !DILocation(line: 861, column: 12, scope: !4851)
!4864 = !DILocation(line: 861, column: 21, scope: !4851)
!4865 = !DILocation(line: 863, column: 18, scope: !4851)
!4866 = !DILocation(line: 863, column: 2, scope: !4851)
!4867 = !DILocation(line: 865, column: 6, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 865, column: 6)
!4869 = !DILocation(line: 865, column: 15, scope: !4868)
!4870 = !DILocation(line: 865, column: 24, scope: !4868)
!4871 = !DILocation(line: 865, column: 6, scope: !4851)
!4872 = !DILocation(line: 866, column: 3, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 865, column: 29)
!4874 = !DILocation(line: 866, column: 13, scope: !4873)
!4875 = !DILocation(line: 866, column: 22, scope: !4873)
!4876 = !DILocation(line: 866, column: 31, scope: !4873)
!4877 = !DILocation(line: 867, column: 2, scope: !4873)
!4878 = !DILocation(line: 868, column: 1, scope: !4851)
!4879 = distinct !DISubprogram(name: "BKE_mball_minmax_ex", scope: !3, file: !3, line: 2364, type: !4880, scopeLine: 2366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!629, !114, !1461, !1461, !1642, !4882}
!4882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !76)
!4883 = !DILocalVariable(name: "mb", arg: 1, scope: !4879, file: !3, line: 2364, type: !114)
!4884 = !DILocation(line: 2364, column: 36, scope: !4879)
!4885 = !DILocalVariable(name: "min", arg: 2, scope: !4879, file: !3, line: 2364, type: !1461)
!4886 = !DILocation(line: 2364, column: 46, scope: !4879)
!4887 = !DILocalVariable(name: "max", arg: 3, scope: !4879, file: !3, line: 2364, type: !1461)
!4888 = !DILocation(line: 2364, column: 60, scope: !4879)
!4889 = !DILocalVariable(name: "obmat", arg: 4, scope: !4879, file: !3, line: 2365, type: !1642)
!4890 = !DILocation(line: 2365, column: 32, scope: !4879)
!4891 = !DILocalVariable(name: "flag", arg: 5, scope: !4879, file: !3, line: 2365, type: !4882)
!4892 = !DILocation(line: 2365, column: 57, scope: !4879)
!4893 = !DILocalVariable(name: "scale", scope: !4879, file: !3, line: 2367, type: !4836)
!4894 = !DILocation(line: 2367, column: 14, scope: !4879)
!4895 = !DILocation(line: 2367, column: 22, scope: !4879)
!4896 = !DILocation(line: 2367, column: 44, scope: !4879)
!4897 = !DILocation(line: 2367, column: 30, scope: !4879)
!4898 = !DILocalVariable(name: "ml", scope: !4879, file: !3, line: 2368, type: !1617)
!4899 = !DILocation(line: 2368, column: 12, scope: !4879)
!4900 = !DILocalVariable(name: "changed", scope: !4879, file: !3, line: 2369, type: !629)
!4901 = !DILocation(line: 2369, column: 7, scope: !4879)
!4902 = !DILocalVariable(name: "centroid", scope: !4879, file: !3, line: 2370, type: !172)
!4903 = !DILocation(line: 2370, column: 8, scope: !4879)
!4904 = !DILocalVariable(name: "vec", scope: !4879, file: !3, line: 2370, type: !172)
!4905 = !DILocation(line: 2370, column: 21, scope: !4879)
!4906 = !DILocation(line: 2372, column: 2, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2372, column: 2)
!4908 = !DILocation(line: 2374, column: 12, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2374, column: 2)
!4910 = !DILocation(line: 2374, column: 16, scope: !4909)
!4911 = !DILocation(line: 2374, column: 22, scope: !4909)
!4912 = !DILocation(line: 2374, column: 10, scope: !4909)
!4913 = !DILocation(line: 2374, column: 7, scope: !4909)
!4914 = !DILocation(line: 2374, column: 29, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 2374, column: 2)
!4916 = !DILocation(line: 2374, column: 2, scope: !4909)
!4917 = !DILocation(line: 2375, column: 8, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 2375, column: 7)
!4919 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 2374, column: 48)
!4920 = !DILocation(line: 2375, column: 12, scope: !4918)
!4921 = !DILocation(line: 2375, column: 19, scope: !4918)
!4922 = !DILocation(line: 2375, column: 17, scope: !4918)
!4923 = !DILocation(line: 2375, column: 28, scope: !4918)
!4924 = !DILocation(line: 2375, column: 25, scope: !4918)
!4925 = !DILocation(line: 2375, column: 7, scope: !4919)
!4926 = !DILocalVariable(name: "scale_mb", scope: !4927, file: !3, line: 2376, type: !4836)
!4927 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 2375, column: 34)
!4928 = !DILocation(line: 2376, column: 16, scope: !4927)
!4929 = !DILocation(line: 2376, column: 28, scope: !4927)
!4930 = !DILocation(line: 2376, column: 32, scope: !4927)
!4931 = !DILocation(line: 2376, column: 36, scope: !4927)
!4932 = !DILocation(line: 2376, column: 46, scope: !4927)
!4933 = !DILocation(line: 2376, column: 44, scope: !4927)
!4934 = !DILocalVariable(name: "i", scope: !4927, file: !3, line: 2377, type: !78)
!4935 = !DILocation(line: 2377, column: 8, scope: !4927)
!4936 = !DILocation(line: 2379, column: 8, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2379, column: 8)
!4938 = !DILocation(line: 2379, column: 8, scope: !4927)
!4939 = !DILocation(line: 2380, column: 17, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 2379, column: 15)
!4941 = !DILocation(line: 2380, column: 27, scope: !4940)
!4942 = !DILocation(line: 2380, column: 35, scope: !4940)
!4943 = !DILocation(line: 2380, column: 39, scope: !4940)
!4944 = !DILocation(line: 2380, column: 5, scope: !4940)
!4945 = !DILocation(line: 2381, column: 4, scope: !4940)
!4946 = !DILocation(line: 2383, column: 16, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 2382, column: 9)
!4948 = !DILocation(line: 2383, column: 27, scope: !4947)
!4949 = !DILocation(line: 2383, column: 31, scope: !4947)
!4950 = !DILocation(line: 2383, column: 5, scope: !4947)
!4951 = !DILocation(line: 2387, column: 11, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2387, column: 4)
!4953 = !DILocation(line: 2387, column: 9, scope: !4952)
!4954 = !DILocation(line: 2387, column: 17, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 2387, column: 4)
!4956 = !DILocation(line: 2387, column: 19, scope: !4955)
!4957 = !DILocation(line: 2387, column: 4, scope: !4952)
!4958 = !DILocation(line: 2388, column: 16, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2387, column: 33)
!4960 = !DILocation(line: 2388, column: 21, scope: !4959)
!4961 = !DILocation(line: 2388, column: 5, scope: !4959)
!4962 = !DILocation(line: 2389, column: 15, scope: !4959)
!4963 = !DILocation(line: 2389, column: 20, scope: !4959)
!4964 = !DILocation(line: 2389, column: 31, scope: !4959)
!4965 = !DILocation(line: 2389, column: 29, scope: !4959)
!4966 = !DILocation(line: 2389, column: 5, scope: !4959)
!4967 = !DILocation(line: 2390, column: 20, scope: !4959)
!4968 = !DILocation(line: 2390, column: 25, scope: !4959)
!4969 = !DILocation(line: 2390, column: 30, scope: !4959)
!4970 = !DILocation(line: 2390, column: 5, scope: !4959)
!4971 = !DILocation(line: 2391, column: 4, scope: !4959)
!4972 = !DILocation(line: 2387, column: 27, scope: !4955)
!4973 = !DILocation(line: 2387, column: 4, scope: !4955)
!4974 = distinct !{!4974, !4957, !4975}
!4975 = !DILocation(line: 2391, column: 4, scope: !4952)
!4976 = !DILocation(line: 2392, column: 12, scope: !4927)
!4977 = !DILocation(line: 2393, column: 3, scope: !4927)
!4978 = !DILocation(line: 2394, column: 2, scope: !4919)
!4979 = !DILocation(line: 2374, column: 38, scope: !4915)
!4980 = !DILocation(line: 2374, column: 42, scope: !4915)
!4981 = !DILocation(line: 2374, column: 36, scope: !4915)
!4982 = !DILocation(line: 2374, column: 2, scope: !4915)
!4983 = distinct !{!4983, !4916, !4984}
!4984 = !DILocation(line: 2394, column: 2, scope: !4909)
!4985 = !DILocation(line: 2396, column: 9, scope: !4879)
!4986 = !DILocation(line: 2396, column: 2, scope: !4879)
!4987 = distinct !DISubprogram(name: "add_v3_fl", scope: !4832, file: !4832, line: 269, type: !4988, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{null, !1461, !141}
!4990 = !DILocalVariable(name: "r", arg: 1, scope: !4987, file: !4832, line: 269, type: !1461)
!4991 = !DILocation(line: 269, column: 30, scope: !4987)
!4992 = !DILocalVariable(name: "f", arg: 2, scope: !4987, file: !4832, line: 269, type: !141)
!4993 = !DILocation(line: 269, column: 42, scope: !4987)
!4994 = !DILocation(line: 271, column: 10, scope: !4987)
!4995 = !DILocation(line: 271, column: 2, scope: !4987)
!4996 = !DILocation(line: 271, column: 7, scope: !4987)
!4997 = !DILocation(line: 272, column: 10, scope: !4987)
!4998 = !DILocation(line: 272, column: 2, scope: !4987)
!4999 = !DILocation(line: 272, column: 7, scope: !4987)
!5000 = !DILocation(line: 273, column: 10, scope: !4987)
!5001 = !DILocation(line: 273, column: 2, scope: !4987)
!5002 = !DILocation(line: 273, column: 7, scope: !4987)
!5003 = !DILocation(line: 274, column: 1, scope: !4987)
!5004 = distinct !DISubprogram(name: "BKE_mball_minmax", scope: !3, file: !3, line: 2401, type: !5005, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!629, !114, !1461, !1461}
!5007 = !DILocalVariable(name: "mb", arg: 1, scope: !5004, file: !3, line: 2401, type: !114)
!5008 = !DILocation(line: 2401, column: 33, scope: !5004)
!5009 = !DILocalVariable(name: "min", arg: 2, scope: !5004, file: !3, line: 2401, type: !1461)
!5010 = !DILocation(line: 2401, column: 43, scope: !5004)
!5011 = !DILocalVariable(name: "max", arg: 3, scope: !5004, file: !3, line: 2401, type: !1461)
!5012 = !DILocation(line: 2401, column: 57, scope: !5004)
!5013 = !DILocalVariable(name: "ml", scope: !5004, file: !3, line: 2403, type: !1617)
!5014 = !DILocation(line: 2403, column: 12, scope: !5004)
!5015 = !DILocation(line: 2405, column: 2, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 2405, column: 2)
!5017 = !DILocation(line: 2407, column: 12, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 2407, column: 2)
!5019 = !DILocation(line: 2407, column: 16, scope: !5018)
!5020 = !DILocation(line: 2407, column: 22, scope: !5018)
!5021 = !DILocation(line: 2407, column: 10, scope: !5018)
!5022 = !DILocation(line: 2407, column: 7, scope: !5018)
!5023 = !DILocation(line: 2407, column: 29, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 2407, column: 2)
!5025 = !DILocation(line: 2407, column: 2, scope: !5018)
!5026 = !DILocation(line: 2408, column: 18, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 2407, column: 48)
!5028 = !DILocation(line: 2408, column: 23, scope: !5027)
!5029 = !DILocation(line: 2408, column: 29, scope: !5027)
!5030 = !DILocation(line: 2408, column: 33, scope: !5027)
!5031 = !DILocation(line: 2408, column: 3, scope: !5027)
!5032 = !DILocation(line: 2409, column: 2, scope: !5027)
!5033 = !DILocation(line: 2407, column: 38, scope: !5024)
!5034 = !DILocation(line: 2407, column: 42, scope: !5024)
!5035 = !DILocation(line: 2407, column: 36, scope: !5024)
!5036 = !DILocation(line: 2407, column: 2, scope: !5024)
!5037 = distinct !{!5037, !5025, !5038}
!5038 = !DILocation(line: 2409, column: 2, scope: !5018)
!5039 = !DILocation(line: 2411, column: 33, scope: !5004)
!5040 = !DILocation(line: 2411, column: 37, scope: !5004)
!5041 = !DILocation(line: 2411, column: 10, scope: !5004)
!5042 = !DILocation(line: 2411, column: 44, scope: !5004)
!5043 = !DILocation(line: 2411, column: 9, scope: !5004)
!5044 = !DILocation(line: 2411, column: 2, scope: !5004)
!5045 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !5046, file: !5046, line: 88, type: !5047, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5046 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5047 = !DISubroutineType(types: !5048)
!5048 = !{!629, !5049}
!5049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5050, size: 64)
!5050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!5051 = !DILocalVariable(name: "lb", arg: 1, scope: !5045, file: !5046, line: 88, type: !5049)
!5052 = !DILocation(line: 88, column: 62, scope: !5045)
!5053 = !DILocation(line: 88, column: 76, scope: !5045)
!5054 = !DILocation(line: 88, column: 80, scope: !5045)
!5055 = !DILocation(line: 88, column: 86, scope: !5045)
!5056 = !DILocation(line: 88, column: 75, scope: !5045)
!5057 = !DILocation(line: 88, column: 68, scope: !5045)
!5058 = distinct !DISubprogram(name: "BKE_mball_center_median", scope: !3, file: !3, line: 2414, type: !5059, scopeLine: 2415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{!629, !114, !1461}
!5061 = !DILocalVariable(name: "mb", arg: 1, scope: !5058, file: !3, line: 2414, type: !114)
!5062 = !DILocation(line: 2414, column: 40, scope: !5058)
!5063 = !DILocalVariable(name: "r_cent", arg: 2, scope: !5058, file: !3, line: 2414, type: !1461)
!5064 = !DILocation(line: 2414, column: 50, scope: !5058)
!5065 = !DILocalVariable(name: "ml", scope: !5058, file: !3, line: 2416, type: !1617)
!5066 = !DILocation(line: 2416, column: 12, scope: !5058)
!5067 = !DILocalVariable(name: "total", scope: !5058, file: !3, line: 2417, type: !78)
!5068 = !DILocation(line: 2417, column: 6, scope: !5058)
!5069 = !DILocation(line: 2419, column: 10, scope: !5058)
!5070 = !DILocation(line: 2419, column: 2, scope: !5058)
!5071 = !DILocation(line: 2421, column: 12, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 2421, column: 2)
!5073 = !DILocation(line: 2421, column: 16, scope: !5072)
!5074 = !DILocation(line: 2421, column: 22, scope: !5072)
!5075 = !DILocation(line: 2421, column: 10, scope: !5072)
!5076 = !DILocation(line: 2421, column: 7, scope: !5072)
!5077 = !DILocation(line: 2421, column: 29, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 2421, column: 2)
!5079 = !DILocation(line: 2421, column: 2, scope: !5072)
!5080 = !DILocation(line: 2422, column: 13, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 2421, column: 48)
!5082 = !DILocation(line: 2422, column: 22, scope: !5081)
!5083 = !DILocation(line: 2422, column: 26, scope: !5081)
!5084 = !DILocation(line: 2422, column: 3, scope: !5081)
!5085 = !DILocation(line: 2423, column: 8, scope: !5081)
!5086 = !DILocation(line: 2424, column: 2, scope: !5081)
!5087 = !DILocation(line: 2421, column: 38, scope: !5078)
!5088 = !DILocation(line: 2421, column: 42, scope: !5078)
!5089 = !DILocation(line: 2421, column: 36, scope: !5078)
!5090 = !DILocation(line: 2421, column: 2, scope: !5078)
!5091 = distinct !{!5091, !5079, !5092}
!5092 = !DILocation(line: 2424, column: 2, scope: !5072)
!5093 = !DILocation(line: 2426, column: 6, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 2426, column: 6)
!5095 = !DILocation(line: 2426, column: 6, scope: !5058)
!5096 = !DILocation(line: 2427, column: 13, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 2426, column: 13)
!5098 = !DILocation(line: 2427, column: 35, scope: !5097)
!5099 = !DILocation(line: 2427, column: 28, scope: !5097)
!5100 = !DILocation(line: 2427, column: 26, scope: !5097)
!5101 = !DILocation(line: 2427, column: 3, scope: !5097)
!5102 = !DILocation(line: 2428, column: 2, scope: !5097)
!5103 = !DILocation(line: 2430, column: 10, scope: !5058)
!5104 = !DILocation(line: 2430, column: 16, scope: !5058)
!5105 = !DILocation(line: 2430, column: 9, scope: !5058)
!5106 = !DILocation(line: 2430, column: 2, scope: !5058)
!5107 = distinct !DISubprogram(name: "zero_v3", scope: !4832, file: !4832, line: 43, type: !5108, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{null, !1461}
!5110 = !DILocalVariable(name: "r", arg: 1, scope: !5107, file: !4832, line: 43, type: !1461)
!5111 = !DILocation(line: 43, column: 28, scope: !5107)
!5112 = !DILocation(line: 45, column: 2, scope: !5107)
!5113 = !DILocation(line: 45, column: 7, scope: !5107)
!5114 = !DILocation(line: 46, column: 2, scope: !5107)
!5115 = !DILocation(line: 46, column: 7, scope: !5107)
!5116 = !DILocation(line: 47, column: 2, scope: !5107)
!5117 = !DILocation(line: 47, column: 7, scope: !5107)
!5118 = !DILocation(line: 48, column: 1, scope: !5107)
!5119 = distinct !DISubprogram(name: "add_v3_v3", scope: !4832, file: !4832, line: 302, type: !4833, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5120 = !DILocalVariable(name: "r", arg: 1, scope: !5119, file: !4832, line: 302, type: !1461)
!5121 = !DILocation(line: 302, column: 30, scope: !5119)
!5122 = !DILocalVariable(name: "a", arg: 2, scope: !5119, file: !4832, line: 302, type: !4835)
!5123 = !DILocation(line: 302, column: 48, scope: !5119)
!5124 = !DILocation(line: 304, column: 10, scope: !5119)
!5125 = !DILocation(line: 304, column: 2, scope: !5119)
!5126 = !DILocation(line: 304, column: 7, scope: !5119)
!5127 = !DILocation(line: 305, column: 10, scope: !5119)
!5128 = !DILocation(line: 305, column: 2, scope: !5119)
!5129 = !DILocation(line: 305, column: 7, scope: !5119)
!5130 = !DILocation(line: 306, column: 10, scope: !5119)
!5131 = !DILocation(line: 306, column: 2, scope: !5119)
!5132 = !DILocation(line: 306, column: 7, scope: !5119)
!5133 = !DILocation(line: 307, column: 1, scope: !5119)
!5134 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4832, file: !4832, line: 392, type: !4988, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5135 = !DILocalVariable(name: "r", arg: 1, scope: !5134, file: !4832, line: 392, type: !1461)
!5136 = !DILocation(line: 392, column: 30, scope: !5134)
!5137 = !DILocalVariable(name: "f", arg: 2, scope: !5134, file: !4832, line: 392, type: !141)
!5138 = !DILocation(line: 392, column: 42, scope: !5134)
!5139 = !DILocation(line: 394, column: 10, scope: !5134)
!5140 = !DILocation(line: 394, column: 2, scope: !5134)
!5141 = !DILocation(line: 394, column: 7, scope: !5134)
!5142 = !DILocation(line: 395, column: 10, scope: !5134)
!5143 = !DILocation(line: 395, column: 2, scope: !5134)
!5144 = !DILocation(line: 395, column: 7, scope: !5134)
!5145 = !DILocation(line: 396, column: 10, scope: !5134)
!5146 = !DILocation(line: 396, column: 2, scope: !5134)
!5147 = !DILocation(line: 396, column: 7, scope: !5134)
!5148 = !DILocation(line: 397, column: 1, scope: !5134)
!5149 = distinct !DISubprogram(name: "BKE_mball_center_bounds", scope: !3, file: !3, line: 2433, type: !5059, scopeLine: 2434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5150 = !DILocalVariable(name: "mb", arg: 1, scope: !5149, file: !3, line: 2433, type: !114)
!5151 = !DILocation(line: 2433, column: 40, scope: !5149)
!5152 = !DILocalVariable(name: "r_cent", arg: 2, scope: !5149, file: !3, line: 2433, type: !1461)
!5153 = !DILocation(line: 2433, column: 50, scope: !5149)
!5154 = !DILocalVariable(name: "min", scope: !5149, file: !3, line: 2435, type: !172)
!5155 = !DILocation(line: 2435, column: 8, scope: !5149)
!5156 = !DILocalVariable(name: "max", scope: !5149, file: !3, line: 2435, type: !172)
!5157 = !DILocation(line: 2435, column: 16, scope: !5149)
!5158 = !DILocation(line: 2437, column: 23, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 2437, column: 6)
!5160 = !DILocation(line: 2437, column: 27, scope: !5159)
!5161 = !DILocation(line: 2437, column: 32, scope: !5159)
!5162 = !DILocation(line: 2437, column: 6, scope: !5159)
!5163 = !DILocation(line: 2437, column: 6, scope: !5149)
!5164 = !DILocation(line: 2438, column: 15, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2437, column: 38)
!5166 = !DILocation(line: 2438, column: 23, scope: !5165)
!5167 = !DILocation(line: 2438, column: 28, scope: !5165)
!5168 = !DILocation(line: 2438, column: 3, scope: !5165)
!5169 = !DILocation(line: 2439, column: 3, scope: !5165)
!5170 = !DILocation(line: 2442, column: 2, scope: !5149)
!5171 = !DILocation(line: 2443, column: 1, scope: !5149)
!5172 = distinct !DISubprogram(name: "BKE_mball_transform", scope: !3, file: !3, line: 2445, type: !5173, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{null, !114, !1642}
!5175 = !DILocalVariable(name: "mb", arg: 1, scope: !5172, file: !3, line: 2445, type: !114)
!5176 = !DILocation(line: 2445, column: 36, scope: !5172)
!5177 = !DILocalVariable(name: "mat", arg: 2, scope: !5172, file: !3, line: 2445, type: !1642)
!5178 = !DILocation(line: 2445, column: 46, scope: !5172)
!5179 = !DILocalVariable(name: "me", scope: !5172, file: !3, line: 2447, type: !1617)
!5180 = !DILocation(line: 2447, column: 12, scope: !5172)
!5181 = !DILocalVariable(name: "quat", scope: !5172, file: !3, line: 2448, type: !254)
!5182 = !DILocation(line: 2448, column: 8, scope: !5172)
!5183 = !DILocalVariable(name: "scale", scope: !5172, file: !3, line: 2449, type: !4836)
!5184 = !DILocation(line: 2449, column: 14, scope: !5172)
!5185 = !DILocation(line: 2449, column: 36, scope: !5172)
!5186 = !DILocation(line: 2449, column: 22, scope: !5172)
!5187 = !DILocalVariable(name: "scale_sqrt", scope: !5172, file: !3, line: 2450, type: !4836)
!5188 = !DILocation(line: 2450, column: 14, scope: !5172)
!5189 = !DILocation(line: 2450, column: 33, scope: !5172)
!5190 = !DILocation(line: 2450, column: 27, scope: !5172)
!5191 = !DILocation(line: 2452, column: 15, scope: !5172)
!5192 = !DILocation(line: 2452, column: 21, scope: !5172)
!5193 = !DILocation(line: 2452, column: 2, scope: !5172)
!5194 = !DILocation(line: 2454, column: 12, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 2454, column: 2)
!5196 = !DILocation(line: 2454, column: 16, scope: !5195)
!5197 = !DILocation(line: 2454, column: 22, scope: !5195)
!5198 = !DILocation(line: 2454, column: 10, scope: !5195)
!5199 = !DILocation(line: 2454, column: 7, scope: !5195)
!5200 = !DILocation(line: 2454, column: 29, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 2454, column: 2)
!5202 = !DILocation(line: 2454, column: 2, scope: !5195)
!5203 = !DILocation(line: 2455, column: 13, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 2454, column: 48)
!5205 = !DILocation(line: 2455, column: 19, scope: !5204)
!5206 = !DILocation(line: 2455, column: 23, scope: !5204)
!5207 = !DILocation(line: 2455, column: 3, scope: !5204)
!5208 = !DILocation(line: 2456, column: 15, scope: !5204)
!5209 = !DILocation(line: 2456, column: 19, scope: !5204)
!5210 = !DILocation(line: 2456, column: 25, scope: !5204)
!5211 = !DILocation(line: 2456, column: 31, scope: !5204)
!5212 = !DILocation(line: 2456, column: 35, scope: !5204)
!5213 = !DILocation(line: 2456, column: 3, scope: !5204)
!5214 = !DILocation(line: 2457, column: 14, scope: !5204)
!5215 = !DILocation(line: 2457, column: 3, scope: !5204)
!5216 = !DILocation(line: 2457, column: 7, scope: !5204)
!5217 = !DILocation(line: 2457, column: 11, scope: !5204)
!5218 = !DILocation(line: 2460, column: 8, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 2460, column: 7)
!5220 = !DILocation(line: 2460, column: 7, scope: !5204)
!5221 = !DILocation(line: 2461, column: 15, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 2460, column: 40)
!5223 = !DILocation(line: 2461, column: 19, scope: !5222)
!5224 = !DILocation(line: 2461, column: 25, scope: !5222)
!5225 = !DILocation(line: 2461, column: 4, scope: !5222)
!5226 = !DILocation(line: 2462, column: 3, scope: !5222)
!5227 = !DILocation(line: 2464, column: 15, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 2463, column: 8)
!5229 = !DILocation(line: 2464, column: 19, scope: !5228)
!5230 = !DILocation(line: 2464, column: 25, scope: !5228)
!5231 = !DILocation(line: 2464, column: 4, scope: !5228)
!5232 = !DILocation(line: 2466, column: 2, scope: !5204)
!5233 = !DILocation(line: 2454, column: 38, scope: !5201)
!5234 = !DILocation(line: 2454, column: 42, scope: !5201)
!5235 = !DILocation(line: 2454, column: 36, scope: !5201)
!5236 = !DILocation(line: 2454, column: 2, scope: !5201)
!5237 = distinct !{!5237, !5202, !5238}
!5238 = !DILocation(line: 2466, column: 2, scope: !5195)
!5239 = !DILocation(line: 2467, column: 1, scope: !5172)
!5240 = distinct !DISubprogram(name: "BKE_mball_translate", scope: !3, file: !3, line: 2469, type: !5241, scopeLine: 2470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5241 = !DISubroutineType(types: !5242)
!5242 = !{null, !114, !4835}
!5243 = !DILocalVariable(name: "mb", arg: 1, scope: !5240, file: !3, line: 2469, type: !114)
!5244 = !DILocation(line: 2469, column: 36, scope: !5240)
!5245 = !DILocalVariable(name: "offset", arg: 2, scope: !5240, file: !3, line: 2469, type: !4835)
!5246 = !DILocation(line: 2469, column: 52, scope: !5240)
!5247 = !DILocalVariable(name: "ml", scope: !5240, file: !3, line: 2471, type: !1617)
!5248 = !DILocation(line: 2471, column: 12, scope: !5240)
!5249 = !DILocation(line: 2473, column: 12, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 2473, column: 2)
!5251 = !DILocation(line: 2473, column: 16, scope: !5250)
!5252 = !DILocation(line: 2473, column: 22, scope: !5250)
!5253 = !DILocation(line: 2473, column: 10, scope: !5250)
!5254 = !DILocation(line: 2473, column: 7, scope: !5250)
!5255 = !DILocation(line: 2473, column: 29, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 2473, column: 2)
!5257 = !DILocation(line: 2473, column: 2, scope: !5250)
!5258 = !DILocation(line: 2474, column: 14, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 2473, column: 48)
!5260 = !DILocation(line: 2474, column: 18, scope: !5259)
!5261 = !DILocation(line: 2474, column: 21, scope: !5259)
!5262 = !DILocation(line: 2474, column: 3, scope: !5259)
!5263 = !DILocation(line: 2475, column: 2, scope: !5259)
!5264 = !DILocation(line: 2473, column: 38, scope: !5256)
!5265 = !DILocation(line: 2473, column: 42, scope: !5256)
!5266 = !DILocation(line: 2473, column: 36, scope: !5256)
!5267 = !DILocation(line: 2473, column: 2, scope: !5256)
!5268 = distinct !{!5268, !5257, !5269}
!5269 = !DILocation(line: 2475, column: 2, scope: !5250)
!5270 = !DILocation(line: 2476, column: 1, scope: !5240)
!5271 = distinct !DISubprogram(name: "BKE_mball_select_all", scope: !3, file: !3, line: 2479, type: !5272, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5272 = !DISubroutineType(types: !5273)
!5273 = !{null, !1815}
!5274 = !DILocalVariable(name: "mb", arg: 1, scope: !5271, file: !3, line: 2479, type: !1815)
!5275 = !DILocation(line: 2479, column: 44, scope: !5271)
!5276 = !DILocalVariable(name: "ml", scope: !5271, file: !3, line: 2481, type: !1617)
!5277 = !DILocation(line: 2481, column: 12, scope: !5271)
!5278 = !DILocation(line: 2483, column: 12, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 2483, column: 2)
!5280 = !DILocation(line: 2483, column: 16, scope: !5279)
!5281 = !DILocation(line: 2483, column: 27, scope: !5279)
!5282 = !DILocation(line: 2483, column: 10, scope: !5279)
!5283 = !DILocation(line: 2483, column: 7, scope: !5279)
!5284 = !DILocation(line: 2483, column: 34, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 2483, column: 2)
!5286 = !DILocation(line: 2483, column: 2, scope: !5279)
!5287 = !DILocation(line: 2484, column: 3, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 2483, column: 53)
!5289 = !DILocation(line: 2484, column: 7, scope: !5288)
!5290 = !DILocation(line: 2484, column: 12, scope: !5288)
!5291 = !DILocation(line: 2485, column: 2, scope: !5288)
!5292 = !DILocation(line: 2483, column: 43, scope: !5285)
!5293 = !DILocation(line: 2483, column: 47, scope: !5285)
!5294 = !DILocation(line: 2483, column: 41, scope: !5285)
!5295 = !DILocation(line: 2483, column: 2, scope: !5285)
!5296 = distinct !{!5296, !5286, !5297}
!5297 = !DILocation(line: 2485, column: 2, scope: !5279)
!5298 = !DILocation(line: 2486, column: 1, scope: !5271)
!5299 = distinct !DISubprogram(name: "BKE_mball_deselect_all", scope: !3, file: !3, line: 2488, type: !1739, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5300 = !DILocalVariable(name: "mb", arg: 1, scope: !5299, file: !3, line: 2488, type: !114)
!5301 = !DILocation(line: 2488, column: 39, scope: !5299)
!5302 = !DILocalVariable(name: "ml", scope: !5299, file: !3, line: 2490, type: !1617)
!5303 = !DILocation(line: 2490, column: 12, scope: !5299)
!5304 = !DILocation(line: 2492, column: 12, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2492, column: 2)
!5306 = !DILocation(line: 2492, column: 16, scope: !5305)
!5307 = !DILocation(line: 2492, column: 27, scope: !5305)
!5308 = !DILocation(line: 2492, column: 10, scope: !5305)
!5309 = !DILocation(line: 2492, column: 7, scope: !5305)
!5310 = !DILocation(line: 2492, column: 34, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 2492, column: 2)
!5312 = !DILocation(line: 2492, column: 2, scope: !5305)
!5313 = !DILocation(line: 2493, column: 3, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 2492, column: 53)
!5315 = !DILocation(line: 2493, column: 7, scope: !5314)
!5316 = !DILocation(line: 2493, column: 12, scope: !5314)
!5317 = !DILocation(line: 2494, column: 2, scope: !5314)
!5318 = !DILocation(line: 2492, column: 43, scope: !5311)
!5319 = !DILocation(line: 2492, column: 47, scope: !5311)
!5320 = !DILocation(line: 2492, column: 41, scope: !5311)
!5321 = !DILocation(line: 2492, column: 2, scope: !5311)
!5322 = distinct !{!5322, !5312, !5323}
!5323 = !DILocation(line: 2494, column: 2, scope: !5305)
!5324 = !DILocation(line: 2495, column: 1, scope: !5299)
!5325 = distinct !DISubprogram(name: "BKE_mball_select_swap", scope: !3, file: !3, line: 2497, type: !5272, scopeLine: 2498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5326 = !DILocalVariable(name: "mb", arg: 1, scope: !5325, file: !3, line: 2497, type: !1815)
!5327 = !DILocation(line: 2497, column: 45, scope: !5325)
!5328 = !DILocalVariable(name: "ml", scope: !5325, file: !3, line: 2499, type: !1617)
!5329 = !DILocation(line: 2499, column: 12, scope: !5325)
!5330 = !DILocation(line: 2501, column: 12, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 2501, column: 2)
!5332 = !DILocation(line: 2501, column: 16, scope: !5331)
!5333 = !DILocation(line: 2501, column: 27, scope: !5331)
!5334 = !DILocation(line: 2501, column: 10, scope: !5331)
!5335 = !DILocation(line: 2501, column: 7, scope: !5331)
!5336 = !DILocation(line: 2501, column: 34, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 2501, column: 2)
!5338 = !DILocation(line: 2501, column: 2, scope: !5331)
!5339 = !DILocation(line: 2502, column: 3, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 2501, column: 53)
!5341 = !DILocation(line: 2502, column: 7, scope: !5340)
!5342 = !DILocation(line: 2502, column: 12, scope: !5340)
!5343 = !DILocation(line: 2503, column: 2, scope: !5340)
!5344 = !DILocation(line: 2501, column: 43, scope: !5337)
!5345 = !DILocation(line: 2501, column: 47, scope: !5337)
!5346 = !DILocation(line: 2501, column: 41, scope: !5337)
!5347 = !DILocation(line: 2501, column: 2, scope: !5337)
!5348 = distinct !{!5348, !5338, !5349}
!5349 = !DILocation(line: 2503, column: 2, scope: !5331)
!5350 = !DILocation(line: 2504, column: 1, scope: !5325)
!5351 = distinct !DISubprogram(name: "copy_v3_fl3", scope: !4832, file: !4832, line: 245, type: !5352, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{null, !1461, !141, !141, !141}
!5354 = !DILocalVariable(name: "v", arg: 1, scope: !5351, file: !4832, line: 245, type: !1461)
!5355 = !DILocation(line: 245, column: 32, scope: !5351)
!5356 = !DILocalVariable(name: "x", arg: 2, scope: !5351, file: !4832, line: 245, type: !141)
!5357 = !DILocation(line: 245, column: 44, scope: !5351)
!5358 = !DILocalVariable(name: "y", arg: 3, scope: !5351, file: !4832, line: 245, type: !141)
!5359 = !DILocation(line: 245, column: 53, scope: !5351)
!5360 = !DILocalVariable(name: "z", arg: 4, scope: !5351, file: !4832, line: 245, type: !141)
!5361 = !DILocation(line: 245, column: 62, scope: !5351)
!5362 = !DILocation(line: 247, column: 9, scope: !5351)
!5363 = !DILocation(line: 247, column: 2, scope: !5351)
!5364 = !DILocation(line: 247, column: 7, scope: !5351)
!5365 = !DILocation(line: 248, column: 9, scope: !5351)
!5366 = !DILocation(line: 248, column: 2, scope: !5351)
!5367 = !DILocation(line: 248, column: 7, scope: !5351)
!5368 = !DILocation(line: 249, column: 9, scope: !5351)
!5369 = !DILocation(line: 249, column: 2, scope: !5351)
!5370 = !DILocation(line: 249, column: 7, scope: !5351)
!5371 = !DILocation(line: 250, column: 1, scope: !5351)
!5372 = distinct !DISubprogram(name: "calc_mballco", scope: !3, file: !3, line: 602, type: !5373, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !1617, !1461}
!5375 = !DILocalVariable(name: "ml", arg: 1, scope: !5372, file: !3, line: 602, type: !1617)
!5376 = !DILocation(line: 602, column: 36, scope: !5372)
!5377 = !DILocalVariable(name: "vec", arg: 2, scope: !5372, file: !3, line: 602, type: !1461)
!5378 = !DILocation(line: 602, column: 46, scope: !5372)
!5379 = !DILocation(line: 604, column: 6, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 604, column: 6)
!5381 = !DILocation(line: 604, column: 10, scope: !5380)
!5382 = !DILocation(line: 604, column: 6, scope: !5372)
!5383 = !DILocation(line: 605, column: 27, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5380, file: !3, line: 604, column: 15)
!5385 = !DILocation(line: 605, column: 31, scope: !5384)
!5386 = !DILocation(line: 605, column: 13, scope: !5384)
!5387 = !DILocation(line: 605, column: 36, scope: !5384)
!5388 = !DILocation(line: 605, column: 3, scope: !5384)
!5389 = !DILocation(line: 606, column: 2, scope: !5384)
!5390 = !DILocation(line: 607, column: 1, scope: !5372)
!5391 = distinct !DISubprogram(name: "densfunc", scope: !3, file: !3, line: 609, type: !5392, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{!141, !1617, !141, !141, !141}
!5394 = !DILocalVariable(name: "ball", arg: 1, scope: !5391, file: !3, line: 609, type: !1617)
!5395 = !DILocation(line: 609, column: 33, scope: !5391)
!5396 = !DILocalVariable(name: "x", arg: 2, scope: !5391, file: !3, line: 609, type: !141)
!5397 = !DILocation(line: 609, column: 45, scope: !5391)
!5398 = !DILocalVariable(name: "y", arg: 3, scope: !5391, file: !3, line: 609, type: !141)
!5399 = !DILocation(line: 609, column: 54, scope: !5391)
!5400 = !DILocalVariable(name: "z", arg: 4, scope: !5391, file: !3, line: 609, type: !141)
!5401 = !DILocation(line: 609, column: 63, scope: !5391)
!5402 = !DILocalVariable(name: "dist2", scope: !5391, file: !3, line: 611, type: !141)
!5403 = !DILocation(line: 611, column: 8, scope: !5391)
!5404 = !DILocalVariable(name: "dvec", scope: !5391, file: !3, line: 612, type: !172)
!5405 = !DILocation(line: 612, column: 8, scope: !5391)
!5406 = !DILocation(line: 612, column: 18, scope: !5391)
!5407 = !DILocation(line: 612, column: 19, scope: !5391)
!5408 = !DILocation(line: 612, column: 22, scope: !5391)
!5409 = !DILocation(line: 612, column: 25, scope: !5391)
!5410 = !DILocation(line: 614, column: 26, scope: !5391)
!5411 = !DILocation(line: 614, column: 32, scope: !5391)
!5412 = !DILocation(line: 614, column: 12, scope: !5391)
!5413 = !DILocation(line: 614, column: 38, scope: !5391)
!5414 = !DILocation(line: 614, column: 2, scope: !5391)
!5415 = !DILocation(line: 616, column: 10, scope: !5391)
!5416 = !DILocation(line: 616, column: 16, scope: !5391)
!5417 = !DILocation(line: 616, column: 2, scope: !5391)
!5418 = !DILocation(line: 619, column: 4, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 616, column: 22)
!5420 = !DILocation(line: 621, column: 13, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 621, column: 13)
!5422 = !DILocation(line: 621, column: 24, scope: !5421)
!5423 = !DILocation(line: 621, column: 30, scope: !5421)
!5424 = !DILocation(line: 621, column: 21, scope: !5421)
!5425 = !DILocation(line: 621, column: 13, scope: !5419)
!5426 = !DILocation(line: 621, column: 47, scope: !5421)
!5427 = !DILocation(line: 621, column: 53, scope: !5421)
!5428 = !DILocation(line: 621, column: 36, scope: !5421)
!5429 = !DILocation(line: 621, column: 44, scope: !5421)
!5430 = !DILocation(line: 622, column: 13, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 622, column: 13)
!5432 = !DILocation(line: 622, column: 24, scope: !5431)
!5433 = !DILocation(line: 622, column: 30, scope: !5431)
!5434 = !DILocation(line: 622, column: 23, scope: !5431)
!5435 = !DILocation(line: 622, column: 21, scope: !5431)
!5436 = !DILocation(line: 622, column: 13, scope: !5421)
!5437 = !DILocation(line: 622, column: 47, scope: !5431)
!5438 = !DILocation(line: 622, column: 53, scope: !5431)
!5439 = !DILocation(line: 622, column: 36, scope: !5431)
!5440 = !DILocation(line: 622, column: 44, scope: !5431)
!5441 = !DILocation(line: 623, column: 36, scope: !5431)
!5442 = !DILocation(line: 623, column: 44, scope: !5431)
!5443 = !DILocation(line: 624, column: 4, scope: !5419)
!5444 = !DILocation(line: 626, column: 13, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 626, column: 13)
!5446 = !DILocation(line: 626, column: 24, scope: !5445)
!5447 = !DILocation(line: 626, column: 30, scope: !5445)
!5448 = !DILocation(line: 626, column: 21, scope: !5445)
!5449 = !DILocation(line: 626, column: 13, scope: !5419)
!5450 = !DILocation(line: 626, column: 47, scope: !5445)
!5451 = !DILocation(line: 626, column: 53, scope: !5445)
!5452 = !DILocation(line: 626, column: 36, scope: !5445)
!5453 = !DILocation(line: 626, column: 44, scope: !5445)
!5454 = !DILocation(line: 627, column: 13, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 627, column: 13)
!5456 = !DILocation(line: 627, column: 24, scope: !5455)
!5457 = !DILocation(line: 627, column: 30, scope: !5455)
!5458 = !DILocation(line: 627, column: 23, scope: !5455)
!5459 = !DILocation(line: 627, column: 21, scope: !5455)
!5460 = !DILocation(line: 627, column: 13, scope: !5445)
!5461 = !DILocation(line: 627, column: 47, scope: !5455)
!5462 = !DILocation(line: 627, column: 53, scope: !5455)
!5463 = !DILocation(line: 627, column: 36, scope: !5455)
!5464 = !DILocation(line: 627, column: 44, scope: !5455)
!5465 = !DILocation(line: 628, column: 36, scope: !5455)
!5466 = !DILocation(line: 628, column: 44, scope: !5455)
!5467 = !DILocation(line: 629, column: 13, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 629, column: 13)
!5469 = !DILocation(line: 629, column: 24, scope: !5468)
!5470 = !DILocation(line: 629, column: 30, scope: !5468)
!5471 = !DILocation(line: 629, column: 21, scope: !5468)
!5472 = !DILocation(line: 629, column: 13, scope: !5419)
!5473 = !DILocation(line: 629, column: 47, scope: !5468)
!5474 = !DILocation(line: 629, column: 53, scope: !5468)
!5475 = !DILocation(line: 629, column: 36, scope: !5468)
!5476 = !DILocation(line: 629, column: 44, scope: !5468)
!5477 = !DILocation(line: 630, column: 13, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 630, column: 13)
!5479 = !DILocation(line: 630, column: 24, scope: !5478)
!5480 = !DILocation(line: 630, column: 30, scope: !5478)
!5481 = !DILocation(line: 630, column: 23, scope: !5478)
!5482 = !DILocation(line: 630, column: 21, scope: !5478)
!5483 = !DILocation(line: 630, column: 13, scope: !5468)
!5484 = !DILocation(line: 630, column: 47, scope: !5478)
!5485 = !DILocation(line: 630, column: 53, scope: !5478)
!5486 = !DILocation(line: 630, column: 36, scope: !5478)
!5487 = !DILocation(line: 630, column: 44, scope: !5478)
!5488 = !DILocation(line: 631, column: 36, scope: !5478)
!5489 = !DILocation(line: 631, column: 44, scope: !5478)
!5490 = !DILocation(line: 632, column: 4, scope: !5419)
!5491 = !DILocation(line: 634, column: 15, scope: !5419)
!5492 = !DILocation(line: 634, column: 21, scope: !5419)
!5493 = !DILocation(line: 634, column: 4, scope: !5419)
!5494 = !DILocation(line: 634, column: 12, scope: !5419)
!5495 = !DILocation(line: 635, column: 15, scope: !5419)
!5496 = !DILocation(line: 635, column: 21, scope: !5419)
!5497 = !DILocation(line: 635, column: 4, scope: !5419)
!5498 = !DILocation(line: 635, column: 12, scope: !5419)
!5499 = !DILocation(line: 636, column: 15, scope: !5419)
!5500 = !DILocation(line: 636, column: 21, scope: !5419)
!5501 = !DILocation(line: 636, column: 4, scope: !5419)
!5502 = !DILocation(line: 636, column: 12, scope: !5419)
!5503 = !DILocation(line: 637, column: 4, scope: !5419)
!5504 = !DILocation(line: 639, column: 13, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 639, column: 13)
!5506 = !DILocation(line: 639, column: 24, scope: !5505)
!5507 = !DILocation(line: 639, column: 30, scope: !5505)
!5508 = !DILocation(line: 639, column: 21, scope: !5505)
!5509 = !DILocation(line: 639, column: 13, scope: !5419)
!5510 = !DILocation(line: 639, column: 47, scope: !5505)
!5511 = !DILocation(line: 639, column: 53, scope: !5505)
!5512 = !DILocation(line: 639, column: 36, scope: !5505)
!5513 = !DILocation(line: 639, column: 44, scope: !5505)
!5514 = !DILocation(line: 640, column: 13, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 640, column: 13)
!5516 = !DILocation(line: 640, column: 24, scope: !5515)
!5517 = !DILocation(line: 640, column: 30, scope: !5515)
!5518 = !DILocation(line: 640, column: 23, scope: !5515)
!5519 = !DILocation(line: 640, column: 21, scope: !5515)
!5520 = !DILocation(line: 640, column: 13, scope: !5505)
!5521 = !DILocation(line: 640, column: 47, scope: !5515)
!5522 = !DILocation(line: 640, column: 53, scope: !5515)
!5523 = !DILocation(line: 640, column: 36, scope: !5515)
!5524 = !DILocation(line: 640, column: 44, scope: !5515)
!5525 = !DILocation(line: 641, column: 36, scope: !5515)
!5526 = !DILocation(line: 641, column: 44, scope: !5515)
!5527 = !DILocation(line: 643, column: 13, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 643, column: 13)
!5529 = !DILocation(line: 643, column: 24, scope: !5528)
!5530 = !DILocation(line: 643, column: 30, scope: !5528)
!5531 = !DILocation(line: 643, column: 21, scope: !5528)
!5532 = !DILocation(line: 643, column: 13, scope: !5419)
!5533 = !DILocation(line: 643, column: 47, scope: !5528)
!5534 = !DILocation(line: 643, column: 53, scope: !5528)
!5535 = !DILocation(line: 643, column: 36, scope: !5528)
!5536 = !DILocation(line: 643, column: 44, scope: !5528)
!5537 = !DILocation(line: 644, column: 13, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 644, column: 13)
!5539 = !DILocation(line: 644, column: 24, scope: !5538)
!5540 = !DILocation(line: 644, column: 30, scope: !5538)
!5541 = !DILocation(line: 644, column: 23, scope: !5538)
!5542 = !DILocation(line: 644, column: 21, scope: !5538)
!5543 = !DILocation(line: 644, column: 13, scope: !5528)
!5544 = !DILocation(line: 644, column: 47, scope: !5538)
!5545 = !DILocation(line: 644, column: 53, scope: !5538)
!5546 = !DILocation(line: 644, column: 36, scope: !5538)
!5547 = !DILocation(line: 644, column: 44, scope: !5538)
!5548 = !DILocation(line: 645, column: 36, scope: !5538)
!5549 = !DILocation(line: 645, column: 44, scope: !5538)
!5550 = !DILocation(line: 647, column: 13, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 647, column: 13)
!5552 = !DILocation(line: 647, column: 24, scope: !5551)
!5553 = !DILocation(line: 647, column: 30, scope: !5551)
!5554 = !DILocation(line: 647, column: 21, scope: !5551)
!5555 = !DILocation(line: 647, column: 13, scope: !5419)
!5556 = !DILocation(line: 647, column: 47, scope: !5551)
!5557 = !DILocation(line: 647, column: 53, scope: !5551)
!5558 = !DILocation(line: 647, column: 36, scope: !5551)
!5559 = !DILocation(line: 647, column: 44, scope: !5551)
!5560 = !DILocation(line: 648, column: 13, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 648, column: 13)
!5562 = !DILocation(line: 648, column: 24, scope: !5561)
!5563 = !DILocation(line: 648, column: 30, scope: !5561)
!5564 = !DILocation(line: 648, column: 23, scope: !5561)
!5565 = !DILocation(line: 648, column: 21, scope: !5561)
!5566 = !DILocation(line: 648, column: 13, scope: !5551)
!5567 = !DILocation(line: 648, column: 47, scope: !5561)
!5568 = !DILocation(line: 648, column: 53, scope: !5561)
!5569 = !DILocation(line: 648, column: 36, scope: !5561)
!5570 = !DILocation(line: 648, column: 44, scope: !5561)
!5571 = !DILocation(line: 649, column: 36, scope: !5561)
!5572 = !DILocation(line: 649, column: 44, scope: !5561)
!5573 = !DILocation(line: 650, column: 4, scope: !5419)
!5574 = !DILocation(line: 654, column: 13, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 654, column: 13)
!5576 = !DILocation(line: 654, column: 24, scope: !5575)
!5577 = !DILocation(line: 654, column: 30, scope: !5575)
!5578 = !DILocation(line: 654, column: 21, scope: !5575)
!5579 = !DILocation(line: 654, column: 13, scope: !5419)
!5580 = !DILocation(line: 654, column: 46, scope: !5575)
!5581 = !DILocation(line: 654, column: 52, scope: !5575)
!5582 = !DILocation(line: 654, column: 35, scope: !5575)
!5583 = !DILocation(line: 654, column: 43, scope: !5575)
!5584 = !DILocation(line: 655, column: 13, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 655, column: 13)
!5586 = !DILocation(line: 655, column: 24, scope: !5585)
!5587 = !DILocation(line: 655, column: 30, scope: !5585)
!5588 = !DILocation(line: 655, column: 23, scope: !5585)
!5589 = !DILocation(line: 655, column: 21, scope: !5585)
!5590 = !DILocation(line: 655, column: 13, scope: !5575)
!5591 = !DILocation(line: 655, column: 46, scope: !5585)
!5592 = !DILocation(line: 655, column: 52, scope: !5585)
!5593 = !DILocation(line: 655, column: 35, scope: !5585)
!5594 = !DILocation(line: 655, column: 43, scope: !5585)
!5595 = !DILocation(line: 656, column: 35, scope: !5585)
!5596 = !DILocation(line: 656, column: 43, scope: !5585)
!5597 = !DILocation(line: 657, column: 4, scope: !5419)
!5598 = !DILocation(line: 659, column: 13, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 659, column: 13)
!5600 = !DILocation(line: 659, column: 24, scope: !5599)
!5601 = !DILocation(line: 659, column: 30, scope: !5599)
!5602 = !DILocation(line: 659, column: 21, scope: !5599)
!5603 = !DILocation(line: 659, column: 13, scope: !5419)
!5604 = !DILocation(line: 659, column: 46, scope: !5599)
!5605 = !DILocation(line: 659, column: 52, scope: !5599)
!5606 = !DILocation(line: 659, column: 35, scope: !5599)
!5607 = !DILocation(line: 659, column: 43, scope: !5599)
!5608 = !DILocation(line: 660, column: 13, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 660, column: 13)
!5610 = !DILocation(line: 660, column: 24, scope: !5609)
!5611 = !DILocation(line: 660, column: 30, scope: !5609)
!5612 = !DILocation(line: 660, column: 23, scope: !5609)
!5613 = !DILocation(line: 660, column: 21, scope: !5609)
!5614 = !DILocation(line: 660, column: 13, scope: !5599)
!5615 = !DILocation(line: 660, column: 46, scope: !5609)
!5616 = !DILocation(line: 660, column: 52, scope: !5609)
!5617 = !DILocation(line: 660, column: 35, scope: !5609)
!5618 = !DILocation(line: 660, column: 43, scope: !5609)
!5619 = !DILocation(line: 661, column: 35, scope: !5609)
!5620 = !DILocation(line: 661, column: 43, scope: !5609)
!5621 = !DILocation(line: 662, column: 4, scope: !5419)
!5622 = !DILocation(line: 664, column: 13, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 664, column: 13)
!5624 = !DILocation(line: 664, column: 24, scope: !5623)
!5625 = !DILocation(line: 664, column: 30, scope: !5623)
!5626 = !DILocation(line: 664, column: 21, scope: !5623)
!5627 = !DILocation(line: 664, column: 13, scope: !5419)
!5628 = !DILocation(line: 664, column: 46, scope: !5623)
!5629 = !DILocation(line: 664, column: 52, scope: !5623)
!5630 = !DILocation(line: 664, column: 35, scope: !5623)
!5631 = !DILocation(line: 664, column: 43, scope: !5623)
!5632 = !DILocation(line: 665, column: 13, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 665, column: 13)
!5634 = !DILocation(line: 665, column: 24, scope: !5633)
!5635 = !DILocation(line: 665, column: 30, scope: !5633)
!5636 = !DILocation(line: 665, column: 23, scope: !5633)
!5637 = !DILocation(line: 665, column: 21, scope: !5633)
!5638 = !DILocation(line: 665, column: 13, scope: !5623)
!5639 = !DILocation(line: 665, column: 46, scope: !5633)
!5640 = !DILocation(line: 665, column: 52, scope: !5633)
!5641 = !DILocation(line: 665, column: 35, scope: !5633)
!5642 = !DILocation(line: 665, column: 43, scope: !5633)
!5643 = !DILocation(line: 666, column: 35, scope: !5633)
!5644 = !DILocation(line: 666, column: 43, scope: !5633)
!5645 = !DILocation(line: 667, column: 4, scope: !5419)
!5646 = !DILocation(line: 671, column: 33, scope: !5391)
!5647 = !DILocation(line: 671, column: 18, scope: !5391)
!5648 = !DILocation(line: 671, column: 41, scope: !5391)
!5649 = !DILocation(line: 671, column: 47, scope: !5391)
!5650 = !DILocation(line: 671, column: 39, scope: !5391)
!5651 = !DILocation(line: 671, column: 15, scope: !5391)
!5652 = !DILocation(line: 671, column: 8, scope: !5391)
!5653 = !DILocation(line: 673, column: 7, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 673, column: 6)
!5655 = !DILocation(line: 673, column: 13, scope: !5654)
!5656 = !DILocation(line: 673, column: 18, scope: !5654)
!5657 = !DILocation(line: 673, column: 33, scope: !5654)
!5658 = !DILocation(line: 673, column: 6, scope: !5391)
!5659 = !DILocation(line: 674, column: 11, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 673, column: 39)
!5661 = !DILocation(line: 674, column: 17, scope: !5660)
!5662 = !DILocation(line: 674, column: 10, scope: !5660)
!5663 = !DILocation(line: 674, column: 36, scope: !5660)
!5664 = !DILocation(line: 674, column: 42, scope: !5660)
!5665 = !DILocation(line: 674, column: 46, scope: !5660)
!5666 = !DILocation(line: 674, column: 44, scope: !5660)
!5667 = !DILocation(line: 674, column: 54, scope: !5660)
!5668 = !DILocation(line: 674, column: 52, scope: !5660)
!5669 = !DILocation(line: 674, column: 62, scope: !5660)
!5670 = !DILocation(line: 674, column: 60, scope: !5660)
!5671 = !DILocation(line: 674, column: 69, scope: !5660)
!5672 = !DILocation(line: 674, column: 3, scope: !5660)
!5673 = !DILocation(line: 677, column: 11, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 676, column: 7)
!5675 = !DILocation(line: 677, column: 17, scope: !5674)
!5676 = !DILocation(line: 677, column: 10, scope: !5674)
!5677 = !DILocation(line: 677, column: 42, scope: !5674)
!5678 = !DILocation(line: 677, column: 48, scope: !5674)
!5679 = !DILocation(line: 677, column: 52, scope: !5674)
!5680 = !DILocation(line: 677, column: 50, scope: !5674)
!5681 = !DILocation(line: 677, column: 60, scope: !5674)
!5682 = !DILocation(line: 677, column: 58, scope: !5674)
!5683 = !DILocation(line: 677, column: 68, scope: !5674)
!5684 = !DILocation(line: 677, column: 66, scope: !5674)
!5685 = !DILocation(line: 677, column: 39, scope: !5674)
!5686 = !DILocation(line: 677, column: 3, scope: !5674)
!5687 = !DILocation(line: 679, column: 1, scope: !5391)
!5688 = distinct !DISubprogram(name: "len_squared_v3", scope: !4832, file: !4832, line: 671, type: !5689, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!141, !4835}
!5691 = !DILocalVariable(name: "v", arg: 1, scope: !5688, file: !4832, line: 671, type: !4835)
!5692 = !DILocation(line: 671, column: 42, scope: !5688)
!5693 = !DILocation(line: 673, column: 9, scope: !5688)
!5694 = !DILocation(line: 673, column: 16, scope: !5688)
!5695 = !DILocation(line: 673, column: 14, scope: !5688)
!5696 = !DILocation(line: 673, column: 23, scope: !5688)
!5697 = !DILocation(line: 673, column: 30, scope: !5688)
!5698 = !DILocation(line: 673, column: 28, scope: !5688)
!5699 = !DILocation(line: 673, column: 21, scope: !5688)
!5700 = !DILocation(line: 673, column: 37, scope: !5688)
!5701 = !DILocation(line: 673, column: 44, scope: !5688)
!5702 = !DILocation(line: 673, column: 42, scope: !5688)
!5703 = !DILocation(line: 673, column: 35, scope: !5688)
!5704 = !DILocation(line: 673, column: 2, scope: !5688)
!5705 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !5046, file: !5046, line: 89, type: !5706, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{null, !2564}
!5708 = !DILocalVariable(name: "lb", arg: 1, scope: !5705, file: !5046, line: 89, type: !2564)
!5709 = !DILocation(line: 89, column: 53, scope: !5705)
!5710 = !DILocation(line: 89, column: 71, scope: !5705)
!5711 = !DILocation(line: 89, column: 75, scope: !5705)
!5712 = !DILocation(line: 89, column: 80, scope: !5705)
!5713 = !DILocation(line: 89, column: 59, scope: !5705)
!5714 = !DILocation(line: 89, column: 63, scope: !5705)
!5715 = !DILocation(line: 89, column: 69, scope: !5705)
!5716 = !DILocation(line: 89, column: 93, scope: !5705)
!5717 = distinct !DISubprogram(name: "subdivide_metaball_octal_node", scope: !3, file: !3, line: 1884, type: !5718, scopeLine: 1885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{null, !4564, !141, !141, !141, !76}
!5720 = !DILocalVariable(name: "node", arg: 1, scope: !5717, file: !3, line: 1884, type: !4564)
!5721 = !DILocation(line: 1884, column: 55, scope: !5717)
!5722 = !DILocalVariable(name: "size_x", arg: 2, scope: !5717, file: !3, line: 1884, type: !141)
!5723 = !DILocation(line: 1884, column: 67, scope: !5717)
!5724 = !DILocalVariable(name: "size_y", arg: 3, scope: !5717, file: !3, line: 1884, type: !141)
!5725 = !DILocation(line: 1884, column: 81, scope: !5717)
!5726 = !DILocalVariable(name: "size_z", arg: 4, scope: !5717, file: !3, line: 1884, type: !141)
!5727 = !DILocation(line: 1884, column: 95, scope: !5717)
!5728 = !DILocalVariable(name: "depth", arg: 5, scope: !5717, file: !3, line: 1884, type: !76)
!5729 = !DILocation(line: 1884, column: 109, scope: !5717)
!5730 = !DILocalVariable(name: "ml", scope: !5717, file: !3, line: 1886, type: !1617)
!5731 = !DILocation(line: 1886, column: 12, scope: !5717)
!5732 = !DILocalVariable(name: "ml_p", scope: !5717, file: !3, line: 1887, type: !4193)
!5733 = !DILocation(line: 1887, column: 14, scope: !5717)
!5734 = !DILocalVariable(name: "x", scope: !5717, file: !3, line: 1888, type: !141)
!5735 = !DILocation(line: 1888, column: 8, scope: !5717)
!5736 = !DILocalVariable(name: "y", scope: !5717, file: !3, line: 1888, type: !141)
!5737 = !DILocation(line: 1888, column: 11, scope: !5717)
!5738 = !DILocalVariable(name: "z", scope: !5717, file: !3, line: 1888, type: !141)
!5739 = !DILocation(line: 1888, column: 14, scope: !5717)
!5740 = !DILocalVariable(name: "a", scope: !5717, file: !3, line: 1889, type: !78)
!5741 = !DILocation(line: 1889, column: 6, scope: !5717)
!5742 = !DILocalVariable(name: "i", scope: !5717, file: !3, line: 1889, type: !78)
!5743 = !DILocation(line: 1889, column: 9, scope: !5717)
!5744 = !DILocation(line: 1892, column: 9, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 1892, column: 2)
!5746 = !DILocation(line: 1892, column: 7, scope: !5745)
!5747 = !DILocation(line: 1892, column: 14, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1892, column: 2)
!5749 = !DILocation(line: 1892, column: 16, scope: !5748)
!5750 = !DILocation(line: 1892, column: 2, scope: !5745)
!5751 = !DILocation(line: 1893, column: 20, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1892, column: 26)
!5753 = !DILocation(line: 1893, column: 3, scope: !5752)
!5754 = !DILocation(line: 1893, column: 9, scope: !5752)
!5755 = !DILocation(line: 1893, column: 15, scope: !5752)
!5756 = !DILocation(line: 1893, column: 18, scope: !5752)
!5757 = !DILocation(line: 1894, column: 10, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 1894, column: 3)
!5759 = !DILocation(line: 1894, column: 8, scope: !5758)
!5760 = !DILocation(line: 1894, column: 15, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 1894, column: 3)
!5762 = !DILocation(line: 1894, column: 17, scope: !5761)
!5763 = !DILocation(line: 1894, column: 3, scope: !5758)
!5764 = !DILocation(line: 1895, column: 4, scope: !5761)
!5765 = !DILocation(line: 1895, column: 10, scope: !5761)
!5766 = !DILocation(line: 1895, column: 16, scope: !5761)
!5767 = !DILocation(line: 1895, column: 20, scope: !5761)
!5768 = !DILocation(line: 1895, column: 26, scope: !5761)
!5769 = !DILocation(line: 1895, column: 29, scope: !5761)
!5770 = !DILocation(line: 1894, column: 23, scope: !5761)
!5771 = !DILocation(line: 1894, column: 3, scope: !5761)
!5772 = distinct !{!5772, !5763, !5773}
!5773 = !DILocation(line: 1895, column: 31, scope: !5758)
!5774 = !DILocation(line: 1896, column: 28, scope: !5752)
!5775 = !DILocation(line: 1896, column: 3, scope: !5752)
!5776 = !DILocation(line: 1896, column: 9, scope: !5752)
!5777 = !DILocation(line: 1896, column: 15, scope: !5752)
!5778 = !DILocation(line: 1896, column: 19, scope: !5752)
!5779 = !DILocation(line: 1896, column: 26, scope: !5752)
!5780 = !DILocation(line: 1897, column: 23, scope: !5752)
!5781 = !DILocation(line: 1897, column: 29, scope: !5752)
!5782 = !DILocation(line: 1897, column: 35, scope: !5752)
!5783 = !DILocation(line: 1897, column: 39, scope: !5752)
!5784 = !DILocation(line: 1897, column: 3, scope: !5752)
!5785 = !DILocation(line: 1898, column: 3, scope: !5752)
!5786 = !DILocation(line: 1898, column: 9, scope: !5752)
!5787 = !DILocation(line: 1898, column: 15, scope: !5752)
!5788 = !DILocation(line: 1898, column: 19, scope: !5752)
!5789 = !DILocation(line: 1898, column: 25, scope: !5752)
!5790 = !DILocation(line: 1899, column: 3, scope: !5752)
!5791 = !DILocation(line: 1899, column: 9, scope: !5752)
!5792 = !DILocation(line: 1899, column: 15, scope: !5752)
!5793 = !DILocation(line: 1899, column: 19, scope: !5752)
!5794 = !DILocation(line: 1899, column: 23, scope: !5752)
!5795 = !DILocation(line: 1900, column: 3, scope: !5752)
!5796 = !DILocation(line: 1900, column: 9, scope: !5752)
!5797 = !DILocation(line: 1900, column: 15, scope: !5752)
!5798 = !DILocation(line: 1900, column: 19, scope: !5752)
!5799 = !DILocation(line: 1900, column: 23, scope: !5752)
!5800 = !DILocation(line: 1901, column: 2, scope: !5752)
!5801 = !DILocation(line: 1892, column: 22, scope: !5748)
!5802 = !DILocation(line: 1892, column: 2, scope: !5748)
!5803 = distinct !{!5803, !5750, !5804}
!5804 = !DILocation(line: 1901, column: 2, scope: !5745)
!5805 = !DILocation(line: 1903, column: 9, scope: !5717)
!5806 = !DILocation(line: 1904, column: 9, scope: !5717)
!5807 = !DILocation(line: 1905, column: 9, scope: !5717)
!5808 = !DILocation(line: 1908, column: 16, scope: !5717)
!5809 = !DILocation(line: 1908, column: 22, scope: !5717)
!5810 = !DILocation(line: 1908, column: 30, scope: !5717)
!5811 = !DILocation(line: 1908, column: 28, scope: !5717)
!5812 = !DILocation(line: 1908, column: 14, scope: !5717)
!5813 = !DILocation(line: 1908, column: 2, scope: !5717)
!5814 = !DILocation(line: 1908, column: 8, scope: !5717)
!5815 = !DILocation(line: 1908, column: 10, scope: !5717)
!5816 = !DILocation(line: 1909, column: 16, scope: !5717)
!5817 = !DILocation(line: 1909, column: 22, scope: !5717)
!5818 = !DILocation(line: 1909, column: 30, scope: !5717)
!5819 = !DILocation(line: 1909, column: 28, scope: !5717)
!5820 = !DILocation(line: 1909, column: 14, scope: !5717)
!5821 = !DILocation(line: 1909, column: 2, scope: !5717)
!5822 = !DILocation(line: 1909, column: 8, scope: !5717)
!5823 = !DILocation(line: 1909, column: 10, scope: !5717)
!5824 = !DILocation(line: 1910, column: 16, scope: !5717)
!5825 = !DILocation(line: 1910, column: 22, scope: !5717)
!5826 = !DILocation(line: 1910, column: 30, scope: !5717)
!5827 = !DILocation(line: 1910, column: 28, scope: !5717)
!5828 = !DILocation(line: 1910, column: 14, scope: !5717)
!5829 = !DILocation(line: 1910, column: 2, scope: !5717)
!5830 = !DILocation(line: 1910, column: 8, scope: !5717)
!5831 = !DILocation(line: 1910, column: 10, scope: !5717)
!5832 = !DILocation(line: 1913, column: 26, scope: !5717)
!5833 = !DILocation(line: 1913, column: 32, scope: !5717)
!5834 = !DILocation(line: 1913, column: 2, scope: !5717)
!5835 = !DILocation(line: 1913, column: 8, scope: !5717)
!5836 = !DILocation(line: 1913, column: 18, scope: !5717)
!5837 = !DILocation(line: 1913, column: 24, scope: !5717)
!5838 = !DILocation(line: 1914, column: 26, scope: !5717)
!5839 = !DILocation(line: 1914, column: 32, scope: !5717)
!5840 = !DILocation(line: 1914, column: 2, scope: !5717)
!5841 = !DILocation(line: 1914, column: 8, scope: !5717)
!5842 = !DILocation(line: 1914, column: 18, scope: !5717)
!5843 = !DILocation(line: 1914, column: 24, scope: !5717)
!5844 = !DILocation(line: 1915, column: 26, scope: !5717)
!5845 = !DILocation(line: 1915, column: 32, scope: !5717)
!5846 = !DILocation(line: 1915, column: 2, scope: !5717)
!5847 = !DILocation(line: 1915, column: 8, scope: !5717)
!5848 = !DILocation(line: 1915, column: 18, scope: !5717)
!5849 = !DILocation(line: 1915, column: 24, scope: !5717)
!5850 = !DILocation(line: 1916, column: 22, scope: !5717)
!5851 = !DILocation(line: 1916, column: 28, scope: !5717)
!5852 = !DILocation(line: 1916, column: 38, scope: !5717)
!5853 = !DILocation(line: 1916, column: 46, scope: !5717)
!5854 = !DILocation(line: 1916, column: 53, scope: !5717)
!5855 = !DILocation(line: 1916, column: 44, scope: !5717)
!5856 = !DILocation(line: 1916, column: 2, scope: !5717)
!5857 = !DILocation(line: 1916, column: 8, scope: !5717)
!5858 = !DILocation(line: 1916, column: 18, scope: !5717)
!5859 = !DILocation(line: 1916, column: 20, scope: !5717)
!5860 = !DILocation(line: 1917, column: 22, scope: !5717)
!5861 = !DILocation(line: 1917, column: 28, scope: !5717)
!5862 = !DILocation(line: 1917, column: 38, scope: !5717)
!5863 = !DILocation(line: 1917, column: 46, scope: !5717)
!5864 = !DILocation(line: 1917, column: 53, scope: !5717)
!5865 = !DILocation(line: 1917, column: 44, scope: !5717)
!5866 = !DILocation(line: 1917, column: 2, scope: !5717)
!5867 = !DILocation(line: 1917, column: 8, scope: !5717)
!5868 = !DILocation(line: 1917, column: 18, scope: !5717)
!5869 = !DILocation(line: 1917, column: 20, scope: !5717)
!5870 = !DILocation(line: 1918, column: 22, scope: !5717)
!5871 = !DILocation(line: 1918, column: 28, scope: !5717)
!5872 = !DILocation(line: 1918, column: 38, scope: !5717)
!5873 = !DILocation(line: 1918, column: 46, scope: !5717)
!5874 = !DILocation(line: 1918, column: 53, scope: !5717)
!5875 = !DILocation(line: 1918, column: 44, scope: !5717)
!5876 = !DILocation(line: 1918, column: 2, scope: !5717)
!5877 = !DILocation(line: 1918, column: 8, scope: !5717)
!5878 = !DILocation(line: 1918, column: 18, scope: !5717)
!5879 = !DILocation(line: 1918, column: 20, scope: !5717)
!5880 = !DILocation(line: 1920, column: 26, scope: !5717)
!5881 = !DILocation(line: 1920, column: 2, scope: !5717)
!5882 = !DILocation(line: 1920, column: 8, scope: !5717)
!5883 = !DILocation(line: 1920, column: 18, scope: !5717)
!5884 = !DILocation(line: 1920, column: 24, scope: !5717)
!5885 = !DILocation(line: 1921, column: 26, scope: !5717)
!5886 = !DILocation(line: 1921, column: 32, scope: !5717)
!5887 = !DILocation(line: 1921, column: 2, scope: !5717)
!5888 = !DILocation(line: 1921, column: 8, scope: !5717)
!5889 = !DILocation(line: 1921, column: 18, scope: !5717)
!5890 = !DILocation(line: 1921, column: 24, scope: !5717)
!5891 = !DILocation(line: 1922, column: 26, scope: !5717)
!5892 = !DILocation(line: 1922, column: 32, scope: !5717)
!5893 = !DILocation(line: 1922, column: 2, scope: !5717)
!5894 = !DILocation(line: 1922, column: 8, scope: !5717)
!5895 = !DILocation(line: 1922, column: 18, scope: !5717)
!5896 = !DILocation(line: 1922, column: 24, scope: !5717)
!5897 = !DILocation(line: 1923, column: 22, scope: !5717)
!5898 = !DILocation(line: 1923, column: 28, scope: !5717)
!5899 = !DILocation(line: 1923, column: 38, scope: !5717)
!5900 = !DILocation(line: 1923, column: 46, scope: !5717)
!5901 = !DILocation(line: 1923, column: 53, scope: !5717)
!5902 = !DILocation(line: 1923, column: 44, scope: !5717)
!5903 = !DILocation(line: 1923, column: 2, scope: !5717)
!5904 = !DILocation(line: 1923, column: 8, scope: !5717)
!5905 = !DILocation(line: 1923, column: 18, scope: !5717)
!5906 = !DILocation(line: 1923, column: 20, scope: !5717)
!5907 = !DILocation(line: 1924, column: 22, scope: !5717)
!5908 = !DILocation(line: 1924, column: 28, scope: !5717)
!5909 = !DILocation(line: 1924, column: 38, scope: !5717)
!5910 = !DILocation(line: 1924, column: 46, scope: !5717)
!5911 = !DILocation(line: 1924, column: 53, scope: !5717)
!5912 = !DILocation(line: 1924, column: 44, scope: !5717)
!5913 = !DILocation(line: 1924, column: 2, scope: !5717)
!5914 = !DILocation(line: 1924, column: 8, scope: !5717)
!5915 = !DILocation(line: 1924, column: 18, scope: !5717)
!5916 = !DILocation(line: 1924, column: 20, scope: !5717)
!5917 = !DILocation(line: 1925, column: 22, scope: !5717)
!5918 = !DILocation(line: 1925, column: 28, scope: !5717)
!5919 = !DILocation(line: 1925, column: 38, scope: !5717)
!5920 = !DILocation(line: 1925, column: 46, scope: !5717)
!5921 = !DILocation(line: 1925, column: 53, scope: !5717)
!5922 = !DILocation(line: 1925, column: 44, scope: !5717)
!5923 = !DILocation(line: 1925, column: 2, scope: !5717)
!5924 = !DILocation(line: 1925, column: 8, scope: !5717)
!5925 = !DILocation(line: 1925, column: 18, scope: !5717)
!5926 = !DILocation(line: 1925, column: 20, scope: !5717)
!5927 = !DILocation(line: 1927, column: 26, scope: !5717)
!5928 = !DILocation(line: 1927, column: 2, scope: !5717)
!5929 = !DILocation(line: 1927, column: 8, scope: !5717)
!5930 = !DILocation(line: 1927, column: 18, scope: !5717)
!5931 = !DILocation(line: 1927, column: 24, scope: !5717)
!5932 = !DILocation(line: 1928, column: 26, scope: !5717)
!5933 = !DILocation(line: 1928, column: 2, scope: !5717)
!5934 = !DILocation(line: 1928, column: 8, scope: !5717)
!5935 = !DILocation(line: 1928, column: 18, scope: !5717)
!5936 = !DILocation(line: 1928, column: 24, scope: !5717)
!5937 = !DILocation(line: 1929, column: 26, scope: !5717)
!5938 = !DILocation(line: 1929, column: 32, scope: !5717)
!5939 = !DILocation(line: 1929, column: 2, scope: !5717)
!5940 = !DILocation(line: 1929, column: 8, scope: !5717)
!5941 = !DILocation(line: 1929, column: 18, scope: !5717)
!5942 = !DILocation(line: 1929, column: 24, scope: !5717)
!5943 = !DILocation(line: 1930, column: 22, scope: !5717)
!5944 = !DILocation(line: 1930, column: 28, scope: !5717)
!5945 = !DILocation(line: 1930, column: 38, scope: !5717)
!5946 = !DILocation(line: 1930, column: 46, scope: !5717)
!5947 = !DILocation(line: 1930, column: 53, scope: !5717)
!5948 = !DILocation(line: 1930, column: 44, scope: !5717)
!5949 = !DILocation(line: 1930, column: 2, scope: !5717)
!5950 = !DILocation(line: 1930, column: 8, scope: !5717)
!5951 = !DILocation(line: 1930, column: 18, scope: !5717)
!5952 = !DILocation(line: 1930, column: 20, scope: !5717)
!5953 = !DILocation(line: 1931, column: 22, scope: !5717)
!5954 = !DILocation(line: 1931, column: 28, scope: !5717)
!5955 = !DILocation(line: 1931, column: 38, scope: !5717)
!5956 = !DILocation(line: 1931, column: 46, scope: !5717)
!5957 = !DILocation(line: 1931, column: 53, scope: !5717)
!5958 = !DILocation(line: 1931, column: 44, scope: !5717)
!5959 = !DILocation(line: 1931, column: 2, scope: !5717)
!5960 = !DILocation(line: 1931, column: 8, scope: !5717)
!5961 = !DILocation(line: 1931, column: 18, scope: !5717)
!5962 = !DILocation(line: 1931, column: 20, scope: !5717)
!5963 = !DILocation(line: 1932, column: 22, scope: !5717)
!5964 = !DILocation(line: 1932, column: 28, scope: !5717)
!5965 = !DILocation(line: 1932, column: 38, scope: !5717)
!5966 = !DILocation(line: 1932, column: 46, scope: !5717)
!5967 = !DILocation(line: 1932, column: 53, scope: !5717)
!5968 = !DILocation(line: 1932, column: 44, scope: !5717)
!5969 = !DILocation(line: 1932, column: 2, scope: !5717)
!5970 = !DILocation(line: 1932, column: 8, scope: !5717)
!5971 = !DILocation(line: 1932, column: 18, scope: !5717)
!5972 = !DILocation(line: 1932, column: 20, scope: !5717)
!5973 = !DILocation(line: 1934, column: 26, scope: !5717)
!5974 = !DILocation(line: 1934, column: 32, scope: !5717)
!5975 = !DILocation(line: 1934, column: 2, scope: !5717)
!5976 = !DILocation(line: 1934, column: 8, scope: !5717)
!5977 = !DILocation(line: 1934, column: 18, scope: !5717)
!5978 = !DILocation(line: 1934, column: 24, scope: !5717)
!5979 = !DILocation(line: 1935, column: 26, scope: !5717)
!5980 = !DILocation(line: 1935, column: 2, scope: !5717)
!5981 = !DILocation(line: 1935, column: 8, scope: !5717)
!5982 = !DILocation(line: 1935, column: 18, scope: !5717)
!5983 = !DILocation(line: 1935, column: 24, scope: !5717)
!5984 = !DILocation(line: 1936, column: 26, scope: !5717)
!5985 = !DILocation(line: 1936, column: 32, scope: !5717)
!5986 = !DILocation(line: 1936, column: 2, scope: !5717)
!5987 = !DILocation(line: 1936, column: 8, scope: !5717)
!5988 = !DILocation(line: 1936, column: 18, scope: !5717)
!5989 = !DILocation(line: 1936, column: 24, scope: !5717)
!5990 = !DILocation(line: 1937, column: 22, scope: !5717)
!5991 = !DILocation(line: 1937, column: 28, scope: !5717)
!5992 = !DILocation(line: 1937, column: 38, scope: !5717)
!5993 = !DILocation(line: 1937, column: 46, scope: !5717)
!5994 = !DILocation(line: 1937, column: 53, scope: !5717)
!5995 = !DILocation(line: 1937, column: 44, scope: !5717)
!5996 = !DILocation(line: 1937, column: 2, scope: !5717)
!5997 = !DILocation(line: 1937, column: 8, scope: !5717)
!5998 = !DILocation(line: 1937, column: 18, scope: !5717)
!5999 = !DILocation(line: 1937, column: 20, scope: !5717)
!6000 = !DILocation(line: 1938, column: 22, scope: !5717)
!6001 = !DILocation(line: 1938, column: 28, scope: !5717)
!6002 = !DILocation(line: 1938, column: 38, scope: !5717)
!6003 = !DILocation(line: 1938, column: 46, scope: !5717)
!6004 = !DILocation(line: 1938, column: 53, scope: !5717)
!6005 = !DILocation(line: 1938, column: 44, scope: !5717)
!6006 = !DILocation(line: 1938, column: 2, scope: !5717)
!6007 = !DILocation(line: 1938, column: 8, scope: !5717)
!6008 = !DILocation(line: 1938, column: 18, scope: !5717)
!6009 = !DILocation(line: 1938, column: 20, scope: !5717)
!6010 = !DILocation(line: 1939, column: 22, scope: !5717)
!6011 = !DILocation(line: 1939, column: 28, scope: !5717)
!6012 = !DILocation(line: 1939, column: 38, scope: !5717)
!6013 = !DILocation(line: 1939, column: 46, scope: !5717)
!6014 = !DILocation(line: 1939, column: 53, scope: !5717)
!6015 = !DILocation(line: 1939, column: 44, scope: !5717)
!6016 = !DILocation(line: 1939, column: 2, scope: !5717)
!6017 = !DILocation(line: 1939, column: 8, scope: !5717)
!6018 = !DILocation(line: 1939, column: 18, scope: !5717)
!6019 = !DILocation(line: 1939, column: 20, scope: !5717)
!6020 = !DILocation(line: 1941, column: 26, scope: !5717)
!6021 = !DILocation(line: 1941, column: 32, scope: !5717)
!6022 = !DILocation(line: 1941, column: 2, scope: !5717)
!6023 = !DILocation(line: 1941, column: 8, scope: !5717)
!6024 = !DILocation(line: 1941, column: 18, scope: !5717)
!6025 = !DILocation(line: 1941, column: 24, scope: !5717)
!6026 = !DILocation(line: 1942, column: 26, scope: !5717)
!6027 = !DILocation(line: 1942, column: 32, scope: !5717)
!6028 = !DILocation(line: 1942, column: 2, scope: !5717)
!6029 = !DILocation(line: 1942, column: 8, scope: !5717)
!6030 = !DILocation(line: 1942, column: 18, scope: !5717)
!6031 = !DILocation(line: 1942, column: 24, scope: !5717)
!6032 = !DILocation(line: 1943, column: 26, scope: !5717)
!6033 = !DILocation(line: 1943, column: 2, scope: !5717)
!6034 = !DILocation(line: 1943, column: 8, scope: !5717)
!6035 = !DILocation(line: 1943, column: 18, scope: !5717)
!6036 = !DILocation(line: 1943, column: 24, scope: !5717)
!6037 = !DILocation(line: 1944, column: 22, scope: !5717)
!6038 = !DILocation(line: 1944, column: 28, scope: !5717)
!6039 = !DILocation(line: 1944, column: 38, scope: !5717)
!6040 = !DILocation(line: 1944, column: 46, scope: !5717)
!6041 = !DILocation(line: 1944, column: 53, scope: !5717)
!6042 = !DILocation(line: 1944, column: 44, scope: !5717)
!6043 = !DILocation(line: 1944, column: 2, scope: !5717)
!6044 = !DILocation(line: 1944, column: 8, scope: !5717)
!6045 = !DILocation(line: 1944, column: 18, scope: !5717)
!6046 = !DILocation(line: 1944, column: 20, scope: !5717)
!6047 = !DILocation(line: 1945, column: 22, scope: !5717)
!6048 = !DILocation(line: 1945, column: 28, scope: !5717)
!6049 = !DILocation(line: 1945, column: 38, scope: !5717)
!6050 = !DILocation(line: 1945, column: 46, scope: !5717)
!6051 = !DILocation(line: 1945, column: 53, scope: !5717)
!6052 = !DILocation(line: 1945, column: 44, scope: !5717)
!6053 = !DILocation(line: 1945, column: 2, scope: !5717)
!6054 = !DILocation(line: 1945, column: 8, scope: !5717)
!6055 = !DILocation(line: 1945, column: 18, scope: !5717)
!6056 = !DILocation(line: 1945, column: 20, scope: !5717)
!6057 = !DILocation(line: 1946, column: 22, scope: !5717)
!6058 = !DILocation(line: 1946, column: 28, scope: !5717)
!6059 = !DILocation(line: 1946, column: 38, scope: !5717)
!6060 = !DILocation(line: 1946, column: 46, scope: !5717)
!6061 = !DILocation(line: 1946, column: 53, scope: !5717)
!6062 = !DILocation(line: 1946, column: 44, scope: !5717)
!6063 = !DILocation(line: 1946, column: 2, scope: !5717)
!6064 = !DILocation(line: 1946, column: 8, scope: !5717)
!6065 = !DILocation(line: 1946, column: 18, scope: !5717)
!6066 = !DILocation(line: 1946, column: 20, scope: !5717)
!6067 = !DILocation(line: 1948, column: 26, scope: !5717)
!6068 = !DILocation(line: 1948, column: 2, scope: !5717)
!6069 = !DILocation(line: 1948, column: 8, scope: !5717)
!6070 = !DILocation(line: 1948, column: 18, scope: !5717)
!6071 = !DILocation(line: 1948, column: 24, scope: !5717)
!6072 = !DILocation(line: 1949, column: 26, scope: !5717)
!6073 = !DILocation(line: 1949, column: 32, scope: !5717)
!6074 = !DILocation(line: 1949, column: 2, scope: !5717)
!6075 = !DILocation(line: 1949, column: 8, scope: !5717)
!6076 = !DILocation(line: 1949, column: 18, scope: !5717)
!6077 = !DILocation(line: 1949, column: 24, scope: !5717)
!6078 = !DILocation(line: 1950, column: 26, scope: !5717)
!6079 = !DILocation(line: 1950, column: 2, scope: !5717)
!6080 = !DILocation(line: 1950, column: 8, scope: !5717)
!6081 = !DILocation(line: 1950, column: 18, scope: !5717)
!6082 = !DILocation(line: 1950, column: 24, scope: !5717)
!6083 = !DILocation(line: 1951, column: 22, scope: !5717)
!6084 = !DILocation(line: 1951, column: 28, scope: !5717)
!6085 = !DILocation(line: 1951, column: 38, scope: !5717)
!6086 = !DILocation(line: 1951, column: 46, scope: !5717)
!6087 = !DILocation(line: 1951, column: 53, scope: !5717)
!6088 = !DILocation(line: 1951, column: 44, scope: !5717)
!6089 = !DILocation(line: 1951, column: 2, scope: !5717)
!6090 = !DILocation(line: 1951, column: 8, scope: !5717)
!6091 = !DILocation(line: 1951, column: 18, scope: !5717)
!6092 = !DILocation(line: 1951, column: 20, scope: !5717)
!6093 = !DILocation(line: 1952, column: 22, scope: !5717)
!6094 = !DILocation(line: 1952, column: 28, scope: !5717)
!6095 = !DILocation(line: 1952, column: 38, scope: !5717)
!6096 = !DILocation(line: 1952, column: 46, scope: !5717)
!6097 = !DILocation(line: 1952, column: 53, scope: !5717)
!6098 = !DILocation(line: 1952, column: 44, scope: !5717)
!6099 = !DILocation(line: 1952, column: 2, scope: !5717)
!6100 = !DILocation(line: 1952, column: 8, scope: !5717)
!6101 = !DILocation(line: 1952, column: 18, scope: !5717)
!6102 = !DILocation(line: 1952, column: 20, scope: !5717)
!6103 = !DILocation(line: 1953, column: 22, scope: !5717)
!6104 = !DILocation(line: 1953, column: 28, scope: !5717)
!6105 = !DILocation(line: 1953, column: 38, scope: !5717)
!6106 = !DILocation(line: 1953, column: 46, scope: !5717)
!6107 = !DILocation(line: 1953, column: 53, scope: !5717)
!6108 = !DILocation(line: 1953, column: 44, scope: !5717)
!6109 = !DILocation(line: 1953, column: 2, scope: !5717)
!6110 = !DILocation(line: 1953, column: 8, scope: !5717)
!6111 = !DILocation(line: 1953, column: 18, scope: !5717)
!6112 = !DILocation(line: 1953, column: 20, scope: !5717)
!6113 = !DILocation(line: 1955, column: 26, scope: !5717)
!6114 = !DILocation(line: 1955, column: 2, scope: !5717)
!6115 = !DILocation(line: 1955, column: 8, scope: !5717)
!6116 = !DILocation(line: 1955, column: 18, scope: !5717)
!6117 = !DILocation(line: 1955, column: 24, scope: !5717)
!6118 = !DILocation(line: 1956, column: 26, scope: !5717)
!6119 = !DILocation(line: 1956, column: 2, scope: !5717)
!6120 = !DILocation(line: 1956, column: 8, scope: !5717)
!6121 = !DILocation(line: 1956, column: 18, scope: !5717)
!6122 = !DILocation(line: 1956, column: 24, scope: !5717)
!6123 = !DILocation(line: 1957, column: 26, scope: !5717)
!6124 = !DILocation(line: 1957, column: 2, scope: !5717)
!6125 = !DILocation(line: 1957, column: 8, scope: !5717)
!6126 = !DILocation(line: 1957, column: 18, scope: !5717)
!6127 = !DILocation(line: 1957, column: 24, scope: !5717)
!6128 = !DILocation(line: 1958, column: 22, scope: !5717)
!6129 = !DILocation(line: 1958, column: 28, scope: !5717)
!6130 = !DILocation(line: 1958, column: 38, scope: !5717)
!6131 = !DILocation(line: 1958, column: 46, scope: !5717)
!6132 = !DILocation(line: 1958, column: 53, scope: !5717)
!6133 = !DILocation(line: 1958, column: 44, scope: !5717)
!6134 = !DILocation(line: 1958, column: 2, scope: !5717)
!6135 = !DILocation(line: 1958, column: 8, scope: !5717)
!6136 = !DILocation(line: 1958, column: 18, scope: !5717)
!6137 = !DILocation(line: 1958, column: 20, scope: !5717)
!6138 = !DILocation(line: 1959, column: 22, scope: !5717)
!6139 = !DILocation(line: 1959, column: 28, scope: !5717)
!6140 = !DILocation(line: 1959, column: 38, scope: !5717)
!6141 = !DILocation(line: 1959, column: 46, scope: !5717)
!6142 = !DILocation(line: 1959, column: 53, scope: !5717)
!6143 = !DILocation(line: 1959, column: 44, scope: !5717)
!6144 = !DILocation(line: 1959, column: 2, scope: !5717)
!6145 = !DILocation(line: 1959, column: 8, scope: !5717)
!6146 = !DILocation(line: 1959, column: 18, scope: !5717)
!6147 = !DILocation(line: 1959, column: 20, scope: !5717)
!6148 = !DILocation(line: 1960, column: 22, scope: !5717)
!6149 = !DILocation(line: 1960, column: 28, scope: !5717)
!6150 = !DILocation(line: 1960, column: 38, scope: !5717)
!6151 = !DILocation(line: 1960, column: 46, scope: !5717)
!6152 = !DILocation(line: 1960, column: 53, scope: !5717)
!6153 = !DILocation(line: 1960, column: 44, scope: !5717)
!6154 = !DILocation(line: 1960, column: 2, scope: !5717)
!6155 = !DILocation(line: 1960, column: 8, scope: !5717)
!6156 = !DILocation(line: 1960, column: 18, scope: !5717)
!6157 = !DILocation(line: 1960, column: 20, scope: !5717)
!6158 = !DILocation(line: 1962, column: 26, scope: !5717)
!6159 = !DILocation(line: 1962, column: 32, scope: !5717)
!6160 = !DILocation(line: 1962, column: 2, scope: !5717)
!6161 = !DILocation(line: 1962, column: 8, scope: !5717)
!6162 = !DILocation(line: 1962, column: 18, scope: !5717)
!6163 = !DILocation(line: 1962, column: 24, scope: !5717)
!6164 = !DILocation(line: 1963, column: 26, scope: !5717)
!6165 = !DILocation(line: 1963, column: 2, scope: !5717)
!6166 = !DILocation(line: 1963, column: 8, scope: !5717)
!6167 = !DILocation(line: 1963, column: 18, scope: !5717)
!6168 = !DILocation(line: 1963, column: 24, scope: !5717)
!6169 = !DILocation(line: 1964, column: 26, scope: !5717)
!6170 = !DILocation(line: 1964, column: 2, scope: !5717)
!6171 = !DILocation(line: 1964, column: 8, scope: !5717)
!6172 = !DILocation(line: 1964, column: 18, scope: !5717)
!6173 = !DILocation(line: 1964, column: 24, scope: !5717)
!6174 = !DILocation(line: 1965, column: 22, scope: !5717)
!6175 = !DILocation(line: 1965, column: 28, scope: !5717)
!6176 = !DILocation(line: 1965, column: 38, scope: !5717)
!6177 = !DILocation(line: 1965, column: 46, scope: !5717)
!6178 = !DILocation(line: 1965, column: 53, scope: !5717)
!6179 = !DILocation(line: 1965, column: 44, scope: !5717)
!6180 = !DILocation(line: 1965, column: 2, scope: !5717)
!6181 = !DILocation(line: 1965, column: 8, scope: !5717)
!6182 = !DILocation(line: 1965, column: 18, scope: !5717)
!6183 = !DILocation(line: 1965, column: 20, scope: !5717)
!6184 = !DILocation(line: 1966, column: 22, scope: !5717)
!6185 = !DILocation(line: 1966, column: 28, scope: !5717)
!6186 = !DILocation(line: 1966, column: 38, scope: !5717)
!6187 = !DILocation(line: 1966, column: 46, scope: !5717)
!6188 = !DILocation(line: 1966, column: 53, scope: !5717)
!6189 = !DILocation(line: 1966, column: 44, scope: !5717)
!6190 = !DILocation(line: 1966, column: 2, scope: !5717)
!6191 = !DILocation(line: 1966, column: 8, scope: !5717)
!6192 = !DILocation(line: 1966, column: 18, scope: !5717)
!6193 = !DILocation(line: 1966, column: 20, scope: !5717)
!6194 = !DILocation(line: 1967, column: 22, scope: !5717)
!6195 = !DILocation(line: 1967, column: 28, scope: !5717)
!6196 = !DILocation(line: 1967, column: 38, scope: !5717)
!6197 = !DILocation(line: 1967, column: 46, scope: !5717)
!6198 = !DILocation(line: 1967, column: 53, scope: !5717)
!6199 = !DILocation(line: 1967, column: 44, scope: !5717)
!6200 = !DILocation(line: 1967, column: 2, scope: !5717)
!6201 = !DILocation(line: 1967, column: 8, scope: !5717)
!6202 = !DILocation(line: 1967, column: 18, scope: !5717)
!6203 = !DILocation(line: 1967, column: 20, scope: !5717)
!6204 = !DILocation(line: 1969, column: 9, scope: !5717)
!6205 = !DILocation(line: 1969, column: 15, scope: !5717)
!6206 = !DILocation(line: 1969, column: 21, scope: !5717)
!6207 = !DILocation(line: 1969, column: 7, scope: !5717)
!6208 = !DILocation(line: 1972, column: 2, scope: !5717)
!6209 = !DILocation(line: 1972, column: 9, scope: !5717)
!6210 = !DILocation(line: 1973, column: 8, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 1972, column: 15)
!6212 = !DILocation(line: 1973, column: 14, scope: !6211)
!6213 = !DILocation(line: 1973, column: 6, scope: !6211)
!6214 = !DILocation(line: 1974, column: 7, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 1974, column: 7)
!6216 = !DILocation(line: 1974, column: 11, scope: !6215)
!6217 = !DILocation(line: 1974, column: 15, scope: !6215)
!6218 = !DILocation(line: 1974, column: 27, scope: !6215)
!6219 = !DILocation(line: 1974, column: 25, scope: !6215)
!6220 = !DILocation(line: 1974, column: 7, scope: !6211)
!6221 = !DILocation(line: 1975, column: 8, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 1975, column: 8)
!6223 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 1974, column: 30)
!6224 = !DILocation(line: 1975, column: 12, scope: !6222)
!6225 = !DILocation(line: 1975, column: 16, scope: !6222)
!6226 = !DILocation(line: 1975, column: 28, scope: !6222)
!6227 = !DILocation(line: 1975, column: 26, scope: !6222)
!6228 = !DILocation(line: 1975, column: 8, scope: !6223)
!6229 = !DILocation(line: 1977, column: 9, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 1977, column: 9)
!6231 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1975, column: 31)
!6232 = !DILocation(line: 1977, column: 13, scope: !6230)
!6233 = !DILocation(line: 1977, column: 17, scope: !6230)
!6234 = !DILocation(line: 1977, column: 29, scope: !6230)
!6235 = !DILocation(line: 1977, column: 27, scope: !6230)
!6236 = !DILocation(line: 1977, column: 9, scope: !6231)
!6237 = !DILocation(line: 1979, column: 31, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 1977, column: 32)
!6239 = !DILocation(line: 1979, column: 37, scope: !6238)
!6240 = !DILocation(line: 1979, column: 6, scope: !6238)
!6241 = !DILocation(line: 1982, column: 10, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1982, column: 10)
!6243 = !DILocation(line: 1982, column: 14, scope: !6242)
!6244 = !DILocation(line: 1982, column: 18, scope: !6242)
!6245 = !DILocation(line: 1982, column: 31, scope: !6242)
!6246 = !DILocation(line: 1982, column: 28, scope: !6242)
!6247 = !DILocation(line: 1982, column: 10, scope: !6238)
!6248 = !DILocation(line: 1983, column: 32, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 1982, column: 34)
!6250 = !DILocation(line: 1983, column: 38, scope: !6249)
!6251 = !DILocation(line: 1983, column: 7, scope: !6249)
!6252 = !DILocation(line: 1986, column: 11, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 1986, column: 11)
!6254 = !DILocation(line: 1986, column: 15, scope: !6253)
!6255 = !DILocation(line: 1986, column: 19, scope: !6253)
!6256 = !DILocation(line: 1986, column: 32, scope: !6253)
!6257 = !DILocation(line: 1986, column: 29, scope: !6253)
!6258 = !DILocation(line: 1986, column: 11, scope: !6249)
!6259 = !DILocation(line: 1987, column: 33, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 1986, column: 35)
!6261 = !DILocation(line: 1987, column: 39, scope: !6260)
!6262 = !DILocation(line: 1987, column: 8, scope: !6260)
!6263 = !DILocation(line: 1988, column: 7, scope: !6260)
!6264 = !DILocation(line: 1989, column: 6, scope: !6249)
!6265 = !DILocation(line: 1992, column: 10, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1992, column: 10)
!6267 = !DILocation(line: 1992, column: 14, scope: !6266)
!6268 = !DILocation(line: 1992, column: 18, scope: !6266)
!6269 = !DILocation(line: 1992, column: 31, scope: !6266)
!6270 = !DILocation(line: 1992, column: 28, scope: !6266)
!6271 = !DILocation(line: 1992, column: 10, scope: !6238)
!6272 = !DILocation(line: 1993, column: 32, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1992, column: 34)
!6274 = !DILocation(line: 1993, column: 38, scope: !6273)
!6275 = !DILocation(line: 1993, column: 7, scope: !6273)
!6276 = !DILocation(line: 1996, column: 11, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1996, column: 11)
!6278 = !DILocation(line: 1996, column: 15, scope: !6277)
!6279 = !DILocation(line: 1996, column: 19, scope: !6277)
!6280 = !DILocation(line: 1996, column: 32, scope: !6277)
!6281 = !DILocation(line: 1996, column: 29, scope: !6277)
!6282 = !DILocation(line: 1996, column: 11, scope: !6273)
!6283 = !DILocation(line: 1997, column: 33, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1996, column: 35)
!6285 = !DILocation(line: 1997, column: 39, scope: !6284)
!6286 = !DILocation(line: 1997, column: 8, scope: !6284)
!6287 = !DILocation(line: 1998, column: 7, scope: !6284)
!6288 = !DILocation(line: 1999, column: 6, scope: !6273)
!6289 = !DILocation(line: 2002, column: 11, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 2002, column: 10)
!6291 = !DILocation(line: 2002, column: 15, scope: !6290)
!6292 = !DILocation(line: 2002, column: 19, scope: !6290)
!6293 = !DILocation(line: 2002, column: 32, scope: !6290)
!6294 = !DILocation(line: 2002, column: 29, scope: !6290)
!6295 = !DILocation(line: 2002, column: 35, scope: !6290)
!6296 = !DILocation(line: 2002, column: 39, scope: !6290)
!6297 = !DILocation(line: 2002, column: 43, scope: !6290)
!6298 = !DILocation(line: 2002, column: 47, scope: !6290)
!6299 = !DILocation(line: 2002, column: 60, scope: !6290)
!6300 = !DILocation(line: 2002, column: 57, scope: !6290)
!6301 = !DILocation(line: 2002, column: 10, scope: !6238)
!6302 = !DILocation(line: 2003, column: 32, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2002, column: 64)
!6304 = !DILocation(line: 2003, column: 38, scope: !6303)
!6305 = !DILocation(line: 2003, column: 7, scope: !6303)
!6306 = !DILocation(line: 2006, column: 11, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 2006, column: 11)
!6308 = !DILocation(line: 2006, column: 15, scope: !6307)
!6309 = !DILocation(line: 2006, column: 19, scope: !6307)
!6310 = !DILocation(line: 2006, column: 32, scope: !6307)
!6311 = !DILocation(line: 2006, column: 29, scope: !6307)
!6312 = !DILocation(line: 2006, column: 11, scope: !6303)
!6313 = !DILocation(line: 2007, column: 33, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 2006, column: 35)
!6315 = !DILocation(line: 2007, column: 39, scope: !6314)
!6316 = !DILocation(line: 2007, column: 8, scope: !6314)
!6317 = !DILocation(line: 2008, column: 7, scope: !6314)
!6318 = !DILocation(line: 2010, column: 6, scope: !6303)
!6319 = !DILocation(line: 2013, column: 10, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 2013, column: 10)
!6321 = !DILocation(line: 2013, column: 14, scope: !6320)
!6322 = !DILocation(line: 2013, column: 18, scope: !6320)
!6323 = !DILocation(line: 2013, column: 31, scope: !6320)
!6324 = !DILocation(line: 2013, column: 28, scope: !6320)
!6325 = !DILocation(line: 2013, column: 10, scope: !6238)
!6326 = !DILocation(line: 2014, column: 32, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2013, column: 34)
!6328 = !DILocation(line: 2014, column: 38, scope: !6327)
!6329 = !DILocation(line: 2014, column: 7, scope: !6327)
!6330 = !DILocation(line: 2015, column: 6, scope: !6327)
!6331 = !DILocation(line: 2019, column: 5, scope: !6238)
!6332 = !DILocation(line: 2023, column: 31, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 2021, column: 10)
!6334 = !DILocation(line: 2023, column: 37, scope: !6333)
!6335 = !DILocation(line: 2023, column: 6, scope: !6333)
!6336 = !DILocation(line: 2026, column: 10, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2026, column: 10)
!6338 = !DILocation(line: 2026, column: 14, scope: !6337)
!6339 = !DILocation(line: 2026, column: 18, scope: !6337)
!6340 = !DILocation(line: 2026, column: 31, scope: !6337)
!6341 = !DILocation(line: 2026, column: 28, scope: !6337)
!6342 = !DILocation(line: 2026, column: 10, scope: !6333)
!6343 = !DILocation(line: 2027, column: 32, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 2026, column: 34)
!6345 = !DILocation(line: 2027, column: 38, scope: !6344)
!6346 = !DILocation(line: 2027, column: 7, scope: !6344)
!6347 = !DILocation(line: 2030, column: 11, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 2030, column: 11)
!6349 = !DILocation(line: 2030, column: 15, scope: !6348)
!6350 = !DILocation(line: 2030, column: 19, scope: !6348)
!6351 = !DILocation(line: 2030, column: 32, scope: !6348)
!6352 = !DILocation(line: 2030, column: 29, scope: !6348)
!6353 = !DILocation(line: 2030, column: 11, scope: !6344)
!6354 = !DILocation(line: 2031, column: 33, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 2030, column: 35)
!6356 = !DILocation(line: 2031, column: 39, scope: !6355)
!6357 = !DILocation(line: 2031, column: 8, scope: !6355)
!6358 = !DILocation(line: 2032, column: 7, scope: !6355)
!6359 = !DILocation(line: 2034, column: 6, scope: !6344)
!6360 = !DILocation(line: 2037, column: 10, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2037, column: 10)
!6362 = !DILocation(line: 2037, column: 14, scope: !6361)
!6363 = !DILocation(line: 2037, column: 18, scope: !6361)
!6364 = !DILocation(line: 2037, column: 31, scope: !6361)
!6365 = !DILocation(line: 2037, column: 28, scope: !6361)
!6366 = !DILocation(line: 2037, column: 10, scope: !6333)
!6367 = !DILocation(line: 2038, column: 32, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2037, column: 34)
!6369 = !DILocation(line: 2038, column: 38, scope: !6368)
!6370 = !DILocation(line: 2038, column: 7, scope: !6368)
!6371 = !DILocation(line: 2039, column: 6, scope: !6368)
!6372 = !DILocation(line: 2041, column: 4, scope: !6231)
!6373 = !DILocation(line: 2044, column: 9, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2044, column: 9)
!6375 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 2042, column: 9)
!6376 = !DILocation(line: 2044, column: 13, scope: !6374)
!6377 = !DILocation(line: 2044, column: 17, scope: !6374)
!6378 = !DILocation(line: 2044, column: 29, scope: !6374)
!6379 = !DILocation(line: 2044, column: 27, scope: !6374)
!6380 = !DILocation(line: 2044, column: 9, scope: !6375)
!6381 = !DILocation(line: 2046, column: 31, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 2044, column: 32)
!6383 = !DILocation(line: 2046, column: 37, scope: !6382)
!6384 = !DILocation(line: 2046, column: 6, scope: !6382)
!6385 = !DILocation(line: 2049, column: 10, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 2049, column: 10)
!6387 = !DILocation(line: 2049, column: 14, scope: !6386)
!6388 = !DILocation(line: 2049, column: 18, scope: !6386)
!6389 = !DILocation(line: 2049, column: 31, scope: !6386)
!6390 = !DILocation(line: 2049, column: 28, scope: !6386)
!6391 = !DILocation(line: 2049, column: 10, scope: !6382)
!6392 = !DILocation(line: 2050, column: 32, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2049, column: 34)
!6394 = !DILocation(line: 2050, column: 38, scope: !6393)
!6395 = !DILocation(line: 2050, column: 7, scope: !6393)
!6396 = !DILocation(line: 2051, column: 6, scope: !6393)
!6397 = !DILocation(line: 2055, column: 10, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 2055, column: 10)
!6399 = !DILocation(line: 2055, column: 14, scope: !6398)
!6400 = !DILocation(line: 2055, column: 18, scope: !6398)
!6401 = !DILocation(line: 2055, column: 31, scope: !6398)
!6402 = !DILocation(line: 2055, column: 28, scope: !6398)
!6403 = !DILocation(line: 2055, column: 10, scope: !6382)
!6404 = !DILocation(line: 2056, column: 32, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2055, column: 34)
!6406 = !DILocation(line: 2056, column: 38, scope: !6405)
!6407 = !DILocation(line: 2056, column: 7, scope: !6405)
!6408 = !DILocation(line: 2059, column: 11, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2059, column: 11)
!6410 = !DILocation(line: 2059, column: 15, scope: !6409)
!6411 = !DILocation(line: 2059, column: 19, scope: !6409)
!6412 = !DILocation(line: 2059, column: 32, scope: !6409)
!6413 = !DILocation(line: 2059, column: 29, scope: !6409)
!6414 = !DILocation(line: 2059, column: 11, scope: !6405)
!6415 = !DILocation(line: 2060, column: 33, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 2059, column: 35)
!6417 = !DILocation(line: 2060, column: 39, scope: !6416)
!6418 = !DILocation(line: 2060, column: 8, scope: !6416)
!6419 = !DILocation(line: 2061, column: 7, scope: !6416)
!6420 = !DILocation(line: 2062, column: 6, scope: !6405)
!6421 = !DILocation(line: 2063, column: 5, scope: !6382)
!6422 = !DILocation(line: 2068, column: 9, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 2068, column: 8)
!6424 = !DILocation(line: 2068, column: 13, scope: !6423)
!6425 = !DILocation(line: 2068, column: 17, scope: !6423)
!6426 = !DILocation(line: 2068, column: 30, scope: !6423)
!6427 = !DILocation(line: 2068, column: 27, scope: !6423)
!6428 = !DILocation(line: 2068, column: 33, scope: !6423)
!6429 = !DILocation(line: 2068, column: 37, scope: !6423)
!6430 = !DILocation(line: 2068, column: 41, scope: !6423)
!6431 = !DILocation(line: 2068, column: 45, scope: !6423)
!6432 = !DILocation(line: 2068, column: 58, scope: !6423)
!6433 = !DILocation(line: 2068, column: 55, scope: !6423)
!6434 = !DILocation(line: 2068, column: 8, scope: !6223)
!6435 = !DILocation(line: 2070, column: 30, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 2068, column: 62)
!6437 = !DILocation(line: 2070, column: 36, scope: !6436)
!6438 = !DILocation(line: 2070, column: 5, scope: !6436)
!6439 = !DILocation(line: 2073, column: 9, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2073, column: 9)
!6441 = !DILocation(line: 2073, column: 13, scope: !6440)
!6442 = !DILocation(line: 2073, column: 17, scope: !6440)
!6443 = !DILocation(line: 2073, column: 30, scope: !6440)
!6444 = !DILocation(line: 2073, column: 27, scope: !6440)
!6445 = !DILocation(line: 2073, column: 9, scope: !6436)
!6446 = !DILocation(line: 2074, column: 31, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2073, column: 33)
!6448 = !DILocation(line: 2074, column: 37, scope: !6447)
!6449 = !DILocation(line: 2074, column: 6, scope: !6447)
!6450 = !DILocation(line: 2075, column: 5, scope: !6447)
!6451 = !DILocation(line: 2076, column: 4, scope: !6436)
!6452 = !DILocation(line: 2077, column: 3, scope: !6223)
!6453 = !DILocation(line: 2079, column: 8, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 2079, column: 8)
!6455 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 2078, column: 8)
!6456 = !DILocation(line: 2079, column: 12, scope: !6454)
!6457 = !DILocation(line: 2079, column: 16, scope: !6454)
!6458 = !DILocation(line: 2079, column: 28, scope: !6454)
!6459 = !DILocation(line: 2079, column: 26, scope: !6454)
!6460 = !DILocation(line: 2079, column: 8, scope: !6455)
!6461 = !DILocation(line: 2081, column: 9, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 2081, column: 9)
!6463 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 2079, column: 31)
!6464 = !DILocation(line: 2081, column: 13, scope: !6462)
!6465 = !DILocation(line: 2081, column: 17, scope: !6462)
!6466 = !DILocation(line: 2081, column: 29, scope: !6462)
!6467 = !DILocation(line: 2081, column: 27, scope: !6462)
!6468 = !DILocation(line: 2081, column: 9, scope: !6463)
!6469 = !DILocation(line: 2083, column: 31, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 2081, column: 32)
!6471 = !DILocation(line: 2083, column: 37, scope: !6470)
!6472 = !DILocation(line: 2083, column: 6, scope: !6470)
!6473 = !DILocation(line: 2085, column: 10, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2085, column: 10)
!6475 = !DILocation(line: 2085, column: 14, scope: !6474)
!6476 = !DILocation(line: 2085, column: 18, scope: !6474)
!6477 = !DILocation(line: 2085, column: 31, scope: !6474)
!6478 = !DILocation(line: 2085, column: 28, scope: !6474)
!6479 = !DILocation(line: 2085, column: 10, scope: !6470)
!6480 = !DILocation(line: 2086, column: 32, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 2085, column: 34)
!6482 = !DILocation(line: 2086, column: 38, scope: !6481)
!6483 = !DILocation(line: 2086, column: 7, scope: !6481)
!6484 = !DILocation(line: 2087, column: 6, scope: !6481)
!6485 = !DILocation(line: 2089, column: 10, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2089, column: 10)
!6487 = !DILocation(line: 2089, column: 14, scope: !6486)
!6488 = !DILocation(line: 2089, column: 18, scope: !6486)
!6489 = !DILocation(line: 2089, column: 31, scope: !6486)
!6490 = !DILocation(line: 2089, column: 28, scope: !6486)
!6491 = !DILocation(line: 2089, column: 10, scope: !6470)
!6492 = !DILocation(line: 2090, column: 32, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 2089, column: 34)
!6494 = !DILocation(line: 2090, column: 38, scope: !6493)
!6495 = !DILocation(line: 2090, column: 7, scope: !6493)
!6496 = !DILocation(line: 2091, column: 6, scope: !6493)
!6497 = !DILocation(line: 2093, column: 11, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2093, column: 10)
!6499 = !DILocation(line: 2093, column: 15, scope: !6498)
!6500 = !DILocation(line: 2093, column: 19, scope: !6498)
!6501 = !DILocation(line: 2093, column: 32, scope: !6498)
!6502 = !DILocation(line: 2093, column: 29, scope: !6498)
!6503 = !DILocation(line: 2093, column: 35, scope: !6498)
!6504 = !DILocation(line: 2093, column: 39, scope: !6498)
!6505 = !DILocation(line: 2093, column: 43, scope: !6498)
!6506 = !DILocation(line: 2093, column: 47, scope: !6498)
!6507 = !DILocation(line: 2093, column: 60, scope: !6498)
!6508 = !DILocation(line: 2093, column: 57, scope: !6498)
!6509 = !DILocation(line: 2093, column: 10, scope: !6470)
!6510 = !DILocation(line: 2094, column: 32, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 2093, column: 64)
!6512 = !DILocation(line: 2094, column: 38, scope: !6511)
!6513 = !DILocation(line: 2094, column: 7, scope: !6511)
!6514 = !DILocation(line: 2095, column: 6, scope: !6511)
!6515 = !DILocation(line: 2096, column: 5, scope: !6470)
!6516 = !DILocation(line: 2099, column: 31, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 2098, column: 10)
!6518 = !DILocation(line: 2099, column: 37, scope: !6517)
!6519 = !DILocation(line: 2099, column: 6, scope: !6517)
!6520 = !DILocation(line: 2101, column: 10, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 2101, column: 10)
!6522 = !DILocation(line: 2101, column: 14, scope: !6521)
!6523 = !DILocation(line: 2101, column: 18, scope: !6521)
!6524 = !DILocation(line: 2101, column: 31, scope: !6521)
!6525 = !DILocation(line: 2101, column: 28, scope: !6521)
!6526 = !DILocation(line: 2101, column: 10, scope: !6517)
!6527 = !DILocation(line: 2102, column: 32, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2101, column: 34)
!6529 = !DILocation(line: 2102, column: 38, scope: !6528)
!6530 = !DILocation(line: 2102, column: 7, scope: !6528)
!6531 = !DILocation(line: 2103, column: 6, scope: !6528)
!6532 = !DILocation(line: 2105, column: 4, scope: !6463)
!6533 = !DILocation(line: 2108, column: 9, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 2108, column: 9)
!6535 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 2106, column: 9)
!6536 = !DILocation(line: 2108, column: 13, scope: !6534)
!6537 = !DILocation(line: 2108, column: 17, scope: !6534)
!6538 = !DILocation(line: 2108, column: 29, scope: !6534)
!6539 = !DILocation(line: 2108, column: 27, scope: !6534)
!6540 = !DILocation(line: 2108, column: 9, scope: !6535)
!6541 = !DILocation(line: 2109, column: 31, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2108, column: 32)
!6543 = !DILocation(line: 2109, column: 37, scope: !6542)
!6544 = !DILocation(line: 2109, column: 6, scope: !6542)
!6545 = !DILocation(line: 2111, column: 10, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 2111, column: 10)
!6547 = !DILocation(line: 2111, column: 14, scope: !6546)
!6548 = !DILocation(line: 2111, column: 18, scope: !6546)
!6549 = !DILocation(line: 2111, column: 31, scope: !6546)
!6550 = !DILocation(line: 2111, column: 28, scope: !6546)
!6551 = !DILocation(line: 2111, column: 10, scope: !6542)
!6552 = !DILocation(line: 2112, column: 32, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 2111, column: 34)
!6554 = !DILocation(line: 2112, column: 38, scope: !6553)
!6555 = !DILocation(line: 2112, column: 7, scope: !6553)
!6556 = !DILocation(line: 2113, column: 6, scope: !6553)
!6557 = !DILocation(line: 2114, column: 5, scope: !6542)
!6558 = !DILocation(line: 2119, column: 9, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 2119, column: 8)
!6560 = !DILocation(line: 2119, column: 13, scope: !6559)
!6561 = !DILocation(line: 2119, column: 17, scope: !6559)
!6562 = !DILocation(line: 2119, column: 30, scope: !6559)
!6563 = !DILocation(line: 2119, column: 27, scope: !6559)
!6564 = !DILocation(line: 2119, column: 33, scope: !6559)
!6565 = !DILocation(line: 2119, column: 37, scope: !6559)
!6566 = !DILocation(line: 2119, column: 41, scope: !6559)
!6567 = !DILocation(line: 2119, column: 45, scope: !6559)
!6568 = !DILocation(line: 2119, column: 58, scope: !6559)
!6569 = !DILocation(line: 2119, column: 55, scope: !6559)
!6570 = !DILocation(line: 2119, column: 8, scope: !6455)
!6571 = !DILocation(line: 2120, column: 30, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 2119, column: 62)
!6573 = !DILocation(line: 2120, column: 36, scope: !6572)
!6574 = !DILocation(line: 2120, column: 5, scope: !6572)
!6575 = !DILocation(line: 2121, column: 4, scope: !6572)
!6576 = !DILocation(line: 2123, column: 10, scope: !6211)
!6577 = !DILocation(line: 2123, column: 16, scope: !6211)
!6578 = !DILocation(line: 2123, column: 8, scope: !6211)
!6579 = distinct !{!6579, !6208, !6580}
!6580 = !DILocation(line: 2124, column: 2, scope: !5717)
!6581 = !DILocation(line: 2127, column: 17, scope: !5717)
!6582 = !DILocation(line: 2127, column: 23, scope: !5717)
!6583 = !DILocation(line: 2127, column: 2, scope: !5717)
!6584 = !DILocation(line: 2129, column: 7, scope: !5717)
!6585 = !DILocation(line: 2131, column: 6, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 2131, column: 6)
!6587 = !DILocation(line: 2131, column: 12, scope: !6586)
!6588 = !DILocation(line: 2131, column: 6, scope: !5717)
!6589 = !DILocation(line: 2132, column: 10, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2132, column: 3)
!6591 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2131, column: 17)
!6592 = !DILocation(line: 2132, column: 8, scope: !6590)
!6593 = !DILocation(line: 2132, column: 15, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 2132, column: 3)
!6595 = !DILocation(line: 2132, column: 17, scope: !6594)
!6596 = !DILocation(line: 2132, column: 3, scope: !6590)
!6597 = !DILocation(line: 2133, column: 8, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2133, column: 8)
!6599 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2132, column: 27)
!6600 = !DILocation(line: 2133, column: 14, scope: !6598)
!6601 = !DILocation(line: 2133, column: 20, scope: !6598)
!6602 = !DILocation(line: 2133, column: 24, scope: !6598)
!6603 = !DILocation(line: 2133, column: 30, scope: !6598)
!6604 = !DILocation(line: 2133, column: 8, scope: !6599)
!6605 = !DILocation(line: 2134, column: 35, scope: !6598)
!6606 = !DILocation(line: 2134, column: 41, scope: !6598)
!6607 = !DILocation(line: 2134, column: 47, scope: !6598)
!6608 = !DILocation(line: 2134, column: 51, scope: !6598)
!6609 = !DILocation(line: 2134, column: 59, scope: !6598)
!6610 = !DILocation(line: 2134, column: 67, scope: !6598)
!6611 = !DILocation(line: 2134, column: 75, scope: !6598)
!6612 = !DILocation(line: 2134, column: 5, scope: !6598)
!6613 = !DILocation(line: 2135, column: 3, scope: !6599)
!6614 = !DILocation(line: 2132, column: 23, scope: !6594)
!6615 = !DILocation(line: 2132, column: 3, scope: !6594)
!6616 = distinct !{!6616, !6596, !6617}
!6617 = !DILocation(line: 2135, column: 3, scope: !6590)
!6618 = !DILocation(line: 2136, column: 2, scope: !6591)
!6619 = !DILocation(line: 2137, column: 1, scope: !5717)
!6620 = distinct !DISubprogram(name: "fill_metaball_octal_node", scope: !3, file: !3, line: 1852, type: !6621, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{null, !4564, !1617, !76}
!6623 = !DILocalVariable(name: "node", arg: 1, scope: !6620, file: !3, line: 1852, type: !4564)
!6624 = !DILocation(line: 1852, column: 50, scope: !6620)
!6625 = !DILocalVariable(name: "ml", arg: 2, scope: !6620, file: !3, line: 1852, type: !1617)
!6626 = !DILocation(line: 1852, column: 66, scope: !6620)
!6627 = !DILocalVariable(name: "i", arg: 3, scope: !6620, file: !3, line: 1852, type: !76)
!6628 = !DILocation(line: 1852, column: 76, scope: !6620)
!6629 = !DILocalVariable(name: "ml_p", scope: !6620, file: !3, line: 1854, type: !4193)
!6630 = !DILocation(line: 1854, column: 14, scope: !6620)
!6631 = !DILocation(line: 1856, column: 9, scope: !6620)
!6632 = !DILocation(line: 1856, column: 7, scope: !6620)
!6633 = !DILocation(line: 1857, column: 13, scope: !6620)
!6634 = !DILocation(line: 1857, column: 2, scope: !6620)
!6635 = !DILocation(line: 1857, column: 8, scope: !6620)
!6636 = !DILocation(line: 1857, column: 11, scope: !6620)
!6637 = !DILocation(line: 1858, column: 16, scope: !6620)
!6638 = !DILocation(line: 1858, column: 22, scope: !6620)
!6639 = !DILocation(line: 1858, column: 28, scope: !6620)
!6640 = !DILocation(line: 1858, column: 32, scope: !6620)
!6641 = !DILocation(line: 1858, column: 40, scope: !6620)
!6642 = !DILocation(line: 1858, column: 2, scope: !6620)
!6643 = !DILocation(line: 1859, column: 2, scope: !6620)
!6644 = !DILocation(line: 1859, column: 8, scope: !6620)
!6645 = !DILocation(line: 1859, column: 13, scope: !6620)
!6646 = !DILocation(line: 1861, column: 7, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1861, column: 6)
!6648 = !DILocation(line: 1861, column: 11, scope: !6647)
!6649 = !DILocation(line: 1861, column: 16, scope: !6647)
!6650 = !DILocation(line: 1861, column: 31, scope: !6647)
!6651 = !DILocation(line: 1861, column: 6, scope: !6620)
!6652 = !DILocation(line: 1862, column: 3, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1861, column: 37)
!6654 = !DILocation(line: 1862, column: 9, scope: !6653)
!6655 = !DILocation(line: 1862, column: 15, scope: !6653)
!6656 = !DILocation(line: 1862, column: 19, scope: !6653)
!6657 = !DILocation(line: 1862, column: 22, scope: !6653)
!6658 = !DILocation(line: 1863, column: 2, scope: !6653)
!6659 = !DILocation(line: 1865, column: 3, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1864, column: 7)
!6661 = !DILocation(line: 1865, column: 9, scope: !6660)
!6662 = !DILocation(line: 1865, column: 15, scope: !6660)
!6663 = !DILocation(line: 1865, column: 19, scope: !6660)
!6664 = !DILocation(line: 1865, column: 22, scope: !6660)
!6665 = !DILocation(line: 1867, column: 1, scope: !6620)
!6666 = distinct !DISubprogram(name: "find_metaball_octal_node", scope: !3, file: !3, line: 681, type: !6667, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!4564, !4564, !141, !141, !141, !76}
!6669 = !DILocalVariable(name: "node", arg: 1, scope: !6666, file: !3, line: 681, type: !4564)
!6670 = !DILocation(line: 681, column: 57, scope: !6666)
!6671 = !DILocalVariable(name: "x", arg: 2, scope: !6666, file: !3, line: 681, type: !141)
!6672 = !DILocation(line: 681, column: 69, scope: !6666)
!6673 = !DILocalVariable(name: "y", arg: 3, scope: !6666, file: !3, line: 681, type: !141)
!6674 = !DILocation(line: 681, column: 78, scope: !6666)
!6675 = !DILocalVariable(name: "z", arg: 4, scope: !6666, file: !3, line: 681, type: !141)
!6676 = !DILocation(line: 681, column: 87, scope: !6666)
!6677 = !DILocalVariable(name: "depth", arg: 5, scope: !6666, file: !3, line: 681, type: !76)
!6678 = !DILocation(line: 681, column: 96, scope: !6666)
!6679 = !DILocation(line: 683, column: 7, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 683, column: 6)
!6681 = !DILocation(line: 683, column: 6, scope: !6666)
!6682 = !DILocation(line: 683, column: 21, scope: !6680)
!6683 = !DILocation(line: 683, column: 14, scope: !6680)
!6684 = !DILocation(line: 685, column: 6, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 685, column: 6)
!6686 = !DILocation(line: 685, column: 10, scope: !6685)
!6687 = !DILocation(line: 685, column: 16, scope: !6685)
!6688 = !DILocation(line: 685, column: 8, scope: !6685)
!6689 = !DILocation(line: 685, column: 6, scope: !6666)
!6690 = !DILocation(line: 686, column: 7, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !3, line: 686, column: 7)
!6692 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 685, column: 19)
!6693 = !DILocation(line: 686, column: 11, scope: !6691)
!6694 = !DILocation(line: 686, column: 17, scope: !6691)
!6695 = !DILocation(line: 686, column: 9, scope: !6691)
!6696 = !DILocation(line: 686, column: 7, scope: !6692)
!6697 = !DILocation(line: 687, column: 8, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 687, column: 8)
!6699 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 686, column: 20)
!6700 = !DILocation(line: 687, column: 12, scope: !6698)
!6701 = !DILocation(line: 687, column: 18, scope: !6698)
!6702 = !DILocation(line: 687, column: 10, scope: !6698)
!6703 = !DILocation(line: 687, column: 8, scope: !6699)
!6704 = !DILocation(line: 688, column: 9, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 688, column: 9)
!6706 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 687, column: 21)
!6707 = !DILocation(line: 688, column: 15, scope: !6705)
!6708 = !DILocation(line: 688, column: 9, scope: !6706)
!6709 = !DILocation(line: 689, column: 38, scope: !6705)
!6710 = !DILocation(line: 689, column: 44, scope: !6705)
!6711 = !DILocation(line: 689, column: 54, scope: !6705)
!6712 = !DILocation(line: 689, column: 57, scope: !6705)
!6713 = !DILocation(line: 689, column: 60, scope: !6705)
!6714 = !DILocation(line: 689, column: 68, scope: !6705)
!6715 = !DILocation(line: 689, column: 13, scope: !6705)
!6716 = !DILocation(line: 689, column: 6, scope: !6705)
!6717 = !DILocation(line: 691, column: 13, scope: !6705)
!6718 = !DILocation(line: 691, column: 6, scope: !6705)
!6719 = !DILocation(line: 694, column: 9, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 694, column: 9)
!6721 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 693, column: 9)
!6722 = !DILocation(line: 694, column: 15, scope: !6720)
!6723 = !DILocation(line: 694, column: 9, scope: !6721)
!6724 = !DILocation(line: 695, column: 38, scope: !6720)
!6725 = !DILocation(line: 695, column: 44, scope: !6720)
!6726 = !DILocation(line: 695, column: 54, scope: !6720)
!6727 = !DILocation(line: 695, column: 57, scope: !6720)
!6728 = !DILocation(line: 695, column: 60, scope: !6720)
!6729 = !DILocation(line: 695, column: 68, scope: !6720)
!6730 = !DILocation(line: 695, column: 13, scope: !6720)
!6731 = !DILocation(line: 695, column: 6, scope: !6720)
!6732 = !DILocation(line: 697, column: 13, scope: !6720)
!6733 = !DILocation(line: 697, column: 6, scope: !6720)
!6734 = !DILocation(line: 701, column: 8, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 701, column: 8)
!6736 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 700, column: 8)
!6737 = !DILocation(line: 701, column: 12, scope: !6735)
!6738 = !DILocation(line: 701, column: 18, scope: !6735)
!6739 = !DILocation(line: 701, column: 10, scope: !6735)
!6740 = !DILocation(line: 701, column: 8, scope: !6736)
!6741 = !DILocation(line: 702, column: 9, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 702, column: 9)
!6743 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 701, column: 21)
!6744 = !DILocation(line: 702, column: 15, scope: !6742)
!6745 = !DILocation(line: 702, column: 9, scope: !6743)
!6746 = !DILocation(line: 703, column: 38, scope: !6742)
!6747 = !DILocation(line: 703, column: 44, scope: !6742)
!6748 = !DILocation(line: 703, column: 54, scope: !6742)
!6749 = !DILocation(line: 703, column: 57, scope: !6742)
!6750 = !DILocation(line: 703, column: 60, scope: !6742)
!6751 = !DILocation(line: 703, column: 68, scope: !6742)
!6752 = !DILocation(line: 703, column: 13, scope: !6742)
!6753 = !DILocation(line: 703, column: 6, scope: !6742)
!6754 = !DILocation(line: 705, column: 13, scope: !6742)
!6755 = !DILocation(line: 705, column: 6, scope: !6742)
!6756 = !DILocation(line: 708, column: 9, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 708, column: 9)
!6758 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 707, column: 9)
!6759 = !DILocation(line: 708, column: 15, scope: !6757)
!6760 = !DILocation(line: 708, column: 9, scope: !6758)
!6761 = !DILocation(line: 709, column: 38, scope: !6757)
!6762 = !DILocation(line: 709, column: 44, scope: !6757)
!6763 = !DILocation(line: 709, column: 54, scope: !6757)
!6764 = !DILocation(line: 709, column: 57, scope: !6757)
!6765 = !DILocation(line: 709, column: 60, scope: !6757)
!6766 = !DILocation(line: 709, column: 68, scope: !6757)
!6767 = !DILocation(line: 709, column: 13, scope: !6757)
!6768 = !DILocation(line: 709, column: 6, scope: !6757)
!6769 = !DILocation(line: 711, column: 13, scope: !6757)
!6770 = !DILocation(line: 711, column: 6, scope: !6757)
!6771 = !DILocation(line: 716, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 716, column: 7)
!6773 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 715, column: 7)
!6774 = !DILocation(line: 716, column: 11, scope: !6772)
!6775 = !DILocation(line: 716, column: 17, scope: !6772)
!6776 = !DILocation(line: 716, column: 9, scope: !6772)
!6777 = !DILocation(line: 716, column: 7, scope: !6773)
!6778 = !DILocation(line: 717, column: 8, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 717, column: 8)
!6780 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 716, column: 20)
!6781 = !DILocation(line: 717, column: 12, scope: !6779)
!6782 = !DILocation(line: 717, column: 18, scope: !6779)
!6783 = !DILocation(line: 717, column: 10, scope: !6779)
!6784 = !DILocation(line: 717, column: 8, scope: !6780)
!6785 = !DILocation(line: 718, column: 9, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 718, column: 9)
!6787 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 717, column: 21)
!6788 = !DILocation(line: 718, column: 15, scope: !6786)
!6789 = !DILocation(line: 718, column: 9, scope: !6787)
!6790 = !DILocation(line: 719, column: 38, scope: !6786)
!6791 = !DILocation(line: 719, column: 44, scope: !6786)
!6792 = !DILocation(line: 719, column: 54, scope: !6786)
!6793 = !DILocation(line: 719, column: 57, scope: !6786)
!6794 = !DILocation(line: 719, column: 60, scope: !6786)
!6795 = !DILocation(line: 719, column: 68, scope: !6786)
!6796 = !DILocation(line: 719, column: 13, scope: !6786)
!6797 = !DILocation(line: 719, column: 6, scope: !6786)
!6798 = !DILocation(line: 721, column: 13, scope: !6786)
!6799 = !DILocation(line: 721, column: 6, scope: !6786)
!6800 = !DILocation(line: 724, column: 9, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 724, column: 9)
!6802 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 723, column: 9)
!6803 = !DILocation(line: 724, column: 15, scope: !6801)
!6804 = !DILocation(line: 724, column: 9, scope: !6802)
!6805 = !DILocation(line: 725, column: 38, scope: !6801)
!6806 = !DILocation(line: 725, column: 44, scope: !6801)
!6807 = !DILocation(line: 725, column: 54, scope: !6801)
!6808 = !DILocation(line: 725, column: 57, scope: !6801)
!6809 = !DILocation(line: 725, column: 60, scope: !6801)
!6810 = !DILocation(line: 725, column: 68, scope: !6801)
!6811 = !DILocation(line: 725, column: 13, scope: !6801)
!6812 = !DILocation(line: 725, column: 6, scope: !6801)
!6813 = !DILocation(line: 727, column: 13, scope: !6801)
!6814 = !DILocation(line: 727, column: 6, scope: !6801)
!6815 = !DILocation(line: 731, column: 8, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 731, column: 8)
!6817 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 730, column: 8)
!6818 = !DILocation(line: 731, column: 12, scope: !6816)
!6819 = !DILocation(line: 731, column: 18, scope: !6816)
!6820 = !DILocation(line: 731, column: 10, scope: !6816)
!6821 = !DILocation(line: 731, column: 8, scope: !6817)
!6822 = !DILocation(line: 732, column: 9, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 732, column: 9)
!6824 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 731, column: 21)
!6825 = !DILocation(line: 732, column: 15, scope: !6823)
!6826 = !DILocation(line: 732, column: 9, scope: !6824)
!6827 = !DILocation(line: 733, column: 38, scope: !6823)
!6828 = !DILocation(line: 733, column: 44, scope: !6823)
!6829 = !DILocation(line: 733, column: 54, scope: !6823)
!6830 = !DILocation(line: 733, column: 57, scope: !6823)
!6831 = !DILocation(line: 733, column: 60, scope: !6823)
!6832 = !DILocation(line: 733, column: 68, scope: !6823)
!6833 = !DILocation(line: 733, column: 13, scope: !6823)
!6834 = !DILocation(line: 733, column: 6, scope: !6823)
!6835 = !DILocation(line: 735, column: 13, scope: !6823)
!6836 = !DILocation(line: 735, column: 6, scope: !6823)
!6837 = !DILocation(line: 738, column: 9, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 738, column: 9)
!6839 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 737, column: 9)
!6840 = !DILocation(line: 738, column: 15, scope: !6838)
!6841 = !DILocation(line: 738, column: 9, scope: !6839)
!6842 = !DILocation(line: 739, column: 38, scope: !6838)
!6843 = !DILocation(line: 739, column: 44, scope: !6838)
!6844 = !DILocation(line: 739, column: 54, scope: !6838)
!6845 = !DILocation(line: 739, column: 57, scope: !6838)
!6846 = !DILocation(line: 739, column: 60, scope: !6838)
!6847 = !DILocation(line: 739, column: 68, scope: !6838)
!6848 = !DILocation(line: 739, column: 13, scope: !6838)
!6849 = !DILocation(line: 739, column: 6, scope: !6838)
!6850 = !DILocation(line: 741, column: 13, scope: !6838)
!6851 = !DILocation(line: 741, column: 6, scope: !6838)
!6852 = !DILocation(line: 748, column: 1, scope: !6666)
!6853 = !DILocalVariable(name: "i", scope: !1716, file: !3, line: 1107, type: !78)
!6854 = !DILocation(line: 1107, column: 6, scope: !1716)
!6855 = !DILocalVariable(name: "e", scope: !1716, file: !3, line: 1107, type: !78)
!6856 = !DILocation(line: 1107, column: 9, scope: !1716)
!6857 = !DILocalVariable(name: "c", scope: !1716, file: !3, line: 1107, type: !78)
!6858 = !DILocation(line: 1107, column: 12, scope: !1716)
!6859 = !DILocalVariable(name: "done", scope: !1716, file: !3, line: 1107, type: !1722)
!6860 = !DILocation(line: 1107, column: 15, scope: !1716)
!6861 = !DILocalVariable(name: "pos", scope: !1716, file: !3, line: 1107, type: !2579)
!6862 = !DILocation(line: 1107, column: 25, scope: !1716)
!6863 = !DILocation(line: 1109, column: 6, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !1716, file: !3, line: 1109, column: 6)
!6865 = !DILocation(line: 1109, column: 6, scope: !1716)
!6866 = !DILocation(line: 1109, column: 15, scope: !6864)
!6867 = !DILocation(line: 1110, column: 10, scope: !1716)
!6868 = !DILocation(line: 1112, column: 9, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !1716, file: !3, line: 1112, column: 2)
!6870 = !DILocation(line: 1112, column: 7, scope: !6869)
!6871 = !DILocation(line: 1112, column: 14, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 1112, column: 2)
!6873 = !DILocation(line: 1112, column: 16, scope: !6872)
!6874 = !DILocation(line: 1112, column: 2, scope: !6869)
!6875 = !DILocation(line: 1113, column: 10, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 1113, column: 3)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1112, column: 28)
!6878 = !DILocation(line: 1113, column: 8, scope: !6876)
!6879 = !DILocation(line: 1113, column: 15, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 1113, column: 3)
!6881 = !DILocation(line: 1113, column: 17, scope: !6880)
!6882 = !DILocation(line: 1113, column: 3, scope: !6876)
!6883 = !DILocation(line: 1113, column: 33, scope: !6880)
!6884 = !DILocation(line: 1113, column: 28, scope: !6880)
!6885 = !DILocation(line: 1113, column: 36, scope: !6880)
!6886 = !DILocation(line: 1113, column: 24, scope: !6880)
!6887 = !DILocation(line: 1113, column: 3, scope: !6880)
!6888 = distinct !{!6888, !6882, !6889}
!6889 = !DILocation(line: 1113, column: 38, scope: !6876)
!6890 = !DILocation(line: 1114, column: 10, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 1114, column: 3)
!6892 = !DILocation(line: 1114, column: 8, scope: !6891)
!6893 = !DILocation(line: 1114, column: 15, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 1114, column: 3)
!6895 = !DILocation(line: 1114, column: 17, scope: !6894)
!6896 = !DILocation(line: 1114, column: 3, scope: !6891)
!6897 = !DILocation(line: 1114, column: 36, scope: !6894)
!6898 = !DILocation(line: 1114, column: 31, scope: !6894)
!6899 = !DILocation(line: 1114, column: 27, scope: !6894)
!6900 = !DILocation(line: 1114, column: 34, scope: !6894)
!6901 = !DILocation(line: 1114, column: 23, scope: !6894)
!6902 = !DILocation(line: 1114, column: 3, scope: !6894)
!6903 = distinct !{!6903, !6896, !6904}
!6904 = !DILocation(line: 1114, column: 36, scope: !6891)
!6905 = !DILocation(line: 1115, column: 10, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 1115, column: 3)
!6907 = !DILocation(line: 1115, column: 8, scope: !6906)
!6908 = !DILocation(line: 1115, column: 15, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 1115, column: 3)
!6910 = !DILocation(line: 1115, column: 17, scope: !6909)
!6911 = !DILocation(line: 1115, column: 3, scope: !6906)
!6912 = !DILocation(line: 1116, column: 14, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 1116, column: 8)
!6914 = !DILocation(line: 1116, column: 9, scope: !6913)
!6915 = !DILocation(line: 1116, column: 17, scope: !6913)
!6916 = !DILocation(line: 1116, column: 33, scope: !6913)
!6917 = !DILocation(line: 1116, column: 25, scope: !6913)
!6918 = !DILocation(line: 1116, column: 21, scope: !6913)
!6919 = !DILocation(line: 1116, column: 52, scope: !6913)
!6920 = !DILocation(line: 1116, column: 44, scope: !6913)
!6921 = !DILocation(line: 1116, column: 40, scope: !6913)
!6922 = !DILocation(line: 1116, column: 37, scope: !6913)
!6923 = !DILocation(line: 1116, column: 8, scope: !6909)
!6924 = !DILocalVariable(name: "ints", scope: !6925, file: !3, line: 1117, type: !1650)
!6925 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1116, column: 58)
!6926 = !DILocation(line: 1117, column: 14, scope: !6925)
!6927 = !DILocalVariable(name: "lists", scope: !6925, file: !3, line: 1118, type: !1645)
!6928 = !DILocation(line: 1118, column: 15, scope: !6925)
!6929 = !DILocation(line: 1118, column: 36, scope: !6925)
!6930 = !DILocation(line: 1118, column: 23, scope: !6925)
!6931 = !DILocalVariable(name: "start", scope: !6925, file: !3, line: 1119, type: !78)
!6932 = !DILocation(line: 1119, column: 9, scope: !6925)
!6933 = !DILocation(line: 1119, column: 17, scope: !6925)
!6934 = !DILocalVariable(name: "edge", scope: !6925, file: !3, line: 1119, type: !78)
!6935 = !DILocation(line: 1119, column: 20, scope: !6925)
!6936 = !DILocation(line: 1119, column: 27, scope: !6925)
!6937 = !DILocalVariable(name: "face", scope: !6925, file: !3, line: 1122, type: !78)
!6938 = !DILocation(line: 1122, column: 9, scope: !6925)
!6939 = !DILocation(line: 1122, column: 28, scope: !6925)
!6940 = !DILocation(line: 1122, column: 20, scope: !6925)
!6941 = !DILocation(line: 1122, column: 16, scope: !6925)
!6942 = !DILocation(line: 1122, column: 44, scope: !6925)
!6943 = !DILocation(line: 1122, column: 34, scope: !6925)
!6944 = !DILocation(line: 1122, column: 58, scope: !6925)
!6945 = !DILocation(line: 1122, column: 49, scope: !6925)
!6946 = !DILocation(line: 1124, column: 5, scope: !6925)
!6947 = !DILocation(line: 1125, column: 24, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 1124, column: 15)
!6949 = !DILocation(line: 1125, column: 30, scope: !6948)
!6950 = !DILocation(line: 1125, column: 13, scope: !6948)
!6951 = !DILocation(line: 1125, column: 11, scope: !6948)
!6952 = !DILocation(line: 1126, column: 11, scope: !6948)
!6953 = !DILocation(line: 1126, column: 6, scope: !6948)
!6954 = !DILocation(line: 1126, column: 17, scope: !6948)
!6955 = !DILocation(line: 1127, column: 22, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 1127, column: 10)
!6957 = !DILocation(line: 1127, column: 14, scope: !6956)
!6958 = !DILocation(line: 1127, column: 10, scope: !6956)
!6959 = !DILocation(line: 1127, column: 44, scope: !6956)
!6960 = !DILocation(line: 1127, column: 36, scope: !6956)
!6961 = !DILocation(line: 1127, column: 32, scope: !6956)
!6962 = !DILocation(line: 1127, column: 29, scope: !6956)
!6963 = !DILocation(line: 1127, column: 10, scope: !6948)
!6964 = !DILocalVariable(name: "tmp", scope: !6965, file: !3, line: 1128, type: !1650)
!6965 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1127, column: 52)
!6966 = !DILocation(line: 1128, column: 16, scope: !6965)
!6967 = !DILocation(line: 1128, column: 22, scope: !6965)
!6968 = !DILocation(line: 1130, column: 26, scope: !6965)
!6969 = !DILocation(line: 1130, column: 14, scope: !6965)
!6970 = !DILocation(line: 1130, column: 12, scope: !6965)
!6971 = !DILocation(line: 1131, column: 17, scope: !6965)
!6972 = !DILocation(line: 1131, column: 7, scope: !6965)
!6973 = !DILocation(line: 1131, column: 13, scope: !6965)
!6974 = !DILocation(line: 1131, column: 15, scope: !6965)
!6975 = !DILocation(line: 1132, column: 20, scope: !6965)
!6976 = !DILocation(line: 1132, column: 7, scope: !6965)
!6977 = !DILocation(line: 1132, column: 13, scope: !6965)
!6978 = !DILocation(line: 1132, column: 18, scope: !6965)
!6979 = !DILocation(line: 1134, column: 11, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1134, column: 11)
!6981 = !DILocation(line: 1134, column: 19, scope: !6980)
!6982 = !DILocation(line: 1134, column: 16, scope: !6980)
!6983 = !DILocation(line: 1134, column: 11, scope: !6965)
!6984 = !DILocation(line: 1134, column: 26, scope: !6980)
!6985 = !DILocation(line: 1135, column: 24, scope: !6965)
!6986 = !DILocation(line: 1135, column: 30, scope: !6965)
!6987 = !DILocation(line: 1135, column: 14, scope: !6965)
!6988 = !DILocation(line: 1135, column: 12, scope: !6965)
!6989 = !DILocation(line: 1136, column: 6, scope: !6965)
!6990 = distinct !{!6990, !6946, !6991}
!6991 = !DILocation(line: 1137, column: 5, scope: !6925)
!6992 = !DILocation(line: 1138, column: 19, scope: !6925)
!6993 = !DILocation(line: 1138, column: 5, scope: !6925)
!6994 = !DILocation(line: 1138, column: 12, scope: !6925)
!6995 = !DILocation(line: 1138, column: 17, scope: !6925)
!6996 = !DILocation(line: 1139, column: 29, scope: !6925)
!6997 = !DILocation(line: 1139, column: 19, scope: !6925)
!6998 = !DILocation(line: 1139, column: 5, scope: !6925)
!6999 = !DILocation(line: 1139, column: 12, scope: !6925)
!7000 = !DILocation(line: 1139, column: 17, scope: !6925)
!7001 = !DILocation(line: 1140, column: 20, scope: !6925)
!7002 = !DILocation(line: 1140, column: 15, scope: !6925)
!7003 = !DILocation(line: 1140, column: 5, scope: !6925)
!7004 = !DILocation(line: 1140, column: 18, scope: !6925)
!7005 = !DILocation(line: 1141, column: 4, scope: !6925)
!7006 = !DILocation(line: 1116, column: 55, scope: !6913)
!7007 = !DILocation(line: 1115, column: 24, scope: !6909)
!7008 = !DILocation(line: 1115, column: 3, scope: !6909)
!7009 = distinct !{!7009, !6911, !7010}
!7010 = !DILocation(line: 1141, column: 4, scope: !6906)
!7011 = !DILocation(line: 1142, column: 2, scope: !6877)
!7012 = !DILocation(line: 1112, column: 24, scope: !6872)
!7013 = !DILocation(line: 1112, column: 2, scope: !6872)
!7014 = distinct !{!7014, !6874, !7015}
!7015 = !DILocation(line: 1142, column: 2, scope: !6869)
!7016 = !DILocation(line: 1143, column: 1, scope: !1716)
!7017 = distinct !DISubprogram(name: "find_first_points", scope: !3, file: !3, line: 1479, type: !7018, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{null, !3191, !114, !78}
!7020 = !DILocalVariable(name: "process", arg: 1, scope: !7017, file: !3, line: 1479, type: !3191)
!7021 = !DILocation(line: 1479, column: 40, scope: !7017)
!7022 = !DILocalVariable(name: "mb", arg: 2, scope: !7017, file: !3, line: 1479, type: !114)
!7023 = !DILocation(line: 1479, column: 59, scope: !7017)
!7024 = !DILocalVariable(name: "a", arg: 3, scope: !7017, file: !3, line: 1479, type: !78)
!7025 = !DILocation(line: 1479, column: 67, scope: !7017)
!7026 = !DILocalVariable(name: "ml", scope: !7017, file: !3, line: 1481, type: !1617)
!7027 = !DILocation(line: 1481, column: 12, scope: !7017)
!7028 = !DILocalVariable(name: "f", scope: !7017, file: !3, line: 1482, type: !141)
!7029 = !DILocation(line: 1482, column: 8, scope: !7017)
!7030 = !DILocation(line: 1484, column: 7, scope: !7017)
!7031 = !DILocation(line: 1484, column: 16, scope: !7017)
!7032 = !DILocation(line: 1484, column: 22, scope: !7017)
!7033 = !DILocation(line: 1484, column: 5, scope: !7017)
!7034 = !DILocation(line: 1485, column: 14, scope: !7017)
!7035 = !DILocation(line: 1485, column: 18, scope: !7017)
!7036 = !DILocation(line: 1485, column: 27, scope: !7017)
!7037 = !DILocation(line: 1485, column: 31, scope: !7017)
!7038 = !DILocation(line: 1485, column: 25, scope: !7017)
!7039 = !DILocation(line: 1485, column: 11, scope: !7017)
!7040 = !DILocation(line: 1485, column: 4, scope: !7017)
!7041 = !DILocation(line: 1489, column: 6, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 1489, column: 6)
!7043 = !DILocation(line: 1489, column: 8, scope: !7042)
!7044 = !DILocation(line: 1489, column: 6, scope: !7017)
!7045 = !DILocalVariable(name: "IN", scope: !7046, file: !3, line: 1490, type: !172)
!7046 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 1489, column: 16)
!7047 = !DILocation(line: 1490, column: 9, scope: !7046)
!7048 = !DILocalVariable(name: "OUT", scope: !7046, file: !3, line: 1490, type: !172)
!7049 = !DILocation(line: 1490, column: 25, scope: !7046)
!7050 = !DILocalVariable(name: "in", scope: !7046, file: !3, line: 1490, type: !172)
!7051 = !DILocation(line: 1490, column: 42, scope: !7046)
!7052 = !DILocalVariable(name: "out", scope: !7046, file: !3, line: 1490, type: !172)
!7053 = !DILocation(line: 1490, column: 58, scope: !7046)
!7054 = !DILocalVariable(name: "i", scope: !7046, file: !3, line: 1491, type: !78)
!7055 = !DILocation(line: 1491, column: 7, scope: !7046)
!7056 = !DILocalVariable(name: "j", scope: !7046, file: !3, line: 1491, type: !78)
!7057 = !DILocation(line: 1491, column: 10, scope: !7046)
!7058 = !DILocalVariable(name: "k", scope: !7046, file: !3, line: 1491, type: !78)
!7059 = !DILocation(line: 1491, column: 13, scope: !7046)
!7060 = !DILocalVariable(name: "c_i", scope: !7046, file: !3, line: 1491, type: !78)
!7061 = !DILocation(line: 1491, column: 16, scope: !7046)
!7062 = !DILocalVariable(name: "c_j", scope: !7046, file: !3, line: 1491, type: !78)
!7063 = !DILocation(line: 1491, column: 21, scope: !7046)
!7064 = !DILocalVariable(name: "c_k", scope: !7046, file: !3, line: 1491, type: !78)
!7065 = !DILocation(line: 1491, column: 26, scope: !7046)
!7066 = !DILocalVariable(name: "index", scope: !7046, file: !3, line: 1492, type: !651)
!7067 = !DILocation(line: 1492, column: 7, scope: !7046)
!7068 = !DILocalVariable(name: "in_v", scope: !7046, file: !3, line: 1493, type: !141)
!7069 = !DILocation(line: 1493, column: 9, scope: !7046)
!7070 = !DILocalVariable(name: "workp", scope: !7046, file: !3, line: 1494, type: !172)
!7071 = !DILocation(line: 1494, column: 9, scope: !7046)
!7072 = !DILocalVariable(name: "dvec", scope: !7046, file: !3, line: 1495, type: !172)
!7073 = !DILocation(line: 1495, column: 9, scope: !7046)
!7074 = !DILocalVariable(name: "tmp_v", scope: !7046, file: !3, line: 1496, type: !141)
!7075 = !DILocation(line: 1496, column: 9, scope: !7046)
!7076 = !DILocalVariable(name: "workp_v", scope: !7046, file: !3, line: 1496, type: !141)
!7077 = !DILocation(line: 1496, column: 16, scope: !7046)
!7078 = !DILocalVariable(name: "max_len_sq", scope: !7046, file: !3, line: 1496, type: !141)
!7079 = !DILocation(line: 1496, column: 25, scope: !7046)
!7080 = !DILocalVariable(name: "nx", scope: !7046, file: !3, line: 1496, type: !141)
!7081 = !DILocation(line: 1496, column: 37, scope: !7046)
!7082 = !DILocalVariable(name: "ny", scope: !7046, file: !3, line: 1496, type: !141)
!7083 = !DILocation(line: 1496, column: 41, scope: !7046)
!7084 = !DILocalVariable(name: "nz", scope: !7046, file: !3, line: 1496, type: !141)
!7085 = !DILocation(line: 1496, column: 45, scope: !7046)
!7086 = !DILocalVariable(name: "max_dim", scope: !7046, file: !3, line: 1496, type: !141)
!7087 = !DILocation(line: 1496, column: 49, scope: !7046)
!7088 = !DILocation(line: 1498, column: 16, scope: !7046)
!7089 = !DILocation(line: 1498, column: 20, scope: !7046)
!7090 = !DILocation(line: 1498, column: 3, scope: !7046)
!7091 = !DILocation(line: 1499, column: 10, scope: !7046)
!7092 = !DILocation(line: 1499, column: 19, scope: !7046)
!7093 = !DILocation(line: 1499, column: 28, scope: !7046)
!7094 = !DILocation(line: 1499, column: 37, scope: !7046)
!7095 = !DILocation(line: 1499, column: 44, scope: !7046)
!7096 = !DILocation(line: 1499, column: 51, scope: !7046)
!7097 = !DILocation(line: 1499, column: 8, scope: !7046)
!7098 = !DILocation(line: 1501, column: 10, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 1501, column: 3)
!7100 = !DILocation(line: 1501, column: 8, scope: !7099)
!7101 = !DILocation(line: 1501, column: 15, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1501, column: 3)
!7103 = !DILocation(line: 1501, column: 17, scope: !7102)
!7104 = !DILocation(line: 1501, column: 3, scope: !7099)
!7105 = !DILocation(line: 1502, column: 12, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1501, column: 27)
!7107 = !DILocation(line: 1502, column: 16, scope: !7106)
!7108 = !DILocation(line: 1502, column: 4, scope: !7106)
!7109 = !DILocation(line: 1504, column: 24, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 1502, column: 22)
!7111 = !DILocation(line: 1504, column: 38, scope: !7110)
!7112 = !DILocation(line: 1504, column: 32, scope: !7110)
!7113 = !DILocation(line: 1504, column: 43, scope: !7110)
!7114 = !DILocation(line: 1504, column: 47, scope: !7110)
!7115 = !DILocation(line: 1504, column: 41, scope: !7110)
!7116 = !DILocation(line: 1504, column: 30, scope: !7110)
!7117 = !DILocation(line: 1504, column: 15, scope: !7110)
!7118 = !DILocation(line: 1504, column: 22, scope: !7110)
!7119 = !DILocation(line: 1504, column: 6, scope: !7110)
!7120 = !DILocation(line: 1504, column: 13, scope: !7110)
!7121 = !DILocation(line: 1505, column: 6, scope: !7110)
!7122 = !DILocation(line: 1510, column: 24, scope: !7110)
!7123 = !DILocation(line: 1510, column: 38, scope: !7110)
!7124 = !DILocation(line: 1510, column: 32, scope: !7110)
!7125 = !DILocation(line: 1510, column: 44, scope: !7110)
!7126 = !DILocation(line: 1510, column: 48, scope: !7110)
!7127 = !DILocation(line: 1510, column: 55, scope: !7110)
!7128 = !DILocation(line: 1510, column: 59, scope: !7110)
!7129 = !DILocation(line: 1510, column: 53, scope: !7110)
!7130 = !DILocation(line: 1510, column: 41, scope: !7110)
!7131 = !DILocation(line: 1510, column: 30, scope: !7110)
!7132 = !DILocation(line: 1510, column: 15, scope: !7110)
!7133 = !DILocation(line: 1510, column: 22, scope: !7110)
!7134 = !DILocation(line: 1510, column: 6, scope: !7110)
!7135 = !DILocation(line: 1510, column: 13, scope: !7110)
!7136 = !DILocation(line: 1511, column: 6, scope: !7110)
!7137 = !DILocation(line: 1514, column: 11, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 1514, column: 4)
!7139 = !DILocation(line: 1514, column: 9, scope: !7138)
!7140 = !DILocation(line: 1514, column: 16, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1514, column: 4)
!7142 = !DILocation(line: 1514, column: 18, scope: !7141)
!7143 = !DILocation(line: 1514, column: 4, scope: !7138)
!7144 = !DILocation(line: 1515, column: 13, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 1514, column: 28)
!7146 = !DILocation(line: 1515, column: 17, scope: !7145)
!7147 = !DILocation(line: 1515, column: 5, scope: !7145)
!7148 = !DILocation(line: 1517, column: 25, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1515, column: 23)
!7150 = !DILocation(line: 1517, column: 39, scope: !7149)
!7151 = !DILocation(line: 1517, column: 33, scope: !7149)
!7152 = !DILocation(line: 1517, column: 44, scope: !7149)
!7153 = !DILocation(line: 1517, column: 48, scope: !7149)
!7154 = !DILocation(line: 1517, column: 42, scope: !7149)
!7155 = !DILocation(line: 1517, column: 31, scope: !7149)
!7156 = !DILocation(line: 1517, column: 16, scope: !7149)
!7157 = !DILocation(line: 1517, column: 23, scope: !7149)
!7158 = !DILocation(line: 1517, column: 7, scope: !7149)
!7159 = !DILocation(line: 1517, column: 14, scope: !7149)
!7160 = !DILocation(line: 1518, column: 7, scope: !7149)
!7161 = !DILocation(line: 1523, column: 25, scope: !7149)
!7162 = !DILocation(line: 1523, column: 39, scope: !7149)
!7163 = !DILocation(line: 1523, column: 33, scope: !7149)
!7164 = !DILocation(line: 1523, column: 45, scope: !7149)
!7165 = !DILocation(line: 1523, column: 49, scope: !7149)
!7166 = !DILocation(line: 1523, column: 56, scope: !7149)
!7167 = !DILocation(line: 1523, column: 60, scope: !7149)
!7168 = !DILocation(line: 1523, column: 54, scope: !7149)
!7169 = !DILocation(line: 1523, column: 42, scope: !7149)
!7170 = !DILocation(line: 1523, column: 31, scope: !7149)
!7171 = !DILocation(line: 1523, column: 16, scope: !7149)
!7172 = !DILocation(line: 1523, column: 23, scope: !7149)
!7173 = !DILocation(line: 1523, column: 7, scope: !7149)
!7174 = !DILocation(line: 1523, column: 14, scope: !7149)
!7175 = !DILocation(line: 1524, column: 7, scope: !7149)
!7176 = !DILocation(line: 1527, column: 12, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1527, column: 5)
!7178 = !DILocation(line: 1527, column: 10, scope: !7177)
!7179 = !DILocation(line: 1527, column: 17, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1527, column: 5)
!7181 = !DILocation(line: 1527, column: 19, scope: !7180)
!7182 = !DILocation(line: 1527, column: 5, scope: !7177)
!7183 = !DILocation(line: 1528, column: 15, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 1527, column: 29)
!7185 = !DILocation(line: 1528, column: 6, scope: !7184)
!7186 = !DILocation(line: 1528, column: 13, scope: !7184)
!7187 = !DILocation(line: 1529, column: 15, scope: !7184)
!7188 = !DILocation(line: 1529, column: 6, scope: !7184)
!7189 = !DILocation(line: 1529, column: 13, scope: !7184)
!7190 = !DILocation(line: 1530, column: 14, scope: !7184)
!7191 = !DILocation(line: 1530, column: 18, scope: !7184)
!7192 = !DILocation(line: 1530, column: 6, scope: !7184)
!7193 = !DILocation(line: 1534, column: 17, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 1530, column: 24)
!7195 = !DILocation(line: 1534, column: 31, scope: !7194)
!7196 = !DILocation(line: 1534, column: 25, scope: !7194)
!7197 = !DILocation(line: 1534, column: 36, scope: !7194)
!7198 = !DILocation(line: 1534, column: 40, scope: !7194)
!7199 = !DILocation(line: 1534, column: 34, scope: !7194)
!7200 = !DILocation(line: 1534, column: 23, scope: !7194)
!7201 = !DILocation(line: 1534, column: 8, scope: !7194)
!7202 = !DILocation(line: 1534, column: 15, scope: !7194)
!7203 = !DILocation(line: 1535, column: 8, scope: !7194)
!7204 = !DILocation(line: 1538, column: 17, scope: !7194)
!7205 = !DILocation(line: 1538, column: 31, scope: !7194)
!7206 = !DILocation(line: 1538, column: 25, scope: !7194)
!7207 = !DILocation(line: 1538, column: 37, scope: !7194)
!7208 = !DILocation(line: 1538, column: 41, scope: !7194)
!7209 = !DILocation(line: 1538, column: 48, scope: !7194)
!7210 = !DILocation(line: 1538, column: 52, scope: !7194)
!7211 = !DILocation(line: 1538, column: 46, scope: !7194)
!7212 = !DILocation(line: 1538, column: 34, scope: !7194)
!7213 = !DILocation(line: 1538, column: 23, scope: !7194)
!7214 = !DILocation(line: 1538, column: 8, scope: !7194)
!7215 = !DILocation(line: 1538, column: 15, scope: !7194)
!7216 = !DILocation(line: 1539, column: 8, scope: !7194)
!7217 = !DILocation(line: 1542, column: 19, scope: !7184)
!7218 = !DILocation(line: 1542, column: 23, scope: !7184)
!7219 = !DILocation(line: 1542, column: 6, scope: !7184)
!7220 = !DILocation(line: 1547, column: 17, scope: !7184)
!7221 = !DILocation(line: 1547, column: 24, scope: !7184)
!7222 = !DILocation(line: 1547, column: 6, scope: !7184)
!7223 = !DILocation(line: 1548, column: 16, scope: !7184)
!7224 = !DILocation(line: 1548, column: 14, scope: !7184)
!7225 = !DILocation(line: 1549, column: 36, scope: !7184)
!7226 = !DILocation(line: 1549, column: 41, scope: !7184)
!7227 = !DILocation(line: 1549, column: 19, scope: !7184)
!7228 = !DILocation(line: 1549, column: 17, scope: !7184)
!7229 = !DILocation(line: 1551, column: 18, scope: !7184)
!7230 = !DILocation(line: 1551, column: 27, scope: !7184)
!7231 = !DILocation(line: 1551, column: 25, scope: !7184)
!7232 = !DILocation(line: 1551, column: 36, scope: !7184)
!7233 = !DILocation(line: 1551, column: 45, scope: !7184)
!7234 = !DILocation(line: 1551, column: 34, scope: !7184)
!7235 = !DILocation(line: 1551, column: 11, scope: !7184)
!7236 = !DILocation(line: 1551, column: 9, scope: !7184)
!7237 = !DILocation(line: 1552, column: 18, scope: !7184)
!7238 = !DILocation(line: 1552, column: 27, scope: !7184)
!7239 = !DILocation(line: 1552, column: 25, scope: !7184)
!7240 = !DILocation(line: 1552, column: 36, scope: !7184)
!7241 = !DILocation(line: 1552, column: 45, scope: !7184)
!7242 = !DILocation(line: 1552, column: 34, scope: !7184)
!7243 = !DILocation(line: 1552, column: 11, scope: !7184)
!7244 = !DILocation(line: 1552, column: 9, scope: !7184)
!7245 = !DILocation(line: 1553, column: 18, scope: !7184)
!7246 = !DILocation(line: 1553, column: 27, scope: !7184)
!7247 = !DILocation(line: 1553, column: 25, scope: !7184)
!7248 = !DILocation(line: 1553, column: 36, scope: !7184)
!7249 = !DILocation(line: 1553, column: 45, scope: !7184)
!7250 = !DILocation(line: 1553, column: 34, scope: !7184)
!7251 = !DILocation(line: 1553, column: 11, scope: !7184)
!7252 = !DILocation(line: 1553, column: 9, scope: !7184)
!7253 = !DILocation(line: 1555, column: 24, scope: !7184)
!7254 = !DILocation(line: 1555, column: 28, scope: !7184)
!7255 = !DILocation(line: 1555, column: 32, scope: !7184)
!7256 = !DILocation(line: 1555, column: 16, scope: !7184)
!7257 = !DILocation(line: 1555, column: 14, scope: !7184)
!7258 = !DILocation(line: 1556, column: 10, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 1556, column: 10)
!7260 = !DILocation(line: 1556, column: 18, scope: !7259)
!7261 = !DILocation(line: 1556, column: 10, scope: !7184)
!7262 = !DILocalVariable(name: "len_sq", scope: !7263, file: !3, line: 1557, type: !141)
!7263 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1556, column: 27)
!7264 = !DILocation(line: 1557, column: 13, scope: !7263)
!7265 = !DILocation(line: 1559, column: 18, scope: !7263)
!7266 = !DILocation(line: 1559, column: 27, scope: !7263)
!7267 = !DILocation(line: 1559, column: 25, scope: !7263)
!7268 = !DILocation(line: 1559, column: 36, scope: !7263)
!7269 = !DILocation(line: 1559, column: 34, scope: !7263)
!7270 = !DILocation(line: 1559, column: 7, scope: !7263)
!7271 = !DILocation(line: 1559, column: 15, scope: !7263)
!7272 = !DILocation(line: 1560, column: 18, scope: !7263)
!7273 = !DILocation(line: 1560, column: 27, scope: !7263)
!7274 = !DILocation(line: 1560, column: 25, scope: !7263)
!7275 = !DILocation(line: 1560, column: 36, scope: !7263)
!7276 = !DILocation(line: 1560, column: 34, scope: !7263)
!7277 = !DILocation(line: 1560, column: 7, scope: !7263)
!7278 = !DILocation(line: 1560, column: 15, scope: !7263)
!7279 = !DILocation(line: 1561, column: 18, scope: !7263)
!7280 = !DILocation(line: 1561, column: 27, scope: !7263)
!7281 = !DILocation(line: 1561, column: 25, scope: !7263)
!7282 = !DILocation(line: 1561, column: 36, scope: !7263)
!7283 = !DILocation(line: 1561, column: 34, scope: !7263)
!7284 = !DILocation(line: 1561, column: 7, scope: !7263)
!7285 = !DILocation(line: 1561, column: 15, scope: !7263)
!7286 = !DILocation(line: 1563, column: 7, scope: !7263)
!7287 = !DILocation(line: 1563, column: 14, scope: !7263)
!7288 = !DILocation(line: 1563, column: 24, scope: !7263)
!7289 = !DILocation(line: 1563, column: 21, scope: !7263)
!7290 = !DILocation(line: 1564, column: 18, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 1563, column: 36)
!7292 = !DILocation(line: 1564, column: 25, scope: !7291)
!7293 = !DILocation(line: 1564, column: 8, scope: !7291)
!7294 = !DILocation(line: 1567, column: 16, scope: !7291)
!7295 = !DILocation(line: 1567, column: 25, scope: !7291)
!7296 = !DILocation(line: 1567, column: 34, scope: !7291)
!7297 = !DILocation(line: 1567, column: 43, scope: !7291)
!7298 = !DILocation(line: 1567, column: 53, scope: !7291)
!7299 = !DILocation(line: 1567, column: 63, scope: !7291)
!7300 = !DILocation(line: 1567, column: 14, scope: !7291)
!7301 = !DILocation(line: 1569, column: 13, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1569, column: 12)
!7303 = !DILocation(line: 1569, column: 19, scope: !7302)
!7304 = !DILocation(line: 1569, column: 26, scope: !7302)
!7305 = !DILocation(line: 1569, column: 29, scope: !7302)
!7306 = !DILocation(line: 1569, column: 37, scope: !7302)
!7307 = !DILocation(line: 1569, column: 46, scope: !7302)
!7308 = !DILocation(line: 1569, column: 50, scope: !7302)
!7309 = !DILocation(line: 1569, column: 56, scope: !7302)
!7310 = !DILocation(line: 1569, column: 63, scope: !7302)
!7311 = !DILocation(line: 1569, column: 66, scope: !7302)
!7312 = !DILocation(line: 1569, column: 74, scope: !7302)
!7313 = !DILocation(line: 1569, column: 12, scope: !7291)
!7314 = !DILocation(line: 1572, column: 26, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 1569, column: 84)
!7316 = !DILocation(line: 1572, column: 37, scope: !7315)
!7317 = !DILocation(line: 1572, column: 46, scope: !7315)
!7318 = !DILocation(line: 1572, column: 35, scope: !7315)
!7319 = !DILocation(line: 1572, column: 20, scope: !7315)
!7320 = !DILocation(line: 1572, column: 15, scope: !7315)
!7321 = !DILocation(line: 1572, column: 13, scope: !7315)
!7322 = !DILocation(line: 1573, column: 26, scope: !7315)
!7323 = !DILocation(line: 1573, column: 37, scope: !7315)
!7324 = !DILocation(line: 1573, column: 46, scope: !7315)
!7325 = !DILocation(line: 1573, column: 35, scope: !7315)
!7326 = !DILocation(line: 1573, column: 20, scope: !7315)
!7327 = !DILocation(line: 1573, column: 15, scope: !7315)
!7328 = !DILocation(line: 1573, column: 13, scope: !7315)
!7329 = !DILocation(line: 1574, column: 26, scope: !7315)
!7330 = !DILocation(line: 1574, column: 37, scope: !7315)
!7331 = !DILocation(line: 1574, column: 46, scope: !7315)
!7332 = !DILocation(line: 1574, column: 35, scope: !7315)
!7333 = !DILocation(line: 1574, column: 20, scope: !7315)
!7334 = !DILocation(line: 1574, column: 15, scope: !7315)
!7335 = !DILocation(line: 1574, column: 13, scope: !7315)
!7336 = !DILocation(line: 1578, column: 14, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 1578, column: 13)
!7338 = !DILocation(line: 1578, column: 18, scope: !7337)
!7339 = !DILocation(line: 1578, column: 23, scope: !7337)
!7340 = !DILocation(line: 1578, column: 38, scope: !7337)
!7341 = !DILocation(line: 1578, column: 13, scope: !7315)
!7342 = !DILocation(line: 1579, column: 19, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 1578, column: 44)
!7344 = !DILocation(line: 1579, column: 28, scope: !7343)
!7345 = !DILocation(line: 1579, column: 33, scope: !7343)
!7346 = !DILocation(line: 1579, column: 38, scope: !7343)
!7347 = !DILocation(line: 1579, column: 10, scope: !7343)
!7348 = !DILocation(line: 1580, column: 9, scope: !7343)
!7349 = !DILocation(line: 1582, column: 19, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 1581, column: 14)
!7351 = !DILocation(line: 1582, column: 28, scope: !7350)
!7352 = !DILocation(line: 1582, column: 33, scope: !7350)
!7353 = !DILocation(line: 1582, column: 38, scope: !7350)
!7354 = !DILocation(line: 1582, column: 10, scope: !7350)
!7355 = !DILocation(line: 1584, column: 8, scope: !7315)
!7356 = !DILocation(line: 1585, column: 34, scope: !7291)
!7357 = !DILocation(line: 1585, column: 41, scope: !7291)
!7358 = !DILocation(line: 1585, column: 17, scope: !7291)
!7359 = !DILocation(line: 1585, column: 15, scope: !7291)
!7360 = !DILocation(line: 1586, column: 18, scope: !7291)
!7361 = !DILocation(line: 1586, column: 16, scope: !7291)
!7362 = distinct !{!7362, !7286, !7363}
!7363 = !DILocation(line: 1588, column: 7, scope: !7263)
!7364 = !DILocation(line: 1589, column: 6, scope: !7263)
!7365 = !DILocation(line: 1590, column: 5, scope: !7184)
!7366 = !DILocation(line: 1527, column: 25, scope: !7180)
!7367 = !DILocation(line: 1527, column: 5, scope: !7180)
!7368 = distinct !{!7368, !7182, !7369}
!7369 = !DILocation(line: 1590, column: 5, scope: !7177)
!7370 = !DILocation(line: 1591, column: 4, scope: !7145)
!7371 = !DILocation(line: 1514, column: 24, scope: !7141)
!7372 = !DILocation(line: 1514, column: 4, scope: !7141)
!7373 = distinct !{!7373, !7143, !7374}
!7374 = !DILocation(line: 1591, column: 4, scope: !7138)
!7375 = !DILocation(line: 1592, column: 3, scope: !7106)
!7376 = !DILocation(line: 1501, column: 23, scope: !7102)
!7377 = !DILocation(line: 1501, column: 3, scope: !7102)
!7378 = distinct !{!7378, !7104, !7379}
!7379 = !DILocation(line: 1592, column: 3, scope: !7099)
!7380 = !DILocation(line: 1593, column: 2, scope: !7046)
!7381 = !DILocation(line: 1594, column: 1, scope: !7017)
!7382 = distinct !DISubprogram(name: "docube", scope: !3, file: !3, line: 906, type: !7383, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!7383 = !DISubroutineType(types: !7384)
!7384 = !{null, !3191, !7385, !114}
!7385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!7386 = !DILocalVariable(name: "process", arg: 1, scope: !7382, file: !3, line: 906, type: !3191)
!7387 = !DILocation(line: 906, column: 29, scope: !7382)
!7388 = !DILocalVariable(name: "cube", arg: 2, scope: !7382, file: !3, line: 906, type: !7385)
!7389 = !DILocation(line: 906, column: 44, scope: !7382)
!7390 = !DILocalVariable(name: "mb", arg: 3, scope: !7382, file: !3, line: 906, type: !114)
!7391 = !DILocation(line: 906, column: 60, scope: !7382)
!7392 = !DILocalVariable(name: "polys", scope: !7382, file: !3, line: 908, type: !1645)
!7393 = !DILocation(line: 908, column: 12, scope: !7382)
!7394 = !DILocalVariable(name: "c1", scope: !7382, file: !3, line: 909, type: !1672)
!7395 = !DILocation(line: 909, column: 10, scope: !7382)
!7396 = !DILocalVariable(name: "c2", scope: !7382, file: !3, line: 909, type: !1672)
!7397 = !DILocation(line: 909, column: 15, scope: !7382)
!7398 = !DILocalVariable(name: "i", scope: !7382, file: !3, line: 910, type: !78)
!7399 = !DILocation(line: 910, column: 6, scope: !7382)
!7400 = !DILocalVariable(name: "index", scope: !7382, file: !3, line: 910, type: !78)
!7401 = !DILocation(line: 910, column: 9, scope: !7382)
!7402 = !DILocalVariable(name: "count", scope: !7382, file: !3, line: 910, type: !78)
!7403 = !DILocation(line: 910, column: 20, scope: !7382)
!7404 = !DILocalVariable(name: "indexar", scope: !7382, file: !3, line: 910, type: !2579)
!7405 = !DILocation(line: 910, column: 27, scope: !7382)
!7406 = !DILocation(line: 912, column: 9, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 912, column: 2)
!7408 = !DILocation(line: 912, column: 7, scope: !7407)
!7409 = !DILocation(line: 912, column: 14, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 912, column: 2)
!7411 = !DILocation(line: 912, column: 16, scope: !7410)
!7412 = !DILocation(line: 912, column: 2, scope: !7407)
!7413 = !DILocation(line: 912, column: 30, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 912, column: 30)
!7415 = !DILocation(line: 912, column: 36, scope: !7414)
!7416 = !DILocation(line: 912, column: 44, scope: !7414)
!7417 = !DILocation(line: 912, column: 48, scope: !7414)
!7418 = !DILocation(line: 912, column: 54, scope: !7414)
!7419 = !DILocation(line: 912, column: 30, scope: !7410)
!7420 = !DILocation(line: 912, column: 77, scope: !7414)
!7421 = !DILocation(line: 912, column: 74, scope: !7414)
!7422 = !DILocation(line: 912, column: 68, scope: !7414)
!7423 = !DILocation(line: 912, column: 62, scope: !7414)
!7424 = !DILocation(line: 912, column: 56, scope: !7414)
!7425 = !DILocation(line: 912, column: 22, scope: !7410)
!7426 = !DILocation(line: 912, column: 2, scope: !7410)
!7427 = distinct !{!7427, !7412, !7428}
!7428 = !DILocation(line: 912, column: 78, scope: !7407)
!7429 = !DILocation(line: 914, column: 25, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 914, column: 2)
!7431 = !DILocation(line: 914, column: 15, scope: !7430)
!7432 = !DILocation(line: 914, column: 13, scope: !7430)
!7433 = !DILocation(line: 914, column: 7, scope: !7430)
!7434 = !DILocation(line: 914, column: 33, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 914, column: 2)
!7436 = !DILocation(line: 914, column: 2, scope: !7430)
!7437 = !DILocalVariable(name: "edges", scope: !7438, file: !3, line: 915, type: !1650)
!7438 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 914, column: 61)
!7439 = !DILocation(line: 915, column: 12, scope: !7438)
!7440 = !DILocation(line: 917, column: 9, scope: !7438)
!7441 = !DILocation(line: 919, column: 16, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 919, column: 3)
!7443 = !DILocation(line: 919, column: 23, scope: !7442)
!7444 = !DILocation(line: 919, column: 14, scope: !7442)
!7445 = !DILocation(line: 919, column: 8, scope: !7442)
!7446 = !DILocation(line: 919, column: 29, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 919, column: 3)
!7448 = !DILocation(line: 919, column: 3, scope: !7442)
!7449 = !DILocation(line: 920, column: 9, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 919, column: 57)
!7451 = !DILocation(line: 920, column: 15, scope: !7450)
!7452 = !DILocation(line: 920, column: 31, scope: !7450)
!7453 = !DILocation(line: 920, column: 38, scope: !7450)
!7454 = !DILocation(line: 920, column: 23, scope: !7450)
!7455 = !DILocation(line: 920, column: 7, scope: !7450)
!7456 = !DILocation(line: 921, column: 9, scope: !7450)
!7457 = !DILocation(line: 921, column: 15, scope: !7450)
!7458 = !DILocation(line: 921, column: 31, scope: !7450)
!7459 = !DILocation(line: 921, column: 38, scope: !7450)
!7460 = !DILocation(line: 921, column: 23, scope: !7450)
!7461 = !DILocation(line: 921, column: 7, scope: !7450)
!7462 = !DILocation(line: 923, column: 28, scope: !7450)
!7463 = !DILocation(line: 923, column: 37, scope: !7450)
!7464 = !DILocation(line: 923, column: 41, scope: !7450)
!7465 = !DILocation(line: 923, column: 45, scope: !7450)
!7466 = !DILocation(line: 923, column: 21, scope: !7450)
!7467 = !DILocation(line: 923, column: 12, scope: !7450)
!7468 = !DILocation(line: 923, column: 4, scope: !7450)
!7469 = !DILocation(line: 923, column: 19, scope: !7450)
!7470 = !DILocation(line: 924, column: 9, scope: !7450)
!7471 = !DILocation(line: 925, column: 3, scope: !7450)
!7472 = !DILocation(line: 919, column: 44, scope: !7447)
!7473 = !DILocation(line: 919, column: 51, scope: !7447)
!7474 = !DILocation(line: 919, column: 42, scope: !7447)
!7475 = !DILocation(line: 919, column: 3, scope: !7447)
!7476 = distinct !{!7476, !7448, !7477}
!7477 = !DILocation(line: 925, column: 3, scope: !7442)
!7478 = !DILocation(line: 926, column: 7, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 926, column: 7)
!7480 = !DILocation(line: 926, column: 13, scope: !7479)
!7481 = !DILocation(line: 926, column: 7, scope: !7438)
!7482 = !DILocation(line: 927, column: 12, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 926, column: 18)
!7484 = !DILocation(line: 927, column: 4, scope: !7483)
!7485 = !DILocation(line: 929, column: 23, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 927, column: 19)
!7487 = !DILocation(line: 929, column: 32, scope: !7486)
!7488 = !DILocation(line: 929, column: 44, scope: !7486)
!7489 = !DILocation(line: 929, column: 56, scope: !7486)
!7490 = !DILocation(line: 929, column: 6, scope: !7486)
!7491 = !DILocation(line: 930, column: 6, scope: !7486)
!7492 = !DILocation(line: 932, column: 10, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 932, column: 10)
!7494 = !DILocation(line: 932, column: 21, scope: !7493)
!7495 = !DILocation(line: 932, column: 10, scope: !7486)
!7496 = !DILocation(line: 932, column: 44, scope: !7493)
!7497 = !DILocation(line: 932, column: 53, scope: !7493)
!7498 = !DILocation(line: 932, column: 65, scope: !7493)
!7499 = !DILocation(line: 932, column: 77, scope: !7493)
!7500 = !DILocation(line: 932, column: 89, scope: !7493)
!7501 = !DILocation(line: 932, column: 27, scope: !7493)
!7502 = !DILocation(line: 933, column: 28, scope: !7493)
!7503 = !DILocation(line: 933, column: 37, scope: !7493)
!7504 = !DILocation(line: 933, column: 49, scope: !7493)
!7505 = !DILocation(line: 933, column: 61, scope: !7493)
!7506 = !DILocation(line: 933, column: 73, scope: !7493)
!7507 = !DILocation(line: 933, column: 11, scope: !7493)
!7508 = !DILocation(line: 934, column: 6, scope: !7486)
!7509 = !DILocation(line: 936, column: 10, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 936, column: 10)
!7511 = !DILocation(line: 936, column: 21, scope: !7510)
!7512 = !DILocation(line: 936, column: 10, scope: !7486)
!7513 = !DILocation(line: 936, column: 44, scope: !7510)
!7514 = !DILocation(line: 936, column: 53, scope: !7510)
!7515 = !DILocation(line: 936, column: 65, scope: !7510)
!7516 = !DILocation(line: 936, column: 77, scope: !7510)
!7517 = !DILocation(line: 936, column: 89, scope: !7510)
!7518 = !DILocation(line: 936, column: 27, scope: !7510)
!7519 = !DILocation(line: 937, column: 28, scope: !7510)
!7520 = !DILocation(line: 937, column: 37, scope: !7510)
!7521 = !DILocation(line: 937, column: 49, scope: !7510)
!7522 = !DILocation(line: 937, column: 61, scope: !7510)
!7523 = !DILocation(line: 937, column: 73, scope: !7510)
!7524 = !DILocation(line: 937, column: 11, scope: !7510)
!7525 = !DILocation(line: 939, column: 23, scope: !7486)
!7526 = !DILocation(line: 939, column: 32, scope: !7486)
!7527 = !DILocation(line: 939, column: 44, scope: !7486)
!7528 = !DILocation(line: 939, column: 56, scope: !7486)
!7529 = !DILocation(line: 939, column: 6, scope: !7486)
!7530 = !DILocation(line: 940, column: 6, scope: !7486)
!7531 = !DILocation(line: 942, column: 10, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 942, column: 10)
!7533 = !DILocation(line: 942, column: 21, scope: !7532)
!7534 = !DILocation(line: 942, column: 10, scope: !7486)
!7535 = !DILocation(line: 943, column: 24, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 942, column: 27)
!7537 = !DILocation(line: 943, column: 33, scope: !7536)
!7538 = !DILocation(line: 943, column: 45, scope: !7536)
!7539 = !DILocation(line: 943, column: 57, scope: !7536)
!7540 = !DILocation(line: 943, column: 69, scope: !7536)
!7541 = !DILocation(line: 943, column: 7, scope: !7536)
!7542 = !DILocation(line: 944, column: 24, scope: !7536)
!7543 = !DILocation(line: 944, column: 33, scope: !7536)
!7544 = !DILocation(line: 944, column: 45, scope: !7536)
!7545 = !DILocation(line: 944, column: 57, scope: !7536)
!7546 = !DILocation(line: 944, column: 69, scope: !7536)
!7547 = !DILocation(line: 944, column: 7, scope: !7536)
!7548 = !DILocation(line: 945, column: 6, scope: !7536)
!7549 = !DILocation(line: 947, column: 24, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 946, column: 11)
!7551 = !DILocation(line: 947, column: 33, scope: !7550)
!7552 = !DILocation(line: 947, column: 45, scope: !7550)
!7553 = !DILocation(line: 947, column: 57, scope: !7550)
!7554 = !DILocation(line: 947, column: 69, scope: !7550)
!7555 = !DILocation(line: 947, column: 7, scope: !7550)
!7556 = !DILocation(line: 948, column: 24, scope: !7550)
!7557 = !DILocation(line: 948, column: 33, scope: !7550)
!7558 = !DILocation(line: 948, column: 45, scope: !7550)
!7559 = !DILocation(line: 948, column: 57, scope: !7550)
!7560 = !DILocation(line: 948, column: 69, scope: !7550)
!7561 = !DILocation(line: 948, column: 7, scope: !7550)
!7562 = !DILocation(line: 950, column: 6, scope: !7486)
!7563 = !DILocation(line: 952, column: 10, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 952, column: 10)
!7565 = !DILocation(line: 952, column: 21, scope: !7564)
!7566 = !DILocation(line: 952, column: 10, scope: !7486)
!7567 = !DILocation(line: 953, column: 24, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 952, column: 27)
!7569 = !DILocation(line: 953, column: 33, scope: !7568)
!7570 = !DILocation(line: 953, column: 45, scope: !7568)
!7571 = !DILocation(line: 953, column: 57, scope: !7568)
!7572 = !DILocation(line: 953, column: 69, scope: !7568)
!7573 = !DILocation(line: 953, column: 7, scope: !7568)
!7574 = !DILocation(line: 954, column: 24, scope: !7568)
!7575 = !DILocation(line: 954, column: 33, scope: !7568)
!7576 = !DILocation(line: 954, column: 45, scope: !7568)
!7577 = !DILocation(line: 954, column: 57, scope: !7568)
!7578 = !DILocation(line: 954, column: 69, scope: !7568)
!7579 = !DILocation(line: 954, column: 7, scope: !7568)
!7580 = !DILocation(line: 955, column: 6, scope: !7568)
!7581 = !DILocation(line: 957, column: 24, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 956, column: 11)
!7583 = !DILocation(line: 957, column: 33, scope: !7582)
!7584 = !DILocation(line: 957, column: 45, scope: !7582)
!7585 = !DILocation(line: 957, column: 57, scope: !7582)
!7586 = !DILocation(line: 957, column: 69, scope: !7582)
!7587 = !DILocation(line: 957, column: 7, scope: !7582)
!7588 = !DILocation(line: 958, column: 24, scope: !7582)
!7589 = !DILocation(line: 958, column: 33, scope: !7582)
!7590 = !DILocation(line: 958, column: 45, scope: !7582)
!7591 = !DILocation(line: 958, column: 57, scope: !7582)
!7592 = !DILocation(line: 958, column: 69, scope: !7582)
!7593 = !DILocation(line: 958, column: 7, scope: !7582)
!7594 = !DILocation(line: 961, column: 23, scope: !7486)
!7595 = !DILocation(line: 961, column: 32, scope: !7486)
!7596 = !DILocation(line: 961, column: 44, scope: !7486)
!7597 = !DILocation(line: 961, column: 56, scope: !7486)
!7598 = !DILocation(line: 961, column: 6, scope: !7486)
!7599 = !DILocation(line: 963, column: 6, scope: !7486)
!7600 = !DILocation(line: 965, column: 3, scope: !7483)
!7601 = !DILocation(line: 966, column: 2, scope: !7438)
!7602 = !DILocation(line: 914, column: 48, scope: !7435)
!7603 = !DILocation(line: 914, column: 55, scope: !7435)
!7604 = !DILocation(line: 914, column: 46, scope: !7435)
!7605 = !DILocation(line: 914, column: 2, scope: !7435)
!7606 = distinct !{!7606, !7436, !7607}
!7607 = !DILocation(line: 966, column: 2, scope: !7430)
!7608 = !DILocation(line: 967, column: 1, scope: !7382)
!7609 = distinct !DISubprogram(name: "testface", scope: !3, file: !3, line: 974, type: !7610, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!7610 = !DISubroutineType(types: !7611)
!7611 = !{null, !3191, !78, !78, !78, !7385, !78, !78, !78, !78, !78}
!7612 = !DILocalVariable(name: "process", arg: 1, scope: !7609, file: !3, line: 974, type: !3191)
!7613 = !DILocation(line: 974, column: 31, scope: !7609)
!7614 = !DILocalVariable(name: "i", arg: 2, scope: !7609, file: !3, line: 974, type: !78)
!7615 = !DILocation(line: 974, column: 44, scope: !7609)
!7616 = !DILocalVariable(name: "j", arg: 3, scope: !7609, file: !3, line: 974, type: !78)
!7617 = !DILocation(line: 974, column: 51, scope: !7609)
!7618 = !DILocalVariable(name: "k", arg: 4, scope: !7609, file: !3, line: 974, type: !78)
!7619 = !DILocation(line: 974, column: 58, scope: !7609)
!7620 = !DILocalVariable(name: "old", arg: 5, scope: !7609, file: !3, line: 974, type: !7385)
!7621 = !DILocation(line: 974, column: 67, scope: !7609)
!7622 = !DILocalVariable(name: "bit", arg: 6, scope: !7609, file: !3, line: 974, type: !78)
!7623 = !DILocation(line: 974, column: 76, scope: !7609)
!7624 = !DILocalVariable(name: "c1", arg: 7, scope: !7609, file: !3, line: 974, type: !78)
!7625 = !DILocation(line: 974, column: 85, scope: !7609)
!7626 = !DILocalVariable(name: "c2", arg: 8, scope: !7609, file: !3, line: 974, type: !78)
!7627 = !DILocation(line: 974, column: 93, scope: !7609)
!7628 = !DILocalVariable(name: "c3", arg: 9, scope: !7609, file: !3, line: 974, type: !78)
!7629 = !DILocation(line: 974, column: 101, scope: !7609)
!7630 = !DILocalVariable(name: "c4", arg: 10, scope: !7609, file: !3, line: 974, type: !78)
!7631 = !DILocation(line: 974, column: 109, scope: !7609)
!7632 = !DILocalVariable(name: "newc", scope: !7609, file: !3, line: 976, type: !1664)
!7633 = !DILocation(line: 976, column: 7, scope: !7609)
!7634 = !DILocalVariable(name: "oldcubes", scope: !7609, file: !3, line: 977, type: !1659)
!7635 = !DILocation(line: 977, column: 9, scope: !7609)
!7636 = !DILocation(line: 977, column: 20, scope: !7609)
!7637 = !DILocation(line: 977, column: 29, scope: !7609)
!7638 = !DILocalVariable(name: "corn1", scope: !7609, file: !3, line: 978, type: !1672)
!7639 = !DILocation(line: 978, column: 10, scope: !7609)
!7640 = !DILocalVariable(name: "corn2", scope: !7609, file: !3, line: 978, type: !1672)
!7641 = !DILocation(line: 978, column: 18, scope: !7609)
!7642 = !DILocalVariable(name: "corn3", scope: !7609, file: !3, line: 978, type: !1672)
!7643 = !DILocation(line: 978, column: 26, scope: !7609)
!7644 = !DILocalVariable(name: "corn4", scope: !7609, file: !3, line: 978, type: !1672)
!7645 = !DILocation(line: 978, column: 34, scope: !7609)
!7646 = !DILocalVariable(name: "n", scope: !7609, file: !3, line: 979, type: !78)
!7647 = !DILocation(line: 979, column: 6, scope: !7609)
!7648 = !DILocalVariable(name: "pos", scope: !7609, file: !3, line: 979, type: !78)
!7649 = !DILocation(line: 979, column: 9, scope: !7609)
!7650 = !DILocation(line: 981, column: 10, scope: !7609)
!7651 = !DILocation(line: 981, column: 15, scope: !7609)
!7652 = !DILocation(line: 981, column: 23, scope: !7609)
!7653 = !DILocation(line: 981, column: 8, scope: !7609)
!7654 = !DILocation(line: 982, column: 10, scope: !7609)
!7655 = !DILocation(line: 982, column: 15, scope: !7609)
!7656 = !DILocation(line: 982, column: 23, scope: !7609)
!7657 = !DILocation(line: 982, column: 8, scope: !7609)
!7658 = !DILocation(line: 983, column: 10, scope: !7609)
!7659 = !DILocation(line: 983, column: 15, scope: !7609)
!7660 = !DILocation(line: 983, column: 23, scope: !7609)
!7661 = !DILocation(line: 983, column: 8, scope: !7609)
!7662 = !DILocation(line: 984, column: 10, scope: !7609)
!7663 = !DILocation(line: 984, column: 15, scope: !7609)
!7664 = !DILocation(line: 984, column: 23, scope: !7609)
!7665 = !DILocation(line: 984, column: 8, scope: !7609)
!7666 = !DILocation(line: 986, column: 8, scope: !7609)
!7667 = !DILocation(line: 986, column: 15, scope: !7609)
!7668 = !DILocation(line: 986, column: 21, scope: !7609)
!7669 = !DILocation(line: 986, column: 6, scope: !7609)
!7670 = !DILocation(line: 989, column: 8, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 989, column: 7)
!7672 = !DILocation(line: 989, column: 15, scope: !7671)
!7673 = !DILocation(line: 989, column: 21, scope: !7671)
!7674 = !DILocation(line: 989, column: 29, scope: !7671)
!7675 = !DILocation(line: 989, column: 26, scope: !7671)
!7676 = !DILocation(line: 989, column: 33, scope: !7671)
!7677 = !DILocation(line: 989, column: 37, scope: !7671)
!7678 = !DILocation(line: 989, column: 44, scope: !7671)
!7679 = !DILocation(line: 989, column: 50, scope: !7671)
!7680 = !DILocation(line: 989, column: 58, scope: !7671)
!7681 = !DILocation(line: 989, column: 55, scope: !7671)
!7682 = !DILocation(line: 989, column: 62, scope: !7671)
!7683 = !DILocation(line: 989, column: 66, scope: !7671)
!7684 = !DILocation(line: 989, column: 73, scope: !7671)
!7685 = !DILocation(line: 989, column: 79, scope: !7671)
!7686 = !DILocation(line: 989, column: 87, scope: !7671)
!7687 = !DILocation(line: 989, column: 84, scope: !7671)
!7688 = !DILocation(line: 989, column: 7, scope: !7609)
!7689 = !DILocation(line: 989, column: 92, scope: !7671)
!7690 = !DILocation(line: 993, column: 16, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 993, column: 6)
!7692 = !DILocation(line: 993, column: 25, scope: !7691)
!7693 = !DILocation(line: 993, column: 34, scope: !7691)
!7694 = !DILocation(line: 993, column: 43, scope: !7691)
!7695 = !DILocation(line: 993, column: 46, scope: !7691)
!7696 = !DILocation(line: 993, column: 49, scope: !7691)
!7697 = !DILocation(line: 993, column: 6, scope: !7691)
!7698 = !DILocation(line: 993, column: 6, scope: !7609)
!7699 = !DILocation(line: 994, column: 3, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 993, column: 53)
!7701 = !DILocation(line: 998, column: 45, scope: !7609)
!7702 = !DILocation(line: 998, column: 29, scope: !7609)
!7703 = !DILocation(line: 998, column: 19, scope: !7609)
!7704 = !DILocation(line: 998, column: 2, scope: !7609)
!7705 = !DILocation(line: 998, column: 11, scope: !7609)
!7706 = !DILocation(line: 998, column: 17, scope: !7609)
!7707 = !DILocation(line: 999, column: 25, scope: !7609)
!7708 = !DILocation(line: 999, column: 2, scope: !7609)
!7709 = !DILocation(line: 999, column: 11, scope: !7609)
!7710 = !DILocation(line: 999, column: 18, scope: !7609)
!7711 = !DILocation(line: 999, column: 23, scope: !7609)
!7712 = !DILocation(line: 1001, column: 11, scope: !7609)
!7713 = !DILocation(line: 1001, column: 7, scope: !7609)
!7714 = !DILocation(line: 1001, column: 9, scope: !7609)
!7715 = !DILocation(line: 1002, column: 11, scope: !7609)
!7716 = !DILocation(line: 1002, column: 7, scope: !7609)
!7717 = !DILocation(line: 1002, column: 9, scope: !7609)
!7718 = !DILocation(line: 1003, column: 11, scope: !7609)
!7719 = !DILocation(line: 1003, column: 7, scope: !7609)
!7720 = !DILocation(line: 1003, column: 9, scope: !7609)
!7721 = !DILocation(line: 1004, column: 9, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1004, column: 2)
!7723 = !DILocation(line: 1004, column: 7, scope: !7722)
!7724 = !DILocation(line: 1004, column: 14, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1004, column: 2)
!7726 = !DILocation(line: 1004, column: 16, scope: !7725)
!7727 = !DILocation(line: 1004, column: 2, scope: !7722)
!7728 = !DILocation(line: 1004, column: 31, scope: !7725)
!7729 = !DILocation(line: 1004, column: 39, scope: !7725)
!7730 = !DILocation(line: 1004, column: 26, scope: !7725)
!7731 = !DILocation(line: 1004, column: 42, scope: !7725)
!7732 = !DILocation(line: 1004, column: 22, scope: !7725)
!7733 = !DILocation(line: 1004, column: 2, scope: !7725)
!7734 = distinct !{!7734, !7727, !7735}
!7735 = !DILocation(line: 1004, column: 44, scope: !7722)
!7736 = !DILocation(line: 1006, column: 32, scope: !7609)
!7737 = !DILocation(line: 1006, column: 7, scope: !7609)
!7738 = !DILocation(line: 1006, column: 15, scope: !7609)
!7739 = !DILocation(line: 1006, column: 2, scope: !7609)
!7740 = !DILocation(line: 1006, column: 30, scope: !7609)
!7741 = !DILocation(line: 1007, column: 32, scope: !7609)
!7742 = !DILocation(line: 1007, column: 7, scope: !7609)
!7743 = !DILocation(line: 1007, column: 15, scope: !7609)
!7744 = !DILocation(line: 1007, column: 2, scope: !7609)
!7745 = !DILocation(line: 1007, column: 30, scope: !7609)
!7746 = !DILocation(line: 1008, column: 32, scope: !7609)
!7747 = !DILocation(line: 1008, column: 7, scope: !7609)
!7748 = !DILocation(line: 1008, column: 15, scope: !7609)
!7749 = !DILocation(line: 1008, column: 2, scope: !7609)
!7750 = !DILocation(line: 1008, column: 30, scope: !7609)
!7751 = !DILocation(line: 1009, column: 32, scope: !7609)
!7752 = !DILocation(line: 1009, column: 7, scope: !7609)
!7753 = !DILocation(line: 1009, column: 15, scope: !7609)
!7754 = !DILocation(line: 1009, column: 2, scope: !7609)
!7755 = !DILocation(line: 1009, column: 30, scope: !7609)
!7756 = !DILocation(line: 1011, column: 11, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1011, column: 6)
!7758 = !DILocation(line: 1011, column: 6, scope: !7757)
!7759 = !DILocation(line: 1011, column: 22, scope: !7757)
!7760 = !DILocation(line: 1011, column: 6, scope: !7609)
!7761 = !DILocation(line: 1011, column: 59, scope: !7757)
!7762 = !DILocation(line: 1011, column: 68, scope: !7757)
!7763 = !DILocation(line: 1011, column: 71, scope: !7757)
!7764 = !DILocation(line: 1011, column: 74, scope: !7757)
!7765 = !DILocation(line: 1011, column: 49, scope: !7757)
!7766 = !DILocation(line: 1011, column: 36, scope: !7757)
!7767 = !DILocation(line: 1011, column: 31, scope: !7757)
!7768 = !DILocation(line: 1011, column: 47, scope: !7757)
!7769 = !DILocation(line: 1012, column: 11, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1012, column: 6)
!7771 = !DILocation(line: 1012, column: 6, scope: !7770)
!7772 = !DILocation(line: 1012, column: 22, scope: !7770)
!7773 = !DILocation(line: 1012, column: 6, scope: !7609)
!7774 = !DILocation(line: 1012, column: 59, scope: !7770)
!7775 = !DILocation(line: 1012, column: 68, scope: !7770)
!7776 = !DILocation(line: 1012, column: 71, scope: !7770)
!7777 = !DILocation(line: 1012, column: 74, scope: !7770)
!7778 = !DILocation(line: 1012, column: 76, scope: !7770)
!7779 = !DILocation(line: 1012, column: 49, scope: !7770)
!7780 = !DILocation(line: 1012, column: 36, scope: !7770)
!7781 = !DILocation(line: 1012, column: 31, scope: !7770)
!7782 = !DILocation(line: 1012, column: 47, scope: !7770)
!7783 = !DILocation(line: 1013, column: 11, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1013, column: 6)
!7785 = !DILocation(line: 1013, column: 6, scope: !7784)
!7786 = !DILocation(line: 1013, column: 22, scope: !7784)
!7787 = !DILocation(line: 1013, column: 6, scope: !7609)
!7788 = !DILocation(line: 1013, column: 59, scope: !7784)
!7789 = !DILocation(line: 1013, column: 68, scope: !7784)
!7790 = !DILocation(line: 1013, column: 71, scope: !7784)
!7791 = !DILocation(line: 1013, column: 73, scope: !7784)
!7792 = !DILocation(line: 1013, column: 78, scope: !7784)
!7793 = !DILocation(line: 1013, column: 49, scope: !7784)
!7794 = !DILocation(line: 1013, column: 36, scope: !7784)
!7795 = !DILocation(line: 1013, column: 31, scope: !7784)
!7796 = !DILocation(line: 1013, column: 47, scope: !7784)
!7797 = !DILocation(line: 1014, column: 11, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1014, column: 6)
!7799 = !DILocation(line: 1014, column: 6, scope: !7798)
!7800 = !DILocation(line: 1014, column: 22, scope: !7798)
!7801 = !DILocation(line: 1014, column: 6, scope: !7609)
!7802 = !DILocation(line: 1014, column: 59, scope: !7798)
!7803 = !DILocation(line: 1014, column: 68, scope: !7798)
!7804 = !DILocation(line: 1014, column: 71, scope: !7798)
!7805 = !DILocation(line: 1014, column: 73, scope: !7798)
!7806 = !DILocation(line: 1014, column: 78, scope: !7798)
!7807 = !DILocation(line: 1014, column: 80, scope: !7798)
!7808 = !DILocation(line: 1014, column: 49, scope: !7798)
!7809 = !DILocation(line: 1014, column: 36, scope: !7798)
!7810 = !DILocation(line: 1014, column: 31, scope: !7798)
!7811 = !DILocation(line: 1014, column: 47, scope: !7798)
!7812 = !DILocation(line: 1015, column: 11, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1015, column: 6)
!7814 = !DILocation(line: 1015, column: 6, scope: !7813)
!7815 = !DILocation(line: 1015, column: 22, scope: !7813)
!7816 = !DILocation(line: 1015, column: 6, scope: !7609)
!7817 = !DILocation(line: 1015, column: 59, scope: !7813)
!7818 = !DILocation(line: 1015, column: 68, scope: !7813)
!7819 = !DILocation(line: 1015, column: 70, scope: !7813)
!7820 = !DILocation(line: 1015, column: 75, scope: !7813)
!7821 = !DILocation(line: 1015, column: 78, scope: !7813)
!7822 = !DILocation(line: 1015, column: 49, scope: !7813)
!7823 = !DILocation(line: 1015, column: 36, scope: !7813)
!7824 = !DILocation(line: 1015, column: 31, scope: !7813)
!7825 = !DILocation(line: 1015, column: 47, scope: !7813)
!7826 = !DILocation(line: 1016, column: 11, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1016, column: 6)
!7828 = !DILocation(line: 1016, column: 6, scope: !7827)
!7829 = !DILocation(line: 1016, column: 22, scope: !7827)
!7830 = !DILocation(line: 1016, column: 6, scope: !7609)
!7831 = !DILocation(line: 1016, column: 59, scope: !7827)
!7832 = !DILocation(line: 1016, column: 68, scope: !7827)
!7833 = !DILocation(line: 1016, column: 70, scope: !7827)
!7834 = !DILocation(line: 1016, column: 75, scope: !7827)
!7835 = !DILocation(line: 1016, column: 78, scope: !7827)
!7836 = !DILocation(line: 1016, column: 80, scope: !7827)
!7837 = !DILocation(line: 1016, column: 49, scope: !7827)
!7838 = !DILocation(line: 1016, column: 36, scope: !7827)
!7839 = !DILocation(line: 1016, column: 31, scope: !7827)
!7840 = !DILocation(line: 1016, column: 47, scope: !7827)
!7841 = !DILocation(line: 1017, column: 11, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1017, column: 6)
!7843 = !DILocation(line: 1017, column: 6, scope: !7842)
!7844 = !DILocation(line: 1017, column: 22, scope: !7842)
!7845 = !DILocation(line: 1017, column: 6, scope: !7609)
!7846 = !DILocation(line: 1017, column: 59, scope: !7842)
!7847 = !DILocation(line: 1017, column: 68, scope: !7842)
!7848 = !DILocation(line: 1017, column: 70, scope: !7842)
!7849 = !DILocation(line: 1017, column: 75, scope: !7842)
!7850 = !DILocation(line: 1017, column: 77, scope: !7842)
!7851 = !DILocation(line: 1017, column: 82, scope: !7842)
!7852 = !DILocation(line: 1017, column: 49, scope: !7842)
!7853 = !DILocation(line: 1017, column: 36, scope: !7842)
!7854 = !DILocation(line: 1017, column: 31, scope: !7842)
!7855 = !DILocation(line: 1017, column: 47, scope: !7842)
!7856 = !DILocation(line: 1018, column: 11, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1018, column: 6)
!7858 = !DILocation(line: 1018, column: 6, scope: !7857)
!7859 = !DILocation(line: 1018, column: 22, scope: !7857)
!7860 = !DILocation(line: 1018, column: 6, scope: !7609)
!7861 = !DILocation(line: 1018, column: 59, scope: !7857)
!7862 = !DILocation(line: 1018, column: 68, scope: !7857)
!7863 = !DILocation(line: 1018, column: 70, scope: !7857)
!7864 = !DILocation(line: 1018, column: 75, scope: !7857)
!7865 = !DILocation(line: 1018, column: 77, scope: !7857)
!7866 = !DILocation(line: 1018, column: 82, scope: !7857)
!7867 = !DILocation(line: 1018, column: 84, scope: !7857)
!7868 = !DILocation(line: 1018, column: 49, scope: !7857)
!7869 = !DILocation(line: 1018, column: 36, scope: !7857)
!7870 = !DILocation(line: 1018, column: 31, scope: !7857)
!7871 = !DILocation(line: 1018, column: 47, scope: !7857)
!7872 = !DILocation(line: 1020, column: 2, scope: !7609)
!7873 = !DILocation(line: 1020, column: 11, scope: !7609)
!7874 = !DILocation(line: 1020, column: 18, scope: !7609)
!7875 = !DILocation(line: 1020, column: 25, scope: !7609)
!7876 = !DILocation(line: 1021, column: 1, scope: !7609)
!7877 = distinct !DISubprogram(name: "nextcwedge", scope: !3, file: !3, line: 1061, type: !7878, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!7878 = !DISubroutineType(types: !7879)
!7879 = !{!78, !78, !78}
!7880 = !DILocalVariable(name: "edge", arg: 1, scope: !7877, file: !3, line: 1061, type: !78)
!7881 = !DILocation(line: 1061, column: 27, scope: !7877)
!7882 = !DILocalVariable(name: "face", arg: 2, scope: !7877, file: !3, line: 1061, type: !78)
!7883 = !DILocation(line: 1061, column: 37, scope: !7877)
!7884 = !DILocation(line: 1063, column: 10, scope: !7877)
!7885 = !DILocation(line: 1063, column: 2, scope: !7877)
!7886 = !DILocation(line: 1065, column: 12, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 1063, column: 16)
!7888 = !DILocation(line: 1065, column: 17, scope: !7887)
!7889 = !DILocation(line: 1065, column: 11, scope: !7887)
!7890 = !DILocation(line: 1065, column: 4, scope: !7887)
!7891 = !DILocation(line: 1067, column: 12, scope: !7887)
!7892 = !DILocation(line: 1067, column: 17, scope: !7887)
!7893 = !DILocation(line: 1067, column: 11, scope: !7887)
!7894 = !DILocation(line: 1067, column: 4, scope: !7887)
!7895 = !DILocation(line: 1069, column: 12, scope: !7887)
!7896 = !DILocation(line: 1069, column: 17, scope: !7887)
!7897 = !DILocation(line: 1069, column: 11, scope: !7887)
!7898 = !DILocation(line: 1069, column: 4, scope: !7887)
!7899 = !DILocation(line: 1071, column: 12, scope: !7887)
!7900 = !DILocation(line: 1071, column: 17, scope: !7887)
!7901 = !DILocation(line: 1071, column: 11, scope: !7887)
!7902 = !DILocation(line: 1071, column: 4, scope: !7887)
!7903 = !DILocation(line: 1073, column: 12, scope: !7887)
!7904 = !DILocation(line: 1073, column: 17, scope: !7887)
!7905 = !DILocation(line: 1073, column: 11, scope: !7887)
!7906 = !DILocation(line: 1073, column: 4, scope: !7887)
!7907 = !DILocation(line: 1075, column: 12, scope: !7887)
!7908 = !DILocation(line: 1075, column: 17, scope: !7887)
!7909 = !DILocation(line: 1075, column: 11, scope: !7887)
!7910 = !DILocation(line: 1075, column: 4, scope: !7887)
!7911 = !DILocation(line: 1077, column: 12, scope: !7887)
!7912 = !DILocation(line: 1077, column: 17, scope: !7887)
!7913 = !DILocation(line: 1077, column: 11, scope: !7887)
!7914 = !DILocation(line: 1077, column: 4, scope: !7887)
!7915 = !DILocation(line: 1079, column: 12, scope: !7887)
!7916 = !DILocation(line: 1079, column: 17, scope: !7887)
!7917 = !DILocation(line: 1079, column: 11, scope: !7887)
!7918 = !DILocation(line: 1079, column: 4, scope: !7887)
!7919 = !DILocation(line: 1081, column: 12, scope: !7887)
!7920 = !DILocation(line: 1081, column: 17, scope: !7887)
!7921 = !DILocation(line: 1081, column: 11, scope: !7887)
!7922 = !DILocation(line: 1081, column: 4, scope: !7887)
!7923 = !DILocation(line: 1083, column: 12, scope: !7887)
!7924 = !DILocation(line: 1083, column: 17, scope: !7887)
!7925 = !DILocation(line: 1083, column: 11, scope: !7887)
!7926 = !DILocation(line: 1083, column: 4, scope: !7887)
!7927 = !DILocation(line: 1085, column: 12, scope: !7887)
!7928 = !DILocation(line: 1085, column: 17, scope: !7887)
!7929 = !DILocation(line: 1085, column: 11, scope: !7887)
!7930 = !DILocation(line: 1085, column: 4, scope: !7887)
!7931 = !DILocation(line: 1087, column: 12, scope: !7887)
!7932 = !DILocation(line: 1087, column: 17, scope: !7887)
!7933 = !DILocation(line: 1087, column: 11, scope: !7887)
!7934 = !DILocation(line: 1087, column: 4, scope: !7887)
!7935 = !DILocation(line: 1089, column: 2, scope: !7877)
!7936 = !DILocation(line: 1090, column: 1, scope: !7877)
!7937 = distinct !DISubprogram(name: "otherface", scope: !3, file: !3, line: 1095, type: !7878, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!7938 = !DILocalVariable(name: "edge", arg: 1, scope: !7937, file: !3, line: 1095, type: !78)
!7939 = !DILocation(line: 1095, column: 26, scope: !7937)
!7940 = !DILocalVariable(name: "face", arg: 2, scope: !7937, file: !3, line: 1095, type: !78)
!7941 = !DILocation(line: 1095, column: 36, scope: !7937)
!7942 = !DILocalVariable(name: "other", scope: !7937, file: !3, line: 1097, type: !78)
!7943 = !DILocation(line: 1097, column: 6, scope: !7937)
!7944 = !DILocation(line: 1097, column: 23, scope: !7937)
!7945 = !DILocation(line: 1097, column: 14, scope: !7937)
!7946 = !DILocation(line: 1098, column: 9, scope: !7937)
!7947 = !DILocation(line: 1098, column: 17, scope: !7937)
!7948 = !DILocation(line: 1098, column: 14, scope: !7937)
!7949 = !DILocation(line: 1098, column: 35, scope: !7937)
!7950 = !DILocation(line: 1098, column: 25, scope: !7937)
!7951 = !DILocation(line: 1098, column: 43, scope: !7937)
!7952 = !DILocation(line: 1098, column: 2, scope: !7937)
!7953 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !4832, file: !4832, line: 727, type: !7954, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{!141, !4835, !4835}
!7956 = !DILocalVariable(name: "a", arg: 1, scope: !7953, file: !4832, line: 727, type: !4835)
!7957 = !DILocation(line: 727, column: 44, scope: !7953)
!7958 = !DILocalVariable(name: "b", arg: 2, scope: !7953, file: !4832, line: 727, type: !4835)
!7959 = !DILocation(line: 727, column: 62, scope: !7953)
!7960 = !DILocalVariable(name: "d", scope: !7953, file: !4832, line: 729, type: !172)
!7961 = !DILocation(line: 729, column: 8, scope: !7953)
!7962 = !DILocation(line: 731, column: 14, scope: !7953)
!7963 = !DILocation(line: 731, column: 17, scope: !7953)
!7964 = !DILocation(line: 731, column: 20, scope: !7953)
!7965 = !DILocation(line: 731, column: 2, scope: !7953)
!7966 = !DILocation(line: 732, column: 18, scope: !7953)
!7967 = !DILocation(line: 732, column: 21, scope: !7953)
!7968 = !DILocation(line: 732, column: 9, scope: !7953)
!7969 = !DILocation(line: 732, column: 2, scope: !7953)
!7970 = distinct !DISubprogram(name: "max_fff", scope: !7971, file: !7971, line: 224, type: !7972, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!7971 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7972 = !DISubroutineType(types: !7973)
!7973 = !{!141, !141, !141, !141}
!7974 = !DILocalVariable(name: "a", arg: 1, scope: !7970, file: !7971, line: 224, type: !141)
!7975 = !DILocation(line: 224, column: 29, scope: !7970)
!7976 = !DILocalVariable(name: "b", arg: 2, scope: !7970, file: !7971, line: 224, type: !141)
!7977 = !DILocation(line: 224, column: 38, scope: !7970)
!7978 = !DILocalVariable(name: "c", arg: 3, scope: !7970, file: !7971, line: 224, type: !141)
!7979 = !DILocation(line: 224, column: 47, scope: !7970)
!7980 = !DILocation(line: 226, column: 23, scope: !7970)
!7981 = !DILocation(line: 226, column: 26, scope: !7970)
!7982 = !DILocation(line: 226, column: 16, scope: !7970)
!7983 = !DILocation(line: 226, column: 30, scope: !7970)
!7984 = !DILocation(line: 226, column: 9, scope: !7970)
!7985 = !DILocation(line: 226, column: 2, scope: !7970)
!7986 = distinct !DISubprogram(name: "add_cube", scope: !3, file: !3, line: 1449, type: !7987, scopeLine: 1450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!7987 = !DISubroutineType(types: !7988)
!7988 = !{null, !3191, !78, !78, !78, !78}
!7989 = !DILocalVariable(name: "process", arg: 1, scope: !7986, file: !3, line: 1449, type: !3191)
!7990 = !DILocation(line: 1449, column: 31, scope: !7986)
!7991 = !DILocalVariable(name: "i", arg: 2, scope: !7986, file: !3, line: 1449, type: !78)
!7992 = !DILocation(line: 1449, column: 44, scope: !7986)
!7993 = !DILocalVariable(name: "j", arg: 3, scope: !7986, file: !3, line: 1449, type: !78)
!7994 = !DILocation(line: 1449, column: 51, scope: !7986)
!7995 = !DILocalVariable(name: "k", arg: 4, scope: !7986, file: !3, line: 1449, type: !78)
!7996 = !DILocation(line: 1449, column: 58, scope: !7986)
!7997 = !DILocalVariable(name: "count", arg: 5, scope: !7986, file: !3, line: 1449, type: !78)
!7998 = !DILocation(line: 1449, column: 65, scope: !7986)
!7999 = !DILocalVariable(name: "ncube", scope: !7986, file: !3, line: 1451, type: !1659)
!8000 = !DILocation(line: 1451, column: 9, scope: !7986)
!8001 = !DILocalVariable(name: "n", scope: !7986, file: !3, line: 1452, type: !78)
!8002 = !DILocation(line: 1452, column: 6, scope: !7986)
!8003 = !DILocalVariable(name: "a", scope: !7986, file: !3, line: 1453, type: !78)
!8004 = !DILocation(line: 1453, column: 6, scope: !7986)
!8005 = !DILocalVariable(name: "b", scope: !7986, file: !3, line: 1453, type: !78)
!8006 = !DILocation(line: 1453, column: 9, scope: !7986)
!8007 = !DILocalVariable(name: "c", scope: !7986, file: !3, line: 1453, type: !78)
!8008 = !DILocation(line: 1453, column: 12, scope: !7986)
!8009 = !DILocation(line: 1457, column: 11, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 1457, column: 2)
!8011 = !DILocation(line: 1457, column: 13, scope: !8010)
!8012 = !DILocation(line: 1457, column: 9, scope: !8010)
!8013 = !DILocation(line: 1457, column: 7, scope: !8010)
!8014 = !DILocation(line: 1457, column: 18, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 1457, column: 2)
!8016 = !DILocation(line: 1457, column: 22, scope: !8015)
!8017 = !DILocation(line: 1457, column: 26, scope: !8015)
!8018 = !DILocation(line: 1457, column: 24, scope: !8015)
!8019 = !DILocation(line: 1457, column: 20, scope: !8015)
!8020 = !DILocation(line: 1457, column: 2, scope: !8010)
!8021 = !DILocation(line: 1458, column: 12, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 1458, column: 3)
!8023 = !DILocation(line: 1458, column: 14, scope: !8022)
!8024 = !DILocation(line: 1458, column: 10, scope: !8022)
!8025 = !DILocation(line: 1458, column: 8, scope: !8022)
!8026 = !DILocation(line: 1458, column: 19, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8022, file: !3, line: 1458, column: 3)
!8028 = !DILocation(line: 1458, column: 23, scope: !8027)
!8029 = !DILocation(line: 1458, column: 27, scope: !8027)
!8030 = !DILocation(line: 1458, column: 25, scope: !8027)
!8031 = !DILocation(line: 1458, column: 21, scope: !8027)
!8032 = !DILocation(line: 1458, column: 3, scope: !8022)
!8033 = !DILocation(line: 1459, column: 13, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 1459, column: 4)
!8035 = !DILocation(line: 1459, column: 15, scope: !8034)
!8036 = !DILocation(line: 1459, column: 11, scope: !8034)
!8037 = !DILocation(line: 1459, column: 9, scope: !8034)
!8038 = !DILocation(line: 1459, column: 20, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 1459, column: 4)
!8040 = !DILocation(line: 1459, column: 24, scope: !8039)
!8041 = !DILocation(line: 1459, column: 28, scope: !8039)
!8042 = !DILocation(line: 1459, column: 26, scope: !8039)
!8043 = !DILocation(line: 1459, column: 22, scope: !8039)
!8044 = !DILocation(line: 1459, column: 4, scope: !8034)
!8045 = !DILocation(line: 1461, column: 19, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 1461, column: 9)
!8047 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 1459, column: 40)
!8048 = !DILocation(line: 1461, column: 28, scope: !8046)
!8049 = !DILocation(line: 1461, column: 37, scope: !8046)
!8050 = !DILocation(line: 1461, column: 46, scope: !8046)
!8051 = !DILocation(line: 1461, column: 49, scope: !8046)
!8052 = !DILocation(line: 1461, column: 52, scope: !8046)
!8053 = !DILocation(line: 1461, column: 9, scope: !8046)
!8054 = !DILocation(line: 1461, column: 55, scope: !8046)
!8055 = !DILocation(line: 1461, column: 9, scope: !8047)
!8056 = !DILocation(line: 1463, column: 40, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1461, column: 61)
!8058 = !DILocation(line: 1463, column: 24, scope: !8057)
!8059 = !DILocation(line: 1463, column: 14, scope: !8057)
!8060 = !DILocation(line: 1463, column: 12, scope: !8057)
!8061 = !DILocation(line: 1464, column: 20, scope: !8057)
!8062 = !DILocation(line: 1464, column: 29, scope: !8057)
!8063 = !DILocation(line: 1464, column: 6, scope: !8057)
!8064 = !DILocation(line: 1464, column: 13, scope: !8057)
!8065 = !DILocation(line: 1464, column: 18, scope: !8057)
!8066 = !DILocation(line: 1465, column: 23, scope: !8057)
!8067 = !DILocation(line: 1465, column: 6, scope: !8057)
!8068 = !DILocation(line: 1465, column: 15, scope: !8057)
!8069 = !DILocation(line: 1465, column: 21, scope: !8057)
!8070 = !DILocation(line: 1467, column: 22, scope: !8057)
!8071 = !DILocation(line: 1467, column: 6, scope: !8057)
!8072 = !DILocation(line: 1467, column: 13, scope: !8057)
!8073 = !DILocation(line: 1467, column: 18, scope: !8057)
!8074 = !DILocation(line: 1467, column: 20, scope: !8057)
!8075 = !DILocation(line: 1468, column: 22, scope: !8057)
!8076 = !DILocation(line: 1468, column: 6, scope: !8057)
!8077 = !DILocation(line: 1468, column: 13, scope: !8057)
!8078 = !DILocation(line: 1468, column: 18, scope: !8057)
!8079 = !DILocation(line: 1468, column: 20, scope: !8057)
!8080 = !DILocation(line: 1469, column: 22, scope: !8057)
!8081 = !DILocation(line: 1469, column: 6, scope: !8057)
!8082 = !DILocation(line: 1469, column: 13, scope: !8057)
!8083 = !DILocation(line: 1469, column: 18, scope: !8057)
!8084 = !DILocation(line: 1469, column: 20, scope: !8057)
!8085 = !DILocation(line: 1472, column: 13, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 1472, column: 6)
!8087 = !DILocation(line: 1472, column: 11, scope: !8086)
!8088 = !DILocation(line: 1472, column: 18, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 1472, column: 6)
!8090 = !DILocation(line: 1472, column: 20, scope: !8089)
!8091 = !DILocation(line: 1472, column: 6, scope: !8086)
!8092 = !DILocation(line: 1473, column: 42, scope: !8089)
!8093 = !DILocation(line: 1473, column: 51, scope: !8089)
!8094 = !DILocation(line: 1473, column: 55, scope: !8089)
!8095 = !DILocation(line: 1473, column: 53, scope: !8089)
!8096 = !DILocation(line: 1473, column: 69, scope: !8089)
!8097 = !DILocation(line: 1473, column: 73, scope: !8089)
!8098 = !DILocation(line: 1473, column: 71, scope: !8089)
!8099 = !DILocation(line: 1473, column: 87, scope: !8089)
!8100 = !DILocation(line: 1473, column: 91, scope: !8089)
!8101 = !DILocation(line: 1473, column: 89, scope: !8089)
!8102 = !DILocation(line: 1473, column: 32, scope: !8089)
!8103 = !DILocation(line: 1473, column: 7, scope: !8089)
!8104 = !DILocation(line: 1473, column: 14, scope: !8089)
!8105 = !DILocation(line: 1473, column: 19, scope: !8089)
!8106 = !DILocation(line: 1473, column: 27, scope: !8089)
!8107 = !DILocation(line: 1473, column: 30, scope: !8089)
!8108 = !DILocation(line: 1472, column: 26, scope: !8089)
!8109 = !DILocation(line: 1472, column: 6, scope: !8089)
!8110 = distinct !{!8110, !8091, !8111}
!8111 = !DILocation(line: 1473, column: 103, scope: !8086)
!8112 = !DILocation(line: 1474, column: 5, scope: !8057)
!8113 = !DILocation(line: 1475, column: 4, scope: !8047)
!8114 = !DILocation(line: 1459, column: 36, scope: !8039)
!8115 = !DILocation(line: 1459, column: 4, scope: !8039)
!8116 = distinct !{!8116, !8044, !8117}
!8117 = !DILocation(line: 1475, column: 4, scope: !8034)
!8118 = !DILocation(line: 1458, column: 35, scope: !8027)
!8119 = !DILocation(line: 1458, column: 3, scope: !8027)
!8120 = distinct !{!8120, !8032, !8121}
!8121 = !DILocation(line: 1475, column: 4, scope: !8022)
!8122 = !DILocation(line: 1457, column: 34, scope: !8015)
!8123 = !DILocation(line: 1457, column: 2, scope: !8015)
!8124 = distinct !{!8124, !8020, !8125}
!8125 = !DILocation(line: 1475, column: 4, scope: !8010)
!8126 = !DILocation(line: 1476, column: 1, scope: !7986)
!8127 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !4832, file: !4832, line: 357, type: !8128, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8128 = !DISubroutineType(types: !8129)
!8129 = !{null, !1461, !4835, !4835}
!8130 = !DILocalVariable(name: "r", arg: 1, scope: !8127, file: !4832, line: 357, type: !1461)
!8131 = !DILocation(line: 357, column: 32, scope: !8127)
!8132 = !DILocalVariable(name: "a", arg: 2, scope: !8127, file: !4832, line: 357, type: !4835)
!8133 = !DILocation(line: 357, column: 50, scope: !8127)
!8134 = !DILocalVariable(name: "b", arg: 3, scope: !8127, file: !4832, line: 357, type: !4835)
!8135 = !DILocation(line: 357, column: 68, scope: !8127)
!8136 = !DILocation(line: 359, column: 9, scope: !8127)
!8137 = !DILocation(line: 359, column: 16, scope: !8127)
!8138 = !DILocation(line: 359, column: 14, scope: !8127)
!8139 = !DILocation(line: 359, column: 2, scope: !8127)
!8140 = !DILocation(line: 359, column: 7, scope: !8127)
!8141 = !DILocation(line: 360, column: 9, scope: !8127)
!8142 = !DILocation(line: 360, column: 16, scope: !8127)
!8143 = !DILocation(line: 360, column: 14, scope: !8127)
!8144 = !DILocation(line: 360, column: 2, scope: !8127)
!8145 = !DILocation(line: 360, column: 7, scope: !8127)
!8146 = !DILocation(line: 361, column: 9, scope: !8127)
!8147 = !DILocation(line: 361, column: 16, scope: !8127)
!8148 = !DILocation(line: 361, column: 14, scope: !8127)
!8149 = !DILocation(line: 361, column: 2, scope: !8127)
!8150 = !DILocation(line: 361, column: 7, scope: !8127)
!8151 = !DILocation(line: 362, column: 1, scope: !8127)
!8152 = distinct !DISubprogram(name: "dot_v3v3", scope: !4832, file: !4832, line: 619, type: !7954, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8153 = !DILocalVariable(name: "a", arg: 1, scope: !8152, file: !4832, line: 619, type: !4835)
!8154 = !DILocation(line: 619, column: 36, scope: !8152)
!8155 = !DILocalVariable(name: "b", arg: 2, scope: !8152, file: !4832, line: 619, type: !4835)
!8156 = !DILocation(line: 619, column: 54, scope: !8152)
!8157 = !DILocation(line: 621, column: 9, scope: !8152)
!8158 = !DILocation(line: 621, column: 16, scope: !8152)
!8159 = !DILocation(line: 621, column: 14, scope: !8152)
!8160 = !DILocation(line: 621, column: 23, scope: !8152)
!8161 = !DILocation(line: 621, column: 30, scope: !8152)
!8162 = !DILocation(line: 621, column: 28, scope: !8152)
!8163 = !DILocation(line: 621, column: 21, scope: !8152)
!8164 = !DILocation(line: 621, column: 37, scope: !8152)
!8165 = !DILocation(line: 621, column: 44, scope: !8152)
!8166 = !DILocation(line: 621, column: 42, scope: !8152)
!8167 = !DILocation(line: 621, column: 35, scope: !8152)
!8168 = !DILocation(line: 621, column: 2, scope: !8152)
!8169 = distinct !DISubprogram(name: "max_ff", scope: !7971, file: !7971, line: 206, type: !8170, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8170 = !DISubroutineType(types: !8171)
!8171 = !{!141, !141, !141}
!8172 = !DILocalVariable(name: "a", arg: 1, scope: !8169, file: !7971, line: 206, type: !141)
!8173 = !DILocation(line: 206, column: 28, scope: !8169)
!8174 = !DILocalVariable(name: "b", arg: 2, scope: !8169, file: !7971, line: 206, type: !141)
!8175 = !DILocation(line: 206, column: 37, scope: !8169)
!8176 = !DILocation(line: 208, column: 10, scope: !8169)
!8177 = !DILocation(line: 208, column: 14, scope: !8169)
!8178 = !DILocation(line: 208, column: 12, scope: !8169)
!8179 = !DILocation(line: 208, column: 9, scope: !8169)
!8180 = !DILocation(line: 208, column: 19, scope: !8169)
!8181 = !DILocation(line: 208, column: 23, scope: !8169)
!8182 = !DILocation(line: 208, column: 2, scope: !8169)
!8183 = distinct !DISubprogram(name: "setcenter", scope: !3, file: !3, line: 1175, type: !8184, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{!78, !3191, !2888, !2142, !2142, !2142}
!8186 = !DILocalVariable(name: "process", arg: 1, scope: !8183, file: !3, line: 1175, type: !3191)
!8187 = !DILocation(line: 1175, column: 31, scope: !8183)
!8188 = !DILocalVariable(name: "table", arg: 2, scope: !8183, file: !3, line: 1175, type: !2888)
!8189 = !DILocation(line: 1175, column: 52, scope: !8183)
!8190 = !DILocalVariable(name: "i", arg: 3, scope: !8183, file: !3, line: 1175, type: !2142)
!8191 = !DILocation(line: 1175, column: 71, scope: !8183)
!8192 = !DILocalVariable(name: "j", arg: 4, scope: !8183, file: !3, line: 1175, type: !2142)
!8193 = !DILocation(line: 1175, column: 84, scope: !8183)
!8194 = !DILocalVariable(name: "k", arg: 5, scope: !8183, file: !3, line: 1175, type: !2142)
!8195 = !DILocation(line: 1175, column: 97, scope: !8183)
!8196 = !DILocalVariable(name: "index", scope: !8183, file: !3, line: 1177, type: !78)
!8197 = !DILocation(line: 1177, column: 6, scope: !8183)
!8198 = !DILocalVariable(name: "newc", scope: !8183, file: !3, line: 1178, type: !1685)
!8199 = !DILocation(line: 1178, column: 14, scope: !8183)
!8200 = !DILocalVariable(name: "l", scope: !8183, file: !3, line: 1178, type: !1685)
!8201 = !DILocation(line: 1178, column: 21, scope: !8183)
!8202 = !DILocalVariable(name: "q", scope: !8183, file: !3, line: 1178, type: !1685)
!8203 = !DILocation(line: 1178, column: 25, scope: !8183)
!8204 = !DILocation(line: 1180, column: 10, scope: !8183)
!8205 = !DILocation(line: 1180, column: 8, scope: !8183)
!8206 = !DILocation(line: 1181, column: 6, scope: !8183)
!8207 = !DILocation(line: 1181, column: 12, scope: !8183)
!8208 = !DILocation(line: 1181, column: 4, scope: !8183)
!8209 = !DILocation(line: 1183, column: 11, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 1183, column: 2)
!8211 = !DILocation(line: 1183, column: 9, scope: !8210)
!8212 = !DILocation(line: 1183, column: 7, scope: !8210)
!8213 = !DILocation(line: 1183, column: 14, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1183, column: 2)
!8215 = !DILocation(line: 1183, column: 16, scope: !8214)
!8216 = !DILocation(line: 1183, column: 2, scope: !8210)
!8217 = !DILocation(line: 1184, column: 7, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 1184, column: 7)
!8219 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1183, column: 38)
!8220 = !DILocation(line: 1184, column: 10, scope: !8218)
!8221 = !DILocation(line: 1184, column: 15, scope: !8218)
!8222 = !DILocation(line: 1184, column: 12, scope: !8218)
!8223 = !DILocation(line: 1184, column: 17, scope: !8218)
!8224 = !DILocation(line: 1184, column: 20, scope: !8218)
!8225 = !DILocation(line: 1184, column: 23, scope: !8218)
!8226 = !DILocation(line: 1184, column: 28, scope: !8218)
!8227 = !DILocation(line: 1184, column: 25, scope: !8218)
!8228 = !DILocation(line: 1184, column: 30, scope: !8218)
!8229 = !DILocation(line: 1184, column: 33, scope: !8218)
!8230 = !DILocation(line: 1184, column: 36, scope: !8218)
!8231 = !DILocation(line: 1184, column: 41, scope: !8218)
!8232 = !DILocation(line: 1184, column: 38, scope: !8218)
!8233 = !DILocation(line: 1184, column: 7, scope: !8219)
!8234 = !DILocation(line: 1184, column: 44, scope: !8218)
!8235 = !DILocation(line: 1185, column: 2, scope: !8219)
!8236 = !DILocation(line: 1183, column: 29, scope: !8214)
!8237 = !DILocation(line: 1183, column: 32, scope: !8214)
!8238 = !DILocation(line: 1183, column: 27, scope: !8214)
!8239 = !DILocation(line: 1183, column: 2, scope: !8214)
!8240 = distinct !{!8240, !8216, !8241}
!8241 = !DILocation(line: 1185, column: 2, scope: !8210)
!8242 = !DILocation(line: 1187, column: 40, scope: !8183)
!8243 = !DILocation(line: 1187, column: 24, scope: !8183)
!8244 = !DILocation(line: 1187, column: 9, scope: !8183)
!8245 = !DILocation(line: 1187, column: 7, scope: !8183)
!8246 = !DILocation(line: 1188, column: 12, scope: !8183)
!8247 = !DILocation(line: 1188, column: 2, scope: !8183)
!8248 = !DILocation(line: 1188, column: 8, scope: !8183)
!8249 = !DILocation(line: 1188, column: 10, scope: !8183)
!8250 = !DILocation(line: 1189, column: 12, scope: !8183)
!8251 = !DILocation(line: 1189, column: 2, scope: !8183)
!8252 = !DILocation(line: 1189, column: 8, scope: !8183)
!8253 = !DILocation(line: 1189, column: 10, scope: !8183)
!8254 = !DILocation(line: 1190, column: 12, scope: !8183)
!8255 = !DILocation(line: 1190, column: 2, scope: !8183)
!8256 = !DILocation(line: 1190, column: 8, scope: !8183)
!8257 = !DILocation(line: 1190, column: 10, scope: !8183)
!8258 = !DILocation(line: 1191, column: 15, scope: !8183)
!8259 = !DILocation(line: 1191, column: 2, scope: !8183)
!8260 = !DILocation(line: 1191, column: 8, scope: !8183)
!8261 = !DILocation(line: 1191, column: 13, scope: !8183)
!8262 = !DILocation(line: 1192, column: 17, scope: !8183)
!8263 = !DILocation(line: 1192, column: 2, scope: !8183)
!8264 = !DILocation(line: 1192, column: 8, scope: !8183)
!8265 = !DILocation(line: 1192, column: 15, scope: !8183)
!8266 = !DILocation(line: 1194, column: 2, scope: !8183)
!8267 = !DILocation(line: 1195, column: 1, scope: !8183)
!8268 = distinct !DISubprogram(name: "setcorner", scope: !3, file: !3, line: 1026, type: !8269, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8269 = !DISubroutineType(types: !8270)
!8270 = !{!1672, !3191, !78, !78, !78}
!8271 = !DILocalVariable(name: "process", arg: 1, scope: !8268, file: !3, line: 1026, type: !3191)
!8272 = !DILocation(line: 1026, column: 35, scope: !8268)
!8273 = !DILocalVariable(name: "i", arg: 2, scope: !8268, file: !3, line: 1026, type: !78)
!8274 = !DILocation(line: 1026, column: 48, scope: !8268)
!8275 = !DILocalVariable(name: "j", arg: 3, scope: !8268, file: !3, line: 1026, type: !78)
!8276 = !DILocation(line: 1026, column: 55, scope: !8268)
!8277 = !DILocalVariable(name: "k", arg: 4, scope: !8268, file: !3, line: 1026, type: !78)
!8278 = !DILocation(line: 1026, column: 62, scope: !8268)
!8279 = !DILocalVariable(name: "c", scope: !8268, file: !3, line: 1029, type: !1672)
!8280 = !DILocation(line: 1029, column: 10, scope: !8268)
!8281 = !DILocalVariable(name: "index", scope: !8268, file: !3, line: 1030, type: !78)
!8282 = !DILocation(line: 1030, column: 6, scope: !8268)
!8283 = !DILocation(line: 1033, column: 10, scope: !8268)
!8284 = !DILocation(line: 1033, column: 8, scope: !8268)
!8285 = !DILocation(line: 1034, column: 6, scope: !8268)
!8286 = !DILocation(line: 1034, column: 15, scope: !8268)
!8287 = !DILocation(line: 1034, column: 23, scope: !8268)
!8288 = !DILocation(line: 1034, column: 4, scope: !8268)
!8289 = !DILocation(line: 1036, column: 2, scope: !8268)
!8290 = !DILocation(line: 1036, column: 9, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 1036, column: 2)
!8292 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 1036, column: 2)
!8293 = !DILocation(line: 1036, column: 11, scope: !8291)
!8294 = !DILocation(line: 1036, column: 2, scope: !8292)
!8295 = !DILocation(line: 1037, column: 7, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 1037, column: 7)
!8297 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 1036, column: 33)
!8298 = !DILocation(line: 1037, column: 10, scope: !8296)
!8299 = !DILocation(line: 1037, column: 15, scope: !8296)
!8300 = !DILocation(line: 1037, column: 12, scope: !8296)
!8301 = !DILocation(line: 1037, column: 17, scope: !8296)
!8302 = !DILocation(line: 1037, column: 20, scope: !8296)
!8303 = !DILocation(line: 1037, column: 23, scope: !8296)
!8304 = !DILocation(line: 1037, column: 28, scope: !8296)
!8305 = !DILocation(line: 1037, column: 25, scope: !8296)
!8306 = !DILocation(line: 1037, column: 30, scope: !8296)
!8307 = !DILocation(line: 1037, column: 33, scope: !8296)
!8308 = !DILocation(line: 1037, column: 36, scope: !8296)
!8309 = !DILocation(line: 1037, column: 41, scope: !8296)
!8310 = !DILocation(line: 1037, column: 38, scope: !8296)
!8311 = !DILocation(line: 1037, column: 7, scope: !8297)
!8312 = !DILocation(line: 1038, column: 11, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 1037, column: 44)
!8314 = !DILocation(line: 1038, column: 4, scope: !8313)
!8315 = !DILocation(line: 1040, column: 2, scope: !8297)
!8316 = !DILocation(line: 1036, column: 24, scope: !8291)
!8317 = !DILocation(line: 1036, column: 27, scope: !8291)
!8318 = !DILocation(line: 1036, column: 22, scope: !8291)
!8319 = !DILocation(line: 1036, column: 2, scope: !8291)
!8320 = distinct !{!8320, !8294, !8321}
!8321 = !DILocation(line: 1040, column: 2, scope: !8292)
!8322 = !DILocation(line: 1042, column: 33, scope: !8268)
!8323 = !DILocation(line: 1042, column: 17, scope: !8268)
!8324 = !DILocation(line: 1042, column: 6, scope: !8268)
!8325 = !DILocation(line: 1042, column: 4, scope: !8268)
!8326 = !DILocation(line: 1044, column: 9, scope: !8268)
!8327 = !DILocation(line: 1044, column: 2, scope: !8268)
!8328 = !DILocation(line: 1044, column: 5, scope: !8268)
!8329 = !DILocation(line: 1044, column: 7, scope: !8268)
!8330 = !DILocation(line: 1045, column: 21, scope: !8268)
!8331 = !DILocation(line: 1045, column: 14, scope: !8268)
!8332 = !DILocation(line: 1045, column: 23, scope: !8268)
!8333 = !DILocation(line: 1045, column: 33, scope: !8268)
!8334 = !DILocation(line: 1045, column: 42, scope: !8268)
!8335 = !DILocation(line: 1045, column: 31, scope: !8268)
!8336 = !DILocation(line: 1045, column: 2, scope: !8268)
!8337 = !DILocation(line: 1045, column: 5, scope: !8268)
!8338 = !DILocation(line: 1045, column: 11, scope: !8268)
!8339 = !DILocation(line: 1046, column: 9, scope: !8268)
!8340 = !DILocation(line: 1046, column: 2, scope: !8268)
!8341 = !DILocation(line: 1046, column: 5, scope: !8268)
!8342 = !DILocation(line: 1046, column: 7, scope: !8268)
!8343 = !DILocation(line: 1047, column: 21, scope: !8268)
!8344 = !DILocation(line: 1047, column: 14, scope: !8268)
!8345 = !DILocation(line: 1047, column: 23, scope: !8268)
!8346 = !DILocation(line: 1047, column: 33, scope: !8268)
!8347 = !DILocation(line: 1047, column: 42, scope: !8268)
!8348 = !DILocation(line: 1047, column: 31, scope: !8268)
!8349 = !DILocation(line: 1047, column: 2, scope: !8268)
!8350 = !DILocation(line: 1047, column: 5, scope: !8268)
!8351 = !DILocation(line: 1047, column: 11, scope: !8268)
!8352 = !DILocation(line: 1048, column: 9, scope: !8268)
!8353 = !DILocation(line: 1048, column: 2, scope: !8268)
!8354 = !DILocation(line: 1048, column: 5, scope: !8268)
!8355 = !DILocation(line: 1048, column: 7, scope: !8268)
!8356 = !DILocation(line: 1049, column: 21, scope: !8268)
!8357 = !DILocation(line: 1049, column: 14, scope: !8268)
!8358 = !DILocation(line: 1049, column: 23, scope: !8268)
!8359 = !DILocation(line: 1049, column: 33, scope: !8268)
!8360 = !DILocation(line: 1049, column: 42, scope: !8268)
!8361 = !DILocation(line: 1049, column: 31, scope: !8268)
!8362 = !DILocation(line: 1049, column: 2, scope: !8268)
!8363 = !DILocation(line: 1049, column: 5, scope: !8268)
!8364 = !DILocation(line: 1049, column: 11, scope: !8268)
!8365 = !DILocation(line: 1050, column: 13, scope: !8268)
!8366 = !DILocation(line: 1050, column: 22, scope: !8268)
!8367 = !DILocation(line: 1050, column: 31, scope: !8268)
!8368 = !DILocation(line: 1050, column: 40, scope: !8268)
!8369 = !DILocation(line: 1050, column: 43, scope: !8268)
!8370 = !DILocation(line: 1050, column: 50, scope: !8268)
!8371 = !DILocation(line: 1050, column: 53, scope: !8268)
!8372 = !DILocation(line: 1050, column: 60, scope: !8268)
!8373 = !DILocation(line: 1050, column: 63, scope: !8268)
!8374 = !DILocation(line: 1050, column: 2, scope: !8268)
!8375 = !DILocation(line: 1050, column: 5, scope: !8268)
!8376 = !DILocation(line: 1050, column: 11, scope: !8268)
!8377 = !DILocation(line: 1052, column: 12, scope: !8268)
!8378 = !DILocation(line: 1052, column: 21, scope: !8268)
!8379 = !DILocation(line: 1052, column: 29, scope: !8268)
!8380 = !DILocation(line: 1052, column: 2, scope: !8268)
!8381 = !DILocation(line: 1052, column: 5, scope: !8268)
!8382 = !DILocation(line: 1052, column: 10, scope: !8268)
!8383 = !DILocation(line: 1053, column: 28, scope: !8268)
!8384 = !DILocation(line: 1053, column: 2, scope: !8268)
!8385 = !DILocation(line: 1053, column: 11, scope: !8268)
!8386 = !DILocation(line: 1053, column: 19, scope: !8268)
!8387 = !DILocation(line: 1053, column: 26, scope: !8268)
!8388 = !DILocation(line: 1055, column: 9, scope: !8268)
!8389 = !DILocation(line: 1055, column: 2, scope: !8268)
!8390 = !DILocation(line: 1056, column: 1, scope: !8268)
!8391 = distinct !DISubprogram(name: "vertid", scope: !3, file: !3, line: 1330, type: !8392, scopeLine: 1331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!78, !3191, !8394, !8394, !114}
!8394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8395, size: 64)
!8395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!8396 = !DILocalVariable(name: "process", arg: 1, scope: !8391, file: !3, line: 1330, type: !3191)
!8397 = !DILocation(line: 1330, column: 28, scope: !8391)
!8398 = !DILocalVariable(name: "c1", arg: 2, scope: !8391, file: !3, line: 1330, type: !8394)
!8399 = !DILocation(line: 1330, column: 51, scope: !8391)
!8400 = !DILocalVariable(name: "c2", arg: 3, scope: !8391, file: !3, line: 1330, type: !8394)
!8401 = !DILocation(line: 1330, column: 69, scope: !8391)
!8402 = !DILocalVariable(name: "mb", arg: 4, scope: !8391, file: !3, line: 1330, type: !114)
!8403 = !DILocation(line: 1330, column: 83, scope: !8391)
!8404 = !DILocalVariable(name: "v", scope: !8391, file: !3, line: 1332, type: !1695)
!8405 = !DILocation(line: 1332, column: 9, scope: !8391)
!8406 = !DILocalVariable(name: "vid", scope: !8391, file: !3, line: 1333, type: !78)
!8407 = !DILocation(line: 1333, column: 6, scope: !8391)
!8408 = !DILocation(line: 1333, column: 20, scope: !8391)
!8409 = !DILocation(line: 1333, column: 29, scope: !8391)
!8410 = !DILocation(line: 1333, column: 36, scope: !8391)
!8411 = !DILocation(line: 1333, column: 40, scope: !8391)
!8412 = !DILocation(line: 1333, column: 43, scope: !8391)
!8413 = !DILocation(line: 1333, column: 47, scope: !8391)
!8414 = !DILocation(line: 1333, column: 50, scope: !8391)
!8415 = !DILocation(line: 1333, column: 54, scope: !8391)
!8416 = !DILocation(line: 1333, column: 57, scope: !8391)
!8417 = !DILocation(line: 1333, column: 61, scope: !8391)
!8418 = !DILocation(line: 1333, column: 64, scope: !8391)
!8419 = !DILocation(line: 1333, column: 68, scope: !8391)
!8420 = !DILocation(line: 1333, column: 71, scope: !8391)
!8421 = !DILocation(line: 1333, column: 75, scope: !8391)
!8422 = !DILocation(line: 1333, column: 12, scope: !8391)
!8423 = !DILocation(line: 1335, column: 6, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 1335, column: 6)
!8425 = !DILocation(line: 1335, column: 10, scope: !8424)
!8426 = !DILocation(line: 1335, column: 6, scope: !8391)
!8427 = !DILocation(line: 1336, column: 10, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 1335, column: 17)
!8429 = !DILocation(line: 1336, column: 3, scope: !8428)
!8430 = !DILocation(line: 1339, column: 11, scope: !8391)
!8431 = !DILocation(line: 1339, column: 20, scope: !8391)
!8432 = !DILocation(line: 1339, column: 24, scope: !8391)
!8433 = !DILocation(line: 1339, column: 28, scope: !8391)
!8434 = !DILocation(line: 1339, column: 32, scope: !8391)
!8435 = !DILocation(line: 1339, column: 36, scope: !8391)
!8436 = !DILocation(line: 1339, column: 40, scope: !8391)
!8437 = !DILocation(line: 1339, column: 47, scope: !8391)
!8438 = !DILocation(line: 1339, column: 51, scope: !8391)
!8439 = !DILocation(line: 1339, column: 60, scope: !8391)
!8440 = !DILocation(line: 1339, column: 58, scope: !8391)
!8441 = !DILocation(line: 1339, column: 64, scope: !8391)
!8442 = !DILocation(line: 1339, column: 2, scope: !8391)
!8443 = !DILocation(line: 1340, column: 10, scope: !8391)
!8444 = !DILocation(line: 1340, column: 21, scope: !8391)
!8445 = !DILocation(line: 1340, column: 19, scope: !8391)
!8446 = !DILocation(line: 1340, column: 27, scope: !8391)
!8447 = !DILocation(line: 1340, column: 25, scope: !8391)
!8448 = !DILocation(line: 1340, column: 2, scope: !8391)
!8449 = !DILocation(line: 1342, column: 17, scope: !8391)
!8450 = !DILocation(line: 1342, column: 26, scope: !8391)
!8451 = !DILocation(line: 1342, column: 2, scope: !8391)
!8452 = !DILocation(line: 1343, column: 8, scope: !8391)
!8453 = !DILocation(line: 1343, column: 17, scope: !8391)
!8454 = !DILocation(line: 1343, column: 26, scope: !8391)
!8455 = !DILocation(line: 1343, column: 32, scope: !8391)
!8456 = !DILocation(line: 1343, column: 6, scope: !8391)
!8457 = !DILocation(line: 1344, column: 10, scope: !8391)
!8458 = !DILocation(line: 1344, column: 19, scope: !8391)
!8459 = !DILocation(line: 1344, column: 28, scope: !8391)
!8460 = !DILocation(line: 1344, column: 35, scope: !8391)
!8461 = !DILocation(line: 1344, column: 39, scope: !8391)
!8462 = !DILocation(line: 1344, column: 42, scope: !8391)
!8463 = !DILocation(line: 1344, column: 46, scope: !8391)
!8464 = !DILocation(line: 1344, column: 49, scope: !8391)
!8465 = !DILocation(line: 1344, column: 53, scope: !8391)
!8466 = !DILocation(line: 1344, column: 56, scope: !8391)
!8467 = !DILocation(line: 1344, column: 60, scope: !8391)
!8468 = !DILocation(line: 1344, column: 63, scope: !8391)
!8469 = !DILocation(line: 1344, column: 67, scope: !8391)
!8470 = !DILocation(line: 1344, column: 70, scope: !8391)
!8471 = !DILocation(line: 1344, column: 74, scope: !8391)
!8472 = !DILocation(line: 1344, column: 77, scope: !8391)
!8473 = !DILocation(line: 1344, column: 2, scope: !8391)
!8474 = !DILocation(line: 1346, column: 9, scope: !8391)
!8475 = !DILocation(line: 1346, column: 2, scope: !8391)
!8476 = !DILocation(line: 1347, column: 1, scope: !8391)
!8477 = distinct !DISubprogram(name: "accum_mballfaces", scope: !3, file: !3, line: 784, type: !7987, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8478 = !DILocalVariable(name: "process", arg: 1, scope: !8477, file: !3, line: 784, type: !3191)
!8479 = !DILocation(line: 784, column: 39, scope: !8477)
!8480 = !DILocalVariable(name: "i1", arg: 2, scope: !8477, file: !3, line: 784, type: !78)
!8481 = !DILocation(line: 784, column: 52, scope: !8477)
!8482 = !DILocalVariable(name: "i2", arg: 3, scope: !8477, file: !3, line: 784, type: !78)
!8483 = !DILocation(line: 784, column: 60, scope: !8477)
!8484 = !DILocalVariable(name: "i3", arg: 4, scope: !8477, file: !3, line: 784, type: !78)
!8485 = !DILocation(line: 784, column: 68, scope: !8477)
!8486 = !DILocalVariable(name: "i4", arg: 5, scope: !8477, file: !3, line: 784, type: !78)
!8487 = !DILocation(line: 784, column: 76, scope: !8477)
!8488 = !DILocalVariable(name: "newi", scope: !8477, file: !3, line: 786, type: !2260)
!8489 = !DILocation(line: 786, column: 7, scope: !8477)
!8490 = !DILocalVariable(name: "cur", scope: !8477, file: !3, line: 786, type: !2260)
!8491 = !DILocation(line: 786, column: 14, scope: !8477)
!8492 = !DILocation(line: 789, column: 6, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 789, column: 6)
!8494 = !DILocation(line: 789, column: 15, scope: !8493)
!8495 = !DILocation(line: 789, column: 27, scope: !8493)
!8496 = !DILocation(line: 789, column: 36, scope: !8493)
!8497 = !DILocation(line: 789, column: 24, scope: !8493)
!8498 = !DILocation(line: 789, column: 6, scope: !8477)
!8499 = !DILocation(line: 790, column: 3, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8493, file: !3, line: 789, column: 46)
!8501 = !DILocation(line: 790, column: 12, scope: !8500)
!8502 = !DILocation(line: 790, column: 21, scope: !8500)
!8503 = !DILocation(line: 791, column: 10, scope: !8500)
!8504 = !DILocation(line: 791, column: 40, scope: !8500)
!8505 = !DILocation(line: 791, column: 49, scope: !8500)
!8506 = !DILocation(line: 791, column: 38, scope: !8500)
!8507 = !DILocation(line: 791, column: 8, scope: !8500)
!8508 = !DILocation(line: 793, column: 7, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 793, column: 7)
!8510 = !DILocation(line: 793, column: 16, scope: !8509)
!8511 = !DILocation(line: 793, column: 7, scope: !8500)
!8512 = !DILocation(line: 794, column: 11, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8509, file: !3, line: 793, column: 25)
!8514 = !DILocation(line: 794, column: 4, scope: !8513)
!8515 = !DILocation(line: 794, column: 17, scope: !8513)
!8516 = !DILocation(line: 794, column: 26, scope: !8513)
!8517 = !DILocation(line: 794, column: 54, scope: !8513)
!8518 = !DILocation(line: 794, column: 63, scope: !8513)
!8519 = !DILocation(line: 794, column: 72, scope: !8513)
!8520 = !DILocation(line: 794, column: 53, scope: !8513)
!8521 = !DILocation(line: 794, column: 51, scope: !8513)
!8522 = !DILocation(line: 795, column: 4, scope: !8513)
!8523 = !DILocation(line: 795, column: 14, scope: !8513)
!8524 = !DILocation(line: 795, column: 23, scope: !8513)
!8525 = !DILocation(line: 796, column: 3, scope: !8513)
!8526 = !DILocation(line: 797, column: 22, scope: !8500)
!8527 = !DILocation(line: 797, column: 3, scope: !8500)
!8528 = !DILocation(line: 797, column: 12, scope: !8500)
!8529 = !DILocation(line: 797, column: 20, scope: !8500)
!8530 = !DILocation(line: 798, column: 2, scope: !8500)
!8531 = !DILocation(line: 800, column: 8, scope: !8477)
!8532 = !DILocation(line: 800, column: 17, scope: !8477)
!8533 = !DILocation(line: 800, column: 31, scope: !8477)
!8534 = !DILocation(line: 800, column: 40, scope: !8477)
!8535 = !DILocation(line: 800, column: 29, scope: !8477)
!8536 = !DILocation(line: 800, column: 25, scope: !8477)
!8537 = !DILocation(line: 800, column: 6, scope: !8477)
!8538 = !DILocation(line: 804, column: 11, scope: !8477)
!8539 = !DILocation(line: 804, column: 2, scope: !8477)
!8540 = !DILocation(line: 804, column: 9, scope: !8477)
!8541 = !DILocation(line: 805, column: 11, scope: !8477)
!8542 = !DILocation(line: 805, column: 2, scope: !8477)
!8543 = !DILocation(line: 805, column: 9, scope: !8477)
!8544 = !DILocation(line: 806, column: 11, scope: !8477)
!8545 = !DILocation(line: 806, column: 2, scope: !8477)
!8546 = !DILocation(line: 806, column: 9, scope: !8477)
!8547 = !DILocation(line: 807, column: 6, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 807, column: 6)
!8549 = !DILocation(line: 807, column: 9, scope: !8548)
!8550 = !DILocation(line: 807, column: 6, scope: !8477)
!8551 = !DILocation(line: 808, column: 12, scope: !8548)
!8552 = !DILocation(line: 808, column: 3, scope: !8548)
!8553 = !DILocation(line: 808, column: 10, scope: !8548)
!8554 = !DILocation(line: 810, column: 12, scope: !8548)
!8555 = !DILocation(line: 810, column: 3, scope: !8548)
!8556 = !DILocation(line: 810, column: 10, scope: !8548)
!8557 = !DILocation(line: 812, column: 2, scope: !8477)
!8558 = !DILocation(line: 812, column: 11, scope: !8477)
!8559 = !DILocation(line: 812, column: 19, scope: !8477)
!8560 = !DILocation(line: 814, column: 1, scope: !8477)
!8561 = distinct !DISubprogram(name: "getedge", scope: !3, file: !3, line: 1237, type: !8562, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8562 = !DISubroutineType(types: !8563)
!8563 = !{!78, !2892, !78, !78, !78, !78, !78, !78}
!8564 = !DILocalVariable(name: "table", arg: 1, scope: !8561, file: !3, line: 1237, type: !2892)
!8565 = !DILocation(line: 1237, column: 30, scope: !8561)
!8566 = !DILocalVariable(name: "i1", arg: 2, scope: !8561, file: !3, line: 1238, type: !78)
!8567 = !DILocation(line: 1238, column: 24, scope: !8561)
!8568 = !DILocalVariable(name: "j1", arg: 3, scope: !8561, file: !3, line: 1238, type: !78)
!8569 = !DILocation(line: 1238, column: 32, scope: !8561)
!8570 = !DILocalVariable(name: "k1", arg: 4, scope: !8561, file: !3, line: 1238, type: !78)
!8571 = !DILocation(line: 1238, column: 40, scope: !8561)
!8572 = !DILocalVariable(name: "i2", arg: 5, scope: !8561, file: !3, line: 1239, type: !78)
!8573 = !DILocation(line: 1239, column: 24, scope: !8561)
!8574 = !DILocalVariable(name: "j2", arg: 6, scope: !8561, file: !3, line: 1239, type: !78)
!8575 = !DILocation(line: 1239, column: 32, scope: !8561)
!8576 = !DILocalVariable(name: "k2", arg: 7, scope: !8561, file: !3, line: 1239, type: !78)
!8577 = !DILocation(line: 1239, column: 40, scope: !8561)
!8578 = !DILocalVariable(name: "q", scope: !8561, file: !3, line: 1241, type: !1700)
!8579 = !DILocation(line: 1241, column: 12, scope: !8561)
!8580 = !DILocation(line: 1243, column: 6, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 1243, column: 6)
!8582 = !DILocation(line: 1243, column: 11, scope: !8581)
!8583 = !DILocation(line: 1243, column: 9, scope: !8581)
!8584 = !DILocation(line: 1243, column: 14, scope: !8581)
!8585 = !DILocation(line: 1243, column: 18, scope: !8581)
!8586 = !DILocation(line: 1243, column: 24, scope: !8581)
!8587 = !DILocation(line: 1243, column: 21, scope: !8581)
!8588 = !DILocation(line: 1243, column: 27, scope: !8581)
!8589 = !DILocation(line: 1243, column: 31, scope: !8581)
!8590 = !DILocation(line: 1243, column: 36, scope: !8581)
!8591 = !DILocation(line: 1243, column: 34, scope: !8581)
!8592 = !DILocation(line: 1243, column: 39, scope: !8581)
!8593 = !DILocation(line: 1243, column: 43, scope: !8581)
!8594 = !DILocation(line: 1243, column: 49, scope: !8581)
!8595 = !DILocation(line: 1243, column: 46, scope: !8581)
!8596 = !DILocation(line: 1243, column: 52, scope: !8581)
!8597 = !DILocation(line: 1243, column: 55, scope: !8581)
!8598 = !DILocation(line: 1243, column: 60, scope: !8581)
!8599 = !DILocation(line: 1243, column: 58, scope: !8581)
!8600 = !DILocation(line: 1243, column: 6, scope: !8561)
!8601 = !DILocalVariable(name: "t", scope: !8602, file: !3, line: 1244, type: !78)
!8602 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 1243, column: 67)
!8603 = !DILocation(line: 1244, column: 7, scope: !8602)
!8604 = !DILocation(line: 1244, column: 11, scope: !8602)
!8605 = !DILocation(line: 1245, column: 8, scope: !8602)
!8606 = !DILocation(line: 1245, column: 6, scope: !8602)
!8607 = !DILocation(line: 1246, column: 8, scope: !8602)
!8608 = !DILocation(line: 1246, column: 6, scope: !8602)
!8609 = !DILocation(line: 1247, column: 7, scope: !8602)
!8610 = !DILocation(line: 1247, column: 5, scope: !8602)
!8611 = !DILocation(line: 1248, column: 8, scope: !8602)
!8612 = !DILocation(line: 1248, column: 6, scope: !8602)
!8613 = !DILocation(line: 1249, column: 8, scope: !8602)
!8614 = !DILocation(line: 1249, column: 6, scope: !8602)
!8615 = !DILocation(line: 1250, column: 7, scope: !8602)
!8616 = !DILocation(line: 1250, column: 5, scope: !8602)
!8617 = !DILocation(line: 1251, column: 8, scope: !8602)
!8618 = !DILocation(line: 1251, column: 6, scope: !8602)
!8619 = !DILocation(line: 1252, column: 8, scope: !8602)
!8620 = !DILocation(line: 1252, column: 6, scope: !8602)
!8621 = !DILocation(line: 1253, column: 2, scope: !8602)
!8622 = !DILocation(line: 1254, column: 6, scope: !8561)
!8623 = !DILocation(line: 1254, column: 12, scope: !8561)
!8624 = !DILocation(line: 1254, column: 31, scope: !8561)
!8625 = !DILocation(line: 1254, column: 29, scope: !8561)
!8626 = !DILocation(line: 1254, column: 4, scope: !8561)
!8627 = !DILocation(line: 1255, column: 2, scope: !8561)
!8628 = !DILocation(line: 1255, column: 9, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 1255, column: 2)
!8630 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 1255, column: 2)
!8631 = !DILocation(line: 1255, column: 11, scope: !8629)
!8632 = !DILocation(line: 1255, column: 2, scope: !8630)
!8633 = !DILocation(line: 1256, column: 7, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 1256, column: 7)
!8635 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 1255, column: 33)
!8636 = !DILocation(line: 1256, column: 10, scope: !8634)
!8637 = !DILocation(line: 1256, column: 16, scope: !8634)
!8638 = !DILocation(line: 1256, column: 13, scope: !8634)
!8639 = !DILocation(line: 1256, column: 19, scope: !8634)
!8640 = !DILocation(line: 1256, column: 22, scope: !8634)
!8641 = !DILocation(line: 1256, column: 25, scope: !8634)
!8642 = !DILocation(line: 1256, column: 31, scope: !8634)
!8643 = !DILocation(line: 1256, column: 28, scope: !8634)
!8644 = !DILocation(line: 1256, column: 34, scope: !8634)
!8645 = !DILocation(line: 1256, column: 37, scope: !8634)
!8646 = !DILocation(line: 1256, column: 40, scope: !8634)
!8647 = !DILocation(line: 1256, column: 46, scope: !8634)
!8648 = !DILocation(line: 1256, column: 43, scope: !8634)
!8649 = !DILocation(line: 1256, column: 49, scope: !8634)
!8650 = !DILocation(line: 1257, column: 7, scope: !8634)
!8651 = !DILocation(line: 1257, column: 10, scope: !8634)
!8652 = !DILocation(line: 1257, column: 16, scope: !8634)
!8653 = !DILocation(line: 1257, column: 13, scope: !8634)
!8654 = !DILocation(line: 1257, column: 19, scope: !8634)
!8655 = !DILocation(line: 1257, column: 22, scope: !8634)
!8656 = !DILocation(line: 1257, column: 25, scope: !8634)
!8657 = !DILocation(line: 1257, column: 31, scope: !8634)
!8658 = !DILocation(line: 1257, column: 28, scope: !8634)
!8659 = !DILocation(line: 1257, column: 34, scope: !8634)
!8660 = !DILocation(line: 1257, column: 37, scope: !8634)
!8661 = !DILocation(line: 1257, column: 40, scope: !8634)
!8662 = !DILocation(line: 1257, column: 46, scope: !8634)
!8663 = !DILocation(line: 1257, column: 43, scope: !8634)
!8664 = !DILocation(line: 1256, column: 7, scope: !8635)
!8665 = !DILocation(line: 1259, column: 11, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 1258, column: 3)
!8667 = !DILocation(line: 1259, column: 14, scope: !8666)
!8668 = !DILocation(line: 1259, column: 4, scope: !8666)
!8669 = !DILocation(line: 1261, column: 2, scope: !8635)
!8670 = !DILocation(line: 1255, column: 24, scope: !8629)
!8671 = !DILocation(line: 1255, column: 27, scope: !8629)
!8672 = !DILocation(line: 1255, column: 22, scope: !8629)
!8673 = !DILocation(line: 1255, column: 2, scope: !8629)
!8674 = distinct !{!8674, !8632, !8675}
!8675 = !DILocation(line: 1261, column: 2, scope: !8630)
!8676 = !DILocation(line: 1262, column: 2, scope: !8561)
!8677 = !DILocation(line: 1263, column: 1, scope: !8561)
!8678 = distinct !DISubprogram(name: "converge", scope: !3, file: !3, line: 1352, type: !8679, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8679 = !DISubroutineType(types: !8680)
!8680 = !{null, !3191, !4835, !4835, !141, !141, !1461, !114, !78}
!8681 = !DILocalVariable(name: "process", arg: 1, scope: !8678, file: !3, line: 1352, type: !3191)
!8682 = !DILocation(line: 1352, column: 31, scope: !8678)
!8683 = !DILocalVariable(name: "p1", arg: 2, scope: !8678, file: !3, line: 1352, type: !4835)
!8684 = !DILocation(line: 1352, column: 52, scope: !8678)
!8685 = !DILocalVariable(name: "p2", arg: 3, scope: !8678, file: !3, line: 1352, type: !4835)
!8686 = !DILocation(line: 1352, column: 71, scope: !8678)
!8687 = !DILocalVariable(name: "v1", arg: 4, scope: !8678, file: !3, line: 1352, type: !141)
!8688 = !DILocation(line: 1352, column: 84, scope: !8678)
!8689 = !DILocalVariable(name: "v2", arg: 5, scope: !8678, file: !3, line: 1352, type: !141)
!8690 = !DILocation(line: 1352, column: 94, scope: !8678)
!8691 = !DILocalVariable(name: "p", arg: 6, scope: !8678, file: !3, line: 1353, type: !1461)
!8692 = !DILocation(line: 1353, column: 28, scope: !8678)
!8693 = !DILocalVariable(name: "mb", arg: 7, scope: !8678, file: !3, line: 1353, type: !114)
!8694 = !DILocation(line: 1353, column: 44, scope: !8678)
!8695 = !DILocalVariable(name: "f", arg: 8, scope: !8678, file: !3, line: 1353, type: !78)
!8696 = !DILocation(line: 1353, column: 52, scope: !8678)
!8697 = !DILocalVariable(name: "i", scope: !8678, file: !3, line: 1355, type: !78)
!8698 = !DILocation(line: 1355, column: 6, scope: !8678)
!8699 = !DILocalVariable(name: "pos", scope: !8678, file: !3, line: 1356, type: !172)
!8700 = !DILocation(line: 1356, column: 8, scope: !8678)
!8701 = !DILocalVariable(name: "neg", scope: !8678, file: !3, line: 1356, type: !172)
!8702 = !DILocation(line: 1356, column: 16, scope: !8678)
!8703 = !DILocalVariable(name: "positive", scope: !8678, file: !3, line: 1357, type: !141)
!8704 = !DILocation(line: 1357, column: 8, scope: !8678)
!8705 = !DILocalVariable(name: "negative", scope: !8678, file: !3, line: 1357, type: !141)
!8706 = !DILocation(line: 1357, column: 25, scope: !8678)
!8707 = !DILocalVariable(name: "dvec", scope: !8678, file: !3, line: 1358, type: !172)
!8708 = !DILocation(line: 1358, column: 8, scope: !8678)
!8709 = !DILocation(line: 1360, column: 6, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 1360, column: 6)
!8711 = !DILocation(line: 1360, column: 9, scope: !8710)
!8712 = !DILocation(line: 1360, column: 6, scope: !8678)
!8713 = !DILocation(line: 1361, column: 14, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 1360, column: 14)
!8715 = !DILocation(line: 1361, column: 19, scope: !8714)
!8716 = !DILocation(line: 1361, column: 3, scope: !8714)
!8717 = !DILocation(line: 1362, column: 14, scope: !8714)
!8718 = !DILocation(line: 1362, column: 19, scope: !8714)
!8719 = !DILocation(line: 1362, column: 3, scope: !8714)
!8720 = !DILocation(line: 1363, column: 14, scope: !8714)
!8721 = !DILocation(line: 1363, column: 12, scope: !8714)
!8722 = !DILocation(line: 1364, column: 14, scope: !8714)
!8723 = !DILocation(line: 1364, column: 12, scope: !8714)
!8724 = !DILocation(line: 1365, column: 2, scope: !8714)
!8725 = !DILocation(line: 1367, column: 14, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 1366, column: 7)
!8727 = !DILocation(line: 1367, column: 19, scope: !8726)
!8728 = !DILocation(line: 1367, column: 3, scope: !8726)
!8729 = !DILocation(line: 1368, column: 14, scope: !8726)
!8730 = !DILocation(line: 1368, column: 19, scope: !8726)
!8731 = !DILocation(line: 1368, column: 3, scope: !8726)
!8732 = !DILocation(line: 1369, column: 14, scope: !8726)
!8733 = !DILocation(line: 1369, column: 12, scope: !8726)
!8734 = !DILocation(line: 1370, column: 14, scope: !8726)
!8735 = !DILocation(line: 1370, column: 12, scope: !8726)
!8736 = !DILocation(line: 1373, column: 14, scope: !8678)
!8737 = !DILocation(line: 1373, column: 20, scope: !8678)
!8738 = !DILocation(line: 1373, column: 25, scope: !8678)
!8739 = !DILocation(line: 1373, column: 2, scope: !8678)
!8740 = !DILocation(line: 1377, column: 7, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 1377, column: 6)
!8742 = !DILocation(line: 1377, column: 11, scope: !8741)
!8743 = !DILocation(line: 1377, column: 18, scope: !8741)
!8744 = !DILocation(line: 1377, column: 26, scope: !8741)
!8745 = !DILocation(line: 1377, column: 30, scope: !8741)
!8746 = !DILocation(line: 1377, column: 32, scope: !8741)
!8747 = !DILocation(line: 1377, column: 6, scope: !8678)
!8748 = !DILocation(line: 1378, column: 8, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 1378, column: 7)
!8750 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 1377, column: 39)
!8751 = !DILocation(line: 1378, column: 16, scope: !8749)
!8752 = !DILocation(line: 1378, column: 25, scope: !8749)
!8753 = !DILocation(line: 1378, column: 29, scope: !8749)
!8754 = !DILocation(line: 1378, column: 37, scope: !8749)
!8755 = !DILocation(line: 1378, column: 7, scope: !8750)
!8756 = !DILocation(line: 1379, column: 11, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 1378, column: 47)
!8758 = !DILocation(line: 1379, column: 20, scope: !8757)
!8759 = !DILocation(line: 1379, column: 31, scope: !8757)
!8760 = !DILocation(line: 1379, column: 29, scope: !8757)
!8761 = !DILocation(line: 1379, column: 42, scope: !8757)
!8762 = !DILocation(line: 1379, column: 53, scope: !8757)
!8763 = !DILocation(line: 1379, column: 51, scope: !8757)
!8764 = !DILocation(line: 1379, column: 39, scope: !8757)
!8765 = !DILocation(line: 1379, column: 18, scope: !8757)
!8766 = !DILocation(line: 1379, column: 4, scope: !8757)
!8767 = !DILocation(line: 1379, column: 9, scope: !8757)
!8768 = !DILocation(line: 1380, column: 11, scope: !8757)
!8769 = !DILocation(line: 1380, column: 4, scope: !8757)
!8770 = !DILocation(line: 1380, column: 9, scope: !8757)
!8771 = !DILocation(line: 1381, column: 11, scope: !8757)
!8772 = !DILocation(line: 1381, column: 4, scope: !8757)
!8773 = !DILocation(line: 1381, column: 9, scope: !8757)
!8774 = !DILocation(line: 1382, column: 4, scope: !8757)
!8775 = !DILocation(line: 1384, column: 8, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 1384, column: 7)
!8777 = !DILocation(line: 1384, column: 16, scope: !8776)
!8778 = !DILocation(line: 1384, column: 25, scope: !8776)
!8779 = !DILocation(line: 1384, column: 29, scope: !8776)
!8780 = !DILocation(line: 1384, column: 37, scope: !8776)
!8781 = !DILocation(line: 1384, column: 7, scope: !8750)
!8782 = !DILocation(line: 1385, column: 11, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 1384, column: 47)
!8784 = !DILocation(line: 1385, column: 4, scope: !8783)
!8785 = !DILocation(line: 1385, column: 9, scope: !8783)
!8786 = !DILocation(line: 1386, column: 11, scope: !8783)
!8787 = !DILocation(line: 1386, column: 20, scope: !8783)
!8788 = !DILocation(line: 1386, column: 31, scope: !8783)
!8789 = !DILocation(line: 1386, column: 29, scope: !8783)
!8790 = !DILocation(line: 1386, column: 42, scope: !8783)
!8791 = !DILocation(line: 1386, column: 53, scope: !8783)
!8792 = !DILocation(line: 1386, column: 51, scope: !8783)
!8793 = !DILocation(line: 1386, column: 39, scope: !8783)
!8794 = !DILocation(line: 1386, column: 18, scope: !8783)
!8795 = !DILocation(line: 1386, column: 4, scope: !8783)
!8796 = !DILocation(line: 1386, column: 9, scope: !8783)
!8797 = !DILocation(line: 1387, column: 11, scope: !8783)
!8798 = !DILocation(line: 1387, column: 4, scope: !8783)
!8799 = !DILocation(line: 1387, column: 9, scope: !8783)
!8800 = !DILocation(line: 1388, column: 4, scope: !8783)
!8801 = !DILocation(line: 1390, column: 8, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 1390, column: 7)
!8803 = !DILocation(line: 1390, column: 16, scope: !8802)
!8804 = !DILocation(line: 1390, column: 25, scope: !8802)
!8805 = !DILocation(line: 1390, column: 29, scope: !8802)
!8806 = !DILocation(line: 1390, column: 37, scope: !8802)
!8807 = !DILocation(line: 1390, column: 7, scope: !8750)
!8808 = !DILocation(line: 1391, column: 11, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 1390, column: 47)
!8810 = !DILocation(line: 1391, column: 4, scope: !8809)
!8811 = !DILocation(line: 1391, column: 9, scope: !8809)
!8812 = !DILocation(line: 1392, column: 11, scope: !8809)
!8813 = !DILocation(line: 1392, column: 4, scope: !8809)
!8814 = !DILocation(line: 1392, column: 9, scope: !8809)
!8815 = !DILocation(line: 1393, column: 11, scope: !8809)
!8816 = !DILocation(line: 1393, column: 20, scope: !8809)
!8817 = !DILocation(line: 1393, column: 31, scope: !8809)
!8818 = !DILocation(line: 1393, column: 29, scope: !8809)
!8819 = !DILocation(line: 1393, column: 42, scope: !8809)
!8820 = !DILocation(line: 1393, column: 53, scope: !8809)
!8821 = !DILocation(line: 1393, column: 51, scope: !8809)
!8822 = !DILocation(line: 1393, column: 39, scope: !8809)
!8823 = !DILocation(line: 1393, column: 18, scope: !8809)
!8824 = !DILocation(line: 1393, column: 4, scope: !8809)
!8825 = !DILocation(line: 1393, column: 9, scope: !8809)
!8826 = !DILocation(line: 1394, column: 4, scope: !8809)
!8827 = !DILocation(line: 1396, column: 2, scope: !8750)
!8828 = !DILocation(line: 1398, column: 7, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 1398, column: 6)
!8830 = !DILocation(line: 1398, column: 15, scope: !8829)
!8831 = !DILocation(line: 1398, column: 24, scope: !8829)
!8832 = !DILocation(line: 1398, column: 28, scope: !8829)
!8833 = !DILocation(line: 1398, column: 36, scope: !8829)
!8834 = !DILocation(line: 1398, column: 6, scope: !8678)
!8835 = !DILocation(line: 1399, column: 10, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 1398, column: 46)
!8837 = !DILocation(line: 1399, column: 3, scope: !8836)
!8838 = !DILocation(line: 1399, column: 8, scope: !8836)
!8839 = !DILocation(line: 1400, column: 10, scope: !8836)
!8840 = !DILocation(line: 1400, column: 3, scope: !8836)
!8841 = !DILocation(line: 1400, column: 8, scope: !8836)
!8842 = !DILocation(line: 1401, column: 3, scope: !8836)
!8843 = !DILocation(line: 1402, column: 9, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 1402, column: 8)
!8845 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 1401, column: 13)
!8846 = !DILocation(line: 1402, column: 12, scope: !8844)
!8847 = !DILocation(line: 1402, column: 8, scope: !8845)
!8848 = !DILocation(line: 1402, column: 20, scope: !8844)
!8849 = !DILocation(line: 1403, column: 19, scope: !8845)
!8850 = !DILocation(line: 1403, column: 28, scope: !8845)
!8851 = !DILocation(line: 1403, column: 26, scope: !8845)
!8852 = !DILocation(line: 1403, column: 16, scope: !8845)
!8853 = !DILocation(line: 1403, column: 4, scope: !8845)
!8854 = !DILocation(line: 1403, column: 9, scope: !8845)
!8855 = !DILocation(line: 1404, column: 9, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 1404, column: 8)
!8857 = !DILocation(line: 1404, column: 18, scope: !8856)
!8858 = !DILocation(line: 1404, column: 27, scope: !8856)
!8859 = !DILocation(line: 1404, column: 36, scope: !8856)
!8860 = !DILocation(line: 1404, column: 42, scope: !8856)
!8861 = !DILocation(line: 1404, column: 48, scope: !8856)
!8862 = !DILocation(line: 1404, column: 55, scope: !8856)
!8863 = !DILocation(line: 1404, column: 8, scope: !8845)
!8864 = !DILocation(line: 1404, column: 72, scope: !8856)
!8865 = !DILocation(line: 1404, column: 63, scope: !8856)
!8866 = !DILocation(line: 1404, column: 70, scope: !8856)
!8867 = !DILocation(line: 1405, column: 72, scope: !8856)
!8868 = !DILocation(line: 1405, column: 63, scope: !8856)
!8869 = !DILocation(line: 1405, column: 70, scope: !8856)
!8870 = distinct !{!8870, !8842, !8871}
!8871 = !DILocation(line: 1406, column: 3, scope: !8836)
!8872 = !DILocation(line: 1409, column: 7, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 1409, column: 6)
!8874 = !DILocation(line: 1409, column: 15, scope: !8873)
!8875 = !DILocation(line: 1409, column: 24, scope: !8873)
!8876 = !DILocation(line: 1409, column: 28, scope: !8873)
!8877 = !DILocation(line: 1409, column: 36, scope: !8873)
!8878 = !DILocation(line: 1409, column: 6, scope: !8678)
!8879 = !DILocation(line: 1410, column: 10, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 1409, column: 46)
!8881 = !DILocation(line: 1410, column: 3, scope: !8880)
!8882 = !DILocation(line: 1410, column: 8, scope: !8880)
!8883 = !DILocation(line: 1411, column: 10, scope: !8880)
!8884 = !DILocation(line: 1411, column: 3, scope: !8880)
!8885 = !DILocation(line: 1411, column: 8, scope: !8880)
!8886 = !DILocation(line: 1412, column: 3, scope: !8880)
!8887 = !DILocation(line: 1413, column: 9, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 1413, column: 8)
!8889 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 1412, column: 13)
!8890 = !DILocation(line: 1413, column: 12, scope: !8888)
!8891 = !DILocation(line: 1413, column: 8, scope: !8889)
!8892 = !DILocation(line: 1413, column: 20, scope: !8888)
!8893 = !DILocation(line: 1414, column: 19, scope: !8889)
!8894 = !DILocation(line: 1414, column: 28, scope: !8889)
!8895 = !DILocation(line: 1414, column: 26, scope: !8889)
!8896 = !DILocation(line: 1414, column: 16, scope: !8889)
!8897 = !DILocation(line: 1414, column: 4, scope: !8889)
!8898 = !DILocation(line: 1414, column: 9, scope: !8889)
!8899 = !DILocation(line: 1415, column: 9, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 1415, column: 8)
!8901 = !DILocation(line: 1415, column: 18, scope: !8900)
!8902 = !DILocation(line: 1415, column: 27, scope: !8900)
!8903 = !DILocation(line: 1415, column: 36, scope: !8900)
!8904 = !DILocation(line: 1415, column: 42, scope: !8900)
!8905 = !DILocation(line: 1415, column: 48, scope: !8900)
!8906 = !DILocation(line: 1415, column: 55, scope: !8900)
!8907 = !DILocation(line: 1415, column: 8, scope: !8889)
!8908 = !DILocation(line: 1415, column: 72, scope: !8900)
!8909 = !DILocation(line: 1415, column: 63, scope: !8900)
!8910 = !DILocation(line: 1415, column: 70, scope: !8900)
!8911 = !DILocation(line: 1416, column: 72, scope: !8900)
!8912 = !DILocation(line: 1416, column: 63, scope: !8900)
!8913 = !DILocation(line: 1416, column: 70, scope: !8900)
!8914 = distinct !{!8914, !8886, !8915}
!8915 = !DILocation(line: 1417, column: 3, scope: !8880)
!8916 = !DILocation(line: 1420, column: 7, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 1420, column: 6)
!8918 = !DILocation(line: 1420, column: 15, scope: !8917)
!8919 = !DILocation(line: 1420, column: 24, scope: !8917)
!8920 = !DILocation(line: 1420, column: 28, scope: !8917)
!8921 = !DILocation(line: 1420, column: 36, scope: !8917)
!8922 = !DILocation(line: 1420, column: 6, scope: !8678)
!8923 = !DILocation(line: 1421, column: 10, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 1420, column: 46)
!8925 = !DILocation(line: 1421, column: 3, scope: !8924)
!8926 = !DILocation(line: 1421, column: 8, scope: !8924)
!8927 = !DILocation(line: 1422, column: 10, scope: !8924)
!8928 = !DILocation(line: 1422, column: 3, scope: !8924)
!8929 = !DILocation(line: 1422, column: 8, scope: !8924)
!8930 = !DILocation(line: 1423, column: 3, scope: !8924)
!8931 = !DILocation(line: 1424, column: 9, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 1424, column: 8)
!8933 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 1423, column: 13)
!8934 = !DILocation(line: 1424, column: 12, scope: !8932)
!8935 = !DILocation(line: 1424, column: 8, scope: !8933)
!8936 = !DILocation(line: 1424, column: 20, scope: !8932)
!8937 = !DILocation(line: 1425, column: 19, scope: !8933)
!8938 = !DILocation(line: 1425, column: 28, scope: !8933)
!8939 = !DILocation(line: 1425, column: 26, scope: !8933)
!8940 = !DILocation(line: 1425, column: 16, scope: !8933)
!8941 = !DILocation(line: 1425, column: 4, scope: !8933)
!8942 = !DILocation(line: 1425, column: 9, scope: !8933)
!8943 = !DILocation(line: 1426, column: 9, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 1426, column: 8)
!8945 = !DILocation(line: 1426, column: 18, scope: !8944)
!8946 = !DILocation(line: 1426, column: 27, scope: !8944)
!8947 = !DILocation(line: 1426, column: 36, scope: !8944)
!8948 = !DILocation(line: 1426, column: 42, scope: !8944)
!8949 = !DILocation(line: 1426, column: 48, scope: !8944)
!8950 = !DILocation(line: 1426, column: 55, scope: !8944)
!8951 = !DILocation(line: 1426, column: 8, scope: !8933)
!8952 = !DILocation(line: 1426, column: 72, scope: !8944)
!8953 = !DILocation(line: 1426, column: 63, scope: !8944)
!8954 = !DILocation(line: 1426, column: 70, scope: !8944)
!8955 = !DILocation(line: 1427, column: 72, scope: !8944)
!8956 = !DILocation(line: 1427, column: 63, scope: !8944)
!8957 = !DILocation(line: 1427, column: 70, scope: !8944)
!8958 = distinct !{!8958, !8930, !8959}
!8959 = !DILocation(line: 1428, column: 3, scope: !8924)
!8960 = !DILocation(line: 1432, column: 2, scope: !8678)
!8961 = !DILocation(line: 1433, column: 16, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 1432, column: 12)
!8963 = !DILocation(line: 1433, column: 22, scope: !8962)
!8964 = !DILocation(line: 1433, column: 27, scope: !8962)
!8965 = !DILocation(line: 1433, column: 3, scope: !8962)
!8966 = !DILocation(line: 1435, column: 8, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1435, column: 7)
!8968 = !DILocation(line: 1435, column: 11, scope: !8967)
!8969 = !DILocation(line: 1435, column: 7, scope: !8962)
!8970 = !DILocation(line: 1436, column: 4, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 1435, column: 19)
!8972 = !DILocation(line: 1439, column: 8, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1439, column: 7)
!8974 = !DILocation(line: 1439, column: 17, scope: !8973)
!8975 = !DILocation(line: 1439, column: 26, scope: !8973)
!8976 = !DILocation(line: 1439, column: 35, scope: !8973)
!8977 = !DILocation(line: 1439, column: 41, scope: !8973)
!8978 = !DILocation(line: 1439, column: 47, scope: !8973)
!8979 = !DILocation(line: 1439, column: 54, scope: !8973)
!8980 = !DILocation(line: 1439, column: 7, scope: !8962)
!8981 = !DILocation(line: 1440, column: 15, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 1439, column: 62)
!8983 = !DILocation(line: 1440, column: 21, scope: !8982)
!8984 = !DILocation(line: 1440, column: 4, scope: !8982)
!8985 = !DILocation(line: 1441, column: 3, scope: !8982)
!8986 = !DILocation(line: 1443, column: 15, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 1442, column: 8)
!8988 = !DILocation(line: 1443, column: 21, scope: !8987)
!8989 = !DILocation(line: 1443, column: 4, scope: !8987)
!8990 = distinct !{!8990, !8960, !8991}
!8991 = !DILocation(line: 1445, column: 2, scope: !8678)
!8992 = !DILocation(line: 1446, column: 1, scope: !8678)
!8993 = distinct !DISubprogram(name: "vnormal", scope: !3, file: !3, line: 1296, type: !8994, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{null, !3191, !4835, !1461}
!8996 = !DILocalVariable(name: "process", arg: 1, scope: !8993, file: !3, line: 1296, type: !3191)
!8997 = !DILocation(line: 1296, column: 30, scope: !8993)
!8998 = !DILocalVariable(name: "point", arg: 2, scope: !8993, file: !3, line: 1296, type: !4835)
!8999 = !DILocation(line: 1296, column: 51, scope: !8993)
!9000 = !DILocalVariable(name: "r_no", arg: 3, scope: !8993, file: !3, line: 1296, type: !1461)
!9001 = !DILocation(line: 1296, column: 67, scope: !8993)
!9002 = !DILocalVariable(name: "delta", scope: !8993, file: !3, line: 1298, type: !4836)
!9003 = !DILocation(line: 1298, column: 14, scope: !8993)
!9004 = !DILocation(line: 1298, column: 29, scope: !8993)
!9005 = !DILocation(line: 1298, column: 38, scope: !8993)
!9006 = !DILocation(line: 1298, column: 27, scope: !8993)
!9007 = !DILocalVariable(name: "f", scope: !8993, file: !3, line: 1299, type: !4836)
!9008 = !DILocation(line: 1299, column: 14, scope: !8993)
!9009 = !DILocation(line: 1299, column: 18, scope: !8993)
!9010 = !DILocation(line: 1299, column: 27, scope: !8993)
!9011 = !DILocation(line: 1299, column: 36, scope: !8993)
!9012 = !DILocation(line: 1299, column: 45, scope: !8993)
!9013 = !DILocation(line: 1299, column: 55, scope: !8993)
!9014 = !DILocation(line: 1299, column: 65, scope: !8993)
!9015 = !DILocation(line: 1301, column: 12, scope: !8993)
!9016 = !DILocation(line: 1301, column: 21, scope: !8993)
!9017 = !DILocation(line: 1301, column: 30, scope: !8993)
!9018 = !DILocation(line: 1301, column: 39, scope: !8993)
!9019 = !DILocation(line: 1301, column: 50, scope: !8993)
!9020 = !DILocation(line: 1301, column: 48, scope: !8993)
!9021 = !DILocation(line: 1301, column: 57, scope: !8993)
!9022 = !DILocation(line: 1301, column: 67, scope: !8993)
!9023 = !DILocation(line: 1301, column: 79, scope: !8993)
!9024 = !DILocation(line: 1301, column: 77, scope: !8993)
!9025 = !DILocation(line: 1301, column: 2, scope: !8993)
!9026 = !DILocation(line: 1301, column: 10, scope: !8993)
!9027 = !DILocation(line: 1302, column: 12, scope: !8993)
!9028 = !DILocation(line: 1302, column: 21, scope: !8993)
!9029 = !DILocation(line: 1302, column: 30, scope: !8993)
!9030 = !DILocation(line: 1302, column: 39, scope: !8993)
!9031 = !DILocation(line: 1302, column: 49, scope: !8993)
!9032 = !DILocation(line: 1302, column: 60, scope: !8993)
!9033 = !DILocation(line: 1302, column: 58, scope: !8993)
!9034 = !DILocation(line: 1302, column: 67, scope: !8993)
!9035 = !DILocation(line: 1302, column: 79, scope: !8993)
!9036 = !DILocation(line: 1302, column: 77, scope: !8993)
!9037 = !DILocation(line: 1302, column: 2, scope: !8993)
!9038 = !DILocation(line: 1302, column: 10, scope: !8993)
!9039 = !DILocation(line: 1303, column: 12, scope: !8993)
!9040 = !DILocation(line: 1303, column: 21, scope: !8993)
!9041 = !DILocation(line: 1303, column: 30, scope: !8993)
!9042 = !DILocation(line: 1303, column: 39, scope: !8993)
!9043 = !DILocation(line: 1303, column: 49, scope: !8993)
!9044 = !DILocation(line: 1303, column: 59, scope: !8993)
!9045 = !DILocation(line: 1303, column: 70, scope: !8993)
!9046 = !DILocation(line: 1303, column: 68, scope: !8993)
!9047 = !DILocation(line: 1303, column: 79, scope: !8993)
!9048 = !DILocation(line: 1303, column: 77, scope: !8993)
!9049 = !DILocation(line: 1303, column: 2, scope: !8993)
!9050 = !DILocation(line: 1303, column: 10, scope: !8993)
!9051 = !DILocation(line: 1306, column: 15, scope: !8993)
!9052 = !DILocation(line: 1306, column: 2, scope: !8993)
!9053 = !DILocation(line: 1327, column: 1, scope: !8993)
!9054 = distinct !DISubprogram(name: "addtovertices", scope: !3, file: !3, line: 1278, type: !9055, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!9055 = !DISubroutineType(types: !9056)
!9056 = !{null, !9057, !1695}
!9057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!9058 = !DILocalVariable(name: "vertices", arg: 1, scope: !9054, file: !3, line: 1278, type: !9057)
!9059 = !DILocation(line: 1278, column: 37, scope: !9054)
!9060 = !DILocalVariable(name: "v", arg: 2, scope: !9054, file: !3, line: 1278, type: !1695)
!9061 = !DILocation(line: 1278, column: 54, scope: !9054)
!9062 = !DILocation(line: 1280, column: 6, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 1280, column: 6)
!9064 = !DILocation(line: 1280, column: 16, scope: !9063)
!9065 = !DILocation(line: 1280, column: 25, scope: !9063)
!9066 = !DILocation(line: 1280, column: 35, scope: !9063)
!9067 = !DILocation(line: 1280, column: 22, scope: !9063)
!9068 = !DILocation(line: 1280, column: 6, scope: !9054)
!9069 = !DILocalVariable(name: "i", scope: !9070, file: !3, line: 1281, type: !78)
!9070 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1280, column: 40)
!9071 = !DILocation(line: 1281, column: 7, scope: !9070)
!9072 = !DILocalVariable(name: "newv", scope: !9070, file: !3, line: 1282, type: !1694)
!9073 = !DILocation(line: 1282, column: 11, scope: !9070)
!9074 = !DILocation(line: 1283, column: 19, scope: !9070)
!9075 = !DILocation(line: 1283, column: 29, scope: !9070)
!9076 = !DILocation(line: 1283, column: 35, scope: !9070)
!9077 = !DILocation(line: 1283, column: 51, scope: !9070)
!9078 = !DILocation(line: 1283, column: 61, scope: !9070)
!9079 = !DILocation(line: 1283, column: 49, scope: !9070)
!9080 = !DILocation(line: 1283, column: 3, scope: !9070)
!9081 = !DILocation(line: 1283, column: 13, scope: !9070)
!9082 = !DILocation(line: 1283, column: 17, scope: !9070)
!9083 = !DILocation(line: 1284, column: 21, scope: !9070)
!9084 = !DILocation(line: 1284, column: 33, scope: !9070)
!9085 = !DILocation(line: 1284, column: 43, scope: !9070)
!9086 = !DILocation(line: 1284, column: 47, scope: !9070)
!9087 = !DILocation(line: 1284, column: 10, scope: !9070)
!9088 = !DILocation(line: 1284, column: 8, scope: !9070)
!9089 = !DILocation(line: 1286, column: 10, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1286, column: 3)
!9091 = !DILocation(line: 1286, column: 8, scope: !9090)
!9092 = !DILocation(line: 1286, column: 15, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 1286, column: 3)
!9094 = !DILocation(line: 1286, column: 19, scope: !9093)
!9095 = !DILocation(line: 1286, column: 29, scope: !9093)
!9096 = !DILocation(line: 1286, column: 17, scope: !9093)
!9097 = !DILocation(line: 1286, column: 3, scope: !9090)
!9098 = !DILocation(line: 1286, column: 41, scope: !9093)
!9099 = !DILocation(line: 1286, column: 46, scope: !9093)
!9100 = !DILocation(line: 1286, column: 51, scope: !9093)
!9101 = !DILocation(line: 1286, column: 61, scope: !9093)
!9102 = !DILocation(line: 1286, column: 65, scope: !9093)
!9103 = !DILocation(line: 1286, column: 37, scope: !9093)
!9104 = !DILocation(line: 1286, column: 3, scope: !9093)
!9105 = distinct !{!9105, !9097, !9106}
!9106 = !DILocation(line: 1286, column: 66, scope: !9090)
!9107 = !DILocation(line: 1288, column: 7, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1288, column: 7)
!9109 = !DILocation(line: 1288, column: 17, scope: !9108)
!9110 = !DILocation(line: 1288, column: 21, scope: !9108)
!9111 = !DILocation(line: 1288, column: 7, scope: !9070)
!9112 = !DILocation(line: 1288, column: 30, scope: !9108)
!9113 = !DILocation(line: 1288, column: 40, scope: !9108)
!9114 = !DILocation(line: 1288, column: 50, scope: !9108)
!9115 = !DILocation(line: 1289, column: 19, scope: !9070)
!9116 = !DILocation(line: 1289, column: 3, scope: !9070)
!9117 = !DILocation(line: 1289, column: 13, scope: !9070)
!9118 = !DILocation(line: 1289, column: 17, scope: !9070)
!9119 = !DILocation(line: 1290, column: 2, scope: !9070)
!9120 = !DILocation(line: 1291, column: 2, scope: !9054)
!9121 = !DILocation(line: 1291, column: 12, scope: !9054)
!9122 = !DILocation(line: 1291, column: 16, scope: !9054)
!9123 = !DILocation(line: 1291, column: 26, scope: !9054)
!9124 = !DILocation(line: 1291, column: 31, scope: !9054)
!9125 = !DILocation(line: 1291, column: 37, scope: !9054)
!9126 = !DILocation(line: 1292, column: 1, scope: !9054)
!9127 = distinct !DISubprogram(name: "setedge", scope: !3, file: !3, line: 1200, type: !9128, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{null, !3191, !2892, !78, !78, !78, !78, !78, !78, !78}
!9130 = !DILocalVariable(name: "process", arg: 1, scope: !9127, file: !3, line: 1200, type: !3191)
!9131 = !DILocation(line: 1200, column: 30, scope: !9127)
!9132 = !DILocalVariable(name: "table", arg: 2, scope: !9127, file: !3, line: 1201, type: !2892)
!9133 = !DILocation(line: 1201, column: 31, scope: !9127)
!9134 = !DILocalVariable(name: "i1", arg: 3, scope: !9127, file: !3, line: 1202, type: !78)
!9135 = !DILocation(line: 1202, column: 25, scope: !9127)
!9136 = !DILocalVariable(name: "j1", arg: 4, scope: !9127, file: !3, line: 1202, type: !78)
!9137 = !DILocation(line: 1202, column: 33, scope: !9127)
!9138 = !DILocalVariable(name: "k1", arg: 5, scope: !9127, file: !3, line: 1203, type: !78)
!9139 = !DILocation(line: 1203, column: 25, scope: !9127)
!9140 = !DILocalVariable(name: "i2", arg: 6, scope: !9127, file: !3, line: 1203, type: !78)
!9141 = !DILocation(line: 1203, column: 33, scope: !9127)
!9142 = !DILocalVariable(name: "j2", arg: 7, scope: !9127, file: !3, line: 1204, type: !78)
!9143 = !DILocation(line: 1204, column: 25, scope: !9127)
!9144 = !DILocalVariable(name: "k2", arg: 8, scope: !9127, file: !3, line: 1204, type: !78)
!9145 = !DILocation(line: 1204, column: 33, scope: !9127)
!9146 = !DILocalVariable(name: "vid", arg: 9, scope: !9127, file: !3, line: 1205, type: !78)
!9147 = !DILocation(line: 1205, column: 25, scope: !9127)
!9148 = !DILocalVariable(name: "index", scope: !9127, file: !3, line: 1207, type: !7)
!9149 = !DILocation(line: 1207, column: 15, scope: !9127)
!9150 = !DILocalVariable(name: "newe", scope: !9127, file: !3, line: 1208, type: !1700)
!9151 = !DILocation(line: 1208, column: 12, scope: !9127)
!9152 = !DILocation(line: 1210, column: 6, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 1210, column: 6)
!9154 = !DILocation(line: 1210, column: 11, scope: !9153)
!9155 = !DILocation(line: 1210, column: 9, scope: !9153)
!9156 = !DILocation(line: 1210, column: 14, scope: !9153)
!9157 = !DILocation(line: 1210, column: 18, scope: !9153)
!9158 = !DILocation(line: 1210, column: 24, scope: !9153)
!9159 = !DILocation(line: 1210, column: 21, scope: !9153)
!9160 = !DILocation(line: 1210, column: 27, scope: !9153)
!9161 = !DILocation(line: 1210, column: 31, scope: !9153)
!9162 = !DILocation(line: 1210, column: 36, scope: !9153)
!9163 = !DILocation(line: 1210, column: 34, scope: !9153)
!9164 = !DILocation(line: 1210, column: 39, scope: !9153)
!9165 = !DILocation(line: 1210, column: 43, scope: !9153)
!9166 = !DILocation(line: 1210, column: 49, scope: !9153)
!9167 = !DILocation(line: 1210, column: 46, scope: !9153)
!9168 = !DILocation(line: 1210, column: 52, scope: !9153)
!9169 = !DILocation(line: 1210, column: 55, scope: !9153)
!9170 = !DILocation(line: 1210, column: 60, scope: !9153)
!9171 = !DILocation(line: 1210, column: 58, scope: !9153)
!9172 = !DILocation(line: 1210, column: 6, scope: !9127)
!9173 = !DILocalVariable(name: "t", scope: !9174, file: !3, line: 1211, type: !78)
!9174 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 1210, column: 67)
!9175 = !DILocation(line: 1211, column: 7, scope: !9174)
!9176 = !DILocation(line: 1211, column: 11, scope: !9174)
!9177 = !DILocation(line: 1212, column: 8, scope: !9174)
!9178 = !DILocation(line: 1212, column: 6, scope: !9174)
!9179 = !DILocation(line: 1213, column: 8, scope: !9174)
!9180 = !DILocation(line: 1213, column: 6, scope: !9174)
!9181 = !DILocation(line: 1214, column: 7, scope: !9174)
!9182 = !DILocation(line: 1214, column: 5, scope: !9174)
!9183 = !DILocation(line: 1215, column: 8, scope: !9174)
!9184 = !DILocation(line: 1215, column: 6, scope: !9174)
!9185 = !DILocation(line: 1216, column: 8, scope: !9174)
!9186 = !DILocation(line: 1216, column: 6, scope: !9174)
!9187 = !DILocation(line: 1217, column: 7, scope: !9174)
!9188 = !DILocation(line: 1217, column: 5, scope: !9174)
!9189 = !DILocation(line: 1218, column: 8, scope: !9174)
!9190 = !DILocation(line: 1218, column: 6, scope: !9174)
!9191 = !DILocation(line: 1219, column: 8, scope: !9174)
!9192 = !DILocation(line: 1219, column: 6, scope: !9174)
!9193 = !DILocation(line: 1220, column: 2, scope: !9174)
!9194 = !DILocation(line: 1221, column: 10, scope: !9127)
!9195 = !DILocation(line: 1221, column: 29, scope: !9127)
!9196 = !DILocation(line: 1221, column: 27, scope: !9127)
!9197 = !DILocation(line: 1221, column: 8, scope: !9127)
!9198 = !DILocation(line: 1222, column: 38, scope: !9127)
!9199 = !DILocation(line: 1222, column: 22, scope: !9127)
!9200 = !DILocation(line: 1222, column: 9, scope: !9127)
!9201 = !DILocation(line: 1222, column: 7, scope: !9127)
!9202 = !DILocation(line: 1223, column: 13, scope: !9127)
!9203 = !DILocation(line: 1223, column: 2, scope: !9127)
!9204 = !DILocation(line: 1223, column: 8, scope: !9127)
!9205 = !DILocation(line: 1223, column: 11, scope: !9127)
!9206 = !DILocation(line: 1224, column: 13, scope: !9127)
!9207 = !DILocation(line: 1224, column: 2, scope: !9127)
!9208 = !DILocation(line: 1224, column: 8, scope: !9127)
!9209 = !DILocation(line: 1224, column: 11, scope: !9127)
!9210 = !DILocation(line: 1225, column: 13, scope: !9127)
!9211 = !DILocation(line: 1225, column: 2, scope: !9127)
!9212 = !DILocation(line: 1225, column: 8, scope: !9127)
!9213 = !DILocation(line: 1225, column: 11, scope: !9127)
!9214 = !DILocation(line: 1226, column: 13, scope: !9127)
!9215 = !DILocation(line: 1226, column: 2, scope: !9127)
!9216 = !DILocation(line: 1226, column: 8, scope: !9127)
!9217 = !DILocation(line: 1226, column: 11, scope: !9127)
!9218 = !DILocation(line: 1227, column: 13, scope: !9127)
!9219 = !DILocation(line: 1227, column: 2, scope: !9127)
!9220 = !DILocation(line: 1227, column: 8, scope: !9127)
!9221 = !DILocation(line: 1227, column: 11, scope: !9127)
!9222 = !DILocation(line: 1228, column: 13, scope: !9127)
!9223 = !DILocation(line: 1228, column: 2, scope: !9127)
!9224 = !DILocation(line: 1228, column: 8, scope: !9127)
!9225 = !DILocation(line: 1228, column: 11, scope: !9127)
!9226 = !DILocation(line: 1229, column: 14, scope: !9127)
!9227 = !DILocation(line: 1229, column: 2, scope: !9127)
!9228 = !DILocation(line: 1229, column: 8, scope: !9127)
!9229 = !DILocation(line: 1229, column: 12, scope: !9127)
!9230 = !DILocation(line: 1230, column: 15, scope: !9127)
!9231 = !DILocation(line: 1230, column: 21, scope: !9127)
!9232 = !DILocation(line: 1230, column: 2, scope: !9127)
!9233 = !DILocation(line: 1230, column: 8, scope: !9127)
!9234 = !DILocation(line: 1230, column: 13, scope: !9127)
!9235 = !DILocation(line: 1231, column: 17, scope: !9127)
!9236 = !DILocation(line: 1231, column: 2, scope: !9127)
!9237 = !DILocation(line: 1231, column: 8, scope: !9127)
!9238 = !DILocation(line: 1231, column: 15, scope: !9127)
!9239 = !DILocation(line: 1232, column: 1, scope: !9127)
!9240 = distinct !DISubprogram(name: "normalize_v3", scope: !4832, file: !4832, line: 830, type: !9241, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{!141, !1461}
!9243 = !DILocalVariable(name: "n", arg: 1, scope: !9240, file: !4832, line: 830, type: !1461)
!9244 = !DILocation(line: 830, column: 34, scope: !9240)
!9245 = !DILocation(line: 832, column: 25, scope: !9240)
!9246 = !DILocation(line: 832, column: 28, scope: !9240)
!9247 = !DILocation(line: 832, column: 9, scope: !9240)
!9248 = !DILocation(line: 832, column: 2, scope: !9240)
!9249 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4832, file: !4832, line: 788, type: !9250, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!9250 = !DISubroutineType(types: !9251)
!9251 = !{!141, !1461, !4835}
!9252 = !DILocalVariable(name: "r", arg: 1, scope: !9249, file: !4832, line: 788, type: !1461)
!9253 = !DILocation(line: 788, column: 37, scope: !9249)
!9254 = !DILocalVariable(name: "a", arg: 2, scope: !9249, file: !4832, line: 788, type: !4835)
!9255 = !DILocation(line: 788, column: 55, scope: !9249)
!9256 = !DILocalVariable(name: "d", scope: !9249, file: !4832, line: 790, type: !141)
!9257 = !DILocation(line: 790, column: 8, scope: !9249)
!9258 = !DILocation(line: 790, column: 21, scope: !9249)
!9259 = !DILocation(line: 790, column: 24, scope: !9249)
!9260 = !DILocation(line: 790, column: 12, scope: !9249)
!9261 = !DILocation(line: 794, column: 6, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9249, file: !4832, line: 794, column: 6)
!9263 = !DILocation(line: 794, column: 8, scope: !9262)
!9264 = !DILocation(line: 794, column: 6, scope: !9249)
!9265 = !DILocation(line: 795, column: 13, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9262, file: !4832, line: 794, column: 20)
!9267 = !DILocation(line: 795, column: 7, scope: !9266)
!9268 = !DILocation(line: 795, column: 5, scope: !9266)
!9269 = !DILocation(line: 796, column: 15, scope: !9266)
!9270 = !DILocation(line: 796, column: 18, scope: !9266)
!9271 = !DILocation(line: 796, column: 28, scope: !9266)
!9272 = !DILocation(line: 796, column: 26, scope: !9266)
!9273 = !DILocation(line: 796, column: 3, scope: !9266)
!9274 = !DILocation(line: 797, column: 2, scope: !9266)
!9275 = !DILocation(line: 799, column: 11, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9262, file: !4832, line: 798, column: 7)
!9277 = !DILocation(line: 799, column: 3, scope: !9276)
!9278 = !DILocation(line: 800, column: 5, scope: !9276)
!9279 = !DILocation(line: 803, column: 9, scope: !9249)
!9280 = !DILocation(line: 803, column: 2, scope: !9249)
!9281 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4832, file: !4832, line: 399, type: !9282, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1719)
!9282 = !DISubroutineType(types: !9283)
!9283 = !{null, !1461, !4835, !141}
!9284 = !DILocalVariable(name: "r", arg: 1, scope: !9281, file: !4832, line: 399, type: !1461)
!9285 = !DILocation(line: 399, column: 32, scope: !9281)
!9286 = !DILocalVariable(name: "a", arg: 2, scope: !9281, file: !4832, line: 399, type: !4835)
!9287 = !DILocation(line: 399, column: 50, scope: !9281)
!9288 = !DILocalVariable(name: "f", arg: 3, scope: !9281, file: !4832, line: 399, type: !141)
!9289 = !DILocation(line: 399, column: 62, scope: !9281)
!9290 = !DILocation(line: 401, column: 9, scope: !9281)
!9291 = !DILocation(line: 401, column: 16, scope: !9281)
!9292 = !DILocation(line: 401, column: 14, scope: !9281)
!9293 = !DILocation(line: 401, column: 2, scope: !9281)
!9294 = !DILocation(line: 401, column: 7, scope: !9281)
!9295 = !DILocation(line: 402, column: 9, scope: !9281)
!9296 = !DILocation(line: 402, column: 16, scope: !9281)
!9297 = !DILocation(line: 402, column: 14, scope: !9281)
!9298 = !DILocation(line: 402, column: 2, scope: !9281)
!9299 = !DILocation(line: 402, column: 7, scope: !9281)
!9300 = !DILocation(line: 403, column: 9, scope: !9281)
!9301 = !DILocation(line: 403, column: 16, scope: !9281)
!9302 = !DILocation(line: 403, column: 14, scope: !9281)
!9303 = !DILocation(line: 403, column: 2, scope: !9281)
!9304 = !DILocation(line: 403, column: 7, scope: !9281)
!9305 = !DILocation(line: 404, column: 1, scope: !9281)
