; ModuleID = 'insn-modes.c'
source_filename = "insn-modes.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }

@.str = private unnamed_addr constant [5 x i8] c"VOID\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"BLK\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"CC\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"CCGC\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"CCGOC\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"CCNO\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"CCA\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"CCC\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"CCO\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"CCS\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"CCZ\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"CCFP\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"CCFPU\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"BI\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"QI\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"HI\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"SI\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"DI\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"TI\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"OI\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"QQ\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"HQ\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"SQ\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"DQ\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"TQ\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"UQQ\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"UHQ\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"USQ\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"UDQ\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"UTQ\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"HA\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"SA\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"DA\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"TA\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"UHA\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"USA\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"UDA\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"UTA\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"SF\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"DF\00", align 1
@.str.40 = private unnamed_addr constant [3 x i8] c"XF\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"TF\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"SD\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"DD\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"TD\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"CQI\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"CHI\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"CSI\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"CDI\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"CTI\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"COI\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"SC\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"DC\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c"XC\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"TC\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"V2QI\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"V4QI\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"V2HI\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"V1SI\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"V8QI\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"V4HI\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"V2SI\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"V1DI\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"V16QI\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"V8HI\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"V4SI\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"V2DI\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"V1TI\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"V32QI\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"V16HI\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"V8SI\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"V4DI\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"V2TI\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"V64QI\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"V32HI\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"V16SI\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"V8DI\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"V4TI\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"V2SF\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"V4SF\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"V2DF\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"V8SF\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"V4DF\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"V2TF\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"V16SF\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"V8DF\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"V4TF\00", align 1
@mode_name = dso_local constant [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0)], align 16, !dbg !0
@mode_class = dso_local constant [87 x i8] c"\00\00\01\01\01\01\01\01\01\01\01\01\01\02\02\02\02\02\02\02\04\04\04\04\04\05\05\05\05\05\06\06\06\06\07\07\07\07\08\08\08\08\09\09\09\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\11\11\11\11\11\11\11\11\11", align 16, !dbg !158
@mode_precision = dso_local constant [87 x i16] [i16 0, i16 0, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 32, i16 1, i16 8, i16 16, i16 32, i16 64, i16 128, i16 256, i16 8, i16 16, i16 32, i16 64, i16 128, i16 8, i16 16, i16 32, i16 64, i16 128, i16 16, i16 32, i16 64, i16 128, i16 16, i16 32, i16 64, i16 128, i16 32, i16 64, i16 80, i16 128, i16 32, i16 64, i16 128, i16 16, i16 32, i16 64, i16 128, i16 256, i16 512, i16 64, i16 128, i16 160, i16 256, i16 16, i16 32, i16 32, i16 32, i16 64, i16 64, i16 64, i16 64, i16 128, i16 128, i16 128, i16 128, i16 128, i16 256, i16 256, i16 256, i16 256, i16 256, i16 512, i16 512, i16 512, i16 512, i16 512, i16 64, i16 128, i16 128, i16 256, i16 256, i16 256, i16 512, i16 512, i16 512], align 16, !dbg !165
@mode_size = dso_local global [87 x i8] c"\00\00\04\04\04\04\04\04\04\04\04\04\04\01\01\02\04\08\10 \01\02\04\08\10\01\02\04\08\10\02\04\08\10\02\04\08\10\04\08\0C\10\04\08\10\02\04\08\10 @\08\10\18 \02\04\04\04\08\08\08\08\10\10\10\10\10     @@@@@\08\10\10   @@@", align 16, !dbg !170
@mode_nunits = dso_local constant [87 x i8] c"\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\02\02\02\02\02\02\02\02\02\02\02\04\02\01\08\04\02\01\10\08\04\02\01 \10\08\04\02@ \10\08\04\02\04\02\08\04\02\10\08\04", align 16, !dbg !173
@mode_wider = dso_local constant [87 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\0E\0F\10\11\12\13\00\15\16\17\18\00\1A\1B\1C\1D\00\1F !\00#$%\00'()\00+,\00./012\00456\0089:;<=>?@ABCDEFGHIJKLM\00OPQRSTUV\00", align 16, !dbg !175
@mode_2xwider = dso_local constant [87 x i8] c"\00\01\00\00\00\00\00\00\00\00\00\00\00\00\0F\10\11\12\13\00\15\16\17\18\00\1A\1B\1C\1D\00\1F !\00#$%\00')\00\00+,\00./012\0046\00\008;;;????DDDDDIIIII\00\00\00\00\00OQQTTT\00\00\00", align 16, !dbg !177
@mode_mask_array = dso_local constant [87 x i64] [i64 0, i64 0, i64 4294967295, i64 4294967295, i64 4294967295, i64 4294967295, i64 4294967295, i64 4294967295, i64 4294967295, i64 4294967295, i64 4294967295, i64 4294967295, i64 4294967295, i64 1, i64 255, i64 65535, i64 4294967295, i64 -1, i64 -1, i64 -1, i64 255, i64 65535, i64 4294967295, i64 -1, i64 -1, i64 255, i64 65535, i64 4294967295, i64 -1, i64 -1, i64 65535, i64 4294967295, i64 -1, i64 -1, i64 65535, i64 4294967295, i64 -1, i64 -1, i64 4294967295, i64 -1, i64 -1, i64 -1, i64 4294967295, i64 -1, i64 -1, i64 65535, i64 4294967295, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 65535, i64 4294967295, i64 4294967295, i64 4294967295, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1], align 16, !dbg !179
@mode_inner = dso_local constant [87 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0E\0F\10\11\12\13&'()\0E\0E\0F\10\0E\0F\10\11\0E\0F\10\11\12\0E\0F\10\11\12\0E\0F\10\11\12&&'&')&')", align 16, !dbg !184
@mode_base_align = dso_local global [87 x i8] c"\00\00\04\04\04\04\04\04\04\04\04\04\04\01\01\02\04\08\10 \01\02\04\08\10\01\02\04\08\10\02\04\08\10\02\04\08\10\04\08\04\10\04\08\10\01\02\04\08\10 \04\08\04\10\02\04\04\04\08\08\08\08\10\10\10\10\10     @@@@@\08\10\10   @@@", align 16, !dbg !186
@class_narrowest_mode = dso_local constant [18 x i8] c"\00\02\0E\00\14\19\1E\22&*-37\00\00\00\00N", align 16, !dbg !188
@ieee_single_format = external dso_local constant %struct.real_format, align 8
@ieee_double_format = external dso_local constant %struct.real_format, align 8
@ieee_extended_intel_96_format = external dso_local constant %struct.real_format, align 8
@ieee_quad_format = external dso_local constant %struct.real_format, align 8
@decimal_single_format = external dso_local constant %struct.real_format, align 8
@decimal_double_format = external dso_local constant %struct.real_format, align 8
@decimal_quad_format = external dso_local constant %struct.real_format, align 8
@real_format_for_mode = dso_local global [7 x %struct.real_format*] [%struct.real_format* @ieee_single_format, %struct.real_format* @ieee_double_format, %struct.real_format* @ieee_extended_intel_96_format, %struct.real_format* @ieee_quad_format, %struct.real_format* @decimal_single_format, %struct.real_format* @decimal_double_format, %struct.real_format* @decimal_quad_format], align 16, !dbg !193
@target_flags = external dso_local global i32, align 4
@ieee_extended_intel_128_format = external dso_local constant %struct.real_format, align 8
@mode_ibit = dso_local constant <{ [38 x i8], [49 x i8] }> <{ [38 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\10 @\08\10 @", [49 x i8] zeroinitializer }>, align 16, !dbg !246
@mode_fbit = dso_local constant <{ [38 x i8], [49 x i8] }> <{ [38 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\0F\1F?\7F\08\10 @\80\07\0F\1F?\08\10 @", [49 x i8] zeroinitializer }>, align 16, !dbg !248

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_adjust_machine_modes() #0 !dbg !259 {
entry:
  %s = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %s, metadata !263, metadata !DIExpression()), !dbg !266
  %0 = load i32, i32* @target_flags, align 4, !dbg !267
  %and = and i32 %0, 1, !dbg !267
  %cmp = icmp ne i32 %and, 0, !dbg !267
  %1 = zext i1 %cmp to i64, !dbg !267
  %cond = select i1 %cmp, i32 16, i32 12, !dbg !267
  %conv = sext i32 %cond to i64, !dbg !267
  store i64 %conv, i64* %s, align 8, !dbg !268
  %2 = load i64, i64* %s, align 8, !dbg !269
  %conv1 = trunc i64 %2 to i8, !dbg !269
  store i8 %conv1, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 40), align 8, !dbg !270
  %3 = load i64, i64* %s, align 8, !dbg !271
  %4 = load i64, i64* %s, align 8, !dbg !272
  %neg = xor i64 %4, -1, !dbg !273
  %add = add i64 %neg, 1, !dbg !274
  %and2 = and i64 %3, %add, !dbg !275
  %conv3 = trunc i64 %and2 to i8, !dbg !271
  store i8 %conv3, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_base_align, i64 0, i64 40), align 8, !dbg !276
  %5 = load i64, i64* %s, align 8, !dbg !277
  %mul = mul i64 2, %5, !dbg !278
  %conv4 = trunc i64 %mul to i8, !dbg !279
  store i8 %conv4, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 53), align 1, !dbg !280
  %6 = load i64, i64* %s, align 8, !dbg !281
  %7 = load i64, i64* %s, align 8, !dbg !282
  %neg5 = xor i64 %7, -1, !dbg !283
  %add6 = add i64 %neg5, 1, !dbg !284
  %and7 = and i64 %6, %add6, !dbg !285
  %conv8 = trunc i64 %and7 to i8, !dbg !281
  store i8 %conv8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_base_align, i64 0, i64 53), align 1, !dbg !286
  %8 = load i32, i32* @target_flags, align 4, !dbg !287
  %and9 = and i32 %8, 1, !dbg !287
  %cmp10 = icmp ne i32 %and9, 0, !dbg !287
  %9 = zext i1 %cmp10 to i64, !dbg !287
  %cond12 = select i1 %cmp10, i32 16, i32 4, !dbg !287
  %conv13 = sext i32 %cond12 to i64, !dbg !287
  store i64 %conv13, i64* %s, align 8, !dbg !288
  %10 = load i64, i64* %s, align 8, !dbg !289
  %conv14 = trunc i64 %10 to i8, !dbg !289
  store i8 %conv14, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_base_align, i64 0, i64 40), align 8, !dbg !290
  %11 = load i64, i64* %s, align 8, !dbg !291
  %conv15 = trunc i64 %11 to i8, !dbg !291
  store i8 %conv15, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_base_align, i64 0, i64 53), align 1, !dbg !292
  %12 = load i32, i32* @target_flags, align 4, !dbg !293
  %and16 = and i32 %12, 1, !dbg !293
  %cmp17 = icmp ne i32 %and16, 0, !dbg !293
  %13 = zext i1 %cmp17 to i64, !dbg !293
  %cond19 = select i1 %cmp17, %struct.real_format* @ieee_extended_intel_128_format, %struct.real_format* @ieee_extended_intel_96_format, !dbg !293
  %14 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_class, i64 0, i64 40), align 8, !dbg !294
  %conv20 = zext i8 %14 to i32, !dbg !294
  %cmp21 = icmp eq i32 %conv20, 9, !dbg !294
  %15 = zext i1 %cmp21 to i64, !dbg !294
  %cond23 = select i1 %cmp21, i32 2, i32 2, !dbg !294
  %idxprom = sext i32 %cond23 to i64, !dbg !294
  %arrayidx = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom, !dbg !294
  store %struct.real_format* %cond19, %struct.real_format** %arrayidx, align 8, !dbg !295
  ret void, !dbg !296
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!255, !256, !257}
!llvm.ident = !{!258}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mode_name", scope: !2, file: !3, line: 11, type: !250, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !156, globals: !157, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "insn-modes.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !135, line: 36, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./machmode.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155}
!137 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!156 = !{!134}
!157 = !{!0, !158, !165, !170, !173, !175, !177, !179, !184, !186, !188, !193, !246, !248}
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(name: "mode_class", scope: !2, file: !3, line: 102, type: !160, isLocal: false, isDefinition: true)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 696, elements: !163)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!163 = !{!164}
!164 = !DISubrange(count: 87)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "mode_precision", scope: !2, file: !3, line: 193, type: !167, isLocal: false, isDefinition: true)
!167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 1392, elements: !163)
!168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!169 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!170 = !DIGlobalVariableExpression(var: !171, expr: !DIExpression())
!171 = distinct !DIGlobalVariable(name: "mode_size", scope: !2, file: !3, line: 284, type: !172, isLocal: false, isDefinition: true)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 696, elements: !163)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "mode_nunits", scope: !2, file: !3, line: 375, type: !160, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "mode_wider", scope: !2, file: !3, line: 466, type: !160, isLocal: false, isDefinition: true)
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(name: "mode_2xwider", scope: !2, file: !3, line: 557, type: !160, isLocal: false, isDefinition: true)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(name: "mode_mask_array", scope: !2, file: !3, line: 648, type: !181, isLocal: false, isDefinition: true)
!181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 5568, elements: !163)
!182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !183)
!183 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!184 = !DIGlobalVariableExpression(var: !185, expr: !DIExpression())
!185 = distinct !DIGlobalVariable(name: "mode_inner", scope: !2, file: !3, line: 745, type: !160, isLocal: false, isDefinition: true)
!186 = !DIGlobalVariableExpression(var: !187, expr: !DIExpression())
!187 = distinct !DIGlobalVariable(name: "mode_base_align", scope: !2, file: !3, line: 836, type: !172, isLocal: false, isDefinition: true)
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(name: "class_narrowest_mode", scope: !2, file: !3, line: 927, type: !190, isLocal: false, isDefinition: true)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 144, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 18)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "real_format_for_mode", scope: !2, file: !3, line: 950, type: !195, isLocal: false, isDefinition: true)
!195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 448, elements: !244)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_format", file: !199, line: 124, size: 448, elements: !200)
!199 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!200 = !{!201, !221, !228, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "encode", scope: !198, file: !199, line: 127, baseType: !202, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DISubroutineType(types: !204)
!204 = !{null, !196, !205, !207}
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !199, line: 52, size: 256, elements: !210)
!210 = !{!211, !212, !213, !214, !215, !216, !217}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !209, file: !199, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !209, file: !199, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !209, file: !199, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !209, file: !199, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !209, file: !199, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !209, file: !199, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !209, file: !199, line: 62, baseType: !218, size: 192, offset: 64)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 192, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 3)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !198, file: !199, line: 129, baseType: !222, size: 64, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DISubroutineType(types: !224)
!224 = !{null, !196, !225, !226}
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !206)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !198, file: !199, line: 133, baseType: !229, size: 32, offset: 128)
!229 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !198, file: !199, line: 136, baseType: !229, size: 32, offset: 160)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "pnan", scope: !198, file: !199, line: 139, baseType: !229, size: 32, offset: 192)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "emin", scope: !198, file: !199, line: 142, baseType: !229, size: 32, offset: 224)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "emax", scope: !198, file: !199, line: 145, baseType: !229, size: 32, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "signbit_ro", scope: !198, file: !199, line: 149, baseType: !229, size: 32, offset: 288)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "signbit_rw", scope: !198, file: !199, line: 153, baseType: !229, size: 32, offset: 320)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "round_towards_zero", scope: !198, file: !199, line: 156, baseType: !162, size: 8, offset: 352)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "has_sign_dependent_rounding", scope: !198, file: !199, line: 157, baseType: !162, size: 8, offset: 360)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "has_nans", scope: !198, file: !199, line: 160, baseType: !162, size: 8, offset: 368)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "has_inf", scope: !198, file: !199, line: 161, baseType: !162, size: 8, offset: 376)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "has_denorm", scope: !198, file: !199, line: 162, baseType: !162, size: 8, offset: 384)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "has_signed_zero", scope: !198, file: !199, line: 163, baseType: !162, size: 8, offset: 392)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "qnan_msb_set", scope: !198, file: !199, line: 164, baseType: !162, size: 8, offset: 400)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "canonical_nan_lsbs_set", scope: !198, file: !199, line: 165, baseType: !162, size: 8, offset: 408)
!244 = !{!245}
!245 = !DISubrange(count: 7)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "mode_ibit", scope: !2, file: !3, line: 982, type: !160, isLocal: false, isDefinition: true)
!248 = !DIGlobalVariableExpression(var: !249, expr: !DIExpression())
!249 = distinct !DIGlobalVariable(name: "mode_fbit", scope: !2, file: !3, line: 1073, type: !160, isLocal: false, isDefinition: true)
!250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !251, size: 5568, elements: !163)
!251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!254 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!255 = !{i32 7, !"Dwarf Version", i32 4}
!256 = !{i32 2, !"Debug Info Version", i32 3}
!257 = !{i32 1, !"wchar_size", i32 4}
!258 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!259 = distinct !DISubprogram(name: "init_adjust_machine_modes", scope: !3, file: !3, line: 962, type: !260, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !262)
!260 = !DISubroutineType(types: !261)
!261 = !{null}
!262 = !{}
!263 = !DILocalVariable(name: "s", scope: !259, file: !3, line: 964, type: !264)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !265, line: 46, baseType: !183)
!265 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!266 = !DILocation(line: 964, column: 10, scope: !259)
!267 = !DILocation(line: 967, column: 7, scope: !259)
!268 = !DILocation(line: 967, column: 5, scope: !259)
!269 = !DILocation(line: 968, column: 23, scope: !259)
!270 = !DILocation(line: 968, column: 21, scope: !259)
!271 = !DILocation(line: 969, column: 29, scope: !259)
!272 = !DILocation(line: 969, column: 35, scope: !259)
!273 = !DILocation(line: 969, column: 34, scope: !259)
!274 = !DILocation(line: 969, column: 37, scope: !259)
!275 = !DILocation(line: 969, column: 31, scope: !259)
!276 = !DILocation(line: 969, column: 27, scope: !259)
!277 = !DILocation(line: 970, column: 25, scope: !259)
!278 = !DILocation(line: 970, column: 24, scope: !259)
!279 = !DILocation(line: 970, column: 23, scope: !259)
!280 = !DILocation(line: 970, column: 21, scope: !259)
!281 = !DILocation(line: 971, column: 29, scope: !259)
!282 = !DILocation(line: 971, column: 35, scope: !259)
!283 = !DILocation(line: 971, column: 34, scope: !259)
!284 = !DILocation(line: 971, column: 37, scope: !259)
!285 = !DILocation(line: 971, column: 31, scope: !259)
!286 = !DILocation(line: 971, column: 27, scope: !259)
!287 = !DILocation(line: 974, column: 7, scope: !259)
!288 = !DILocation(line: 974, column: 5, scope: !259)
!289 = !DILocation(line: 975, column: 29, scope: !259)
!290 = !DILocation(line: 975, column: 27, scope: !259)
!291 = !DILocation(line: 976, column: 29, scope: !259)
!292 = !DILocation(line: 976, column: 27, scope: !259)
!293 = !DILocation(line: 979, column: 32, scope: !259)
!294 = !DILocation(line: 979, column: 3, scope: !259)
!295 = !DILocation(line: 979, column: 29, scope: !259)
!296 = !DILocation(line: 980, column: 1, scope: !259)
