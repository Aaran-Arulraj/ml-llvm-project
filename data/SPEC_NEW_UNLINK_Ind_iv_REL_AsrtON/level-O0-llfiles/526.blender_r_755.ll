; ModuleID = 'blender/source/blender/editors/sculpt_paint/paint_image_2d.c'
source_filename = "blender/source/blender/editors/sculpt_paint/paint_image_2d.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ImagePaintState = type { %struct.BrushPainter*, %struct.SpaceImage*, %struct.View2D*, %struct.Scene*, %struct.bScreen*, %struct.ImagePool*, %struct.Brush*, i16, i16, %struct.Image*, %struct.ImBuf*, %struct.ImBuf*, i8*, i8*, i8, %struct.Object*, i32, [2 x float], i32, i8, %struct.BlurKernel* }
%struct.BrushPainter = type { %struct.Scene*, %struct.Brush*, [2 x float], [2 x float], i16, %struct.ImagePool*, %struct.rctf, %struct.rctf, %struct.BrushPainterCache }
%struct.rctf = type { float, float, float, float }
%struct.BrushPainterCache = type { i8, i8, i8, i8, i8, i32, float, float, float, %struct.ImBuf*, %struct.ImBuf*, i16*, i16*, i16*, i32, i32 }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.ListBase = type { i8*, i8* }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.bGPdata = type opaque
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.Mask = type opaque
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.SmoothView2DStore = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Ipo = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.ImagePool = type opaque
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type opaque
%struct.MVert = type opaque
%struct.MPoly = type opaque
%struct.MLoop = type opaque
%struct.KeyBlock = type opaque
%struct.MeshElemMap = type opaque
%struct.BMesh = type opaque
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.BlurKernel = type { float*, i32, i32, i32 }
%struct.ImagePaintRegion = type { i32, i32, i32, i32, i32, i32 }
%struct.bContext = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.uiLayout = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.ARegionType = type opaque
%struct.BLI_Stack = type opaque
%struct.ColorManagedDisplay = type opaque

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [16 x i8] c"ImagePaintState\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"Image requires 4 color channels to paint\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"Packed MultiLayer files cannot be painted\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@__func__.paint_2d_bucket_fill = private unnamed_addr constant [21 x i8] c"paint_2d_bucket_fill\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"bucket_fill_bitmap\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.4 = private unnamed_addr constant [19 x i8] c"brush_painter_mask\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"BrushPainter\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @paint_2d_stroke(i8* %ps, float* %prev_mval, float* %mval, i8 zeroext %eraser, float %pressure, float %distance, float %size) #0 !dbg !2447 {
entry:
  %ps.addr = alloca i8*, align 8
  %prev_mval.addr = alloca float*, align 8
  %mval.addr = alloca float*, align 8
  %eraser.addr = alloca i8, align 1
  %pressure.addr = alloca float, align 4
  %distance.addr = alloca float, align 4
  %size.addr = alloca float, align 4
  %newuv = alloca [2 x float], align 4
  %olduv = alloca [2 x float], align 4
  %s = alloca %struct.ImagePaintState*, align 8
  %painter = alloca %struct.BrushPainter*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %is_data = alloca i8, align 1
  %startuv = alloca [2 x float], align 4
  store i8* %ps, i8** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ps.addr, metadata !2454, metadata !DIExpression()), !dbg !2455
  store float* %prev_mval, float** %prev_mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %prev_mval.addr, metadata !2456, metadata !DIExpression()), !dbg !2457
  store float* %mval, float** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval.addr, metadata !2458, metadata !DIExpression()), !dbg !2459
  store i8 %eraser, i8* %eraser.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %eraser.addr, metadata !2460, metadata !DIExpression()), !dbg !2461
  store float %pressure, float* %pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pressure.addr, metadata !2462, metadata !DIExpression()), !dbg !2463
  store float %distance, float* %distance.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distance.addr, metadata !2464, metadata !DIExpression()), !dbg !2465
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !2466, metadata !DIExpression()), !dbg !2467
  call void @llvm.dbg.declare(metadata [2 x float]* %newuv, metadata !2468, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.declare(metadata [2 x float]* %olduv, metadata !2470, metadata !DIExpression()), !dbg !2471
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s, metadata !2472, metadata !DIExpression()), !dbg !2473
  %0 = load i8*, i8** %ps.addr, align 8, !dbg !2474
  %1 = bitcast i8* %0 to %struct.ImagePaintState*, !dbg !2474
  store %struct.ImagePaintState* %1, %struct.ImagePaintState** %s, align 8, !dbg !2473
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter, metadata !2475, metadata !DIExpression()), !dbg !2476
  %2 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2477
  %painter1 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %2, i32 0, i32 0, !dbg !2478
  %3 = load %struct.BrushPainter*, %struct.BrushPainter** %painter1, align 8, !dbg !2478
  store %struct.BrushPainter* %3, %struct.BrushPainter** %painter, align 8, !dbg !2476
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !2479, metadata !DIExpression()), !dbg !2480
  %4 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2481
  %image = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %4, i32 0, i32 9, !dbg !2482
  %5 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !2482
  %6 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2483
  %sima = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %6, i32 0, i32 1, !dbg !2484
  %7 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !2484
  %tobool = icmp ne %struct.SpaceImage* %7, null, !dbg !2483
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2483

cond.true:                                        ; preds = %entry
  %8 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2485
  %sima2 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %8, i32 0, i32 1, !dbg !2486
  %9 = load %struct.SpaceImage*, %struct.SpaceImage** %sima2, align 8, !dbg !2486
  %iuser = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %9, i32 0, i32 6, !dbg !2487
  br label %cond.end, !dbg !2483

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2483

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ImageUser* [ %iuser, %cond.true ], [ null, %cond.false ], !dbg !2483
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %5, %struct.ImageUser* %cond, i8** null), !dbg !2488
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !2480
  call void @llvm.dbg.declare(metadata i8* %is_data, metadata !2489, metadata !DIExpression()), !dbg !2490
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2491
  %tobool3 = icmp ne %struct.ImBuf* %10, null, !dbg !2491
  br i1 %tobool3, label %land.rhs, label %land.end, !dbg !2492

land.rhs:                                         ; preds = %cond.end
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2493
  %colormanage_flag = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 38, !dbg !2494
  %12 = load i32, i32* %colormanage_flag, align 8, !dbg !2494
  %and = and i32 %12, 1, !dbg !2495
  %tobool4 = icmp ne i32 %and, 0, !dbg !2492
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %13 = phi i1 [ false, %cond.end ], [ %tobool4, %land.rhs ], !dbg !2496
  %land.ext = zext i1 %13 to i32, !dbg !2492
  %conv = trunc i32 %land.ext to i8, !dbg !2497
  store i8 %conv, i8* %is_data, align 1, !dbg !2490
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2498
  %tobool5 = icmp ne %struct.ImBuf* %14, null, !dbg !2498
  br i1 %tobool5, label %if.end, label %if.then, !dbg !2500

if.then:                                          ; preds = %land.end
  br label %return, !dbg !2501

if.end:                                           ; preds = %land.end
  %15 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2502
  %brush = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %15, i32 0, i32 6, !dbg !2503
  %16 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2503
  %blend = getelementptr inbounds %struct.Brush, %struct.Brush* %16, i32 0, i32 12, !dbg !2504
  %17 = load i16, i16* %blend, align 4, !dbg !2504
  %18 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2505
  %blend6 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %18, i32 0, i32 8, !dbg !2506
  store i16 %17, i16* %blend6, align 2, !dbg !2507
  %19 = load i8, i8* %eraser.addr, align 1, !dbg !2508
  %tobool7 = icmp ne i8 %19, 0, !dbg !2508
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !2510

if.then8:                                         ; preds = %if.end
  %20 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2511
  %blend9 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %20, i32 0, i32 8, !dbg !2512
  store i16 6, i16* %blend9, align 2, !dbg !2513
  br label %if.end10, !dbg !2511

if.end10:                                         ; preds = %if.then8, %if.end
  %21 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2514
  %v2d = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %21, i32 0, i32 2, !dbg !2515
  %22 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !2515
  %23 = load float*, float** %mval.addr, align 8, !dbg !2516
  %arrayidx = getelementptr inbounds float, float* %23, i64 0, !dbg !2516
  %24 = load float, float* %arrayidx, align 4, !dbg !2516
  %25 = load float*, float** %mval.addr, align 8, !dbg !2517
  %arrayidx11 = getelementptr inbounds float, float* %25, i64 1, !dbg !2517
  %26 = load float, float* %arrayidx11, align 4, !dbg !2517
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %newuv, i64 0, i64 0, !dbg !2518
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %newuv, i64 0, i64 1, !dbg !2519
  call void @UI_view2d_region_to_view(%struct.View2D* %22, float %24, float %26, float* %arrayidx12, float* %arrayidx13), !dbg !2520
  %27 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2521
  %v2d14 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %27, i32 0, i32 2, !dbg !2522
  %28 = load %struct.View2D*, %struct.View2D** %v2d14, align 8, !dbg !2522
  %29 = load float*, float** %prev_mval.addr, align 8, !dbg !2523
  %arrayidx15 = getelementptr inbounds float, float* %29, i64 0, !dbg !2523
  %30 = load float, float* %arrayidx15, align 4, !dbg !2523
  %31 = load float*, float** %prev_mval.addr, align 8, !dbg !2524
  %arrayidx16 = getelementptr inbounds float, float* %31, i64 1, !dbg !2524
  %32 = load float, float* %arrayidx16, align 4, !dbg !2524
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %olduv, i64 0, i64 0, !dbg !2525
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %olduv, i64 0, i64 1, !dbg !2526
  call void @UI_view2d_region_to_view(%struct.View2D* %28, float %30, float %32, float* %arrayidx17, float* %arrayidx18), !dbg !2527
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2528
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %33, i32 0, i32 2, !dbg !2529
  %34 = load i32, i32* %x, align 8, !dbg !2529
  %conv19 = sitofp i32 %34 to float, !dbg !2528
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %newuv, i64 0, i64 0, !dbg !2530
  %35 = load float, float* %arrayidx20, align 4, !dbg !2531
  %mul = fmul float %35, %conv19, !dbg !2531
  store float %mul, float* %arrayidx20, align 4, !dbg !2531
  %36 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2532
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %36, i32 0, i32 3, !dbg !2533
  %37 = load i32, i32* %y, align 4, !dbg !2533
  %conv21 = sitofp i32 %37 to float, !dbg !2532
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %newuv, i64 0, i64 1, !dbg !2534
  %38 = load float, float* %arrayidx22, align 4, !dbg !2535
  %mul23 = fmul float %38, %conv21, !dbg !2535
  store float %mul23, float* %arrayidx22, align 4, !dbg !2535
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2536
  %x24 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %39, i32 0, i32 2, !dbg !2537
  %40 = load i32, i32* %x24, align 8, !dbg !2537
  %conv25 = sitofp i32 %40 to float, !dbg !2536
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %olduv, i64 0, i64 0, !dbg !2538
  %41 = load float, float* %arrayidx26, align 4, !dbg !2539
  %mul27 = fmul float %41, %conv25, !dbg !2539
  store float %mul27, float* %arrayidx26, align 4, !dbg !2539
  %42 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2540
  %y28 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %42, i32 0, i32 3, !dbg !2541
  %43 = load i32, i32* %y28, align 4, !dbg !2541
  %conv29 = sitofp i32 %43 to float, !dbg !2540
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %olduv, i64 0, i64 1, !dbg !2542
  %44 = load float, float* %arrayidx30, align 4, !dbg !2543
  %mul31 = fmul float %44, %conv29, !dbg !2543
  store float %mul31, float* %arrayidx30, align 4, !dbg !2543
  %45 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2544
  %firsttouch = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %45, i32 0, i32 4, !dbg !2546
  %46 = load i16, i16* %firsttouch, align 8, !dbg !2546
  %tobool32 = icmp ne i16 %46, 0, !dbg !2544
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !2547

if.then33:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata [2 x float]* %startuv, metadata !2548, metadata !DIExpression()), !dbg !2550
  %47 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2551
  %v2d34 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %47, i32 0, i32 2, !dbg !2552
  %48 = load %struct.View2D*, %struct.View2D** %v2d34, align 8, !dbg !2552
  %arrayidx35 = getelementptr inbounds [2 x float], [2 x float]* %startuv, i64 0, i64 0, !dbg !2553
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %startuv, i64 0, i64 1, !dbg !2554
  call void @UI_view2d_region_to_view(%struct.View2D* %48, float 0.000000e+00, float 0.000000e+00, float* %arrayidx35, float* %arrayidx36), !dbg !2555
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %startuv, i64 0, i64 0, !dbg !2556
  %49 = load float, float* %arrayidx37, align 4, !dbg !2556
  %50 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2557
  %x38 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %50, i32 0, i32 2, !dbg !2558
  %51 = load i32, i32* %x38, align 8, !dbg !2558
  %conv39 = sitofp i32 %51 to float, !dbg !2557
  %mul40 = fmul float %49, %conv39, !dbg !2559
  %52 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2560
  %startpaintpos = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %52, i32 0, i32 3, !dbg !2561
  %arrayidx41 = getelementptr inbounds [2 x float], [2 x float]* %startpaintpos, i64 0, i64 0, !dbg !2560
  store float %mul40, float* %arrayidx41, align 8, !dbg !2562
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %startuv, i64 0, i64 1, !dbg !2563
  %53 = load float, float* %arrayidx42, align 4, !dbg !2563
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2564
  %y43 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 3, !dbg !2565
  %55 = load i32, i32* %y43, align 4, !dbg !2565
  %conv44 = sitofp i32 %55 to float, !dbg !2564
  %mul45 = fmul float %53, %conv44, !dbg !2566
  %56 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2567
  %startpaintpos46 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %56, i32 0, i32 3, !dbg !2568
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %startpaintpos46, i64 0, i64 1, !dbg !2567
  store float %mul45, float* %arrayidx47, align 4, !dbg !2569
  %57 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2570
  %firsttouch48 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %57, i32 0, i32 4, !dbg !2571
  store i16 0, i16* %firsttouch48, align 8, !dbg !2572
  %58 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2573
  %lastpaintpos = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %58, i32 0, i32 2, !dbg !2574
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %lastpaintpos, i64 0, i64 0, !dbg !2573
  %arraydecay49 = getelementptr inbounds [2 x float], [2 x float]* %newuv, i64 0, i64 0, !dbg !2575
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay49), !dbg !2576
  br label %if.end53, !dbg !2577

if.else:                                          ; preds = %if.end10
  %59 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2578
  %lastpaintpos50 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %59, i32 0, i32 2, !dbg !2580
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %lastpaintpos50, i64 0, i64 0, !dbg !2578
  %arraydecay52 = getelementptr inbounds [2 x float], [2 x float]* %olduv, i64 0, i64 0, !dbg !2581
  call void @copy_v2_v2(float* %arraydecay51, float* %arraydecay52), !dbg !2582
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then33
  %60 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2583
  %61 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2584
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %61, i32 0, i32 9, !dbg !2585
  %62 = load float*, float** %rect_float, align 8, !dbg !2585
  %cmp = icmp ne float* %62, null, !dbg !2586
  %conv54 = zext i1 %cmp to i32, !dbg !2586
  %conv55 = trunc i32 %conv54 to i8, !dbg !2587
  %63 = load i8, i8* %is_data, align 1, !dbg !2588
  %tobool56 = icmp ne i8 %63, 0, !dbg !2589
  %lnot = xor i1 %tobool56, true, !dbg !2589
  %lnot.ext = zext i1 %lnot to i32, !dbg !2589
  %conv57 = trunc i32 %lnot.ext to i8, !dbg !2589
  call void @brush_painter_2d_require_imbuf(%struct.BrushPainter* %60, i8 zeroext %conv55, i8 zeroext %conv57), !dbg !2590
  %64 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2591
  %65 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2592
  %arraydecay58 = getelementptr inbounds [2 x float], [2 x float]* %newuv, i64 0, i64 0, !dbg !2593
  %66 = load float*, float** %mval.addr, align 8, !dbg !2594
  %67 = load float, float* %pressure.addr, align 4, !dbg !2595
  %68 = load float, float* %distance.addr, align 4, !dbg !2596
  %69 = load float, float* %size.addr, align 4, !dbg !2597
  call void @brush_painter_2d_refresh_cache(%struct.ImagePaintState* %64, %struct.BrushPainter* %65, float* %arraydecay58, float* %66, float %67, float %68, float %69), !dbg !2598
  %70 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2599
  %71 = bitcast %struct.ImagePaintState* %70 to i8*, !dbg !2599
  %72 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2601
  %cache = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %72, i32 0, i32 8, !dbg !2602
  %ibuf59 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache, i32 0, i32 9, !dbg !2603
  %73 = load %struct.ImBuf*, %struct.ImBuf** %ibuf59, align 8, !dbg !2603
  %74 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2604
  %cache60 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %74, i32 0, i32 8, !dbg !2605
  %curve_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache60, i32 0, i32 11, !dbg !2606
  %75 = load i16*, i16** %curve_mask, align 8, !dbg !2606
  %76 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !2607
  %cache61 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %76, i32 0, i32 8, !dbg !2608
  %tex_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache61, i32 0, i32 12, !dbg !2609
  %77 = load i16*, i16** %tex_mask, align 8, !dbg !2609
  %arraydecay62 = getelementptr inbounds [2 x float], [2 x float]* %olduv, i64 0, i64 0, !dbg !2610
  %arraydecay63 = getelementptr inbounds [2 x float], [2 x float]* %newuv, i64 0, i64 0, !dbg !2611
  %call64 = call i32 @paint_2d_op(i8* %71, %struct.ImBuf* %73, i16* %75, i16* %77, float* %arraydecay62, float* %arraydecay63), !dbg !2612
  %tobool65 = icmp ne i32 %call64, 0, !dbg !2612
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !2613

if.then66:                                        ; preds = %if.end53
  %78 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2614
  %need_redraw = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %78, i32 0, i32 19, !dbg !2615
  store i8 1, i8* %need_redraw, align 8, !dbg !2616
  br label %if.end67, !dbg !2614

if.end67:                                         ; preds = %if.then66, %if.end53
  %79 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !2617
  %image68 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %79, i32 0, i32 9, !dbg !2618
  %80 = load %struct.Image*, %struct.Image** %image68, align 8, !dbg !2618
  %81 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2619
  call void @BKE_image_release_ibuf(%struct.Image* %80, %struct.ImBuf* %81, i8* null), !dbg !2620
  br label %return, !dbg !2621

return:                                           ; preds = %if.end67, %if.then
  ret void, !dbg !2621
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image*, %struct.ImageUser*, i8**) #2

declare dso_local void @UI_view2d_region_to_view(%struct.View2D*, float, float, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !2622 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2626, metadata !DIExpression()), !dbg !2627
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !2628, metadata !DIExpression()), !dbg !2629
  %0 = load float*, float** %a.addr, align 8, !dbg !2630
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !2630
  %1 = load float, float* %arrayidx, align 4, !dbg !2630
  %2 = load float*, float** %r.addr, align 8, !dbg !2631
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !2631
  store float %1, float* %arrayidx1, align 4, !dbg !2632
  %3 = load float*, float** %a.addr, align 8, !dbg !2633
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !2633
  %4 = load float, float* %arrayidx2, align 4, !dbg !2633
  %5 = load float*, float** %r.addr, align 8, !dbg !2634
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !2634
  store float %4, float* %arrayidx3, align 4, !dbg !2635
  ret void, !dbg !2636
}

; Function Attrs: noinline nounwind uwtable
define internal void @brush_painter_2d_require_imbuf(%struct.BrushPainter* %painter, i8 zeroext %use_float, i8 zeroext %use_color_correction) #0 !dbg !2637 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %use_float.addr = alloca i8, align 1
  %use_color_correction.addr = alloca i8, align 1
  %brush = alloca %struct.Brush*, align 8
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !2640, metadata !DIExpression()), !dbg !2641
  store i8 %use_float, i8* %use_float.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_float.addr, metadata !2642, metadata !DIExpression()), !dbg !2643
  store i8 %use_color_correction, i8* %use_color_correction.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_color_correction.addr, metadata !2644, metadata !DIExpression()), !dbg !2645
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !2646, metadata !DIExpression()), !dbg !2647
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2648
  %brush1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 1, !dbg !2649
  %1 = load %struct.Brush*, %struct.Brush** %brush1, align 8, !dbg !2649
  store %struct.Brush* %1, %struct.Brush** %brush, align 8, !dbg !2647
  %2 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2650
  %cache = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %2, i32 0, i32 8, !dbg !2652
  %use_float2 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache, i32 0, i32 0, !dbg !2653
  %3 = load i8, i8* %use_float2, align 8, !dbg !2653
  %conv = zext i8 %3 to i32, !dbg !2650
  %4 = load i8, i8* %use_float.addr, align 1, !dbg !2654
  %conv3 = zext i8 %4 to i32, !dbg !2654
  %cmp = icmp ne i32 %conv, %conv3, !dbg !2655
  br i1 %cmp, label %if.then, label %if.end34, !dbg !2656

if.then:                                          ; preds = %entry
  %5 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2657
  %cache5 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %5, i32 0, i32 8, !dbg !2660
  %ibuf = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache5, i32 0, i32 9, !dbg !2661
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2661
  %tobool = icmp ne %struct.ImBuf* %6, null, !dbg !2657
  br i1 %tobool, label %if.then6, label %if.end, !dbg !2662

if.then6:                                         ; preds = %if.then
  %7 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2663
  %cache7 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %7, i32 0, i32 8, !dbg !2664
  %ibuf8 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache7, i32 0, i32 9, !dbg !2665
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf8, align 8, !dbg !2665
  call void @IMB_freeImBuf(%struct.ImBuf* %8), !dbg !2666
  br label %if.end, !dbg !2666

if.end:                                           ; preds = %if.then6, %if.then
  %9 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2667
  %cache9 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %9, i32 0, i32 8, !dbg !2669
  %curve_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache9, i32 0, i32 11, !dbg !2670
  %10 = load i16*, i16** %curve_mask, align 8, !dbg !2670
  %tobool10 = icmp ne i16* %10, null, !dbg !2667
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !2671

if.then11:                                        ; preds = %if.end
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2672
  %12 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2673
  %cache12 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %12, i32 0, i32 8, !dbg !2674
  %curve_mask13 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache12, i32 0, i32 11, !dbg !2675
  %13 = load i16*, i16** %curve_mask13, align 8, !dbg !2675
  %14 = bitcast i16* %13 to i8*, !dbg !2673
  call void %11(i8* %14), !dbg !2672
  br label %if.end14, !dbg !2672

if.end14:                                         ; preds = %if.then11, %if.end
  %15 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2676
  %cache15 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %15, i32 0, i32 8, !dbg !2678
  %tex_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache15, i32 0, i32 12, !dbg !2679
  %16 = load i16*, i16** %tex_mask, align 8, !dbg !2679
  %tobool16 = icmp ne i16* %16, null, !dbg !2676
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !2680

if.then17:                                        ; preds = %if.end14
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2681
  %18 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2682
  %cache18 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %18, i32 0, i32 8, !dbg !2683
  %tex_mask19 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache18, i32 0, i32 12, !dbg !2684
  %19 = load i16*, i16** %tex_mask19, align 8, !dbg !2684
  %20 = bitcast i16* %19 to i8*, !dbg !2682
  call void %17(i8* %20), !dbg !2681
  br label %if.end20, !dbg !2681

if.end20:                                         ; preds = %if.then17, %if.end14
  %21 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2685
  %cache21 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %21, i32 0, i32 8, !dbg !2687
  %tex_mask_old = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache21, i32 0, i32 13, !dbg !2688
  %22 = load i16*, i16** %tex_mask_old, align 8, !dbg !2688
  %tobool22 = icmp ne i16* %22, null, !dbg !2685
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !2689

if.then23:                                        ; preds = %if.end20
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2690
  %24 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2691
  %cache24 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %24, i32 0, i32 8, !dbg !2692
  %tex_mask_old25 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache24, i32 0, i32 13, !dbg !2693
  %25 = load i16*, i16** %tex_mask_old25, align 8, !dbg !2693
  %26 = bitcast i16* %25 to i8*, !dbg !2691
  call void %23(i8* %26), !dbg !2690
  br label %if.end26, !dbg !2690

if.end26:                                         ; preds = %if.then23, %if.end20
  %27 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2694
  %cache27 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %27, i32 0, i32 8, !dbg !2695
  %ibuf28 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache27, i32 0, i32 9, !dbg !2696
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf28, align 8, !dbg !2697
  %28 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2698
  %cache29 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %28, i32 0, i32 8, !dbg !2699
  %curve_mask30 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache29, i32 0, i32 11, !dbg !2700
  store i16* null, i16** %curve_mask30, align 8, !dbg !2701
  %29 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2702
  %cache31 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %29, i32 0, i32 8, !dbg !2703
  %tex_mask32 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache31, i32 0, i32 12, !dbg !2704
  store i16* null, i16** %tex_mask32, align 8, !dbg !2705
  %30 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2706
  %cache33 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %30, i32 0, i32 8, !dbg !2707
  %lastdiameter = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache33, i32 0, i32 5, !dbg !2708
  store i32 -1, i32* %lastdiameter, align 8, !dbg !2709
  br label %if.end34, !dbg !2710

if.end34:                                         ; preds = %if.end26, %entry
  %31 = load i8, i8* %use_float.addr, align 1, !dbg !2711
  %32 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2712
  %cache35 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %32, i32 0, i32 8, !dbg !2713
  %use_float36 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache35, i32 0, i32 0, !dbg !2714
  store i8 %31, i8* %use_float36, align 8, !dbg !2715
  %33 = load i8, i8* %use_float.addr, align 1, !dbg !2716
  %conv37 = zext i8 %33 to i32, !dbg !2716
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !2716
  br i1 %tobool38, label %land.rhs, label %land.end, !dbg !2717

land.rhs:                                         ; preds = %if.end34
  %34 = load i8, i8* %use_color_correction.addr, align 1, !dbg !2718
  %conv39 = zext i8 %34 to i32, !dbg !2718
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !2717
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end34
  %35 = phi i1 [ false, %if.end34 ], [ %tobool40, %land.rhs ], !dbg !2719
  %land.ext = zext i1 %35 to i32, !dbg !2717
  %conv41 = trunc i32 %land.ext to i8, !dbg !2716
  %36 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2720
  %cache42 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %36, i32 0, i32 8, !dbg !2721
  %use_color_correction43 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache42, i32 0, i32 1, !dbg !2722
  store i8 %conv41, i8* %use_color_correction43, align 1, !dbg !2723
  %37 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2724
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %37, i32 0, i32 3, !dbg !2725
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 5, !dbg !2726
  %38 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !2726
  %tobool44 = icmp ne %struct.Tex* %38, null, !dbg !2724
  br i1 %tobool44, label %land.rhs45, label %land.end49, !dbg !2727

land.rhs45:                                       ; preds = %land.end
  %39 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2728
  %imagepaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %39, i32 0, i32 36, !dbg !2729
  %40 = load i8, i8* %imagepaint_tool, align 2, !dbg !2729
  %conv46 = zext i8 %40 to i32, !dbg !2728
  %cmp47 = icmp eq i32 %conv46, 0, !dbg !2730
  br label %land.end49

land.end49:                                       ; preds = %land.rhs45, %land.end
  %41 = phi i1 [ false, %land.end ], [ %cmp47, %land.rhs45 ], !dbg !2719
  %42 = zext i1 %41 to i64, !dbg !2731
  %cond = select i1 %41, i32 1, i32 0, !dbg !2731
  %conv51 = trunc i32 %cond to i8, !dbg !2731
  %43 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2732
  %cache52 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %43, i32 0, i32 8, !dbg !2733
  %is_texbrush = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache52, i32 0, i32 3, !dbg !2734
  store i8 %conv51, i8* %is_texbrush, align 1, !dbg !2735
  %44 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2736
  %mask_mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %44, i32 0, i32 4, !dbg !2737
  %tex53 = getelementptr inbounds %struct.MTex, %struct.MTex* %mask_mtex, i32 0, i32 5, !dbg !2738
  %45 = load %struct.Tex*, %struct.Tex** %tex53, align 8, !dbg !2738
  %tobool54 = icmp ne %struct.Tex* %45, null, !dbg !2739
  %46 = zext i1 %tobool54 to i64, !dbg !2739
  %cond55 = select i1 %tobool54, i32 1, i32 0, !dbg !2739
  %conv56 = trunc i32 %cond55 to i8, !dbg !2739
  %47 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2740
  %cache57 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %47, i32 0, i32 8, !dbg !2741
  %is_maskbrush = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache57, i32 0, i32 4, !dbg !2742
  store i8 %conv56, i8* %is_maskbrush, align 4, !dbg !2743
  ret void, !dbg !2744
}

; Function Attrs: noinline nounwind uwtable
define internal void @brush_painter_2d_refresh_cache(%struct.ImagePaintState* %s, %struct.BrushPainter* %painter, float* %pos, float* %mouse, float %pressure, float %distance, float %size) #0 !dbg !2745 {
entry:
  %s.addr = alloca %struct.ImagePaintState*, align 8
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %pos.addr = alloca float*, align 8
  %mouse.addr = alloca float*, align 8
  %pressure.addr = alloca float, align 4
  %distance.addr = alloca float, align 4
  %size.addr = alloca float, align 4
  %scene = alloca %struct.Scene*, align 8
  %ups = alloca %struct.UnifiedPaintSettings*, align 8
  %brush = alloca %struct.Brush*, align 8
  %cache = alloca %struct.BrushPainterCache*, align 8
  %diameter = alloca i32, align 4
  %do_random = alloca i8, align 1
  %do_partial_update = alloca i8, align 1
  %update_color = alloca i8, align 1
  %tex_rotation = alloca float, align 4
  %mask_rotation = alloca float, align 4
  %renew_maxmask = alloca i8, align 1
  %do_partial_update_mask = alloca i8, align 1
  %dx = alloca i32, align 4
  %dy = alloca i32, align 4
  store %struct.ImagePaintState* %s, %struct.ImagePaintState** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s.addr, metadata !2748, metadata !DIExpression()), !dbg !2749
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !2750, metadata !DIExpression()), !dbg !2751
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !2752, metadata !DIExpression()), !dbg !2753
  store float* %mouse, float** %mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse.addr, metadata !2754, metadata !DIExpression()), !dbg !2755
  store float %pressure, float* %pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pressure.addr, metadata !2756, metadata !DIExpression()), !dbg !2757
  store float %distance, float* %distance.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distance.addr, metadata !2758, metadata !DIExpression()), !dbg !2759
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !2760, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !2762, metadata !DIExpression()), !dbg !2765
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2766
  %scene1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 0, !dbg !2767
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !2767
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !2765
  call void @llvm.dbg.declare(metadata %struct.UnifiedPaintSettings** %ups, metadata !2768, metadata !DIExpression()), !dbg !2771
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2772
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 20, !dbg !2773
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !2773
  %unified_paint_settings = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %3, i32 0, i32 73, !dbg !2774
  store %struct.UnifiedPaintSettings* %unified_paint_settings, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !2771
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !2775, metadata !DIExpression()), !dbg !2776
  %4 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2777
  %brush2 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %4, i32 0, i32 1, !dbg !2778
  %5 = load %struct.Brush*, %struct.Brush** %brush2, align 8, !dbg !2778
  store %struct.Brush* %5, %struct.Brush** %brush, align 8, !dbg !2776
  call void @llvm.dbg.declare(metadata %struct.BrushPainterCache** %cache, metadata !2779, metadata !DIExpression()), !dbg !2781
  %6 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2782
  %cache3 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %6, i32 0, i32 8, !dbg !2783
  store %struct.BrushPainterCache* %cache3, %struct.BrushPainterCache** %cache, align 8, !dbg !2781
  call void @llvm.dbg.declare(metadata i32* %diameter, metadata !2784, metadata !DIExpression()), !dbg !2786
  %7 = load float, float* %size.addr, align 4, !dbg !2787
  %mul = fmul float 2.000000e+00, %7, !dbg !2788
  %conv = fptosi float %mul to i32, !dbg !2789
  store i32 %conv, i32* %diameter, align 4, !dbg !2786
  call void @llvm.dbg.declare(metadata i8* %do_random, metadata !2790, metadata !DIExpression()), !dbg !2791
  store i8 0, i8* %do_random, align 1, !dbg !2791
  call void @llvm.dbg.declare(metadata i8* %do_partial_update, metadata !2792, metadata !DIExpression()), !dbg !2793
  store i8 0, i8* %do_partial_update, align 1, !dbg !2793
  call void @llvm.dbg.declare(metadata i8* %update_color, metadata !2794, metadata !DIExpression()), !dbg !2795
  %8 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2796
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %8, i32 0, i32 16, !dbg !2797
  %9 = load i32, i32* %flag, align 8, !dbg !2797
  %and = and i32 %9, 2097152, !dbg !2798
  %tobool = icmp ne i32 %and, 0, !dbg !2798
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2799

land.rhs:                                         ; preds = %entry
  %10 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2800
  %gradient_stroke_mode = getelementptr inbounds %struct.Brush, %struct.Brush* %10, i32 0, i32 32, !dbg !2800
  %11 = load i32, i32* %gradient_stroke_mode, align 8, !dbg !2800
  %cmp = icmp eq i32 %11, 1, !dbg !2800
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !2800

lor.lhs.false:                                    ; preds = %land.rhs
  %12 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2800
  %gradient_stroke_mode5 = getelementptr inbounds %struct.Brush, %struct.Brush* %12, i32 0, i32 32, !dbg !2800
  %13 = load i32, i32* %gradient_stroke_mode5, align 8, !dbg !2800
  %cmp6 = icmp eq i32 %13, 2, !dbg !2800
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !2801

lor.rhs:                                          ; preds = %lor.lhs.false
  %14 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2802
  %last_pressure = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %14, i32 0, i32 8, !dbg !2803
  %15 = load float, float* %last_pressure, align 4, !dbg !2803
  %16 = load float, float* %pressure.addr, align 4, !dbg !2804
  %cmp8 = fcmp une float %15, %16, !dbg !2805
  br label %lor.end, !dbg !2801

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %17 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp8, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %18 = phi i1 [ false, %entry ], [ %17, %lor.end ], !dbg !2806
  %land.ext = zext i1 %18 to i32, !dbg !2799
  %conv10 = trunc i32 %land.ext to i8, !dbg !2807
  store i8 %conv10, i8* %update_color, align 1, !dbg !2795
  call void @llvm.dbg.declare(metadata float* %tex_rotation, metadata !2808, metadata !DIExpression()), !dbg !2809
  %19 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2810
  %mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %19, i32 0, i32 3, !dbg !2811
  %rot = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex, i32 0, i32 13, !dbg !2812
  %20 = load float, float* %rot, align 4, !dbg !2812
  %fneg = fneg float %20, !dbg !2813
  store float %fneg, float* %tex_rotation, align 4, !dbg !2809
  call void @llvm.dbg.declare(metadata float* %mask_rotation, metadata !2814, metadata !DIExpression()), !dbg !2815
  %21 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2816
  %mask_mtex = getelementptr inbounds %struct.Brush, %struct.Brush* %21, i32 0, i32 4, !dbg !2817
  %rot11 = getelementptr inbounds %struct.MTex, %struct.MTex* %mask_mtex, i32 0, i32 13, !dbg !2818
  %22 = load float, float* %rot11, align 4, !dbg !2818
  %fneg12 = fneg float %22, !dbg !2819
  store float %fneg12, float* %mask_rotation, align 4, !dbg !2815
  %call = call %struct.ImagePool* @BKE_image_pool_new(), !dbg !2820
  %23 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2821
  %pool = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %23, i32 0, i32 5, !dbg !2822
  store %struct.ImagePool* %call, %struct.ImagePool** %pool, align 8, !dbg !2823
  %24 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2824
  %cache13 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %24, i32 0, i32 8, !dbg !2826
  %is_texbrush = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache13, i32 0, i32 3, !dbg !2827
  %25 = load i8, i8* %is_texbrush, align 1, !dbg !2827
  %tobool14 = icmp ne i8 %25, 0, !dbg !2824
  br i1 %tobool14, label %if.then, label %if.end39, !dbg !2828

if.then:                                          ; preds = %land.end
  %26 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2829
  %mtex15 = getelementptr inbounds %struct.Brush, %struct.Brush* %26, i32 0, i32 3, !dbg !2832
  %brush_map_mode = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex15, i32 0, i32 20, !dbg !2833
  %27 = load i8, i8* %brush_map_mode, align 4, !dbg !2833
  %conv16 = zext i8 %27 to i32, !dbg !2829
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !2834
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !2835

if.then19:                                        ; preds = %if.then
  %28 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !2836
  %brush_rotation = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %28, i32 0, i32 8, !dbg !2838
  %29 = load float, float* %brush_rotation, align 4, !dbg !2838
  %30 = load float, float* %tex_rotation, align 4, !dbg !2839
  %add = fadd float %30, %29, !dbg !2839
  store float %add, float* %tex_rotation, align 4, !dbg !2839
  br label %if.end35, !dbg !2840

if.else:                                          ; preds = %if.then
  %31 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2841
  %mtex20 = getelementptr inbounds %struct.Brush, %struct.Brush* %31, i32 0, i32 3, !dbg !2843
  %brush_map_mode21 = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex20, i32 0, i32 20, !dbg !2844
  %32 = load i8, i8* %brush_map_mode21, align 4, !dbg !2844
  %conv22 = zext i8 %32 to i32, !dbg !2841
  %cmp23 = icmp eq i32 %conv22, 4, !dbg !2845
  br i1 %cmp23, label %if.then25, label %if.else26, !dbg !2846

if.then25:                                        ; preds = %if.else
  store i8 1, i8* %do_random, align 1, !dbg !2847
  br label %if.end34, !dbg !2848

if.else26:                                        ; preds = %if.else
  %33 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2849
  %flag27 = getelementptr inbounds %struct.Brush, %struct.Brush* %33, i32 0, i32 16, !dbg !2851
  %34 = load i32, i32* %flag27, align 8, !dbg !2851
  %and28 = and i32 %34, 256, !dbg !2852
  %tobool29 = icmp ne i32 %and28, 0, !dbg !2852
  br i1 %tobool29, label %if.end, label %lor.lhs.false30, !dbg !2853

lor.lhs.false30:                                  ; preds = %if.else26
  %35 = load i8, i8* %update_color, align 1, !dbg !2854
  %conv31 = zext i8 %35 to i32, !dbg !2854
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !2854
  br i1 %tobool32, label %if.end, label %if.then33, !dbg !2855

if.then33:                                        ; preds = %lor.lhs.false30
  store i8 1, i8* %do_partial_update, align 1, !dbg !2856
  br label %if.end, !dbg !2857

if.end:                                           ; preds = %if.then33, %lor.lhs.false30, %if.else26
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then25
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then19
  %36 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !2858
  %37 = load i32, i32* %diameter, align 4, !dbg !2859
  %38 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2860
  %startpaintpos = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %38, i32 0, i32 3, !dbg !2861
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %startpaintpos, i64 0, i64 0, !dbg !2860
  %39 = load float*, float** %pos.addr, align 8, !dbg !2862
  %40 = load float*, float** %mouse.addr, align 8, !dbg !2863
  %41 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2864
  %mtex36 = getelementptr inbounds %struct.Brush, %struct.Brush* %41, i32 0, i32 3, !dbg !2865
  %brush_map_mode37 = getelementptr inbounds %struct.MTex, %struct.MTex* %mtex36, i32 0, i32 20, !dbg !2866
  %42 = load i8, i8* %brush_map_mode37, align 4, !dbg !2866
  %conv38 = zext i8 %42 to i32, !dbg !2864
  %43 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2867
  %tex_mapping = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %43, i32 0, i32 6, !dbg !2868
  call void @brush_painter_2d_tex_mapping(%struct.ImagePaintState* %36, i32 %37, float* %arraydecay, float* %39, float* %40, i32 %conv38, %struct.rctf* %tex_mapping), !dbg !2869
  br label %if.end39, !dbg !2870

if.end39:                                         ; preds = %if.end35, %land.end
  %44 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2871
  %cache40 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %44, i32 0, i32 8, !dbg !2873
  %is_maskbrush = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache40, i32 0, i32 4, !dbg !2874
  %45 = load i8, i8* %is_maskbrush, align 4, !dbg !2874
  %tobool41 = icmp ne i8 %45, 0, !dbg !2871
  br i1 %tobool41, label %if.then42, label %if.end96, !dbg !2875

if.then42:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i8* %renew_maxmask, metadata !2876, metadata !DIExpression()), !dbg !2878
  store i8 0, i8* %renew_maxmask, align 1, !dbg !2878
  call void @llvm.dbg.declare(metadata i8* %do_partial_update_mask, metadata !2879, metadata !DIExpression()), !dbg !2880
  store i8 0, i8* %do_partial_update_mask, align 1, !dbg !2880
  %46 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2881
  %mask_mtex43 = getelementptr inbounds %struct.Brush, %struct.Brush* %46, i32 0, i32 4, !dbg !2883
  %brush_map_mode44 = getelementptr inbounds %struct.MTex, %struct.MTex* %mask_mtex43, i32 0, i32 20, !dbg !2884
  %47 = load i8, i8* %brush_map_mode44, align 4, !dbg !2884
  %conv45 = zext i8 %47 to i32, !dbg !2881
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !2885
  br i1 %cmp46, label %if.then48, label %if.else51, !dbg !2886

if.then48:                                        ; preds = %if.then42
  %48 = load %struct.UnifiedPaintSettings*, %struct.UnifiedPaintSettings** %ups, align 8, !dbg !2887
  %brush_rotation49 = getelementptr inbounds %struct.UnifiedPaintSettings, %struct.UnifiedPaintSettings* %48, i32 0, i32 8, !dbg !2889
  %49 = load float, float* %brush_rotation49, align 4, !dbg !2889
  %50 = load float, float* %mask_rotation, align 4, !dbg !2890
  %add50 = fadd float %50, %49, !dbg !2890
  store float %add50, float* %mask_rotation, align 4, !dbg !2890
  br label %if.end65, !dbg !2891

if.else51:                                        ; preds = %if.then42
  %51 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2892
  %mask_mtex52 = getelementptr inbounds %struct.Brush, %struct.Brush* %51, i32 0, i32 4, !dbg !2894
  %brush_map_mode53 = getelementptr inbounds %struct.MTex, %struct.MTex* %mask_mtex52, i32 0, i32 20, !dbg !2895
  %52 = load i8, i8* %brush_map_mode53, align 4, !dbg !2895
  %conv54 = zext i8 %52 to i32, !dbg !2892
  %cmp55 = icmp eq i32 %conv54, 4, !dbg !2896
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !2897

if.then57:                                        ; preds = %if.else51
  store i8 1, i8* %renew_maxmask, align 1, !dbg !2898
  br label %if.end64, !dbg !2900

if.else58:                                        ; preds = %if.else51
  %53 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2901
  %flag59 = getelementptr inbounds %struct.Brush, %struct.Brush* %53, i32 0, i32 16, !dbg !2903
  %54 = load i32, i32* %flag59, align 8, !dbg !2903
  %and60 = and i32 %54, 256, !dbg !2904
  %tobool61 = icmp ne i32 %and60, 0, !dbg !2904
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !2905

if.then62:                                        ; preds = %if.else58
  store i8 1, i8* %do_partial_update_mask, align 1, !dbg !2906
  store i8 1, i8* %renew_maxmask, align 1, !dbg !2908
  br label %if.end63, !dbg !2909

if.end63:                                         ; preds = %if.then62, %if.else58
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then57
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then48
  %55 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2910
  %mask_pressure = getelementptr inbounds %struct.Brush, %struct.Brush* %55, i32 0, i32 17, !dbg !2912
  %56 = load i32, i32* %mask_pressure, align 4, !dbg !2912
  %tobool66 = icmp ne i32 %56, 0, !dbg !2910
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !2913

if.then67:                                        ; preds = %if.end65
  store i8 0, i8* %do_partial_update_mask, align 1, !dbg !2914
  store i8 1, i8* %renew_maxmask, align 1, !dbg !2916
  br label %if.end68, !dbg !2917

if.end68:                                         ; preds = %if.then67, %if.end65
  %57 = load i32, i32* %diameter, align 4, !dbg !2918
  %58 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2920
  %lastdiameter = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %58, i32 0, i32 5, !dbg !2921
  %59 = load i32, i32* %lastdiameter, align 8, !dbg !2921
  %cmp69 = icmp ne i32 %57, %59, !dbg !2922
  br i1 %cmp69, label %if.then77, label %lor.lhs.false71, !dbg !2923

lor.lhs.false71:                                  ; preds = %if.end68
  %60 = load float, float* %mask_rotation, align 4, !dbg !2924
  %61 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2925
  %last_mask_rotation = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %61, i32 0, i32 7, !dbg !2926
  %62 = load float, float* %last_mask_rotation, align 8, !dbg !2926
  %cmp72 = fcmp une float %60, %62, !dbg !2927
  br i1 %cmp72, label %if.then77, label %lor.lhs.false74, !dbg !2928

lor.lhs.false74:                                  ; preds = %lor.lhs.false71
  %63 = load i8, i8* %renew_maxmask, align 1, !dbg !2929
  %conv75 = zext i8 %63 to i32, !dbg !2929
  %tobool76 = icmp ne i32 %conv75, 0, !dbg !2929
  br i1 %tobool76, label %if.then77, label %if.end95, !dbg !2930

if.then77:                                        ; preds = %lor.lhs.false74, %lor.lhs.false71, %if.end68
  %64 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2931
  %tex_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %64, i32 0, i32 12, !dbg !2934
  %65 = load i16*, i16** %tex_mask, align 8, !dbg !2934
  %tobool78 = icmp ne i16* %65, null, !dbg !2931
  br i1 %tobool78, label %if.then79, label %if.end82, !dbg !2935

if.then79:                                        ; preds = %if.then77
  %66 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2936
  %67 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2938
  %tex_mask80 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %67, i32 0, i32 12, !dbg !2939
  %68 = load i16*, i16** %tex_mask80, align 8, !dbg !2939
  %69 = bitcast i16* %68 to i8*, !dbg !2938
  call void %66(i8* %69), !dbg !2936
  %70 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2940
  %tex_mask81 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %70, i32 0, i32 12, !dbg !2941
  store i16* null, i16** %tex_mask81, align 8, !dbg !2942
  br label %if.end82, !dbg !2943

if.end82:                                         ; preds = %if.then79, %if.then77
  %71 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !2944
  %72 = load i32, i32* %diameter, align 4, !dbg !2945
  %73 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2946
  %startpaintpos83 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %73, i32 0, i32 3, !dbg !2947
  %arraydecay84 = getelementptr inbounds [2 x float], [2 x float]* %startpaintpos83, i64 0, i64 0, !dbg !2946
  %74 = load float*, float** %pos.addr, align 8, !dbg !2948
  %75 = load float*, float** %mouse.addr, align 8, !dbg !2949
  %76 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !2950
  %mask_mtex85 = getelementptr inbounds %struct.Brush, %struct.Brush* %76, i32 0, i32 4, !dbg !2951
  %brush_map_mode86 = getelementptr inbounds %struct.MTex, %struct.MTex* %mask_mtex85, i32 0, i32 20, !dbg !2952
  %77 = load i8, i8* %brush_map_mode86, align 4, !dbg !2952
  %conv87 = zext i8 %77 to i32, !dbg !2950
  %78 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2953
  %mask_mapping = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %78, i32 0, i32 7, !dbg !2954
  call void @brush_painter_2d_tex_mapping(%struct.ImagePaintState* %71, i32 %72, float* %arraydecay84, float* %74, float* %75, i32 %conv87, %struct.rctf* %mask_mapping), !dbg !2955
  %79 = load i8, i8* %do_partial_update_mask, align 1, !dbg !2956
  %tobool88 = icmp ne i8 %79, 0, !dbg !2956
  br i1 %tobool88, label %if.then89, label %if.else90, !dbg !2958

if.then89:                                        ; preds = %if.end82
  %80 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2959
  %81 = load float*, float** %pos.addr, align 8, !dbg !2960
  %82 = load i32, i32* %diameter, align 4, !dbg !2961
  call void @brush_painter_mask_imbuf_partial_update(%struct.BrushPainter* %80, float* %81, i32 %82), !dbg !2962
  br label %if.end93, !dbg !2962

if.else90:                                        ; preds = %if.end82
  %83 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2963
  %84 = load i32, i32* %diameter, align 4, !dbg !2964
  %call91 = call i16* @brush_painter_mask_ibuf_new(%struct.BrushPainter* %83, i32 %84), !dbg !2965
  %85 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2966
  %tex_mask92 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %85, i32 0, i32 12, !dbg !2967
  store i16* %call91, i16** %tex_mask92, align 8, !dbg !2968
  br label %if.end93

if.end93:                                         ; preds = %if.else90, %if.then89
  %86 = load float, float* %mask_rotation, align 4, !dbg !2969
  %87 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2970
  %last_mask_rotation94 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %87, i32 0, i32 7, !dbg !2971
  store float %86, float* %last_mask_rotation94, align 8, !dbg !2972
  br label %if.end95, !dbg !2973

if.end95:                                         ; preds = %if.end93, %lor.lhs.false74
  br label %if.end96, !dbg !2974

if.end96:                                         ; preds = %if.end95, %if.end39
  %88 = load i32, i32* %diameter, align 4, !dbg !2975
  %89 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2977
  %lastdiameter97 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %89, i32 0, i32 5, !dbg !2978
  %90 = load i32, i32* %lastdiameter97, align 8, !dbg !2978
  %cmp98 = icmp ne i32 %88, %90, !dbg !2979
  br i1 %cmp98, label %if.then100, label %if.end108, !dbg !2980

if.then100:                                       ; preds = %if.end96
  %91 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2981
  %curve_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %91, i32 0, i32 11, !dbg !2984
  %92 = load i16*, i16** %curve_mask, align 8, !dbg !2984
  %tobool101 = icmp ne i16* %92, null, !dbg !2981
  br i1 %tobool101, label %if.then102, label %if.end105, !dbg !2985

if.then102:                                       ; preds = %if.then100
  %93 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2986
  %94 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2988
  %curve_mask103 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %94, i32 0, i32 11, !dbg !2989
  %95 = load i16*, i16** %curve_mask103, align 8, !dbg !2989
  %96 = bitcast i16* %95 to i8*, !dbg !2988
  call void %93(i8* %96), !dbg !2986
  %97 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2990
  %curve_mask104 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %97, i32 0, i32 11, !dbg !2991
  store i16* null, i16** %curve_mask104, align 8, !dbg !2992
  br label %if.end105, !dbg !2993

if.end105:                                        ; preds = %if.then102, %if.then100
  %98 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !2994
  %99 = load i32, i32* %diameter, align 4, !dbg !2995
  %100 = load float, float* %size.addr, align 4, !dbg !2996
  %call106 = call i16* @brush_painter_curve_mask_new(%struct.BrushPainter* %98, i32 %99, float %100), !dbg !2997
  %101 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !2998
  %curve_mask107 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %101, i32 0, i32 11, !dbg !2999
  store i16* %call106, i16** %curve_mask107, align 8, !dbg !3000
  br label %if.end108, !dbg !3001

if.end108:                                        ; preds = %if.end105, %if.end96
  %102 = load i32, i32* %diameter, align 4, !dbg !3002
  %103 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3004
  %lastdiameter109 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %103, i32 0, i32 5, !dbg !3005
  %104 = load i32, i32* %lastdiameter109, align 8, !dbg !3005
  %cmp110 = icmp ne i32 %102, %104, !dbg !3006
  br i1 %cmp110, label %if.then121, label %lor.lhs.false112, !dbg !3007

lor.lhs.false112:                                 ; preds = %if.end108
  %105 = load float, float* %tex_rotation, align 4, !dbg !3008
  %106 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3009
  %last_tex_rotation = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %106, i32 0, i32 6, !dbg !3010
  %107 = load float, float* %last_tex_rotation, align 4, !dbg !3010
  %cmp113 = fcmp une float %105, %107, !dbg !3011
  br i1 %cmp113, label %if.then121, label %lor.lhs.false115, !dbg !3012

lor.lhs.false115:                                 ; preds = %lor.lhs.false112
  %108 = load i8, i8* %do_random, align 1, !dbg !3013
  %conv116 = zext i8 %108 to i32, !dbg !3013
  %tobool117 = icmp ne i32 %conv116, 0, !dbg !3013
  br i1 %tobool117, label %if.then121, label %lor.lhs.false118, !dbg !3014

lor.lhs.false118:                                 ; preds = %lor.lhs.false115
  %109 = load i8, i8* %update_color, align 1, !dbg !3015
  %conv119 = zext i8 %109 to i32, !dbg !3015
  %tobool120 = icmp ne i32 %conv119, 0, !dbg !3015
  br i1 %tobool120, label %if.then121, label %if.else136, !dbg !3016

if.then121:                                       ; preds = %lor.lhs.false118, %lor.lhs.false115, %lor.lhs.false112, %if.end108
  %110 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3017
  %ibuf = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %110, i32 0, i32 9, !dbg !3020
  %111 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3020
  %tobool122 = icmp ne %struct.ImBuf* %111, null, !dbg !3017
  br i1 %tobool122, label %if.then123, label %if.end126, !dbg !3021

if.then123:                                       ; preds = %if.then121
  %112 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3022
  %ibuf124 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %112, i32 0, i32 9, !dbg !3024
  %113 = load %struct.ImBuf*, %struct.ImBuf** %ibuf124, align 8, !dbg !3024
  call void @IMB_freeImBuf(%struct.ImBuf* %113), !dbg !3025
  %114 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3026
  %ibuf125 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %114, i32 0, i32 9, !dbg !3027
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf125, align 8, !dbg !3028
  br label %if.end126, !dbg !3029

if.end126:                                        ; preds = %if.then123, %if.then121
  %115 = load i8, i8* %do_partial_update, align 1, !dbg !3030
  %tobool127 = icmp ne i8 %115, 0, !dbg !3030
  br i1 %tobool127, label %if.then128, label %if.else129, !dbg !3032

if.then128:                                       ; preds = %if.end126
  %116 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !3033
  %117 = load float*, float** %pos.addr, align 8, !dbg !3035
  %118 = load i32, i32* %diameter, align 4, !dbg !3036
  call void @brush_painter_imbuf_partial_update(%struct.BrushPainter* %116, float* %117, i32 %118), !dbg !3037
  br label %if.end132, !dbg !3038

if.else129:                                       ; preds = %if.end126
  %119 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !3039
  %120 = load i32, i32* %diameter, align 4, !dbg !3041
  %121 = load float, float* %pressure.addr, align 4, !dbg !3042
  %122 = load float, float* %distance.addr, align 4, !dbg !3043
  %call130 = call %struct.ImBuf* @brush_painter_imbuf_new(%struct.BrushPainter* %119, i32 %120, float %121, float %122), !dbg !3044
  %123 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3045
  %ibuf131 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %123, i32 0, i32 9, !dbg !3046
  store %struct.ImBuf* %call130, %struct.ImBuf** %ibuf131, align 8, !dbg !3047
  br label %if.end132

if.end132:                                        ; preds = %if.else129, %if.then128
  %124 = load i32, i32* %diameter, align 4, !dbg !3048
  %125 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3049
  %lastdiameter133 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %125, i32 0, i32 5, !dbg !3050
  store i32 %124, i32* %lastdiameter133, align 8, !dbg !3051
  %126 = load float, float* %tex_rotation, align 4, !dbg !3052
  %127 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3053
  %last_tex_rotation134 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %127, i32 0, i32 6, !dbg !3054
  store float %126, float* %last_tex_rotation134, align 4, !dbg !3055
  %128 = load float, float* %pressure.addr, align 4, !dbg !3056
  %129 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !3057
  %last_pressure135 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %129, i32 0, i32 8, !dbg !3058
  store float %128, float* %last_pressure135, align 4, !dbg !3059
  br label %if.end156, !dbg !3060

if.else136:                                       ; preds = %lor.lhs.false118
  %130 = load i8, i8* %do_partial_update, align 1, !dbg !3061
  %tobool137 = icmp ne i8 %130, 0, !dbg !3061
  br i1 %tobool137, label %if.then138, label %if.end155, !dbg !3063

if.then138:                                       ; preds = %if.else136
  call void @llvm.dbg.declare(metadata i32* %dx, metadata !3064, metadata !DIExpression()), !dbg !3066
  %131 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !3067
  %lastpaintpos = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %131, i32 0, i32 2, !dbg !3068
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %lastpaintpos, i64 0, i64 0, !dbg !3067
  %132 = load float, float* %arrayidx, align 8, !dbg !3067
  %conv139 = fptosi float %132 to i32, !dbg !3069
  %133 = load float*, float** %pos.addr, align 8, !dbg !3070
  %arrayidx140 = getelementptr inbounds float, float* %133, i64 0, !dbg !3070
  %134 = load float, float* %arrayidx140, align 4, !dbg !3070
  %conv141 = fptosi float %134 to i32, !dbg !3071
  %sub = sub nsw i32 %conv139, %conv141, !dbg !3072
  store i32 %sub, i32* %dx, align 4, !dbg !3066
  call void @llvm.dbg.declare(metadata i32* %dy, metadata !3073, metadata !DIExpression()), !dbg !3074
  %135 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !3075
  %lastpaintpos142 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %135, i32 0, i32 2, !dbg !3076
  %arrayidx143 = getelementptr inbounds [2 x float], [2 x float]* %lastpaintpos142, i64 0, i64 1, !dbg !3075
  %136 = load float, float* %arrayidx143, align 4, !dbg !3075
  %conv144 = fptosi float %136 to i32, !dbg !3077
  %137 = load float*, float** %pos.addr, align 8, !dbg !3078
  %arrayidx145 = getelementptr inbounds float, float* %137, i64 1, !dbg !3078
  %138 = load float, float* %arrayidx145, align 4, !dbg !3078
  %conv146 = fptosi float %138 to i32, !dbg !3079
  %sub147 = sub nsw i32 %conv144, %conv146, !dbg !3080
  store i32 %sub147, i32* %dy, align 4, !dbg !3074
  %139 = load i32, i32* %dx, align 4, !dbg !3081
  %cmp148 = icmp ne i32 %139, 0, !dbg !3083
  br i1 %cmp148, label %if.then153, label %lor.lhs.false150, !dbg !3084

lor.lhs.false150:                                 ; preds = %if.then138
  %140 = load i32, i32* %dy, align 4, !dbg !3085
  %cmp151 = icmp ne i32 %140, 0, !dbg !3086
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !3087

if.then153:                                       ; preds = %lor.lhs.false150, %if.then138
  %141 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !3088
  %142 = load float*, float** %pos.addr, align 8, !dbg !3090
  %143 = load i32, i32* %diameter, align 4, !dbg !3091
  call void @brush_painter_imbuf_partial_update(%struct.BrushPainter* %141, float* %142, i32 %143), !dbg !3092
  br label %if.end154, !dbg !3093

if.end154:                                        ; preds = %if.then153, %lor.lhs.false150
  br label %if.end155, !dbg !3094

if.end155:                                        ; preds = %if.end154, %if.else136
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.end132
  %144 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !3095
  %pool157 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %144, i32 0, i32 5, !dbg !3096
  %145 = load %struct.ImagePool*, %struct.ImagePool** %pool157, align 8, !dbg !3096
  call void @BKE_image_pool_free(%struct.ImagePool* %145), !dbg !3097
  %146 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !3098
  %pool158 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %146, i32 0, i32 5, !dbg !3099
  store %struct.ImagePool* null, %struct.ImagePool** %pool158, align 8, !dbg !3100
  ret void, !dbg !3101
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @paint_2d_op(i8* %state, %struct.ImBuf* %ibufb, i16* %curveb, i16* %texmaskb, float* %lastpos, float* %pos) #0 !dbg !3102 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca i8*, align 8
  %ibufb.addr = alloca %struct.ImBuf*, align 8
  %curveb.addr = alloca i16*, align 8
  %texmaskb.addr = alloca i16*, align 8
  %lastpos.addr = alloca float*, align 8
  %pos.addr = alloca float*, align 8
  %s = alloca %struct.ImagePaintState*, align 8
  %clonebuf = alloca %struct.ImBuf*, align 8
  %frombuf = alloca %struct.ImBuf*, align 8
  %region = alloca [4 x %struct.ImagePaintRegion], align 16
  %torus = alloca i16, align 2
  %blend = alloca i16, align 2
  %offset = alloca float*, align 8
  %liftpos = alloca [2 x float], align 4
  %mask_max = alloca float, align 4
  %bpos = alloca [2 x i32], align 4
  %blastpos = alloca [2 x i32], align 4
  %bliftpos = alloca [2 x i32], align 4
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %tilex = alloca i32, align 4
  %tiley = alloca i32, align 4
  %tilew = alloca i32, align 4
  %tileh = alloca i32, align 4
  %tx = alloca i32, align 4
  %ty = alloca i32, align 4
  %tmpbuf = alloca %struct.ImBuf*, align 8
  %mask = alloca i16*, align 8
  %origx = alloca i32, align 4
  %origy = alloca i32, align 4
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !3105, metadata !DIExpression()), !dbg !3106
  store %struct.ImBuf* %ibufb, %struct.ImBuf** %ibufb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibufb.addr, metadata !3107, metadata !DIExpression()), !dbg !3108
  store i16* %curveb, i16** %curveb.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %curveb.addr, metadata !3109, metadata !DIExpression()), !dbg !3110
  store i16* %texmaskb, i16** %texmaskb.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %texmaskb.addr, metadata !3111, metadata !DIExpression()), !dbg !3112
  store float* %lastpos, float** %lastpos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lastpos.addr, metadata !3113, metadata !DIExpression()), !dbg !3114
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !3115, metadata !DIExpression()), !dbg !3116
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s, metadata !3117, metadata !DIExpression()), !dbg !3118
  %0 = load i8*, i8** %state.addr, align 8, !dbg !3119
  %1 = bitcast i8* %0 to %struct.ImagePaintState*, !dbg !3120
  store %struct.ImagePaintState* %1, %struct.ImagePaintState** %s, align 8, !dbg !3118
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %clonebuf, metadata !3121, metadata !DIExpression()), !dbg !3122
  store %struct.ImBuf* null, %struct.ImBuf** %clonebuf, align 8, !dbg !3122
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %frombuf, metadata !3123, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.declare(metadata [4 x %struct.ImagePaintRegion]* %region, metadata !3125, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.declare(metadata i16* %torus, metadata !3137, metadata !DIExpression()), !dbg !3138
  %2 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3139
  %brush = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %2, i32 0, i32 6, !dbg !3140
  %3 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3140
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %3, i32 0, i32 16, !dbg !3141
  %4 = load i32, i32* %flag, align 8, !dbg !3141
  %and = and i32 %4, 2, !dbg !3142
  %conv = trunc i32 %and to i16, !dbg !3139
  store i16 %conv, i16* %torus, align 2, !dbg !3138
  call void @llvm.dbg.declare(metadata i16* %blend, metadata !3143, metadata !DIExpression()), !dbg !3144
  %5 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3145
  %blend1 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %5, i32 0, i32 8, !dbg !3146
  %6 = load i16, i16* %blend1, align 2, !dbg !3146
  store i16 %6, i16* %blend, align 2, !dbg !3144
  call void @llvm.dbg.declare(metadata float** %offset, metadata !3147, metadata !DIExpression()), !dbg !3148
  %7 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3149
  %brush2 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %7, i32 0, i32 6, !dbg !3150
  %8 = load %struct.Brush*, %struct.Brush** %brush2, align 8, !dbg !3150
  %clone = getelementptr inbounds %struct.Brush, %struct.Brush* %8, i32 0, i32 1, !dbg !3151
  %offset3 = getelementptr inbounds %struct.BrushClone, %struct.BrushClone* %clone, i32 0, i32 1, !dbg !3152
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %offset3, i64 0, i64 0, !dbg !3149
  store float* %arraydecay, float** %offset, align 8, !dbg !3148
  call void @llvm.dbg.declare(metadata [2 x float]* %liftpos, metadata !3153, metadata !DIExpression()), !dbg !3154
  call void @llvm.dbg.declare(metadata float* %mask_max, metadata !3155, metadata !DIExpression()), !dbg !3156
  %9 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3157
  %scene = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %9, i32 0, i32 3, !dbg !3158
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3158
  %11 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3159
  %brush4 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %11, i32 0, i32 6, !dbg !3160
  %12 = load %struct.Brush*, %struct.Brush** %brush4, align 8, !dbg !3160
  %call = call float @BKE_brush_alpha_get(%struct.Scene* %10, %struct.Brush* %12), !dbg !3161
  store float %call, float* %mask_max, align 4, !dbg !3156
  call void @llvm.dbg.declare(metadata [2 x i32]* %bpos, metadata !3162, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.declare(metadata [2 x i32]* %blastpos, metadata !3164, metadata !DIExpression()), !dbg !3165
  call void @llvm.dbg.declare(metadata [2 x i32]* %bliftpos, metadata !3166, metadata !DIExpression()), !dbg !3167
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3168, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !3170, metadata !DIExpression()), !dbg !3171
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !3172
  %14 = load float*, float** %pos.addr, align 8, !dbg !3173
  %arraydecay5 = getelementptr inbounds [2 x i32], [2 x i32]* %bpos, i64 0, i64 0, !dbg !3174
  call void @paint_2d_convert_brushco(%struct.ImBuf* %13, float* %14, i32* %arraydecay5), !dbg !3175
  %15 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3176
  %tool = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %15, i32 0, i32 7, !dbg !3178
  %16 = load i16, i16* %tool, align 8, !dbg !3178
  %conv6 = sext i16 %16 to i32, !dbg !3176
  %cmp = icmp eq i32 %conv6, 1, !dbg !3179
  br i1 %cmp, label %if.then, label %if.else, !dbg !3180

if.then:                                          ; preds = %entry
  %17 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3181
  %18 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3183
  %canvas = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %18, i32 0, i32 10, !dbg !3184
  %19 = load %struct.ImBuf*, %struct.ImBuf** %canvas, align 8, !dbg !3184
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !3185
  %arraydecay8 = getelementptr inbounds [2 x i32], [2 x i32]* %bpos, i64 0, i64 0, !dbg !3186
  %21 = load i16, i16* %torus, align 2, !dbg !3187
  call void @paint_2d_lift_soften(%struct.ImagePaintState* %17, %struct.ImBuf* %19, %struct.ImBuf* %20, i32* %arraydecay8, i16 signext %21), !dbg !3188
  br label %if.end51, !dbg !3189

if.else:                                          ; preds = %entry
  %22 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3190
  %tool9 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %22, i32 0, i32 7, !dbg !3192
  %23 = load i16, i16* %tool9, align 8, !dbg !3192
  %conv10 = sext i16 %23 to i32, !dbg !3190
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !3193
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !3194

if.then13:                                        ; preds = %if.else
  %24 = load float*, float** %lastpos.addr, align 8, !dbg !3195
  %arrayidx = getelementptr inbounds float, float* %24, i64 0, !dbg !3195
  %25 = load float, float* %arrayidx, align 4, !dbg !3195
  %26 = load float*, float** %pos.addr, align 8, !dbg !3198
  %arrayidx14 = getelementptr inbounds float, float* %26, i64 0, !dbg !3198
  %27 = load float, float* %arrayidx14, align 4, !dbg !3198
  %cmp15 = fcmp oeq float %25, %27, !dbg !3199
  br i1 %cmp15, label %land.lhs.true, label %if.end, !dbg !3200

land.lhs.true:                                    ; preds = %if.then13
  %28 = load float*, float** %lastpos.addr, align 8, !dbg !3201
  %arrayidx17 = getelementptr inbounds float, float* %28, i64 1, !dbg !3201
  %29 = load float, float* %arrayidx17, align 4, !dbg !3201
  %30 = load float*, float** %pos.addr, align 8, !dbg !3202
  %arrayidx18 = getelementptr inbounds float, float* %30, i64 1, !dbg !3202
  %31 = load float, float* %arrayidx18, align 4, !dbg !3202
  %cmp19 = fcmp oeq float %29, %31, !dbg !3203
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !3204

if.then21:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !3205
  br label %return, !dbg !3205

if.end:                                           ; preds = %land.lhs.true, %if.then13
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !3206
  %33 = load float*, float** %lastpos.addr, align 8, !dbg !3207
  %arraydecay22 = getelementptr inbounds [2 x i32], [2 x i32]* %blastpos, i64 0, i64 0, !dbg !3208
  call void @paint_2d_convert_brushco(%struct.ImBuf* %32, float* %33, i32* %arraydecay22), !dbg !3209
  %34 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3210
  %canvas23 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %34, i32 0, i32 10, !dbg !3211
  %35 = load %struct.ImBuf*, %struct.ImBuf** %canvas23, align 8, !dbg !3211
  %36 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !3212
  %arraydecay24 = getelementptr inbounds [2 x i32], [2 x i32]* %blastpos, i64 0, i64 0, !dbg !3213
  call void @paint_2d_lift_smear(%struct.ImBuf* %35, %struct.ImBuf* %36, i32* %arraydecay24), !dbg !3214
  br label %if.end50, !dbg !3215

if.else25:                                        ; preds = %if.else
  %37 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3216
  %tool26 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %37, i32 0, i32 7, !dbg !3218
  %38 = load i16, i16* %tool26, align 8, !dbg !3218
  %conv27 = sext i16 %38 to i32, !dbg !3216
  %cmp28 = icmp eq i32 %conv27, 3, !dbg !3219
  br i1 %cmp28, label %land.lhs.true30, label %if.end49, !dbg !3220

land.lhs.true30:                                  ; preds = %if.else25
  %39 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3221
  %clonecanvas = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %39, i32 0, i32 11, !dbg !3222
  %40 = load %struct.ImBuf*, %struct.ImBuf** %clonecanvas, align 8, !dbg !3222
  %tobool = icmp ne %struct.ImBuf* %40, null, !dbg !3221
  br i1 %tobool, label %if.then31, label %if.end49, !dbg !3223

if.then31:                                        ; preds = %land.lhs.true30
  %41 = load float*, float** %pos.addr, align 8, !dbg !3224
  %arrayidx32 = getelementptr inbounds float, float* %41, i64 0, !dbg !3224
  %42 = load float, float* %arrayidx32, align 4, !dbg !3224
  %43 = load float*, float** %offset, align 8, !dbg !3226
  %arrayidx33 = getelementptr inbounds float, float* %43, i64 0, !dbg !3226
  %44 = load float, float* %arrayidx33, align 4, !dbg !3226
  %45 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3227
  %canvas34 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %45, i32 0, i32 10, !dbg !3228
  %46 = load %struct.ImBuf*, %struct.ImBuf** %canvas34, align 8, !dbg !3228
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %46, i32 0, i32 2, !dbg !3229
  %47 = load i32, i32* %x, align 8, !dbg !3229
  %conv35 = sitofp i32 %47 to float, !dbg !3227
  %mul = fmul float %44, %conv35, !dbg !3230
  %sub = fsub float %42, %mul, !dbg !3231
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %liftpos, i64 0, i64 0, !dbg !3232
  store float %sub, float* %arrayidx36, align 4, !dbg !3233
  %48 = load float*, float** %pos.addr, align 8, !dbg !3234
  %arrayidx37 = getelementptr inbounds float, float* %48, i64 1, !dbg !3234
  %49 = load float, float* %arrayidx37, align 4, !dbg !3234
  %50 = load float*, float** %offset, align 8, !dbg !3235
  %arrayidx38 = getelementptr inbounds float, float* %50, i64 1, !dbg !3235
  %51 = load float, float* %arrayidx38, align 4, !dbg !3235
  %52 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3236
  %canvas39 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %52, i32 0, i32 10, !dbg !3237
  %53 = load %struct.ImBuf*, %struct.ImBuf** %canvas39, align 8, !dbg !3237
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %53, i32 0, i32 3, !dbg !3238
  %54 = load i32, i32* %y, align 4, !dbg !3238
  %conv40 = sitofp i32 %54 to float, !dbg !3236
  %mul41 = fmul float %51, %conv40, !dbg !3239
  %sub42 = fsub float %49, %mul41, !dbg !3240
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %liftpos, i64 0, i64 1, !dbg !3241
  store float %sub42, float* %arrayidx43, align 4, !dbg !3242
  %55 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !3243
  %arraydecay44 = getelementptr inbounds [2 x float], [2 x float]* %liftpos, i64 0, i64 0, !dbg !3244
  %arraydecay45 = getelementptr inbounds [2 x i32], [2 x i32]* %bliftpos, i64 0, i64 0, !dbg !3245
  call void @paint_2d_convert_brushco(%struct.ImBuf* %55, float* %arraydecay44, i32* %arraydecay45), !dbg !3246
  %56 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3247
  %clonecanvas46 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %56, i32 0, i32 11, !dbg !3248
  %57 = load %struct.ImBuf*, %struct.ImBuf** %clonecanvas46, align 8, !dbg !3248
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !3249
  %arraydecay47 = getelementptr inbounds [2 x i32], [2 x i32]* %bliftpos, i64 0, i64 0, !dbg !3250
  %call48 = call %struct.ImBuf* @paint_2d_lift_clone(%struct.ImBuf* %57, %struct.ImBuf* %58, i32* %arraydecay47), !dbg !3251
  store %struct.ImBuf* %call48, %struct.ImBuf** %clonebuf, align 8, !dbg !3252
  br label %if.end49, !dbg !3253

if.end49:                                         ; preds = %if.then31, %land.lhs.true30, %if.else25
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then
  %59 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !3254
  %tobool52 = icmp ne %struct.ImBuf* %59, null, !dbg !3255
  br i1 %tobool52, label %cond.true, label %cond.false, !dbg !3255

cond.true:                                        ; preds = %if.end51
  %60 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !3256
  br label %cond.end, !dbg !3255

cond.false:                                       ; preds = %if.end51
  %61 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !3257
  br label %cond.end, !dbg !3255

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ImBuf* [ %60, %cond.true ], [ %61, %cond.false ], !dbg !3255
  store %struct.ImBuf* %cond, %struct.ImBuf** %frombuf, align 8, !dbg !3258
  %62 = load i16, i16* %torus, align 2, !dbg !3259
  %tobool53 = icmp ne i16 %62, 0, !dbg !3259
  br i1 %tobool53, label %if.then54, label %if.else63, !dbg !3261

if.then54:                                        ; preds = %cond.end
  %arraydecay55 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 0, !dbg !3262
  %arrayidx56 = getelementptr inbounds [2 x i32], [2 x i32]* %bpos, i64 0, i64 0, !dbg !3264
  %63 = load i32, i32* %arrayidx56, align 4, !dbg !3264
  %arrayidx57 = getelementptr inbounds [2 x i32], [2 x i32]* %bpos, i64 0, i64 1, !dbg !3265
  %64 = load i32, i32* %arrayidx57, align 4, !dbg !3265
  %65 = load %struct.ImBuf*, %struct.ImBuf** %frombuf, align 8, !dbg !3266
  %x58 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %65, i32 0, i32 2, !dbg !3267
  %66 = load i32, i32* %x58, align 8, !dbg !3267
  %67 = load %struct.ImBuf*, %struct.ImBuf** %frombuf, align 8, !dbg !3268
  %y59 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %67, i32 0, i32 3, !dbg !3269
  %68 = load i32, i32* %y59, align 4, !dbg !3269
  call void @paint_2d_set_region(%struct.ImagePaintRegion* %arraydecay55, i32 %63, i32 %64, i32 0, i32 0, i32 %66, i32 %68), !dbg !3270
  %arraydecay60 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 0, !dbg !3271
  %69 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3272
  %canvas61 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %69, i32 0, i32 10, !dbg !3273
  %70 = load %struct.ImBuf*, %struct.ImBuf** %canvas61, align 8, !dbg !3273
  %71 = load %struct.ImBuf*, %struct.ImBuf** %frombuf, align 8, !dbg !3274
  %call62 = call i32 @paint_2d_torus_split_region(%struct.ImagePaintRegion* %arraydecay60, %struct.ImBuf* %70, %struct.ImBuf* %71), !dbg !3275
  store i32 %call62, i32* %tot, align 4, !dbg !3276
  br label %if.end69, !dbg !3277

if.else63:                                        ; preds = %cond.end
  %arraydecay64 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 0, !dbg !3278
  %arrayidx65 = getelementptr inbounds [2 x i32], [2 x i32]* %bpos, i64 0, i64 0, !dbg !3280
  %72 = load i32, i32* %arrayidx65, align 4, !dbg !3280
  %arrayidx66 = getelementptr inbounds [2 x i32], [2 x i32]* %bpos, i64 0, i64 1, !dbg !3281
  %73 = load i32, i32* %arrayidx66, align 4, !dbg !3281
  %74 = load %struct.ImBuf*, %struct.ImBuf** %frombuf, align 8, !dbg !3282
  %x67 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %74, i32 0, i32 2, !dbg !3283
  %75 = load i32, i32* %x67, align 8, !dbg !3283
  %76 = load %struct.ImBuf*, %struct.ImBuf** %frombuf, align 8, !dbg !3284
  %y68 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %76, i32 0, i32 3, !dbg !3285
  %77 = load i32, i32* %y68, align 4, !dbg !3285
  call void @paint_2d_set_region(%struct.ImagePaintRegion* %arraydecay64, i32 %72, i32 %73, i32 0, i32 0, i32 %75, i32 %77), !dbg !3286
  store i32 1, i32* %tot, align 4, !dbg !3287
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then54
  store i32 0, i32* %a, align 4, !dbg !3288
  br label %for.cond, !dbg !3290

for.cond:                                         ; preds = %for.inc182, %if.end69
  %78 = load i32, i32* %a, align 4, !dbg !3291
  %79 = load i32, i32* %tot, align 4, !dbg !3293
  %cmp70 = icmp slt i32 %78, %79, !dbg !3294
  br i1 %cmp70, label %for.body, label %for.end184, !dbg !3295

for.body:                                         ; preds = %for.cond
  %80 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3296
  %image = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %80, i32 0, i32 9, !dbg !3298
  %81 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !3298
  %82 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3299
  %canvas72 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %82, i32 0, i32 10, !dbg !3300
  %83 = load %struct.ImBuf*, %struct.ImBuf** %canvas72, align 8, !dbg !3300
  %84 = load i32, i32* %a, align 4, !dbg !3301
  %idxprom = sext i32 %84 to i64, !dbg !3302
  %arrayidx73 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom, !dbg !3302
  %destx = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx73, i32 0, i32 0, !dbg !3303
  %85 = load i32, i32* %destx, align 8, !dbg !3303
  %86 = load i32, i32* %a, align 4, !dbg !3304
  %idxprom74 = sext i32 %86 to i64, !dbg !3305
  %arrayidx75 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom74, !dbg !3305
  %desty = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx75, i32 0, i32 1, !dbg !3306
  %87 = load i32, i32* %desty, align 4, !dbg !3306
  %88 = load i32, i32* %a, align 4, !dbg !3307
  %idxprom76 = sext i32 %88 to i64, !dbg !3308
  %arrayidx77 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom76, !dbg !3308
  %width = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx77, i32 0, i32 4, !dbg !3309
  %89 = load i32, i32* %width, align 8, !dbg !3309
  %90 = load i32, i32* %a, align 4, !dbg !3310
  %idxprom78 = sext i32 %90 to i64, !dbg !3311
  %arrayidx79 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom78, !dbg !3311
  %height = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx79, i32 0, i32 5, !dbg !3312
  %91 = load i32, i32* %height, align 4, !dbg !3312
  call void @ED_imapaint_dirty_region(%struct.Image* %81, %struct.ImBuf* %83, i32 %85, i32 %87, i32 %89, i32 %91), !dbg !3313
  %92 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3314
  %do_masking = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %92, i32 0, i32 14, !dbg !3316
  %93 = load i8, i8* %do_masking, align 8, !dbg !3316
  %tobool80 = icmp ne i8 %93, 0, !dbg !3314
  br i1 %tobool80, label %if.then81, label %if.else153, !dbg !3317

if.then81:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %tilex, metadata !3318, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.declare(metadata i32* %tiley, metadata !3321, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.declare(metadata i32* %tilew, metadata !3323, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.declare(metadata i32* %tileh, metadata !3325, metadata !DIExpression()), !dbg !3326
  call void @llvm.dbg.declare(metadata i32* %tx, metadata !3327, metadata !DIExpression()), !dbg !3328
  call void @llvm.dbg.declare(metadata i32* %ty, metadata !3329, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %tmpbuf, metadata !3331, metadata !DIExpression()), !dbg !3332
  %94 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3333
  %canvas82 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %94, i32 0, i32 10, !dbg !3334
  %95 = load %struct.ImBuf*, %struct.ImBuf** %canvas82, align 8, !dbg !3334
  %96 = load i32, i32* %a, align 4, !dbg !3335
  %idxprom83 = sext i32 %96 to i64, !dbg !3336
  %arrayidx84 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom83, !dbg !3336
  %destx85 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx84, i32 0, i32 0, !dbg !3337
  %97 = load i32, i32* %destx85, align 8, !dbg !3337
  %98 = load i32, i32* %a, align 4, !dbg !3338
  %idxprom86 = sext i32 %98 to i64, !dbg !3339
  %arrayidx87 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom86, !dbg !3339
  %desty88 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx87, i32 0, i32 1, !dbg !3340
  %99 = load i32, i32* %desty88, align 4, !dbg !3340
  %100 = load i32, i32* %a, align 4, !dbg !3341
  %idxprom89 = sext i32 %100 to i64, !dbg !3342
  %arrayidx90 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom89, !dbg !3342
  %width91 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx90, i32 0, i32 4, !dbg !3343
  %101 = load i32, i32* %width91, align 8, !dbg !3343
  %102 = load i32, i32* %a, align 4, !dbg !3344
  %idxprom92 = sext i32 %102 to i64, !dbg !3345
  %arrayidx93 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom92, !dbg !3345
  %height94 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx93, i32 0, i32 5, !dbg !3346
  %103 = load i32, i32* %height94, align 4, !dbg !3346
  call void @imapaint_region_tiles(%struct.ImBuf* %95, i32 %97, i32 %99, i32 %101, i32 %103, i32* %tilex, i32* %tiley, i32* %tilew, i32* %tileh), !dbg !3347
  %call95 = call %struct.ImBuf* @IMB_allocImBuf(i32 64, i32 64, i8 zeroext 32, i32 0), !dbg !3348
  store %struct.ImBuf* %call95, %struct.ImBuf** %tmpbuf, align 8, !dbg !3349
  %104 = load i32, i32* %tiley, align 4, !dbg !3350
  store i32 %104, i32* %ty, align 4, !dbg !3352
  br label %for.cond96, !dbg !3353

for.cond96:                                       ; preds = %for.inc150, %if.then81
  %105 = load i32, i32* %ty, align 4, !dbg !3354
  %106 = load i32, i32* %tileh, align 4, !dbg !3356
  %cmp97 = icmp sle i32 %105, %106, !dbg !3357
  br i1 %cmp97, label %for.body99, label %for.end152, !dbg !3358

for.body99:                                       ; preds = %for.cond96
  %107 = load i32, i32* %tilex, align 4, !dbg !3359
  store i32 %107, i32* %tx, align 4, !dbg !3362
  br label %for.cond100, !dbg !3363

for.cond100:                                      ; preds = %for.inc, %for.body99
  %108 = load i32, i32* %tx, align 4, !dbg !3364
  %109 = load i32, i32* %tilew, align 4, !dbg !3366
  %cmp101 = icmp sle i32 %108, %109, !dbg !3367
  br i1 %cmp101, label %for.body103, label %for.end, !dbg !3368

for.body103:                                      ; preds = %for.cond100
  call void @llvm.dbg.declare(metadata i16** %mask, metadata !3369, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.declare(metadata i32* %origx, metadata !3372, metadata !DIExpression()), !dbg !3373
  %110 = load i32, i32* %a, align 4, !dbg !3374
  %idxprom104 = sext i32 %110 to i64, !dbg !3375
  %arrayidx105 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom104, !dbg !3375
  %destx106 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx105, i32 0, i32 0, !dbg !3376
  %111 = load i32, i32* %destx106, align 8, !dbg !3376
  %112 = load i32, i32* %tx, align 4, !dbg !3377
  %mul107 = mul nsw i32 %112, 64, !dbg !3378
  %sub108 = sub nsw i32 %111, %mul107, !dbg !3379
  store i32 %sub108, i32* %origx, align 4, !dbg !3373
  call void @llvm.dbg.declare(metadata i32* %origy, metadata !3380, metadata !DIExpression()), !dbg !3381
  %113 = load i32, i32* %a, align 4, !dbg !3382
  %idxprom109 = sext i32 %113 to i64, !dbg !3383
  %arrayidx110 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom109, !dbg !3383
  %desty111 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx110, i32 0, i32 1, !dbg !3384
  %114 = load i32, i32* %desty111, align 4, !dbg !3384
  %115 = load i32, i32* %ty, align 4, !dbg !3385
  %mul112 = mul nsw i32 %115, 64, !dbg !3386
  %sub113 = sub nsw i32 %114, %mul112, !dbg !3387
  store i32 %sub113, i32* %origy, align 4, !dbg !3381
  %116 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3388
  %canvas114 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %116, i32 0, i32 10, !dbg !3390
  %117 = load %struct.ImBuf*, %struct.ImBuf** %canvas114, align 8, !dbg !3390
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %117, i32 0, i32 9, !dbg !3391
  %118 = load float*, float** %rect_float, align 8, !dbg !3391
  %tobool115 = icmp ne float* %118, null, !dbg !3388
  br i1 %tobool115, label %if.then116, label %if.else121, !dbg !3392

if.then116:                                       ; preds = %for.body103
  %119 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3393
  %image117 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %119, i32 0, i32 9, !dbg !3394
  %120 = load %struct.Image*, %struct.Image** %image117, align 8, !dbg !3394
  %121 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3395
  %canvas118 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %121, i32 0, i32 10, !dbg !3396
  %122 = load %struct.ImBuf*, %struct.ImBuf** %canvas118, align 8, !dbg !3396
  %123 = load i32, i32* %tx, align 4, !dbg !3397
  %124 = load i32, i32* %ty, align 4, !dbg !3398
  %call119 = call i8* @image_undo_find_tile(%struct.Image* %120, %struct.ImBuf* %122, i32 %123, i32 %124, i16** %mask, i8 zeroext 0), !dbg !3399
  %125 = bitcast i8* %call119 to float*, !dbg !3399
  %126 = load %struct.ImBuf*, %struct.ImBuf** %tmpbuf, align 8, !dbg !3400
  %rect_float120 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %126, i32 0, i32 9, !dbg !3401
  store float* %125, float** %rect_float120, align 8, !dbg !3402
  br label %if.end125, !dbg !3400

if.else121:                                       ; preds = %for.body103
  %127 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3403
  %image122 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %127, i32 0, i32 9, !dbg !3404
  %128 = load %struct.Image*, %struct.Image** %image122, align 8, !dbg !3404
  %129 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3405
  %canvas123 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %129, i32 0, i32 10, !dbg !3406
  %130 = load %struct.ImBuf*, %struct.ImBuf** %canvas123, align 8, !dbg !3406
  %131 = load i32, i32* %tx, align 4, !dbg !3407
  %132 = load i32, i32* %ty, align 4, !dbg !3408
  %call124 = call i8* @image_undo_find_tile(%struct.Image* %128, %struct.ImBuf* %130, i32 %131, i32 %132, i16** %mask, i8 zeroext 0), !dbg !3409
  %133 = bitcast i8* %call124 to i32*, !dbg !3409
  %134 = load %struct.ImBuf*, %struct.ImBuf** %tmpbuf, align 8, !dbg !3410
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %134, i32 0, i32 8, !dbg !3411
  store i32* %133, i32** %rect, align 8, !dbg !3412
  br label %if.end125

if.end125:                                        ; preds = %if.else121, %if.then116
  %135 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3413
  %canvas126 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %135, i32 0, i32 10, !dbg !3414
  %136 = load %struct.ImBuf*, %struct.ImBuf** %canvas126, align 8, !dbg !3414
  %137 = load %struct.ImBuf*, %struct.ImBuf** %tmpbuf, align 8, !dbg !3415
  %138 = load %struct.ImBuf*, %struct.ImBuf** %frombuf, align 8, !dbg !3416
  %139 = load i16*, i16** %mask, align 8, !dbg !3417
  %140 = load i16*, i16** %curveb.addr, align 8, !dbg !3418
  %141 = load i16*, i16** %texmaskb.addr, align 8, !dbg !3419
  %142 = load float, float* %mask_max, align 4, !dbg !3420
  %143 = load i32, i32* %a, align 4, !dbg !3421
  %idxprom127 = sext i32 %143 to i64, !dbg !3422
  %arrayidx128 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom127, !dbg !3422
  %destx129 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx128, i32 0, i32 0, !dbg !3423
  %144 = load i32, i32* %destx129, align 8, !dbg !3423
  %145 = load i32, i32* %a, align 4, !dbg !3424
  %idxprom130 = sext i32 %145 to i64, !dbg !3425
  %arrayidx131 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom130, !dbg !3425
  %desty132 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx131, i32 0, i32 1, !dbg !3426
  %146 = load i32, i32* %desty132, align 4, !dbg !3426
  %147 = load i32, i32* %origx, align 4, !dbg !3427
  %148 = load i32, i32* %origy, align 4, !dbg !3428
  %149 = load i32, i32* %a, align 4, !dbg !3429
  %idxprom133 = sext i32 %149 to i64, !dbg !3430
  %arrayidx134 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom133, !dbg !3430
  %srcx = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx134, i32 0, i32 2, !dbg !3431
  %150 = load i32, i32* %srcx, align 8, !dbg !3431
  %151 = load i32, i32* %a, align 4, !dbg !3432
  %idxprom135 = sext i32 %151 to i64, !dbg !3433
  %arrayidx136 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom135, !dbg !3433
  %srcy = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx136, i32 0, i32 3, !dbg !3434
  %152 = load i32, i32* %srcy, align 4, !dbg !3434
  %153 = load i32, i32* %a, align 4, !dbg !3435
  %idxprom137 = sext i32 %153 to i64, !dbg !3436
  %arrayidx138 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom137, !dbg !3436
  %width139 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx138, i32 0, i32 4, !dbg !3437
  %154 = load i32, i32* %width139, align 8, !dbg !3437
  %155 = load i32, i32* %a, align 4, !dbg !3438
  %idxprom140 = sext i32 %155 to i64, !dbg !3439
  %arrayidx141 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom140, !dbg !3439
  %height142 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx141, i32 0, i32 5, !dbg !3440
  %156 = load i32, i32* %height142, align 4, !dbg !3440
  %157 = load i16, i16* %blend, align 2, !dbg !3441
  %conv143 = sext i16 %157 to i32, !dbg !3441
  %158 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3442
  %brush144 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %158, i32 0, i32 6, !dbg !3443
  %159 = load %struct.Brush*, %struct.Brush** %brush144, align 8, !dbg !3443
  %flag145 = getelementptr inbounds %struct.Brush, %struct.Brush* %159, i32 0, i32 16, !dbg !3444
  %160 = load i32, i32* %flag145, align 8, !dbg !3444
  %and146 = and i32 %160, 8192, !dbg !3445
  %cmp147 = icmp ne i32 %and146, 0, !dbg !3446
  %conv148 = zext i1 %cmp147 to i32, !dbg !3446
  %conv149 = trunc i32 %conv148 to i8, !dbg !3447
  call void @IMB_rectblend(%struct.ImBuf* %136, %struct.ImBuf* %137, %struct.ImBuf* %138, i16* %139, i16* %140, i16* %141, float %142, i32 %144, i32 %146, i32 %147, i32 %148, i32 %150, i32 %152, i32 %154, i32 %156, i32 %conv143, i8 zeroext %conv149), !dbg !3448
  br label %for.inc, !dbg !3449

for.inc:                                          ; preds = %if.end125
  %161 = load i32, i32* %tx, align 4, !dbg !3450
  %inc = add nsw i32 %161, 1, !dbg !3450
  store i32 %inc, i32* %tx, align 4, !dbg !3450
  br label %for.cond100, !dbg !3451, !llvm.loop !3452

for.end:                                          ; preds = %for.cond100
  br label %for.inc150, !dbg !3454

for.inc150:                                       ; preds = %for.end
  %162 = load i32, i32* %ty, align 4, !dbg !3455
  %inc151 = add nsw i32 %162, 1, !dbg !3455
  store i32 %inc151, i32* %ty, align 4, !dbg !3455
  br label %for.cond96, !dbg !3456, !llvm.loop !3457

for.end152:                                       ; preds = %for.cond96
  %163 = load %struct.ImBuf*, %struct.ImBuf** %tmpbuf, align 8, !dbg !3459
  call void @IMB_freeImBuf(%struct.ImBuf* %163), !dbg !3460
  br label %if.end181, !dbg !3461

if.else153:                                       ; preds = %for.body
  %164 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3462
  %canvas154 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %164, i32 0, i32 10, !dbg !3464
  %165 = load %struct.ImBuf*, %struct.ImBuf** %canvas154, align 8, !dbg !3464
  %166 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3465
  %canvas155 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %166, i32 0, i32 10, !dbg !3466
  %167 = load %struct.ImBuf*, %struct.ImBuf** %canvas155, align 8, !dbg !3466
  %168 = load %struct.ImBuf*, %struct.ImBuf** %frombuf, align 8, !dbg !3467
  %169 = load i16*, i16** %curveb.addr, align 8, !dbg !3468
  %170 = load i16*, i16** %texmaskb.addr, align 8, !dbg !3469
  %171 = load float, float* %mask_max, align 4, !dbg !3470
  %172 = load i32, i32* %a, align 4, !dbg !3471
  %idxprom156 = sext i32 %172 to i64, !dbg !3472
  %arrayidx157 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom156, !dbg !3472
  %destx158 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx157, i32 0, i32 0, !dbg !3473
  %173 = load i32, i32* %destx158, align 8, !dbg !3473
  %174 = load i32, i32* %a, align 4, !dbg !3474
  %idxprom159 = sext i32 %174 to i64, !dbg !3475
  %arrayidx160 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom159, !dbg !3475
  %desty161 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx160, i32 0, i32 1, !dbg !3476
  %175 = load i32, i32* %desty161, align 4, !dbg !3476
  %176 = load i32, i32* %a, align 4, !dbg !3477
  %idxprom162 = sext i32 %176 to i64, !dbg !3478
  %arrayidx163 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom162, !dbg !3478
  %destx164 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx163, i32 0, i32 0, !dbg !3479
  %177 = load i32, i32* %destx164, align 8, !dbg !3479
  %178 = load i32, i32* %a, align 4, !dbg !3480
  %idxprom165 = sext i32 %178 to i64, !dbg !3481
  %arrayidx166 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom165, !dbg !3481
  %desty167 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx166, i32 0, i32 1, !dbg !3482
  %179 = load i32, i32* %desty167, align 4, !dbg !3482
  %180 = load i32, i32* %a, align 4, !dbg !3483
  %idxprom168 = sext i32 %180 to i64, !dbg !3484
  %arrayidx169 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom168, !dbg !3484
  %srcx170 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx169, i32 0, i32 2, !dbg !3485
  %181 = load i32, i32* %srcx170, align 8, !dbg !3485
  %182 = load i32, i32* %a, align 4, !dbg !3486
  %idxprom171 = sext i32 %182 to i64, !dbg !3487
  %arrayidx172 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom171, !dbg !3487
  %srcy173 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx172, i32 0, i32 3, !dbg !3488
  %183 = load i32, i32* %srcy173, align 4, !dbg !3488
  %184 = load i32, i32* %a, align 4, !dbg !3489
  %idxprom174 = sext i32 %184 to i64, !dbg !3490
  %arrayidx175 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom174, !dbg !3490
  %width176 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx175, i32 0, i32 4, !dbg !3491
  %185 = load i32, i32* %width176, align 8, !dbg !3491
  %186 = load i32, i32* %a, align 4, !dbg !3492
  %idxprom177 = sext i32 %186 to i64, !dbg !3493
  %arrayidx178 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom177, !dbg !3493
  %height179 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx178, i32 0, i32 5, !dbg !3494
  %187 = load i32, i32* %height179, align 4, !dbg !3494
  %188 = load i16, i16* %blend, align 2, !dbg !3495
  %conv180 = sext i16 %188 to i32, !dbg !3495
  call void @IMB_rectblend(%struct.ImBuf* %165, %struct.ImBuf* %167, %struct.ImBuf* %168, i16* null, i16* %169, i16* %170, float %171, i32 %173, i32 %175, i32 %177, i32 %179, i32 %181, i32 %183, i32 %185, i32 %187, i32 %conv180, i8 zeroext 0), !dbg !3496
  br label %if.end181

if.end181:                                        ; preds = %if.else153, %for.end152
  br label %for.inc182, !dbg !3497

for.inc182:                                       ; preds = %if.end181
  %189 = load i32, i32* %a, align 4, !dbg !3498
  %inc183 = add nsw i32 %189, 1, !dbg !3498
  store i32 %inc183, i32* %a, align 4, !dbg !3498
  br label %for.cond, !dbg !3499, !llvm.loop !3500

for.end184:                                       ; preds = %for.cond
  %190 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !3502
  %tobool185 = icmp ne %struct.ImBuf* %190, null, !dbg !3502
  br i1 %tobool185, label %if.then186, label %if.end187, !dbg !3504

if.then186:                                       ; preds = %for.end184
  %191 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !3505
  call void @IMB_freeImBuf(%struct.ImBuf* %191), !dbg !3506
  br label %if.end187, !dbg !3506

if.end187:                                        ; preds = %if.then186, %for.end184
  store i32 1, i32* %retval, align 4, !dbg !3507
  br label %return, !dbg !3507

return:                                           ; preds = %if.end187, %if.then21
  %192 = load i32, i32* %retval, align 4, !dbg !3508
  ret i32 %192, !dbg !3508
}

declare dso_local void @BKE_image_release_ibuf(%struct.Image*, %struct.ImBuf*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @paint_2d_new_stroke(%struct.bContext* %C, %struct.wmOperator* %op, i32 %mode) #0 !dbg !3509 {
entry:
  %retval = alloca i8*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mode.addr = alloca i32, align 4
  %scene = alloca %struct.Scene*, align 8
  %settings = alloca %struct.ToolSettings*, align 8
  %brush = alloca %struct.Brush*, align 8
  %s = alloca %struct.ImagePaintState*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3642, metadata !DIExpression()), !dbg !3643
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3644, metadata !DIExpression()), !dbg !3645
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3646, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !3648, metadata !DIExpression()), !dbg !3649
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3650
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !3651
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !3649
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %settings, metadata !3652, metadata !DIExpression()), !dbg !3655
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3656
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 20, !dbg !3657
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !3657
  store %struct.ToolSettings* %2, %struct.ToolSettings** %settings, align 8, !dbg !3655
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !3658, metadata !DIExpression()), !dbg !3659
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %settings, align 8, !dbg !3660
  %imapaint = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %3, i32 0, i32 17, !dbg !3661
  %paint = getelementptr inbounds %struct.ImagePaintSettings, %struct.ImagePaintSettings* %imapaint, i32 0, i32 0, !dbg !3662
  %call1 = call %struct.Brush* @BKE_paint_brush(%struct.Paint* %paint), !dbg !3663
  store %struct.Brush* %call1, %struct.Brush** %brush, align 8, !dbg !3659
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s, metadata !3664, metadata !DIExpression()), !dbg !3665
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3666
  %call2 = call i8* %4(i64 152, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)), !dbg !3666
  %5 = bitcast i8* %call2 to %struct.ImagePaintState*, !dbg !3666
  store %struct.ImagePaintState* %5, %struct.ImagePaintState** %s, align 8, !dbg !3665
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3667
  %call3 = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %6), !dbg !3668
  %7 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3669
  %sima = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %7, i32 0, i32 1, !dbg !3670
  store %struct.SpaceImage* %call3, %struct.SpaceImage** %sima, align 8, !dbg !3671
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3672
  %call4 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %8), !dbg !3673
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %call4, i32 0, i32 2, !dbg !3674
  %9 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3675
  %v2d5 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %9, i32 0, i32 2, !dbg !3676
  store %struct.View2D* %v2d, %struct.View2D** %v2d5, align 8, !dbg !3677
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3678
  %11 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3679
  %scene6 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %11, i32 0, i32 3, !dbg !3680
  store %struct.Scene* %10, %struct.Scene** %scene6, align 8, !dbg !3681
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3682
  %call7 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %12), !dbg !3683
  %13 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3684
  %screen = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %13, i32 0, i32 4, !dbg !3685
  store %struct.bScreen* %call7, %struct.bScreen** %screen, align 8, !dbg !3686
  %14 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3687
  %15 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3688
  %brush8 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %15, i32 0, i32 6, !dbg !3689
  store %struct.Brush* %14, %struct.Brush** %brush8, align 8, !dbg !3690
  %16 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3691
  %imagepaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %16, i32 0, i32 36, !dbg !3692
  %17 = load i8, i8* %imagepaint_tool, align 2, !dbg !3692
  %conv = zext i8 %17 to i16, !dbg !3691
  %18 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3693
  %tool = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %18, i32 0, i32 7, !dbg !3694
  store i16 %conv, i16* %tool, align 8, !dbg !3695
  %19 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3696
  %blend = getelementptr inbounds %struct.Brush, %struct.Brush* %19, i32 0, i32 12, !dbg !3697
  %20 = load i16, i16* %blend, align 4, !dbg !3697
  %21 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3698
  %blend9 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %21, i32 0, i32 8, !dbg !3699
  store i16 %20, i16* %blend9, align 2, !dbg !3700
  %22 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3701
  %sima10 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %22, i32 0, i32 1, !dbg !3702
  %23 = load %struct.SpaceImage*, %struct.SpaceImage** %sima10, align 8, !dbg !3702
  %image = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %23, i32 0, i32 5, !dbg !3703
  %24 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !3703
  %25 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3704
  %image11 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %25, i32 0, i32 9, !dbg !3705
  store %struct.Image* %24, %struct.Image** %image11, align 8, !dbg !3706
  %26 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3707
  %27 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3709
  %image12 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %27, i32 0, i32 9, !dbg !3710
  %28 = load %struct.Image*, %struct.Image** %image12, align 8, !dbg !3710
  %call13 = call i32 @paint_2d_canvas_set(%struct.ImagePaintState* %26, %struct.Image* %28), !dbg !3711
  %tobool = icmp ne i32 %call13, 0, !dbg !3711
  br i1 %tobool, label %if.end20, label %if.then, !dbg !3712

if.then:                                          ; preds = %entry
  %29 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3713
  %warnmultifile = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %29, i32 0, i32 13, !dbg !3716
  %30 = load i8*, i8** %warnmultifile, align 8, !dbg !3716
  %tobool14 = icmp ne i8* %30, null, !dbg !3713
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !3717

if.then15:                                        ; preds = %if.then
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3718
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %31, i32 0, i32 8, !dbg !3719
  %32 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !3719
  call void @BKE_report(%struct.ReportList* %32, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)), !dbg !3720
  br label %if.end, !dbg !3720

if.end:                                           ; preds = %if.then15, %if.then
  %33 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3721
  %warnpackedfile = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %33, i32 0, i32 12, !dbg !3723
  %34 = load i8*, i8** %warnpackedfile, align 8, !dbg !3723
  %tobool16 = icmp ne i8* %34, null, !dbg !3721
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !3724

if.then17:                                        ; preds = %if.end
  %35 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3725
  %reports18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %35, i32 0, i32 8, !dbg !3726
  %36 = load %struct.ReportList*, %struct.ReportList** %reports18, align 8, !dbg !3726
  call void @BKE_report(%struct.ReportList* %36, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0)), !dbg !3727
  br label %if.end19, !dbg !3727

if.end19:                                         ; preds = %if.then17, %if.end
  %37 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3728
  %38 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3729
  %39 = bitcast %struct.ImagePaintState* %38 to i8*, !dbg !3729
  call void %37(i8* %39), !dbg !3728
  store i8* null, i8** %retval, align 8, !dbg !3730
  br label %return, !dbg !3730

if.end20:                                         ; preds = %entry
  %40 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3731
  %imagepaint_tool21 = getelementptr inbounds %struct.Brush, %struct.Brush* %40, i32 0, i32 36, !dbg !3733
  %41 = load i8, i8* %imagepaint_tool21, align 2, !dbg !3733
  %conv22 = zext i8 %41 to i32, !dbg !3731
  %cmp = icmp eq i32 %conv22, 1, !dbg !3734
  br i1 %cmp, label %if.then24, label %if.end26, !dbg !3735

if.then24:                                        ; preds = %if.end20
  %42 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3736
  %call25 = call %struct.BlurKernel* @paint_new_blur_kernel(%struct.Brush* %42, i8 zeroext 0), !dbg !3738
  %43 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3739
  %blurkernel = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %43, i32 0, i32 20, !dbg !3740
  store %struct.BlurKernel* %call25, %struct.BlurKernel** %blurkernel, align 8, !dbg !3741
  br label %if.end26, !dbg !3742

if.end26:                                         ; preds = %if.then24, %if.end20
  %44 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3743
  %brush27 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %44, i32 0, i32 6, !dbg !3744
  %45 = load %struct.Brush*, %struct.Brush** %brush27, align 8, !dbg !3744
  call void @paint_brush_init_tex(%struct.Brush* %45), !dbg !3745
  %46 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3746
  %47 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3747
  %brush28 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %47, i32 0, i32 6, !dbg !3748
  %48 = load %struct.Brush*, %struct.Brush** %brush28, align 8, !dbg !3748
  %49 = load i32, i32* %mode.addr, align 4, !dbg !3749
  %cmp29 = icmp eq i32 %49, 1, !dbg !3750
  %conv30 = zext i1 %cmp29 to i32, !dbg !3750
  %conv31 = trunc i32 %conv30 to i8, !dbg !3749
  %call32 = call %struct.BrushPainter* @brush_painter_2d_new(%struct.Scene* %46, %struct.Brush* %48, i8 zeroext %conv31), !dbg !3751
  %50 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3752
  %painter = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %50, i32 0, i32 0, !dbg !3753
  store %struct.BrushPainter* %call32, %struct.BrushPainter** %painter, align 8, !dbg !3754
  %51 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3755
  %52 = bitcast %struct.ImagePaintState* %51 to i8*, !dbg !3755
  store i8* %52, i8** %retval, align 8, !dbg !3756
  br label %return, !dbg !3756

return:                                           ; preds = %if.end26, %if.end19
  %53 = load i8*, i8** %retval, align 8, !dbg !3757
  ret i8* %53, !dbg !3757
}

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local %struct.Brush* @BKE_paint_brush(%struct.Paint*) #2

declare dso_local %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local %struct.bScreen* @CTX_wm_screen(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @paint_2d_canvas_set(%struct.ImagePaintState* %s, %struct.Image* %ima) #0 !dbg !3758 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ImagePaintState*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.ImagePaintState* %s, %struct.ImagePaintState** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s.addr, metadata !3761, metadata !DIExpression()), !dbg !3762
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3763, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !3765, metadata !DIExpression()), !dbg !3766
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3767
  %1 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3768
  %sima = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %1, i32 0, i32 1, !dbg !3769
  %2 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !3769
  %tobool = icmp ne %struct.SpaceImage* %2, null, !dbg !3768
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3768

cond.true:                                        ; preds = %entry
  %3 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3770
  %sima1 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %3, i32 0, i32 1, !dbg !3771
  %4 = load %struct.SpaceImage*, %struct.SpaceImage** %sima1, align 8, !dbg !3771
  %iuser = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %4, i32 0, i32 6, !dbg !3772
  br label %cond.end, !dbg !3768

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3768

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ImageUser* [ %iuser, %cond.true ], [ null, %cond.false ], !dbg !3768
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %0, %struct.ImageUser* %cond, i8** null), !dbg !3773
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !3766
  %5 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3774
  %cmp = icmp eq %struct.Image* %5, null, !dbg !3776
  br i1 %cmp, label %if.then, label %if.else, !dbg !3777

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !3778
  br label %return, !dbg !3778

if.else:                                          ; preds = %cond.end
  %6 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3780
  %packedfile = getelementptr inbounds %struct.Image, %struct.Image* %6, i32 0, i32 22, !dbg !3782
  %7 = load %struct.PackedFile*, %struct.PackedFile** %packedfile, align 8, !dbg !3782
  %tobool2 = icmp ne %struct.PackedFile* %7, null, !dbg !3780
  br i1 %tobool2, label %land.lhs.true, label %if.else5, !dbg !3783

land.lhs.true:                                    ; preds = %if.else
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3784
  %rr = getelementptr inbounds %struct.Image, %struct.Image* %8, i32 0, i32 5, !dbg !3785
  %9 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !3785
  %tobool3 = icmp ne %struct.RenderResult* %9, null, !dbg !3784
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3786

if.then4:                                         ; preds = %land.lhs.true
  %10 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3787
  %id = getelementptr inbounds %struct.Image, %struct.Image* %10, i32 0, i32 0, !dbg !3789
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !3790
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3787
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !3791
  %11 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3792
  %warnpackedfile = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %11, i32 0, i32 12, !dbg !3793
  store i8* %add.ptr, i8** %warnpackedfile, align 8, !dbg !3794
  store i32 0, i32* %retval, align 4, !dbg !3795
  br label %return, !dbg !3795

if.else5:                                         ; preds = %land.lhs.true, %if.else
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3796
  %tobool6 = icmp ne %struct.ImBuf* %12, null, !dbg !3796
  br i1 %tobool6, label %land.lhs.true7, label %if.else14, !dbg !3798

land.lhs.true7:                                   ; preds = %if.else5
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3799
  %channels = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 5, !dbg !3800
  %14 = load i32, i32* %channels, align 4, !dbg !3800
  %cmp8 = icmp ne i32 %14, 4, !dbg !3801
  br i1 %cmp8, label %if.then9, label %if.else14, !dbg !3802

if.then9:                                         ; preds = %land.lhs.true7
  %15 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3803
  %id10 = getelementptr inbounds %struct.Image, %struct.Image* %15, i32 0, i32 0, !dbg !3805
  %name11 = getelementptr inbounds %struct.ID, %struct.ID* %id10, i32 0, i32 4, !dbg !3806
  %arraydecay12 = getelementptr inbounds [66 x i8], [66 x i8]* %name11, i64 0, i64 0, !dbg !3803
  %add.ptr13 = getelementptr inbounds i8, i8* %arraydecay12, i64 2, !dbg !3807
  %16 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3808
  %warnmultifile = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %16, i32 0, i32 13, !dbg !3809
  store i8* %add.ptr13, i8** %warnmultifile, align 8, !dbg !3810
  store i32 0, i32* %retval, align 4, !dbg !3811
  br label %return, !dbg !3811

if.else14:                                        ; preds = %land.lhs.true7, %if.else5
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3812
  %tobool15 = icmp ne %struct.ImBuf* %17, null, !dbg !3812
  br i1 %tobool15, label %lor.lhs.false, label %if.then19, !dbg !3814

lor.lhs.false:                                    ; preds = %if.else14
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3815
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %18, i32 0, i32 8, !dbg !3816
  %19 = load i32*, i32** %rect, align 8, !dbg !3816
  %tobool16 = icmp ne i32* %19, null, !dbg !3815
  br i1 %tobool16, label %if.end, label %lor.lhs.false17, !dbg !3817

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3818
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 9, !dbg !3819
  %21 = load float*, float** %rect_float, align 8, !dbg !3819
  %tobool18 = icmp ne float* %21, null, !dbg !3818
  br i1 %tobool18, label %if.end, label %if.then19, !dbg !3820

if.then19:                                        ; preds = %lor.lhs.false17, %if.else14
  store i32 0, i32* %retval, align 4, !dbg !3821
  br label %return, !dbg !3821

if.end:                                           ; preds = %lor.lhs.false17, %lor.lhs.false
  br label %if.end20

if.end20:                                         ; preds = %if.end
  br label %if.end21

if.end21:                                         ; preds = %if.end20
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  %22 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3822
  %23 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3823
  %image = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %23, i32 0, i32 9, !dbg !3824
  store %struct.Image* %22, %struct.Image** %image, align 8, !dbg !3825
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3826
  %25 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3827
  %canvas = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %25, i32 0, i32 10, !dbg !3828
  store %struct.ImBuf* %24, %struct.ImBuf** %canvas, align 8, !dbg !3829
  %26 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3830
  %tool = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %26, i32 0, i32 7, !dbg !3832
  %27 = load i16, i16* %tool, align 8, !dbg !3832
  %conv = sext i16 %27 to i32, !dbg !3830
  %cmp23 = icmp eq i32 %conv, 3, !dbg !3833
  br i1 %cmp23, label %if.then25, label %if.end70, !dbg !3834

if.then25:                                        ; preds = %if.end22
  %28 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3835
  %brush = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %28, i32 0, i32 6, !dbg !3837
  %29 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !3837
  %clone = getelementptr inbounds %struct.Brush, %struct.Brush* %29, i32 0, i32 1, !dbg !3838
  %image26 = getelementptr inbounds %struct.BrushClone, %struct.BrushClone* %clone, i32 0, i32 0, !dbg !3839
  %30 = load %struct.Image*, %struct.Image** %image26, align 8, !dbg !3839
  store %struct.Image* %30, %struct.Image** %ima.addr, align 8, !dbg !3840
  %31 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3841
  %32 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3842
  %sima27 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %32, i32 0, i32 1, !dbg !3843
  %33 = load %struct.SpaceImage*, %struct.SpaceImage** %sima27, align 8, !dbg !3843
  %tobool28 = icmp ne %struct.SpaceImage* %33, null, !dbg !3842
  br i1 %tobool28, label %cond.true29, label %cond.false32, !dbg !3842

cond.true29:                                      ; preds = %if.then25
  %34 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3844
  %sima30 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %34, i32 0, i32 1, !dbg !3845
  %35 = load %struct.SpaceImage*, %struct.SpaceImage** %sima30, align 8, !dbg !3845
  %iuser31 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %35, i32 0, i32 6, !dbg !3846
  br label %cond.end33, !dbg !3842

cond.false32:                                     ; preds = %if.then25
  br label %cond.end33, !dbg !3842

cond.end33:                                       ; preds = %cond.false32, %cond.true29
  %cond34 = phi %struct.ImageUser* [ %iuser31, %cond.true29 ], [ null, %cond.false32 ], !dbg !3842
  %call35 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %31, %struct.ImageUser* %cond34, i8** null), !dbg !3847
  store %struct.ImBuf* %call35, %struct.ImBuf** %ibuf, align 8, !dbg !3848
  %36 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3849
  %tobool36 = icmp ne %struct.Image* %36, null, !dbg !3849
  br i1 %tobool36, label %lor.lhs.false37, label %if.then45, !dbg !3851

lor.lhs.false37:                                  ; preds = %cond.end33
  %37 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3852
  %tobool38 = icmp ne %struct.ImBuf* %37, null, !dbg !3852
  br i1 %tobool38, label %lor.lhs.false39, label %if.then45, !dbg !3853

lor.lhs.false39:                                  ; preds = %lor.lhs.false37
  %38 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3854
  %rect40 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %38, i32 0, i32 8, !dbg !3855
  %39 = load i32*, i32** %rect40, align 8, !dbg !3855
  %tobool41 = icmp ne i32* %39, null, !dbg !3854
  br i1 %tobool41, label %if.end48, label %lor.lhs.false42, !dbg !3856

lor.lhs.false42:                                  ; preds = %lor.lhs.false39
  %40 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3857
  %rect_float43 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %40, i32 0, i32 9, !dbg !3858
  %41 = load float*, float** %rect_float43, align 8, !dbg !3858
  %tobool44 = icmp ne float* %41, null, !dbg !3857
  br i1 %tobool44, label %if.end48, label %if.then45, !dbg !3859

if.then45:                                        ; preds = %lor.lhs.false42, %lor.lhs.false37, %cond.end33
  %42 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3860
  %43 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3862
  call void @BKE_image_release_ibuf(%struct.Image* %42, %struct.ImBuf* %43, i8* null), !dbg !3863
  %44 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3864
  %image46 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %44, i32 0, i32 9, !dbg !3865
  %45 = load %struct.Image*, %struct.Image** %image46, align 8, !dbg !3865
  %46 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3866
  %canvas47 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %46, i32 0, i32 10, !dbg !3867
  %47 = load %struct.ImBuf*, %struct.ImBuf** %canvas47, align 8, !dbg !3867
  call void @BKE_image_release_ibuf(%struct.Image* %45, %struct.ImBuf* %47, i8* null), !dbg !3868
  store i32 0, i32* %retval, align 4, !dbg !3869
  br label %return, !dbg !3869

if.end48:                                         ; preds = %lor.lhs.false42, %lor.lhs.false39
  %48 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3870
  %49 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3871
  %clonecanvas = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %49, i32 0, i32 11, !dbg !3872
  store %struct.ImBuf* %48, %struct.ImBuf** %clonecanvas, align 8, !dbg !3873
  %50 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3874
  %canvas49 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %50, i32 0, i32 10, !dbg !3876
  %51 = load %struct.ImBuf*, %struct.ImBuf** %canvas49, align 8, !dbg !3876
  %rect_float50 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %51, i32 0, i32 9, !dbg !3877
  %52 = load float*, float** %rect_float50, align 8, !dbg !3877
  %tobool51 = icmp ne float* %52, null, !dbg !3874
  br i1 %tobool51, label %land.lhs.true52, label %if.else58, !dbg !3878

land.lhs.true52:                                  ; preds = %if.end48
  %53 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3879
  %clonecanvas53 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %53, i32 0, i32 11, !dbg !3880
  %54 = load %struct.ImBuf*, %struct.ImBuf** %clonecanvas53, align 8, !dbg !3880
  %rect_float54 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 9, !dbg !3881
  %55 = load float*, float** %rect_float54, align 8, !dbg !3881
  %tobool55 = icmp ne float* %55, null, !dbg !3879
  br i1 %tobool55, label %if.else58, label %if.then56, !dbg !3882

if.then56:                                        ; preds = %land.lhs.true52
  %56 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3883
  %clonecanvas57 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %56, i32 0, i32 11, !dbg !3885
  %57 = load %struct.ImBuf*, %struct.ImBuf** %clonecanvas57, align 8, !dbg !3885
  call void @IMB_float_from_rect(%struct.ImBuf* %57), !dbg !3886
  br label %if.end69, !dbg !3887

if.else58:                                        ; preds = %land.lhs.true52, %if.end48
  %58 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3888
  %canvas59 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %58, i32 0, i32 10, !dbg !3890
  %59 = load %struct.ImBuf*, %struct.ImBuf** %canvas59, align 8, !dbg !3890
  %rect_float60 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %59, i32 0, i32 9, !dbg !3891
  %60 = load float*, float** %rect_float60, align 8, !dbg !3891
  %tobool61 = icmp ne float* %60, null, !dbg !3888
  br i1 %tobool61, label %if.end68, label %land.lhs.true62, !dbg !3892

land.lhs.true62:                                  ; preds = %if.else58
  %61 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3893
  %clonecanvas63 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %61, i32 0, i32 11, !dbg !3894
  %62 = load %struct.ImBuf*, %struct.ImBuf** %clonecanvas63, align 8, !dbg !3894
  %rect64 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %62, i32 0, i32 8, !dbg !3895
  %63 = load i32*, i32** %rect64, align 8, !dbg !3895
  %tobool65 = icmp ne i32* %63, null, !dbg !3893
  br i1 %tobool65, label %if.end68, label %if.then66, !dbg !3896

if.then66:                                        ; preds = %land.lhs.true62
  %64 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3897
  %clonecanvas67 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %64, i32 0, i32 11, !dbg !3898
  %65 = load %struct.ImBuf*, %struct.ImBuf** %clonecanvas67, align 8, !dbg !3898
  call void @IMB_rect_from_float(%struct.ImBuf* %65), !dbg !3899
  br label %if.end68, !dbg !3899

if.end68:                                         ; preds = %if.then66, %land.lhs.true62, %if.else58
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then56
  br label %if.end70, !dbg !3900

if.end70:                                         ; preds = %if.end69, %if.end22
  %66 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3901
  %brush71 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %66, i32 0, i32 6, !dbg !3902
  %67 = load %struct.Brush*, %struct.Brush** %brush71, align 8, !dbg !3902
  %call72 = call zeroext i8 @paint_use_opacity_masking(%struct.Brush* %67), !dbg !3903
  %68 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !3904
  %do_masking = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %68, i32 0, i32 14, !dbg !3905
  store i8 %call72, i8* %do_masking, align 8, !dbg !3906
  store i32 1, i32* %retval, align 4, !dbg !3907
  br label %return, !dbg !3907

return:                                           ; preds = %if.end70, %if.then45, %if.then19, %if.then9, %if.then4, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !3908
  ret i32 %69, !dbg !3908
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local %struct.BlurKernel* @paint_new_blur_kernel(%struct.Brush*, i8 zeroext) #2

declare dso_local void @paint_brush_init_tex(%struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.BrushPainter* @brush_painter_2d_new(%struct.Scene* %scene, %struct.Brush* %brush, i8 zeroext %invert) #0 !dbg !3909 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %brush.addr = alloca %struct.Brush*, align 8
  %invert.addr = alloca i8, align 1
  %painter = alloca %struct.BrushPainter*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3912, metadata !DIExpression()), !dbg !3913
  store %struct.Brush* %brush, %struct.Brush** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush.addr, metadata !3914, metadata !DIExpression()), !dbg !3915
  store i8 %invert, i8* %invert.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %invert.addr, metadata !3916, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter, metadata !3918, metadata !DIExpression()), !dbg !3919
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3920
  %call = call i8* %0(i64 152, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)), !dbg !3920
  %1 = bitcast i8* %call to %struct.BrushPainter*, !dbg !3920
  store %struct.BrushPainter* %1, %struct.BrushPainter** %painter, align 8, !dbg !3919
  %2 = load %struct.Brush*, %struct.Brush** %brush.addr, align 8, !dbg !3921
  %3 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !3922
  %brush1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %3, i32 0, i32 1, !dbg !3923
  store %struct.Brush* %2, %struct.Brush** %brush1, align 8, !dbg !3924
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3925
  %5 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !3926
  %scene2 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %5, i32 0, i32 0, !dbg !3927
  store %struct.Scene* %4, %struct.Scene** %scene2, align 8, !dbg !3928
  %6 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !3929
  %firsttouch = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %6, i32 0, i32 4, !dbg !3930
  store i16 1, i16* %firsttouch, align 8, !dbg !3931
  %7 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !3932
  %cache = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %7, i32 0, i32 8, !dbg !3933
  %lastdiameter = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache, i32 0, i32 5, !dbg !3934
  store i32 -1, i32* %lastdiameter, align 8, !dbg !3935
  %8 = load i8, i8* %invert.addr, align 1, !dbg !3936
  %9 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !3937
  %cache3 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %9, i32 0, i32 8, !dbg !3938
  %invert4 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache3, i32 0, i32 2, !dbg !3939
  store i8 %8, i8* %invert4, align 2, !dbg !3940
  %10 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !3941
  ret %struct.BrushPainter* %10, !dbg !3942
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @paint_2d_redraw(%struct.bContext* %C, i8* %ps, i8 zeroext %final) #0 !dbg !3943 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ps.addr = alloca i8*, align 8
  %final.addr = alloca i8, align 1
  %s = alloca %struct.ImagePaintState*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3948, metadata !DIExpression()), !dbg !3949
  store i8* %ps, i8** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ps.addr, metadata !3950, metadata !DIExpression()), !dbg !3951
  store i8 %final, i8* %final.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %final.addr, metadata !3952, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s, metadata !3954, metadata !DIExpression()), !dbg !3955
  %0 = load i8*, i8** %ps.addr, align 8, !dbg !3956
  %1 = bitcast i8* %0 to %struct.ImagePaintState*, !dbg !3956
  store %struct.ImagePaintState* %1, %struct.ImagePaintState** %s, align 8, !dbg !3955
  %2 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3957
  %need_redraw = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %2, i32 0, i32 19, !dbg !3959
  %3 = load i8, i8* %need_redraw, align 8, !dbg !3959
  %tobool = icmp ne i8 %3, 0, !dbg !3957
  br i1 %tobool, label %if.then, label %if.else, !dbg !3960

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !3961, metadata !DIExpression()), !dbg !3963
  %4 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3964
  %image = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %4, i32 0, i32 9, !dbg !3965
  %5 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !3965
  %6 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3966
  %sima = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %6, i32 0, i32 1, !dbg !3967
  %7 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !3967
  %tobool1 = icmp ne %struct.SpaceImage* %7, null, !dbg !3966
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !3966

cond.true:                                        ; preds = %if.then
  %8 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3968
  %sima2 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %8, i32 0, i32 1, !dbg !3969
  %9 = load %struct.SpaceImage*, %struct.SpaceImage** %sima2, align 8, !dbg !3969
  %iuser = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %9, i32 0, i32 6, !dbg !3970
  br label %cond.end, !dbg !3966

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3966

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ImageUser* [ %iuser, %cond.true ], [ null, %cond.false ], !dbg !3966
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %5, %struct.ImageUser* %cond, i8** null), !dbg !3971
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !3963
  %10 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3972
  %sima3 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %10, i32 0, i32 1, !dbg !3973
  %11 = load %struct.SpaceImage*, %struct.SpaceImage** %sima3, align 8, !dbg !3973
  %12 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3974
  %image4 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %12, i32 0, i32 9, !dbg !3975
  %13 = load %struct.Image*, %struct.Image** %image4, align 8, !dbg !3975
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3976
  call void @imapaint_image_update(%struct.SpaceImage* %11, %struct.Image* %13, %struct.ImBuf* %14, i16 signext 0), !dbg !3977
  call void @ED_imapaint_clear_partial_redraw(), !dbg !3978
  %15 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3979
  %image5 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %15, i32 0, i32 9, !dbg !3980
  %16 = load %struct.Image*, %struct.Image** %image5, align 8, !dbg !3980
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3981
  call void @BKE_image_release_ibuf(%struct.Image* %16, %struct.ImBuf* %17, i8* null), !dbg !3982
  %18 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3983
  %need_redraw6 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %18, i32 0, i32 19, !dbg !3984
  store i8 0, i8* %need_redraw6, align 8, !dbg !3985
  br label %if.end9, !dbg !3986

if.else:                                          ; preds = %entry
  %19 = load i8, i8* %final.addr, align 1, !dbg !3987
  %tobool7 = icmp ne i8 %19, 0, !dbg !3987
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !3989

if.then8:                                         ; preds = %if.else
  br label %if.end35, !dbg !3990

if.end:                                           ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %cond.end
  %20 = load i8, i8* %final.addr, align 1, !dbg !3992
  %tobool10 = icmp ne i8 %20, 0, !dbg !3992
  br i1 %tobool10, label %if.then11, label %if.else24, !dbg !3994

if.then11:                                        ; preds = %if.end9
  %21 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !3995
  %image12 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %21, i32 0, i32 9, !dbg !3998
  %22 = load %struct.Image*, %struct.Image** %image12, align 8, !dbg !3998
  %tobool13 = icmp ne %struct.Image* %22, null, !dbg !3995
  br i1 %tobool13, label %land.lhs.true, label %if.end21, !dbg !3999

land.lhs.true:                                    ; preds = %if.then11
  %23 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4000
  %sima14 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %23, i32 0, i32 1, !dbg !4001
  %24 = load %struct.SpaceImage*, %struct.SpaceImage** %sima14, align 8, !dbg !4001
  %tobool15 = icmp ne %struct.SpaceImage* %24, null, !dbg !4000
  br i1 %tobool15, label %land.lhs.true16, label %if.then19, !dbg !4002

land.lhs.true16:                                  ; preds = %land.lhs.true
  %25 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4003
  %sima17 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %25, i32 0, i32 1, !dbg !4004
  %26 = load %struct.SpaceImage*, %struct.SpaceImage** %sima17, align 8, !dbg !4004
  %lock = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %26, i32 0, i32 21, !dbg !4005
  %27 = load i16, i16* %lock, align 2, !dbg !4005
  %conv = sext i16 %27 to i32, !dbg !4003
  %tobool18 = icmp ne i32 %conv, 0, !dbg !4003
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !4006

if.then19:                                        ; preds = %land.lhs.true16, %land.lhs.true
  %28 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4007
  %image20 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %28, i32 0, i32 9, !dbg !4008
  %29 = load %struct.Image*, %struct.Image** %image20, align 8, !dbg !4008
  call void @GPU_free_image(%struct.Image* %29), !dbg !4009
  br label %if.end21, !dbg !4009

if.end21:                                         ; preds = %if.then19, %land.lhs.true16, %if.then11
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4010
  %31 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4011
  %image22 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %31, i32 0, i32 9, !dbg !4012
  %32 = load %struct.Image*, %struct.Image** %image22, align 8, !dbg !4012
  %33 = bitcast %struct.Image* %32 to i8*, !dbg !4011
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 167772161, i8* %33), !dbg !4013
  %34 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4014
  %image23 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %34, i32 0, i32 9, !dbg !4015
  %35 = load %struct.Image*, %struct.Image** %image23, align 8, !dbg !4015
  %id = getelementptr inbounds %struct.Image, %struct.Image* %35, i32 0, i32 0, !dbg !4016
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !4017
  br label %if.end35, !dbg !4018

if.else24:                                        ; preds = %if.end9
  %36 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4019
  %sima25 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %36, i32 0, i32 1, !dbg !4022
  %37 = load %struct.SpaceImage*, %struct.SpaceImage** %sima25, align 8, !dbg !4022
  %tobool26 = icmp ne %struct.SpaceImage* %37, null, !dbg !4019
  br i1 %tobool26, label %lor.lhs.false, label %if.then30, !dbg !4023

lor.lhs.false:                                    ; preds = %if.else24
  %38 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4024
  %sima27 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %38, i32 0, i32 1, !dbg !4025
  %39 = load %struct.SpaceImage*, %struct.SpaceImage** %sima27, align 8, !dbg !4025
  %lock28 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %39, i32 0, i32 21, !dbg !4026
  %40 = load i16, i16* %lock28, align 2, !dbg !4026
  %tobool29 = icmp ne i16 %40, 0, !dbg !4024
  br i1 %tobool29, label %if.else32, label %if.then30, !dbg !4027

if.then30:                                        ; preds = %lor.lhs.false, %if.else24
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4028
  %call31 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %41), !dbg !4029
  call void @ED_region_tag_redraw(%struct.ARegion* %call31), !dbg !4030
  br label %if.end34, !dbg !4030

if.else32:                                        ; preds = %lor.lhs.false
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4031
  %43 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4032
  %image33 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %43, i32 0, i32 9, !dbg !4033
  %44 = load %struct.Image*, %struct.Image** %image33, align 8, !dbg !4033
  %45 = bitcast %struct.Image* %44 to i8*, !dbg !4032
  call void @WM_event_add_notifier(%struct.bContext* %42, i32 167772167, i8* %45), !dbg !4034
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then30
  br label %if.end35

if.end35:                                         ; preds = %if.then8, %if.end34, %if.end21
  ret void, !dbg !4035
}

declare dso_local void @imapaint_image_update(%struct.SpaceImage*, %struct.Image*, %struct.ImBuf*, i16 signext) #2

declare dso_local void @ED_imapaint_clear_partial_redraw() #2

declare dso_local void @GPU_free_image(%struct.Image*) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @paint_2d_stroke_done(i8* %ps) #0 !dbg !4036 {
entry:
  %ps.addr = alloca i8*, align 8
  %s = alloca %struct.ImagePaintState*, align 8
  store i8* %ps, i8** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ps.addr, metadata !4037, metadata !DIExpression()), !dbg !4038
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s, metadata !4039, metadata !DIExpression()), !dbg !4040
  %0 = load i8*, i8** %ps.addr, align 8, !dbg !4041
  %1 = bitcast i8* %0 to %struct.ImagePaintState*, !dbg !4041
  store %struct.ImagePaintState* %1, %struct.ImagePaintState** %s, align 8, !dbg !4040
  %2 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4042
  call void @paint_2d_canvas_free(%struct.ImagePaintState* %2), !dbg !4043
  %3 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4044
  %painter = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %3, i32 0, i32 0, !dbg !4045
  %4 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !4045
  call void @brush_painter_2d_free(%struct.BrushPainter* %4), !dbg !4046
  %5 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4047
  %brush = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %5, i32 0, i32 6, !dbg !4048
  %6 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4048
  call void @paint_brush_exit_tex(%struct.Brush* %6), !dbg !4049
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4050
  %8 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4051
  %9 = bitcast %struct.ImagePaintState* %8 to i8*, !dbg !4051
  call void %7(i8* %9), !dbg !4050
  ret void, !dbg !4052
}

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_canvas_free(%struct.ImagePaintState* %s) #0 !dbg !4053 {
entry:
  %s.addr = alloca %struct.ImagePaintState*, align 8
  store %struct.ImagePaintState* %s, %struct.ImagePaintState** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s.addr, metadata !4056, metadata !DIExpression()), !dbg !4057
  %0 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !4058
  %image = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %0, i32 0, i32 9, !dbg !4059
  %1 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !4059
  %2 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !4060
  %canvas = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %2, i32 0, i32 10, !dbg !4061
  %3 = load %struct.ImBuf*, %struct.ImBuf** %canvas, align 8, !dbg !4061
  call void @BKE_image_release_ibuf(%struct.Image* %1, %struct.ImBuf* %3, i8* null), !dbg !4062
  %4 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !4063
  %brush = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %4, i32 0, i32 6, !dbg !4064
  %5 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !4064
  %clone = getelementptr inbounds %struct.Brush, %struct.Brush* %5, i32 0, i32 1, !dbg !4065
  %image1 = getelementptr inbounds %struct.BrushClone, %struct.BrushClone* %clone, i32 0, i32 0, !dbg !4066
  %6 = load %struct.Image*, %struct.Image** %image1, align 8, !dbg !4066
  %7 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !4067
  %clonecanvas = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %7, i32 0, i32 11, !dbg !4068
  %8 = load %struct.ImBuf*, %struct.ImBuf** %clonecanvas, align 8, !dbg !4068
  call void @BKE_image_release_ibuf(%struct.Image* %6, %struct.ImBuf* %8, i8* null), !dbg !4069
  %9 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !4070
  %blurkernel = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %9, i32 0, i32 20, !dbg !4072
  %10 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel, align 8, !dbg !4072
  %tobool = icmp ne %struct.BlurKernel* %10, null, !dbg !4070
  br i1 %tobool, label %if.then, label %if.end, !dbg !4073

if.then:                                          ; preds = %entry
  %11 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !4074
  %blurkernel2 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %11, i32 0, i32 20, !dbg !4076
  %12 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel2, align 8, !dbg !4076
  call void @paint_delete_blur_kernel(%struct.BlurKernel* %12), !dbg !4077
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4078
  %14 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !4079
  %blurkernel3 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %14, i32 0, i32 20, !dbg !4080
  %15 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel3, align 8, !dbg !4080
  %16 = bitcast %struct.BlurKernel* %15 to i8*, !dbg !4079
  call void %13(i8* %16), !dbg !4078
  br label %if.end, !dbg !4081

if.end:                                           ; preds = %if.then, %entry
  call void @image_undo_remove_masks(), !dbg !4082
  ret void, !dbg !4083
}

; Function Attrs: noinline nounwind uwtable
define internal void @brush_painter_2d_free(%struct.BrushPainter* %painter) #0 !dbg !4084 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !4087, metadata !DIExpression()), !dbg !4088
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4089
  %cache = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 8, !dbg !4091
  %ibuf = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache, i32 0, i32 9, !dbg !4092
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4092
  %tobool = icmp ne %struct.ImBuf* %1, null, !dbg !4089
  br i1 %tobool, label %if.then, label %if.end, !dbg !4093

if.then:                                          ; preds = %entry
  %2 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4094
  %cache1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %2, i32 0, i32 8, !dbg !4095
  %ibuf2 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache1, i32 0, i32 9, !dbg !4096
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2, align 8, !dbg !4096
  call void @IMB_freeImBuf(%struct.ImBuf* %3), !dbg !4097
  br label %if.end, !dbg !4097

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4098
  %cache3 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %4, i32 0, i32 8, !dbg !4100
  %texibuf = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache3, i32 0, i32 10, !dbg !4101
  %5 = load %struct.ImBuf*, %struct.ImBuf** %texibuf, align 8, !dbg !4101
  %tobool4 = icmp ne %struct.ImBuf* %5, null, !dbg !4098
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !4102

if.then5:                                         ; preds = %if.end
  %6 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4103
  %cache6 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %6, i32 0, i32 8, !dbg !4104
  %texibuf7 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache6, i32 0, i32 10, !dbg !4105
  %7 = load %struct.ImBuf*, %struct.ImBuf** %texibuf7, align 8, !dbg !4105
  call void @IMB_freeImBuf(%struct.ImBuf* %7), !dbg !4106
  br label %if.end8, !dbg !4106

if.end8:                                          ; preds = %if.then5, %if.end
  %8 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4107
  %cache9 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %8, i32 0, i32 8, !dbg !4109
  %curve_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache9, i32 0, i32 11, !dbg !4110
  %9 = load i16*, i16** %curve_mask, align 8, !dbg !4110
  %tobool10 = icmp ne i16* %9, null, !dbg !4107
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !4111

if.then11:                                        ; preds = %if.end8
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4112
  %11 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4113
  %cache12 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %11, i32 0, i32 8, !dbg !4114
  %curve_mask13 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache12, i32 0, i32 11, !dbg !4115
  %12 = load i16*, i16** %curve_mask13, align 8, !dbg !4115
  %13 = bitcast i16* %12 to i8*, !dbg !4113
  call void %10(i8* %13), !dbg !4112
  br label %if.end14, !dbg !4112

if.end14:                                         ; preds = %if.then11, %if.end8
  %14 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4116
  %cache15 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %14, i32 0, i32 8, !dbg !4118
  %tex_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache15, i32 0, i32 12, !dbg !4119
  %15 = load i16*, i16** %tex_mask, align 8, !dbg !4119
  %tobool16 = icmp ne i16* %15, null, !dbg !4116
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !4120

if.then17:                                        ; preds = %if.end14
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4121
  %17 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4122
  %cache18 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %17, i32 0, i32 8, !dbg !4123
  %tex_mask19 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache18, i32 0, i32 12, !dbg !4124
  %18 = load i16*, i16** %tex_mask19, align 8, !dbg !4124
  %19 = bitcast i16* %18 to i8*, !dbg !4122
  call void %16(i8* %19), !dbg !4121
  br label %if.end20, !dbg !4121

if.end20:                                         ; preds = %if.then17, %if.end14
  %20 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4125
  %cache21 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %20, i32 0, i32 8, !dbg !4127
  %tex_mask_old = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache21, i32 0, i32 13, !dbg !4128
  %21 = load i16*, i16** %tex_mask_old, align 8, !dbg !4128
  %tobool22 = icmp ne i16* %21, null, !dbg !4125
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !4129

if.then23:                                        ; preds = %if.end20
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4130
  %23 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4131
  %cache24 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %23, i32 0, i32 8, !dbg !4132
  %tex_mask_old25 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache24, i32 0, i32 13, !dbg !4133
  %24 = load i16*, i16** %tex_mask_old25, align 8, !dbg !4133
  %25 = bitcast i16* %24 to i8*, !dbg !4131
  call void %22(i8* %25), !dbg !4130
  br label %if.end26, !dbg !4130

if.end26:                                         ; preds = %if.then23, %if.end20
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4134
  %27 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !4135
  %28 = bitcast %struct.BrushPainter* %27 to i8*, !dbg !4135
  call void %26(i8* %28), !dbg !4134
  ret void, !dbg !4136
}

declare dso_local void @paint_brush_exit_tex(%struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @paint_2d_bucket_fill(%struct.bContext* %C, float* %color, %struct.Brush* %br, float* %mouse_init, i8* %ps) #0 !dbg !4137 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %color.addr = alloca float*, align 8
  %br.addr = alloca %struct.Brush*, align 8
  %mouse_init.addr = alloca float*, align 8
  %ps.addr = alloca i8*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %ima = alloca %struct.Image*, align 8
  %s = alloca %struct.ImagePaintState*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %x_px = alloca i32, align 4
  %y_px = alloca i32, align 4
  %color_b = alloca i32, align 4
  %color_f = alloca [4 x float], align 16
  %strength = alloca float, align 4
  %do_float = alloca i8, align 1
  %stack = alloca %struct.BLI_Stack*, align 8
  %touched = alloca i32*, align 8
  %coordinate = alloca i32, align 4
  %width = alloca i32, align 4
  %image_init = alloca [2 x float], align 4
  %minx = alloca i32, align 4
  %miny = alloca i32, align 4
  %maxx = alloca i32, align 4
  %maxy = alloca i32, align 4
  %pixel_color = alloca [4 x float], align 16
  %threshold_sq = alloca float, align 4
  %pixel_color_b = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4140, metadata !DIExpression()), !dbg !4141
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !4142, metadata !DIExpression()), !dbg !4143
  store %struct.Brush* %br, %struct.Brush** %br.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %br.addr, metadata !4144, metadata !DIExpression()), !dbg !4145
  store float* %mouse_init, float** %mouse_init.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse_init.addr, metadata !4146, metadata !DIExpression()), !dbg !4147
  store i8* %ps, i8** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ps.addr, metadata !4148, metadata !DIExpression()), !dbg !4149
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !4150, metadata !DIExpression()), !dbg !4151
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4152
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !4153
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !4151
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !4154, metadata !DIExpression()), !dbg !4155
  %1 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4156
  %image = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %1, i32 0, i32 5, !dbg !4157
  %2 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !4157
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !4155
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s, metadata !4158, metadata !DIExpression()), !dbg !4159
  %3 = load i8*, i8** %ps.addr, align 8, !dbg !4160
  %4 = bitcast i8* %3 to %struct.ImagePaintState*, !dbg !4160
  store %struct.ImagePaintState* %4, %struct.ImagePaintState** %s, align 8, !dbg !4159
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !4161, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %x_px, metadata !4163, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.declare(metadata i32* %y_px, metadata !4165, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.declare(metadata i32* %color_b, metadata !4167, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.declare(metadata [4 x float]* %color_f, metadata !4169, metadata !DIExpression()), !dbg !4170
  call void @llvm.dbg.declare(metadata float* %strength, metadata !4171, metadata !DIExpression()), !dbg !4172
  %5 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !4173
  %tobool = icmp ne %struct.Brush* %5, null, !dbg !4173
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4173

cond.true:                                        ; preds = %entry
  %6 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !4174
  %alpha = getelementptr inbounds %struct.Brush, %struct.Brush* %6, i32 0, i32 26, !dbg !4175
  %7 = load float, float* %alpha, align 8, !dbg !4175
  br label %cond.end, !dbg !4173

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4173

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %7, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !4173
  store float %cond, float* %strength, align 4, !dbg !4172
  call void @llvm.dbg.declare(metadata i8* %do_float, metadata !4176, metadata !DIExpression()), !dbg !4177
  %8 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4178
  %tobool1 = icmp ne %struct.Image* %8, null, !dbg !4178
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4180

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !4181

if.end:                                           ; preds = %cond.end
  %9 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4182
  %10 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4183
  %iuser = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %10, i32 0, i32 6, !dbg !4184
  %call2 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %9, %struct.ImageUser* %iuser, i8** null), !dbg !4185
  store %struct.ImBuf* %call2, %struct.ImBuf** %ibuf, align 8, !dbg !4186
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4187
  %tobool3 = icmp ne %struct.ImBuf* %11, null, !dbg !4187
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !4189

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !4190

if.end5:                                          ; preds = %if.end
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4191
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 9, !dbg !4192
  %13 = load float*, float** %rect_float, align 8, !dbg !4192
  %cmp = icmp ne float* %13, null, !dbg !4193
  %conv = zext i1 %cmp to i32, !dbg !4193
  %conv6 = trunc i32 %conv to i8, !dbg !4194
  store i8 %conv6, i8* %do_float, align 1, !dbg !4195
  %14 = load i8, i8* %do_float, align 1, !dbg !4196
  %tobool7 = icmp ne i8 %14, 0, !dbg !4196
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !4198

if.then8:                                         ; preds = %if.end5
  %15 = bitcast i32* %color_b to i8*, !dbg !4199
  %16 = load float*, float** %color.addr, align 8, !dbg !4201
  call void @linearrgb_to_srgb_uchar3(i8* %15, float* %16), !dbg !4202
  %17 = load float, float* %strength, align 4, !dbg !4203
  %mul = fmul float %17, 2.550000e+02, !dbg !4204
  %conv9 = fptoui float %mul to i8, !dbg !4203
  %18 = bitcast i32* %color_b to i8*, !dbg !4205
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 3, !dbg !4206
  store i8 %conv9, i8* %add.ptr, align 1, !dbg !4207
  br label %if.end10, !dbg !4208

if.else:                                          ; preds = %if.end5
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !4209
  %19 = load float*, float** %color.addr, align 8, !dbg !4211
  call void @copy_v3_v3(float* %arraydecay, float* %19), !dbg !4212
  %20 = load float, float* %strength, align 4, !dbg !4213
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 3, !dbg !4214
  store float %20, float* %arrayidx, align 4, !dbg !4215
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then8
  %21 = load float*, float** %mouse_init.addr, align 8, !dbg !4216
  %tobool11 = icmp ne float* %21, null, !dbg !4216
  br i1 %tobool11, label %lor.lhs.false, label %if.then13, !dbg !4218

lor.lhs.false:                                    ; preds = %if.end10
  %22 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !4219
  %tobool12 = icmp ne %struct.Brush* %22, null, !dbg !4219
  br i1 %tobool12, label %if.else71, label %if.then13, !dbg !4220

if.then13:                                        ; preds = %lor.lhs.false, %if.end10
  %23 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4221
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4223
  %25 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4224
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %25, i32 0, i32 2, !dbg !4225
  %26 = load i32, i32* %x, align 8, !dbg !4225
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4226
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 3, !dbg !4227
  %28 = load i32, i32* %y, align 4, !dbg !4227
  call void @ED_imapaint_dirty_region(%struct.Image* %23, %struct.ImBuf* %24, i32 0, i32 0, i32 %26, i32 %28), !dbg !4228
  %29 = load i8, i8* %do_float, align 1, !dbg !4229
  %tobool14 = icmp ne i8 %29, 0, !dbg !4229
  br i1 %tobool14, label %if.then15, label %if.else40, !dbg !4231

if.then15:                                        ; preds = %if.then13
  store i32 0, i32* %x_px, align 4, !dbg !4232
  br label %for.cond, !dbg !4235

for.cond:                                         ; preds = %for.inc37, %if.then15
  %30 = load i32, i32* %x_px, align 4, !dbg !4236
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4238
  %x16 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %31, i32 0, i32 2, !dbg !4239
  %32 = load i32, i32* %x16, align 8, !dbg !4239
  %cmp17 = icmp slt i32 %30, %32, !dbg !4240
  br i1 %cmp17, label %for.body, label %for.end39, !dbg !4241

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %y_px, align 4, !dbg !4242
  br label %for.cond19, !dbg !4245

for.cond19:                                       ; preds = %for.inc, %for.body
  %33 = load i32, i32* %y_px, align 4, !dbg !4246
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4248
  %y20 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 3, !dbg !4249
  %35 = load i32, i32* %y20, align 4, !dbg !4249
  %cmp21 = icmp slt i32 %33, %35, !dbg !4250
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !4251

for.body23:                                       ; preds = %for.cond19
  %36 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4252
  %rect_float24 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %36, i32 0, i32 9, !dbg !4254
  %37 = load float*, float** %rect_float24, align 8, !dbg !4254
  %38 = load i32, i32* %y_px, align 4, !dbg !4255
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4256
  %x25 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %39, i32 0, i32 2, !dbg !4257
  %40 = load i32, i32* %x25, align 8, !dbg !4257
  %mul26 = mul nsw i32 %38, %40, !dbg !4258
  %41 = load i32, i32* %x_px, align 4, !dbg !4259
  %add = add nsw i32 %mul26, %41, !dbg !4260
  %mul27 = mul nsw i32 4, %add, !dbg !4261
  %idx.ext = sext i32 %mul27 to i64, !dbg !4262
  %add.ptr28 = getelementptr inbounds float, float* %37, i64 %idx.ext, !dbg !4262
  %42 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4263
  %rect_float29 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %42, i32 0, i32 9, !dbg !4264
  %43 = load float*, float** %rect_float29, align 8, !dbg !4264
  %44 = load i32, i32* %y_px, align 4, !dbg !4265
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4266
  %x30 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %45, i32 0, i32 2, !dbg !4267
  %46 = load i32, i32* %x30, align 8, !dbg !4267
  %mul31 = mul nsw i32 %44, %46, !dbg !4268
  %47 = load i32, i32* %x_px, align 4, !dbg !4269
  %add32 = add nsw i32 %mul31, %47, !dbg !4270
  %mul33 = mul nsw i32 4, %add32, !dbg !4271
  %idx.ext34 = sext i32 %mul33 to i64, !dbg !4272
  %add.ptr35 = getelementptr inbounds float, float* %43, i64 %idx.ext34, !dbg !4272
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !4273
  call void @blend_color_mix_float(float* %add.ptr28, float* %add.ptr35, float* %arraydecay36), !dbg !4274
  br label %for.inc, !dbg !4275

for.inc:                                          ; preds = %for.body23
  %48 = load i32, i32* %y_px, align 4, !dbg !4276
  %inc = add nsw i32 %48, 1, !dbg !4276
  store i32 %inc, i32* %y_px, align 4, !dbg !4276
  br label %for.cond19, !dbg !4277, !llvm.loop !4278

for.end:                                          ; preds = %for.cond19
  br label %for.inc37, !dbg !4280

for.inc37:                                        ; preds = %for.end
  %49 = load i32, i32* %x_px, align 4, !dbg !4281
  %inc38 = add nsw i32 %49, 1, !dbg !4281
  store i32 %inc38, i32* %x_px, align 4, !dbg !4281
  br label %for.cond, !dbg !4282, !llvm.loop !4283

for.end39:                                        ; preds = %for.cond
  br label %if.end70, !dbg !4285

if.else40:                                        ; preds = %if.then13
  store i32 0, i32* %x_px, align 4, !dbg !4286
  br label %for.cond41, !dbg !4289

for.cond41:                                       ; preds = %for.inc67, %if.else40
  %50 = load i32, i32* %x_px, align 4, !dbg !4290
  %51 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4292
  %x42 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %51, i32 0, i32 2, !dbg !4293
  %52 = load i32, i32* %x42, align 8, !dbg !4293
  %cmp43 = icmp slt i32 %50, %52, !dbg !4294
  br i1 %cmp43, label %for.body45, label %for.end69, !dbg !4295

for.body45:                                       ; preds = %for.cond41
  store i32 0, i32* %y_px, align 4, !dbg !4296
  br label %for.cond46, !dbg !4299

for.cond46:                                       ; preds = %for.inc64, %for.body45
  %53 = load i32, i32* %y_px, align 4, !dbg !4300
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4302
  %y47 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 3, !dbg !4303
  %55 = load i32, i32* %y47, align 4, !dbg !4303
  %cmp48 = icmp slt i32 %53, %55, !dbg !4304
  br i1 %cmp48, label %for.body50, label %for.end66, !dbg !4305

for.body50:                                       ; preds = %for.cond46
  %56 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4306
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %56, i32 0, i32 8, !dbg !4308
  %57 = load i32*, i32** %rect, align 8, !dbg !4308
  %58 = load i32, i32* %y_px, align 4, !dbg !4309
  %59 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4310
  %x51 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %59, i32 0, i32 2, !dbg !4311
  %60 = load i32, i32* %x51, align 8, !dbg !4311
  %mul52 = mul nsw i32 %58, %60, !dbg !4312
  %idx.ext53 = sext i32 %mul52 to i64, !dbg !4313
  %add.ptr54 = getelementptr inbounds i32, i32* %57, i64 %idx.ext53, !dbg !4313
  %61 = load i32, i32* %x_px, align 4, !dbg !4314
  %idx.ext55 = sext i32 %61 to i64, !dbg !4315
  %add.ptr56 = getelementptr inbounds i32, i32* %add.ptr54, i64 %idx.ext55, !dbg !4315
  %62 = bitcast i32* %add.ptr56 to i8*, !dbg !4316
  %63 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4317
  %rect57 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %63, i32 0, i32 8, !dbg !4318
  %64 = load i32*, i32** %rect57, align 8, !dbg !4318
  %65 = load i32, i32* %y_px, align 4, !dbg !4319
  %66 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4320
  %x58 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %66, i32 0, i32 2, !dbg !4321
  %67 = load i32, i32* %x58, align 8, !dbg !4321
  %mul59 = mul nsw i32 %65, %67, !dbg !4322
  %idx.ext60 = sext i32 %mul59 to i64, !dbg !4323
  %add.ptr61 = getelementptr inbounds i32, i32* %64, i64 %idx.ext60, !dbg !4323
  %68 = load i32, i32* %x_px, align 4, !dbg !4324
  %idx.ext62 = sext i32 %68 to i64, !dbg !4325
  %add.ptr63 = getelementptr inbounds i32, i32* %add.ptr61, i64 %idx.ext62, !dbg !4325
  %69 = bitcast i32* %add.ptr63 to i8*, !dbg !4326
  %70 = bitcast i32* %color_b to i8*, !dbg !4327
  call void @blend_color_mix_byte(i8* %62, i8* %69, i8* %70), !dbg !4328
  br label %for.inc64, !dbg !4329

for.inc64:                                        ; preds = %for.body50
  %71 = load i32, i32* %y_px, align 4, !dbg !4330
  %inc65 = add nsw i32 %71, 1, !dbg !4330
  store i32 %inc65, i32* %y_px, align 4, !dbg !4330
  br label %for.cond46, !dbg !4331, !llvm.loop !4332

for.end66:                                        ; preds = %for.cond46
  br label %for.inc67, !dbg !4334

for.inc67:                                        ; preds = %for.end66
  %72 = load i32, i32* %x_px, align 4, !dbg !4335
  %inc68 = add nsw i32 %72, 1, !dbg !4335
  store i32 %inc68, i32* %x_px, align 4, !dbg !4335
  br label %for.cond41, !dbg !4336, !llvm.loop !4337

for.end69:                                        ; preds = %for.cond41
  br label %if.end70

if.end70:                                         ; preds = %for.end69, %for.end39
  br label %if.end237, !dbg !4339

if.else71:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.BLI_Stack** %stack, metadata !4340, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.declare(metadata i32** %touched, metadata !4347, metadata !DIExpression()), !dbg !4348
  call void @llvm.dbg.declare(metadata i32* %coordinate, metadata !4349, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.declare(metadata i32* %width, metadata !4351, metadata !DIExpression()), !dbg !4352
  %73 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4353
  %x72 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %73, i32 0, i32 2, !dbg !4354
  %74 = load i32, i32* %x72, align 8, !dbg !4354
  store i32 %74, i32* %width, align 4, !dbg !4352
  call void @llvm.dbg.declare(metadata [2 x float]* %image_init, metadata !4355, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.declare(metadata i32* %minx, metadata !4357, metadata !DIExpression()), !dbg !4358
  %75 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4359
  %x73 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %75, i32 0, i32 2, !dbg !4360
  %76 = load i32, i32* %x73, align 8, !dbg !4360
  store i32 %76, i32* %minx, align 4, !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %miny, metadata !4361, metadata !DIExpression()), !dbg !4362
  %77 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4363
  %y74 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %77, i32 0, i32 3, !dbg !4364
  %78 = load i32, i32* %y74, align 4, !dbg !4364
  store i32 %78, i32* %miny, align 4, !dbg !4362
  call void @llvm.dbg.declare(metadata i32* %maxx, metadata !4365, metadata !DIExpression()), !dbg !4366
  store i32 0, i32* %maxx, align 4, !dbg !4366
  call void @llvm.dbg.declare(metadata i32* %maxy, metadata !4367, metadata !DIExpression()), !dbg !4368
  store i32 0, i32* %maxy, align 4, !dbg !4368
  call void @llvm.dbg.declare(metadata [4 x float]* %pixel_color, metadata !4369, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.declare(metadata float* %threshold_sq, metadata !4371, metadata !DIExpression()), !dbg !4372
  %79 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !4373
  %fill_threshold = getelementptr inbounds %struct.Brush, %struct.Brush* %79, i32 0, i32 50, !dbg !4374
  %80 = load float, float* %fill_threshold, align 4, !dbg !4374
  %81 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !4375
  %fill_threshold75 = getelementptr inbounds %struct.Brush, %struct.Brush* %81, i32 0, i32 50, !dbg !4376
  %82 = load float, float* %fill_threshold75, align 4, !dbg !4376
  %mul76 = fmul float %80, %82, !dbg !4377
  store float %mul76, float* %threshold_sq, align 4, !dbg !4372
  %83 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !4378
  %v2d = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %83, i32 0, i32 2, !dbg !4379
  %84 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !4379
  %85 = load float*, float** %mouse_init.addr, align 8, !dbg !4380
  %arrayidx77 = getelementptr inbounds float, float* %85, i64 0, !dbg !4380
  %86 = load float, float* %arrayidx77, align 4, !dbg !4380
  %87 = load float*, float** %mouse_init.addr, align 8, !dbg !4381
  %arrayidx78 = getelementptr inbounds float, float* %87, i64 1, !dbg !4381
  %88 = load float, float* %arrayidx78, align 4, !dbg !4381
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 0, !dbg !4382
  %arrayidx80 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 1, !dbg !4383
  call void @UI_view2d_region_to_view(%struct.View2D* %84, float %86, float %88, float* %arrayidx79, float* %arrayidx80), !dbg !4384
  %arrayidx81 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 0, !dbg !4385
  %89 = load float, float* %arrayidx81, align 4, !dbg !4385
  %90 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4386
  %x82 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %90, i32 0, i32 2, !dbg !4387
  %91 = load i32, i32* %x82, align 8, !dbg !4387
  %conv83 = sitofp i32 %91 to float, !dbg !4386
  %mul84 = fmul float %89, %conv83, !dbg !4388
  %conv85 = fptosi float %mul84 to i32, !dbg !4385
  store i32 %conv85, i32* %x_px, align 4, !dbg !4389
  %arrayidx86 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 1, !dbg !4390
  %92 = load float, float* %arrayidx86, align 4, !dbg !4390
  %93 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4391
  %y87 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %93, i32 0, i32 3, !dbg !4392
  %94 = load i32, i32* %y87, align 4, !dbg !4392
  %conv88 = sitofp i32 %94 to float, !dbg !4391
  %mul89 = fmul float %92, %conv88, !dbg !4393
  %conv90 = fptosi float %mul89 to i32, !dbg !4390
  store i32 %conv90, i32* %y_px, align 4, !dbg !4394
  %95 = load i32, i32* %x_px, align 4, !dbg !4395
  %96 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4397
  %x91 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %96, i32 0, i32 2, !dbg !4398
  %97 = load i32, i32* %x91, align 8, !dbg !4398
  %cmp92 = icmp sge i32 %95, %97, !dbg !4399
  br i1 %cmp92, label %if.then104, label %lor.lhs.false94, !dbg !4400

lor.lhs.false94:                                  ; preds = %if.else71
  %98 = load i32, i32* %x_px, align 4, !dbg !4401
  %cmp95 = icmp slt i32 %98, 0, !dbg !4402
  br i1 %cmp95, label %if.then104, label %lor.lhs.false97, !dbg !4403

lor.lhs.false97:                                  ; preds = %lor.lhs.false94
  %99 = load i32, i32* %y_px, align 4, !dbg !4404
  %100 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4405
  %y98 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %100, i32 0, i32 3, !dbg !4406
  %101 = load i32, i32* %y98, align 4, !dbg !4406
  %cmp99 = icmp sgt i32 %99, %101, !dbg !4407
  br i1 %cmp99, label %if.then104, label %lor.lhs.false101, !dbg !4408

lor.lhs.false101:                                 ; preds = %lor.lhs.false97
  %102 = load i32, i32* %y_px, align 4, !dbg !4409
  %cmp102 = icmp slt i32 %102, 0, !dbg !4410
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !4411

if.then104:                                       ; preds = %lor.lhs.false101, %lor.lhs.false97, %lor.lhs.false94, %if.else71
  %103 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4412
  %104 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4414
  call void @BKE_image_release_ibuf(%struct.Image* %103, %struct.ImBuf* %104, i8* null), !dbg !4415
  br label %return, !dbg !4416

if.end105:                                        ; preds = %lor.lhs.false101
  %105 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4417
  %106 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4418
  %107 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4419
  %x106 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %107, i32 0, i32 2, !dbg !4420
  %108 = load i32, i32* %x106, align 8, !dbg !4420
  %109 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4421
  %y107 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %109, i32 0, i32 3, !dbg !4422
  %110 = load i32, i32* %y107, align 4, !dbg !4422
  call void @ED_imapaint_dirty_region(%struct.Image* %105, %struct.ImBuf* %106, i32 0, i32 0, i32 %108, i32 %110), !dbg !4423
  %call108 = call %struct.BLI_Stack* @BLI_stack_new(i64 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.paint_2d_bucket_fill, i64 0, i64 0)), !dbg !4424
  store %struct.BLI_Stack* %call108, %struct.BLI_Stack** %stack, align 8, !dbg !4425
  %111 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4426
  %112 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4426
  %x109 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %112, i32 0, i32 2, !dbg !4426
  %113 = load i32, i32* %x109, align 8, !dbg !4426
  %114 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4426
  %y110 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %114, i32 0, i32 3, !dbg !4426
  %115 = load i32, i32* %y110, align 4, !dbg !4426
  %mul111 = mul nsw i32 %113, %115, !dbg !4426
  %shr = ashr i32 %mul111, 5, !dbg !4426
  %add112 = add nsw i32 %shr, 1, !dbg !4426
  %conv113 = sext i32 %add112 to i64, !dbg !4426
  %mul114 = mul i64 %conv113, 4, !dbg !4426
  %call115 = call i8* %111(i64 %mul114, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)), !dbg !4426
  %116 = bitcast i8* %call115 to i32*, !dbg !4426
  store i32* %116, i32** %touched, align 8, !dbg !4427
  %117 = load i32, i32* %y_px, align 4, !dbg !4428
  %118 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4429
  %x116 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %118, i32 0, i32 2, !dbg !4430
  %119 = load i32, i32* %x116, align 8, !dbg !4430
  %mul117 = mul nsw i32 %117, %119, !dbg !4431
  %120 = load i32, i32* %x_px, align 4, !dbg !4432
  %add118 = add nsw i32 %mul117, %120, !dbg !4433
  store i32 %add118, i32* %coordinate, align 4, !dbg !4434
  %121 = load i8, i8* %do_float, align 1, !dbg !4435
  %tobool119 = icmp ne i8 %121, 0, !dbg !4435
  br i1 %tobool119, label %if.then120, label %if.else126, !dbg !4437

if.then120:                                       ; preds = %if.end105
  %arraydecay121 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4438
  %122 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4440
  %rect_float122 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %122, i32 0, i32 9, !dbg !4441
  %123 = load float*, float** %rect_float122, align 8, !dbg !4441
  %124 = load i32, i32* %coordinate, align 4, !dbg !4442
  %mul123 = mul nsw i32 4, %124, !dbg !4443
  %idx.ext124 = sext i32 %mul123 to i64, !dbg !4444
  %add.ptr125 = getelementptr inbounds float, float* %123, i64 %idx.ext124, !dbg !4444
  call void @copy_v4_v4(float* %arraydecay121, float* %add.ptr125), !dbg !4445
  br label %if.end131, !dbg !4446

if.else126:                                       ; preds = %if.end105
  call void @llvm.dbg.declare(metadata i32* %pixel_color_b, metadata !4447, metadata !DIExpression()), !dbg !4449
  %125 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4450
  %rect127 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %125, i32 0, i32 8, !dbg !4451
  %126 = load i32*, i32** %rect127, align 8, !dbg !4451
  %127 = load i32, i32* %coordinate, align 4, !dbg !4452
  %idx.ext128 = sext i32 %127 to i64, !dbg !4453
  %add.ptr129 = getelementptr inbounds i32, i32* %126, i64 %idx.ext128, !dbg !4453
  %128 = load i32, i32* %add.ptr129, align 4, !dbg !4454
  store i32 %128, i32* %pixel_color_b, align 4, !dbg !4449
  %arraydecay130 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4455
  %129 = bitcast i32* %pixel_color_b to i8*, !dbg !4456
  call void @rgba_uchar_to_float(float* %arraydecay130, i8* %129), !dbg !4457
  br label %if.end131

if.end131:                                        ; preds = %if.else126, %if.then120
  %130 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4458
  %131 = bitcast i32* %coordinate to i8*, !dbg !4459
  call void @BLI_stack_push(%struct.BLI_Stack* %130, i8* %131), !dbg !4460
  %132 = load i32, i32* %coordinate, align 4, !dbg !4461
  %and = and i32 %132, 31, !dbg !4461
  %shl = shl i32 1, %and, !dbg !4461
  %133 = load i32*, i32** %touched, align 8, !dbg !4461
  %134 = load i32, i32* %coordinate, align 4, !dbg !4461
  %shr132 = ashr i32 %134, 5, !dbg !4461
  %idxprom = sext i32 %shr132 to i64, !dbg !4461
  %arrayidx133 = getelementptr inbounds i32, i32* %133, i64 %idxprom, !dbg !4461
  %135 = load i32, i32* %arrayidx133, align 4, !dbg !4461
  %or = or i32 %135, %shl, !dbg !4461
  store i32 %or, i32* %arrayidx133, align 4, !dbg !4461
  %136 = load i8, i8* %do_float, align 1, !dbg !4464
  %tobool134 = icmp ne i8 %136, 0, !dbg !4464
  br i1 %tobool134, label %if.then135, label %if.else183, !dbg !4466

if.then135:                                       ; preds = %if.end131
  br label %while.cond, !dbg !4467

while.cond:                                       ; preds = %if.end182, %if.then135
  %137 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4469
  %call136 = call zeroext i8 @BLI_stack_is_empty(%struct.BLI_Stack* %137), !dbg !4470
  %tobool137 = icmp ne i8 %call136, 0, !dbg !4471
  %lnot = xor i1 %tobool137, true, !dbg !4471
  br i1 %lnot, label %while.body, label %while.end, !dbg !4467

while.body:                                       ; preds = %while.cond
  %138 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4472
  %139 = bitcast i32* %coordinate to i8*, !dbg !4474
  call void @BLI_stack_pop(%struct.BLI_Stack* %138, i8* %139), !dbg !4475
  %140 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4476
  %rect_float138 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %140, i32 0, i32 9, !dbg !4477
  %141 = load float*, float** %rect_float138, align 8, !dbg !4477
  %142 = load i32, i32* %coordinate, align 4, !dbg !4478
  %mul139 = mul nsw i32 4, %142, !dbg !4479
  %idx.ext140 = sext i32 %mul139 to i64, !dbg !4480
  %add.ptr141 = getelementptr inbounds float, float* %141, i64 %idx.ext140, !dbg !4480
  %143 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4481
  %rect_float142 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %143, i32 0, i32 9, !dbg !4482
  %144 = load float*, float** %rect_float142, align 8, !dbg !4482
  %145 = load i32, i32* %coordinate, align 4, !dbg !4483
  %mul143 = mul nsw i32 4, %145, !dbg !4484
  %idx.ext144 = sext i32 %mul143 to i64, !dbg !4485
  %add.ptr145 = getelementptr inbounds float, float* %144, i64 %idx.ext144, !dbg !4485
  %arraydecay146 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !4486
  %146 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !4487
  %blend = getelementptr inbounds %struct.Brush, %struct.Brush* %146, i32 0, i32 12, !dbg !4488
  %147 = load i16, i16* %blend, align 4, !dbg !4488
  %conv147 = sext i16 %147 to i32, !dbg !4487
  call void @IMB_blend_color_float(float* %add.ptr141, float* %add.ptr145, float* %arraydecay146, i32 %conv147), !dbg !4489
  %148 = load i32, i32* %coordinate, align 4, !dbg !4490
  %149 = load i32, i32* %width, align 4, !dbg !4491
  %rem = srem i32 %148, %149, !dbg !4492
  store i32 %rem, i32* %x_px, align 4, !dbg !4493
  %150 = load i32, i32* %coordinate, align 4, !dbg !4494
  %151 = load i32, i32* %width, align 4, !dbg !4495
  %div = sdiv i32 %150, %151, !dbg !4496
  store i32 %div, i32* %y_px, align 4, !dbg !4497
  %152 = load i32, i32* %x_px, align 4, !dbg !4498
  %sub = sub nsw i32 %152, 1, !dbg !4499
  %153 = load i32, i32* %y_px, align 4, !dbg !4500
  %sub148 = sub nsw i32 %153, 1, !dbg !4501
  %154 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4502
  %155 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4503
  %156 = load i32*, i32** %touched, align 8, !dbg !4504
  %arraydecay149 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4505
  %157 = load float, float* %threshold_sq, align 4, !dbg !4506
  call void @paint_2d_fill_add_pixel_float(i32 %sub, i32 %sub148, %struct.ImBuf* %154, %struct.BLI_Stack* %155, i32* %156, float* %arraydecay149, float %157), !dbg !4507
  %158 = load i32, i32* %x_px, align 4, !dbg !4508
  %sub150 = sub nsw i32 %158, 1, !dbg !4509
  %159 = load i32, i32* %y_px, align 4, !dbg !4510
  %160 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4511
  %161 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4512
  %162 = load i32*, i32** %touched, align 8, !dbg !4513
  %arraydecay151 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4514
  %163 = load float, float* %threshold_sq, align 4, !dbg !4515
  call void @paint_2d_fill_add_pixel_float(i32 %sub150, i32 %159, %struct.ImBuf* %160, %struct.BLI_Stack* %161, i32* %162, float* %arraydecay151, float %163), !dbg !4516
  %164 = load i32, i32* %x_px, align 4, !dbg !4517
  %sub152 = sub nsw i32 %164, 1, !dbg !4518
  %165 = load i32, i32* %y_px, align 4, !dbg !4519
  %add153 = add nsw i32 %165, 1, !dbg !4520
  %166 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4521
  %167 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4522
  %168 = load i32*, i32** %touched, align 8, !dbg !4523
  %arraydecay154 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4524
  %169 = load float, float* %threshold_sq, align 4, !dbg !4525
  call void @paint_2d_fill_add_pixel_float(i32 %sub152, i32 %add153, %struct.ImBuf* %166, %struct.BLI_Stack* %167, i32* %168, float* %arraydecay154, float %169), !dbg !4526
  %170 = load i32, i32* %x_px, align 4, !dbg !4527
  %171 = load i32, i32* %y_px, align 4, !dbg !4528
  %add155 = add nsw i32 %171, 1, !dbg !4529
  %172 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4530
  %173 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4531
  %174 = load i32*, i32** %touched, align 8, !dbg !4532
  %arraydecay156 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4533
  %175 = load float, float* %threshold_sq, align 4, !dbg !4534
  call void @paint_2d_fill_add_pixel_float(i32 %170, i32 %add155, %struct.ImBuf* %172, %struct.BLI_Stack* %173, i32* %174, float* %arraydecay156, float %175), !dbg !4535
  %176 = load i32, i32* %x_px, align 4, !dbg !4536
  %177 = load i32, i32* %y_px, align 4, !dbg !4537
  %sub157 = sub nsw i32 %177, 1, !dbg !4538
  %178 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4539
  %179 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4540
  %180 = load i32*, i32** %touched, align 8, !dbg !4541
  %arraydecay158 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4542
  %181 = load float, float* %threshold_sq, align 4, !dbg !4543
  call void @paint_2d_fill_add_pixel_float(i32 %176, i32 %sub157, %struct.ImBuf* %178, %struct.BLI_Stack* %179, i32* %180, float* %arraydecay158, float %181), !dbg !4544
  %182 = load i32, i32* %x_px, align 4, !dbg !4545
  %add159 = add nsw i32 %182, 1, !dbg !4546
  %183 = load i32, i32* %y_px, align 4, !dbg !4547
  %sub160 = sub nsw i32 %183, 1, !dbg !4548
  %184 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4549
  %185 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4550
  %186 = load i32*, i32** %touched, align 8, !dbg !4551
  %arraydecay161 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4552
  %187 = load float, float* %threshold_sq, align 4, !dbg !4553
  call void @paint_2d_fill_add_pixel_float(i32 %add159, i32 %sub160, %struct.ImBuf* %184, %struct.BLI_Stack* %185, i32* %186, float* %arraydecay161, float %187), !dbg !4554
  %188 = load i32, i32* %x_px, align 4, !dbg !4555
  %add162 = add nsw i32 %188, 1, !dbg !4556
  %189 = load i32, i32* %y_px, align 4, !dbg !4557
  %190 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4558
  %191 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4559
  %192 = load i32*, i32** %touched, align 8, !dbg !4560
  %arraydecay163 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4561
  %193 = load float, float* %threshold_sq, align 4, !dbg !4562
  call void @paint_2d_fill_add_pixel_float(i32 %add162, i32 %189, %struct.ImBuf* %190, %struct.BLI_Stack* %191, i32* %192, float* %arraydecay163, float %193), !dbg !4563
  %194 = load i32, i32* %x_px, align 4, !dbg !4564
  %add164 = add nsw i32 %194, 1, !dbg !4565
  %195 = load i32, i32* %y_px, align 4, !dbg !4566
  %add165 = add nsw i32 %195, 1, !dbg !4567
  %196 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4568
  %197 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4569
  %198 = load i32*, i32** %touched, align 8, !dbg !4570
  %arraydecay166 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4571
  %199 = load float, float* %threshold_sq, align 4, !dbg !4572
  call void @paint_2d_fill_add_pixel_float(i32 %add164, i32 %add165, %struct.ImBuf* %196, %struct.BLI_Stack* %197, i32* %198, float* %arraydecay166, float %199), !dbg !4573
  %200 = load i32, i32* %x_px, align 4, !dbg !4574
  %201 = load i32, i32* %maxx, align 4, !dbg !4576
  %cmp167 = icmp sgt i32 %200, %201, !dbg !4577
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !4578

if.then169:                                       ; preds = %while.body
  %202 = load i32, i32* %x_px, align 4, !dbg !4579
  store i32 %202, i32* %maxx, align 4, !dbg !4580
  br label %if.end170, !dbg !4581

if.end170:                                        ; preds = %if.then169, %while.body
  %203 = load i32, i32* %x_px, align 4, !dbg !4582
  %204 = load i32, i32* %minx, align 4, !dbg !4584
  %cmp171 = icmp slt i32 %203, %204, !dbg !4585
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !4586

if.then173:                                       ; preds = %if.end170
  %205 = load i32, i32* %x_px, align 4, !dbg !4587
  store i32 %205, i32* %minx, align 4, !dbg !4588
  br label %if.end174, !dbg !4589

if.end174:                                        ; preds = %if.then173, %if.end170
  %206 = load i32, i32* %y_px, align 4, !dbg !4590
  %207 = load i32, i32* %maxy, align 4, !dbg !4592
  %cmp175 = icmp sgt i32 %206, %207, !dbg !4593
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !4594

if.then177:                                       ; preds = %if.end174
  %208 = load i32, i32* %y_px, align 4, !dbg !4595
  store i32 %208, i32* %maxy, align 4, !dbg !4596
  br label %if.end178, !dbg !4597

if.end178:                                        ; preds = %if.then177, %if.end174
  %209 = load i32, i32* %x_px, align 4, !dbg !4598
  %210 = load i32, i32* %miny, align 4, !dbg !4600
  %cmp179 = icmp sgt i32 %209, %210, !dbg !4601
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !4602

if.then181:                                       ; preds = %if.end178
  %211 = load i32, i32* %y_px, align 4, !dbg !4603
  store i32 %211, i32* %miny, align 4, !dbg !4604
  br label %if.end182, !dbg !4605

if.end182:                                        ; preds = %if.then181, %if.end178
  br label %while.cond, !dbg !4467, !llvm.loop !4606

while.end:                                        ; preds = %while.cond
  br label %if.end236, !dbg !4608

if.else183:                                       ; preds = %if.end131
  br label %while.cond184, !dbg !4609

while.cond184:                                    ; preds = %if.end234, %if.else183
  %212 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4611
  %call185 = call zeroext i8 @BLI_stack_is_empty(%struct.BLI_Stack* %212), !dbg !4612
  %tobool186 = icmp ne i8 %call185, 0, !dbg !4613
  %lnot187 = xor i1 %tobool186, true, !dbg !4613
  br i1 %lnot187, label %while.body188, label %while.end235, !dbg !4609

while.body188:                                    ; preds = %while.cond184
  %213 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4614
  %214 = bitcast i32* %coordinate to i8*, !dbg !4616
  call void @BLI_stack_pop(%struct.BLI_Stack* %213, i8* %214), !dbg !4617
  %215 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4618
  %rect189 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %215, i32 0, i32 8, !dbg !4619
  %216 = load i32*, i32** %rect189, align 8, !dbg !4619
  %217 = load i32, i32* %coordinate, align 4, !dbg !4620
  %idx.ext190 = sext i32 %217 to i64, !dbg !4621
  %add.ptr191 = getelementptr inbounds i32, i32* %216, i64 %idx.ext190, !dbg !4621
  %218 = bitcast i32* %add.ptr191 to i8*, !dbg !4622
  %219 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4623
  %rect192 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %219, i32 0, i32 8, !dbg !4624
  %220 = load i32*, i32** %rect192, align 8, !dbg !4624
  %221 = load i32, i32* %coordinate, align 4, !dbg !4625
  %idx.ext193 = sext i32 %221 to i64, !dbg !4626
  %add.ptr194 = getelementptr inbounds i32, i32* %220, i64 %idx.ext193, !dbg !4626
  %222 = bitcast i32* %add.ptr194 to i8*, !dbg !4627
  %223 = bitcast i32* %color_b to i8*, !dbg !4628
  %224 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !4629
  %blend195 = getelementptr inbounds %struct.Brush, %struct.Brush* %224, i32 0, i32 12, !dbg !4630
  %225 = load i16, i16* %blend195, align 4, !dbg !4630
  %conv196 = sext i16 %225 to i32, !dbg !4629
  call void @IMB_blend_color_byte(i8* %218, i8* %222, i8* %223, i32 %conv196), !dbg !4631
  %226 = load i32, i32* %coordinate, align 4, !dbg !4632
  %227 = load i32, i32* %width, align 4, !dbg !4633
  %rem197 = srem i32 %226, %227, !dbg !4634
  store i32 %rem197, i32* %x_px, align 4, !dbg !4635
  %228 = load i32, i32* %coordinate, align 4, !dbg !4636
  %229 = load i32, i32* %width, align 4, !dbg !4637
  %div198 = sdiv i32 %228, %229, !dbg !4638
  store i32 %div198, i32* %y_px, align 4, !dbg !4639
  %230 = load i32, i32* %x_px, align 4, !dbg !4640
  %sub199 = sub nsw i32 %230, 1, !dbg !4641
  %231 = load i32, i32* %y_px, align 4, !dbg !4642
  %sub200 = sub nsw i32 %231, 1, !dbg !4643
  %232 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4644
  %233 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4645
  %234 = load i32*, i32** %touched, align 8, !dbg !4646
  %arraydecay201 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4647
  %235 = load float, float* %threshold_sq, align 4, !dbg !4648
  call void @paint_2d_fill_add_pixel_byte(i32 %sub199, i32 %sub200, %struct.ImBuf* %232, %struct.BLI_Stack* %233, i32* %234, float* %arraydecay201, float %235), !dbg !4649
  %236 = load i32, i32* %x_px, align 4, !dbg !4650
  %sub202 = sub nsw i32 %236, 1, !dbg !4651
  %237 = load i32, i32* %y_px, align 4, !dbg !4652
  %238 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4653
  %239 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4654
  %240 = load i32*, i32** %touched, align 8, !dbg !4655
  %arraydecay203 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4656
  %241 = load float, float* %threshold_sq, align 4, !dbg !4657
  call void @paint_2d_fill_add_pixel_byte(i32 %sub202, i32 %237, %struct.ImBuf* %238, %struct.BLI_Stack* %239, i32* %240, float* %arraydecay203, float %241), !dbg !4658
  %242 = load i32, i32* %x_px, align 4, !dbg !4659
  %sub204 = sub nsw i32 %242, 1, !dbg !4660
  %243 = load i32, i32* %y_px, align 4, !dbg !4661
  %add205 = add nsw i32 %243, 1, !dbg !4662
  %244 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4663
  %245 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4664
  %246 = load i32*, i32** %touched, align 8, !dbg !4665
  %arraydecay206 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4666
  %247 = load float, float* %threshold_sq, align 4, !dbg !4667
  call void @paint_2d_fill_add_pixel_byte(i32 %sub204, i32 %add205, %struct.ImBuf* %244, %struct.BLI_Stack* %245, i32* %246, float* %arraydecay206, float %247), !dbg !4668
  %248 = load i32, i32* %x_px, align 4, !dbg !4669
  %249 = load i32, i32* %y_px, align 4, !dbg !4670
  %add207 = add nsw i32 %249, 1, !dbg !4671
  %250 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4672
  %251 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4673
  %252 = load i32*, i32** %touched, align 8, !dbg !4674
  %arraydecay208 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4675
  %253 = load float, float* %threshold_sq, align 4, !dbg !4676
  call void @paint_2d_fill_add_pixel_byte(i32 %248, i32 %add207, %struct.ImBuf* %250, %struct.BLI_Stack* %251, i32* %252, float* %arraydecay208, float %253), !dbg !4677
  %254 = load i32, i32* %x_px, align 4, !dbg !4678
  %255 = load i32, i32* %y_px, align 4, !dbg !4679
  %sub209 = sub nsw i32 %255, 1, !dbg !4680
  %256 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4681
  %257 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4682
  %258 = load i32*, i32** %touched, align 8, !dbg !4683
  %arraydecay210 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4684
  %259 = load float, float* %threshold_sq, align 4, !dbg !4685
  call void @paint_2d_fill_add_pixel_byte(i32 %254, i32 %sub209, %struct.ImBuf* %256, %struct.BLI_Stack* %257, i32* %258, float* %arraydecay210, float %259), !dbg !4686
  %260 = load i32, i32* %x_px, align 4, !dbg !4687
  %add211 = add nsw i32 %260, 1, !dbg !4688
  %261 = load i32, i32* %y_px, align 4, !dbg !4689
  %sub212 = sub nsw i32 %261, 1, !dbg !4690
  %262 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4691
  %263 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4692
  %264 = load i32*, i32** %touched, align 8, !dbg !4693
  %arraydecay213 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4694
  %265 = load float, float* %threshold_sq, align 4, !dbg !4695
  call void @paint_2d_fill_add_pixel_byte(i32 %add211, i32 %sub212, %struct.ImBuf* %262, %struct.BLI_Stack* %263, i32* %264, float* %arraydecay213, float %265), !dbg !4696
  %266 = load i32, i32* %x_px, align 4, !dbg !4697
  %add214 = add nsw i32 %266, 1, !dbg !4698
  %267 = load i32, i32* %y_px, align 4, !dbg !4699
  %268 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4700
  %269 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4701
  %270 = load i32*, i32** %touched, align 8, !dbg !4702
  %arraydecay215 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4703
  %271 = load float, float* %threshold_sq, align 4, !dbg !4704
  call void @paint_2d_fill_add_pixel_byte(i32 %add214, i32 %267, %struct.ImBuf* %268, %struct.BLI_Stack* %269, i32* %270, float* %arraydecay215, float %271), !dbg !4705
  %272 = load i32, i32* %x_px, align 4, !dbg !4706
  %add216 = add nsw i32 %272, 1, !dbg !4707
  %273 = load i32, i32* %y_px, align 4, !dbg !4708
  %add217 = add nsw i32 %273, 1, !dbg !4709
  %274 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4710
  %275 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4711
  %276 = load i32*, i32** %touched, align 8, !dbg !4712
  %arraydecay218 = getelementptr inbounds [4 x float], [4 x float]* %pixel_color, i64 0, i64 0, !dbg !4713
  %277 = load float, float* %threshold_sq, align 4, !dbg !4714
  call void @paint_2d_fill_add_pixel_byte(i32 %add216, i32 %add217, %struct.ImBuf* %274, %struct.BLI_Stack* %275, i32* %276, float* %arraydecay218, float %277), !dbg !4715
  %278 = load i32, i32* %x_px, align 4, !dbg !4716
  %279 = load i32, i32* %maxx, align 4, !dbg !4718
  %cmp219 = icmp sgt i32 %278, %279, !dbg !4719
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !4720

if.then221:                                       ; preds = %while.body188
  %280 = load i32, i32* %x_px, align 4, !dbg !4721
  store i32 %280, i32* %maxx, align 4, !dbg !4722
  br label %if.end222, !dbg !4723

if.end222:                                        ; preds = %if.then221, %while.body188
  %281 = load i32, i32* %x_px, align 4, !dbg !4724
  %282 = load i32, i32* %minx, align 4, !dbg !4726
  %cmp223 = icmp slt i32 %281, %282, !dbg !4727
  br i1 %cmp223, label %if.then225, label %if.end226, !dbg !4728

if.then225:                                       ; preds = %if.end222
  %283 = load i32, i32* %x_px, align 4, !dbg !4729
  store i32 %283, i32* %minx, align 4, !dbg !4730
  br label %if.end226, !dbg !4731

if.end226:                                        ; preds = %if.then225, %if.end222
  %284 = load i32, i32* %y_px, align 4, !dbg !4732
  %285 = load i32, i32* %maxy, align 4, !dbg !4734
  %cmp227 = icmp sgt i32 %284, %285, !dbg !4735
  br i1 %cmp227, label %if.then229, label %if.end230, !dbg !4736

if.then229:                                       ; preds = %if.end226
  %286 = load i32, i32* %y_px, align 4, !dbg !4737
  store i32 %286, i32* %maxy, align 4, !dbg !4738
  br label %if.end230, !dbg !4739

if.end230:                                        ; preds = %if.then229, %if.end226
  %287 = load i32, i32* %x_px, align 4, !dbg !4740
  %288 = load i32, i32* %miny, align 4, !dbg !4742
  %cmp231 = icmp sgt i32 %287, %288, !dbg !4743
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !4744

if.then233:                                       ; preds = %if.end230
  %289 = load i32, i32* %y_px, align 4, !dbg !4745
  store i32 %289, i32* %miny, align 4, !dbg !4746
  br label %if.end234, !dbg !4747

if.end234:                                        ; preds = %if.then233, %if.end230
  br label %while.cond184, !dbg !4609, !llvm.loop !4748

while.end235:                                     ; preds = %while.cond184
  br label %if.end236

if.end236:                                        ; preds = %while.end235, %while.end
  %290 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4750
  %291 = load i32*, i32** %touched, align 8, !dbg !4751
  %292 = bitcast i32* %291 to i8*, !dbg !4751
  call void %290(i8* %292), !dbg !4750
  %293 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack, align 8, !dbg !4752
  call void @BLI_stack_free(%struct.BLI_Stack* %293), !dbg !4753
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.end70
  %294 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4754
  %295 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4755
  %296 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4756
  call void @imapaint_image_update(%struct.SpaceImage* %294, %struct.Image* %295, %struct.ImBuf* %296, i16 signext 0), !dbg !4757
  call void @ED_imapaint_clear_partial_redraw(), !dbg !4758
  %297 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4759
  %298 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4760
  call void @BKE_image_release_ibuf(%struct.Image* %297, %struct.ImBuf* %298, i8* null), !dbg !4761
  %299 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4762
  %300 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !4763
  %301 = bitcast %struct.Image* %300 to i8*, !dbg !4763
  call void @WM_event_add_notifier(%struct.bContext* %299, i32 167772161, i8* %301), !dbg !4764
  br label %return, !dbg !4765

return:                                           ; preds = %if.end237, %if.then104, %if.then4, %if.then
  ret void, !dbg !4765
}

; Function Attrs: noinline nounwind uwtable
define internal void @linearrgb_to_srgb_uchar3(i8* %srgb, float* %linear) #0 !dbg !4766 {
entry:
  %srgb.addr = alloca i8*, align 8
  %linear.addr = alloca float*, align 8
  %srgb_f = alloca [3 x float], align 4
  store i8* %srgb, i8** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srgb.addr, metadata !4770, metadata !DIExpression()), !dbg !4771
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !4772, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.declare(metadata [3 x float]* %srgb_f, metadata !4774, metadata !DIExpression()), !dbg !4775
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 0, !dbg !4776
  %0 = load float*, float** %linear.addr, align 8, !dbg !4777
  call void @linearrgb_to_srgb_v3_v3(float* %arraydecay, float* %0), !dbg !4778
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 0, !dbg !4779
  %1 = load float, float* %arrayidx, align 4, !dbg !4779
  %cmp = fcmp ole float %1, 0.000000e+00, !dbg !4779
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4779

cond.true:                                        ; preds = %entry
  br label %cond.end6, !dbg !4779

cond.false:                                       ; preds = %entry
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 0, !dbg !4779
  %2 = load float, float* %arrayidx1, align 4, !dbg !4779
  %cmp2 = fcmp ogt float %2, 0x3FEFEFEFE0000000, !dbg !4779
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !4779

cond.true3:                                       ; preds = %cond.false
  br label %cond.end, !dbg !4779

cond.false4:                                      ; preds = %cond.false
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 0, !dbg !4779
  %3 = load float, float* %arrayidx5, align 4, !dbg !4779
  %mul = fmul float 2.550000e+02, %3, !dbg !4779
  %add = fadd float %mul, 5.000000e-01, !dbg !4779
  br label %cond.end, !dbg !4779

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi float [ 2.550000e+02, %cond.true3 ], [ %add, %cond.false4 ], !dbg !4779
  br label %cond.end6, !dbg !4779

cond.end6:                                        ; preds = %cond.end, %cond.true
  %cond7 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !4779
  %conv = fptoui float %cond7 to i8, !dbg !4779
  %4 = load i8*, i8** %srgb.addr, align 8, !dbg !4779
  %arrayidx8 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !4779
  store i8 %conv, i8* %arrayidx8, align 1, !dbg !4779
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 1, !dbg !4779
  %5 = load float, float* %arrayidx9, align 4, !dbg !4779
  %cmp10 = fcmp ole float %5, 0.000000e+00, !dbg !4779
  br i1 %cmp10, label %cond.true12, label %cond.false13, !dbg !4779

cond.true12:                                      ; preds = %cond.end6
  br label %cond.end24, !dbg !4779

cond.false13:                                     ; preds = %cond.end6
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 1, !dbg !4779
  %6 = load float, float* %arrayidx14, align 4, !dbg !4779
  %cmp15 = fcmp ogt float %6, 0x3FEFEFEFE0000000, !dbg !4779
  br i1 %cmp15, label %cond.true17, label %cond.false18, !dbg !4779

cond.true17:                                      ; preds = %cond.false13
  br label %cond.end22, !dbg !4779

cond.false18:                                     ; preds = %cond.false13
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 1, !dbg !4779
  %7 = load float, float* %arrayidx19, align 4, !dbg !4779
  %mul20 = fmul float 2.550000e+02, %7, !dbg !4779
  %add21 = fadd float %mul20, 5.000000e-01, !dbg !4779
  br label %cond.end22, !dbg !4779

cond.end22:                                       ; preds = %cond.false18, %cond.true17
  %cond23 = phi float [ 2.550000e+02, %cond.true17 ], [ %add21, %cond.false18 ], !dbg !4779
  br label %cond.end24, !dbg !4779

cond.end24:                                       ; preds = %cond.end22, %cond.true12
  %cond25 = phi float [ 0.000000e+00, %cond.true12 ], [ %cond23, %cond.end22 ], !dbg !4779
  %conv26 = fptoui float %cond25 to i8, !dbg !4779
  %8 = load i8*, i8** %srgb.addr, align 8, !dbg !4779
  %arrayidx27 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !4779
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !4779
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 2, !dbg !4779
  %9 = load float, float* %arrayidx28, align 4, !dbg !4779
  %cmp29 = fcmp ole float %9, 0.000000e+00, !dbg !4779
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !4779

cond.true31:                                      ; preds = %cond.end24
  br label %cond.end43, !dbg !4779

cond.false32:                                     ; preds = %cond.end24
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 2, !dbg !4779
  %10 = load float, float* %arrayidx33, align 4, !dbg !4779
  %cmp34 = fcmp ogt float %10, 0x3FEFEFEFE0000000, !dbg !4779
  br i1 %cmp34, label %cond.true36, label %cond.false37, !dbg !4779

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end41, !dbg !4779

cond.false37:                                     ; preds = %cond.false32
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %srgb_f, i64 0, i64 2, !dbg !4779
  %11 = load float, float* %arrayidx38, align 4, !dbg !4779
  %mul39 = fmul float 2.550000e+02, %11, !dbg !4779
  %add40 = fadd float %mul39, 5.000000e-01, !dbg !4779
  br label %cond.end41, !dbg !4779

cond.end41:                                       ; preds = %cond.false37, %cond.true36
  %cond42 = phi float [ 2.550000e+02, %cond.true36 ], [ %add40, %cond.false37 ], !dbg !4779
  br label %cond.end43, !dbg !4779

cond.end43:                                       ; preds = %cond.end41, %cond.true31
  %cond44 = phi float [ 0.000000e+00, %cond.true31 ], [ %cond42, %cond.end41 ], !dbg !4779
  %conv45 = fptoui float %cond44 to i8, !dbg !4779
  %12 = load i8*, i8** %srgb.addr, align 8, !dbg !4779
  %arrayidx46 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !4779
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !4779
  ret void, !dbg !4781
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4782 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4783, metadata !DIExpression()), !dbg !4784
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4785, metadata !DIExpression()), !dbg !4786
  %0 = load float*, float** %a.addr, align 8, !dbg !4787
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4787
  %1 = load float, float* %arrayidx, align 4, !dbg !4787
  %2 = load float*, float** %r.addr, align 8, !dbg !4788
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4788
  store float %1, float* %arrayidx1, align 4, !dbg !4789
  %3 = load float*, float** %a.addr, align 8, !dbg !4790
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4790
  %4 = load float, float* %arrayidx2, align 4, !dbg !4790
  %5 = load float*, float** %r.addr, align 8, !dbg !4791
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4791
  store float %4, float* %arrayidx3, align 4, !dbg !4792
  %6 = load float*, float** %a.addr, align 8, !dbg !4793
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4793
  %7 = load float, float* %arrayidx4, align 4, !dbg !4793
  %8 = load float*, float** %r.addr, align 8, !dbg !4794
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4794
  store float %7, float* %arrayidx5, align 4, !dbg !4795
  ret void, !dbg !4796
}

declare dso_local void @ED_imapaint_dirty_region(%struct.Image*, %struct.ImBuf*, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @blend_color_mix_float(float* %dst, float* %src1, float* %src2) #0 !dbg !4797 {
entry:
  %dst.addr = alloca float*, align 8
  %src1.addr = alloca float*, align 8
  %src2.addr = alloca float*, align 8
  %t = alloca float, align 4
  %mt = alloca float, align 4
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !4801, metadata !DIExpression()), !dbg !4802
  store float* %src1, float** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src1.addr, metadata !4803, metadata !DIExpression()), !dbg !4804
  store float* %src2, float** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src2.addr, metadata !4805, metadata !DIExpression()), !dbg !4806
  %0 = load float*, float** %src2.addr, align 8, !dbg !4807
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !4807
  %1 = load float, float* %arrayidx, align 4, !dbg !4807
  %cmp = fcmp une float %1, 0.000000e+00, !dbg !4809
  br i1 %cmp, label %if.then, label %if.else, !dbg !4810

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %t, metadata !4811, metadata !DIExpression()), !dbg !4813
  %2 = load float*, float** %src2.addr, align 8, !dbg !4814
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 3, !dbg !4814
  %3 = load float, float* %arrayidx1, align 4, !dbg !4814
  store float %3, float* %t, align 4, !dbg !4813
  call void @llvm.dbg.declare(metadata float* %mt, metadata !4815, metadata !DIExpression()), !dbg !4816
  %4 = load float, float* %t, align 4, !dbg !4817
  %sub = fsub float 1.000000e+00, %4, !dbg !4818
  store float %sub, float* %mt, align 4, !dbg !4816
  %5 = load float, float* %mt, align 4, !dbg !4819
  %6 = load float*, float** %src1.addr, align 8, !dbg !4820
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 0, !dbg !4820
  %7 = load float, float* %arrayidx2, align 4, !dbg !4820
  %mul = fmul float %5, %7, !dbg !4821
  %8 = load float*, float** %src2.addr, align 8, !dbg !4822
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 0, !dbg !4822
  %9 = load float, float* %arrayidx3, align 4, !dbg !4822
  %add = fadd float %mul, %9, !dbg !4823
  %10 = load float*, float** %dst.addr, align 8, !dbg !4824
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 0, !dbg !4824
  store float %add, float* %arrayidx4, align 4, !dbg !4825
  %11 = load float, float* %mt, align 4, !dbg !4826
  %12 = load float*, float** %src1.addr, align 8, !dbg !4827
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 1, !dbg !4827
  %13 = load float, float* %arrayidx5, align 4, !dbg !4827
  %mul6 = fmul float %11, %13, !dbg !4828
  %14 = load float*, float** %src2.addr, align 8, !dbg !4829
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 1, !dbg !4829
  %15 = load float, float* %arrayidx7, align 4, !dbg !4829
  %add8 = fadd float %mul6, %15, !dbg !4830
  %16 = load float*, float** %dst.addr, align 8, !dbg !4831
  %arrayidx9 = getelementptr inbounds float, float* %16, i64 1, !dbg !4831
  store float %add8, float* %arrayidx9, align 4, !dbg !4832
  %17 = load float, float* %mt, align 4, !dbg !4833
  %18 = load float*, float** %src1.addr, align 8, !dbg !4834
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 2, !dbg !4834
  %19 = load float, float* %arrayidx10, align 4, !dbg !4834
  %mul11 = fmul float %17, %19, !dbg !4835
  %20 = load float*, float** %src2.addr, align 8, !dbg !4836
  %arrayidx12 = getelementptr inbounds float, float* %20, i64 2, !dbg !4836
  %21 = load float, float* %arrayidx12, align 4, !dbg !4836
  %add13 = fadd float %mul11, %21, !dbg !4837
  %22 = load float*, float** %dst.addr, align 8, !dbg !4838
  %arrayidx14 = getelementptr inbounds float, float* %22, i64 2, !dbg !4838
  store float %add13, float* %arrayidx14, align 4, !dbg !4839
  %23 = load float, float* %mt, align 4, !dbg !4840
  %24 = load float*, float** %src1.addr, align 8, !dbg !4841
  %arrayidx15 = getelementptr inbounds float, float* %24, i64 3, !dbg !4841
  %25 = load float, float* %arrayidx15, align 4, !dbg !4841
  %mul16 = fmul float %23, %25, !dbg !4842
  %26 = load float, float* %t, align 4, !dbg !4843
  %add17 = fadd float %mul16, %26, !dbg !4844
  %27 = load float*, float** %dst.addr, align 8, !dbg !4845
  %arrayidx18 = getelementptr inbounds float, float* %27, i64 3, !dbg !4845
  store float %add17, float* %arrayidx18, align 4, !dbg !4846
  br label %if.end, !dbg !4847

if.else:                                          ; preds = %entry
  %28 = load float*, float** %dst.addr, align 8, !dbg !4848
  %29 = load float*, float** %src1.addr, align 8, !dbg !4850
  call void @copy_v4_v4(float* %28, float* %29), !dbg !4851
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4852
}

; Function Attrs: noinline nounwind uwtable
define internal void @blend_color_mix_byte(i8* %dst, i8* %src1, i8* %src2) #0 !dbg !4853 {
entry:
  %dst.addr = alloca i8*, align 8
  %src1.addr = alloca i8*, align 8
  %src2.addr = alloca i8*, align 8
  %t = alloca i32, align 4
  %mt = alloca i32, align 4
  %tmp = alloca [4 x i32], align 16
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4857, metadata !DIExpression()), !dbg !4858
  store i8* %src1, i8** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src1.addr, metadata !4859, metadata !DIExpression()), !dbg !4860
  store i8* %src2, i8** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src2.addr, metadata !4861, metadata !DIExpression()), !dbg !4862
  %0 = load i8*, i8** %src2.addr, align 8, !dbg !4863
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 3, !dbg !4863
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4863
  %conv = zext i8 %1 to i32, !dbg !4863
  %cmp = icmp ne i32 %conv, 0, !dbg !4865
  br i1 %cmp, label %if.then, label %if.else, !dbg !4866

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4867, metadata !DIExpression()), !dbg !4869
  %2 = load i8*, i8** %src2.addr, align 8, !dbg !4870
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 3, !dbg !4870
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !4870
  %conv3 = zext i8 %3 to i32, !dbg !4870
  store i32 %conv3, i32* %t, align 4, !dbg !4869
  call void @llvm.dbg.declare(metadata i32* %mt, metadata !4871, metadata !DIExpression()), !dbg !4872
  %4 = load i32, i32* %t, align 4, !dbg !4873
  %sub = sub nsw i32 255, %4, !dbg !4874
  store i32 %sub, i32* %mt, align 4, !dbg !4872
  call void @llvm.dbg.declare(metadata [4 x i32]* %tmp, metadata !4875, metadata !DIExpression()), !dbg !4877
  %5 = load i32, i32* %mt, align 4, !dbg !4878
  %6 = load i8*, i8** %src1.addr, align 8, !dbg !4879
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !4879
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !4879
  %conv5 = zext i8 %7 to i32, !dbg !4879
  %mul = mul nsw i32 %5, %conv5, !dbg !4880
  %8 = load i8*, i8** %src1.addr, align 8, !dbg !4881
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !4881
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !4881
  %conv7 = zext i8 %9 to i32, !dbg !4881
  %mul8 = mul nsw i32 %mul, %conv7, !dbg !4882
  %10 = load i32, i32* %t, align 4, !dbg !4883
  %mul9 = mul nsw i32 %10, 255, !dbg !4884
  %11 = load i8*, i8** %src2.addr, align 8, !dbg !4885
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i64 0, !dbg !4885
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !4885
  %conv11 = zext i8 %12 to i32, !dbg !4885
  %mul12 = mul nsw i32 %mul9, %conv11, !dbg !4886
  %add = add nsw i32 %mul8, %mul12, !dbg !4887
  %arrayidx13 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 0, !dbg !4888
  store i32 %add, i32* %arrayidx13, align 16, !dbg !4889
  %13 = load i32, i32* %mt, align 4, !dbg !4890
  %14 = load i8*, i8** %src1.addr, align 8, !dbg !4891
  %arrayidx14 = getelementptr inbounds i8, i8* %14, i64 3, !dbg !4891
  %15 = load i8, i8* %arrayidx14, align 1, !dbg !4891
  %conv15 = zext i8 %15 to i32, !dbg !4891
  %mul16 = mul nsw i32 %13, %conv15, !dbg !4892
  %16 = load i8*, i8** %src1.addr, align 8, !dbg !4893
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !4893
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !4893
  %conv18 = zext i8 %17 to i32, !dbg !4893
  %mul19 = mul nsw i32 %mul16, %conv18, !dbg !4894
  %18 = load i32, i32* %t, align 4, !dbg !4895
  %mul20 = mul nsw i32 %18, 255, !dbg !4896
  %19 = load i8*, i8** %src2.addr, align 8, !dbg !4897
  %arrayidx21 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !4897
  %20 = load i8, i8* %arrayidx21, align 1, !dbg !4897
  %conv22 = zext i8 %20 to i32, !dbg !4897
  %mul23 = mul nsw i32 %mul20, %conv22, !dbg !4898
  %add24 = add nsw i32 %mul19, %mul23, !dbg !4899
  %arrayidx25 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 1, !dbg !4900
  store i32 %add24, i32* %arrayidx25, align 4, !dbg !4901
  %21 = load i32, i32* %mt, align 4, !dbg !4902
  %22 = load i8*, i8** %src1.addr, align 8, !dbg !4903
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 3, !dbg !4903
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !4903
  %conv27 = zext i8 %23 to i32, !dbg !4903
  %mul28 = mul nsw i32 %21, %conv27, !dbg !4904
  %24 = load i8*, i8** %src1.addr, align 8, !dbg !4905
  %arrayidx29 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !4905
  %25 = load i8, i8* %arrayidx29, align 1, !dbg !4905
  %conv30 = zext i8 %25 to i32, !dbg !4905
  %mul31 = mul nsw i32 %mul28, %conv30, !dbg !4906
  %26 = load i32, i32* %t, align 4, !dbg !4907
  %mul32 = mul nsw i32 %26, 255, !dbg !4908
  %27 = load i8*, i8** %src2.addr, align 8, !dbg !4909
  %arrayidx33 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !4909
  %28 = load i8, i8* %arrayidx33, align 1, !dbg !4909
  %conv34 = zext i8 %28 to i32, !dbg !4909
  %mul35 = mul nsw i32 %mul32, %conv34, !dbg !4910
  %add36 = add nsw i32 %mul31, %mul35, !dbg !4911
  %arrayidx37 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 2, !dbg !4912
  store i32 %add36, i32* %arrayidx37, align 8, !dbg !4913
  %29 = load i32, i32* %mt, align 4, !dbg !4914
  %30 = load i8*, i8** %src1.addr, align 8, !dbg !4915
  %arrayidx38 = getelementptr inbounds i8, i8* %30, i64 3, !dbg !4915
  %31 = load i8, i8* %arrayidx38, align 1, !dbg !4915
  %conv39 = zext i8 %31 to i32, !dbg !4915
  %mul40 = mul nsw i32 %29, %conv39, !dbg !4916
  %32 = load i32, i32* %t, align 4, !dbg !4917
  %mul41 = mul nsw i32 %32, 255, !dbg !4918
  %add42 = add nsw i32 %mul40, %mul41, !dbg !4919
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !4920
  store i32 %add42, i32* %arrayidx43, align 4, !dbg !4921
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 0, !dbg !4922
  %33 = load i32, i32* %arrayidx44, align 16, !dbg !4922
  %arrayidx45 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !4923
  %34 = load i32, i32* %arrayidx45, align 4, !dbg !4923
  %call = call i32 @divide_round_i(i32 %33, i32 %34), !dbg !4924
  %conv46 = trunc i32 %call to i8, !dbg !4925
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !4926
  %arrayidx47 = getelementptr inbounds i8, i8* %35, i64 0, !dbg !4926
  store i8 %conv46, i8* %arrayidx47, align 1, !dbg !4927
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 1, !dbg !4928
  %36 = load i32, i32* %arrayidx48, align 4, !dbg !4928
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !4929
  %37 = load i32, i32* %arrayidx49, align 4, !dbg !4929
  %call50 = call i32 @divide_round_i(i32 %36, i32 %37), !dbg !4930
  %conv51 = trunc i32 %call50 to i8, !dbg !4931
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !4932
  %arrayidx52 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !4932
  store i8 %conv51, i8* %arrayidx52, align 1, !dbg !4933
  %arrayidx53 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 2, !dbg !4934
  %39 = load i32, i32* %arrayidx53, align 8, !dbg !4934
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !4935
  %40 = load i32, i32* %arrayidx54, align 4, !dbg !4935
  %call55 = call i32 @divide_round_i(i32 %39, i32 %40), !dbg !4936
  %conv56 = trunc i32 %call55 to i8, !dbg !4937
  %41 = load i8*, i8** %dst.addr, align 8, !dbg !4938
  %arrayidx57 = getelementptr inbounds i8, i8* %41, i64 2, !dbg !4938
  store i8 %conv56, i8* %arrayidx57, align 1, !dbg !4939
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %tmp, i64 0, i64 3, !dbg !4940
  %42 = load i32, i32* %arrayidx58, align 4, !dbg !4940
  %call59 = call i32 @divide_round_i(i32 %42, i32 255), !dbg !4941
  %conv60 = trunc i32 %call59 to i8, !dbg !4942
  %43 = load i8*, i8** %dst.addr, align 8, !dbg !4943
  %arrayidx61 = getelementptr inbounds i8, i8* %43, i64 3, !dbg !4943
  store i8 %conv60, i8* %arrayidx61, align 1, !dbg !4944
  br label %if.end, !dbg !4945

if.else:                                          ; preds = %entry
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !4946
  %45 = load i8*, i8** %src1.addr, align 8, !dbg !4948
  call void @copy_v4_v4_char(i8* %44, i8* %45), !dbg !4949
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4950
}

declare dso_local %struct.BLI_Stack* @BLI_stack_new(i64, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !4951 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4952, metadata !DIExpression()), !dbg !4953
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4954, metadata !DIExpression()), !dbg !4955
  %0 = load float*, float** %a.addr, align 8, !dbg !4956
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4956
  %1 = load float, float* %arrayidx, align 4, !dbg !4956
  %2 = load float*, float** %r.addr, align 8, !dbg !4957
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4957
  store float %1, float* %arrayidx1, align 4, !dbg !4958
  %3 = load float*, float** %a.addr, align 8, !dbg !4959
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4959
  %4 = load float, float* %arrayidx2, align 4, !dbg !4959
  %5 = load float*, float** %r.addr, align 8, !dbg !4960
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4960
  store float %4, float* %arrayidx3, align 4, !dbg !4961
  %6 = load float*, float** %a.addr, align 8, !dbg !4962
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4962
  %7 = load float, float* %arrayidx4, align 4, !dbg !4962
  %8 = load float*, float** %r.addr, align 8, !dbg !4963
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4963
  store float %7, float* %arrayidx5, align 4, !dbg !4964
  %9 = load float*, float** %a.addr, align 8, !dbg !4965
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !4965
  %10 = load float, float* %arrayidx6, align 4, !dbg !4965
  %11 = load float*, float** %r.addr, align 8, !dbg !4966
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !4966
  store float %10, float* %arrayidx7, align 4, !dbg !4967
  ret void, !dbg !4968
}

declare dso_local void @rgba_uchar_to_float(float*, i8*) #2

declare dso_local void @BLI_stack_push(%struct.BLI_Stack*, i8*) #2

declare dso_local zeroext i8 @BLI_stack_is_empty(%struct.BLI_Stack*) #2

declare dso_local void @BLI_stack_pop(%struct.BLI_Stack*, i8*) #2

declare dso_local void @IMB_blend_color_float(float*, float*, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_fill_add_pixel_float(i32 %x_px, i32 %y_px, %struct.ImBuf* %ibuf, %struct.BLI_Stack* %stack, i32* %touched, float* %color, float %threshold_sq) #0 !dbg !4969 {
entry:
  %x_px.addr = alloca i32, align 4
  %y_px.addr = alloca i32, align 4
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %stack.addr = alloca %struct.BLI_Stack*, align 8
  %touched.addr = alloca i32*, align 8
  %color.addr = alloca float*, align 8
  %threshold_sq.addr = alloca float, align 4
  %coordinate = alloca i32, align 4
  store i32 %x_px, i32* %x_px.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x_px.addr, metadata !4972, metadata !DIExpression()), !dbg !4973
  store i32 %y_px, i32* %y_px.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y_px.addr, metadata !4974, metadata !DIExpression()), !dbg !4975
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !4976, metadata !DIExpression()), !dbg !4977
  store %struct.BLI_Stack* %stack, %struct.BLI_Stack** %stack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BLI_Stack** %stack.addr, metadata !4978, metadata !DIExpression()), !dbg !4979
  store i32* %touched, i32** %touched.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %touched.addr, metadata !4980, metadata !DIExpression()), !dbg !4981
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !4982, metadata !DIExpression()), !dbg !4983
  store float %threshold_sq, float* %threshold_sq.addr, align 4
  call void @llvm.dbg.declare(metadata float* %threshold_sq.addr, metadata !4984, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.declare(metadata i32* %coordinate, metadata !4986, metadata !DIExpression()), !dbg !4987
  %0 = load i32, i32* %x_px.addr, align 4, !dbg !4988
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4990
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !4991
  %2 = load i32, i32* %x, align 8, !dbg !4991
  %cmp = icmp sge i32 %0, %2, !dbg !4992
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4993

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %x_px.addr, align 4, !dbg !4994
  %cmp1 = icmp slt i32 %3, 0, !dbg !4995
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4996

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load i32, i32* %y_px.addr, align 4, !dbg !4997
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4998
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 3, !dbg !4999
  %6 = load i32, i32* %y, align 4, !dbg !4999
  %cmp3 = icmp sge i32 %4, %6, !dbg !5000
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !5001

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %7 = load i32, i32* %y_px.addr, align 4, !dbg !5002
  %cmp5 = icmp slt i32 %7, 0, !dbg !5003
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5004

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  br label %if.end18, !dbg !5005

if.end:                                           ; preds = %lor.lhs.false4
  %8 = load i32, i32* %y_px.addr, align 4, !dbg !5006
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5007
  %x6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 2, !dbg !5008
  %10 = load i32, i32* %x6, align 8, !dbg !5008
  %mul = mul nsw i32 %8, %10, !dbg !5009
  %11 = load i32, i32* %x_px.addr, align 4, !dbg !5010
  %add = add nsw i32 %mul, %11, !dbg !5011
  store i32 %add, i32* %coordinate, align 4, !dbg !5012
  %12 = load i32*, i32** %touched.addr, align 8, !dbg !5013
  %13 = load i32, i32* %coordinate, align 4, !dbg !5013
  %shr = ashr i32 %13, 5, !dbg !5013
  %idxprom = sext i32 %shr to i64, !dbg !5013
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !5013
  %14 = load i32, i32* %arrayidx, align 4, !dbg !5013
  %15 = load i32, i32* %coordinate, align 4, !dbg !5013
  %and = and i32 %15, 31, !dbg !5013
  %shl = shl i32 1, %and, !dbg !5013
  %and7 = and i32 %14, %shl, !dbg !5013
  %tobool = icmp ne i32 %and7, 0, !dbg !5013
  br i1 %tobool, label %if.end18, label %if.then8, !dbg !5015

if.then8:                                         ; preds = %if.end
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5016
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %16, i32 0, i32 9, !dbg !5019
  %17 = load float*, float** %rect_float, align 8, !dbg !5019
  %18 = load i32, i32* %coordinate, align 4, !dbg !5020
  %mul9 = mul nsw i32 4, %18, !dbg !5021
  %idx.ext = sext i32 %mul9 to i64, !dbg !5022
  %add.ptr = getelementptr inbounds float, float* %17, i64 %idx.ext, !dbg !5022
  %19 = load float*, float** %color.addr, align 8, !dbg !5023
  %20 = load float, float* %threshold_sq.addr, align 4, !dbg !5024
  %call = call zeroext i8 @compare_len_squared_v3v3(float* %add.ptr, float* %19, float %20), !dbg !5025
  %tobool10 = icmp ne i8 %call, 0, !dbg !5025
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5026

if.then11:                                        ; preds = %if.then8
  %21 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack.addr, align 8, !dbg !5027
  %22 = bitcast i32* %coordinate to i8*, !dbg !5029
  call void @BLI_stack_push(%struct.BLI_Stack* %21, i8* %22), !dbg !5030
  br label %if.end12, !dbg !5031

if.end12:                                         ; preds = %if.then11, %if.then8
  %23 = load i32, i32* %coordinate, align 4, !dbg !5032
  %and13 = and i32 %23, 31, !dbg !5032
  %shl14 = shl i32 1, %and13, !dbg !5032
  %24 = load i32*, i32** %touched.addr, align 8, !dbg !5032
  %25 = load i32, i32* %coordinate, align 4, !dbg !5032
  %shr15 = ashr i32 %25, 5, !dbg !5032
  %idxprom16 = sext i32 %shr15 to i64, !dbg !5032
  %arrayidx17 = getelementptr inbounds i32, i32* %24, i64 %idxprom16, !dbg !5032
  %26 = load i32, i32* %arrayidx17, align 4, !dbg !5032
  %or = or i32 %26, %shl14, !dbg !5032
  store i32 %or, i32* %arrayidx17, align 4, !dbg !5032
  br label %if.end18, !dbg !5035

if.end18:                                         ; preds = %if.then, %if.end12, %if.end
  ret void, !dbg !5036
}

declare dso_local void @IMB_blend_color_byte(i8*, i8*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_fill_add_pixel_byte(i32 %x_px, i32 %y_px, %struct.ImBuf* %ibuf, %struct.BLI_Stack* %stack, i32* %touched, float* %color, float %threshold_sq) #0 !dbg !5037 {
entry:
  %x_px.addr = alloca i32, align 4
  %y_px.addr = alloca i32, align 4
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %stack.addr = alloca %struct.BLI_Stack*, align 8
  %touched.addr = alloca i32*, align 8
  %color.addr = alloca float*, align 8
  %threshold_sq.addr = alloca float, align 4
  %coordinate = alloca i32, align 4
  %color_f = alloca [4 x float], align 16
  %color_b = alloca i8*, align 8
  store i32 %x_px, i32* %x_px.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x_px.addr, metadata !5038, metadata !DIExpression()), !dbg !5039
  store i32 %y_px, i32* %y_px.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y_px.addr, metadata !5040, metadata !DIExpression()), !dbg !5041
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !5042, metadata !DIExpression()), !dbg !5043
  store %struct.BLI_Stack* %stack, %struct.BLI_Stack** %stack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BLI_Stack** %stack.addr, metadata !5044, metadata !DIExpression()), !dbg !5045
  store i32* %touched, i32** %touched.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %touched.addr, metadata !5046, metadata !DIExpression()), !dbg !5047
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !5048, metadata !DIExpression()), !dbg !5049
  store float %threshold_sq, float* %threshold_sq.addr, align 4
  call void @llvm.dbg.declare(metadata float* %threshold_sq.addr, metadata !5050, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.declare(metadata i32* %coordinate, metadata !5052, metadata !DIExpression()), !dbg !5053
  %0 = load i32, i32* %x_px.addr, align 4, !dbg !5054
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5056
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !5057
  %2 = load i32, i32* %x, align 8, !dbg !5057
  %cmp = icmp sge i32 %0, %2, !dbg !5058
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5059

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %x_px.addr, align 4, !dbg !5060
  %cmp1 = icmp slt i32 %3, 0, !dbg !5061
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5062

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load i32, i32* %y_px.addr, align 4, !dbg !5063
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5064
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 3, !dbg !5065
  %6 = load i32, i32* %y, align 4, !dbg !5065
  %cmp3 = icmp sge i32 %4, %6, !dbg !5066
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !5067

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %7 = load i32, i32* %y_px.addr, align 4, !dbg !5068
  %cmp5 = icmp slt i32 %7, 0, !dbg !5069
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5070

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  br label %if.end18, !dbg !5071

if.end:                                           ; preds = %lor.lhs.false4
  %8 = load i32, i32* %y_px.addr, align 4, !dbg !5072
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5073
  %x6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 2, !dbg !5074
  %10 = load i32, i32* %x6, align 8, !dbg !5074
  %mul = mul nsw i32 %8, %10, !dbg !5075
  %11 = load i32, i32* %x_px.addr, align 4, !dbg !5076
  %add = add nsw i32 %mul, %11, !dbg !5077
  store i32 %add, i32* %coordinate, align 4, !dbg !5078
  %12 = load i32*, i32** %touched.addr, align 8, !dbg !5079
  %13 = load i32, i32* %coordinate, align 4, !dbg !5079
  %shr = ashr i32 %13, 5, !dbg !5079
  %idxprom = sext i32 %shr to i64, !dbg !5079
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !5079
  %14 = load i32, i32* %arrayidx, align 4, !dbg !5079
  %15 = load i32, i32* %coordinate, align 4, !dbg !5079
  %and = and i32 %15, 31, !dbg !5079
  %shl = shl i32 1, %and, !dbg !5079
  %and7 = and i32 %14, %shl, !dbg !5079
  %tobool = icmp ne i32 %and7, 0, !dbg !5079
  br i1 %tobool, label %if.end18, label %if.then8, !dbg !5081

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [4 x float]* %color_f, metadata !5082, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.declare(metadata i8** %color_b, metadata !5085, metadata !DIExpression()), !dbg !5086
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !5087
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %16, i32 0, i32 8, !dbg !5088
  %17 = load i32*, i32** %rect, align 8, !dbg !5088
  %18 = load i32, i32* %coordinate, align 4, !dbg !5089
  %idx.ext = sext i32 %18 to i64, !dbg !5090
  %add.ptr = getelementptr inbounds i32, i32* %17, i64 %idx.ext, !dbg !5090
  %19 = bitcast i32* %add.ptr to i8*, !dbg !5091
  store i8* %19, i8** %color_b, align 8, !dbg !5086
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5092
  %20 = load i8*, i8** %color_b, align 8, !dbg !5093
  call void @rgba_uchar_to_float(float* %arraydecay, i8* %20), !dbg !5094
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5095
  %21 = load float*, float** %color.addr, align 8, !dbg !5097
  %22 = load float, float* %threshold_sq.addr, align 4, !dbg !5098
  %call = call zeroext i8 @compare_len_squared_v3v3(float* %arraydecay9, float* %21, float %22), !dbg !5099
  %tobool10 = icmp ne i8 %call, 0, !dbg !5099
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5100

if.then11:                                        ; preds = %if.then8
  %23 = load %struct.BLI_Stack*, %struct.BLI_Stack** %stack.addr, align 8, !dbg !5101
  %24 = bitcast i32* %coordinate to i8*, !dbg !5103
  call void @BLI_stack_push(%struct.BLI_Stack* %23, i8* %24), !dbg !5104
  br label %if.end12, !dbg !5105

if.end12:                                         ; preds = %if.then11, %if.then8
  %25 = load i32, i32* %coordinate, align 4, !dbg !5106
  %and13 = and i32 %25, 31, !dbg !5106
  %shl14 = shl i32 1, %and13, !dbg !5106
  %26 = load i32*, i32** %touched.addr, align 8, !dbg !5106
  %27 = load i32, i32* %coordinate, align 4, !dbg !5106
  %shr15 = ashr i32 %27, 5, !dbg !5106
  %idxprom16 = sext i32 %shr15 to i64, !dbg !5106
  %arrayidx17 = getelementptr inbounds i32, i32* %26, i64 %idxprom16, !dbg !5106
  %28 = load i32, i32* %arrayidx17, align 4, !dbg !5106
  %or = or i32 %28, %shl14, !dbg !5106
  store i32 %or, i32* %arrayidx17, align 4, !dbg !5106
  br label %if.end18, !dbg !5109

if.end18:                                         ; preds = %if.then, %if.end12, %if.end
  ret void, !dbg !5110
}

declare dso_local void @BLI_stack_free(%struct.BLI_Stack*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @paint_2d_gradient_fill(%struct.bContext* %C, %struct.Brush* %br, float* %mouse_init, float* %mouse_final, i8* %ps) #0 !dbg !5111 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %br.addr = alloca %struct.Brush*, align 8
  %mouse_init.addr = alloca float*, align 8
  %mouse_final.addr = alloca float*, align 8
  %ps.addr = alloca i8*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %ima = alloca %struct.Image*, align 8
  %s = alloca %struct.ImagePaintState*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %x_px = alloca i32, align 4
  %y_px = alloca i32, align 4
  %color_b = alloca i32, align 4
  %color_f = alloca [4 x float], align 16
  %image_init = alloca [2 x float], align 4
  %image_final = alloca [2 x float], align 4
  %tangent = alloca [2 x float], align 4
  %line_len_sq_inv = alloca float, align 4
  %line_len = alloca float, align 4
  %do_float = alloca i8, align 1
  %f = alloca float, align 4
  %p = alloca [2 x float], align 4
  %f89 = alloca float, align 4
  %p90 = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5114, metadata !DIExpression()), !dbg !5115
  store %struct.Brush* %br, %struct.Brush** %br.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Brush** %br.addr, metadata !5116, metadata !DIExpression()), !dbg !5117
  store float* %mouse_init, float** %mouse_init.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse_init.addr, metadata !5118, metadata !DIExpression()), !dbg !5119
  store float* %mouse_final, float** %mouse_final.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse_final.addr, metadata !5120, metadata !DIExpression()), !dbg !5121
  store i8* %ps, i8** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ps.addr, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !5124, metadata !DIExpression()), !dbg !5125
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5126
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !5127
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !5125
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !5128, metadata !DIExpression()), !dbg !5129
  %1 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5130
  %image = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %1, i32 0, i32 5, !dbg !5131
  %2 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !5131
  store %struct.Image* %2, %struct.Image** %ima, align 8, !dbg !5129
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s, metadata !5132, metadata !DIExpression()), !dbg !5133
  %3 = load i8*, i8** %ps.addr, align 8, !dbg !5134
  %4 = bitcast i8* %3 to %struct.ImagePaintState*, !dbg !5134
  store %struct.ImagePaintState* %4, %struct.ImagePaintState** %s, align 8, !dbg !5133
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !5135, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.declare(metadata i32* %x_px, metadata !5137, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.declare(metadata i32* %y_px, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata i32* %color_b, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata [4 x float]* %color_f, metadata !5143, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.declare(metadata [2 x float]* %image_init, metadata !5145, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.declare(metadata [2 x float]* %image_final, metadata !5147, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.declare(metadata [2 x float]* %tangent, metadata !5149, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.declare(metadata float* %line_len_sq_inv, metadata !5151, metadata !DIExpression()), !dbg !5152
  call void @llvm.dbg.declare(metadata float* %line_len, metadata !5153, metadata !DIExpression()), !dbg !5154
  call void @llvm.dbg.declare(metadata i8* %do_float, metadata !5155, metadata !DIExpression()), !dbg !5156
  %5 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5157
  %tobool = icmp ne %struct.Image* %5, null, !dbg !5157
  br i1 %tobool, label %if.end, label %if.then, !dbg !5159

if.then:                                          ; preds = %entry
  br label %return, !dbg !5160

if.end:                                           ; preds = %entry
  %6 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5161
  %7 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5162
  %iuser = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %7, i32 0, i32 6, !dbg !5163
  %call1 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %6, %struct.ImageUser* %iuser, i8** null), !dbg !5164
  store %struct.ImBuf* %call1, %struct.ImBuf** %ibuf, align 8, !dbg !5165
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5166
  %tobool2 = icmp ne %struct.ImBuf* %8, null, !dbg !5166
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5168

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !5169

if.end4:                                          ; preds = %if.end
  %9 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !5170
  %v2d = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %9, i32 0, i32 2, !dbg !5171
  %10 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !5171
  %11 = load float*, float** %mouse_final.addr, align 8, !dbg !5172
  %arrayidx = getelementptr inbounds float, float* %11, i64 0, !dbg !5172
  %12 = load float, float* %arrayidx, align 4, !dbg !5172
  %13 = load float*, float** %mouse_final.addr, align 8, !dbg !5173
  %arrayidx5 = getelementptr inbounds float, float* %13, i64 1, !dbg !5173
  %14 = load float, float* %arrayidx5, align 4, !dbg !5173
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %image_final, i64 0, i64 0, !dbg !5174
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %image_final, i64 0, i64 1, !dbg !5175
  call void @UI_view2d_region_to_view(%struct.View2D* %10, float %12, float %14, float* %arrayidx6, float* %arrayidx7), !dbg !5176
  %15 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s, align 8, !dbg !5177
  %v2d8 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %15, i32 0, i32 2, !dbg !5178
  %16 = load %struct.View2D*, %struct.View2D** %v2d8, align 8, !dbg !5178
  %17 = load float*, float** %mouse_init.addr, align 8, !dbg !5179
  %arrayidx9 = getelementptr inbounds float, float* %17, i64 0, !dbg !5179
  %18 = load float, float* %arrayidx9, align 4, !dbg !5179
  %19 = load float*, float** %mouse_init.addr, align 8, !dbg !5180
  %arrayidx10 = getelementptr inbounds float, float* %19, i64 1, !dbg !5180
  %20 = load float, float* %arrayidx10, align 4, !dbg !5180
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 0, !dbg !5181
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 1, !dbg !5182
  call void @UI_view2d_region_to_view(%struct.View2D* %16, float %18, float %20, float* %arrayidx11, float* %arrayidx12), !dbg !5183
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5184
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 2, !dbg !5185
  %22 = load i32, i32* %x, align 8, !dbg !5185
  %conv = sitofp i32 %22 to float, !dbg !5184
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %image_final, i64 0, i64 0, !dbg !5186
  %23 = load float, float* %arrayidx13, align 4, !dbg !5187
  %mul = fmul float %23, %conv, !dbg !5187
  store float %mul, float* %arrayidx13, align 4, !dbg !5187
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5188
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %24, i32 0, i32 3, !dbg !5189
  %25 = load i32, i32* %y, align 4, !dbg !5189
  %conv14 = sitofp i32 %25 to float, !dbg !5188
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %image_final, i64 0, i64 1, !dbg !5190
  %26 = load float, float* %arrayidx15, align 4, !dbg !5191
  %mul16 = fmul float %26, %conv14, !dbg !5191
  store float %mul16, float* %arrayidx15, align 4, !dbg !5191
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5192
  %x17 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 2, !dbg !5193
  %28 = load i32, i32* %x17, align 8, !dbg !5193
  %conv18 = sitofp i32 %28 to float, !dbg !5192
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 0, !dbg !5194
  %29 = load float, float* %arrayidx19, align 4, !dbg !5195
  %mul20 = fmul float %29, %conv18, !dbg !5195
  store float %mul20, float* %arrayidx19, align 4, !dbg !5195
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5196
  %y21 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %30, i32 0, i32 3, !dbg !5197
  %31 = load i32, i32* %y21, align 4, !dbg !5197
  %conv22 = sitofp i32 %31 to float, !dbg !5196
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 1, !dbg !5198
  %32 = load float, float* %arrayidx23, align 4, !dbg !5199
  %mul24 = fmul float %32, %conv22, !dbg !5199
  store float %mul24, float* %arrayidx23, align 4, !dbg !5199
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !5200
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %image_final, i64 0, i64 0, !dbg !5201
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 0, !dbg !5202
  call void @sub_v2_v2v2(float* %arraydecay, float* %arraydecay25, float* %arraydecay26), !dbg !5203
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !5204
  %call28 = call float @len_squared_v2(float* %arraydecay27), !dbg !5205
  store float %call28, float* %line_len, align 4, !dbg !5206
  %33 = load float, float* %line_len, align 4, !dbg !5207
  %div = fdiv float 1.000000e+00, %33, !dbg !5208
  store float %div, float* %line_len_sq_inv, align 4, !dbg !5209
  %34 = load float, float* %line_len, align 4, !dbg !5210
  %call29 = call float @sqrtf(float %34) #5, !dbg !5211
  store float %call29, float* %line_len, align 4, !dbg !5212
  %35 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5213
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %35, i32 0, i32 9, !dbg !5214
  %36 = load float*, float** %rect_float, align 8, !dbg !5214
  %cmp = icmp ne float* %36, null, !dbg !5215
  %conv30 = zext i1 %cmp to i32, !dbg !5215
  %conv31 = trunc i32 %conv30 to i8, !dbg !5216
  store i8 %conv31, i8* %do_float, align 1, !dbg !5217
  %37 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5218
  %38 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5219
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5220
  %x32 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %39, i32 0, i32 2, !dbg !5221
  %40 = load i32, i32* %x32, align 8, !dbg !5221
  %41 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5222
  %y33 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %41, i32 0, i32 3, !dbg !5223
  %42 = load i32, i32* %y33, align 4, !dbg !5223
  call void @ED_imapaint_dirty_region(%struct.Image* %37, %struct.ImBuf* %38, i32 0, i32 0, i32 %40, i32 %42), !dbg !5224
  %43 = load i8, i8* %do_float, align 1, !dbg !5225
  %tobool34 = icmp ne i8 %43, 0, !dbg !5225
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !5227

if.then35:                                        ; preds = %if.end4
  store i32 0, i32* %x_px, align 4, !dbg !5228
  br label %for.cond, !dbg !5231

for.cond:                                         ; preds = %for.inc76, %if.then35
  %44 = load i32, i32* %x_px, align 4, !dbg !5232
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5234
  %x36 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %45, i32 0, i32 2, !dbg !5235
  %46 = load i32, i32* %x36, align 8, !dbg !5235
  %cmp37 = icmp slt i32 %44, %46, !dbg !5236
  br i1 %cmp37, label %for.body, label %for.end78, !dbg !5237

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %y_px, align 4, !dbg !5238
  br label %for.cond39, !dbg !5241

for.cond39:                                       ; preds = %for.inc, %for.body
  %47 = load i32, i32* %y_px, align 4, !dbg !5242
  %48 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5244
  %y40 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %48, i32 0, i32 3, !dbg !5245
  %49 = load i32, i32* %y40, align 4, !dbg !5245
  %cmp41 = icmp slt i32 %47, %49, !dbg !5246
  br i1 %cmp41, label %for.body43, label %for.end, !dbg !5247

for.body43:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata float* %f, metadata !5248, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.declare(metadata [2 x float]* %p, metadata !5251, metadata !DIExpression()), !dbg !5252
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !5253
  %50 = load i32, i32* %x_px, align 4, !dbg !5254
  %conv44 = sitofp i32 %50 to float, !dbg !5254
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 0, !dbg !5255
  %51 = load float, float* %arrayidx45, align 4, !dbg !5255
  %sub = fsub float %conv44, %51, !dbg !5256
  store float %sub, float* %arrayinit.begin, align 4, !dbg !5253
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !5253
  %52 = load i32, i32* %y_px, align 4, !dbg !5257
  %conv46 = sitofp i32 %52 to float, !dbg !5257
  %arrayidx47 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 1, !dbg !5258
  %53 = load float, float* %arrayidx47, align 4, !dbg !5258
  %sub48 = fsub float %conv46, %53, !dbg !5259
  store float %sub48, float* %arrayinit.element, align 4, !dbg !5253
  %54 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !5260
  %gradient_fill_mode = getelementptr inbounds %struct.Brush, %struct.Brush* %54, i32 0, i32 33, !dbg !5261
  %55 = load i32, i32* %gradient_fill_mode, align 4, !dbg !5261
  switch i32 %55, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb53
  ], !dbg !5262

sw.bb:                                            ; preds = %for.body43
  %arraydecay49 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !5263
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !5266
  %call51 = call float @dot_v2v2(float* %arraydecay49, float* %arraydecay50), !dbg !5267
  %56 = load float, float* %line_len_sq_inv, align 4, !dbg !5268
  %mul52 = fmul float %call51, %56, !dbg !5269
  store float %mul52, float* %f, align 4, !dbg !5270
  br label %sw.epilog, !dbg !5271

sw.bb53:                                          ; preds = %for.body43
  %arraydecay54 = getelementptr inbounds [2 x float], [2 x float]* %p, i64 0, i64 0, !dbg !5272
  %call55 = call float @len_v2(float* %arraydecay54), !dbg !5274
  %57 = load float, float* %line_len, align 4, !dbg !5275
  %div56 = fdiv float %call55, %57, !dbg !5276
  store float %div56, float* %f, align 4, !dbg !5277
  br label %sw.epilog, !dbg !5278

sw.epilog:                                        ; preds = %for.body43, %sw.bb53, %sw.bb
  %58 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !5279
  %gradient = getelementptr inbounds %struct.Brush, %struct.Brush* %58, i32 0, i32 8, !dbg !5280
  %59 = load %struct.ColorBand*, %struct.ColorBand** %gradient, align 8, !dbg !5280
  %60 = load float, float* %f, align 4, !dbg !5281
  %arraydecay57 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5282
  %call58 = call zeroext i8 @do_colorband(%struct.ColorBand* %59, float %60, float* %arraydecay57), !dbg !5283
  %arraydecay59 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5284
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 3, !dbg !5285
  %61 = load float, float* %arrayidx60, align 4, !dbg !5285
  call void @mul_v3_fl(float* %arraydecay59, float %61), !dbg !5286
  %62 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !5287
  %alpha = getelementptr inbounds %struct.Brush, %struct.Brush* %62, i32 0, i32 26, !dbg !5288
  %63 = load float, float* %alpha, align 8, !dbg !5288
  %arrayidx61 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 3, !dbg !5289
  %64 = load float, float* %arrayidx61, align 4, !dbg !5290
  %mul62 = fmul float %64, %63, !dbg !5290
  store float %mul62, float* %arrayidx61, align 4, !dbg !5290
  %65 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5291
  %rect_float63 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %65, i32 0, i32 9, !dbg !5292
  %66 = load float*, float** %rect_float63, align 8, !dbg !5292
  %67 = load i32, i32* %y_px, align 4, !dbg !5293
  %68 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5294
  %x64 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %68, i32 0, i32 2, !dbg !5295
  %69 = load i32, i32* %x64, align 8, !dbg !5295
  %mul65 = mul nsw i32 %67, %69, !dbg !5296
  %70 = load i32, i32* %x_px, align 4, !dbg !5297
  %add = add nsw i32 %mul65, %70, !dbg !5298
  %mul66 = mul nsw i32 4, %add, !dbg !5299
  %idx.ext = sext i32 %mul66 to i64, !dbg !5300
  %add.ptr = getelementptr inbounds float, float* %66, i64 %idx.ext, !dbg !5300
  %71 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5301
  %rect_float67 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %71, i32 0, i32 9, !dbg !5302
  %72 = load float*, float** %rect_float67, align 8, !dbg !5302
  %73 = load i32, i32* %y_px, align 4, !dbg !5303
  %74 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5304
  %x68 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %74, i32 0, i32 2, !dbg !5305
  %75 = load i32, i32* %x68, align 8, !dbg !5305
  %mul69 = mul nsw i32 %73, %75, !dbg !5306
  %76 = load i32, i32* %x_px, align 4, !dbg !5307
  %add70 = add nsw i32 %mul69, %76, !dbg !5308
  %mul71 = mul nsw i32 4, %add70, !dbg !5309
  %idx.ext72 = sext i32 %mul71 to i64, !dbg !5310
  %add.ptr73 = getelementptr inbounds float, float* %72, i64 %idx.ext72, !dbg !5310
  %arraydecay74 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5311
  %77 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !5312
  %blend = getelementptr inbounds %struct.Brush, %struct.Brush* %77, i32 0, i32 12, !dbg !5313
  %78 = load i16, i16* %blend, align 4, !dbg !5313
  %conv75 = sext i16 %78 to i32, !dbg !5312
  call void @IMB_blend_color_float(float* %add.ptr, float* %add.ptr73, float* %arraydecay74, i32 %conv75), !dbg !5314
  br label %for.inc, !dbg !5315

for.inc:                                          ; preds = %sw.epilog
  %79 = load i32, i32* %y_px, align 4, !dbg !5316
  %inc = add nsw i32 %79, 1, !dbg !5316
  store i32 %inc, i32* %y_px, align 4, !dbg !5316
  br label %for.cond39, !dbg !5317, !llvm.loop !5318

for.end:                                          ; preds = %for.cond39
  br label %for.inc76, !dbg !5320

for.inc76:                                        ; preds = %for.end
  %80 = load i32, i32* %x_px, align 4, !dbg !5321
  %inc77 = add nsw i32 %80, 1, !dbg !5321
  store i32 %inc77, i32* %x_px, align 4, !dbg !5321
  br label %for.cond, !dbg !5322, !llvm.loop !5323

for.end78:                                        ; preds = %for.cond
  br label %if.end142, !dbg !5325

if.else:                                          ; preds = %if.end4
  store i32 0, i32* %x_px, align 4, !dbg !5326
  br label %for.cond79, !dbg !5329

for.cond79:                                       ; preds = %for.inc139, %if.else
  %81 = load i32, i32* %x_px, align 4, !dbg !5330
  %82 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5332
  %x80 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %82, i32 0, i32 2, !dbg !5333
  %83 = load i32, i32* %x80, align 8, !dbg !5333
  %cmp81 = icmp slt i32 %81, %83, !dbg !5334
  br i1 %cmp81, label %for.body83, label %for.end141, !dbg !5335

for.body83:                                       ; preds = %for.cond79
  store i32 0, i32* %y_px, align 4, !dbg !5336
  br label %for.cond84, !dbg !5339

for.cond84:                                       ; preds = %for.inc136, %for.body83
  %84 = load i32, i32* %y_px, align 4, !dbg !5340
  %85 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5342
  %y85 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %85, i32 0, i32 3, !dbg !5343
  %86 = load i32, i32* %y85, align 4, !dbg !5343
  %cmp86 = icmp slt i32 %84, %86, !dbg !5344
  br i1 %cmp86, label %for.body88, label %for.end138, !dbg !5345

for.body88:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata float* %f89, metadata !5346, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.declare(metadata [2 x float]* %p90, metadata !5349, metadata !DIExpression()), !dbg !5350
  %arrayinit.begin91 = getelementptr inbounds [2 x float], [2 x float]* %p90, i64 0, i64 0, !dbg !5351
  %87 = load i32, i32* %x_px, align 4, !dbg !5352
  %conv92 = sitofp i32 %87 to float, !dbg !5352
  %arrayidx93 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 0, !dbg !5353
  %88 = load float, float* %arrayidx93, align 4, !dbg !5353
  %sub94 = fsub float %conv92, %88, !dbg !5354
  store float %sub94, float* %arrayinit.begin91, align 4, !dbg !5351
  %arrayinit.element95 = getelementptr inbounds float, float* %arrayinit.begin91, i64 1, !dbg !5351
  %89 = load i32, i32* %y_px, align 4, !dbg !5355
  %conv96 = sitofp i32 %89 to float, !dbg !5355
  %arrayidx97 = getelementptr inbounds [2 x float], [2 x float]* %image_init, i64 0, i64 1, !dbg !5356
  %90 = load float, float* %arrayidx97, align 4, !dbg !5356
  %sub98 = fsub float %conv96, %90, !dbg !5357
  store float %sub98, float* %arrayinit.element95, align 4, !dbg !5351
  %91 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !5358
  %gradient_fill_mode99 = getelementptr inbounds %struct.Brush, %struct.Brush* %91, i32 0, i32 33, !dbg !5359
  %92 = load i32, i32* %gradient_fill_mode99, align 4, !dbg !5359
  switch i32 %92, label %sw.epilog109 [
    i32 0, label %sw.bb100
    i32 1, label %sw.bb105
  ], !dbg !5360

sw.bb100:                                         ; preds = %for.body88
  %arraydecay101 = getelementptr inbounds [2 x float], [2 x float]* %p90, i64 0, i64 0, !dbg !5361
  %arraydecay102 = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !5364
  %call103 = call float @dot_v2v2(float* %arraydecay101, float* %arraydecay102), !dbg !5365
  %93 = load float, float* %line_len_sq_inv, align 4, !dbg !5366
  %mul104 = fmul float %call103, %93, !dbg !5367
  store float %mul104, float* %f89, align 4, !dbg !5368
  br label %sw.epilog109, !dbg !5369

sw.bb105:                                         ; preds = %for.body88
  %arraydecay106 = getelementptr inbounds [2 x float], [2 x float]* %p90, i64 0, i64 0, !dbg !5370
  %call107 = call float @len_v2(float* %arraydecay106), !dbg !5372
  %94 = load float, float* %line_len, align 4, !dbg !5373
  %div108 = fdiv float %call107, %94, !dbg !5374
  store float %div108, float* %f89, align 4, !dbg !5375
  br label %sw.epilog109, !dbg !5376

sw.epilog109:                                     ; preds = %for.body88, %sw.bb105, %sw.bb100
  %95 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !5377
  %gradient110 = getelementptr inbounds %struct.Brush, %struct.Brush* %95, i32 0, i32 8, !dbg !5378
  %96 = load %struct.ColorBand*, %struct.ColorBand** %gradient110, align 8, !dbg !5378
  %97 = load float, float* %f89, align 4, !dbg !5379
  %arraydecay111 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5380
  %call112 = call zeroext i8 @do_colorband(%struct.ColorBand* %96, float %97, float* %arraydecay111), !dbg !5381
  %arraydecay113 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5382
  %arraydecay114 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5383
  call void @linearrgb_to_srgb_v3_v3(float* %arraydecay113, float* %arraydecay114), !dbg !5384
  %98 = bitcast i32* %color_b to i8*, !dbg !5385
  %arraydecay115 = getelementptr inbounds [4 x float], [4 x float]* %color_f, i64 0, i64 0, !dbg !5386
  call void @rgba_float_to_uchar(i8* %98, float* %arraydecay115), !dbg !5387
  %99 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !5388
  %alpha116 = getelementptr inbounds %struct.Brush, %struct.Brush* %99, i32 0, i32 26, !dbg !5389
  %100 = load float, float* %alpha116, align 8, !dbg !5389
  %101 = bitcast i32* %color_b to i8*, !dbg !5390
  %arrayidx117 = getelementptr inbounds i8, i8* %101, i64 3, !dbg !5390
  %102 = load i8, i8* %arrayidx117, align 1, !dbg !5391
  %conv118 = uitofp i8 %102 to float, !dbg !5391
  %mul119 = fmul float %conv118, %100, !dbg !5391
  %conv120 = fptoui float %mul119 to i8, !dbg !5391
  store i8 %conv120, i8* %arrayidx117, align 1, !dbg !5391
  %103 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5392
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %103, i32 0, i32 8, !dbg !5393
  %104 = load i32*, i32** %rect, align 8, !dbg !5393
  %105 = load i32, i32* %y_px, align 4, !dbg !5394
  %106 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5395
  %x121 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %106, i32 0, i32 2, !dbg !5396
  %107 = load i32, i32* %x121, align 8, !dbg !5396
  %mul122 = mul nsw i32 %105, %107, !dbg !5397
  %idx.ext123 = sext i32 %mul122 to i64, !dbg !5398
  %add.ptr124 = getelementptr inbounds i32, i32* %104, i64 %idx.ext123, !dbg !5398
  %108 = load i32, i32* %x_px, align 4, !dbg !5399
  %idx.ext125 = sext i32 %108 to i64, !dbg !5400
  %add.ptr126 = getelementptr inbounds i32, i32* %add.ptr124, i64 %idx.ext125, !dbg !5400
  %109 = bitcast i32* %add.ptr126 to i8*, !dbg !5401
  %110 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5402
  %rect127 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %110, i32 0, i32 8, !dbg !5403
  %111 = load i32*, i32** %rect127, align 8, !dbg !5403
  %112 = load i32, i32* %y_px, align 4, !dbg !5404
  %113 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5405
  %x128 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %113, i32 0, i32 2, !dbg !5406
  %114 = load i32, i32* %x128, align 8, !dbg !5406
  %mul129 = mul nsw i32 %112, %114, !dbg !5407
  %idx.ext130 = sext i32 %mul129 to i64, !dbg !5408
  %add.ptr131 = getelementptr inbounds i32, i32* %111, i64 %idx.ext130, !dbg !5408
  %115 = load i32, i32* %x_px, align 4, !dbg !5409
  %idx.ext132 = sext i32 %115 to i64, !dbg !5410
  %add.ptr133 = getelementptr inbounds i32, i32* %add.ptr131, i64 %idx.ext132, !dbg !5410
  %116 = bitcast i32* %add.ptr133 to i8*, !dbg !5411
  %117 = bitcast i32* %color_b to i8*, !dbg !5412
  %118 = load %struct.Brush*, %struct.Brush** %br.addr, align 8, !dbg !5413
  %blend134 = getelementptr inbounds %struct.Brush, %struct.Brush* %118, i32 0, i32 12, !dbg !5414
  %119 = load i16, i16* %blend134, align 4, !dbg !5414
  %conv135 = sext i16 %119 to i32, !dbg !5413
  call void @IMB_blend_color_byte(i8* %109, i8* %116, i8* %117, i32 %conv135), !dbg !5415
  br label %for.inc136, !dbg !5416

for.inc136:                                       ; preds = %sw.epilog109
  %120 = load i32, i32* %y_px, align 4, !dbg !5417
  %inc137 = add nsw i32 %120, 1, !dbg !5417
  store i32 %inc137, i32* %y_px, align 4, !dbg !5417
  br label %for.cond84, !dbg !5418, !llvm.loop !5419

for.end138:                                       ; preds = %for.cond84
  br label %for.inc139, !dbg !5421

for.inc139:                                       ; preds = %for.end138
  %121 = load i32, i32* %x_px, align 4, !dbg !5422
  %inc140 = add nsw i32 %121, 1, !dbg !5422
  store i32 %inc140, i32* %x_px, align 4, !dbg !5422
  br label %for.cond79, !dbg !5423, !llvm.loop !5424

for.end141:                                       ; preds = %for.cond79
  br label %if.end142

if.end142:                                        ; preds = %for.end141, %for.end78
  %122 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5426
  %123 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5427
  %124 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5428
  call void @imapaint_image_update(%struct.SpaceImage* %122, %struct.Image* %123, %struct.ImBuf* %124, i16 signext 0), !dbg !5429
  call void @ED_imapaint_clear_partial_redraw(), !dbg !5430
  %125 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5431
  %126 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !5432
  call void @BKE_image_release_ibuf(%struct.Image* %125, %struct.ImBuf* %126, i8* null), !dbg !5433
  %127 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5434
  %128 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !5435
  %129 = bitcast %struct.Image* %128 to i8*, !dbg !5435
  call void @WM_event_add_notifier(%struct.bContext* %127, i32 167772161, i8* %129), !dbg !5436
  br label %return, !dbg !5437

return:                                           ; preds = %if.end142, %if.then3, %if.then
  ret void, !dbg !5437
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !5438 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5439, metadata !DIExpression()), !dbg !5440
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5441, metadata !DIExpression()), !dbg !5442
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5443, metadata !DIExpression()), !dbg !5444
  %0 = load float*, float** %a.addr, align 8, !dbg !5445
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5445
  %1 = load float, float* %arrayidx, align 4, !dbg !5445
  %2 = load float*, float** %b.addr, align 8, !dbg !5446
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5446
  %3 = load float, float* %arrayidx1, align 4, !dbg !5446
  %sub = fsub float %1, %3, !dbg !5447
  %4 = load float*, float** %r.addr, align 8, !dbg !5448
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5448
  store float %sub, float* %arrayidx2, align 4, !dbg !5449
  %5 = load float*, float** %a.addr, align 8, !dbg !5450
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5450
  %6 = load float, float* %arrayidx3, align 4, !dbg !5450
  %7 = load float*, float** %b.addr, align 8, !dbg !5451
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5451
  %8 = load float, float* %arrayidx4, align 4, !dbg !5451
  %sub5 = fsub float %6, %8, !dbg !5452
  %9 = load float*, float** %r.addr, align 8, !dbg !5453
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5453
  store float %sub5, float* %arrayidx6, align 4, !dbg !5454
  ret void, !dbg !5455
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2(float* %v) #0 !dbg !5456 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !5459, metadata !DIExpression()), !dbg !5460
  %0 = load float*, float** %v.addr, align 8, !dbg !5461
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5461
  %1 = load float, float* %arrayidx, align 4, !dbg !5461
  %2 = load float*, float** %v.addr, align 8, !dbg !5462
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5462
  %3 = load float, float* %arrayidx1, align 4, !dbg !5462
  %mul = fmul float %1, %3, !dbg !5463
  %4 = load float*, float** %v.addr, align 8, !dbg !5464
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5464
  %5 = load float, float* %arrayidx2, align 4, !dbg !5464
  %6 = load float*, float** %v.addr, align 8, !dbg !5465
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5465
  %7 = load float, float* %arrayidx3, align 4, !dbg !5465
  %mul4 = fmul float %5, %7, !dbg !5466
  %add = fadd float %mul, %mul4, !dbg !5467
  ret float %add, !dbg !5468
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !5469 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5472, metadata !DIExpression()), !dbg !5473
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5474, metadata !DIExpression()), !dbg !5475
  %0 = load float*, float** %a.addr, align 8, !dbg !5476
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5476
  %1 = load float, float* %arrayidx, align 4, !dbg !5476
  %2 = load float*, float** %b.addr, align 8, !dbg !5477
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5477
  %3 = load float, float* %arrayidx1, align 4, !dbg !5477
  %mul = fmul float %1, %3, !dbg !5478
  %4 = load float*, float** %a.addr, align 8, !dbg !5479
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5479
  %5 = load float, float* %arrayidx2, align 4, !dbg !5479
  %6 = load float*, float** %b.addr, align 8, !dbg !5480
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5480
  %7 = load float, float* %arrayidx3, align 4, !dbg !5480
  %mul4 = fmul float %5, %7, !dbg !5481
  %add = fadd float %mul, %mul4, !dbg !5482
  ret float %add, !dbg !5483
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !5484 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  %0 = load float*, float** %v.addr, align 8, !dbg !5487
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5487
  %1 = load float, float* %arrayidx, align 4, !dbg !5487
  %2 = load float*, float** %v.addr, align 8, !dbg !5488
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5488
  %3 = load float, float* %arrayidx1, align 4, !dbg !5488
  %mul = fmul float %1, %3, !dbg !5489
  %4 = load float*, float** %v.addr, align 8, !dbg !5490
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5490
  %5 = load float, float* %arrayidx2, align 4, !dbg !5490
  %6 = load float*, float** %v.addr, align 8, !dbg !5491
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5491
  %7 = load float, float* %arrayidx3, align 4, !dbg !5491
  %mul4 = fmul float %5, %7, !dbg !5492
  %add = fadd float %mul, %mul4, !dbg !5493
  %call = call float @sqrtf(float %add) #5, !dbg !5494
  ret float %call, !dbg !5495
}

declare dso_local zeroext i8 @do_colorband(%struct.ColorBand*, float, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !5496 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5499, metadata !DIExpression()), !dbg !5500
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5501, metadata !DIExpression()), !dbg !5502
  %0 = load float, float* %f.addr, align 4, !dbg !5503
  %1 = load float*, float** %r.addr, align 8, !dbg !5504
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5504
  %2 = load float, float* %arrayidx, align 4, !dbg !5505
  %mul = fmul float %2, %0, !dbg !5505
  store float %mul, float* %arrayidx, align 4, !dbg !5505
  %3 = load float, float* %f.addr, align 4, !dbg !5506
  %4 = load float*, float** %r.addr, align 8, !dbg !5507
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !5507
  %5 = load float, float* %arrayidx1, align 4, !dbg !5508
  %mul2 = fmul float %5, %3, !dbg !5508
  store float %mul2, float* %arrayidx1, align 4, !dbg !5508
  %6 = load float, float* %f.addr, align 4, !dbg !5509
  %7 = load float*, float** %r.addr, align 8, !dbg !5510
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !5510
  %8 = load float, float* %arrayidx3, align 4, !dbg !5511
  %mul4 = fmul float %8, %6, !dbg !5511
  store float %mul4, float* %arrayidx3, align 4, !dbg !5511
  ret void, !dbg !5512
}

; Function Attrs: noinline nounwind uwtable
define internal void @linearrgb_to_srgb_v3_v3(float* %srgb, float* %linear) #0 !dbg !5513 {
entry:
  %srgb.addr = alloca float*, align 8
  %linear.addr = alloca float*, align 8
  store float* %srgb, float** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %srgb.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  %0 = load float*, float** %linear.addr, align 8, !dbg !5518
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5518
  %1 = load float, float* %arrayidx, align 4, !dbg !5518
  %call = call float @linearrgb_to_srgb(float %1), !dbg !5519
  %2 = load float*, float** %srgb.addr, align 8, !dbg !5520
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5520
  store float %call, float* %arrayidx1, align 4, !dbg !5521
  %3 = load float*, float** %linear.addr, align 8, !dbg !5522
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5522
  %4 = load float, float* %arrayidx2, align 4, !dbg !5522
  %call3 = call float @linearrgb_to_srgb(float %4), !dbg !5523
  %5 = load float*, float** %srgb.addr, align 8, !dbg !5524
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !5524
  store float %call3, float* %arrayidx4, align 4, !dbg !5525
  %6 = load float*, float** %linear.addr, align 8, !dbg !5526
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !5526
  %7 = load float, float* %arrayidx5, align 4, !dbg !5526
  %call6 = call float @linearrgb_to_srgb(float %7), !dbg !5527
  %8 = load float*, float** %srgb.addr, align 8, !dbg !5528
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !5528
  store float %call6, float* %arrayidx7, align 4, !dbg !5529
  ret void, !dbg !5530
}

declare dso_local void @rgba_float_to_uchar(i8*, float*) #2

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #2

declare dso_local %struct.ImagePool* @BKE_image_pool_new() #2

; Function Attrs: noinline nounwind uwtable
define internal void @brush_painter_2d_tex_mapping(%struct.ImagePaintState* %s, i32 %diameter, float* %startpos, float* %pos, float* %mouse, i32 %mapmode, %struct.rctf* %mapping) #0 !dbg !5531 {
entry:
  %s.addr = alloca %struct.ImagePaintState*, align 8
  %diameter.addr = alloca i32, align 4
  %startpos.addr = alloca float*, align 8
  %pos.addr = alloca float*, align 8
  %mouse.addr = alloca float*, align 8
  %mapmode.addr = alloca i32, align 4
  %mapping.addr = alloca %struct.rctf*, align 8
  %invw = alloca float, align 4
  %invh = alloca float, align 4
  %xmin = alloca i32, align 4
  %ymin = alloca i32, align 4
  %xmax = alloca i32, align 4
  %ymax = alloca i32, align 4
  %ipos = alloca [2 x i32], align 4
  store %struct.ImagePaintState* %s, %struct.ImagePaintState** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  store i32 %diameter, i32* %diameter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %diameter.addr, metadata !5537, metadata !DIExpression()), !dbg !5538
  store float* %startpos, float** %startpos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %startpos.addr, metadata !5539, metadata !DIExpression()), !dbg !5540
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !5541, metadata !DIExpression()), !dbg !5542
  store float* %mouse, float** %mouse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mouse.addr, metadata !5543, metadata !DIExpression()), !dbg !5544
  store i32 %mapmode, i32* %mapmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mapmode.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  store %struct.rctf* %mapping, %struct.rctf** %mapping.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %mapping.addr, metadata !5547, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.declare(metadata float* %invw, metadata !5549, metadata !DIExpression()), !dbg !5550
  %0 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !5551
  %canvas = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %0, i32 0, i32 10, !dbg !5552
  %1 = load %struct.ImBuf*, %struct.ImBuf** %canvas, align 8, !dbg !5552
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !5553
  %2 = load i32, i32* %x, align 8, !dbg !5553
  %conv = sitofp i32 %2 to float, !dbg !5554
  %div = fdiv float 1.000000e+00, %conv, !dbg !5555
  store float %div, float* %invw, align 4, !dbg !5550
  call void @llvm.dbg.declare(metadata float* %invh, metadata !5556, metadata !DIExpression()), !dbg !5557
  %3 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !5558
  %canvas1 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %3, i32 0, i32 10, !dbg !5559
  %4 = load %struct.ImBuf*, %struct.ImBuf** %canvas1, align 8, !dbg !5559
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 3, !dbg !5560
  %5 = load i32, i32* %y, align 4, !dbg !5560
  %conv2 = sitofp i32 %5 to float, !dbg !5561
  %div3 = fdiv float 1.000000e+00, %conv2, !dbg !5562
  store float %div3, float* %invh, align 4, !dbg !5557
  call void @llvm.dbg.declare(metadata i32* %xmin, metadata !5563, metadata !DIExpression()), !dbg !5564
  call void @llvm.dbg.declare(metadata i32* %ymin, metadata !5565, metadata !DIExpression()), !dbg !5566
  call void @llvm.dbg.declare(metadata i32* %xmax, metadata !5567, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.declare(metadata i32* %ymax, metadata !5569, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.declare(metadata [2 x i32]* %ipos, metadata !5571, metadata !DIExpression()), !dbg !5572
  %6 = load float*, float** %pos.addr, align 8, !dbg !5573
  %arrayidx = getelementptr inbounds float, float* %6, i64 0, !dbg !5573
  %7 = load float, float* %arrayidx, align 4, !dbg !5573
  %8 = load i32, i32* %diameter.addr, align 4, !dbg !5574
  %div4 = sdiv i32 %8, 2, !dbg !5575
  %conv5 = sitofp i32 %div4 to float, !dbg !5574
  %sub = fsub float %7, %conv5, !dbg !5576
  %add = fadd float %sub, 1.000000e+00, !dbg !5577
  %9 = call float @llvm.floor.f32(float %add), !dbg !5578
  %conv6 = fptosi float %9 to i32, !dbg !5579
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %ipos, i64 0, i64 0, !dbg !5580
  store i32 %conv6, i32* %arrayidx7, align 4, !dbg !5581
  %10 = load float*, float** %pos.addr, align 8, !dbg !5582
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 1, !dbg !5582
  %11 = load float, float* %arrayidx8, align 4, !dbg !5582
  %12 = load i32, i32* %diameter.addr, align 4, !dbg !5583
  %div9 = sdiv i32 %12, 2, !dbg !5584
  %conv10 = sitofp i32 %div9 to float, !dbg !5583
  %sub11 = fsub float %11, %conv10, !dbg !5585
  %add12 = fadd float %sub11, 1.000000e+00, !dbg !5586
  %13 = call float @llvm.floor.f32(float %add12), !dbg !5587
  %conv13 = fptosi float %13 to i32, !dbg !5588
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %ipos, i64 0, i64 1, !dbg !5589
  store i32 %conv13, i32* %arrayidx14, align 4, !dbg !5590
  %14 = load i32, i32* %mapmode.addr, align 4, !dbg !5591
  %cmp = icmp eq i32 %14, 5, !dbg !5593
  br i1 %cmp, label %if.then, label %if.else, !dbg !5594

if.then:                                          ; preds = %entry
  %15 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !5595
  %v2d = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %15, i32 0, i32 2, !dbg !5597
  %16 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !5597
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %ipos, i64 0, i64 0, !dbg !5598
  %17 = load i32, i32* %arrayidx16, align 4, !dbg !5598
  %conv17 = sitofp i32 %17 to float, !dbg !5598
  %18 = load float, float* %invw, align 4, !dbg !5599
  %mul = fmul float %conv17, %18, !dbg !5600
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %ipos, i64 0, i64 1, !dbg !5601
  %19 = load i32, i32* %arrayidx18, align 4, !dbg !5601
  %conv19 = sitofp i32 %19 to float, !dbg !5601
  %20 = load float, float* %invh, align 4, !dbg !5602
  %mul20 = fmul float %conv19, %20, !dbg !5603
  call void @UI_view2d_view_to_region(%struct.View2D* %16, float %mul, float %mul20, i32* %xmin, i32* %ymin), !dbg !5604
  %21 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !5605
  %v2d21 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %21, i32 0, i32 2, !dbg !5606
  %22 = load %struct.View2D*, %struct.View2D** %v2d21, align 8, !dbg !5606
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %ipos, i64 0, i64 0, !dbg !5607
  %23 = load i32, i32* %arrayidx22, align 4, !dbg !5607
  %24 = load i32, i32* %diameter.addr, align 4, !dbg !5608
  %add23 = add nsw i32 %23, %24, !dbg !5609
  %conv24 = sitofp i32 %add23 to float, !dbg !5610
  %25 = load float, float* %invw, align 4, !dbg !5611
  %mul25 = fmul float %conv24, %25, !dbg !5612
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %ipos, i64 0, i64 1, !dbg !5613
  %26 = load i32, i32* %arrayidx26, align 4, !dbg !5613
  %27 = load i32, i32* %diameter.addr, align 4, !dbg !5614
  %add27 = add nsw i32 %26, %27, !dbg !5615
  %conv28 = sitofp i32 %add27 to float, !dbg !5616
  %28 = load float, float* %invh, align 4, !dbg !5617
  %mul29 = fmul float %conv28, %28, !dbg !5618
  call void @UI_view2d_view_to_region(%struct.View2D* %22, float %mul25, float %mul29, i32* %xmax, i32* %ymax), !dbg !5619
  %29 = load i32, i32* %xmin, align 4, !dbg !5620
  %conv30 = sitofp i32 %29 to float, !dbg !5620
  %30 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5621
  %xmin31 = getelementptr inbounds %struct.rctf, %struct.rctf* %30, i32 0, i32 0, !dbg !5622
  store float %conv30, float* %xmin31, align 4, !dbg !5623
  %31 = load i32, i32* %ymin, align 4, !dbg !5624
  %conv32 = sitofp i32 %31 to float, !dbg !5624
  %32 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5625
  %ymin33 = getelementptr inbounds %struct.rctf, %struct.rctf* %32, i32 0, i32 2, !dbg !5626
  store float %conv32, float* %ymin33, align 4, !dbg !5627
  %33 = load i32, i32* %xmax, align 4, !dbg !5628
  %34 = load i32, i32* %xmin, align 4, !dbg !5629
  %sub34 = sub nsw i32 %33, %34, !dbg !5630
  %conv35 = sitofp i32 %sub34 to float, !dbg !5631
  %35 = load i32, i32* %diameter.addr, align 4, !dbg !5632
  %conv36 = sitofp i32 %35 to float, !dbg !5633
  %div37 = fdiv float %conv35, %conv36, !dbg !5634
  %36 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5635
  %xmax38 = getelementptr inbounds %struct.rctf, %struct.rctf* %36, i32 0, i32 1, !dbg !5636
  store float %div37, float* %xmax38, align 4, !dbg !5637
  %37 = load i32, i32* %ymax, align 4, !dbg !5638
  %38 = load i32, i32* %ymin, align 4, !dbg !5639
  %sub39 = sub nsw i32 %37, %38, !dbg !5640
  %conv40 = sitofp i32 %sub39 to float, !dbg !5641
  %39 = load i32, i32* %diameter.addr, align 4, !dbg !5642
  %conv41 = sitofp i32 %39 to float, !dbg !5643
  %div42 = fdiv float %conv40, %conv41, !dbg !5644
  %40 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5645
  %ymax43 = getelementptr inbounds %struct.rctf, %struct.rctf* %40, i32 0, i32 3, !dbg !5646
  store float %div42, float* %ymax43, align 4, !dbg !5647
  br label %if.end111, !dbg !5648

if.else:                                          ; preds = %entry
  %41 = load i32, i32* %mapmode.addr, align 4, !dbg !5649
  %cmp44 = icmp eq i32 %41, 2, !dbg !5651
  br i1 %cmp44, label %if.then46, label %if.else63, !dbg !5652

if.then46:                                        ; preds = %if.else
  %arrayidx47 = getelementptr inbounds [2 x i32], [2 x i32]* %ipos, i64 0, i64 0, !dbg !5653
  %42 = load i32, i32* %arrayidx47, align 4, !dbg !5653
  %conv48 = sitofp i32 %42 to float, !dbg !5653
  %43 = load float, float* %invw, align 4, !dbg !5655
  %mul49 = fmul float %conv48, %43, !dbg !5656
  %sub50 = fsub float %mul49, 5.000000e-01, !dbg !5657
  %mul51 = fmul float 2.000000e+00, %sub50, !dbg !5658
  %44 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5659
  %xmin52 = getelementptr inbounds %struct.rctf, %struct.rctf* %44, i32 0, i32 0, !dbg !5660
  store float %mul51, float* %xmin52, align 4, !dbg !5661
  %arrayidx53 = getelementptr inbounds [2 x i32], [2 x i32]* %ipos, i64 0, i64 1, !dbg !5662
  %45 = load i32, i32* %arrayidx53, align 4, !dbg !5662
  %conv54 = sitofp i32 %45 to float, !dbg !5662
  %46 = load float, float* %invh, align 4, !dbg !5663
  %mul55 = fmul float %conv54, %46, !dbg !5664
  %sub56 = fsub float %mul55, 5.000000e-01, !dbg !5665
  %mul57 = fmul float 2.000000e+00, %sub56, !dbg !5666
  %47 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5667
  %ymin58 = getelementptr inbounds %struct.rctf, %struct.rctf* %47, i32 0, i32 2, !dbg !5668
  store float %mul57, float* %ymin58, align 4, !dbg !5669
  %48 = load float, float* %invw, align 4, !dbg !5670
  %mul59 = fmul float 2.000000e+00, %48, !dbg !5671
  %49 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5672
  %xmax60 = getelementptr inbounds %struct.rctf, %struct.rctf* %49, i32 0, i32 1, !dbg !5673
  store float %mul59, float* %xmax60, align 4, !dbg !5674
  %50 = load float, float* %invh, align 4, !dbg !5675
  %mul61 = fmul float 2.000000e+00, %50, !dbg !5676
  %51 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5677
  %ymax62 = getelementptr inbounds %struct.rctf, %struct.rctf* %51, i32 0, i32 3, !dbg !5678
  store float %mul61, float* %ymax62, align 4, !dbg !5679
  br label %if.end110, !dbg !5680

if.else63:                                        ; preds = %if.else
  %52 = load i32, i32* %mapmode.addr, align 4, !dbg !5681
  %cmp64 = icmp eq i32 %52, 0, !dbg !5681
  br i1 %cmp64, label %if.then68, label %lor.lhs.false, !dbg !5681

lor.lhs.false:                                    ; preds = %if.else63
  %53 = load i32, i32* %mapmode.addr, align 4, !dbg !5681
  %cmp66 = icmp eq i32 %53, 4, !dbg !5681
  br i1 %cmp66, label %if.then68, label %if.else83, !dbg !5683

if.then68:                                        ; preds = %lor.lhs.false, %if.else63
  %54 = load float*, float** %mouse.addr, align 8, !dbg !5684
  %arrayidx69 = getelementptr inbounds float, float* %54, i64 0, !dbg !5684
  %55 = load float, float* %arrayidx69, align 4, !dbg !5684
  %56 = load i32, i32* %diameter.addr, align 4, !dbg !5686
  %conv70 = sitofp i32 %56 to float, !dbg !5686
  %mul71 = fmul float %conv70, 5.000000e-01, !dbg !5687
  %sub72 = fsub float %55, %mul71, !dbg !5688
  %add73 = fadd float %sub72, 5.000000e-01, !dbg !5689
  %57 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5690
  %xmin74 = getelementptr inbounds %struct.rctf, %struct.rctf* %57, i32 0, i32 0, !dbg !5691
  store float %add73, float* %xmin74, align 4, !dbg !5692
  %58 = load float*, float** %mouse.addr, align 8, !dbg !5693
  %arrayidx75 = getelementptr inbounds float, float* %58, i64 1, !dbg !5693
  %59 = load float, float* %arrayidx75, align 4, !dbg !5693
  %60 = load i32, i32* %diameter.addr, align 4, !dbg !5694
  %conv76 = sitofp i32 %60 to float, !dbg !5694
  %mul77 = fmul float %conv76, 5.000000e-01, !dbg !5695
  %sub78 = fsub float %59, %mul77, !dbg !5696
  %add79 = fadd float %sub78, 5.000000e-01, !dbg !5697
  %61 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5698
  %ymin80 = getelementptr inbounds %struct.rctf, %struct.rctf* %61, i32 0, i32 2, !dbg !5699
  store float %add79, float* %ymin80, align 4, !dbg !5700
  %62 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5701
  %xmax81 = getelementptr inbounds %struct.rctf, %struct.rctf* %62, i32 0, i32 1, !dbg !5702
  store float 1.000000e+00, float* %xmax81, align 4, !dbg !5703
  %63 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5704
  %ymax82 = getelementptr inbounds %struct.rctf, %struct.rctf* %63, i32 0, i32 3, !dbg !5705
  store float 1.000000e+00, float* %ymax82, align 4, !dbg !5706
  br label %if.end, !dbg !5707

if.else83:                                        ; preds = %lor.lhs.false
  %64 = load i32, i32* %diameter.addr, align 4, !dbg !5708
  %sub84 = sub nsw i32 0, %64, !dbg !5710
  %conv85 = sitofp i32 %sub84 to double, !dbg !5710
  %mul86 = fmul double %conv85, 5.000000e-01, !dbg !5711
  %conv87 = fptosi double %mul86 to i32, !dbg !5712
  %65 = load float*, float** %pos.addr, align 8, !dbg !5713
  %arrayidx88 = getelementptr inbounds float, float* %65, i64 0, !dbg !5713
  %66 = load float, float* %arrayidx88, align 4, !dbg !5713
  %conv89 = fptosi float %66 to i32, !dbg !5714
  %add90 = add nsw i32 %conv87, %conv89, !dbg !5715
  %67 = load float*, float** %startpos.addr, align 8, !dbg !5716
  %arrayidx91 = getelementptr inbounds float, float* %67, i64 0, !dbg !5716
  %68 = load float, float* %arrayidx91, align 4, !dbg !5716
  %conv92 = fptosi float %68 to i32, !dbg !5717
  %sub93 = sub nsw i32 %add90, %conv92, !dbg !5718
  %conv94 = sitofp i32 %sub93 to float, !dbg !5712
  %69 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5719
  %xmin95 = getelementptr inbounds %struct.rctf, %struct.rctf* %69, i32 0, i32 0, !dbg !5720
  store float %conv94, float* %xmin95, align 4, !dbg !5721
  %70 = load i32, i32* %diameter.addr, align 4, !dbg !5722
  %sub96 = sub nsw i32 0, %70, !dbg !5723
  %conv97 = sitofp i32 %sub96 to double, !dbg !5723
  %mul98 = fmul double %conv97, 5.000000e-01, !dbg !5724
  %conv99 = fptosi double %mul98 to i32, !dbg !5725
  %71 = load float*, float** %pos.addr, align 8, !dbg !5726
  %arrayidx100 = getelementptr inbounds float, float* %71, i64 1, !dbg !5726
  %72 = load float, float* %arrayidx100, align 4, !dbg !5726
  %conv101 = fptosi float %72 to i32, !dbg !5727
  %add102 = add nsw i32 %conv99, %conv101, !dbg !5728
  %73 = load float*, float** %startpos.addr, align 8, !dbg !5729
  %arrayidx103 = getelementptr inbounds float, float* %73, i64 1, !dbg !5729
  %74 = load float, float* %arrayidx103, align 4, !dbg !5729
  %conv104 = fptosi float %74 to i32, !dbg !5730
  %sub105 = sub nsw i32 %add102, %conv104, !dbg !5731
  %conv106 = sitofp i32 %sub105 to float, !dbg !5725
  %75 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5732
  %ymin107 = getelementptr inbounds %struct.rctf, %struct.rctf* %75, i32 0, i32 2, !dbg !5733
  store float %conv106, float* %ymin107, align 4, !dbg !5734
  %76 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5735
  %xmax108 = getelementptr inbounds %struct.rctf, %struct.rctf* %76, i32 0, i32 1, !dbg !5736
  store float 1.000000e+00, float* %xmax108, align 4, !dbg !5737
  %77 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !5738
  %ymax109 = getelementptr inbounds %struct.rctf, %struct.rctf* %77, i32 0, i32 3, !dbg !5739
  store float 1.000000e+00, float* %ymax109, align 4, !dbg !5740
  br label %if.end

if.end:                                           ; preds = %if.else83, %if.then68
  br label %if.end110

if.end110:                                        ; preds = %if.end, %if.then46
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.then
  ret void, !dbg !5741
}

; Function Attrs: noinline nounwind uwtable
define internal void @brush_painter_mask_imbuf_partial_update(%struct.BrushPainter* %painter, float* %pos, i32 %diameter) #0 !dbg !5742 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %pos.addr = alloca float*, align 8
  %diameter.addr = alloca i32, align 4
  %cache = alloca %struct.BrushPainterCache*, align 8
  %tex_mask_old = alloca i16*, align 8
  %destx = alloca i32, align 4
  %desty = alloca i32, align 4
  %srcx = alloca i32, align 4
  %srcy = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %x1 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %maskibuf = alloca %struct.ImBuf, align 8
  %maskibuf_old = alloca %struct.ImBuf, align 8
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !5745, metadata !DIExpression()), !dbg !5746
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !5747, metadata !DIExpression()), !dbg !5748
  store i32 %diameter, i32* %diameter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %diameter.addr, metadata !5749, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.declare(metadata %struct.BrushPainterCache** %cache, metadata !5751, metadata !DIExpression()), !dbg !5752
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5753
  %cache1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 8, !dbg !5754
  store %struct.BrushPainterCache* %cache1, %struct.BrushPainterCache** %cache, align 8, !dbg !5752
  call void @llvm.dbg.declare(metadata i16** %tex_mask_old, metadata !5755, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.declare(metadata i32* %destx, metadata !5757, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.declare(metadata i32* %desty, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.declare(metadata i32* %srcx, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata i32* %srcy, metadata !5763, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5765, metadata !DIExpression()), !dbg !5766
  call void @llvm.dbg.declare(metadata i32* %h, metadata !5767, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !5769, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !5771, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !5773, metadata !DIExpression()), !dbg !5774
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !5775, metadata !DIExpression()), !dbg !5776
  %1 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5777
  %tex_mask = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %1, i32 0, i32 12, !dbg !5779
  %2 = load i16*, i16** %tex_mask, align 8, !dbg !5779
  %tobool = icmp ne i16* %2, null, !dbg !5777
  br i1 %tobool, label %if.end, label %if.then, !dbg !5780

if.then:                                          ; preds = %entry
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5781
  %4 = load i32, i32* %diameter.addr, align 4, !dbg !5782
  %conv = sext i32 %4 to i64, !dbg !5782
  %mul = mul i64 2, %conv, !dbg !5783
  %5 = load i32, i32* %diameter.addr, align 4, !dbg !5784
  %conv2 = sext i32 %5 to i64, !dbg !5784
  %mul3 = mul i64 %mul, %conv2, !dbg !5785
  %call = call i8* %3(i64 %mul3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)), !dbg !5781
  %6 = bitcast i8* %call to i16*, !dbg !5781
  %7 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5786
  %tex_mask4 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %7, i32 0, i32 12, !dbg !5787
  store i16* %6, i16** %tex_mask4, align 8, !dbg !5788
  br label %if.end, !dbg !5786

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5789
  %tex_mask_old5 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %8, i32 0, i32 13, !dbg !5790
  %9 = load i16*, i16** %tex_mask_old5, align 8, !dbg !5790
  store i16* %9, i16** %tex_mask_old, align 8, !dbg !5791
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5792
  %11 = load i32, i32* %diameter.addr, align 4, !dbg !5793
  %conv6 = sext i32 %11 to i64, !dbg !5793
  %mul7 = mul i64 2, %conv6, !dbg !5794
  %12 = load i32, i32* %diameter.addr, align 4, !dbg !5795
  %conv8 = sext i32 %12 to i64, !dbg !5795
  %mul9 = mul i64 %mul7, %conv8, !dbg !5796
  %call10 = call i8* %10(i64 %mul9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)), !dbg !5792
  %13 = bitcast i8* %call10 to i16*, !dbg !5792
  %14 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5797
  %tex_mask_old11 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %14, i32 0, i32 13, !dbg !5798
  store i16* %13, i16** %tex_mask_old11, align 8, !dbg !5799
  %15 = load i16*, i16** %tex_mask_old, align 8, !dbg !5800
  %tobool12 = icmp ne i16* %15, null, !dbg !5800
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !5802

if.then13:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ImBuf* %maskibuf, metadata !5803, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.declare(metadata %struct.ImBuf* %maskibuf_old, metadata !5806, metadata !DIExpression()), !dbg !5807
  %16 = load i32, i32* %diameter.addr, align 4, !dbg !5808
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %maskibuf, i32 0, i32 3, !dbg !5809
  store i32 %16, i32* %y, align 4, !dbg !5810
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %maskibuf, i32 0, i32 2, !dbg !5811
  store i32 %16, i32* %x, align 8, !dbg !5812
  %17 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5813
  %tex_mask_old_w = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %17, i32 0, i32 14, !dbg !5814
  %18 = load i32, i32* %tex_mask_old_w, align 8, !dbg !5814
  %x14 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %maskibuf_old, i32 0, i32 2, !dbg !5815
  store i32 %18, i32* %x14, align 8, !dbg !5816
  %19 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5817
  %tex_mask_old_h = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %19, i32 0, i32 15, !dbg !5818
  %20 = load i32, i32* %tex_mask_old_h, align 4, !dbg !5818
  %y15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %maskibuf_old, i32 0, i32 3, !dbg !5819
  store i32 %20, i32* %y15, align 4, !dbg !5820
  store i32 0, i32* %srcy, align 4, !dbg !5821
  store i32 0, i32* %srcx, align 4, !dbg !5822
  %21 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5823
  %tex_mask_old_w16 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %21, i32 0, i32 14, !dbg !5824
  %22 = load i32, i32* %tex_mask_old_w16, align 8, !dbg !5824
  store i32 %22, i32* %w, align 4, !dbg !5825
  %23 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5826
  %tex_mask_old_h17 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %23, i32 0, i32 15, !dbg !5827
  %24 = load i32, i32* %tex_mask_old_h17, align 4, !dbg !5827
  store i32 %24, i32* %h, align 4, !dbg !5828
  %25 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5829
  %lastpaintpos = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %25, i32 0, i32 2, !dbg !5830
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %lastpaintpos, i64 0, i64 0, !dbg !5829
  %26 = load float, float* %arrayidx, align 8, !dbg !5829
  %conv18 = fptosi float %26 to i32, !dbg !5831
  %27 = load float*, float** %pos.addr, align 8, !dbg !5832
  %arrayidx19 = getelementptr inbounds float, float* %27, i64 0, !dbg !5832
  %28 = load float, float* %arrayidx19, align 4, !dbg !5832
  %conv20 = fptosi float %28 to i32, !dbg !5833
  %sub = sub nsw i32 %conv18, %conv20, !dbg !5834
  %29 = load i32, i32* %diameter.addr, align 4, !dbg !5835
  %div = sdiv i32 %29, 2, !dbg !5836
  %30 = load i32, i32* %w, align 4, !dbg !5837
  %div21 = sdiv i32 %30, 2, !dbg !5838
  %sub22 = sub nsw i32 %div, %div21, !dbg !5839
  %add = add nsw i32 %sub, %sub22, !dbg !5840
  store i32 %add, i32* %destx, align 4, !dbg !5841
  %31 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5842
  %lastpaintpos23 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %31, i32 0, i32 2, !dbg !5843
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %lastpaintpos23, i64 0, i64 1, !dbg !5842
  %32 = load float, float* %arrayidx24, align 4, !dbg !5842
  %conv25 = fptosi float %32 to i32, !dbg !5844
  %33 = load float*, float** %pos.addr, align 8, !dbg !5845
  %arrayidx26 = getelementptr inbounds float, float* %33, i64 1, !dbg !5845
  %34 = load float, float* %arrayidx26, align 4, !dbg !5845
  %conv27 = fptosi float %34 to i32, !dbg !5846
  %sub28 = sub nsw i32 %conv25, %conv27, !dbg !5847
  %35 = load i32, i32* %diameter.addr, align 4, !dbg !5848
  %div29 = sdiv i32 %35, 2, !dbg !5849
  %36 = load i32, i32* %h, align 4, !dbg !5850
  %div30 = sdiv i32 %36, 2, !dbg !5851
  %sub31 = sub nsw i32 %div29, %div30, !dbg !5852
  %add32 = add nsw i32 %sub28, %sub31, !dbg !5853
  store i32 %add32, i32* %desty, align 4, !dbg !5854
  call void @IMB_rectclip(%struct.ImBuf* %maskibuf, %struct.ImBuf* %maskibuf_old, i32* %destx, i32* %desty, i32* %srcx, i32* %srcy, i32* %w, i32* %h), !dbg !5855
  br label %if.end33, !dbg !5856

if.else:                                          ; preds = %if.end
  store i32 0, i32* %srcy, align 4, !dbg !5857
  store i32 0, i32* %srcx, align 4, !dbg !5859
  store i32 0, i32* %desty, align 4, !dbg !5860
  store i32 0, i32* %destx, align 4, !dbg !5861
  store i32 0, i32* %h, align 4, !dbg !5862
  store i32 0, i32* %w, align 4, !dbg !5863
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then13
  %37 = load i32, i32* %destx, align 4, !dbg !5864
  %38 = load i32, i32* %diameter.addr, align 4, !dbg !5865
  %call34 = call i32 @min_ii(i32 %37, i32 %38), !dbg !5866
  store i32 %call34, i32* %x1, align 4, !dbg !5867
  %39 = load i32, i32* %desty, align 4, !dbg !5868
  %40 = load i32, i32* %diameter.addr, align 4, !dbg !5869
  %call35 = call i32 @min_ii(i32 %39, i32 %40), !dbg !5870
  store i32 %call35, i32* %y1, align 4, !dbg !5871
  %41 = load i32, i32* %destx, align 4, !dbg !5872
  %42 = load i32, i32* %w, align 4, !dbg !5873
  %add36 = add nsw i32 %41, %42, !dbg !5874
  %43 = load i32, i32* %diameter.addr, align 4, !dbg !5875
  %call37 = call i32 @min_ii(i32 %add36, i32 %43), !dbg !5876
  store i32 %call37, i32* %x2, align 4, !dbg !5877
  %44 = load i32, i32* %desty, align 4, !dbg !5878
  %45 = load i32, i32* %h, align 4, !dbg !5879
  %add38 = add nsw i32 %44, %45, !dbg !5880
  %46 = load i32, i32* %diameter.addr, align 4, !dbg !5881
  %call39 = call i32 @min_ii(i32 %add38, i32 %46), !dbg !5882
  store i32 %call39, i32* %y2, align 4, !dbg !5883
  %47 = load i32, i32* %x1, align 4, !dbg !5884
  %48 = load i32, i32* %x2, align 4, !dbg !5886
  %cmp = icmp slt i32 %47, %48, !dbg !5887
  br i1 %cmp, label %land.lhs.true, label %if.end44, !dbg !5888

land.lhs.true:                                    ; preds = %if.end33
  %49 = load i32, i32* %y1, align 4, !dbg !5889
  %50 = load i32, i32* %y2, align 4, !dbg !5890
  %cmp41 = icmp slt i32 %49, %50, !dbg !5891
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !5892

if.then43:                                        ; preds = %land.lhs.true
  %51 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5893
  %52 = load i16*, i16** %tex_mask_old, align 8, !dbg !5894
  %53 = load i32, i32* %x1, align 4, !dbg !5895
  %54 = load i32, i32* %y1, align 4, !dbg !5896
  %55 = load i32, i32* %x2, align 4, !dbg !5897
  %56 = load i32, i32* %y2, align 4, !dbg !5898
  %57 = load i32, i32* %srcx, align 4, !dbg !5899
  %58 = load i32, i32* %srcy, align 4, !dbg !5900
  %59 = load i32, i32* %diameter.addr, align 4, !dbg !5901
  call void @brush_painter_mask_imbuf_update(%struct.BrushPainter* %51, i16* %52, i32 %53, i32 %54, i32 %55, i32 %56, i32 %57, i32 %58, i32 %59), !dbg !5902
  br label %if.end44, !dbg !5902

if.end44:                                         ; preds = %if.then43, %land.lhs.true, %if.end33
  %60 = load i16*, i16** %tex_mask_old, align 8, !dbg !5903
  %tobool45 = icmp ne i16* %60, null, !dbg !5903
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !5905

if.then46:                                        ; preds = %if.end44
  %61 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5906
  %62 = load i16*, i16** %tex_mask_old, align 8, !dbg !5907
  %63 = bitcast i16* %62 to i8*, !dbg !5907
  call void %61(i8* %63), !dbg !5906
  br label %if.end47, !dbg !5906

if.end47:                                         ; preds = %if.then46, %if.end44
  %64 = load i32, i32* %x1, align 4, !dbg !5908
  %cmp48 = icmp slt i32 0, %64, !dbg !5910
  br i1 %cmp48, label %land.lhs.true50, label %if.end54, !dbg !5911

land.lhs.true50:                                  ; preds = %if.end47
  %65 = load i32, i32* %diameter.addr, align 4, !dbg !5912
  %cmp51 = icmp slt i32 0, %65, !dbg !5913
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !5914

if.then53:                                        ; preds = %land.lhs.true50
  %66 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5915
  %67 = load i32, i32* %x1, align 4, !dbg !5916
  %68 = load i32, i32* %diameter.addr, align 4, !dbg !5917
  %69 = load i32, i32* %diameter.addr, align 4, !dbg !5918
  call void @brush_painter_mask_imbuf_update(%struct.BrushPainter* %66, i16* null, i32 0, i32 0, i32 %67, i32 %68, i32 0, i32 0, i32 %69), !dbg !5919
  br label %if.end54, !dbg !5919

if.end54:                                         ; preds = %if.then53, %land.lhs.true50, %if.end47
  %70 = load i32, i32* %x2, align 4, !dbg !5920
  %71 = load i32, i32* %diameter.addr, align 4, !dbg !5922
  %cmp55 = icmp slt i32 %70, %71, !dbg !5923
  br i1 %cmp55, label %land.lhs.true57, label %if.end61, !dbg !5924

land.lhs.true57:                                  ; preds = %if.end54
  %72 = load i32, i32* %diameter.addr, align 4, !dbg !5925
  %cmp58 = icmp slt i32 0, %72, !dbg !5926
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !5927

if.then60:                                        ; preds = %land.lhs.true57
  %73 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5928
  %74 = load i32, i32* %x2, align 4, !dbg !5929
  %75 = load i32, i32* %diameter.addr, align 4, !dbg !5930
  %76 = load i32, i32* %diameter.addr, align 4, !dbg !5931
  %77 = load i32, i32* %diameter.addr, align 4, !dbg !5932
  call void @brush_painter_mask_imbuf_update(%struct.BrushPainter* %73, i16* null, i32 %74, i32 0, i32 %75, i32 %76, i32 0, i32 0, i32 %77), !dbg !5933
  br label %if.end61, !dbg !5933

if.end61:                                         ; preds = %if.then60, %land.lhs.true57, %if.end54
  %78 = load i32, i32* %x1, align 4, !dbg !5934
  %79 = load i32, i32* %x2, align 4, !dbg !5936
  %cmp62 = icmp slt i32 %78, %79, !dbg !5937
  br i1 %cmp62, label %land.lhs.true64, label %if.end68, !dbg !5938

land.lhs.true64:                                  ; preds = %if.end61
  %80 = load i32, i32* %y1, align 4, !dbg !5939
  %cmp65 = icmp slt i32 0, %80, !dbg !5940
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !5941

if.then67:                                        ; preds = %land.lhs.true64
  %81 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5942
  %82 = load i32, i32* %x1, align 4, !dbg !5943
  %83 = load i32, i32* %x2, align 4, !dbg !5944
  %84 = load i32, i32* %y1, align 4, !dbg !5945
  %85 = load i32, i32* %diameter.addr, align 4, !dbg !5946
  call void @brush_painter_mask_imbuf_update(%struct.BrushPainter* %81, i16* null, i32 %82, i32 0, i32 %83, i32 %84, i32 0, i32 0, i32 %85), !dbg !5947
  br label %if.end68, !dbg !5947

if.end68:                                         ; preds = %if.then67, %land.lhs.true64, %if.end61
  %86 = load i32, i32* %x1, align 4, !dbg !5948
  %87 = load i32, i32* %x2, align 4, !dbg !5950
  %cmp69 = icmp slt i32 %86, %87, !dbg !5951
  br i1 %cmp69, label %land.lhs.true71, label %if.end75, !dbg !5952

land.lhs.true71:                                  ; preds = %if.end68
  %88 = load i32, i32* %y2, align 4, !dbg !5953
  %89 = load i32, i32* %diameter.addr, align 4, !dbg !5954
  %cmp72 = icmp slt i32 %88, %89, !dbg !5955
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !5956

if.then74:                                        ; preds = %land.lhs.true71
  %90 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5957
  %91 = load i32, i32* %x1, align 4, !dbg !5958
  %92 = load i32, i32* %y2, align 4, !dbg !5959
  %93 = load i32, i32* %x2, align 4, !dbg !5960
  %94 = load i32, i32* %diameter.addr, align 4, !dbg !5961
  %95 = load i32, i32* %diameter.addr, align 4, !dbg !5962
  call void @brush_painter_mask_imbuf_update(%struct.BrushPainter* %90, i16* null, i32 %91, i32 %92, i32 %93, i32 %94, i32 0, i32 0, i32 %95), !dbg !5963
  br label %if.end75, !dbg !5963

if.end75:                                         ; preds = %if.then74, %land.lhs.true71, %if.end68
  %96 = load i32, i32* %diameter.addr, align 4, !dbg !5964
  %97 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5965
  %tex_mask_old_w76 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %97, i32 0, i32 14, !dbg !5966
  store i32 %96, i32* %tex_mask_old_w76, align 8, !dbg !5967
  %98 = load i32, i32* %diameter.addr, align 4, !dbg !5968
  %99 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !5969
  %tex_mask_old_h77 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %99, i32 0, i32 15, !dbg !5970
  store i32 %98, i32* %tex_mask_old_h77, align 4, !dbg !5971
  ret void, !dbg !5972
}

; Function Attrs: noinline nounwind uwtable
define internal i16* @brush_painter_mask_ibuf_new(%struct.BrushPainter* %painter, i32 %size) #0 !dbg !5973 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %size.addr = alloca i32, align 4
  %scene = alloca %struct.Scene*, align 8
  %brush = alloca %struct.Brush*, align 8
  %mask_mapping = alloca %struct.rctf, align 4
  %pool = alloca %struct.ImagePool*, align 8
  %texco = alloca [3 x float], align 4
  %mask = alloca i16*, align 8
  %m = alloca i16*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %thread = alloca i32, align 4
  %res = alloca float, align 4
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5978, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5980, metadata !DIExpression()), !dbg !5981
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5982
  %scene1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 0, !dbg !5983
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !5983
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !5981
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !5984, metadata !DIExpression()), !dbg !5985
  %2 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5986
  %brush2 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %2, i32 0, i32 1, !dbg !5987
  %3 = load %struct.Brush*, %struct.Brush** %brush2, align 8, !dbg !5987
  store %struct.Brush* %3, %struct.Brush** %brush, align 8, !dbg !5985
  call void @llvm.dbg.declare(metadata %struct.rctf* %mask_mapping, metadata !5988, metadata !DIExpression()), !dbg !5989
  %4 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5990
  %mask_mapping3 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %4, i32 0, i32 7, !dbg !5991
  %5 = bitcast %struct.rctf* %mask_mapping to i8*, !dbg !5991
  %6 = bitcast %struct.rctf* %mask_mapping3 to i8*, !dbg !5991
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 16, i1 false), !dbg !5991
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool, metadata !5992, metadata !DIExpression()), !dbg !5993
  %7 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !5994
  %pool4 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %7, i32 0, i32 5, !dbg !5995
  %8 = load %struct.ImagePool*, %struct.ImagePool** %pool4, align 8, !dbg !5995
  store %struct.ImagePool* %8, %struct.ImagePool** %pool, align 8, !dbg !5993
  call void @llvm.dbg.declare(metadata [3 x float]* %texco, metadata !5996, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.declare(metadata i16** %mask, metadata !5998, metadata !DIExpression()), !dbg !5999
  call void @llvm.dbg.declare(metadata i16** %m, metadata !6000, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata i32* %thread, metadata !6006, metadata !DIExpression()), !dbg !6007
  store i32 0, i32* %thread, align 4, !dbg !6007
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6008
  %10 = load i32, i32* %size.addr, align 4, !dbg !6009
  %conv = sext i32 %10 to i64, !dbg !6009
  %mul = mul i64 2, %conv, !dbg !6010
  %11 = load i32, i32* %size.addr, align 4, !dbg !6011
  %conv5 = sext i32 %11 to i64, !dbg !6011
  %mul6 = mul i64 %mul, %conv5, !dbg !6012
  %call = call i8* %9(i64 %mul6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)), !dbg !6008
  %12 = bitcast i8* %call to i16*, !dbg !6008
  store i16* %12, i16** %mask, align 8, !dbg !6013
  %13 = load i16*, i16** %mask, align 8, !dbg !6014
  store i16* %13, i16** %m, align 8, !dbg !6015
  store i32 0, i32* %y, align 4, !dbg !6016
  br label %for.cond, !dbg !6018

for.cond:                                         ; preds = %for.inc16, %entry
  %14 = load i32, i32* %y, align 4, !dbg !6019
  %15 = load i32, i32* %size.addr, align 4, !dbg !6021
  %cmp = icmp slt i32 %14, %15, !dbg !6022
  br i1 %cmp, label %for.body, label %for.end18, !dbg !6023

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !6024
  br label %for.cond8, !dbg !6027

for.cond8:                                        ; preds = %for.inc, %for.body
  %16 = load i32, i32* %x, align 4, !dbg !6028
  %17 = load i32, i32* %size.addr, align 4, !dbg !6030
  %cmp9 = icmp slt i32 %16, %17, !dbg !6031
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !6032

for.body11:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata float* %res, metadata !6033, metadata !DIExpression()), !dbg !6035
  %18 = load i32, i32* %x, align 4, !dbg !6036
  %19 = load i32, i32* %y, align 4, !dbg !6037
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %texco, i64 0, i64 0, !dbg !6038
  call void @brush_imbuf_tex_co(%struct.rctf* %mask_mapping, i32 %18, i32 %19, float* %arraydecay), !dbg !6039
  %20 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6040
  %21 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6041
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %texco, i64 0, i64 0, !dbg !6042
  %22 = load i32, i32* %thread, align 4, !dbg !6043
  %23 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !6044
  %call13 = call float @BKE_brush_sample_masktex(%struct.Scene* %20, %struct.Brush* %21, float* %arraydecay12, i32 %22, %struct.ImagePool* %23), !dbg !6045
  store float %call13, float* %res, align 4, !dbg !6046
  %24 = load float, float* %res, align 4, !dbg !6047
  %mul14 = fmul float 6.553500e+04, %24, !dbg !6048
  %conv15 = fptoui float %mul14 to i16, !dbg !6049
  %25 = load i16*, i16** %m, align 8, !dbg !6050
  store i16 %conv15, i16* %25, align 2, !dbg !6051
  br label %for.inc, !dbg !6052

for.inc:                                          ; preds = %for.body11
  %26 = load i32, i32* %x, align 4, !dbg !6053
  %inc = add nsw i32 %26, 1, !dbg !6053
  store i32 %inc, i32* %x, align 4, !dbg !6053
  %27 = load i16*, i16** %m, align 8, !dbg !6054
  %incdec.ptr = getelementptr inbounds i16, i16* %27, i32 1, !dbg !6054
  store i16* %incdec.ptr, i16** %m, align 8, !dbg !6054
  br label %for.cond8, !dbg !6055, !llvm.loop !6056

for.end:                                          ; preds = %for.cond8
  br label %for.inc16, !dbg !6058

for.inc16:                                        ; preds = %for.end
  %28 = load i32, i32* %y, align 4, !dbg !6059
  %inc17 = add nsw i32 %28, 1, !dbg !6059
  store i32 %inc17, i32* %y, align 4, !dbg !6059
  br label %for.cond, !dbg !6060, !llvm.loop !6061

for.end18:                                        ; preds = %for.cond
  %29 = load i16*, i16** %mask, align 8, !dbg !6063
  ret i16* %29, !dbg !6064
}

; Function Attrs: noinline nounwind uwtable
define internal i16* @brush_painter_curve_mask_new(%struct.BrushPainter* %painter, i32 %diameter, float %radius) #0 !dbg !6065 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %diameter.addr = alloca i32, align 4
  %radius.addr = alloca float, align 4
  %brush = alloca %struct.Brush*, align 8
  %xoff = alloca i32, align 4
  %yoff = alloca i32, align 4
  %mask = alloca i16*, align 8
  %m = alloca i16*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %xy = alloca [2 x float], align 4
  %len = alloca float, align 4
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !6068, metadata !DIExpression()), !dbg !6069
  store i32 %diameter, i32* %diameter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %diameter.addr, metadata !6070, metadata !DIExpression()), !dbg !6071
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !6072, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !6074, metadata !DIExpression()), !dbg !6075
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6076
  %brush1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 1, !dbg !6077
  %1 = load %struct.Brush*, %struct.Brush** %brush1, align 8, !dbg !6077
  store %struct.Brush* %1, %struct.Brush** %brush, align 8, !dbg !6075
  call void @llvm.dbg.declare(metadata i32* %xoff, metadata !6078, metadata !DIExpression()), !dbg !6079
  %2 = load i32, i32* %diameter.addr, align 4, !dbg !6080
  %sub = sub nsw i32 0, %2, !dbg !6081
  %conv = sitofp i32 %sub to float, !dbg !6081
  %mul = fmul float %conv, 5.000000e-01, !dbg !6082
  %add = fadd float %mul, 5.000000e-01, !dbg !6083
  %conv2 = fptosi float %add to i32, !dbg !6081
  store i32 %conv2, i32* %xoff, align 4, !dbg !6079
  call void @llvm.dbg.declare(metadata i32* %yoff, metadata !6084, metadata !DIExpression()), !dbg !6085
  %3 = load i32, i32* %diameter.addr, align 4, !dbg !6086
  %sub3 = sub nsw i32 0, %3, !dbg !6087
  %conv4 = sitofp i32 %sub3 to float, !dbg !6087
  %mul5 = fmul float %conv4, 5.000000e-01, !dbg !6088
  %add6 = fadd float %mul5, 5.000000e-01, !dbg !6089
  %conv7 = fptosi float %add6 to i32, !dbg !6087
  store i32 %conv7, i32* %yoff, align 4, !dbg !6085
  call void @llvm.dbg.declare(metadata i16** %mask, metadata !6090, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.declare(metadata i16** %m, metadata !6092, metadata !DIExpression()), !dbg !6093
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6096, metadata !DIExpression()), !dbg !6097
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6098
  %5 = load i32, i32* %diameter.addr, align 4, !dbg !6099
  %conv8 = sext i32 %5 to i64, !dbg !6099
  %mul9 = mul i64 2, %conv8, !dbg !6100
  %6 = load i32, i32* %diameter.addr, align 4, !dbg !6101
  %conv10 = sext i32 %6 to i64, !dbg !6101
  %mul11 = mul i64 %mul9, %conv10, !dbg !6102
  %call = call i8* %4(i64 %mul11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0)), !dbg !6098
  %7 = bitcast i8* %call to i16*, !dbg !6098
  store i16* %7, i16** %mask, align 8, !dbg !6103
  %8 = load i16*, i16** %mask, align 8, !dbg !6104
  store i16* %8, i16** %m, align 8, !dbg !6105
  store i32 0, i32* %y, align 4, !dbg !6106
  br label %for.cond, !dbg !6108

for.cond:                                         ; preds = %for.inc25, %entry
  %9 = load i32, i32* %y, align 4, !dbg !6109
  %10 = load i32, i32* %diameter.addr, align 4, !dbg !6111
  %cmp = icmp slt i32 %9, %10, !dbg !6112
  br i1 %cmp, label %for.body, label %for.end27, !dbg !6113

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !6114
  br label %for.cond13, !dbg !6117

for.cond13:                                       ; preds = %for.inc, %for.body
  %11 = load i32, i32* %x, align 4, !dbg !6118
  %12 = load i32, i32* %diameter.addr, align 4, !dbg !6120
  %cmp14 = icmp slt i32 %11, %12, !dbg !6121
  br i1 %cmp14, label %for.body16, label %for.end, !dbg !6122

for.body16:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata [2 x float]* %xy, metadata !6123, metadata !DIExpression()), !dbg !6125
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %xy, i64 0, i64 0, !dbg !6126
  %13 = load i32, i32* %x, align 4, !dbg !6127
  %14 = load i32, i32* %xoff, align 4, !dbg !6128
  %add17 = add nsw i32 %13, %14, !dbg !6129
  %conv18 = sitofp i32 %add17 to float, !dbg !6127
  store float %conv18, float* %arrayinit.begin, align 4, !dbg !6126
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !6126
  %15 = load i32, i32* %y, align 4, !dbg !6130
  %16 = load i32, i32* %yoff, align 4, !dbg !6131
  %add19 = add nsw i32 %15, %16, !dbg !6132
  %conv20 = sitofp i32 %add19 to float, !dbg !6130
  store float %conv20, float* %arrayinit.element, align 4, !dbg !6126
  call void @llvm.dbg.declare(metadata float* %len, metadata !6133, metadata !DIExpression()), !dbg !6134
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %xy, i64 0, i64 0, !dbg !6135
  %call21 = call float @len_v2(float* %arraydecay), !dbg !6136
  store float %call21, float* %len, align 4, !dbg !6134
  %17 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6137
  %18 = load float, float* %len, align 4, !dbg !6138
  %19 = load float, float* %radius.addr, align 4, !dbg !6139
  %call22 = call float @BKE_brush_curve_strength_clamp(%struct.Brush* %17, float %18, float %19), !dbg !6140
  %mul23 = fmul float 6.553500e+04, %call22, !dbg !6141
  %conv24 = fptoui float %mul23 to i16, !dbg !6142
  %20 = load i16*, i16** %m, align 8, !dbg !6143
  store i16 %conv24, i16* %20, align 2, !dbg !6144
  br label %for.inc, !dbg !6145

for.inc:                                          ; preds = %for.body16
  %21 = load i32, i32* %x, align 4, !dbg !6146
  %inc = add nsw i32 %21, 1, !dbg !6146
  store i32 %inc, i32* %x, align 4, !dbg !6146
  %22 = load i16*, i16** %m, align 8, !dbg !6147
  %incdec.ptr = getelementptr inbounds i16, i16* %22, i32 1, !dbg !6147
  store i16* %incdec.ptr, i16** %m, align 8, !dbg !6147
  br label %for.cond13, !dbg !6148, !llvm.loop !6149

for.end:                                          ; preds = %for.cond13
  br label %for.inc25, !dbg !6151

for.inc25:                                        ; preds = %for.end
  %23 = load i32, i32* %y, align 4, !dbg !6152
  %inc26 = add nsw i32 %23, 1, !dbg !6152
  store i32 %inc26, i32* %y, align 4, !dbg !6152
  br label %for.cond, !dbg !6153, !llvm.loop !6154

for.end27:                                        ; preds = %for.cond
  %24 = load i16*, i16** %mask, align 8, !dbg !6156
  ret i16* %24, !dbg !6157
}

; Function Attrs: noinline nounwind uwtable
define internal void @brush_painter_imbuf_partial_update(%struct.BrushPainter* %painter, float* %pos, i32 %diameter) #0 !dbg !6158 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %pos.addr = alloca float*, align 8
  %diameter.addr = alloca i32, align 4
  %cache = alloca %struct.BrushPainterCache*, align 8
  %oldtexibuf = alloca %struct.ImBuf*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %imbflag = alloca i32, align 4
  %destx = alloca i32, align 4
  %desty = alloca i32, align 4
  %srcx = alloca i32, align 4
  %srcy = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %x1 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !6159, metadata !DIExpression()), !dbg !6160
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !6161, metadata !DIExpression()), !dbg !6162
  store i32 %diameter, i32* %diameter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %diameter.addr, metadata !6163, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.declare(metadata %struct.BrushPainterCache** %cache, metadata !6165, metadata !DIExpression()), !dbg !6166
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6167
  %cache1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 8, !dbg !6168
  store %struct.BrushPainterCache* %cache1, %struct.BrushPainterCache** %cache, align 8, !dbg !6166
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %oldtexibuf, metadata !6169, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !6171, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata i32* %imbflag, metadata !6173, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.declare(metadata i32* %destx, metadata !6175, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.declare(metadata i32* %desty, metadata !6177, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.declare(metadata i32* %srcx, metadata !6179, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.declare(metadata i32* %srcy, metadata !6181, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6183, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.declare(metadata i32* %h, metadata !6185, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !6187, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !6191, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !6193, metadata !DIExpression()), !dbg !6194
  %1 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !6195
  %use_float = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %1, i32 0, i32 0, !dbg !6196
  %2 = load i8, i8* %use_float, align 8, !dbg !6196
  %conv = zext i8 %2 to i32, !dbg !6197
  %tobool = icmp ne i32 %conv, 0, !dbg !6197
  %3 = zext i1 %tobool to i64, !dbg !6197
  %cond = select i1 %tobool, i32 32, i32 1, !dbg !6197
  store i32 %cond, i32* %imbflag, align 4, !dbg !6198
  %4 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !6199
  %ibuf2 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %4, i32 0, i32 9, !dbg !6201
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2, align 8, !dbg !6201
  %tobool3 = icmp ne %struct.ImBuf* %5, null, !dbg !6199
  br i1 %tobool3, label %if.end, label %if.then, !dbg !6202

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %diameter.addr, align 4, !dbg !6203
  %7 = load i32, i32* %diameter.addr, align 4, !dbg !6204
  %8 = load i32, i32* %imbflag, align 4, !dbg !6205
  %call = call %struct.ImBuf* @IMB_allocImBuf(i32 %6, i32 %7, i8 zeroext 32, i32 %8), !dbg !6206
  %9 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !6207
  %ibuf4 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %9, i32 0, i32 9, !dbg !6208
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf4, align 8, !dbg !6209
  br label %if.end, !dbg !6207

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !6210
  %ibuf5 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %10, i32 0, i32 9, !dbg !6211
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf5, align 8, !dbg !6211
  store %struct.ImBuf* %11, %struct.ImBuf** %ibuf, align 8, !dbg !6212
  %12 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !6213
  %texibuf = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %12, i32 0, i32 10, !dbg !6214
  %13 = load %struct.ImBuf*, %struct.ImBuf** %texibuf, align 8, !dbg !6214
  store %struct.ImBuf* %13, %struct.ImBuf** %oldtexibuf, align 8, !dbg !6215
  %14 = load i32, i32* %diameter.addr, align 4, !dbg !6216
  %15 = load i32, i32* %diameter.addr, align 4, !dbg !6217
  %16 = load i32, i32* %imbflag, align 4, !dbg !6218
  %call6 = call %struct.ImBuf* @IMB_allocImBuf(i32 %14, i32 %15, i8 zeroext 32, i32 %16), !dbg !6219
  %17 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !6220
  %texibuf7 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %17, i32 0, i32 10, !dbg !6221
  store %struct.ImBuf* %call6, %struct.ImBuf** %texibuf7, align 8, !dbg !6222
  %18 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf, align 8, !dbg !6223
  %tobool8 = icmp ne %struct.ImBuf* %18, null, !dbg !6223
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !6225

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %srcy, align 4, !dbg !6226
  store i32 0, i32* %srcx, align 4, !dbg !6228
  %19 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf, align 8, !dbg !6229
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 2, !dbg !6230
  %20 = load i32, i32* %x, align 8, !dbg !6230
  store i32 %20, i32* %w, align 4, !dbg !6231
  %21 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf, align 8, !dbg !6232
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 3, !dbg !6233
  %22 = load i32, i32* %y, align 4, !dbg !6233
  store i32 %22, i32* %h, align 4, !dbg !6234
  %23 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6235
  %lastpaintpos = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %23, i32 0, i32 2, !dbg !6236
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %lastpaintpos, i64 0, i64 0, !dbg !6235
  %24 = load float, float* %arrayidx, align 8, !dbg !6235
  %conv10 = fptosi float %24 to i32, !dbg !6237
  %25 = load float*, float** %pos.addr, align 8, !dbg !6238
  %arrayidx11 = getelementptr inbounds float, float* %25, i64 0, !dbg !6238
  %26 = load float, float* %arrayidx11, align 4, !dbg !6238
  %conv12 = fptosi float %26 to i32, !dbg !6239
  %sub = sub nsw i32 %conv10, %conv12, !dbg !6240
  %27 = load i32, i32* %diameter.addr, align 4, !dbg !6241
  %div = sdiv i32 %27, 2, !dbg !6242
  %28 = load i32, i32* %w, align 4, !dbg !6243
  %div13 = sdiv i32 %28, 2, !dbg !6244
  %sub14 = sub nsw i32 %div, %div13, !dbg !6245
  %add = add nsw i32 %sub, %sub14, !dbg !6246
  store i32 %add, i32* %destx, align 4, !dbg !6247
  %29 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6248
  %lastpaintpos15 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %29, i32 0, i32 2, !dbg !6249
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %lastpaintpos15, i64 0, i64 1, !dbg !6248
  %30 = load float, float* %arrayidx16, align 4, !dbg !6248
  %conv17 = fptosi float %30 to i32, !dbg !6250
  %31 = load float*, float** %pos.addr, align 8, !dbg !6251
  %arrayidx18 = getelementptr inbounds float, float* %31, i64 1, !dbg !6251
  %32 = load float, float* %arrayidx18, align 4, !dbg !6251
  %conv19 = fptosi float %32 to i32, !dbg !6252
  %sub20 = sub nsw i32 %conv17, %conv19, !dbg !6253
  %33 = load i32, i32* %diameter.addr, align 4, !dbg !6254
  %div21 = sdiv i32 %33, 2, !dbg !6255
  %34 = load i32, i32* %h, align 4, !dbg !6256
  %div22 = sdiv i32 %34, 2, !dbg !6257
  %sub23 = sub nsw i32 %div21, %div22, !dbg !6258
  %add24 = add nsw i32 %sub20, %sub23, !dbg !6259
  store i32 %add24, i32* %desty, align 4, !dbg !6260
  %35 = load %struct.BrushPainterCache*, %struct.BrushPainterCache** %cache, align 8, !dbg !6261
  %texibuf25 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %35, i32 0, i32 10, !dbg !6262
  %36 = load %struct.ImBuf*, %struct.ImBuf** %texibuf25, align 8, !dbg !6262
  %37 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf, align 8, !dbg !6263
  call void @IMB_rectclip(%struct.ImBuf* %36, %struct.ImBuf* %37, i32* %destx, i32* %desty, i32* %srcx, i32* %srcy, i32* %w, i32* %h), !dbg !6264
  br label %if.end26, !dbg !6265

if.else:                                          ; preds = %if.end
  store i32 0, i32* %srcy, align 4, !dbg !6266
  store i32 0, i32* %srcx, align 4, !dbg !6268
  store i32 0, i32* %desty, align 4, !dbg !6269
  store i32 0, i32* %destx, align 4, !dbg !6270
  store i32 0, i32* %h, align 4, !dbg !6271
  store i32 0, i32* %w, align 4, !dbg !6272
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then9
  %38 = load i32, i32* %destx, align 4, !dbg !6273
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6274
  %x27 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %39, i32 0, i32 2, !dbg !6275
  %40 = load i32, i32* %x27, align 8, !dbg !6275
  %call28 = call i32 @min_ii(i32 %38, i32 %40), !dbg !6276
  store i32 %call28, i32* %x1, align 4, !dbg !6277
  %41 = load i32, i32* %desty, align 4, !dbg !6278
  %42 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6279
  %y29 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %42, i32 0, i32 3, !dbg !6280
  %43 = load i32, i32* %y29, align 4, !dbg !6280
  %call30 = call i32 @min_ii(i32 %41, i32 %43), !dbg !6281
  store i32 %call30, i32* %y1, align 4, !dbg !6282
  %44 = load i32, i32* %destx, align 4, !dbg !6283
  %45 = load i32, i32* %w, align 4, !dbg !6284
  %add31 = add nsw i32 %44, %45, !dbg !6285
  %46 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6286
  %x32 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %46, i32 0, i32 2, !dbg !6287
  %47 = load i32, i32* %x32, align 8, !dbg !6287
  %call33 = call i32 @min_ii(i32 %add31, i32 %47), !dbg !6288
  store i32 %call33, i32* %x2, align 4, !dbg !6289
  %48 = load i32, i32* %desty, align 4, !dbg !6290
  %49 = load i32, i32* %h, align 4, !dbg !6291
  %add34 = add nsw i32 %48, %49, !dbg !6292
  %50 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6293
  %y35 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %50, i32 0, i32 3, !dbg !6294
  %51 = load i32, i32* %y35, align 4, !dbg !6294
  %call36 = call i32 @min_ii(i32 %add34, i32 %51), !dbg !6295
  store i32 %call36, i32* %y2, align 4, !dbg !6296
  %52 = load i32, i32* %x1, align 4, !dbg !6297
  %53 = load i32, i32* %x2, align 4, !dbg !6299
  %cmp = icmp slt i32 %52, %53, !dbg !6300
  br i1 %cmp, label %land.lhs.true, label %if.end41, !dbg !6301

land.lhs.true:                                    ; preds = %if.end26
  %54 = load i32, i32* %y1, align 4, !dbg !6302
  %55 = load i32, i32* %y2, align 4, !dbg !6303
  %cmp38 = icmp slt i32 %54, %55, !dbg !6304
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !6305

if.then40:                                        ; preds = %land.lhs.true
  %56 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6306
  %57 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf, align 8, !dbg !6307
  %58 = load i32, i32* %x1, align 4, !dbg !6308
  %59 = load i32, i32* %y1, align 4, !dbg !6309
  %60 = load i32, i32* %x2, align 4, !dbg !6310
  %61 = load i32, i32* %y2, align 4, !dbg !6311
  %62 = load i32, i32* %srcx, align 4, !dbg !6312
  %63 = load i32, i32* %srcy, align 4, !dbg !6313
  call void @brush_painter_imbuf_update(%struct.BrushPainter* %56, %struct.ImBuf* %57, i32 %58, i32 %59, i32 %60, i32 %61, i32 %62, i32 %63), !dbg !6314
  br label %if.end41, !dbg !6314

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %if.end26
  %64 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf, align 8, !dbg !6315
  %tobool42 = icmp ne %struct.ImBuf* %64, null, !dbg !6315
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !6317

if.then43:                                        ; preds = %if.end41
  %65 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf, align 8, !dbg !6318
  call void @IMB_freeImBuf(%struct.ImBuf* %65), !dbg !6319
  br label %if.end44, !dbg !6319

if.end44:                                         ; preds = %if.then43, %if.end41
  %66 = load i32, i32* %x1, align 4, !dbg !6320
  %cmp45 = icmp slt i32 0, %66, !dbg !6322
  br i1 %cmp45, label %land.lhs.true47, label %if.end53, !dbg !6323

land.lhs.true47:                                  ; preds = %if.end44
  %67 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6324
  %y48 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %67, i32 0, i32 3, !dbg !6325
  %68 = load i32, i32* %y48, align 4, !dbg !6325
  %cmp49 = icmp slt i32 0, %68, !dbg !6326
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !6327

if.then51:                                        ; preds = %land.lhs.true47
  %69 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6328
  %70 = load i32, i32* %x1, align 4, !dbg !6329
  %71 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6330
  %y52 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %71, i32 0, i32 3, !dbg !6331
  %72 = load i32, i32* %y52, align 4, !dbg !6331
  call void @brush_painter_imbuf_update(%struct.BrushPainter* %69, %struct.ImBuf* null, i32 0, i32 0, i32 %70, i32 %72, i32 0, i32 0), !dbg !6332
  br label %if.end53, !dbg !6332

if.end53:                                         ; preds = %if.then51, %land.lhs.true47, %if.end44
  %73 = load i32, i32* %x2, align 4, !dbg !6333
  %74 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6335
  %x54 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %74, i32 0, i32 2, !dbg !6336
  %75 = load i32, i32* %x54, align 8, !dbg !6336
  %cmp55 = icmp slt i32 %73, %75, !dbg !6337
  br i1 %cmp55, label %land.lhs.true57, label %if.end64, !dbg !6338

land.lhs.true57:                                  ; preds = %if.end53
  %76 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6339
  %y58 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %76, i32 0, i32 3, !dbg !6340
  %77 = load i32, i32* %y58, align 4, !dbg !6340
  %cmp59 = icmp slt i32 0, %77, !dbg !6341
  br i1 %cmp59, label %if.then61, label %if.end64, !dbg !6342

if.then61:                                        ; preds = %land.lhs.true57
  %78 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6343
  %79 = load i32, i32* %x2, align 4, !dbg !6344
  %80 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6345
  %x62 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %80, i32 0, i32 2, !dbg !6346
  %81 = load i32, i32* %x62, align 8, !dbg !6346
  %82 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6347
  %y63 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %82, i32 0, i32 3, !dbg !6348
  %83 = load i32, i32* %y63, align 4, !dbg !6348
  call void @brush_painter_imbuf_update(%struct.BrushPainter* %78, %struct.ImBuf* null, i32 %79, i32 0, i32 %81, i32 %83, i32 0, i32 0), !dbg !6349
  br label %if.end64, !dbg !6349

if.end64:                                         ; preds = %if.then61, %land.lhs.true57, %if.end53
  %84 = load i32, i32* %x1, align 4, !dbg !6350
  %85 = load i32, i32* %x2, align 4, !dbg !6352
  %cmp65 = icmp slt i32 %84, %85, !dbg !6353
  br i1 %cmp65, label %land.lhs.true67, label %if.end71, !dbg !6354

land.lhs.true67:                                  ; preds = %if.end64
  %86 = load i32, i32* %y1, align 4, !dbg !6355
  %cmp68 = icmp slt i32 0, %86, !dbg !6356
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !6357

if.then70:                                        ; preds = %land.lhs.true67
  %87 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6358
  %88 = load i32, i32* %x1, align 4, !dbg !6359
  %89 = load i32, i32* %x2, align 4, !dbg !6360
  %90 = load i32, i32* %y1, align 4, !dbg !6361
  call void @brush_painter_imbuf_update(%struct.BrushPainter* %87, %struct.ImBuf* null, i32 %88, i32 0, i32 %89, i32 %90, i32 0, i32 0), !dbg !6362
  br label %if.end71, !dbg !6362

if.end71:                                         ; preds = %if.then70, %land.lhs.true67, %if.end64
  %91 = load i32, i32* %x1, align 4, !dbg !6363
  %92 = load i32, i32* %x2, align 4, !dbg !6365
  %cmp72 = icmp slt i32 %91, %92, !dbg !6366
  br i1 %cmp72, label %land.lhs.true74, label %if.end80, !dbg !6367

land.lhs.true74:                                  ; preds = %if.end71
  %93 = load i32, i32* %y2, align 4, !dbg !6368
  %94 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6369
  %y75 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %94, i32 0, i32 3, !dbg !6370
  %95 = load i32, i32* %y75, align 4, !dbg !6370
  %cmp76 = icmp slt i32 %93, %95, !dbg !6371
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !6372

if.then78:                                        ; preds = %land.lhs.true74
  %96 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6373
  %97 = load i32, i32* %x1, align 4, !dbg !6374
  %98 = load i32, i32* %y2, align 4, !dbg !6375
  %99 = load i32, i32* %x2, align 4, !dbg !6376
  %100 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6377
  %y79 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %100, i32 0, i32 3, !dbg !6378
  %101 = load i32, i32* %y79, align 4, !dbg !6378
  call void @brush_painter_imbuf_update(%struct.BrushPainter* %96, %struct.ImBuf* null, i32 %97, i32 %98, i32 %99, i32 %101, i32 0, i32 0), !dbg !6379
  br label %if.end80, !dbg !6379

if.end80:                                         ; preds = %if.then78, %land.lhs.true74, %if.end71
  ret void, !dbg !6380
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @brush_painter_imbuf_new(%struct.BrushPainter* %painter, i32 %size, float %pressure, float %distance) #0 !dbg !6381 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %size.addr = alloca i32, align 4
  %pressure.addr = alloca float, align 4
  %distance.addr = alloca float, align 4
  %scene = alloca %struct.Scene*, align 8
  %brush = alloca %struct.Brush*, align 8
  %display_device = alloca i8*, align 8
  %display = alloca %struct.ColorManagedDisplay*, align 8
  %tex_mapping = alloca %struct.rctf, align 4
  %pool = alloca %struct.ImagePool*, align 8
  %use_color_correction = alloca i8, align 1
  %use_float = alloca i8, align 1
  %is_texbrush = alloca i8, align 1
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %thread = alloca i32, align 4
  %brush_rgb = alloca [3 x float], align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %texco = alloca [3 x float], align 4
  %rgba = alloca [4 x float], align 16
  %dstf = alloca float*, align 8
  %dst = alloca i8*, align 8
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !6384, metadata !DIExpression()), !dbg !6385
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6386, metadata !DIExpression()), !dbg !6387
  store float %pressure, float* %pressure.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pressure.addr, metadata !6388, metadata !DIExpression()), !dbg !6389
  store float %distance, float* %distance.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distance.addr, metadata !6390, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6392, metadata !DIExpression()), !dbg !6393
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6394
  %scene1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 0, !dbg !6395
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !6395
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !6393
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !6396, metadata !DIExpression()), !dbg !6397
  %2 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6398
  %brush2 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %2, i32 0, i32 1, !dbg !6399
  %3 = load %struct.Brush*, %struct.Brush** %brush2, align 8, !dbg !6399
  store %struct.Brush* %3, %struct.Brush** %brush, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata i8** %display_device, metadata !6400, metadata !DIExpression()), !dbg !6401
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6402
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 45, !dbg !6403
  %display_device3 = getelementptr inbounds %struct.ColorManagedDisplaySettings, %struct.ColorManagedDisplaySettings* %display_settings, i32 0, i32 0, !dbg !6404
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %display_device3, i64 0, i64 0, !dbg !6402
  store i8* %arraydecay, i8** %display_device, align 8, !dbg !6401
  call void @llvm.dbg.declare(metadata %struct.ColorManagedDisplay** %display, metadata !6405, metadata !DIExpression()), !dbg !6408
  %5 = load i8*, i8** %display_device, align 8, !dbg !6409
  %call = call %struct.ColorManagedDisplay* @IMB_colormanagement_display_get_named(i8* %5), !dbg !6410
  store %struct.ColorManagedDisplay* %call, %struct.ColorManagedDisplay** %display, align 8, !dbg !6408
  call void @llvm.dbg.declare(metadata %struct.rctf* %tex_mapping, metadata !6411, metadata !DIExpression()), !dbg !6412
  %6 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6413
  %tex_mapping4 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %6, i32 0, i32 6, !dbg !6414
  %7 = bitcast %struct.rctf* %tex_mapping to i8*, !dbg !6414
  %8 = bitcast %struct.rctf* %tex_mapping4 to i8*, !dbg !6414
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 16, i1 false), !dbg !6414
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool, metadata !6415, metadata !DIExpression()), !dbg !6416
  %9 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6417
  %pool5 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %9, i32 0, i32 5, !dbg !6418
  %10 = load %struct.ImagePool*, %struct.ImagePool** %pool5, align 8, !dbg !6418
  store %struct.ImagePool* %10, %struct.ImagePool** %pool, align 8, !dbg !6416
  call void @llvm.dbg.declare(metadata i8* %use_color_correction, metadata !6419, metadata !DIExpression()), !dbg !6420
  %11 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6421
  %cache = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %11, i32 0, i32 8, !dbg !6422
  %use_color_correction6 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache, i32 0, i32 1, !dbg !6423
  %12 = load i8, i8* %use_color_correction6, align 1, !dbg !6423
  store i8 %12, i8* %use_color_correction, align 1, !dbg !6420
  call void @llvm.dbg.declare(metadata i8* %use_float, metadata !6424, metadata !DIExpression()), !dbg !6425
  %13 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6426
  %cache7 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %13, i32 0, i32 8, !dbg !6427
  %use_float8 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache7, i32 0, i32 0, !dbg !6428
  %14 = load i8, i8* %use_float8, align 8, !dbg !6428
  store i8 %14, i8* %use_float, align 1, !dbg !6425
  call void @llvm.dbg.declare(metadata i8* %is_texbrush, metadata !6429, metadata !DIExpression()), !dbg !6430
  %15 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6431
  %cache9 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %15, i32 0, i32 8, !dbg !6432
  %is_texbrush10 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache9, i32 0, i32 3, !dbg !6433
  %16 = load i8, i8* %is_texbrush10, align 1, !dbg !6433
  store i8 %16, i8* %is_texbrush, align 1, !dbg !6430
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6436, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.declare(metadata i32* %thread, metadata !6438, metadata !DIExpression()), !dbg !6439
  store i32 0, i32* %thread, align 4, !dbg !6439
  call void @llvm.dbg.declare(metadata [3 x float]* %brush_rgb, metadata !6440, metadata !DIExpression()), !dbg !6441
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !6442, metadata !DIExpression()), !dbg !6443
  %17 = load i32, i32* %size.addr, align 4, !dbg !6444
  %18 = load i32, i32* %size.addr, align 4, !dbg !6445
  %19 = load i8, i8* %use_float, align 1, !dbg !6446
  %conv = zext i8 %19 to i32, !dbg !6447
  %tobool = icmp ne i32 %conv, 0, !dbg !6447
  %20 = zext i1 %tobool to i64, !dbg !6447
  %cond = select i1 %tobool, i32 32, i32 1, !dbg !6447
  %call11 = call %struct.ImBuf* @IMB_allocImBuf(i32 %17, i32 %18, i8 zeroext 32, i32 %cond), !dbg !6448
  store %struct.ImBuf* %call11, %struct.ImBuf** %ibuf, align 8, !dbg !6443
  %21 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6449
  %imagepaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %21, i32 0, i32 36, !dbg !6451
  %22 = load i8, i8* %imagepaint_tool, align 2, !dbg !6451
  %conv12 = zext i8 %22 to i32, !dbg !6449
  %cmp = icmp eq i32 %conv12, 0, !dbg !6452
  br i1 %cmp, label %if.then, label %if.else, !dbg !6453

if.then:                                          ; preds = %entry
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6454
  %24 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6456
  %25 = load i8, i8* %use_color_correction, align 1, !dbg !6457
  %26 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6458
  %cache14 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %26, i32 0, i32 8, !dbg !6459
  %invert = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache14, i32 0, i32 2, !dbg !6460
  %27 = load i8, i8* %invert, align 2, !dbg !6460
  %28 = load float, float* %distance.addr, align 4, !dbg !6461
  %29 = load float, float* %pressure.addr, align 4, !dbg !6462
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 0, !dbg !6463
  %30 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6464
  call void @paint_brush_color_get(%struct.Scene* %23, %struct.Brush* %24, i8 zeroext %25, i8 zeroext %27, float %28, float %29, float* %arraydecay15, %struct.ColorManagedDisplay* %30), !dbg !6465
  br label %if.end, !dbg !6466

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 0, !dbg !6467
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !6469
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 1, !dbg !6470
  store float 1.000000e+00, float* %arrayidx16, align 4, !dbg !6471
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 2, !dbg !6472
  store float 1.000000e+00, float* %arrayidx17, align 4, !dbg !6473
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %y, align 4, !dbg !6474
  br label %for.cond, !dbg !6476

for.cond:                                         ; preds = %for.inc72, %if.end
  %31 = load i32, i32* %y, align 4, !dbg !6477
  %32 = load i32, i32* %size.addr, align 4, !dbg !6479
  %cmp18 = icmp slt i32 %31, %32, !dbg !6480
  br i1 %cmp18, label %for.body, label %for.end74, !dbg !6481

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !6482
  br label %for.cond20, !dbg !6485

for.cond20:                                       ; preds = %for.inc, %for.body
  %33 = load i32, i32* %x, align 4, !dbg !6486
  %34 = load i32, i32* %size.addr, align 4, !dbg !6488
  %cmp21 = icmp slt i32 %33, %34, !dbg !6489
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !6490

for.body23:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata [3 x float]* %texco, metadata !6491, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !6494, metadata !DIExpression()), !dbg !6495
  %35 = load i8, i8* %is_texbrush, align 1, !dbg !6496
  %tobool24 = icmp ne i8 %35, 0, !dbg !6496
  br i1 %tobool24, label %if.then25, label %if.else36, !dbg !6498

if.then25:                                        ; preds = %for.body23
  %36 = load i32, i32* %x, align 4, !dbg !6499
  %37 = load i32, i32* %y, align 4, !dbg !6501
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %texco, i64 0, i64 0, !dbg !6502
  call void @brush_imbuf_tex_co(%struct.rctf* %tex_mapping, i32 %36, i32 %37, float* %arraydecay26), !dbg !6503
  %38 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6504
  %39 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6505
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %texco, i64 0, i64 0, !dbg !6506
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6507
  %40 = load i32, i32* %thread, align 4, !dbg !6508
  %41 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !6509
  %call29 = call float @BKE_brush_sample_tex_3D(%struct.Scene* %38, %struct.Brush* %39, float* %arraydecay27, float* %arraydecay28, i32 %40, %struct.ImagePool* %41), !dbg !6510
  %arraydecay30 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6511
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 0, !dbg !6512
  call void @mul_v3_v3(float* %arraydecay30, float* %arraydecay31), !dbg !6513
  %42 = load i8, i8* %use_float, align 1, !dbg !6514
  %tobool32 = icmp ne i8 %42, 0, !dbg !6514
  br i1 %tobool32, label %if.end35, label %if.then33, !dbg !6516

if.then33:                                        ; preds = %if.then25
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6517
  %43 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6519
  call void @IMB_colormanagement_scene_linear_to_display_v3(float* %arraydecay34, %struct.ColorManagedDisplay* %43), !dbg !6520
  br label %if.end35, !dbg !6521

if.end35:                                         ; preds = %if.then33, %if.then25
  br label %if.end40, !dbg !6522

if.else36:                                        ; preds = %for.body23
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6523
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 0, !dbg !6525
  call void @copy_v3_v3(float* %arraydecay37, float* %arraydecay38), !dbg !6526
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !6527
  store float 1.000000e+00, float* %arrayidx39, align 4, !dbg !6528
  br label %if.end40

if.end40:                                         ; preds = %if.else36, %if.end35
  %44 = load i8, i8* %use_float, align 1, !dbg !6529
  %tobool41 = icmp ne i8 %44, 0, !dbg !6529
  br i1 %tobool41, label %if.then42, label %if.else48, !dbg !6531

if.then42:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata float** %dstf, metadata !6532, metadata !DIExpression()), !dbg !6534
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6535
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %45, i32 0, i32 9, !dbg !6536
  %46 = load float*, float** %rect_float, align 8, !dbg !6536
  %47 = load i32, i32* %y, align 4, !dbg !6537
  %48 = load i32, i32* %size.addr, align 4, !dbg !6538
  %mul = mul nsw i32 %47, %48, !dbg !6539
  %49 = load i32, i32* %x, align 4, !dbg !6540
  %add = add nsw i32 %mul, %49, !dbg !6541
  %mul43 = mul nsw i32 %add, 4, !dbg !6542
  %idx.ext = sext i32 %mul43 to i64, !dbg !6543
  %add.ptr = getelementptr inbounds float, float* %46, i64 %idx.ext, !dbg !6543
  store float* %add.ptr, float** %dstf, align 8, !dbg !6534
  %50 = load float*, float** %dstf, align 8, !dbg !6544
  %arraydecay44 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6545
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !6546
  %51 = load float, float* %arrayidx45, align 4, !dbg !6546
  call void @mul_v3_v3fl(float* %50, float* %arraydecay44, float %51), !dbg !6547
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !6548
  %52 = load float, float* %arrayidx46, align 4, !dbg !6548
  %53 = load float*, float** %dstf, align 8, !dbg !6549
  %arrayidx47 = getelementptr inbounds float, float* %53, i64 3, !dbg !6549
  store float %52, float* %arrayidx47, align 4, !dbg !6550
  br label %if.end71, !dbg !6551

if.else48:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !6552, metadata !DIExpression()), !dbg !6554
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6555
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 8, !dbg !6556
  %55 = load i32*, i32** %rect, align 8, !dbg !6556
  %56 = bitcast i32* %55 to i8*, !dbg !6557
  %57 = load i32, i32* %y, align 4, !dbg !6558
  %58 = load i32, i32* %size.addr, align 4, !dbg !6559
  %mul49 = mul nsw i32 %57, %58, !dbg !6560
  %59 = load i32, i32* %x, align 4, !dbg !6561
  %add50 = add nsw i32 %mul49, %59, !dbg !6562
  %mul51 = mul nsw i32 %add50, 4, !dbg !6563
  %idx.ext52 = sext i32 %mul51 to i64, !dbg !6564
  %add.ptr53 = getelementptr inbounds i8, i8* %56, i64 %idx.ext52, !dbg !6564
  store i8* %add.ptr53, i8** %dst, align 8, !dbg !6554
  %60 = load i8*, i8** %dst, align 8, !dbg !6565
  %arraydecay54 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6566
  call void @rgb_float_to_uchar(i8* %60, float* %arraydecay54), !dbg !6567
  %arrayidx55 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !6568
  %61 = load float, float* %arrayidx55, align 4, !dbg !6568
  %cmp56 = fcmp ole float %61, 0.000000e+00, !dbg !6568
  br i1 %cmp56, label %cond.true, label %cond.false, !dbg !6568

cond.true:                                        ; preds = %if.else48
  br label %cond.end67, !dbg !6568

cond.false:                                       ; preds = %if.else48
  %arrayidx58 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !6568
  %62 = load float, float* %arrayidx58, align 4, !dbg !6568
  %cmp59 = fcmp ogt float %62, 0x3FEFEFEFE0000000, !dbg !6568
  br i1 %cmp59, label %cond.true61, label %cond.false62, !dbg !6568

cond.true61:                                      ; preds = %cond.false
  br label %cond.end, !dbg !6568

cond.false62:                                     ; preds = %cond.false
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !6568
  %63 = load float, float* %arrayidx63, align 4, !dbg !6568
  %mul64 = fmul float 2.550000e+02, %63, !dbg !6568
  %add65 = fadd float %mul64, 5.000000e-01, !dbg !6568
  br label %cond.end, !dbg !6568

cond.end:                                         ; preds = %cond.false62, %cond.true61
  %cond66 = phi float [ 2.550000e+02, %cond.true61 ], [ %add65, %cond.false62 ], !dbg !6568
  br label %cond.end67, !dbg !6568

cond.end67:                                       ; preds = %cond.end, %cond.true
  %cond68 = phi float [ 0.000000e+00, %cond.true ], [ %cond66, %cond.end ], !dbg !6568
  %conv69 = fptoui float %cond68 to i8, !dbg !6568
  %64 = load i8*, i8** %dst, align 8, !dbg !6569
  %arrayidx70 = getelementptr inbounds i8, i8* %64, i64 3, !dbg !6569
  store i8 %conv69, i8* %arrayidx70, align 1, !dbg !6570
  br label %if.end71

if.end71:                                         ; preds = %cond.end67, %if.then42
  br label %for.inc, !dbg !6571

for.inc:                                          ; preds = %if.end71
  %65 = load i32, i32* %x, align 4, !dbg !6572
  %inc = add nsw i32 %65, 1, !dbg !6572
  store i32 %inc, i32* %x, align 4, !dbg !6572
  br label %for.cond20, !dbg !6573, !llvm.loop !6574

for.end:                                          ; preds = %for.cond20
  br label %for.inc72, !dbg !6576

for.inc72:                                        ; preds = %for.end
  %66 = load i32, i32* %y, align 4, !dbg !6577
  %inc73 = add nsw i32 %66, 1, !dbg !6577
  store i32 %inc73, i32* %y, align 4, !dbg !6577
  br label %for.cond, !dbg !6578, !llvm.loop !6579

for.end74:                                        ; preds = %for.cond
  %67 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6581
  ret %struct.ImBuf* %67, !dbg !6582
}

declare dso_local void @BKE_image_pool_free(%struct.ImagePool*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

declare dso_local void @UI_view2d_view_to_region(%struct.View2D*, float, float, i32*, i32*) #2

declare dso_local void @IMB_rectclip(%struct.ImBuf*, %struct.ImBuf*, i32*, i32*, i32*, i32*, i32*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !6583 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6587, metadata !DIExpression()), !dbg !6588
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !6589, metadata !DIExpression()), !dbg !6590
  %0 = load i32, i32* %a.addr, align 4, !dbg !6591
  %1 = load i32, i32* %b.addr, align 4, !dbg !6592
  %cmp = icmp slt i32 %0, %1, !dbg !6593
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6594

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !6595
  br label %cond.end, !dbg !6594

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !6596
  br label %cond.end, !dbg !6594

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6594
  ret i32 %cond, !dbg !6597
}

; Function Attrs: noinline nounwind uwtable
define internal void @brush_painter_mask_imbuf_update(%struct.BrushPainter* %painter, i16* %tex_mask_old, i32 %origx, i32 %origy, i32 %w, i32 %h, i32 %xt, i32 %yt, i32 %diameter) #0 !dbg !6598 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %tex_mask_old.addr = alloca i16*, align 8
  %origx.addr = alloca i32, align 4
  %origy.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %xt.addr = alloca i32, align 4
  %yt.addr = alloca i32, align 4
  %diameter.addr = alloca i32, align 4
  %scene = alloca %struct.Scene*, align 8
  %brush = alloca %struct.Brush*, align 8
  %tex_mapping = alloca %struct.rctf, align 4
  %pool = alloca %struct.ImagePool*, align 8
  %res = alloca i16, align 2
  %use_texture_old = alloca i8, align 1
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %thread = alloca i32, align 4
  %tex_mask = alloca i16*, align 8
  %tex_mask_cur = alloca i16*, align 8
  %texco = alloca [3 x float], align 4
  %b = alloca i16*, align 8
  %t = alloca i16*, align 8
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !6601, metadata !DIExpression()), !dbg !6602
  store i16* %tex_mask_old, i16** %tex_mask_old.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %tex_mask_old.addr, metadata !6603, metadata !DIExpression()), !dbg !6604
  store i32 %origx, i32* %origx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %origx.addr, metadata !6605, metadata !DIExpression()), !dbg !6606
  store i32 %origy, i32* %origy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %origy.addr, metadata !6607, metadata !DIExpression()), !dbg !6608
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6609, metadata !DIExpression()), !dbg !6610
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6611, metadata !DIExpression()), !dbg !6612
  store i32 %xt, i32* %xt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xt.addr, metadata !6613, metadata !DIExpression()), !dbg !6614
  store i32 %yt, i32* %yt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yt.addr, metadata !6615, metadata !DIExpression()), !dbg !6616
  store i32 %diameter, i32* %diameter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %diameter.addr, metadata !6617, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6619, metadata !DIExpression()), !dbg !6620
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6621
  %scene1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 0, !dbg !6622
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !6622
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !6620
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !6623, metadata !DIExpression()), !dbg !6624
  %2 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6625
  %brush2 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %2, i32 0, i32 1, !dbg !6626
  %3 = load %struct.Brush*, %struct.Brush** %brush2, align 8, !dbg !6626
  store %struct.Brush* %3, %struct.Brush** %brush, align 8, !dbg !6624
  call void @llvm.dbg.declare(metadata %struct.rctf* %tex_mapping, metadata !6627, metadata !DIExpression()), !dbg !6628
  %4 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6629
  %mask_mapping = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %4, i32 0, i32 7, !dbg !6630
  %5 = bitcast %struct.rctf* %tex_mapping to i8*, !dbg !6630
  %6 = bitcast %struct.rctf* %mask_mapping to i8*, !dbg !6630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 16, i1 false), !dbg !6630
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool, metadata !6631, metadata !DIExpression()), !dbg !6632
  %7 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6633
  %pool3 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %7, i32 0, i32 5, !dbg !6634
  %8 = load %struct.ImagePool*, %struct.ImagePool** %pool3, align 8, !dbg !6634
  store %struct.ImagePool* %8, %struct.ImagePool** %pool, align 8, !dbg !6632
  call void @llvm.dbg.declare(metadata i16* %res, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata i8* %use_texture_old, metadata !6637, metadata !DIExpression()), !dbg !6638
  %9 = load i16*, i16** %tex_mask_old.addr, align 8, !dbg !6639
  %cmp = icmp ne i16* %9, null, !dbg !6640
  %conv = zext i1 %cmp to i32, !dbg !6640
  %conv4 = trunc i32 %conv to i8, !dbg !6641
  store i8 %conv4, i8* %use_texture_old, align 1, !dbg !6638
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6642, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6644, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.declare(metadata i32* %thread, metadata !6646, metadata !DIExpression()), !dbg !6647
  store i32 0, i32* %thread, align 4, !dbg !6647
  call void @llvm.dbg.declare(metadata i16** %tex_mask, metadata !6648, metadata !DIExpression()), !dbg !6649
  %10 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6650
  %cache = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %10, i32 0, i32 8, !dbg !6651
  %tex_mask5 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache, i32 0, i32 12, !dbg !6652
  %11 = load i16*, i16** %tex_mask5, align 8, !dbg !6652
  store i16* %11, i16** %tex_mask, align 8, !dbg !6649
  call void @llvm.dbg.declare(metadata i16** %tex_mask_cur, metadata !6653, metadata !DIExpression()), !dbg !6654
  %12 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6655
  %cache6 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %12, i32 0, i32 8, !dbg !6656
  %tex_mask_old7 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache6, i32 0, i32 13, !dbg !6657
  %13 = load i16*, i16** %tex_mask_old7, align 8, !dbg !6657
  store i16* %13, i16** %tex_mask_cur, align 8, !dbg !6654
  %14 = load i32, i32* %origy.addr, align 4, !dbg !6658
  store i32 %14, i32* %y, align 4, !dbg !6660
  br label %for.cond, !dbg !6661

for.cond:                                         ; preds = %for.inc32, %entry
  %15 = load i32, i32* %y, align 4, !dbg !6662
  %16 = load i32, i32* %h.addr, align 4, !dbg !6664
  %cmp8 = icmp slt i32 %15, %16, !dbg !6665
  br i1 %cmp8, label %for.body, label %for.end34, !dbg !6666

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %origx.addr, align 4, !dbg !6667
  store i32 %17, i32* %x, align 4, !dbg !6670
  br label %for.cond10, !dbg !6671

for.cond10:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %x, align 4, !dbg !6672
  %19 = load i32, i32* %w.addr, align 4, !dbg !6674
  %cmp11 = icmp slt i32 %18, %19, !dbg !6675
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !6676

for.body13:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata [3 x float]* %texco, metadata !6677, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.declare(metadata i16** %b, metadata !6680, metadata !DIExpression()), !dbg !6681
  %20 = load i16*, i16** %tex_mask, align 8, !dbg !6682
  %21 = load i32, i32* %y, align 4, !dbg !6683
  %22 = load i32, i32* %diameter.addr, align 4, !dbg !6684
  %mul = mul nsw i32 %21, %22, !dbg !6685
  %23 = load i32, i32* %x, align 4, !dbg !6686
  %add = add nsw i32 %mul, %23, !dbg !6687
  %idx.ext = sext i32 %add to i64, !dbg !6688
  %add.ptr = getelementptr inbounds i16, i16* %20, i64 %idx.ext, !dbg !6688
  store i16* %add.ptr, i16** %b, align 8, !dbg !6681
  call void @llvm.dbg.declare(metadata i16** %t, metadata !6689, metadata !DIExpression()), !dbg !6690
  %24 = load i16*, i16** %tex_mask_cur, align 8, !dbg !6691
  %25 = load i32, i32* %y, align 4, !dbg !6692
  %26 = load i32, i32* %diameter.addr, align 4, !dbg !6693
  %mul14 = mul nsw i32 %25, %26, !dbg !6694
  %27 = load i32, i32* %x, align 4, !dbg !6695
  %add15 = add nsw i32 %mul14, %27, !dbg !6696
  %idx.ext16 = sext i32 %add15 to i64, !dbg !6697
  %add.ptr17 = getelementptr inbounds i16, i16* %24, i64 %idx.ext16, !dbg !6697
  store i16* %add.ptr17, i16** %t, align 8, !dbg !6690
  %28 = load i8, i8* %use_texture_old, align 1, !dbg !6698
  %tobool = icmp ne i8 %28, 0, !dbg !6698
  br i1 %tobool, label %if.end, label %if.then, !dbg !6700

if.then:                                          ; preds = %for.body13
  %29 = load i32, i32* %x, align 4, !dbg !6701
  %30 = load i32, i32* %y, align 4, !dbg !6703
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %texco, i64 0, i64 0, !dbg !6704
  call void @brush_imbuf_tex_co(%struct.rctf* %tex_mapping, i32 %29, i32 %30, float* %arraydecay), !dbg !6705
  %31 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6706
  %32 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6707
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %texco, i64 0, i64 0, !dbg !6708
  %33 = load i32, i32* %thread, align 4, !dbg !6709
  %34 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !6710
  %call = call float @BKE_brush_sample_masktex(%struct.Scene* %31, %struct.Brush* %32, float* %arraydecay18, i32 %33, %struct.ImagePool* %34), !dbg !6711
  %mul19 = fmul float 6.553500e+04, %call, !dbg !6712
  %conv20 = fptoui float %mul19 to i16, !dbg !6713
  store i16 %conv20, i16* %res, align 2, !dbg !6714
  br label %if.end, !dbg !6715

if.end:                                           ; preds = %if.then, %for.body13
  %35 = load i8, i8* %use_texture_old, align 1, !dbg !6716
  %tobool21 = icmp ne i8 %35, 0, !dbg !6716
  br i1 %tobool21, label %if.then22, label %if.end31, !dbg !6718

if.then22:                                        ; preds = %if.end
  %36 = load i16*, i16** %tex_mask_old.addr, align 8, !dbg !6719
  %37 = load i32, i32* %y, align 4, !dbg !6721
  %38 = load i32, i32* %origy.addr, align 4, !dbg !6722
  %sub = sub nsw i32 %37, %38, !dbg !6723
  %39 = load i32, i32* %yt.addr, align 4, !dbg !6724
  %add23 = add nsw i32 %sub, %39, !dbg !6725
  %40 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6726
  %cache24 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %40, i32 0, i32 8, !dbg !6727
  %tex_mask_old_w = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache24, i32 0, i32 14, !dbg !6728
  %41 = load i32, i32* %tex_mask_old_w, align 8, !dbg !6728
  %mul25 = mul i32 %add23, %41, !dbg !6729
  %42 = load i32, i32* %x, align 4, !dbg !6730
  %43 = load i32, i32* %origx.addr, align 4, !dbg !6731
  %sub26 = sub nsw i32 %42, %43, !dbg !6732
  %44 = load i32, i32* %xt.addr, align 4, !dbg !6733
  %add27 = add nsw i32 %sub26, %44, !dbg !6734
  %add28 = add i32 %mul25, %add27, !dbg !6735
  %idx.ext29 = zext i32 %add28 to i64, !dbg !6736
  %add.ptr30 = getelementptr inbounds i16, i16* %36, i64 %idx.ext29, !dbg !6736
  %45 = load i16, i16* %add.ptr30, align 2, !dbg !6737
  store i16 %45, i16* %res, align 2, !dbg !6738
  br label %if.end31, !dbg !6739

if.end31:                                         ; preds = %if.then22, %if.end
  %46 = load i16, i16* %res, align 2, !dbg !6740
  %47 = load i16*, i16** %t, align 8, !dbg !6741
  store i16 %46, i16* %47, align 2, !dbg !6742
  %48 = load i16, i16* %res, align 2, !dbg !6743
  %49 = load i16*, i16** %b, align 8, !dbg !6744
  store i16 %48, i16* %49, align 2, !dbg !6745
  br label %for.inc, !dbg !6746

for.inc:                                          ; preds = %if.end31
  %50 = load i32, i32* %x, align 4, !dbg !6747
  %inc = add nsw i32 %50, 1, !dbg !6747
  store i32 %inc, i32* %x, align 4, !dbg !6747
  br label %for.cond10, !dbg !6748, !llvm.loop !6749

for.end:                                          ; preds = %for.cond10
  br label %for.inc32, !dbg !6751

for.inc32:                                        ; preds = %for.end
  %51 = load i32, i32* %y, align 4, !dbg !6752
  %inc33 = add nsw i32 %51, 1, !dbg !6752
  store i32 %inc33, i32* %y, align 4, !dbg !6752
  br label %for.cond, !dbg !6753, !llvm.loop !6754

for.end34:                                        ; preds = %for.cond
  ret void, !dbg !6756
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal void @brush_imbuf_tex_co(%struct.rctf* %mapping, i32 %x, i32 %y, float* %texco) #0 !dbg !6757 {
entry:
  %mapping.addr = alloca %struct.rctf*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %texco.addr = alloca float*, align 8
  store %struct.rctf* %mapping, %struct.rctf** %mapping.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %mapping.addr, metadata !6760, metadata !DIExpression()), !dbg !6761
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6762, metadata !DIExpression()), !dbg !6763
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6764, metadata !DIExpression()), !dbg !6765
  store float* %texco, float** %texco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %texco.addr, metadata !6766, metadata !DIExpression()), !dbg !6767
  %0 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !6768
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 0, !dbg !6769
  %1 = load float, float* %xmin, align 4, !dbg !6769
  %2 = load i32, i32* %x.addr, align 4, !dbg !6770
  %conv = sitofp i32 %2 to float, !dbg !6770
  %3 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !6771
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %3, i32 0, i32 1, !dbg !6772
  %4 = load float, float* %xmax, align 4, !dbg !6772
  %mul = fmul float %conv, %4, !dbg !6773
  %add = fadd float %1, %mul, !dbg !6774
  %5 = load float*, float** %texco.addr, align 8, !dbg !6775
  %arrayidx = getelementptr inbounds float, float* %5, i64 0, !dbg !6775
  store float %add, float* %arrayidx, align 4, !dbg !6776
  %6 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !6777
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %6, i32 0, i32 2, !dbg !6778
  %7 = load float, float* %ymin, align 4, !dbg !6778
  %8 = load i32, i32* %y.addr, align 4, !dbg !6779
  %conv1 = sitofp i32 %8 to float, !dbg !6779
  %9 = load %struct.rctf*, %struct.rctf** %mapping.addr, align 8, !dbg !6780
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %9, i32 0, i32 3, !dbg !6781
  %10 = load float, float* %ymax, align 4, !dbg !6781
  %mul2 = fmul float %conv1, %10, !dbg !6782
  %add3 = fadd float %7, %mul2, !dbg !6783
  %11 = load float*, float** %texco.addr, align 8, !dbg !6784
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 1, !dbg !6784
  store float %add3, float* %arrayidx4, align 4, !dbg !6785
  %12 = load float*, float** %texco.addr, align 8, !dbg !6786
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 2, !dbg !6786
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !6787
  ret void, !dbg !6788
}

declare dso_local float @BKE_brush_sample_masktex(%struct.Scene*, %struct.Brush*, float*, i32, %struct.ImagePool*) #2

declare dso_local float @BKE_brush_curve_strength_clamp(%struct.Brush*, float, float) #2

declare dso_local %struct.ImBuf* @IMB_allocImBuf(i32, i32, i8 zeroext, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @brush_painter_imbuf_update(%struct.BrushPainter* %painter, %struct.ImBuf* %oldtexibuf, i32 %origx, i32 %origy, i32 %w, i32 %h, i32 %xt, i32 %yt) #0 !dbg !6789 {
entry:
  %painter.addr = alloca %struct.BrushPainter*, align 8
  %oldtexibuf.addr = alloca %struct.ImBuf*, align 8
  %origx.addr = alloca i32, align 4
  %origy.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %xt.addr = alloca i32, align 4
  %yt.addr = alloca i32, align 4
  %scene = alloca %struct.Scene*, align 8
  %brush = alloca %struct.Brush*, align 8
  %display_device = alloca i8*, align 8
  %display = alloca %struct.ColorManagedDisplay*, align 8
  %tex_mapping = alloca %struct.rctf, align 4
  %pool = alloca %struct.ImagePool*, align 8
  %use_color_correction = alloca i8, align 1
  %use_float = alloca i8, align 1
  %is_texbrush = alloca i8, align 1
  %use_texture_old = alloca i8, align 1
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %thread = alloca i32, align 4
  %brush_rgb = alloca [3 x float], align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %texibuf = alloca %struct.ImBuf*, align 8
  %texco = alloca [3 x float], align 4
  %rgba = alloca [4 x float], align 16
  %bf = alloca float*, align 8
  %tf = alloca float*, align 8
  %otf = alloca float*, align 8
  %crgba = alloca [4 x i8], align 1
  %b = alloca i8*, align 8
  %t = alloca i8*, align 8
  %ot = alloca i8*, align 8
  store %struct.BrushPainter* %painter, %struct.BrushPainter** %painter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushPainter** %painter.addr, metadata !6792, metadata !DIExpression()), !dbg !6793
  store %struct.ImBuf* %oldtexibuf, %struct.ImBuf** %oldtexibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %oldtexibuf.addr, metadata !6794, metadata !DIExpression()), !dbg !6795
  store i32 %origx, i32* %origx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %origx.addr, metadata !6796, metadata !DIExpression()), !dbg !6797
  store i32 %origy, i32* %origy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %origy.addr, metadata !6798, metadata !DIExpression()), !dbg !6799
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6800, metadata !DIExpression()), !dbg !6801
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6802, metadata !DIExpression()), !dbg !6803
  store i32 %xt, i32* %xt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xt.addr, metadata !6804, metadata !DIExpression()), !dbg !6805
  store i32 %yt, i32* %yt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yt.addr, metadata !6806, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6808, metadata !DIExpression()), !dbg !6809
  %0 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6810
  %scene1 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %0, i32 0, i32 0, !dbg !6811
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !6811
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !6809
  call void @llvm.dbg.declare(metadata %struct.Brush** %brush, metadata !6812, metadata !DIExpression()), !dbg !6813
  %2 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6814
  %brush2 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %2, i32 0, i32 1, !dbg !6815
  %3 = load %struct.Brush*, %struct.Brush** %brush2, align 8, !dbg !6815
  store %struct.Brush* %3, %struct.Brush** %brush, align 8, !dbg !6813
  call void @llvm.dbg.declare(metadata i8** %display_device, metadata !6816, metadata !DIExpression()), !dbg !6817
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6818
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 45, !dbg !6819
  %display_device3 = getelementptr inbounds %struct.ColorManagedDisplaySettings, %struct.ColorManagedDisplaySettings* %display_settings, i32 0, i32 0, !dbg !6820
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %display_device3, i64 0, i64 0, !dbg !6818
  store i8* %arraydecay, i8** %display_device, align 8, !dbg !6817
  call void @llvm.dbg.declare(metadata %struct.ColorManagedDisplay** %display, metadata !6821, metadata !DIExpression()), !dbg !6822
  %5 = load i8*, i8** %display_device, align 8, !dbg !6823
  %call = call %struct.ColorManagedDisplay* @IMB_colormanagement_display_get_named(i8* %5), !dbg !6824
  store %struct.ColorManagedDisplay* %call, %struct.ColorManagedDisplay** %display, align 8, !dbg !6822
  call void @llvm.dbg.declare(metadata %struct.rctf* %tex_mapping, metadata !6825, metadata !DIExpression()), !dbg !6826
  %6 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6827
  %tex_mapping4 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %6, i32 0, i32 6, !dbg !6828
  %7 = bitcast %struct.rctf* %tex_mapping to i8*, !dbg !6828
  %8 = bitcast %struct.rctf* %tex_mapping4 to i8*, !dbg !6828
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 8 %8, i64 16, i1 false), !dbg !6828
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool, metadata !6829, metadata !DIExpression()), !dbg !6830
  %9 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6831
  %pool5 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %9, i32 0, i32 5, !dbg !6832
  %10 = load %struct.ImagePool*, %struct.ImagePool** %pool5, align 8, !dbg !6832
  store %struct.ImagePool* %10, %struct.ImagePool** %pool, align 8, !dbg !6830
  call void @llvm.dbg.declare(metadata i8* %use_color_correction, metadata !6833, metadata !DIExpression()), !dbg !6834
  %11 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6835
  %cache = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %11, i32 0, i32 8, !dbg !6836
  %use_color_correction6 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache, i32 0, i32 1, !dbg !6837
  %12 = load i8, i8* %use_color_correction6, align 1, !dbg !6837
  store i8 %12, i8* %use_color_correction, align 1, !dbg !6834
  call void @llvm.dbg.declare(metadata i8* %use_float, metadata !6838, metadata !DIExpression()), !dbg !6839
  %13 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6840
  %cache7 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %13, i32 0, i32 8, !dbg !6841
  %use_float8 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache7, i32 0, i32 0, !dbg !6842
  %14 = load i8, i8* %use_float8, align 8, !dbg !6842
  store i8 %14, i8* %use_float, align 1, !dbg !6839
  call void @llvm.dbg.declare(metadata i8* %is_texbrush, metadata !6843, metadata !DIExpression()), !dbg !6844
  %15 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6845
  %cache9 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %15, i32 0, i32 8, !dbg !6846
  %is_texbrush10 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache9, i32 0, i32 3, !dbg !6847
  %16 = load i8, i8* %is_texbrush10, align 1, !dbg !6847
  store i8 %16, i8* %is_texbrush, align 1, !dbg !6844
  call void @llvm.dbg.declare(metadata i8* %use_texture_old, metadata !6848, metadata !DIExpression()), !dbg !6849
  %17 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf.addr, align 8, !dbg !6850
  %cmp = icmp ne %struct.ImBuf* %17, null, !dbg !6851
  %conv = zext i1 %cmp to i32, !dbg !6851
  %conv11 = trunc i32 %conv to i8, !dbg !6852
  store i8 %conv11, i8* %use_texture_old, align 1, !dbg !6849
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6853, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6855, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.declare(metadata i32* %thread, metadata !6857, metadata !DIExpression()), !dbg !6858
  store i32 0, i32* %thread, align 4, !dbg !6858
  call void @llvm.dbg.declare(metadata [3 x float]* %brush_rgb, metadata !6859, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !6861, metadata !DIExpression()), !dbg !6862
  %18 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6863
  %cache12 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %18, i32 0, i32 8, !dbg !6864
  %ibuf13 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache12, i32 0, i32 9, !dbg !6865
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf13, align 8, !dbg !6865
  store %struct.ImBuf* %19, %struct.ImBuf** %ibuf, align 8, !dbg !6862
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %texibuf, metadata !6866, metadata !DIExpression()), !dbg !6867
  %20 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6868
  %cache14 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %20, i32 0, i32 8, !dbg !6869
  %texibuf15 = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache14, i32 0, i32 10, !dbg !6870
  %21 = load %struct.ImBuf*, %struct.ImBuf** %texibuf15, align 8, !dbg !6870
  store %struct.ImBuf* %21, %struct.ImBuf** %texibuf, align 8, !dbg !6867
  %22 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6871
  %imagepaint_tool = getelementptr inbounds %struct.Brush, %struct.Brush* %22, i32 0, i32 36, !dbg !6873
  %23 = load i8, i8* %imagepaint_tool, align 2, !dbg !6873
  %conv16 = zext i8 %23 to i32, !dbg !6871
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !6874
  br i1 %cmp17, label %if.then, label %if.else, !dbg !6875

if.then:                                          ; preds = %entry
  %24 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6876
  %25 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6878
  %26 = load i8, i8* %use_color_correction, align 1, !dbg !6879
  %27 = load %struct.BrushPainter*, %struct.BrushPainter** %painter.addr, align 8, !dbg !6880
  %cache19 = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %27, i32 0, i32 8, !dbg !6881
  %invert = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache19, i32 0, i32 2, !dbg !6882
  %28 = load i8, i8* %invert, align 2, !dbg !6882
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 0, !dbg !6883
  %29 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6884
  call void @paint_brush_color_get(%struct.Scene* %24, %struct.Brush* %25, i8 zeroext %26, i8 zeroext %28, float 0.000000e+00, float 1.000000e+00, float* %arraydecay20, %struct.ColorManagedDisplay* %29), !dbg !6885
  br label %if.end, !dbg !6886

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 0, !dbg !6887
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !6889
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 1, !dbg !6890
  store float 1.000000e+00, float* %arrayidx21, align 4, !dbg !6891
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 2, !dbg !6892
  store float 1.000000e+00, float* %arrayidx22, align 4, !dbg !6893
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %30 = load i32, i32* %origy.addr, align 4, !dbg !6894
  store i32 %30, i32* %y, align 4, !dbg !6896
  br label %for.cond, !dbg !6897

for.cond:                                         ; preds = %for.inc134, %if.end
  %31 = load i32, i32* %y, align 4, !dbg !6898
  %32 = load i32, i32* %h.addr, align 4, !dbg !6900
  %cmp23 = icmp slt i32 %31, %32, !dbg !6901
  br i1 %cmp23, label %for.body, label %for.end136, !dbg !6902

for.body:                                         ; preds = %for.cond
  %33 = load i32, i32* %origx.addr, align 4, !dbg !6903
  store i32 %33, i32* %x, align 4, !dbg !6906
  br label %for.cond25, !dbg !6907

for.cond25:                                       ; preds = %for.inc, %for.body
  %34 = load i32, i32* %x, align 4, !dbg !6908
  %35 = load i32, i32* %w.addr, align 4, !dbg !6910
  %cmp26 = icmp slt i32 %34, %35, !dbg !6911
  br i1 %cmp26, label %for.body28, label %for.end, !dbg !6912

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata [3 x float]* %texco, metadata !6913, metadata !DIExpression()), !dbg !6915
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !6916, metadata !DIExpression()), !dbg !6917
  %36 = load i8, i8* %use_texture_old, align 1, !dbg !6918
  %tobool = icmp ne i8 %36, 0, !dbg !6918
  br i1 %tobool, label %if.end47, label %if.then29, !dbg !6920

if.then29:                                        ; preds = %for.body28
  %37 = load i8, i8* %is_texbrush, align 1, !dbg !6921
  %tobool30 = icmp ne i8 %37, 0, !dbg !6921
  br i1 %tobool30, label %if.then31, label %if.else42, !dbg !6924

if.then31:                                        ; preds = %if.then29
  %38 = load i32, i32* %x, align 4, !dbg !6925
  %39 = load i32, i32* %y, align 4, !dbg !6927
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %texco, i64 0, i64 0, !dbg !6928
  call void @brush_imbuf_tex_co(%struct.rctf* %tex_mapping, i32 %38, i32 %39, float* %arraydecay32), !dbg !6929
  %40 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6930
  %41 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !6931
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %texco, i64 0, i64 0, !dbg !6932
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6933
  %42 = load i32, i32* %thread, align 4, !dbg !6934
  %43 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !6935
  %call35 = call float @BKE_brush_sample_tex_3D(%struct.Scene* %40, %struct.Brush* %41, float* %arraydecay33, float* %arraydecay34, i32 %42, %struct.ImagePool* %43), !dbg !6936
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6937
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 0, !dbg !6938
  call void @mul_v3_v3(float* %arraydecay36, float* %arraydecay37), !dbg !6939
  %44 = load i8, i8* %use_float, align 1, !dbg !6940
  %tobool38 = icmp ne i8 %44, 0, !dbg !6940
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !6942

if.then39:                                        ; preds = %if.then31
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6943
  %45 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !6945
  call void @IMB_colormanagement_scene_linear_to_display_v3(float* %arraydecay40, %struct.ColorManagedDisplay* %45), !dbg !6946
  br label %if.end41, !dbg !6947

if.end41:                                         ; preds = %if.then39, %if.then31
  br label %if.end46, !dbg !6948

if.else42:                                        ; preds = %if.then29
  %arraydecay43 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !6949
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %brush_rgb, i64 0, i64 0, !dbg !6951
  call void @copy_v3_v3(float* %arraydecay43, float* %arraydecay44), !dbg !6952
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !6953
  store float 1.000000e+00, float* %arrayidx45, align 4, !dbg !6954
  br label %if.end46

if.end46:                                         ; preds = %if.else42, %if.end41
  br label %if.end47, !dbg !6955

if.end47:                                         ; preds = %if.end46, %for.body28
  %46 = load i8, i8* %use_float, align 1, !dbg !6956
  %tobool48 = icmp ne i8 %46, 0, !dbg !6956
  br i1 %tobool48, label %if.then49, label %if.else78, !dbg !6958

if.then49:                                        ; preds = %if.end47
  call void @llvm.dbg.declare(metadata float** %bf, metadata !6959, metadata !DIExpression()), !dbg !6961
  %47 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6962
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %47, i32 0, i32 9, !dbg !6963
  %48 = load float*, float** %rect_float, align 8, !dbg !6963
  %49 = load i32, i32* %y, align 4, !dbg !6964
  %50 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !6965
  %x50 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %50, i32 0, i32 2, !dbg !6966
  %51 = load i32, i32* %x50, align 8, !dbg !6966
  %mul = mul nsw i32 %49, %51, !dbg !6967
  %52 = load i32, i32* %x, align 4, !dbg !6968
  %add = add nsw i32 %mul, %52, !dbg !6969
  %mul51 = mul nsw i32 %add, 4, !dbg !6970
  %idx.ext = sext i32 %mul51 to i64, !dbg !6971
  %add.ptr = getelementptr inbounds float, float* %48, i64 %idx.ext, !dbg !6971
  store float* %add.ptr, float** %bf, align 8, !dbg !6961
  call void @llvm.dbg.declare(metadata float** %tf, metadata !6972, metadata !DIExpression()), !dbg !6973
  %53 = load %struct.ImBuf*, %struct.ImBuf** %texibuf, align 8, !dbg !6974
  %rect_float52 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %53, i32 0, i32 9, !dbg !6975
  %54 = load float*, float** %rect_float52, align 8, !dbg !6975
  %55 = load i32, i32* %y, align 4, !dbg !6976
  %56 = load %struct.ImBuf*, %struct.ImBuf** %texibuf, align 8, !dbg !6977
  %x53 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %56, i32 0, i32 2, !dbg !6978
  %57 = load i32, i32* %x53, align 8, !dbg !6978
  %mul54 = mul nsw i32 %55, %57, !dbg !6979
  %58 = load i32, i32* %x, align 4, !dbg !6980
  %add55 = add nsw i32 %mul54, %58, !dbg !6981
  %mul56 = mul nsw i32 %add55, 4, !dbg !6982
  %idx.ext57 = sext i32 %mul56 to i64, !dbg !6983
  %add.ptr58 = getelementptr inbounds float, float* %54, i64 %idx.ext57, !dbg !6983
  store float* %add.ptr58, float** %tf, align 8, !dbg !6973
  %59 = load i8, i8* %use_texture_old, align 1, !dbg !6984
  %tobool59 = icmp ne i8 %59, 0, !dbg !6984
  br i1 %tobool59, label %if.then60, label %if.end72, !dbg !6986

if.then60:                                        ; preds = %if.then49
  call void @llvm.dbg.declare(metadata float** %otf, metadata !6987, metadata !DIExpression()), !dbg !6989
  %60 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf.addr, align 8, !dbg !6990
  %rect_float61 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %60, i32 0, i32 9, !dbg !6991
  %61 = load float*, float** %rect_float61, align 8, !dbg !6991
  %62 = load i32, i32* %y, align 4, !dbg !6992
  %63 = load i32, i32* %origy.addr, align 4, !dbg !6993
  %sub = sub nsw i32 %62, %63, !dbg !6994
  %64 = load i32, i32* %yt.addr, align 4, !dbg !6995
  %add62 = add nsw i32 %sub, %64, !dbg !6996
  %65 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf.addr, align 8, !dbg !6997
  %x63 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %65, i32 0, i32 2, !dbg !6998
  %66 = load i32, i32* %x63, align 8, !dbg !6998
  %mul64 = mul nsw i32 %add62, %66, !dbg !6999
  %67 = load i32, i32* %x, align 4, !dbg !7000
  %68 = load i32, i32* %origx.addr, align 4, !dbg !7001
  %sub65 = sub nsw i32 %67, %68, !dbg !7002
  %69 = load i32, i32* %xt.addr, align 4, !dbg !7003
  %add66 = add nsw i32 %sub65, %69, !dbg !7004
  %add67 = add nsw i32 %mul64, %add66, !dbg !7005
  %mul68 = mul nsw i32 %add67, 4, !dbg !7006
  %idx.ext69 = sext i32 %mul68 to i64, !dbg !7007
  %add.ptr70 = getelementptr inbounds float, float* %61, i64 %idx.ext69, !dbg !7007
  store float* %add.ptr70, float** %otf, align 8, !dbg !6989
  %arraydecay71 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7008
  %70 = load float*, float** %otf, align 8, !dbg !7009
  call void @copy_v4_v4(float* %arraydecay71, float* %70), !dbg !7010
  br label %if.end72, !dbg !7011

if.end72:                                         ; preds = %if.then60, %if.then49
  %71 = load float*, float** %tf, align 8, !dbg !7012
  %arraydecay73 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7013
  call void @copy_v4_v4(float* %71, float* %arraydecay73), !dbg !7014
  %72 = load float*, float** %bf, align 8, !dbg !7015
  %arraydecay74 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7016
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !7017
  %73 = load float, float* %arrayidx75, align 4, !dbg !7017
  call void @mul_v3_v3fl(float* %72, float* %arraydecay74, float %73), !dbg !7018
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !7019
  %74 = load float, float* %arrayidx76, align 4, !dbg !7019
  %75 = load float*, float** %bf, align 8, !dbg !7020
  %arrayidx77 = getelementptr inbounds float, float* %75, i64 3, !dbg !7020
  store float %74, float* %arrayidx77, align 4, !dbg !7021
  br label %if.end133, !dbg !7022

if.else78:                                        ; preds = %if.end47
  call void @llvm.dbg.declare(metadata [4 x i8]* %crgba, metadata !7023, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.declare(metadata i8** %b, metadata !7026, metadata !DIExpression()), !dbg !7027
  %76 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7028
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %76, i32 0, i32 8, !dbg !7029
  %77 = load i32*, i32** %rect, align 8, !dbg !7029
  %78 = bitcast i32* %77 to i8*, !dbg !7030
  %79 = load i32, i32* %y, align 4, !dbg !7031
  %80 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7032
  %x79 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %80, i32 0, i32 2, !dbg !7033
  %81 = load i32, i32* %x79, align 8, !dbg !7033
  %mul80 = mul nsw i32 %79, %81, !dbg !7034
  %82 = load i32, i32* %x, align 4, !dbg !7035
  %add81 = add nsw i32 %mul80, %82, !dbg !7036
  %mul82 = mul nsw i32 %add81, 4, !dbg !7037
  %idx.ext83 = sext i32 %mul82 to i64, !dbg !7038
  %add.ptr84 = getelementptr inbounds i8, i8* %78, i64 %idx.ext83, !dbg !7038
  store i8* %add.ptr84, i8** %b, align 8, !dbg !7027
  call void @llvm.dbg.declare(metadata i8** %t, metadata !7039, metadata !DIExpression()), !dbg !7040
  %83 = load %struct.ImBuf*, %struct.ImBuf** %texibuf, align 8, !dbg !7041
  %rect85 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %83, i32 0, i32 8, !dbg !7042
  %84 = load i32*, i32** %rect85, align 8, !dbg !7042
  %85 = bitcast i32* %84 to i8*, !dbg !7043
  %86 = load i32, i32* %y, align 4, !dbg !7044
  %87 = load %struct.ImBuf*, %struct.ImBuf** %texibuf, align 8, !dbg !7045
  %x86 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %87, i32 0, i32 2, !dbg !7046
  %88 = load i32, i32* %x86, align 8, !dbg !7046
  %mul87 = mul nsw i32 %86, %88, !dbg !7047
  %89 = load i32, i32* %x, align 4, !dbg !7048
  %add88 = add nsw i32 %mul87, %89, !dbg !7049
  %mul89 = mul nsw i32 %add88, 4, !dbg !7050
  %idx.ext90 = sext i32 %mul89 to i64, !dbg !7051
  %add.ptr91 = getelementptr inbounds i8, i8* %85, i64 %idx.ext90, !dbg !7051
  store i8* %add.ptr91, i8** %t, align 8, !dbg !7040
  %90 = load i8, i8* %use_texture_old, align 1, !dbg !7052
  %tobool92 = icmp ne i8 %90, 0, !dbg !7052
  br i1 %tobool92, label %if.then93, label %if.else113, !dbg !7054

if.then93:                                        ; preds = %if.else78
  call void @llvm.dbg.declare(metadata i8** %ot, metadata !7055, metadata !DIExpression()), !dbg !7057
  %91 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf.addr, align 8, !dbg !7058
  %rect94 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %91, i32 0, i32 8, !dbg !7059
  %92 = load i32*, i32** %rect94, align 8, !dbg !7059
  %93 = bitcast i32* %92 to i8*, !dbg !7060
  %94 = load i32, i32* %y, align 4, !dbg !7061
  %95 = load i32, i32* %origy.addr, align 4, !dbg !7062
  %sub95 = sub nsw i32 %94, %95, !dbg !7063
  %96 = load i32, i32* %yt.addr, align 4, !dbg !7064
  %add96 = add nsw i32 %sub95, %96, !dbg !7065
  %97 = load %struct.ImBuf*, %struct.ImBuf** %oldtexibuf.addr, align 8, !dbg !7066
  %x97 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %97, i32 0, i32 2, !dbg !7067
  %98 = load i32, i32* %x97, align 8, !dbg !7067
  %mul98 = mul nsw i32 %add96, %98, !dbg !7068
  %99 = load i32, i32* %x, align 4, !dbg !7069
  %100 = load i32, i32* %origx.addr, align 4, !dbg !7070
  %sub99 = sub nsw i32 %99, %100, !dbg !7071
  %101 = load i32, i32* %xt.addr, align 4, !dbg !7072
  %add100 = add nsw i32 %sub99, %101, !dbg !7073
  %add101 = add nsw i32 %mul98, %add100, !dbg !7074
  %mul102 = mul nsw i32 %add101, 4, !dbg !7075
  %idx.ext103 = sext i32 %mul102 to i64, !dbg !7076
  %add.ptr104 = getelementptr inbounds i8, i8* %93, i64 %idx.ext103, !dbg !7076
  store i8* %add.ptr104, i8** %ot, align 8, !dbg !7057
  %102 = load i8*, i8** %ot, align 8, !dbg !7077
  %arrayidx105 = getelementptr inbounds i8, i8* %102, i64 0, !dbg !7077
  %103 = load i8, i8* %arrayidx105, align 1, !dbg !7077
  %arrayidx106 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 0, !dbg !7078
  store i8 %103, i8* %arrayidx106, align 1, !dbg !7079
  %104 = load i8*, i8** %ot, align 8, !dbg !7080
  %arrayidx107 = getelementptr inbounds i8, i8* %104, i64 1, !dbg !7080
  %105 = load i8, i8* %arrayidx107, align 1, !dbg !7080
  %arrayidx108 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 1, !dbg !7081
  store i8 %105, i8* %arrayidx108, align 1, !dbg !7082
  %106 = load i8*, i8** %ot, align 8, !dbg !7083
  %arrayidx109 = getelementptr inbounds i8, i8* %106, i64 2, !dbg !7083
  %107 = load i8, i8* %arrayidx109, align 1, !dbg !7083
  %arrayidx110 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 2, !dbg !7084
  store i8 %107, i8* %arrayidx110, align 1, !dbg !7085
  %108 = load i8*, i8** %ot, align 8, !dbg !7086
  %arrayidx111 = getelementptr inbounds i8, i8* %108, i64 3, !dbg !7086
  %109 = load i8, i8* %arrayidx111, align 1, !dbg !7086
  %arrayidx112 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 3, !dbg !7087
  store i8 %109, i8* %arrayidx112, align 1, !dbg !7088
  br label %if.end116, !dbg !7089

if.else113:                                       ; preds = %if.else78
  %arraydecay114 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 0, !dbg !7090
  %arraydecay115 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7091
  call void @rgba_float_to_uchar(i8* %arraydecay114, float* %arraydecay115), !dbg !7092
  br label %if.end116

if.end116:                                        ; preds = %if.else113, %if.then93
  %arrayidx117 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 0, !dbg !7093
  %110 = load i8, i8* %arrayidx117, align 1, !dbg !7093
  %111 = load i8*, i8** %t, align 8, !dbg !7094
  %arrayidx118 = getelementptr inbounds i8, i8* %111, i64 0, !dbg !7094
  store i8 %110, i8* %arrayidx118, align 1, !dbg !7095
  %arrayidx119 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 1, !dbg !7096
  %112 = load i8, i8* %arrayidx119, align 1, !dbg !7096
  %113 = load i8*, i8** %t, align 8, !dbg !7097
  %arrayidx120 = getelementptr inbounds i8, i8* %113, i64 1, !dbg !7097
  store i8 %112, i8* %arrayidx120, align 1, !dbg !7098
  %arrayidx121 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 2, !dbg !7099
  %114 = load i8, i8* %arrayidx121, align 1, !dbg !7099
  %115 = load i8*, i8** %t, align 8, !dbg !7100
  %arrayidx122 = getelementptr inbounds i8, i8* %115, i64 2, !dbg !7100
  store i8 %114, i8* %arrayidx122, align 1, !dbg !7101
  %arrayidx123 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 3, !dbg !7102
  %116 = load i8, i8* %arrayidx123, align 1, !dbg !7102
  %117 = load i8*, i8** %t, align 8, !dbg !7103
  %arrayidx124 = getelementptr inbounds i8, i8* %117, i64 3, !dbg !7103
  store i8 %116, i8* %arrayidx124, align 1, !dbg !7104
  %arrayidx125 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 0, !dbg !7105
  %118 = load i8, i8* %arrayidx125, align 1, !dbg !7105
  %119 = load i8*, i8** %b, align 8, !dbg !7106
  %arrayidx126 = getelementptr inbounds i8, i8* %119, i64 0, !dbg !7106
  store i8 %118, i8* %arrayidx126, align 1, !dbg !7107
  %arrayidx127 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 1, !dbg !7108
  %120 = load i8, i8* %arrayidx127, align 1, !dbg !7108
  %121 = load i8*, i8** %b, align 8, !dbg !7109
  %arrayidx128 = getelementptr inbounds i8, i8* %121, i64 1, !dbg !7109
  store i8 %120, i8* %arrayidx128, align 1, !dbg !7110
  %arrayidx129 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 2, !dbg !7111
  %122 = load i8, i8* %arrayidx129, align 1, !dbg !7111
  %123 = load i8*, i8** %b, align 8, !dbg !7112
  %arrayidx130 = getelementptr inbounds i8, i8* %123, i64 2, !dbg !7112
  store i8 %122, i8* %arrayidx130, align 1, !dbg !7113
  %arrayidx131 = getelementptr inbounds [4 x i8], [4 x i8]* %crgba, i64 0, i64 3, !dbg !7114
  %124 = load i8, i8* %arrayidx131, align 1, !dbg !7114
  %125 = load i8*, i8** %b, align 8, !dbg !7115
  %arrayidx132 = getelementptr inbounds i8, i8* %125, i64 3, !dbg !7115
  store i8 %124, i8* %arrayidx132, align 1, !dbg !7116
  br label %if.end133

if.end133:                                        ; preds = %if.end116, %if.end72
  br label %for.inc, !dbg !7117

for.inc:                                          ; preds = %if.end133
  %126 = load i32, i32* %x, align 4, !dbg !7118
  %inc = add nsw i32 %126, 1, !dbg !7118
  store i32 %inc, i32* %x, align 4, !dbg !7118
  br label %for.cond25, !dbg !7119, !llvm.loop !7120

for.end:                                          ; preds = %for.cond25
  br label %for.inc134, !dbg !7122

for.inc134:                                       ; preds = %for.end
  %127 = load i32, i32* %y, align 4, !dbg !7123
  %inc135 = add nsw i32 %127, 1, !dbg !7123
  store i32 %inc135, i32* %y, align 4, !dbg !7123
  br label %for.cond, !dbg !7124, !llvm.loop !7125

for.end136:                                       ; preds = %for.cond
  ret void, !dbg !7127
}

declare dso_local %struct.ColorManagedDisplay* @IMB_colormanagement_display_get_named(i8*) #2

declare dso_local void @paint_brush_color_get(%struct.Scene*, %struct.Brush*, i8 zeroext, i8 zeroext, float, float, float*, %struct.ColorManagedDisplay*) #2

declare dso_local float @BKE_brush_sample_tex_3D(%struct.Scene*, %struct.Brush*, float*, float*, i32, %struct.ImagePool*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3(float* %r, float* %a) #0 !dbg !7128 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7129, metadata !DIExpression()), !dbg !7130
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7131, metadata !DIExpression()), !dbg !7132
  %0 = load float*, float** %a.addr, align 8, !dbg !7133
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7133
  %1 = load float, float* %arrayidx, align 4, !dbg !7133
  %2 = load float*, float** %r.addr, align 8, !dbg !7134
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7134
  %3 = load float, float* %arrayidx1, align 4, !dbg !7135
  %mul = fmul float %3, %1, !dbg !7135
  store float %mul, float* %arrayidx1, align 4, !dbg !7135
  %4 = load float*, float** %a.addr, align 8, !dbg !7136
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7136
  %5 = load float, float* %arrayidx2, align 4, !dbg !7136
  %6 = load float*, float** %r.addr, align 8, !dbg !7137
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7137
  %7 = load float, float* %arrayidx3, align 4, !dbg !7138
  %mul4 = fmul float %7, %5, !dbg !7138
  store float %mul4, float* %arrayidx3, align 4, !dbg !7138
  %8 = load float*, float** %a.addr, align 8, !dbg !7139
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7139
  %9 = load float, float* %arrayidx5, align 4, !dbg !7139
  %10 = load float*, float** %r.addr, align 8, !dbg !7140
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !7140
  %11 = load float, float* %arrayidx6, align 4, !dbg !7141
  %mul7 = fmul float %11, %9, !dbg !7141
  store float %mul7, float* %arrayidx6, align 4, !dbg !7141
  ret void, !dbg !7142
}

declare dso_local void @IMB_colormanagement_scene_linear_to_display_v3(float*, %struct.ColorManagedDisplay*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !7143 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7146, metadata !DIExpression()), !dbg !7147
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7148, metadata !DIExpression()), !dbg !7149
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7150, metadata !DIExpression()), !dbg !7151
  %0 = load float*, float** %a.addr, align 8, !dbg !7152
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7152
  %1 = load float, float* %arrayidx, align 4, !dbg !7152
  %2 = load float, float* %f.addr, align 4, !dbg !7153
  %mul = fmul float %1, %2, !dbg !7154
  %3 = load float*, float** %r.addr, align 8, !dbg !7155
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !7155
  store float %mul, float* %arrayidx1, align 4, !dbg !7156
  %4 = load float*, float** %a.addr, align 8, !dbg !7157
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7157
  %5 = load float, float* %arrayidx2, align 4, !dbg !7157
  %6 = load float, float* %f.addr, align 4, !dbg !7158
  %mul3 = fmul float %5, %6, !dbg !7159
  %7 = load float*, float** %r.addr, align 8, !dbg !7160
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7160
  store float %mul3, float* %arrayidx4, align 4, !dbg !7161
  %8 = load float*, float** %a.addr, align 8, !dbg !7162
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7162
  %9 = load float, float* %arrayidx5, align 4, !dbg !7162
  %10 = load float, float* %f.addr, align 4, !dbg !7163
  %mul6 = fmul float %9, %10, !dbg !7164
  %11 = load float*, float** %r.addr, align 8, !dbg !7165
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !7165
  store float %mul6, float* %arrayidx7, align 4, !dbg !7166
  ret void, !dbg !7167
}

declare dso_local void @rgb_float_to_uchar(i8*, float*) #2

declare dso_local float @BKE_brush_alpha_get(%struct.Scene*, %struct.Brush*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_convert_brushco(%struct.ImBuf* %ibufb, float* %pos, i32* %ipos) #0 !dbg !7168 {
entry:
  %ibufb.addr = alloca %struct.ImBuf*, align 8
  %pos.addr = alloca float*, align 8
  %ipos.addr = alloca i32*, align 8
  store %struct.ImBuf* %ibufb, %struct.ImBuf** %ibufb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibufb.addr, metadata !7171, metadata !DIExpression()), !dbg !7172
  store float* %pos, float** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pos.addr, metadata !7173, metadata !DIExpression()), !dbg !7174
  store i32* %ipos, i32** %ipos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ipos.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  %0 = load float*, float** %pos.addr, align 8, !dbg !7177
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7177
  %1 = load float, float* %arrayidx, align 4, !dbg !7177
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7178
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %2, i32 0, i32 2, !dbg !7179
  %3 = load i32, i32* %x, align 8, !dbg !7179
  %div = sdiv i32 %3, 2, !dbg !7180
  %conv = sitofp i32 %div to float, !dbg !7178
  %sub = fsub float %1, %conv, !dbg !7181
  %add = fadd float %sub, 1.000000e+00, !dbg !7182
  %4 = call float @llvm.floor.f32(float %add), !dbg !7183
  %conv1 = fptosi float %4 to i32, !dbg !7184
  %5 = load i32*, i32** %ipos.addr, align 8, !dbg !7185
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 0, !dbg !7185
  store i32 %conv1, i32* %arrayidx2, align 4, !dbg !7186
  %6 = load float*, float** %pos.addr, align 8, !dbg !7187
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7187
  %7 = load float, float* %arrayidx3, align 4, !dbg !7187
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7188
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 3, !dbg !7189
  %9 = load i32, i32* %y, align 4, !dbg !7189
  %div4 = sdiv i32 %9, 2, !dbg !7190
  %conv5 = sitofp i32 %div4 to float, !dbg !7188
  %sub6 = fsub float %7, %conv5, !dbg !7191
  %add7 = fadd float %sub6, 1.000000e+00, !dbg !7192
  %10 = call float @llvm.floor.f32(float %add7), !dbg !7193
  %conv8 = fptosi float %10 to i32, !dbg !7194
  %11 = load i32*, i32** %ipos.addr, align 8, !dbg !7195
  %arrayidx9 = getelementptr inbounds i32, i32* %11, i64 1, !dbg !7195
  store i32 %conv8, i32* %arrayidx9, align 4, !dbg !7196
  ret void, !dbg !7197
}

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_lift_soften(%struct.ImagePaintState* %s, %struct.ImBuf* %ibuf, %struct.ImBuf* %ibufb, i32* %pos, i16 signext %is_torus) #0 !dbg !7198 {
entry:
  %s.addr = alloca %struct.ImagePaintState*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %ibufb.addr = alloca %struct.ImBuf*, align 8
  %pos.addr = alloca i32*, align 8
  %is_torus.addr = alloca i16, align 2
  %sharpen = alloca i8, align 1
  %threshold = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %xi = alloca i32, align 4
  %yi = alloca i32, align 4
  %xo = alloca i32, align 4
  %yo = alloca i32, align 4
  %xk = alloca i32, align 4
  %yk = alloca i32, align 4
  %count = alloca float, align 4
  %out_off = alloca [2 x i32], align 4
  %in_off = alloca [2 x i32], align 4
  %dim = alloca [2 x i32], align 4
  %diff_pos = alloca [2 x i32], align 4
  %outrgb = alloca [4 x float], align 16
  %rgba = alloca [4 x float], align 16
  %kernel = alloca %struct.BlurKernel*, align 8
  %mask = alloca float, align 4
  %alpha = alloca float, align 4
  store %struct.ImagePaintState* %s, %struct.ImagePaintState** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintState** %s.addr, metadata !7202, metadata !DIExpression()), !dbg !7203
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7204, metadata !DIExpression()), !dbg !7205
  store %struct.ImBuf* %ibufb, %struct.ImBuf** %ibufb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibufb.addr, metadata !7206, metadata !DIExpression()), !dbg !7207
  store i32* %pos, i32** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pos.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  store i16 %is_torus, i16* %is_torus.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %is_torus.addr, metadata !7210, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.declare(metadata i8* %sharpen, metadata !7212, metadata !DIExpression()), !dbg !7213
  %0 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !7214
  %painter = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %0, i32 0, i32 0, !dbg !7215
  %1 = load %struct.BrushPainter*, %struct.BrushPainter** %painter, align 8, !dbg !7215
  %cache = getelementptr inbounds %struct.BrushPainter, %struct.BrushPainter* %1, i32 0, i32 8, !dbg !7216
  %invert = getelementptr inbounds %struct.BrushPainterCache, %struct.BrushPainterCache* %cache, i32 0, i32 2, !dbg !7217
  %2 = load i8, i8* %invert, align 2, !dbg !7217
  %conv = zext i8 %2 to i32, !dbg !7214
  %3 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !7218
  %brush = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %3, i32 0, i32 6, !dbg !7219
  %4 = load %struct.Brush*, %struct.Brush** %brush, align 8, !dbg !7219
  %flag = getelementptr inbounds %struct.Brush, %struct.Brush* %4, i32 0, i32 16, !dbg !7220
  %5 = load i32, i32* %flag, align 8, !dbg !7220
  %and = and i32 %5, 512, !dbg !7221
  %cmp = icmp ne i32 %and, 0, !dbg !7222
  %conv1 = zext i1 %cmp to i32, !dbg !7222
  %xor = xor i32 %conv, %conv1, !dbg !7223
  %conv2 = trunc i32 %xor to i8, !dbg !7224
  store i8 %conv2, i8* %sharpen, align 1, !dbg !7213
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !7225, metadata !DIExpression()), !dbg !7226
  %6 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !7227
  %brush3 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %6, i32 0, i32 6, !dbg !7228
  %7 = load %struct.Brush*, %struct.Brush** %brush3, align 8, !dbg !7228
  %sharp_threshold = getelementptr inbounds %struct.Brush, %struct.Brush* %7, i32 0, i32 47, !dbg !7229
  %8 = load float, float* %sharp_threshold, align 8, !dbg !7229
  store float %8, float* %threshold, align 4, !dbg !7226
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7230, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7232, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.declare(metadata i32* %xi, metadata !7234, metadata !DIExpression()), !dbg !7235
  call void @llvm.dbg.declare(metadata i32* %yi, metadata !7236, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !7238, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.declare(metadata i32* %yo, metadata !7240, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.declare(metadata i32* %xk, metadata !7242, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.declare(metadata i32* %yk, metadata !7244, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.declare(metadata float* %count, metadata !7246, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.declare(metadata [2 x i32]* %out_off, metadata !7248, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.declare(metadata [2 x i32]* %in_off, metadata !7250, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.declare(metadata [2 x i32]* %dim, metadata !7252, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.declare(metadata [2 x i32]* %diff_pos, metadata !7254, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.declare(metadata [4 x float]* %outrgb, metadata !7256, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.declare(metadata [4 x float]* %rgba, metadata !7258, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.declare(metadata %struct.BlurKernel** %kernel, metadata !7260, metadata !DIExpression()), !dbg !7261
  %9 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !7262
  %blurkernel = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %9, i32 0, i32 20, !dbg !7263
  %10 = load %struct.BlurKernel*, %struct.BlurKernel** %blurkernel, align 8, !dbg !7263
  store %struct.BlurKernel* %10, %struct.BlurKernel** %kernel, align 8, !dbg !7261
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7264
  %x4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 2, !dbg !7265
  %12 = load i32, i32* %x4, align 8, !dbg !7265
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %dim, i64 0, i64 0, !dbg !7266
  store i32 %12, i32* %arrayidx, align 4, !dbg !7267
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7268
  %y5 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 3, !dbg !7269
  %14 = load i32, i32* %y5, align 4, !dbg !7269
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %dim, i64 0, i64 1, !dbg !7270
  store i32 %14, i32* %arrayidx6, align 4, !dbg !7271
  %15 = load i32*, i32** %pos.addr, align 8, !dbg !7272
  %arrayidx7 = getelementptr inbounds i32, i32* %15, i64 0, !dbg !7272
  %16 = load i32, i32* %arrayidx7, align 4, !dbg !7272
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %in_off, i64 0, i64 0, !dbg !7273
  store i32 %16, i32* %arrayidx8, align 4, !dbg !7274
  %17 = load i32*, i32** %pos.addr, align 8, !dbg !7275
  %arrayidx9 = getelementptr inbounds i32, i32* %17, i64 1, !dbg !7275
  %18 = load i32, i32* %arrayidx9, align 4, !dbg !7275
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %in_off, i64 0, i64 1, !dbg !7276
  store i32 %18, i32* %arrayidx10, align 4, !dbg !7277
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %out_off, i64 0, i64 1, !dbg !7278
  store i32 0, i32* %arrayidx11, align 4, !dbg !7279
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %out_off, i64 0, i64 0, !dbg !7280
  store i32 0, i32* %arrayidx12, align 4, !dbg !7281
  %19 = load i16, i16* %is_torus.addr, align 2, !dbg !7282
  %tobool = icmp ne i16 %19, 0, !dbg !7282
  br i1 %tobool, label %if.end26, label %if.then, !dbg !7284

if.then:                                          ; preds = %entry
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7285
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7287
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %in_off, i64 0, i64 0, !dbg !7288
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %in_off, i64 0, i64 1, !dbg !7289
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %out_off, i64 0, i64 0, !dbg !7290
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %out_off, i64 0, i64 1, !dbg !7291
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %dim, i64 0, i64 0, !dbg !7292
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %dim, i64 0, i64 1, !dbg !7293
  call void @IMB_rectclip(%struct.ImBuf* %20, %struct.ImBuf* %21, i32* %arrayidx13, i32* %arrayidx14, i32* %arrayidx15, i32* %arrayidx16, i32* %arrayidx17, i32* %arrayidx18), !dbg !7294
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %dim, i64 0, i64 0, !dbg !7295
  %22 = load i32, i32* %arrayidx19, align 4, !dbg !7295
  %cmp20 = icmp eq i32 %22, 0, !dbg !7297
  br i1 %cmp20, label %if.then25, label %lor.lhs.false, !dbg !7298

lor.lhs.false:                                    ; preds = %if.then
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %dim, i64 0, i64 1, !dbg !7299
  %23 = load i32, i32* %arrayidx22, align 4, !dbg !7299
  %cmp23 = icmp eq i32 %23, 0, !dbg !7300
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !7301

if.then25:                                        ; preds = %lor.lhs.false, %if.then
  br label %for.end109, !dbg !7302

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end26, !dbg !7303

if.end26:                                         ; preds = %if.end, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %diff_pos, i64 0, i64 0, !dbg !7304
  %arraydecay27 = getelementptr inbounds [2 x i32], [2 x i32]* %out_off, i64 0, i64 0, !dbg !7305
  %arraydecay28 = getelementptr inbounds [2 x i32], [2 x i32]* %in_off, i64 0, i64 0, !dbg !7306
  call void @sub_v2_v2v2_int(i32* %arraydecay, i32* %arraydecay27, i32* %arraydecay28), !dbg !7307
  store i32 0, i32* %y, align 4, !dbg !7308
  br label %for.cond, !dbg !7310

for.cond:                                         ; preds = %for.inc107, %if.end26
  %24 = load i32, i32* %y, align 4, !dbg !7311
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %dim, i64 0, i64 1, !dbg !7313
  %25 = load i32, i32* %arrayidx29, align 4, !dbg !7313
  %cmp30 = icmp slt i32 %24, %25, !dbg !7314
  br i1 %cmp30, label %for.body, label %for.end109, !dbg !7315

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !7316
  br label %for.cond32, !dbg !7319

for.cond32:                                       ; preds = %for.inc104, %for.body
  %26 = load i32, i32* %x, align 4, !dbg !7320
  %arrayidx33 = getelementptr inbounds [2 x i32], [2 x i32]* %dim, i64 0, i64 0, !dbg !7322
  %27 = load i32, i32* %arrayidx33, align 4, !dbg !7322
  %cmp34 = icmp slt i32 %26, %27, !dbg !7323
  br i1 %cmp34, label %for.body36, label %for.end106, !dbg !7324

for.body36:                                       ; preds = %for.cond32
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %in_off, i64 0, i64 0, !dbg !7325
  %28 = load i32, i32* %arrayidx37, align 4, !dbg !7325
  %29 = load i32, i32* %x, align 4, !dbg !7327
  %add = add nsw i32 %28, %29, !dbg !7328
  store i32 %add, i32* %xi, align 4, !dbg !7329
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %in_off, i64 0, i64 1, !dbg !7330
  %30 = load i32, i32* %arrayidx38, align 4, !dbg !7330
  %31 = load i32, i32* %y, align 4, !dbg !7331
  %add39 = add nsw i32 %30, %31, !dbg !7332
  store i32 %add39, i32* %yi, align 4, !dbg !7333
  store float 0.000000e+00, float* %count, align 4, !dbg !7334
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7335
  %33 = load i32, i32* %xi, align 4, !dbg !7336
  %34 = load i32, i32* %yi, align 4, !dbg !7337
  %35 = load i16, i16* %is_torus.addr, align 2, !dbg !7338
  %conv40 = trunc i16 %35 to i8, !dbg !7338
  %arraydecay41 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7339
  call void @paint_2d_ibuf_rgb_get(%struct.ImBuf* %32, i32 %33, i32 %34, i8 zeroext %conv40, float* %arraydecay41), !dbg !7340
  %arraydecay42 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7341
  call void @zero_v4(float* %arraydecay42), !dbg !7342
  store i32 0, i32* %yk, align 4, !dbg !7343
  br label %for.cond43, !dbg !7345

for.cond43:                                       ; preds = %for.inc61, %for.body36
  %36 = load i32, i32* %yk, align 4, !dbg !7346
  %37 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !7348
  %side = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %37, i32 0, i32 1, !dbg !7349
  %38 = load i32, i32* %side, align 8, !dbg !7349
  %cmp44 = icmp slt i32 %36, %38, !dbg !7350
  br i1 %cmp44, label %for.body46, label %for.end63, !dbg !7351

for.body46:                                       ; preds = %for.cond43
  store i32 0, i32* %xk, align 4, !dbg !7352
  br label %for.cond47, !dbg !7355

for.cond47:                                       ; preds = %for.inc, %for.body46
  %39 = load i32, i32* %xk, align 4, !dbg !7356
  %40 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !7358
  %side48 = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %40, i32 0, i32 1, !dbg !7359
  %41 = load i32, i32* %side48, align 8, !dbg !7359
  %cmp49 = icmp slt i32 %39, %41, !dbg !7360
  br i1 %cmp49, label %for.body51, label %for.end, !dbg !7361

for.body51:                                       ; preds = %for.cond47
  %42 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7362
  %43 = load i32, i32* %xi, align 4, !dbg !7364
  %44 = load i32, i32* %xk, align 4, !dbg !7365
  %add52 = add nsw i32 %43, %44, !dbg !7366
  %45 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !7367
  %pixel_len = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %45, i32 0, i32 3, !dbg !7368
  %46 = load i32, i32* %pixel_len, align 8, !dbg !7368
  %sub = sub nsw i32 %add52, %46, !dbg !7369
  %47 = load i32, i32* %yi, align 4, !dbg !7370
  %48 = load i32, i32* %yk, align 4, !dbg !7371
  %add53 = add nsw i32 %47, %48, !dbg !7372
  %49 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !7373
  %pixel_len54 = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %49, i32 0, i32 3, !dbg !7374
  %50 = load i32, i32* %pixel_len54, align 8, !dbg !7374
  %sub55 = sub nsw i32 %add53, %50, !dbg !7375
  %arraydecay56 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7376
  %51 = load i16, i16* %is_torus.addr, align 2, !dbg !7377
  %52 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !7378
  %wdata = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %52, i32 0, i32 0, !dbg !7379
  %53 = load float*, float** %wdata, align 8, !dbg !7379
  %54 = load i32, i32* %xk, align 4, !dbg !7380
  %55 = load i32, i32* %yk, align 4, !dbg !7381
  %56 = load %struct.BlurKernel*, %struct.BlurKernel** %kernel, align 8, !dbg !7382
  %side57 = getelementptr inbounds %struct.BlurKernel, %struct.BlurKernel* %56, i32 0, i32 1, !dbg !7383
  %57 = load i32, i32* %side57, align 8, !dbg !7383
  %mul = mul nsw i32 %55, %57, !dbg !7384
  %add58 = add nsw i32 %54, %mul, !dbg !7385
  %idxprom = sext i32 %add58 to i64, !dbg !7378
  %arrayidx59 = getelementptr inbounds float, float* %53, i64 %idxprom, !dbg !7378
  %58 = load float, float* %arrayidx59, align 4, !dbg !7378
  %call = call float @paint_2d_ibuf_add_if(%struct.ImBuf* %42, i32 %sub, i32 %sub55, float* %arraydecay56, i16 signext %51, float %58), !dbg !7386
  %59 = load float, float* %count, align 4, !dbg !7387
  %add60 = fadd float %59, %call, !dbg !7387
  store float %add60, float* %count, align 4, !dbg !7387
  br label %for.inc, !dbg !7388

for.inc:                                          ; preds = %for.body51
  %60 = load i32, i32* %xk, align 4, !dbg !7389
  %inc = add nsw i32 %60, 1, !dbg !7389
  store i32 %inc, i32* %xk, align 4, !dbg !7389
  br label %for.cond47, !dbg !7390, !llvm.loop !7391

for.end:                                          ; preds = %for.cond47
  br label %for.inc61, !dbg !7393

for.inc61:                                        ; preds = %for.end
  %61 = load i32, i32* %yk, align 4, !dbg !7394
  %inc62 = add nsw i32 %61, 1, !dbg !7394
  store i32 %inc62, i32* %yk, align 4, !dbg !7394
  br label %for.cond43, !dbg !7395, !llvm.loop !7396

for.end63:                                        ; preds = %for.cond43
  %62 = load float, float* %count, align 4, !dbg !7398
  %cmp64 = fcmp ogt float %62, 0.000000e+00, !dbg !7400
  br i1 %cmp64, label %if.then66, label %if.else95, !dbg !7401

if.then66:                                        ; preds = %for.end63
  %arraydecay67 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7402
  %63 = load float, float* %count, align 4, !dbg !7404
  %div = fdiv float 1.000000e+00, %63, !dbg !7405
  call void @mul_v4_fl(float* %arraydecay67, float %div), !dbg !7406
  %64 = load i8, i8* %sharpen, align 1, !dbg !7407
  %tobool68 = icmp ne i8 %64, 0, !dbg !7407
  br i1 %tobool68, label %if.then69, label %if.end94, !dbg !7409

if.then69:                                        ; preds = %if.then66
  %arraydecay70 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7410
  %arraydecay71 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7412
  %arraydecay72 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7413
  call void @sub_v3_v3v3(float* %arraydecay70, float* %arraydecay71, float* %arraydecay72), !dbg !7414
  %arraydecay73 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7415
  %call74 = call float @rgb_to_grayscale(float* %arraydecay73), !dbg !7416
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 2, !dbg !7417
  store float %call74, float* %arrayidx75, align 8, !dbg !7418
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 1, !dbg !7419
  store float %call74, float* %arrayidx76, align 4, !dbg !7420
  %arrayidx77 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7421
  store float %call74, float* %arrayidx77, align 16, !dbg !7422
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7423
  %65 = load float, float* %arrayidx78, align 16, !dbg !7423
  %66 = call float @llvm.fabs.f32(float %65), !dbg !7425
  %67 = load float, float* %threshold, align 4, !dbg !7426
  %cmp79 = fcmp ogt float %66, %67, !dbg !7427
  br i1 %cmp79, label %if.then81, label %if.else, !dbg !7428

if.then81:                                        ; preds = %if.then69
  call void @llvm.dbg.declare(metadata float* %mask, metadata !7429, metadata !DIExpression()), !dbg !7431
  %68 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !7432
  %scene = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %68, i32 0, i32 3, !dbg !7433
  %69 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7433
  %70 = load %struct.ImagePaintState*, %struct.ImagePaintState** %s.addr, align 8, !dbg !7434
  %brush82 = getelementptr inbounds %struct.ImagePaintState, %struct.ImagePaintState* %70, i32 0, i32 6, !dbg !7435
  %71 = load %struct.Brush*, %struct.Brush** %brush82, align 8, !dbg !7435
  %call83 = call float @BKE_brush_alpha_get(%struct.Scene* %69, %struct.Brush* %71), !dbg !7436
  store float %call83, float* %mask, align 4, !dbg !7431
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !7437, metadata !DIExpression()), !dbg !7438
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !7439
  %72 = load float, float* %arrayidx84, align 4, !dbg !7439
  store float %72, float* %alpha, align 4, !dbg !7438
  %73 = load float, float* %mask, align 4, !dbg !7440
  %arrayidx85 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 3, !dbg !7441
  store float %73, float* %arrayidx85, align 4, !dbg !7442
  %arrayidx86 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 3, !dbg !7443
  store float %73, float* %arrayidx86, align 4, !dbg !7444
  %arraydecay87 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7445
  %arraydecay88 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7446
  %arraydecay89 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7447
  call void @blend_color_add_float(float* %arraydecay87, float* %arraydecay88, float* %arraydecay89), !dbg !7448
  %74 = load float, float* %alpha, align 4, !dbg !7449
  %arrayidx90 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 3, !dbg !7450
  store float %74, float* %arrayidx90, align 4, !dbg !7451
  br label %if.end93, !dbg !7452

if.else:                                          ; preds = %if.then69
  %arraydecay91 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7453
  %arraydecay92 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7454
  call void @copy_v4_v4(float* %arraydecay91, float* %arraydecay92), !dbg !7455
  br label %if.end93

if.end93:                                         ; preds = %if.else, %if.then81
  br label %if.end94, !dbg !7456

if.end94:                                         ; preds = %if.end93, %if.then66
  br label %if.end98, !dbg !7457

if.else95:                                        ; preds = %for.end63
  %arraydecay96 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7458
  %arraydecay97 = getelementptr inbounds [4 x float], [4 x float]* %rgba, i64 0, i64 0, !dbg !7459
  call void @copy_v4_v4(float* %arraydecay96, float* %arraydecay97), !dbg !7460
  br label %if.end98

if.end98:                                         ; preds = %if.else95, %if.end94
  %arrayidx99 = getelementptr inbounds [2 x i32], [2 x i32]* %out_off, i64 0, i64 0, !dbg !7461
  %75 = load i32, i32* %arrayidx99, align 4, !dbg !7461
  %76 = load i32, i32* %x, align 4, !dbg !7462
  %add100 = add nsw i32 %75, %76, !dbg !7463
  store i32 %add100, i32* %xo, align 4, !dbg !7464
  %arrayidx101 = getelementptr inbounds [2 x i32], [2 x i32]* %out_off, i64 0, i64 1, !dbg !7465
  %77 = load i32, i32* %arrayidx101, align 4, !dbg !7465
  %78 = load i32, i32* %y, align 4, !dbg !7466
  %add102 = add nsw i32 %77, %78, !dbg !7467
  store i32 %add102, i32* %yo, align 4, !dbg !7468
  %79 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7469
  %80 = load i32, i32* %xo, align 4, !dbg !7470
  %81 = load i32, i32* %yo, align 4, !dbg !7471
  %arraydecay103 = getelementptr inbounds [4 x float], [4 x float]* %outrgb, i64 0, i64 0, !dbg !7472
  call void @paint_2d_ibuf_rgb_set(%struct.ImBuf* %79, i32 %80, i32 %81, i8 zeroext 0, float* %arraydecay103), !dbg !7473
  br label %for.inc104, !dbg !7474

for.inc104:                                       ; preds = %if.end98
  %82 = load i32, i32* %x, align 4, !dbg !7475
  %inc105 = add nsw i32 %82, 1, !dbg !7475
  store i32 %inc105, i32* %x, align 4, !dbg !7475
  br label %for.cond32, !dbg !7476, !llvm.loop !7477

for.end106:                                       ; preds = %for.cond32
  br label %for.inc107, !dbg !7479

for.inc107:                                       ; preds = %for.end106
  %83 = load i32, i32* %y, align 4, !dbg !7480
  %inc108 = add nsw i32 %83, 1, !dbg !7480
  store i32 %inc108, i32* %y, align 4, !dbg !7480
  br label %for.cond, !dbg !7481, !llvm.loop !7482

for.end109:                                       ; preds = %if.then25, %for.cond
  ret void, !dbg !7484
}

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_lift_smear(%struct.ImBuf* %ibuf, %struct.ImBuf* %ibufb, i32* %pos) #0 !dbg !7485 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %ibufb.addr = alloca %struct.ImBuf*, align 8
  %pos.addr = alloca i32*, align 8
  %region = alloca [4 x %struct.ImagePaintRegion], align 16
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7488, metadata !DIExpression()), !dbg !7489
  store %struct.ImBuf* %ibufb, %struct.ImBuf** %ibufb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibufb.addr, metadata !7490, metadata !DIExpression()), !dbg !7491
  store i32* %pos, i32** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pos.addr, metadata !7492, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.declare(metadata [4 x %struct.ImagePaintRegion]* %region, metadata !7494, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7496, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7498, metadata !DIExpression()), !dbg !7499
  %arraydecay = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 0, !dbg !7500
  %0 = load i32*, i32** %pos.addr, align 8, !dbg !7501
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !7501
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7501
  %2 = load i32*, i32** %pos.addr, align 8, !dbg !7502
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !7502
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !7502
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7503
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 2, !dbg !7504
  %5 = load i32, i32* %x, align 8, !dbg !7504
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7505
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 3, !dbg !7506
  %7 = load i32, i32* %y, align 4, !dbg !7506
  call void @paint_2d_set_region(%struct.ImagePaintRegion* %arraydecay, i32 0, i32 0, i32 %1, i32 %3, i32 %5, i32 %7), !dbg !7507
  %arraydecay2 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 0, !dbg !7508
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7509
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7510
  %call = call i32 @paint_2d_torus_split_region(%struct.ImagePaintRegion* %arraydecay2, %struct.ImBuf* %8, %struct.ImBuf* %9), !dbg !7511
  store i32 %call, i32* %tot, align 4, !dbg !7512
  store i32 0, i32* %a, align 4, !dbg !7513
  br label %for.cond, !dbg !7515

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %a, align 4, !dbg !7516
  %11 = load i32, i32* %tot, align 4, !dbg !7518
  %cmp = icmp slt i32 %10, %11, !dbg !7519
  br i1 %cmp, label %for.body, label %for.end, !dbg !7520

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7521
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7522
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7523
  %15 = load i32, i32* %a, align 4, !dbg !7524
  %idxprom = sext i32 %15 to i64, !dbg !7525
  %arrayidx3 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom, !dbg !7525
  %destx = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx3, i32 0, i32 0, !dbg !7526
  %16 = load i32, i32* %destx, align 8, !dbg !7526
  %17 = load i32, i32* %a, align 4, !dbg !7527
  %idxprom4 = sext i32 %17 to i64, !dbg !7528
  %arrayidx5 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom4, !dbg !7528
  %desty = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx5, i32 0, i32 1, !dbg !7529
  %18 = load i32, i32* %desty, align 4, !dbg !7529
  %19 = load i32, i32* %a, align 4, !dbg !7530
  %idxprom6 = sext i32 %19 to i64, !dbg !7531
  %arrayidx7 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom6, !dbg !7531
  %destx8 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx7, i32 0, i32 0, !dbg !7532
  %20 = load i32, i32* %destx8, align 8, !dbg !7532
  %21 = load i32, i32* %a, align 4, !dbg !7533
  %idxprom9 = sext i32 %21 to i64, !dbg !7534
  %arrayidx10 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom9, !dbg !7534
  %desty11 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx10, i32 0, i32 1, !dbg !7535
  %22 = load i32, i32* %desty11, align 4, !dbg !7535
  %23 = load i32, i32* %a, align 4, !dbg !7536
  %idxprom12 = sext i32 %23 to i64, !dbg !7537
  %arrayidx13 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom12, !dbg !7537
  %srcx = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx13, i32 0, i32 2, !dbg !7538
  %24 = load i32, i32* %srcx, align 8, !dbg !7538
  %25 = load i32, i32* %a, align 4, !dbg !7539
  %idxprom14 = sext i32 %25 to i64, !dbg !7540
  %arrayidx15 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom14, !dbg !7540
  %srcy = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx15, i32 0, i32 3, !dbg !7541
  %26 = load i32, i32* %srcy, align 4, !dbg !7541
  %27 = load i32, i32* %a, align 4, !dbg !7542
  %idxprom16 = sext i32 %27 to i64, !dbg !7543
  %arrayidx17 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom16, !dbg !7543
  %width = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx17, i32 0, i32 4, !dbg !7544
  %28 = load i32, i32* %width, align 8, !dbg !7544
  %29 = load i32, i32* %a, align 4, !dbg !7545
  %idxprom18 = sext i32 %29 to i64, !dbg !7546
  %arrayidx19 = getelementptr inbounds [4 x %struct.ImagePaintRegion], [4 x %struct.ImagePaintRegion]* %region, i64 0, i64 %idxprom18, !dbg !7546
  %height = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %arrayidx19, i32 0, i32 5, !dbg !7547
  %30 = load i32, i32* %height, align 4, !dbg !7547
  call void @IMB_rectblend(%struct.ImBuf* %12, %struct.ImBuf* %13, %struct.ImBuf* %14, i16* null, i16* null, i16* null, float 0.000000e+00, i32 %16, i32 %18, i32 %20, i32 %22, i32 %24, i32 %26, i32 %28, i32 %30, i32 1001, i8 zeroext 0), !dbg !7548
  br label %for.inc, !dbg !7548

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %a, align 4, !dbg !7549
  %inc = add nsw i32 %31, 1, !dbg !7549
  store i32 %inc, i32* %a, align 4, !dbg !7549
  br label %for.cond, !dbg !7550, !llvm.loop !7551

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7553
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @paint_2d_lift_clone(%struct.ImBuf* %ibuf, %struct.ImBuf* %ibufb, i32* %pos) #0 !dbg !7554 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %ibufb.addr = alloca %struct.ImBuf*, align 8
  %pos.addr = alloca i32*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %destx = alloca i32, align 4
  %desty = alloca i32, align 4
  %srcx = alloca i32, align 4
  %srcy = alloca i32, align 4
  %clonebuf = alloca %struct.ImBuf*, align 8
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7557, metadata !DIExpression()), !dbg !7558
  store %struct.ImBuf* %ibufb, %struct.ImBuf** %ibufb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibufb.addr, metadata !7559, metadata !DIExpression()), !dbg !7560
  store i32* %pos, i32** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pos.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7563, metadata !DIExpression()), !dbg !7564
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7565
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 2, !dbg !7566
  %1 = load i32, i32* %x, align 8, !dbg !7566
  store i32 %1, i32* %w, align 4, !dbg !7564
  call void @llvm.dbg.declare(metadata i32* %h, metadata !7567, metadata !DIExpression()), !dbg !7568
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7569
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %2, i32 0, i32 3, !dbg !7570
  %3 = load i32, i32* %y, align 4, !dbg !7570
  store i32 %3, i32* %h, align 4, !dbg !7568
  call void @llvm.dbg.declare(metadata i32* %destx, metadata !7571, metadata !DIExpression()), !dbg !7572
  store i32 0, i32* %destx, align 4, !dbg !7572
  call void @llvm.dbg.declare(metadata i32* %desty, metadata !7573, metadata !DIExpression()), !dbg !7574
  store i32 0, i32* %desty, align 4, !dbg !7574
  call void @llvm.dbg.declare(metadata i32* %srcx, metadata !7575, metadata !DIExpression()), !dbg !7576
  %4 = load i32*, i32** %pos.addr, align 8, !dbg !7577
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !7577
  %5 = load i32, i32* %arrayidx, align 4, !dbg !7577
  store i32 %5, i32* %srcx, align 4, !dbg !7576
  call void @llvm.dbg.declare(metadata i32* %srcy, metadata !7578, metadata !DIExpression()), !dbg !7579
  %6 = load i32*, i32** %pos.addr, align 8, !dbg !7580
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i64 1, !dbg !7580
  %7 = load i32, i32* %arrayidx1, align 4, !dbg !7580
  store i32 %7, i32* %srcy, align 4, !dbg !7579
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %clonebuf, metadata !7581, metadata !DIExpression()), !dbg !7582
  %8 = load i32, i32* %w, align 4, !dbg !7583
  %9 = load i32, i32* %h, align 4, !dbg !7584
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7585
  %planes = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %10, i32 0, i32 4, !dbg !7586
  %11 = load i8, i8* %planes, align 8, !dbg !7586
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7587
  %flags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 6, !dbg !7588
  %13 = load i32, i32* %flags, align 8, !dbg !7588
  %call = call %struct.ImBuf* @IMB_allocImBuf(i32 %8, i32 %9, i8 zeroext %11, i32 %13), !dbg !7589
  store %struct.ImBuf* %call, %struct.ImBuf** %clonebuf, align 8, !dbg !7582
  %14 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !7590
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7591
  call void @IMB_rectclip(%struct.ImBuf* %14, %struct.ImBuf* %15, i32* %destx, i32* %desty, i32* %srcx, i32* %srcy, i32* %w, i32* %h), !dbg !7592
  %16 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !7593
  %17 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !7594
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibufb.addr, align 8, !dbg !7595
  %19 = load i32, i32* %destx, align 4, !dbg !7596
  %20 = load i32, i32* %desty, align 4, !dbg !7597
  %21 = load i32, i32* %destx, align 4, !dbg !7598
  %22 = load i32, i32* %desty, align 4, !dbg !7599
  %23 = load i32, i32* %destx, align 4, !dbg !7600
  %24 = load i32, i32* %desty, align 4, !dbg !7601
  %25 = load i32, i32* %w, align 4, !dbg !7602
  %26 = load i32, i32* %h, align 4, !dbg !7603
  call void @IMB_rectblend(%struct.ImBuf* %16, %struct.ImBuf* %17, %struct.ImBuf* %18, i16* null, i16* null, i16* null, float 0.000000e+00, i32 %19, i32 %20, i32 %21, i32 %22, i32 %23, i32 %24, i32 %25, i32 %26, i32 1002, i8 zeroext 0), !dbg !7604
  %27 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !7605
  %28 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !7606
  %29 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7607
  %30 = load i32, i32* %destx, align 4, !dbg !7608
  %31 = load i32, i32* %desty, align 4, !dbg !7609
  %32 = load i32, i32* %destx, align 4, !dbg !7610
  %33 = load i32, i32* %desty, align 4, !dbg !7611
  %34 = load i32, i32* %srcx, align 4, !dbg !7612
  %35 = load i32, i32* %srcy, align 4, !dbg !7613
  %36 = load i32, i32* %w, align 4, !dbg !7614
  %37 = load i32, i32* %h, align 4, !dbg !7615
  call void @IMB_rectblend(%struct.ImBuf* %27, %struct.ImBuf* %28, %struct.ImBuf* %29, i16* null, i16* null, i16* null, float 0.000000e+00, i32 %30, i32 %31, i32 %32, i32 %33, i32 %34, i32 %35, i32 %36, i32 %37, i32 1001, i8 zeroext 0), !dbg !7616
  %38 = load %struct.ImBuf*, %struct.ImBuf** %clonebuf, align 8, !dbg !7617
  ret %struct.ImBuf* %38, !dbg !7618
}

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_set_region(%struct.ImagePaintRegion* %region, i32 %destx, i32 %desty, i32 %srcx, i32 %srcy, i32 %width, i32 %height) #0 !dbg !7619 {
entry:
  %region.addr = alloca %struct.ImagePaintRegion*, align 8
  %destx.addr = alloca i32, align 4
  %desty.addr = alloca i32, align 4
  %srcx.addr = alloca i32, align 4
  %srcy.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  store %struct.ImagePaintRegion* %region, %struct.ImagePaintRegion** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintRegion** %region.addr, metadata !7623, metadata !DIExpression()), !dbg !7624
  store i32 %destx, i32* %destx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %destx.addr, metadata !7625, metadata !DIExpression()), !dbg !7626
  store i32 %desty, i32* %desty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desty.addr, metadata !7627, metadata !DIExpression()), !dbg !7628
  store i32 %srcx, i32* %srcx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcx.addr, metadata !7629, metadata !DIExpression()), !dbg !7630
  store i32 %srcy, i32* %srcy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcy.addr, metadata !7631, metadata !DIExpression()), !dbg !7632
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !7633, metadata !DIExpression()), !dbg !7634
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !7635, metadata !DIExpression()), !dbg !7636
  %0 = load i32, i32* %destx.addr, align 4, !dbg !7637
  %1 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7638
  %destx1 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %1, i32 0, i32 0, !dbg !7639
  store i32 %0, i32* %destx1, align 4, !dbg !7640
  %2 = load i32, i32* %desty.addr, align 4, !dbg !7641
  %3 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7642
  %desty2 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %3, i32 0, i32 1, !dbg !7643
  store i32 %2, i32* %desty2, align 4, !dbg !7644
  %4 = load i32, i32* %srcx.addr, align 4, !dbg !7645
  %5 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7646
  %srcx3 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %5, i32 0, i32 2, !dbg !7647
  store i32 %4, i32* %srcx3, align 4, !dbg !7648
  %6 = load i32, i32* %srcy.addr, align 4, !dbg !7649
  %7 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7650
  %srcy4 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %7, i32 0, i32 3, !dbg !7651
  store i32 %6, i32* %srcy4, align 4, !dbg !7652
  %8 = load i32, i32* %width.addr, align 4, !dbg !7653
  %9 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7654
  %width5 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %9, i32 0, i32 4, !dbg !7655
  store i32 %8, i32* %width5, align 4, !dbg !7656
  %10 = load i32, i32* %height.addr, align 4, !dbg !7657
  %11 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7658
  %height6 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %11, i32 0, i32 5, !dbg !7659
  store i32 %10, i32* %height6, align 4, !dbg !7660
  ret void, !dbg !7661
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @paint_2d_torus_split_region(%struct.ImagePaintRegion* %region, %struct.ImBuf* %dbuf, %struct.ImBuf* %sbuf) #0 !dbg !7662 {
entry:
  %region.addr = alloca %struct.ImagePaintRegion*, align 8
  %dbuf.addr = alloca %struct.ImBuf*, align 8
  %sbuf.addr = alloca %struct.ImBuf*, align 8
  %destx = alloca i32, align 4
  %desty = alloca i32, align 4
  %srcx = alloca i32, align 4
  %srcy = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %origw = alloca i32, align 4
  %origh = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.ImagePaintRegion* %region, %struct.ImagePaintRegion** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImagePaintRegion** %region.addr, metadata !7665, metadata !DIExpression()), !dbg !7666
  store %struct.ImBuf* %dbuf, %struct.ImBuf** %dbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %dbuf.addr, metadata !7667, metadata !DIExpression()), !dbg !7668
  store %struct.ImBuf* %sbuf, %struct.ImBuf** %sbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %sbuf.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.declare(metadata i32* %destx, metadata !7671, metadata !DIExpression()), !dbg !7672
  %0 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7673
  %destx1 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %0, i32 0, i32 0, !dbg !7674
  %1 = load i32, i32* %destx1, align 4, !dbg !7674
  store i32 %1, i32* %destx, align 4, !dbg !7672
  call void @llvm.dbg.declare(metadata i32* %desty, metadata !7675, metadata !DIExpression()), !dbg !7676
  %2 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7677
  %desty2 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %2, i32 0, i32 1, !dbg !7678
  %3 = load i32, i32* %desty2, align 4, !dbg !7678
  store i32 %3, i32* %desty, align 4, !dbg !7676
  call void @llvm.dbg.declare(metadata i32* %srcx, metadata !7679, metadata !DIExpression()), !dbg !7680
  %4 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7681
  %srcx3 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %4, i32 0, i32 2, !dbg !7682
  %5 = load i32, i32* %srcx3, align 4, !dbg !7682
  store i32 %5, i32* %srcx, align 4, !dbg !7680
  call void @llvm.dbg.declare(metadata i32* %srcy, metadata !7683, metadata !DIExpression()), !dbg !7684
  %6 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7685
  %srcy4 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %6, i32 0, i32 3, !dbg !7686
  %7 = load i32, i32* %srcy4, align 4, !dbg !7686
  store i32 %7, i32* %srcy, align 4, !dbg !7684
  call void @llvm.dbg.declare(metadata i32* %width, metadata !7687, metadata !DIExpression()), !dbg !7688
  %8 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7689
  %width5 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %8, i32 0, i32 4, !dbg !7690
  %9 = load i32, i32* %width5, align 4, !dbg !7690
  store i32 %9, i32* %width, align 4, !dbg !7688
  call void @llvm.dbg.declare(metadata i32* %height, metadata !7691, metadata !DIExpression()), !dbg !7692
  %10 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7693
  %height6 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %10, i32 0, i32 5, !dbg !7694
  %11 = load i32, i32* %height6, align 4, !dbg !7694
  store i32 %11, i32* %height, align 4, !dbg !7692
  call void @llvm.dbg.declare(metadata i32* %origw, metadata !7695, metadata !DIExpression()), !dbg !7696
  call void @llvm.dbg.declare(metadata i32* %origh, metadata !7697, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.declare(metadata i32* %h, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7703, metadata !DIExpression()), !dbg !7704
  store i32 0, i32* %tot, align 4, !dbg !7704
  %12 = load i32, i32* %destx, align 4, !dbg !7705
  %13 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7706
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 2, !dbg !7707
  %14 = load i32, i32* %x, align 8, !dbg !7707
  %rem = srem i32 %12, %14, !dbg !7708
  store i32 %rem, i32* %destx, align 4, !dbg !7709
  %15 = load i32, i32* %destx, align 4, !dbg !7710
  %cmp = icmp slt i32 %15, 0, !dbg !7712
  br i1 %cmp, label %if.then, label %if.end, !dbg !7713

if.then:                                          ; preds = %entry
  %16 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7714
  %x7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %16, i32 0, i32 2, !dbg !7715
  %17 = load i32, i32* %x7, align 8, !dbg !7715
  %18 = load i32, i32* %destx, align 4, !dbg !7716
  %add = add nsw i32 %18, %17, !dbg !7716
  store i32 %add, i32* %destx, align 4, !dbg !7716
  br label %if.end, !dbg !7717

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %desty, align 4, !dbg !7718
  %20 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7719
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 3, !dbg !7720
  %21 = load i32, i32* %y, align 4, !dbg !7720
  %rem8 = srem i32 %19, %21, !dbg !7721
  store i32 %rem8, i32* %desty, align 4, !dbg !7722
  %22 = load i32, i32* %desty, align 4, !dbg !7723
  %cmp9 = icmp slt i32 %22, 0, !dbg !7725
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !7726

if.then10:                                        ; preds = %if.end
  %23 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7727
  %y11 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 3, !dbg !7728
  %24 = load i32, i32* %y11, align 4, !dbg !7728
  %25 = load i32, i32* %desty, align 4, !dbg !7729
  %add12 = add nsw i32 %25, %24, !dbg !7729
  store i32 %add12, i32* %desty, align 4, !dbg !7729
  br label %if.end13, !dbg !7730

if.end13:                                         ; preds = %if.then10, %if.end
  %26 = load i32, i32* %srcx, align 4, !dbg !7731
  %27 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7732
  %x14 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 2, !dbg !7733
  %28 = load i32, i32* %x14, align 8, !dbg !7733
  %rem15 = srem i32 %26, %28, !dbg !7734
  store i32 %rem15, i32* %srcx, align 4, !dbg !7735
  %29 = load i32, i32* %srcx, align 4, !dbg !7736
  %cmp16 = icmp slt i32 %29, 0, !dbg !7738
  br i1 %cmp16, label %if.then17, label %if.end20, !dbg !7739

if.then17:                                        ; preds = %if.end13
  %30 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7740
  %x18 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %30, i32 0, i32 2, !dbg !7741
  %31 = load i32, i32* %x18, align 8, !dbg !7741
  %32 = load i32, i32* %srcx, align 4, !dbg !7742
  %add19 = add nsw i32 %32, %31, !dbg !7742
  store i32 %add19, i32* %srcx, align 4, !dbg !7742
  br label %if.end20, !dbg !7743

if.end20:                                         ; preds = %if.then17, %if.end13
  %33 = load i32, i32* %srcy, align 4, !dbg !7744
  %34 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7745
  %y21 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 3, !dbg !7746
  %35 = load i32, i32* %y21, align 4, !dbg !7746
  %rem22 = srem i32 %33, %35, !dbg !7747
  store i32 %rem22, i32* %srcy, align 4, !dbg !7748
  %36 = load i32, i32* %srcy, align 4, !dbg !7749
  %cmp23 = icmp slt i32 %36, 0, !dbg !7751
  br i1 %cmp23, label %if.then24, label %if.end27, !dbg !7752

if.then24:                                        ; preds = %if.end20
  %37 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7753
  %y25 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %37, i32 0, i32 3, !dbg !7754
  %38 = load i32, i32* %y25, align 4, !dbg !7754
  %39 = load i32, i32* %srcy, align 4, !dbg !7755
  %add26 = add nsw i32 %39, %38, !dbg !7755
  store i32 %add26, i32* %srcy, align 4, !dbg !7755
  br label %if.end27, !dbg !7756

if.end27:                                         ; preds = %if.then24, %if.end20
  %40 = load i32, i32* %width, align 4, !dbg !7757
  %41 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7758
  %x28 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %41, i32 0, i32 2, !dbg !7759
  %42 = load i32, i32* %x28, align 8, !dbg !7759
  %cmp29 = icmp sgt i32 %40, %42, !dbg !7760
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !7761

cond.true:                                        ; preds = %if.end27
  %43 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7762
  %x30 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %43, i32 0, i32 2, !dbg !7763
  %44 = load i32, i32* %x30, align 8, !dbg !7763
  br label %cond.end, !dbg !7761

cond.false:                                       ; preds = %if.end27
  %45 = load i32, i32* %width, align 4, !dbg !7764
  br label %cond.end, !dbg !7761

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %44, %cond.true ], [ %45, %cond.false ], !dbg !7761
  store i32 %cond, i32* %w, align 4, !dbg !7765
  store i32 %cond, i32* %origw, align 4, !dbg !7766
  %46 = load i32, i32* %height, align 4, !dbg !7767
  %47 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7768
  %y31 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %47, i32 0, i32 3, !dbg !7769
  %48 = load i32, i32* %y31, align 4, !dbg !7769
  %cmp32 = icmp sgt i32 %46, %48, !dbg !7770
  br i1 %cmp32, label %cond.true33, label %cond.false35, !dbg !7771

cond.true33:                                      ; preds = %cond.end
  %49 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7772
  %y34 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %49, i32 0, i32 3, !dbg !7773
  %50 = load i32, i32* %y34, align 4, !dbg !7773
  br label %cond.end36, !dbg !7771

cond.false35:                                     ; preds = %cond.end
  %51 = load i32, i32* %height, align 4, !dbg !7774
  br label %cond.end36, !dbg !7771

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi i32 [ %50, %cond.true33 ], [ %51, %cond.false35 ], !dbg !7771
  store i32 %cond37, i32* %h, align 4, !dbg !7775
  store i32 %cond37, i32* %origh, align 4, !dbg !7776
  %52 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7777
  %53 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7778
  call void @IMB_rectclip(%struct.ImBuf* %52, %struct.ImBuf* %53, i32* %destx, i32* %desty, i32* %srcx, i32* %srcy, i32* %w, i32* %h), !dbg !7779
  %54 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7780
  %55 = load i32, i32* %tot, align 4, !dbg !7781
  %inc = add nsw i32 %55, 1, !dbg !7781
  store i32 %inc, i32* %tot, align 4, !dbg !7781
  %idxprom = sext i32 %55 to i64, !dbg !7780
  %arrayidx = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %54, i64 %idxprom, !dbg !7780
  %56 = load i32, i32* %destx, align 4, !dbg !7782
  %57 = load i32, i32* %desty, align 4, !dbg !7783
  %58 = load i32, i32* %srcx, align 4, !dbg !7784
  %59 = load i32, i32* %srcy, align 4, !dbg !7785
  %60 = load i32, i32* %w, align 4, !dbg !7786
  %61 = load i32, i32* %h, align 4, !dbg !7787
  call void @paint_2d_set_region(%struct.ImagePaintRegion* %arrayidx, i32 %56, i32 %57, i32 %58, i32 %59, i32 %60, i32 %61), !dbg !7788
  %62 = load i32, i32* %w, align 4, !dbg !7789
  %63 = load i32, i32* %origw, align 4, !dbg !7791
  %cmp38 = icmp slt i32 %62, %63, !dbg !7792
  br i1 %cmp38, label %if.then39, label %if.end49, !dbg !7793

if.then39:                                        ; preds = %cond.end36
  %64 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7794
  %65 = load i32, i32* %tot, align 4, !dbg !7795
  %inc40 = add nsw i32 %65, 1, !dbg !7795
  store i32 %inc40, i32* %tot, align 4, !dbg !7795
  %idxprom41 = sext i32 %65 to i64, !dbg !7794
  %arrayidx42 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %64, i64 %idxprom41, !dbg !7794
  %66 = load i32, i32* %destx, align 4, !dbg !7796
  %67 = load i32, i32* %w, align 4, !dbg !7797
  %add43 = add nsw i32 %66, %67, !dbg !7798
  %68 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7799
  %x44 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %68, i32 0, i32 2, !dbg !7800
  %69 = load i32, i32* %x44, align 8, !dbg !7800
  %rem45 = srem i32 %add43, %69, !dbg !7801
  %70 = load i32, i32* %desty, align 4, !dbg !7802
  %71 = load i32, i32* %srcx, align 4, !dbg !7803
  %72 = load i32, i32* %w, align 4, !dbg !7804
  %add46 = add nsw i32 %71, %72, !dbg !7805
  %73 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7806
  %x47 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %73, i32 0, i32 2, !dbg !7807
  %74 = load i32, i32* %x47, align 8, !dbg !7807
  %rem48 = srem i32 %add46, %74, !dbg !7808
  %75 = load i32, i32* %srcy, align 4, !dbg !7809
  %76 = load i32, i32* %origw, align 4, !dbg !7810
  %77 = load i32, i32* %w, align 4, !dbg !7811
  %sub = sub nsw i32 %76, %77, !dbg !7812
  %78 = load i32, i32* %h, align 4, !dbg !7813
  call void @paint_2d_set_region(%struct.ImagePaintRegion* %arrayidx42, i32 %rem45, i32 %70, i32 %rem48, i32 %75, i32 %sub, i32 %78), !dbg !7814
  br label %if.end49, !dbg !7814

if.end49:                                         ; preds = %if.then39, %cond.end36
  %79 = load i32, i32* %h, align 4, !dbg !7815
  %80 = load i32, i32* %origh, align 4, !dbg !7817
  %cmp50 = icmp slt i32 %79, %80, !dbg !7818
  br i1 %cmp50, label %if.then51, label %if.end62, !dbg !7819

if.then51:                                        ; preds = %if.end49
  %81 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7820
  %82 = load i32, i32* %tot, align 4, !dbg !7821
  %inc52 = add nsw i32 %82, 1, !dbg !7821
  store i32 %inc52, i32* %tot, align 4, !dbg !7821
  %idxprom53 = sext i32 %82 to i64, !dbg !7820
  %arrayidx54 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %81, i64 %idxprom53, !dbg !7820
  %83 = load i32, i32* %destx, align 4, !dbg !7822
  %84 = load i32, i32* %desty, align 4, !dbg !7823
  %85 = load i32, i32* %h, align 4, !dbg !7824
  %add55 = add nsw i32 %84, %85, !dbg !7825
  %86 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7826
  %y56 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %86, i32 0, i32 3, !dbg !7827
  %87 = load i32, i32* %y56, align 4, !dbg !7827
  %rem57 = srem i32 %add55, %87, !dbg !7828
  %88 = load i32, i32* %srcx, align 4, !dbg !7829
  %89 = load i32, i32* %srcy, align 4, !dbg !7830
  %90 = load i32, i32* %h, align 4, !dbg !7831
  %add58 = add nsw i32 %89, %90, !dbg !7832
  %91 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7833
  %y59 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %91, i32 0, i32 3, !dbg !7834
  %92 = load i32, i32* %y59, align 4, !dbg !7834
  %rem60 = srem i32 %add58, %92, !dbg !7835
  %93 = load i32, i32* %w, align 4, !dbg !7836
  %94 = load i32, i32* %origh, align 4, !dbg !7837
  %95 = load i32, i32* %h, align 4, !dbg !7838
  %sub61 = sub nsw i32 %94, %95, !dbg !7839
  call void @paint_2d_set_region(%struct.ImagePaintRegion* %arrayidx54, i32 %83, i32 %rem57, i32 %88, i32 %rem60, i32 %93, i32 %sub61), !dbg !7840
  br label %if.end62, !dbg !7840

if.end62:                                         ; preds = %if.then51, %if.end49
  %96 = load i32, i32* %w, align 4, !dbg !7841
  %97 = load i32, i32* %origw, align 4, !dbg !7843
  %cmp63 = icmp slt i32 %96, %97, !dbg !7844
  br i1 %cmp63, label %land.lhs.true, label %if.end83, !dbg !7845

land.lhs.true:                                    ; preds = %if.end62
  %98 = load i32, i32* %h, align 4, !dbg !7846
  %99 = load i32, i32* %origh, align 4, !dbg !7847
  %cmp64 = icmp slt i32 %98, %99, !dbg !7848
  br i1 %cmp64, label %if.then65, label %if.end83, !dbg !7849

if.then65:                                        ; preds = %land.lhs.true
  %100 = load %struct.ImagePaintRegion*, %struct.ImagePaintRegion** %region.addr, align 8, !dbg !7850
  %101 = load i32, i32* %tot, align 4, !dbg !7851
  %inc66 = add nsw i32 %101, 1, !dbg !7851
  store i32 %inc66, i32* %tot, align 4, !dbg !7851
  %idxprom67 = sext i32 %101 to i64, !dbg !7850
  %arrayidx68 = getelementptr inbounds %struct.ImagePaintRegion, %struct.ImagePaintRegion* %100, i64 %idxprom67, !dbg !7850
  %102 = load i32, i32* %destx, align 4, !dbg !7852
  %103 = load i32, i32* %w, align 4, !dbg !7853
  %add69 = add nsw i32 %102, %103, !dbg !7854
  %104 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7855
  %x70 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %104, i32 0, i32 2, !dbg !7856
  %105 = load i32, i32* %x70, align 8, !dbg !7856
  %rem71 = srem i32 %add69, %105, !dbg !7857
  %106 = load i32, i32* %desty, align 4, !dbg !7858
  %107 = load i32, i32* %h, align 4, !dbg !7859
  %add72 = add nsw i32 %106, %107, !dbg !7860
  %108 = load %struct.ImBuf*, %struct.ImBuf** %dbuf.addr, align 8, !dbg !7861
  %y73 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %108, i32 0, i32 3, !dbg !7862
  %109 = load i32, i32* %y73, align 4, !dbg !7862
  %rem74 = srem i32 %add72, %109, !dbg !7863
  %110 = load i32, i32* %srcx, align 4, !dbg !7864
  %111 = load i32, i32* %w, align 4, !dbg !7865
  %add75 = add nsw i32 %110, %111, !dbg !7866
  %112 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7867
  %x76 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %112, i32 0, i32 2, !dbg !7868
  %113 = load i32, i32* %x76, align 8, !dbg !7868
  %rem77 = srem i32 %add75, %113, !dbg !7869
  %114 = load i32, i32* %srcy, align 4, !dbg !7870
  %115 = load i32, i32* %h, align 4, !dbg !7871
  %add78 = add nsw i32 %114, %115, !dbg !7872
  %116 = load %struct.ImBuf*, %struct.ImBuf** %sbuf.addr, align 8, !dbg !7873
  %y79 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %116, i32 0, i32 3, !dbg !7874
  %117 = load i32, i32* %y79, align 4, !dbg !7874
  %rem80 = srem i32 %add78, %117, !dbg !7875
  %118 = load i32, i32* %origw, align 4, !dbg !7876
  %119 = load i32, i32* %w, align 4, !dbg !7877
  %sub81 = sub nsw i32 %118, %119, !dbg !7878
  %120 = load i32, i32* %origh, align 4, !dbg !7879
  %121 = load i32, i32* %h, align 4, !dbg !7880
  %sub82 = sub nsw i32 %120, %121, !dbg !7881
  call void @paint_2d_set_region(%struct.ImagePaintRegion* %arrayidx68, i32 %rem71, i32 %rem74, i32 %rem77, i32 %rem80, i32 %sub81, i32 %sub82), !dbg !7882
  br label %if.end83, !dbg !7882

if.end83:                                         ; preds = %if.then65, %land.lhs.true, %if.end62
  %122 = load i32, i32* %tot, align 4, !dbg !7883
  ret i32 %122, !dbg !7884
}

declare dso_local void @imapaint_region_tiles(%struct.ImBuf*, i32, i32, i32, i32, i32*, i32*, i32*, i32*) #2

declare dso_local i8* @image_undo_find_tile(%struct.Image*, %struct.ImBuf*, i32, i32, i16**, i8 zeroext) #2

declare dso_local void @IMB_rectblend(%struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i16*, i16*, i16*, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2_int(i32* %r, i32* %a, i32* %b) #0 !dbg !7885 {
entry:
  %r.addr = alloca i32*, align 8
  %a.addr = alloca i32*, align 8
  %b.addr = alloca i32*, align 8
  store i32* %r, i32** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r.addr, metadata !7889, metadata !DIExpression()), !dbg !7890
  store i32* %a, i32** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %a.addr, metadata !7891, metadata !DIExpression()), !dbg !7892
  store i32* %b, i32** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %b.addr, metadata !7893, metadata !DIExpression()), !dbg !7894
  %0 = load i32*, i32** %a.addr, align 8, !dbg !7895
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !7895
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7895
  %2 = load i32*, i32** %b.addr, align 8, !dbg !7896
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 0, !dbg !7896
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !7896
  %sub = sub nsw i32 %1, %3, !dbg !7897
  %4 = load i32*, i32** %r.addr, align 8, !dbg !7898
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 0, !dbg !7898
  store i32 %sub, i32* %arrayidx2, align 4, !dbg !7899
  %5 = load i32*, i32** %a.addr, align 8, !dbg !7900
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !7900
  %6 = load i32, i32* %arrayidx3, align 4, !dbg !7900
  %7 = load i32*, i32** %b.addr, align 8, !dbg !7901
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 1, !dbg !7901
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !7901
  %sub5 = sub nsw i32 %6, %8, !dbg !7902
  %9 = load i32*, i32** %r.addr, align 8, !dbg !7903
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !7903
  store i32 %sub5, i32* %arrayidx6, align 4, !dbg !7904
  ret void, !dbg !7905
}

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_ibuf_rgb_get(%struct.ImBuf* %ibuf, i32 %x, i32 %y, i8 zeroext %is_torus, float* %r_rgb) #0 !dbg !7906 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %is_torus.addr = alloca i8, align 1
  %r_rgb.addr = alloca float*, align 8
  %rrgbf = alloca float*, align 8
  %rrgb = alloca i8*, align 8
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !7909, metadata !DIExpression()), !dbg !7910
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7911, metadata !DIExpression()), !dbg !7912
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  store i8 %is_torus, i8* %is_torus.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_torus.addr, metadata !7915, metadata !DIExpression()), !dbg !7916
  store float* %r_rgb, float** %r_rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_rgb.addr, metadata !7917, metadata !DIExpression()), !dbg !7918
  %0 = load i8, i8* %is_torus.addr, align 1, !dbg !7919
  %tobool = icmp ne i8 %0, 0, !dbg !7919
  br i1 %tobool, label %if.then, label %if.end11, !dbg !7921

if.then:                                          ; preds = %entry
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7922
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !7924
  %2 = load i32, i32* %x1, align 8, !dbg !7924
  %3 = load i32, i32* %x.addr, align 4, !dbg !7925
  %rem = srem i32 %3, %2, !dbg !7925
  store i32 %rem, i32* %x.addr, align 4, !dbg !7925
  %4 = load i32, i32* %x.addr, align 4, !dbg !7926
  %cmp = icmp slt i32 %4, 0, !dbg !7928
  br i1 %cmp, label %if.then2, label %if.end, !dbg !7929

if.then2:                                         ; preds = %if.then
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7930
  %x3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 2, !dbg !7931
  %6 = load i32, i32* %x3, align 8, !dbg !7931
  %7 = load i32, i32* %x.addr, align 4, !dbg !7932
  %add = add nsw i32 %7, %6, !dbg !7932
  store i32 %add, i32* %x.addr, align 4, !dbg !7932
  br label %if.end, !dbg !7933

if.end:                                           ; preds = %if.then2, %if.then
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7934
  %y4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 3, !dbg !7935
  %9 = load i32, i32* %y4, align 4, !dbg !7935
  %10 = load i32, i32* %y.addr, align 4, !dbg !7936
  %rem5 = srem i32 %10, %9, !dbg !7936
  store i32 %rem5, i32* %y.addr, align 4, !dbg !7936
  %11 = load i32, i32* %y.addr, align 4, !dbg !7937
  %cmp6 = icmp slt i32 %11, 0, !dbg !7939
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !7940

if.then7:                                         ; preds = %if.end
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7941
  %y8 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 3, !dbg !7942
  %13 = load i32, i32* %y8, align 4, !dbg !7942
  %14 = load i32, i32* %y.addr, align 4, !dbg !7943
  %add9 = add nsw i32 %14, %13, !dbg !7943
  store i32 %add9, i32* %y.addr, align 4, !dbg !7943
  br label %if.end10, !dbg !7944

if.end10:                                         ; preds = %if.then7, %if.end
  br label %if.end11, !dbg !7945

if.end11:                                         ; preds = %if.end10, %entry
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7946
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 9, !dbg !7948
  %16 = load float*, float** %rect_float, align 8, !dbg !7948
  %tobool12 = icmp ne float* %16, null, !dbg !7946
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !7949

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata float** %rrgbf, metadata !7950, metadata !DIExpression()), !dbg !7952
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7953
  %rect_float14 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 9, !dbg !7954
  %18 = load float*, float** %rect_float14, align 8, !dbg !7954
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7955
  %x15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 2, !dbg !7956
  %20 = load i32, i32* %x15, align 8, !dbg !7956
  %21 = load i32, i32* %y.addr, align 4, !dbg !7957
  %mul = mul nsw i32 %20, %21, !dbg !7958
  %22 = load i32, i32* %x.addr, align 4, !dbg !7959
  %add16 = add nsw i32 %mul, %22, !dbg !7960
  %mul17 = mul nsw i32 %add16, 4, !dbg !7961
  %idx.ext = sext i32 %mul17 to i64, !dbg !7962
  %add.ptr = getelementptr inbounds float, float* %18, i64 %idx.ext, !dbg !7962
  store float* %add.ptr, float** %rrgbf, align 8, !dbg !7952
  %23 = load float*, float** %r_rgb.addr, align 8, !dbg !7963
  %24 = load float*, float** %rrgbf, align 8, !dbg !7964
  call void @copy_v4_v4(float* %23, float* %24), !dbg !7965
  br label %if.end24, !dbg !7966

if.else:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i8** %rrgb, metadata !7967, metadata !DIExpression()), !dbg !7969
  %25 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7970
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %25, i32 0, i32 8, !dbg !7971
  %26 = load i32*, i32** %rect, align 8, !dbg !7971
  %27 = bitcast i32* %26 to i8*, !dbg !7972
  %28 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !7973
  %x18 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %28, i32 0, i32 2, !dbg !7974
  %29 = load i32, i32* %x18, align 8, !dbg !7974
  %30 = load i32, i32* %y.addr, align 4, !dbg !7975
  %mul19 = mul nsw i32 %29, %30, !dbg !7976
  %31 = load i32, i32* %x.addr, align 4, !dbg !7977
  %add20 = add nsw i32 %mul19, %31, !dbg !7978
  %mul21 = mul nsw i32 %add20, 4, !dbg !7979
  %idx.ext22 = sext i32 %mul21 to i64, !dbg !7980
  %add.ptr23 = getelementptr inbounds i8, i8* %27, i64 %idx.ext22, !dbg !7980
  store i8* %add.ptr23, i8** %rrgb, align 8, !dbg !7969
  %32 = load float*, float** %r_rgb.addr, align 8, !dbg !7981
  %33 = load i8*, i8** %rrgb, align 8, !dbg !7982
  call void @straight_uchar_to_premul_float(float* %32, i8* %33), !dbg !7983
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then13
  ret void, !dbg !7984
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v4(float* %r) #0 !dbg !7985 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7988, metadata !DIExpression()), !dbg !7989
  %0 = load float*, float** %r.addr, align 8, !dbg !7990
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7990
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7991
  %1 = load float*, float** %r.addr, align 8, !dbg !7992
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !7992
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7993
  %2 = load float*, float** %r.addr, align 8, !dbg !7994
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !7994
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !7995
  %3 = load float*, float** %r.addr, align 8, !dbg !7996
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 3, !dbg !7996
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !7997
  ret void, !dbg !7998
}

; Function Attrs: noinline nounwind uwtable
define internal float @paint_2d_ibuf_add_if(%struct.ImBuf* %ibuf, i32 %x, i32 %y, float* %outrgb, i16 signext %torus, float %w) #0 !dbg !7999 {
entry:
  %retval = alloca float, align 4
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %outrgb.addr = alloca float*, align 8
  %torus.addr = alloca i16, align 2
  %w.addr = alloca float, align 4
  %inrgb = alloca [4 x float], align 16
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8006, metadata !DIExpression()), !dbg !8007
  store float* %outrgb, float** %outrgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %outrgb.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  store i16 %torus, i16* %torus.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %torus.addr, metadata !8010, metadata !DIExpression()), !dbg !8011
  store float %w, float* %w.addr, align 4
  call void @llvm.dbg.declare(metadata float* %w.addr, metadata !8012, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.declare(metadata [4 x float]* %inrgb, metadata !8014, metadata !DIExpression()), !dbg !8015
  %0 = load i32, i32* %x.addr, align 4, !dbg !8016
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8018
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !8019
  %2 = load i32, i32* %x1, align 8, !dbg !8019
  %cmp = icmp uge i32 %0, %2, !dbg !8020
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8021

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %y.addr, align 4, !dbg !8022
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8023
  %y2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 3, !dbg !8024
  %5 = load i32, i32* %y2, align 4, !dbg !8024
  %cmp3 = icmp uge i32 %3, %5, !dbg !8025
  br i1 %cmp3, label %if.then, label %if.else5, !dbg !8026

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load i16, i16* %torus.addr, align 2, !dbg !8027
  %tobool = icmp ne i16 %6, 0, !dbg !8027
  br i1 %tobool, label %if.then4, label %if.else, !dbg !8030

if.then4:                                         ; preds = %if.then
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8031
  %8 = load i32, i32* %x.addr, align 4, !dbg !8032
  %9 = load i32, i32* %y.addr, align 4, !dbg !8033
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %inrgb, i64 0, i64 0, !dbg !8034
  call void @paint_2d_ibuf_rgb_get(%struct.ImBuf* %7, i32 %8, i32 %9, i8 zeroext 1, float* %arraydecay), !dbg !8035
  br label %if.end, !dbg !8035

if.else:                                          ; preds = %if.then
  store float 0.000000e+00, float* %retval, align 4, !dbg !8036
  br label %return, !dbg !8036

if.end:                                           ; preds = %if.then4
  br label %if.end7, !dbg !8037

if.else5:                                         ; preds = %lor.lhs.false
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8038
  %11 = load i32, i32* %x.addr, align 4, !dbg !8040
  %12 = load i32, i32* %y.addr, align 4, !dbg !8041
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %inrgb, i64 0, i64 0, !dbg !8042
  call void @paint_2d_ibuf_rgb_get(%struct.ImBuf* %10, i32 %11, i32 %12, i8 zeroext 0, float* %arraydecay6), !dbg !8043
  br label %if.end7

if.end7:                                          ; preds = %if.else5, %if.end
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %inrgb, i64 0, i64 0, !dbg !8044
  %13 = load float, float* %w.addr, align 4, !dbg !8045
  call void @mul_v4_fl(float* %arraydecay8, float %13), !dbg !8046
  %14 = load float*, float** %outrgb.addr, align 8, !dbg !8047
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %inrgb, i64 0, i64 0, !dbg !8048
  call void @add_v4_v4(float* %14, float* %arraydecay9), !dbg !8049
  %15 = load float, float* %w.addr, align 4, !dbg !8050
  store float %15, float* %retval, align 4, !dbg !8051
  br label %return, !dbg !8051

return:                                           ; preds = %if.end7, %if.else
  %16 = load float, float* %retval, align 4, !dbg !8052
  ret float %16, !dbg !8052
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v4_fl(float* %r, float %f) #0 !dbg !8053 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8054, metadata !DIExpression()), !dbg !8055
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8056, metadata !DIExpression()), !dbg !8057
  %0 = load float, float* %f.addr, align 4, !dbg !8058
  %1 = load float*, float** %r.addr, align 8, !dbg !8059
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !8059
  %2 = load float, float* %arrayidx, align 4, !dbg !8060
  %mul = fmul float %2, %0, !dbg !8060
  store float %mul, float* %arrayidx, align 4, !dbg !8060
  %3 = load float, float* %f.addr, align 4, !dbg !8061
  %4 = load float*, float** %r.addr, align 8, !dbg !8062
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !8062
  %5 = load float, float* %arrayidx1, align 4, !dbg !8063
  %mul2 = fmul float %5, %3, !dbg !8063
  store float %mul2, float* %arrayidx1, align 4, !dbg !8063
  %6 = load float, float* %f.addr, align 4, !dbg !8064
  %7 = load float*, float** %r.addr, align 8, !dbg !8065
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !8065
  %8 = load float, float* %arrayidx3, align 4, !dbg !8066
  %mul4 = fmul float %8, %6, !dbg !8066
  store float %mul4, float* %arrayidx3, align 4, !dbg !8066
  %9 = load float, float* %f.addr, align 4, !dbg !8067
  %10 = load float*, float** %r.addr, align 8, !dbg !8068
  %arrayidx5 = getelementptr inbounds float, float* %10, i64 3, !dbg !8068
  %11 = load float, float* %arrayidx5, align 4, !dbg !8069
  %mul6 = fmul float %11, %9, !dbg !8069
  store float %mul6, float* %arrayidx5, align 4, !dbg !8069
  ret void, !dbg !8070
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8071 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8072, metadata !DIExpression()), !dbg !8073
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8074, metadata !DIExpression()), !dbg !8075
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8076, metadata !DIExpression()), !dbg !8077
  %0 = load float*, float** %a.addr, align 8, !dbg !8078
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8078
  %1 = load float, float* %arrayidx, align 4, !dbg !8078
  %2 = load float*, float** %b.addr, align 8, !dbg !8079
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8079
  %3 = load float, float* %arrayidx1, align 4, !dbg !8079
  %sub = fsub float %1, %3, !dbg !8080
  %4 = load float*, float** %r.addr, align 8, !dbg !8081
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8081
  store float %sub, float* %arrayidx2, align 4, !dbg !8082
  %5 = load float*, float** %a.addr, align 8, !dbg !8083
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8083
  %6 = load float, float* %arrayidx3, align 4, !dbg !8083
  %7 = load float*, float** %b.addr, align 8, !dbg !8084
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8084
  %8 = load float, float* %arrayidx4, align 4, !dbg !8084
  %sub5 = fsub float %6, %8, !dbg !8085
  %9 = load float*, float** %r.addr, align 8, !dbg !8086
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8086
  store float %sub5, float* %arrayidx6, align 4, !dbg !8087
  %10 = load float*, float** %a.addr, align 8, !dbg !8088
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !8088
  %11 = load float, float* %arrayidx7, align 4, !dbg !8088
  %12 = load float*, float** %b.addr, align 8, !dbg !8089
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8089
  %13 = load float, float* %arrayidx8, align 4, !dbg !8089
  %sub9 = fsub float %11, %13, !dbg !8090
  %14 = load float*, float** %r.addr, align 8, !dbg !8091
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !8091
  store float %sub9, float* %arrayidx10, align 4, !dbg !8092
  ret void, !dbg !8093
}

; Function Attrs: noinline nounwind uwtable
define internal float @rgb_to_grayscale(float* %rgb) #0 !dbg !8094 {
entry:
  %rgb.addr = alloca float*, align 8
  store float* %rgb, float** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgb.addr, metadata !8095, metadata !DIExpression()), !dbg !8096
  %0 = load float*, float** %rgb.addr, align 8, !dbg !8097
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8097
  %1 = load float, float* %arrayidx, align 4, !dbg !8097
  %mul = fmul float 0x3FD3333340000000, %1, !dbg !8098
  %2 = load float*, float** %rgb.addr, align 8, !dbg !8099
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !8099
  %3 = load float, float* %arrayidx1, align 4, !dbg !8099
  %mul2 = fmul float 0x3FE28F5C20000000, %3, !dbg !8100
  %add = fadd float %mul, %mul2, !dbg !8101
  %4 = load float*, float** %rgb.addr, align 8, !dbg !8102
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !8102
  %5 = load float, float* %arrayidx3, align 4, !dbg !8102
  %mul4 = fmul float 0x3FBEB851E0000000, %5, !dbg !8103
  %add5 = fadd float %add, %mul4, !dbg !8104
  ret float %add5, !dbg !8105
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @blend_color_add_float(float* %dst, float* %src1, float* %src2) #0 !dbg !8106 {
entry:
  %dst.addr = alloca float*, align 8
  %src1.addr = alloca float*, align 8
  %src2.addr = alloca float*, align 8
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !8107, metadata !DIExpression()), !dbg !8108
  store float* %src1, float** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src1.addr, metadata !8109, metadata !DIExpression()), !dbg !8110
  store float* %src2, float** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src2.addr, metadata !8111, metadata !DIExpression()), !dbg !8112
  %0 = load float*, float** %src2.addr, align 8, !dbg !8113
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !8113
  %1 = load float, float* %arrayidx, align 4, !dbg !8113
  %cmp = fcmp une float %1, 0.000000e+00, !dbg !8115
  br i1 %cmp, label %if.then, label %if.else, !dbg !8116

if.then:                                          ; preds = %entry
  %2 = load float*, float** %src1.addr, align 8, !dbg !8117
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8117
  %3 = load float, float* %arrayidx1, align 4, !dbg !8117
  %4 = load float*, float** %src2.addr, align 8, !dbg !8119
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8119
  %5 = load float, float* %arrayidx2, align 4, !dbg !8119
  %6 = load float*, float** %src1.addr, align 8, !dbg !8120
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 3, !dbg !8120
  %7 = load float, float* %arrayidx3, align 4, !dbg !8120
  %mul = fmul float %5, %7, !dbg !8121
  %add = fadd float %3, %mul, !dbg !8122
  %8 = load float*, float** %dst.addr, align 8, !dbg !8123
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 0, !dbg !8123
  store float %add, float* %arrayidx4, align 4, !dbg !8124
  %9 = load float*, float** %src1.addr, align 8, !dbg !8125
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 1, !dbg !8125
  %10 = load float, float* %arrayidx5, align 4, !dbg !8125
  %11 = load float*, float** %src2.addr, align 8, !dbg !8126
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 1, !dbg !8126
  %12 = load float, float* %arrayidx6, align 4, !dbg !8126
  %13 = load float*, float** %src1.addr, align 8, !dbg !8127
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 3, !dbg !8127
  %14 = load float, float* %arrayidx7, align 4, !dbg !8127
  %mul8 = fmul float %12, %14, !dbg !8128
  %add9 = fadd float %10, %mul8, !dbg !8129
  %15 = load float*, float** %dst.addr, align 8, !dbg !8130
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 1, !dbg !8130
  store float %add9, float* %arrayidx10, align 4, !dbg !8131
  %16 = load float*, float** %src1.addr, align 8, !dbg !8132
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !8132
  %17 = load float, float* %arrayidx11, align 4, !dbg !8132
  %18 = load float*, float** %src2.addr, align 8, !dbg !8133
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 2, !dbg !8133
  %19 = load float, float* %arrayidx12, align 4, !dbg !8133
  %20 = load float*, float** %src1.addr, align 8, !dbg !8134
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 3, !dbg !8134
  %21 = load float, float* %arrayidx13, align 4, !dbg !8134
  %mul14 = fmul float %19, %21, !dbg !8135
  %add15 = fadd float %17, %mul14, !dbg !8136
  %22 = load float*, float** %dst.addr, align 8, !dbg !8137
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 2, !dbg !8137
  store float %add15, float* %arrayidx16, align 4, !dbg !8138
  %23 = load float*, float** %src1.addr, align 8, !dbg !8139
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 3, !dbg !8139
  %24 = load float, float* %arrayidx17, align 4, !dbg !8139
  %25 = load float*, float** %dst.addr, align 8, !dbg !8140
  %arrayidx18 = getelementptr inbounds float, float* %25, i64 3, !dbg !8140
  store float %24, float* %arrayidx18, align 4, !dbg !8141
  br label %if.end, !dbg !8142

if.else:                                          ; preds = %entry
  %26 = load float*, float** %dst.addr, align 8, !dbg !8143
  %27 = load float*, float** %src1.addr, align 8, !dbg !8145
  call void @copy_v4_v4(float* %26, float* %27), !dbg !8146
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8147
}

; Function Attrs: noinline nounwind uwtable
define internal void @paint_2d_ibuf_rgb_set(%struct.ImBuf* %ibuf, i32 %x, i32 %y, i8 zeroext %is_torus, float* %rgb) #0 !dbg !8148 {
entry:
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %is_torus.addr = alloca i8, align 1
  %rgb.addr = alloca float*, align 8
  %rrgbf = alloca float*, align 8
  %map_alpha = alloca float, align 4
  %straight = alloca [4 x i8], align 1
  %rrgb = alloca i8*, align 8
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !8151, metadata !DIExpression()), !dbg !8152
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8153, metadata !DIExpression()), !dbg !8154
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8155, metadata !DIExpression()), !dbg !8156
  store i8 %is_torus, i8* %is_torus.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_torus.addr, metadata !8157, metadata !DIExpression()), !dbg !8158
  store float* %rgb, float** %rgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rgb.addr, metadata !8159, metadata !DIExpression()), !dbg !8160
  %0 = load i8, i8* %is_torus.addr, align 1, !dbg !8161
  %tobool = icmp ne i8 %0, 0, !dbg !8161
  br i1 %tobool, label %if.then, label %if.end11, !dbg !8163

if.then:                                          ; preds = %entry
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8164
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %1, i32 0, i32 2, !dbg !8166
  %2 = load i32, i32* %x1, align 8, !dbg !8166
  %3 = load i32, i32* %x.addr, align 4, !dbg !8167
  %rem = srem i32 %3, %2, !dbg !8167
  store i32 %rem, i32* %x.addr, align 4, !dbg !8167
  %4 = load i32, i32* %x.addr, align 4, !dbg !8168
  %cmp = icmp slt i32 %4, 0, !dbg !8170
  br i1 %cmp, label %if.then2, label %if.end, !dbg !8171

if.then2:                                         ; preds = %if.then
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8172
  %x3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 2, !dbg !8173
  %6 = load i32, i32* %x3, align 8, !dbg !8173
  %7 = load i32, i32* %x.addr, align 4, !dbg !8174
  %add = add nsw i32 %7, %6, !dbg !8174
  store i32 %add, i32* %x.addr, align 4, !dbg !8174
  br label %if.end, !dbg !8175

if.end:                                           ; preds = %if.then2, %if.then
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8176
  %y4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 3, !dbg !8177
  %9 = load i32, i32* %y4, align 4, !dbg !8177
  %10 = load i32, i32* %y.addr, align 4, !dbg !8178
  %rem5 = srem i32 %10, %9, !dbg !8178
  store i32 %rem5, i32* %y.addr, align 4, !dbg !8178
  %11 = load i32, i32* %y.addr, align 4, !dbg !8179
  %cmp6 = icmp slt i32 %11, 0, !dbg !8181
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !8182

if.then7:                                         ; preds = %if.end
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8183
  %y8 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 3, !dbg !8184
  %13 = load i32, i32* %y8, align 4, !dbg !8184
  %14 = load i32, i32* %y.addr, align 4, !dbg !8185
  %add9 = add nsw i32 %14, %13, !dbg !8185
  store i32 %add9, i32* %y.addr, align 4, !dbg !8185
  br label %if.end10, !dbg !8186

if.end10:                                         ; preds = %if.then7, %if.end
  br label %if.end11, !dbg !8187

if.end11:                                         ; preds = %if.end10, %entry
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8188
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 9, !dbg !8190
  %16 = load float*, float** %rect_float, align 8, !dbg !8190
  %tobool12 = icmp ne float* %16, null, !dbg !8188
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !8191

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata float** %rrgbf, metadata !8192, metadata !DIExpression()), !dbg !8194
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8195
  %rect_float14 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 9, !dbg !8196
  %18 = load float*, float** %rect_float14, align 8, !dbg !8196
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8197
  %x15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 2, !dbg !8198
  %20 = load i32, i32* %x15, align 8, !dbg !8198
  %21 = load i32, i32* %y.addr, align 4, !dbg !8199
  %mul = mul nsw i32 %20, %21, !dbg !8200
  %22 = load i32, i32* %x.addr, align 4, !dbg !8201
  %add16 = add nsw i32 %mul, %22, !dbg !8202
  %mul17 = mul nsw i32 %add16, 4, !dbg !8203
  %idx.ext = sext i32 %mul17 to i64, !dbg !8204
  %add.ptr = getelementptr inbounds float, float* %18, i64 %idx.ext, !dbg !8204
  store float* %add.ptr, float** %rrgbf, align 8, !dbg !8194
  call void @llvm.dbg.declare(metadata float* %map_alpha, metadata !8205, metadata !DIExpression()), !dbg !8206
  %23 = load float*, float** %rgb.addr, align 8, !dbg !8207
  %arrayidx = getelementptr inbounds float, float* %23, i64 3, !dbg !8207
  %24 = load float, float* %arrayidx, align 4, !dbg !8207
  %cmp18 = fcmp oeq float %24, 0.000000e+00, !dbg !8208
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !8209

cond.true:                                        ; preds = %if.then13
  %25 = load float*, float** %rrgbf, align 8, !dbg !8210
  %arrayidx19 = getelementptr inbounds float, float* %25, i64 3, !dbg !8210
  %26 = load float, float* %arrayidx19, align 4, !dbg !8210
  br label %cond.end, !dbg !8209

cond.false:                                       ; preds = %if.then13
  %27 = load float*, float** %rrgbf, align 8, !dbg !8211
  %arrayidx20 = getelementptr inbounds float, float* %27, i64 3, !dbg !8211
  %28 = load float, float* %arrayidx20, align 4, !dbg !8211
  %29 = load float*, float** %rgb.addr, align 8, !dbg !8212
  %arrayidx21 = getelementptr inbounds float, float* %29, i64 3, !dbg !8212
  %30 = load float, float* %arrayidx21, align 4, !dbg !8212
  %div = fdiv float %28, %30, !dbg !8213
  br label %cond.end, !dbg !8209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %26, %cond.true ], [ %div, %cond.false ], !dbg !8209
  store float %cond, float* %map_alpha, align 4, !dbg !8206
  %31 = load float*, float** %rrgbf, align 8, !dbg !8214
  %32 = load float*, float** %rgb.addr, align 8, !dbg !8215
  %33 = load float, float* %map_alpha, align 4, !dbg !8216
  call void @mul_v3_v3fl(float* %31, float* %32, float %33), !dbg !8217
  br label %if.end34, !dbg !8218

if.else:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata [4 x i8]* %straight, metadata !8219, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.declare(metadata i8** %rrgb, metadata !8222, metadata !DIExpression()), !dbg !8223
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8224
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 8, !dbg !8225
  %35 = load i32*, i32** %rect, align 8, !dbg !8225
  %36 = bitcast i32* %35 to i8*, !dbg !8226
  %37 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !8227
  %x22 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %37, i32 0, i32 2, !dbg !8228
  %38 = load i32, i32* %x22, align 8, !dbg !8228
  %39 = load i32, i32* %y.addr, align 4, !dbg !8229
  %mul23 = mul nsw i32 %38, %39, !dbg !8230
  %40 = load i32, i32* %x.addr, align 4, !dbg !8231
  %add24 = add nsw i32 %mul23, %40, !dbg !8232
  %mul25 = mul nsw i32 %add24, 4, !dbg !8233
  %idx.ext26 = sext i32 %mul25 to i64, !dbg !8234
  %add.ptr27 = getelementptr inbounds i8, i8* %36, i64 %idx.ext26, !dbg !8234
  store i8* %add.ptr27, i8** %rrgb, align 8, !dbg !8223
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %straight, i64 0, i64 0, !dbg !8235
  %41 = load float*, float** %rgb.addr, align 8, !dbg !8236
  call void @premul_float_to_straight_uchar(i8* %arraydecay, float* %41), !dbg !8237
  %arrayidx28 = getelementptr inbounds [4 x i8], [4 x i8]* %straight, i64 0, i64 0, !dbg !8238
  %42 = load i8, i8* %arrayidx28, align 1, !dbg !8238
  %43 = load i8*, i8** %rrgb, align 8, !dbg !8239
  %arrayidx29 = getelementptr inbounds i8, i8* %43, i64 0, !dbg !8239
  store i8 %42, i8* %arrayidx29, align 1, !dbg !8240
  %arrayidx30 = getelementptr inbounds [4 x i8], [4 x i8]* %straight, i64 0, i64 1, !dbg !8241
  %44 = load i8, i8* %arrayidx30, align 1, !dbg !8241
  %45 = load i8*, i8** %rrgb, align 8, !dbg !8242
  %arrayidx31 = getelementptr inbounds i8, i8* %45, i64 1, !dbg !8242
  store i8 %44, i8* %arrayidx31, align 1, !dbg !8243
  %arrayidx32 = getelementptr inbounds [4 x i8], [4 x i8]* %straight, i64 0, i64 2, !dbg !8244
  %46 = load i8, i8* %arrayidx32, align 1, !dbg !8244
  %47 = load i8*, i8** %rrgb, align 8, !dbg !8245
  %arrayidx33 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !8245
  store i8 %46, i8* %arrayidx33, align 1, !dbg !8246
  br label %if.end34

if.end34:                                         ; preds = %if.else, %cond.end
  ret void, !dbg !8247
}

; Function Attrs: noinline nounwind uwtable
define internal void @straight_uchar_to_premul_float(float* %result, i8* %color) #0 !dbg !8248 {
entry:
  %result.addr = alloca float*, align 8
  %color.addr = alloca i8*, align 8
  %alpha = alloca float, align 4
  %fac = alloca float, align 4
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !8251, metadata !DIExpression()), !dbg !8252
  store i8* %color, i8** %color.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %color.addr, metadata !8253, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !8255, metadata !DIExpression()), !dbg !8256
  %0 = load i8*, i8** %color.addr, align 8, !dbg !8257
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 3, !dbg !8257
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8257
  %conv = zext i8 %1 to i32, !dbg !8257
  %conv1 = sitofp i32 %conv to float, !dbg !8257
  %mul = fmul float %conv1, 0x3F70101020000000, !dbg !8258
  store float %mul, float* %alpha, align 4, !dbg !8256
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8259, metadata !DIExpression()), !dbg !8260
  %2 = load float, float* %alpha, align 4, !dbg !8261
  %mul2 = fmul float %2, 0x3F70101020000000, !dbg !8262
  store float %mul2, float* %fac, align 4, !dbg !8260
  %3 = load i8*, i8** %color.addr, align 8, !dbg !8263
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !8263
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !8263
  %conv4 = zext i8 %4 to i32, !dbg !8263
  %conv5 = sitofp i32 %conv4 to float, !dbg !8263
  %5 = load float, float* %fac, align 4, !dbg !8264
  %mul6 = fmul float %conv5, %5, !dbg !8265
  %6 = load float*, float** %result.addr, align 8, !dbg !8266
  %arrayidx7 = getelementptr inbounds float, float* %6, i64 0, !dbg !8266
  store float %mul6, float* %arrayidx7, align 4, !dbg !8267
  %7 = load i8*, i8** %color.addr, align 8, !dbg !8268
  %arrayidx8 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !8268
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !8268
  %conv9 = zext i8 %8 to i32, !dbg !8268
  %conv10 = sitofp i32 %conv9 to float, !dbg !8268
  %9 = load float, float* %fac, align 4, !dbg !8269
  %mul11 = fmul float %conv10, %9, !dbg !8270
  %10 = load float*, float** %result.addr, align 8, !dbg !8271
  %arrayidx12 = getelementptr inbounds float, float* %10, i64 1, !dbg !8271
  store float %mul11, float* %arrayidx12, align 4, !dbg !8272
  %11 = load i8*, i8** %color.addr, align 8, !dbg !8273
  %arrayidx13 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !8273
  %12 = load i8, i8* %arrayidx13, align 1, !dbg !8273
  %conv14 = zext i8 %12 to i32, !dbg !8273
  %conv15 = sitofp i32 %conv14 to float, !dbg !8273
  %13 = load float, float* %fac, align 4, !dbg !8274
  %mul16 = fmul float %conv15, %13, !dbg !8275
  %14 = load float*, float** %result.addr, align 8, !dbg !8276
  %arrayidx17 = getelementptr inbounds float, float* %14, i64 2, !dbg !8276
  store float %mul16, float* %arrayidx17, align 4, !dbg !8277
  %15 = load float, float* %alpha, align 4, !dbg !8278
  %16 = load float*, float** %result.addr, align 8, !dbg !8279
  %arrayidx18 = getelementptr inbounds float, float* %16, i64 3, !dbg !8279
  store float %15, float* %arrayidx18, align 4, !dbg !8280
  ret void, !dbg !8281
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v4_v4(float* %r, float* %a) #0 !dbg !8282 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  %0 = load float*, float** %a.addr, align 8, !dbg !8287
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8287
  %1 = load float, float* %arrayidx, align 4, !dbg !8287
  %2 = load float*, float** %r.addr, align 8, !dbg !8288
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8288
  %3 = load float, float* %arrayidx1, align 4, !dbg !8289
  %add = fadd float %3, %1, !dbg !8289
  store float %add, float* %arrayidx1, align 4, !dbg !8289
  %4 = load float*, float** %a.addr, align 8, !dbg !8290
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8290
  %5 = load float, float* %arrayidx2, align 4, !dbg !8290
  %6 = load float*, float** %r.addr, align 8, !dbg !8291
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8291
  %7 = load float, float* %arrayidx3, align 4, !dbg !8292
  %add4 = fadd float %7, %5, !dbg !8292
  store float %add4, float* %arrayidx3, align 4, !dbg !8292
  %8 = load float*, float** %a.addr, align 8, !dbg !8293
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8293
  %9 = load float, float* %arrayidx5, align 4, !dbg !8293
  %10 = load float*, float** %r.addr, align 8, !dbg !8294
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8294
  %11 = load float, float* %arrayidx6, align 4, !dbg !8295
  %add7 = fadd float %11, %9, !dbg !8295
  store float %add7, float* %arrayidx6, align 4, !dbg !8295
  %12 = load float*, float** %a.addr, align 8, !dbg !8296
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 3, !dbg !8296
  %13 = load float, float* %arrayidx8, align 4, !dbg !8296
  %14 = load float*, float** %r.addr, align 8, !dbg !8297
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 3, !dbg !8297
  %15 = load float, float* %arrayidx9, align 4, !dbg !8298
  %add10 = fadd float %15, %13, !dbg !8298
  store float %add10, float* %arrayidx9, align 4, !dbg !8298
  ret void, !dbg !8299
}

; Function Attrs: noinline nounwind uwtable
define internal void @premul_float_to_straight_uchar(i8* %result, float* %color) #0 !dbg !8300 {
entry:
  %result.addr = alloca i8*, align 8
  %color.addr = alloca float*, align 8
  %alpha_inv = alloca float, align 4
  store i8* %result, i8** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %result.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !8303, metadata !DIExpression()), !dbg !8304
  %0 = load float*, float** %color.addr, align 8, !dbg !8305
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !8305
  %1 = load float, float* %arrayidx, align 4, !dbg !8305
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !8307
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8308

lor.lhs.false:                                    ; preds = %entry
  %2 = load float*, float** %color.addr, align 8, !dbg !8309
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 3, !dbg !8309
  %3 = load float, float* %arrayidx1, align 4, !dbg !8309
  %cmp2 = fcmp oeq float %3, 1.000000e+00, !dbg !8310
  br i1 %cmp2, label %if.then, label %if.else, !dbg !8311

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load float*, float** %color.addr, align 8, !dbg !8312
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !8312
  %5 = load float, float* %arrayidx3, align 4, !dbg !8312
  %cmp4 = fcmp ole float %5, 0.000000e+00, !dbg !8312
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8312

cond.true:                                        ; preds = %if.then
  br label %cond.end10, !dbg !8312

cond.false:                                       ; preds = %if.then
  %6 = load float*, float** %color.addr, align 8, !dbg !8312
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 0, !dbg !8312
  %7 = load float, float* %arrayidx5, align 4, !dbg !8312
  %cmp6 = fcmp ogt float %7, 0x3FEFEFEFE0000000, !dbg !8312
  br i1 %cmp6, label %cond.true7, label %cond.false8, !dbg !8312

cond.true7:                                       ; preds = %cond.false
  br label %cond.end, !dbg !8312

cond.false8:                                      ; preds = %cond.false
  %8 = load float*, float** %color.addr, align 8, !dbg !8312
  %arrayidx9 = getelementptr inbounds float, float* %8, i64 0, !dbg !8312
  %9 = load float, float* %arrayidx9, align 4, !dbg !8312
  %mul = fmul float 2.550000e+02, %9, !dbg !8312
  %add = fadd float %mul, 5.000000e-01, !dbg !8312
  br label %cond.end, !dbg !8312

cond.end:                                         ; preds = %cond.false8, %cond.true7
  %cond = phi float [ 2.550000e+02, %cond.true7 ], [ %add, %cond.false8 ], !dbg !8312
  br label %cond.end10, !dbg !8312

cond.end10:                                       ; preds = %cond.end, %cond.true
  %cond11 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !8312
  %conv = fptoui float %cond11 to i8, !dbg !8312
  %10 = load i8*, i8** %result.addr, align 8, !dbg !8314
  %arrayidx12 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !8314
  store i8 %conv, i8* %arrayidx12, align 1, !dbg !8315
  %11 = load float*, float** %color.addr, align 8, !dbg !8316
  %arrayidx13 = getelementptr inbounds float, float* %11, i64 1, !dbg !8316
  %12 = load float, float* %arrayidx13, align 4, !dbg !8316
  %cmp14 = fcmp ole float %12, 0.000000e+00, !dbg !8316
  br i1 %cmp14, label %cond.true16, label %cond.false17, !dbg !8316

cond.true16:                                      ; preds = %cond.end10
  br label %cond.end28, !dbg !8316

cond.false17:                                     ; preds = %cond.end10
  %13 = load float*, float** %color.addr, align 8, !dbg !8316
  %arrayidx18 = getelementptr inbounds float, float* %13, i64 1, !dbg !8316
  %14 = load float, float* %arrayidx18, align 4, !dbg !8316
  %cmp19 = fcmp ogt float %14, 0x3FEFEFEFE0000000, !dbg !8316
  br i1 %cmp19, label %cond.true21, label %cond.false22, !dbg !8316

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end26, !dbg !8316

cond.false22:                                     ; preds = %cond.false17
  %15 = load float*, float** %color.addr, align 8, !dbg !8316
  %arrayidx23 = getelementptr inbounds float, float* %15, i64 1, !dbg !8316
  %16 = load float, float* %arrayidx23, align 4, !dbg !8316
  %mul24 = fmul float 2.550000e+02, %16, !dbg !8316
  %add25 = fadd float %mul24, 5.000000e-01, !dbg !8316
  br label %cond.end26, !dbg !8316

cond.end26:                                       ; preds = %cond.false22, %cond.true21
  %cond27 = phi float [ 2.550000e+02, %cond.true21 ], [ %add25, %cond.false22 ], !dbg !8316
  br label %cond.end28, !dbg !8316

cond.end28:                                       ; preds = %cond.end26, %cond.true16
  %cond29 = phi float [ 0.000000e+00, %cond.true16 ], [ %cond27, %cond.end26 ], !dbg !8316
  %conv30 = fptoui float %cond29 to i8, !dbg !8316
  %17 = load i8*, i8** %result.addr, align 8, !dbg !8317
  %arrayidx31 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !8317
  store i8 %conv30, i8* %arrayidx31, align 1, !dbg !8318
  %18 = load float*, float** %color.addr, align 8, !dbg !8319
  %arrayidx32 = getelementptr inbounds float, float* %18, i64 2, !dbg !8319
  %19 = load float, float* %arrayidx32, align 4, !dbg !8319
  %cmp33 = fcmp ole float %19, 0.000000e+00, !dbg !8319
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !8319

cond.true35:                                      ; preds = %cond.end28
  br label %cond.end47, !dbg !8319

cond.false36:                                     ; preds = %cond.end28
  %20 = load float*, float** %color.addr, align 8, !dbg !8319
  %arrayidx37 = getelementptr inbounds float, float* %20, i64 2, !dbg !8319
  %21 = load float, float* %arrayidx37, align 4, !dbg !8319
  %cmp38 = fcmp ogt float %21, 0x3FEFEFEFE0000000, !dbg !8319
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !8319

cond.true40:                                      ; preds = %cond.false36
  br label %cond.end45, !dbg !8319

cond.false41:                                     ; preds = %cond.false36
  %22 = load float*, float** %color.addr, align 8, !dbg !8319
  %arrayidx42 = getelementptr inbounds float, float* %22, i64 2, !dbg !8319
  %23 = load float, float* %arrayidx42, align 4, !dbg !8319
  %mul43 = fmul float 2.550000e+02, %23, !dbg !8319
  %add44 = fadd float %mul43, 5.000000e-01, !dbg !8319
  br label %cond.end45, !dbg !8319

cond.end45:                                       ; preds = %cond.false41, %cond.true40
  %cond46 = phi float [ 2.550000e+02, %cond.true40 ], [ %add44, %cond.false41 ], !dbg !8319
  br label %cond.end47, !dbg !8319

cond.end47:                                       ; preds = %cond.end45, %cond.true35
  %cond48 = phi float [ 0.000000e+00, %cond.true35 ], [ %cond46, %cond.end45 ], !dbg !8319
  %conv49 = fptoui float %cond48 to i8, !dbg !8319
  %24 = load i8*, i8** %result.addr, align 8, !dbg !8320
  %arrayidx50 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !8320
  store i8 %conv49, i8* %arrayidx50, align 1, !dbg !8321
  %25 = load float*, float** %color.addr, align 8, !dbg !8322
  %arrayidx51 = getelementptr inbounds float, float* %25, i64 3, !dbg !8322
  %26 = load float, float* %arrayidx51, align 4, !dbg !8322
  %cmp52 = fcmp ole float %26, 0.000000e+00, !dbg !8322
  br i1 %cmp52, label %cond.true54, label %cond.false55, !dbg !8322

cond.true54:                                      ; preds = %cond.end47
  br label %cond.end66, !dbg !8322

cond.false55:                                     ; preds = %cond.end47
  %27 = load float*, float** %color.addr, align 8, !dbg !8322
  %arrayidx56 = getelementptr inbounds float, float* %27, i64 3, !dbg !8322
  %28 = load float, float* %arrayidx56, align 4, !dbg !8322
  %cmp57 = fcmp ogt float %28, 0x3FEFEFEFE0000000, !dbg !8322
  br i1 %cmp57, label %cond.true59, label %cond.false60, !dbg !8322

cond.true59:                                      ; preds = %cond.false55
  br label %cond.end64, !dbg !8322

cond.false60:                                     ; preds = %cond.false55
  %29 = load float*, float** %color.addr, align 8, !dbg !8322
  %arrayidx61 = getelementptr inbounds float, float* %29, i64 3, !dbg !8322
  %30 = load float, float* %arrayidx61, align 4, !dbg !8322
  %mul62 = fmul float 2.550000e+02, %30, !dbg !8322
  %add63 = fadd float %mul62, 5.000000e-01, !dbg !8322
  br label %cond.end64, !dbg !8322

cond.end64:                                       ; preds = %cond.false60, %cond.true59
  %cond65 = phi float [ 2.550000e+02, %cond.true59 ], [ %add63, %cond.false60 ], !dbg !8322
  br label %cond.end66, !dbg !8322

cond.end66:                                       ; preds = %cond.end64, %cond.true54
  %cond67 = phi float [ 0.000000e+00, %cond.true54 ], [ %cond65, %cond.end64 ], !dbg !8322
  %conv68 = fptoui float %cond67 to i8, !dbg !8322
  %31 = load i8*, i8** %result.addr, align 8, !dbg !8323
  %arrayidx69 = getelementptr inbounds i8, i8* %31, i64 3, !dbg !8323
  store i8 %conv68, i8* %arrayidx69, align 1, !dbg !8324
  br label %if.end, !dbg !8325

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata float* %alpha_inv, metadata !8326, metadata !DIExpression()), !dbg !8328
  %32 = load float*, float** %color.addr, align 8, !dbg !8329
  %arrayidx70 = getelementptr inbounds float, float* %32, i64 3, !dbg !8329
  %33 = load float, float* %arrayidx70, align 4, !dbg !8329
  %div = fdiv float 1.000000e+00, %33, !dbg !8330
  store float %div, float* %alpha_inv, align 4, !dbg !8328
  %34 = load float*, float** %color.addr, align 8, !dbg !8331
  %arrayidx71 = getelementptr inbounds float, float* %34, i64 0, !dbg !8331
  %35 = load float, float* %arrayidx71, align 4, !dbg !8331
  %36 = load float, float* %alpha_inv, align 4, !dbg !8331
  %mul72 = fmul float %35, %36, !dbg !8331
  %cmp73 = fcmp ole float %mul72, 0.000000e+00, !dbg !8331
  br i1 %cmp73, label %cond.true75, label %cond.false76, !dbg !8331

cond.true75:                                      ; preds = %if.else
  br label %cond.end89, !dbg !8331

cond.false76:                                     ; preds = %if.else
  %37 = load float*, float** %color.addr, align 8, !dbg !8331
  %arrayidx77 = getelementptr inbounds float, float* %37, i64 0, !dbg !8331
  %38 = load float, float* %arrayidx77, align 4, !dbg !8331
  %39 = load float, float* %alpha_inv, align 4, !dbg !8331
  %mul78 = fmul float %38, %39, !dbg !8331
  %cmp79 = fcmp ogt float %mul78, 0x3FEFEFEFE0000000, !dbg !8331
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !8331

cond.true81:                                      ; preds = %cond.false76
  br label %cond.end87, !dbg !8331

cond.false82:                                     ; preds = %cond.false76
  %40 = load float*, float** %color.addr, align 8, !dbg !8331
  %arrayidx83 = getelementptr inbounds float, float* %40, i64 0, !dbg !8331
  %41 = load float, float* %arrayidx83, align 4, !dbg !8331
  %42 = load float, float* %alpha_inv, align 4, !dbg !8331
  %mul84 = fmul float %41, %42, !dbg !8331
  %mul85 = fmul float 2.550000e+02, %mul84, !dbg !8331
  %add86 = fadd float %mul85, 5.000000e-01, !dbg !8331
  br label %cond.end87, !dbg !8331

cond.end87:                                       ; preds = %cond.false82, %cond.true81
  %cond88 = phi float [ 2.550000e+02, %cond.true81 ], [ %add86, %cond.false82 ], !dbg !8331
  br label %cond.end89, !dbg !8331

cond.end89:                                       ; preds = %cond.end87, %cond.true75
  %cond90 = phi float [ 0.000000e+00, %cond.true75 ], [ %cond88, %cond.end87 ], !dbg !8331
  %conv91 = fptoui float %cond90 to i8, !dbg !8331
  %43 = load i8*, i8** %result.addr, align 8, !dbg !8332
  %arrayidx92 = getelementptr inbounds i8, i8* %43, i64 0, !dbg !8332
  store i8 %conv91, i8* %arrayidx92, align 1, !dbg !8333
  %44 = load float*, float** %color.addr, align 8, !dbg !8334
  %arrayidx93 = getelementptr inbounds float, float* %44, i64 1, !dbg !8334
  %45 = load float, float* %arrayidx93, align 4, !dbg !8334
  %46 = load float, float* %alpha_inv, align 4, !dbg !8334
  %mul94 = fmul float %45, %46, !dbg !8334
  %cmp95 = fcmp ole float %mul94, 0.000000e+00, !dbg !8334
  br i1 %cmp95, label %cond.true97, label %cond.false98, !dbg !8334

cond.true97:                                      ; preds = %cond.end89
  br label %cond.end111, !dbg !8334

cond.false98:                                     ; preds = %cond.end89
  %47 = load float*, float** %color.addr, align 8, !dbg !8334
  %arrayidx99 = getelementptr inbounds float, float* %47, i64 1, !dbg !8334
  %48 = load float, float* %arrayidx99, align 4, !dbg !8334
  %49 = load float, float* %alpha_inv, align 4, !dbg !8334
  %mul100 = fmul float %48, %49, !dbg !8334
  %cmp101 = fcmp ogt float %mul100, 0x3FEFEFEFE0000000, !dbg !8334
  br i1 %cmp101, label %cond.true103, label %cond.false104, !dbg !8334

cond.true103:                                     ; preds = %cond.false98
  br label %cond.end109, !dbg !8334

cond.false104:                                    ; preds = %cond.false98
  %50 = load float*, float** %color.addr, align 8, !dbg !8334
  %arrayidx105 = getelementptr inbounds float, float* %50, i64 1, !dbg !8334
  %51 = load float, float* %arrayidx105, align 4, !dbg !8334
  %52 = load float, float* %alpha_inv, align 4, !dbg !8334
  %mul106 = fmul float %51, %52, !dbg !8334
  %mul107 = fmul float 2.550000e+02, %mul106, !dbg !8334
  %add108 = fadd float %mul107, 5.000000e-01, !dbg !8334
  br label %cond.end109, !dbg !8334

cond.end109:                                      ; preds = %cond.false104, %cond.true103
  %cond110 = phi float [ 2.550000e+02, %cond.true103 ], [ %add108, %cond.false104 ], !dbg !8334
  br label %cond.end111, !dbg !8334

cond.end111:                                      ; preds = %cond.end109, %cond.true97
  %cond112 = phi float [ 0.000000e+00, %cond.true97 ], [ %cond110, %cond.end109 ], !dbg !8334
  %conv113 = fptoui float %cond112 to i8, !dbg !8334
  %53 = load i8*, i8** %result.addr, align 8, !dbg !8335
  %arrayidx114 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !8335
  store i8 %conv113, i8* %arrayidx114, align 1, !dbg !8336
  %54 = load float*, float** %color.addr, align 8, !dbg !8337
  %arrayidx115 = getelementptr inbounds float, float* %54, i64 2, !dbg !8337
  %55 = load float, float* %arrayidx115, align 4, !dbg !8337
  %56 = load float, float* %alpha_inv, align 4, !dbg !8337
  %mul116 = fmul float %55, %56, !dbg !8337
  %cmp117 = fcmp ole float %mul116, 0.000000e+00, !dbg !8337
  br i1 %cmp117, label %cond.true119, label %cond.false120, !dbg !8337

cond.true119:                                     ; preds = %cond.end111
  br label %cond.end133, !dbg !8337

cond.false120:                                    ; preds = %cond.end111
  %57 = load float*, float** %color.addr, align 8, !dbg !8337
  %arrayidx121 = getelementptr inbounds float, float* %57, i64 2, !dbg !8337
  %58 = load float, float* %arrayidx121, align 4, !dbg !8337
  %59 = load float, float* %alpha_inv, align 4, !dbg !8337
  %mul122 = fmul float %58, %59, !dbg !8337
  %cmp123 = fcmp ogt float %mul122, 0x3FEFEFEFE0000000, !dbg !8337
  br i1 %cmp123, label %cond.true125, label %cond.false126, !dbg !8337

cond.true125:                                     ; preds = %cond.false120
  br label %cond.end131, !dbg !8337

cond.false126:                                    ; preds = %cond.false120
  %60 = load float*, float** %color.addr, align 8, !dbg !8337
  %arrayidx127 = getelementptr inbounds float, float* %60, i64 2, !dbg !8337
  %61 = load float, float* %arrayidx127, align 4, !dbg !8337
  %62 = load float, float* %alpha_inv, align 4, !dbg !8337
  %mul128 = fmul float %61, %62, !dbg !8337
  %mul129 = fmul float 2.550000e+02, %mul128, !dbg !8337
  %add130 = fadd float %mul129, 5.000000e-01, !dbg !8337
  br label %cond.end131, !dbg !8337

cond.end131:                                      ; preds = %cond.false126, %cond.true125
  %cond132 = phi float [ 2.550000e+02, %cond.true125 ], [ %add130, %cond.false126 ], !dbg !8337
  br label %cond.end133, !dbg !8337

cond.end133:                                      ; preds = %cond.end131, %cond.true119
  %cond134 = phi float [ 0.000000e+00, %cond.true119 ], [ %cond132, %cond.end131 ], !dbg !8337
  %conv135 = fptoui float %cond134 to i8, !dbg !8337
  %63 = load i8*, i8** %result.addr, align 8, !dbg !8338
  %arrayidx136 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !8338
  store i8 %conv135, i8* %arrayidx136, align 1, !dbg !8339
  %64 = load float*, float** %color.addr, align 8, !dbg !8340
  %arrayidx137 = getelementptr inbounds float, float* %64, i64 3, !dbg !8340
  %65 = load float, float* %arrayidx137, align 4, !dbg !8340
  %cmp138 = fcmp ole float %65, 0.000000e+00, !dbg !8340
  br i1 %cmp138, label %cond.true140, label %cond.false141, !dbg !8340

cond.true140:                                     ; preds = %cond.end133
  br label %cond.end152, !dbg !8340

cond.false141:                                    ; preds = %cond.end133
  %66 = load float*, float** %color.addr, align 8, !dbg !8340
  %arrayidx142 = getelementptr inbounds float, float* %66, i64 3, !dbg !8340
  %67 = load float, float* %arrayidx142, align 4, !dbg !8340
  %cmp143 = fcmp ogt float %67, 0x3FEFEFEFE0000000, !dbg !8340
  br i1 %cmp143, label %cond.true145, label %cond.false146, !dbg !8340

cond.true145:                                     ; preds = %cond.false141
  br label %cond.end150, !dbg !8340

cond.false146:                                    ; preds = %cond.false141
  %68 = load float*, float** %color.addr, align 8, !dbg !8340
  %arrayidx147 = getelementptr inbounds float, float* %68, i64 3, !dbg !8340
  %69 = load float, float* %arrayidx147, align 4, !dbg !8340
  %mul148 = fmul float 2.550000e+02, %69, !dbg !8340
  %add149 = fadd float %mul148, 5.000000e-01, !dbg !8340
  br label %cond.end150, !dbg !8340

cond.end150:                                      ; preds = %cond.false146, %cond.true145
  %cond151 = phi float [ 2.550000e+02, %cond.true145 ], [ %add149, %cond.false146 ], !dbg !8340
  br label %cond.end152, !dbg !8340

cond.end152:                                      ; preds = %cond.end150, %cond.true140
  %cond153 = phi float [ 0.000000e+00, %cond.true140 ], [ %cond151, %cond.end150 ], !dbg !8340
  %conv154 = fptoui float %cond153 to i8, !dbg !8340
  %70 = load i8*, i8** %result.addr, align 8, !dbg !8341
  %arrayidx155 = getelementptr inbounds i8, i8* %70, i64 3, !dbg !8341
  store i8 %conv154, i8* %arrayidx155, align 1, !dbg !8342
  br label %if.end

if.end:                                           ; preds = %cond.end152, %cond.end66
  ret void, !dbg !8343
}

declare dso_local void @IMB_float_from_rect(%struct.ImBuf*) #2

declare dso_local void @IMB_rect_from_float(%struct.ImBuf*) #2

declare dso_local zeroext i8 @paint_use_opacity_masking(%struct.Brush*) #2

declare dso_local void @paint_delete_blur_kernel(%struct.BlurKernel*) #2

declare dso_local void @image_undo_remove_masks() #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @divide_round_i(i32 %a, i32 %b) #0 !dbg !8344 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8345, metadata !DIExpression()), !dbg !8346
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8347, metadata !DIExpression()), !dbg !8348
  %0 = load i32, i32* %a.addr, align 4, !dbg !8349
  %mul = mul nsw i32 2, %0, !dbg !8350
  %1 = load i32, i32* %b.addr, align 4, !dbg !8351
  %add = add nsw i32 %mul, %1, !dbg !8352
  %2 = load i32, i32* %b.addr, align 4, !dbg !8353
  %mul1 = mul nsw i32 2, %2, !dbg !8354
  %div = sdiv i32 %add, %mul1, !dbg !8355
  ret i32 %div, !dbg !8356
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4_char(i8* %r, i8* %a) #0 !dbg !8357 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8364
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !8364
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8364
  %2 = load i8*, i8** %r.addr, align 8, !dbg !8365
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !8365
  store i8 %1, i8* %arrayidx1, align 1, !dbg !8366
  %3 = load i8*, i8** %a.addr, align 8, !dbg !8367
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !8367
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !8367
  %5 = load i8*, i8** %r.addr, align 8, !dbg !8368
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !8368
  store i8 %4, i8* %arrayidx3, align 1, !dbg !8369
  %6 = load i8*, i8** %a.addr, align 8, !dbg !8370
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !8370
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !8370
  %8 = load i8*, i8** %r.addr, align 8, !dbg !8371
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !8371
  store i8 %7, i8* %arrayidx5, align 1, !dbg !8372
  %9 = load i8*, i8** %a.addr, align 8, !dbg !8373
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 3, !dbg !8373
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !8373
  %11 = load i8*, i8** %r.addr, align 8, !dbg !8374
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !8374
  store i8 %10, i8* %arrayidx7, align 1, !dbg !8375
  ret void, !dbg !8376
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @compare_len_squared_v3v3(float* %v1, float* %v2, float %limit_sq) #0 !dbg !8377 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %limit_sq.addr = alloca float, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !8380, metadata !DIExpression()), !dbg !8381
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !8382, metadata !DIExpression()), !dbg !8383
  store float %limit_sq, float* %limit_sq.addr, align 4
  call void @llvm.dbg.declare(metadata float* %limit_sq.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.declare(metadata float* %x, metadata !8386, metadata !DIExpression()), !dbg !8387
  call void @llvm.dbg.declare(metadata float* %y, metadata !8388, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.declare(metadata float* %z, metadata !8390, metadata !DIExpression()), !dbg !8391
  %0 = load float*, float** %v1.addr, align 8, !dbg !8392
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8392
  %1 = load float, float* %arrayidx, align 4, !dbg !8392
  %2 = load float*, float** %v2.addr, align 8, !dbg !8393
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8393
  %3 = load float, float* %arrayidx1, align 4, !dbg !8393
  %sub = fsub float %1, %3, !dbg !8394
  store float %sub, float* %x, align 4, !dbg !8395
  %4 = load float*, float** %v1.addr, align 8, !dbg !8396
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8396
  %5 = load float, float* %arrayidx2, align 4, !dbg !8396
  %6 = load float*, float** %v2.addr, align 8, !dbg !8397
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8397
  %7 = load float, float* %arrayidx3, align 4, !dbg !8397
  %sub4 = fsub float %5, %7, !dbg !8398
  store float %sub4, float* %y, align 4, !dbg !8399
  %8 = load float*, float** %v1.addr, align 8, !dbg !8400
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8400
  %9 = load float, float* %arrayidx5, align 4, !dbg !8400
  %10 = load float*, float** %v2.addr, align 8, !dbg !8401
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8401
  %11 = load float, float* %arrayidx6, align 4, !dbg !8401
  %sub7 = fsub float %9, %11, !dbg !8402
  store float %sub7, float* %z, align 4, !dbg !8403
  %12 = load float, float* %x, align 4, !dbg !8404
  %13 = load float, float* %x, align 4, !dbg !8405
  %mul = fmul float %12, %13, !dbg !8406
  %14 = load float, float* %y, align 4, !dbg !8407
  %15 = load float, float* %y, align 4, !dbg !8408
  %mul8 = fmul float %14, %15, !dbg !8409
  %add = fadd float %mul, %mul8, !dbg !8410
  %16 = load float, float* %z, align 4, !dbg !8411
  %17 = load float, float* %z, align 4, !dbg !8412
  %mul9 = fmul float %16, %17, !dbg !8413
  %add10 = fadd float %add, %mul9, !dbg !8414
  %18 = load float, float* %limit_sq.addr, align 4, !dbg !8415
  %cmp = fcmp ole float %add10, %18, !dbg !8416
  %conv = zext i1 %cmp to i32, !dbg !8416
  %conv11 = trunc i32 %conv to i8, !dbg !8417
  ret i8 %conv11, !dbg !8418
}

declare dso_local float @linearrgb_to_srgb(float) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2443, !2444, !2445}
!llvm.ident = !{!2446}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !104, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/paint_image_2d.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !8, !38, !50, !59, !65, !99}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 284, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7}
!7 = !DIEnumerator(name: "IMB_COLORMANAGE_IS_DATA", value: 1, isUnsigned: true)
!8 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IMB_BlendMode", file: !9, line: 157, baseType: !5, size: 32, elements: !10)
!9 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10 = !{!11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37}
!11 = !DIEnumerator(name: "IMB_BLEND_MIX", value: 0, isUnsigned: true)
!12 = !DIEnumerator(name: "IMB_BLEND_ADD", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "IMB_BLEND_SUB", value: 2, isUnsigned: true)
!14 = !DIEnumerator(name: "IMB_BLEND_MUL", value: 3, isUnsigned: true)
!15 = !DIEnumerator(name: "IMB_BLEND_LIGHTEN", value: 4, isUnsigned: true)
!16 = !DIEnumerator(name: "IMB_BLEND_DARKEN", value: 5, isUnsigned: true)
!17 = !DIEnumerator(name: "IMB_BLEND_ERASE_ALPHA", value: 6, isUnsigned: true)
!18 = !DIEnumerator(name: "IMB_BLEND_ADD_ALPHA", value: 7, isUnsigned: true)
!19 = !DIEnumerator(name: "IMB_BLEND_OVERLAY", value: 8, isUnsigned: true)
!20 = !DIEnumerator(name: "IMB_BLEND_HARDLIGHT", value: 9, isUnsigned: true)
!21 = !DIEnumerator(name: "IMB_BLEND_COLORBURN", value: 10, isUnsigned: true)
!22 = !DIEnumerator(name: "IMB_BLEND_LINEARBURN", value: 11, isUnsigned: true)
!23 = !DIEnumerator(name: "IMB_BLEND_COLORDODGE", value: 12, isUnsigned: true)
!24 = !DIEnumerator(name: "IMB_BLEND_SCREEN", value: 13, isUnsigned: true)
!25 = !DIEnumerator(name: "IMB_BLEND_SOFTLIGHT", value: 14, isUnsigned: true)
!26 = !DIEnumerator(name: "IMB_BLEND_PINLIGHT", value: 15, isUnsigned: true)
!27 = !DIEnumerator(name: "IMB_BLEND_VIVIDLIGHT", value: 16, isUnsigned: true)
!28 = !DIEnumerator(name: "IMB_BLEND_LINEARLIGHT", value: 17, isUnsigned: true)
!29 = !DIEnumerator(name: "IMB_BLEND_DIFFERENCE", value: 18, isUnsigned: true)
!30 = !DIEnumerator(name: "IMB_BLEND_EXCLUSION", value: 19, isUnsigned: true)
!31 = !DIEnumerator(name: "IMB_BLEND_HUE", value: 20, isUnsigned: true)
!32 = !DIEnumerator(name: "IMB_BLEND_SATURATION", value: 21, isUnsigned: true)
!33 = !DIEnumerator(name: "IMB_BLEND_LUMINOSITY", value: 22, isUnsigned: true)
!34 = !DIEnumerator(name: "IMB_BLEND_COLOR", value: 23, isUnsigned: true)
!35 = !DIEnumerator(name: "IMB_BLEND_COPY", value: 1000, isUnsigned: true)
!36 = !DIEnumerator(name: "IMB_BLEND_COPY_RGB", value: 1001, isUnsigned: true)
!37 = !DIEnumerator(name: "IMB_BLEND_COPY_ALPHA", value: 1002, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !39, line: 67, baseType: !5, size: 32, elements: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = !{!41, !42, !43, !44, !45, !46, !47, !48, !49}
!41 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!43 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!45 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!46 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!47 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!48 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!49 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushImagePaintTool", file: !51, line: 264, baseType: !5, size: 32, elements: !52)
!51 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!52 = !{!53, !54, !55, !56, !57, !58}
!53 = !DIEnumerator(name: "PAINT_TOOL_DRAW", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "PAINT_TOOL_SOFTEN", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "PAINT_TOOL_SMEAR", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "PAINT_TOOL_CLONE", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "PAINT_TOOL_FILL", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "PAINT_TOOL_MASK", value: 5, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushStrokeMode", file: !60, line: 248, baseType: !5, size: 32, elements: !61)
!60 = !DIFile(filename: "blender/source/blender/editors/sculpt_paint/paint_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!61 = !{!62, !63, !64}
!62 = !DIEnumerator(name: "BRUSH_STROKE_NORMAL", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "BRUSH_STROKE_INVERT", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "BRUSH_STROKE_SMOOTH", value: 2, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushFlags", file: !51, line: 187, baseType: !66, size: 32, elements: !67)
!66 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!67 = !{!68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98}
!68 = !DIEnumerator(name: "BRUSH_AIRBRUSH", value: 1)
!69 = !DIEnumerator(name: "BRUSH_TORUS", value: 2)
!70 = !DIEnumerator(name: "BRUSH_ALPHA_PRESSURE", value: 4)
!71 = !DIEnumerator(name: "BRUSH_SIZE_PRESSURE", value: 8)
!72 = !DIEnumerator(name: "BRUSH_JITTER_PRESSURE", value: 16)
!73 = !DIEnumerator(name: "BRUSH_SPACING_PRESSURE", value: 32)
!74 = !DIEnumerator(name: "BRUSH_UNUSED", value: 64)
!75 = !DIEnumerator(name: "BRUSH_RAKE", value: 128)
!76 = !DIEnumerator(name: "BRUSH_ANCHORED", value: 256)
!77 = !DIEnumerator(name: "BRUSH_DIR_IN", value: 512)
!78 = !DIEnumerator(name: "BRUSH_SPACE", value: 1024)
!79 = !DIEnumerator(name: "BRUSH_SMOOTH_STROKE", value: 2048)
!80 = !DIEnumerator(name: "BRUSH_PERSISTENT", value: 4096)
!81 = !DIEnumerator(name: "BRUSH_ACCUMULATE", value: 8192)
!82 = !DIEnumerator(name: "BRUSH_LOCK_ALPHA", value: 16384)
!83 = !DIEnumerator(name: "BRUSH_ORIGINAL_NORMAL", value: 32768)
!84 = !DIEnumerator(name: "BRUSH_OFFSET_PRESSURE", value: 65536)
!85 = !DIEnumerator(name: "BRUSH_SPACE_ATTEN", value: 262144)
!86 = !DIEnumerator(name: "BRUSH_ADAPTIVE_SPACE", value: 524288)
!87 = !DIEnumerator(name: "BRUSH_LOCK_SIZE", value: 1048576)
!88 = !DIEnumerator(name: "BRUSH_USE_GRADIENT", value: 2097152)
!89 = !DIEnumerator(name: "BRUSH_EDGE_TO_EDGE", value: 4194304)
!90 = !DIEnumerator(name: "BRUSH_DRAG_DOT", value: 8388608)
!91 = !DIEnumerator(name: "BRUSH_INVERSE_SMOOTH_PRESSURE", value: 16777216)
!92 = !DIEnumerator(name: "BRUSH_RANDOM_ROTATION", value: 33554432)
!93 = !DIEnumerator(name: "BRUSH_PLANE_TRIM", value: 67108864)
!94 = !DIEnumerator(name: "BRUSH_FRONTFACE", value: 134217728)
!95 = !DIEnumerator(name: "BRUSH_CUSTOM_ICON", value: 268435456)
!96 = !DIEnumerator(name: "BRUSH_LINE", value: 536870912)
!97 = !DIEnumerator(name: "BRUSH_ABSOLUTE_JITTER", value: 1073741824)
!98 = !DIEnumerator(name: "BRUSH_CURVE", value: -2147483648)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BrushGradientSourceStroke", file: !51, line: 175, baseType: !5, size: 32, elements: !100)
!100 = !{!101, !102, !103}
!101 = !DIEnumerator(name: "BRUSH_GRADIENT_PRESSURE", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "BRUSH_GRADIENT_SPACING_REPEAT", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "BRUSH_GRADIENT_SPACING_CLAMP", value: 2, isUnsigned: true)
!104 = !{!105, !106, !108, !110, !66, !113, !114, !109, !115, !5, !107}
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!107 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !112, line: 33, baseType: !5)
!112 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!113 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!114 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImagePaintState", file: !1, line: 149, baseType: !117)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintState", file: !1, line: 122, size: 1216, elements: !118)
!118 = !{!119, !2150, !2243, !2411, !2412, !2415, !2416, !2417, !2418, !2419, !2422, !2423, !2424, !2425, !2426, !2427, !2430, !2431, !2432, !2433, !2434}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "painter", scope: !117, file: !1, line: 123, baseType: !120, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "BrushPainter", file: !1, line: 114, baseType: !122)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushPainter", file: !1, line: 100, size: 1216, elements: !123)
!123 = !{!124, !2118, !2121, !2122, !2123, !2124, !2125, !2126, !2127}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !122, file: !1, line: 101, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !127, line: 1299, baseType: !128)
!127 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !127, line: 1216, size: 39680, elements: !129)
!129 = !{!130, !199, !203, !562, !565, !566, !567, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !593, !666, !1092, !1752, !1755, !1994, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2016, !2017, !2018, !2019, !2020, !2028, !2094, !2101, !2102, !2109, !2110, !2111, !2112, !2113, !2114, !2115}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !128, file: !127, line: 1217, baseType: !131, size: 960)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !132, line: 130, baseType: !133)
!132 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !132, line: 117, size: 960, elements: !134)
!134 = !{!135, !136, !137, !139, !158, !162, !164, !165, !166, !167}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !133, file: !132, line: 118, baseType: !105, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !133, file: !132, line: 118, baseType: !105, size: 64, offset: 64)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !133, file: !132, line: 119, baseType: !138, size: 64, offset: 128)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !133, file: !132, line: 120, baseType: !140, size: 64, offset: 192)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !132, line: 136, size: 17600, elements: !142)
!142 = !{!143, !144, !146, !149, !153, !154, !155}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !141, file: !132, line: 137, baseType: !131, size: 960)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !141, file: !132, line: 138, baseType: !145, size: 64, offset: 960)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !141, file: !132, line: 139, baseType: !147, size: 64, offset: 1024)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!148 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !132, line: 43, flags: DIFlagFwdDecl)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !141, file: !132, line: 140, baseType: !150, size: 8192, offset: 1088)
!150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 8192, elements: !151)
!151 = !{!152}
!152 = !DISubrange(count: 1024)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !141, file: !132, line: 141, baseType: !150, size: 8192, offset: 9280)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !141, file: !132, line: 148, baseType: !140, size: 64, offset: 17472)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !141, file: !132, line: 150, baseType: !156, size: 64, offset: 17536)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !132, line: 45, flags: DIFlagFwdDecl)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !133, file: !132, line: 121, baseType: !159, size: 528, offset: 256)
!159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 528, elements: !160)
!160 = !{!161}
!161 = !DISubrange(count: 66)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !133, file: !132, line: 126, baseType: !163, size: 16, offset: 784)
!163 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !133, file: !132, line: 127, baseType: !66, size: 32, offset: 800)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !133, file: !132, line: 128, baseType: !66, size: 32, offset: 832)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !133, file: !132, line: 128, baseType: !66, size: 32, offset: 864)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !133, file: !132, line: 129, baseType: !168, size: 64, offset: 896)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !132, line: 75, baseType: !170)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !132, line: 62, size: 1024, elements: !171)
!171 = !{!172, !174, !175, !176, !177, !178, !182, !183, !197, !198}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !170, file: !132, line: 63, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !170, file: !132, line: 63, baseType: !173, size: 64, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !170, file: !132, line: 64, baseType: !109, size: 8, offset: 128)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !170, file: !132, line: 64, baseType: !109, size: 8, offset: 136)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !170, file: !132, line: 65, baseType: !163, size: 16, offset: 144)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !170, file: !132, line: 66, baseType: !179, size: 512, offset: 160)
!179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 512, elements: !180)
!180 = !{!181}
!181 = !DISubrange(count: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !170, file: !132, line: 67, baseType: !66, size: 32, offset: 672)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !170, file: !132, line: 69, baseType: !184, size: 256, offset: 704)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !132, line: 60, baseType: !185)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !132, line: 48, size: 256, elements: !186)
!186 = !{!187, !188, !195, !196}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !185, file: !132, line: 49, baseType: !105, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !185, file: !132, line: 58, baseType: !189, size: 128, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !190, line: 71, baseType: !191)
!190 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !190, line: 69, size: 128, elements: !192)
!192 = !{!193, !194}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !191, file: !190, line: 70, baseType: !105, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !191, file: !190, line: 70, baseType: !105, size: 64, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !185, file: !132, line: 59, baseType: !66, size: 32, offset: 192)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !185, file: !132, line: 59, baseType: !66, size: 32, offset: 224)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !170, file: !132, line: 70, baseType: !66, size: 32, offset: 960)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !170, file: !132, line: 74, baseType: !66, size: 32, offset: 992)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !128, file: !127, line: 1218, baseType: !200, size: 64, offset: 960)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !202, line: 45, flags: DIFlagFwdDecl)
!202 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!203 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !128, file: !127, line: 1220, baseType: !204, size: 64, offset: 1024)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !206, line: 115, size: 11392, elements: !207)
!206 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!207 = !{!208, !209, !210, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !297, !307, !321, !322, !364, !365, !368, !369, !385, !386, !387, !388, !389, !390, !391, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !410, !411, !412, !413, !414, !415, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !474, !475, !476, !477, !478, !479, !480, !481, !482, !485, !488, !492, !493, !494, !495, !496, !499, !502, !505, !506, !512, !513, !514, !515, !516, !517, !519, !522, !525, !529, !550, !551}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !205, file: !206, line: 116, baseType: !131, size: 960)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !205, file: !206, line: 117, baseType: !200, size: 64, offset: 960)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !205, file: !206, line: 119, baseType: !211, size: 64, offset: 1024)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !213, line: 155, size: 1856, elements: !214)
!213 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!214 = !{!215, !218, !221, !224, !227, !228, !229, !234, !237, !239, !243, !246, !247, !248, !249, !252, !255, !256, !257, !258, !259, !263, !264, !265, !267, !268, !272, !273, !276, !279, !280, !281, !282}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !212, file: !213, line: 157, baseType: !216, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !213, line: 157, flags: DIFlagFwdDecl)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !212, file: !213, line: 158, baseType: !219, size: 64, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !213, line: 49, flags: DIFlagFwdDecl)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !212, file: !213, line: 159, baseType: !222, size: 64, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !213, line: 159, flags: DIFlagFwdDecl)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !212, file: !213, line: 160, baseType: !225, size: 64, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !213, line: 160, flags: DIFlagFwdDecl)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !212, file: !213, line: 161, baseType: !66, size: 32, offset: 256)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !212, file: !213, line: 161, baseType: !66, size: 32, offset: 288)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !212, file: !213, line: 162, baseType: !230, size: 64, offset: 320)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 96, elements: !232)
!232 = !{!233}
!233 = !DISubrange(count: 3)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !212, file: !213, line: 163, baseType: !235, size: 64, offset: 384)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !213, line: 163, flags: DIFlagFwdDecl)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !212, file: !213, line: 164, baseType: !238, size: 64, offset: 448)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !212, file: !213, line: 167, baseType: !240, size: 64, offset: 512)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !242)
!242 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !213, line: 44, flags: DIFlagFwdDecl)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !212, file: !213, line: 170, baseType: !244, size: 64, offset: 576)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !213, line: 39, flags: DIFlagFwdDecl)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !212, file: !213, line: 171, baseType: !66, size: 32, offset: 640)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !212, file: !213, line: 172, baseType: !66, size: 32, offset: 672)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !212, file: !213, line: 173, baseType: !107, size: 8, offset: 704)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !212, file: !213, line: 175, baseType: !250, size: 64, offset: 768)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !213, line: 175, flags: DIFlagFwdDecl)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !212, file: !213, line: 178, baseType: !253, size: 64, offset: 832)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !213, line: 55, flags: DIFlagFwdDecl)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !212, file: !213, line: 179, baseType: !107, size: 8, offset: 896)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !212, file: !213, line: 182, baseType: !107, size: 8, offset: 904)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !212, file: !213, line: 183, baseType: !230, size: 64, offset: 960)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !212, file: !213, line: 184, baseType: !230, size: 64, offset: 1024)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !212, file: !213, line: 185, baseType: !260, size: 64, offset: 1088)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 288, elements: !262)
!262 = !{!233, !233}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !212, file: !213, line: 188, baseType: !107, size: 8, offset: 1152)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !212, file: !213, line: 191, baseType: !5, size: 32, offset: 1184)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !212, file: !213, line: 191, baseType: !266, size: 64, offset: 1216)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !212, file: !213, line: 191, baseType: !5, size: 32, offset: 1280)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !212, file: !213, line: 192, baseType: !269, size: 64, offset: 1344)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !271, line: 33, flags: DIFlagFwdDecl)
!271 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_brush.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!272 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !212, file: !213, line: 195, baseType: !230, size: 64, offset: 1408)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !212, file: !213, line: 197, baseType: !274, size: 64, offset: 1472)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !213, line: 197, flags: DIFlagFwdDecl)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !212, file: !213, line: 198, baseType: !277, size: 64, offset: 1536)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !213, line: 59, flags: DIFlagFwdDecl)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !212, file: !213, line: 201, baseType: !107, size: 8, offset: 1600)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !212, file: !213, line: 202, baseType: !231, size: 96, offset: 1632)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !212, file: !213, line: 204, baseType: !231, size: 96, offset: 1728)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !212, file: !213, line: 205, baseType: !66, size: 32, offset: 1824)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !205, file: !206, line: 121, baseType: !163, size: 16, offset: 1088)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !205, file: !206, line: 121, baseType: !163, size: 16, offset: 1104)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !205, file: !206, line: 122, baseType: !66, size: 32, offset: 1120)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !205, file: !206, line: 122, baseType: !66, size: 32, offset: 1152)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !205, file: !206, line: 122, baseType: !66, size: 32, offset: 1184)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !205, file: !206, line: 123, baseType: !179, size: 512, offset: 1216)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !205, file: !206, line: 124, baseType: !204, size: 64, offset: 1728)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !205, file: !206, line: 124, baseType: !204, size: 64, offset: 1792)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !205, file: !206, line: 127, baseType: !204, size: 64, offset: 1856)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !205, file: !206, line: 127, baseType: !204, size: 64, offset: 1920)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !205, file: !206, line: 127, baseType: !204, size: 64, offset: 1984)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !205, file: !206, line: 128, baseType: !295, size: 64, offset: 2048)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !202, line: 46, flags: DIFlagFwdDecl)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !205, file: !206, line: 130, baseType: !298, size: 64, offset: 2112)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !206, line: 97, size: 832, elements: !300)
!300 = !{!301, !305, !306}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !299, file: !206, line: 98, baseType: !302, size: 768)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !303)
!303 = !{!304, !233}
!304 = !DISubrange(count: 8)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !299, file: !206, line: 99, baseType: !66, size: 32, offset: 768)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !299, file: !206, line: 99, baseType: !66, size: 32, offset: 800)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !205, file: !206, line: 131, baseType: !308, size: 64, offset: 2176)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !310, line: 486, size: 1600, elements: !311)
!310 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!311 = !{!312, !313, !314, !315, !316, !317, !318, !319, !320}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !309, file: !310, line: 487, baseType: !131, size: 960)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !309, file: !310, line: 489, baseType: !189, size: 128, offset: 960)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !309, file: !310, line: 490, baseType: !189, size: 128, offset: 1088)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !309, file: !310, line: 491, baseType: !189, size: 128, offset: 1216)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !309, file: !310, line: 492, baseType: !189, size: 128, offset: 1344)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !309, file: !310, line: 494, baseType: !66, size: 32, offset: 1472)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !309, file: !310, line: 495, baseType: !66, size: 32, offset: 1504)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !309, file: !310, line: 497, baseType: !66, size: 32, offset: 1536)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !309, file: !310, line: 498, baseType: !66, size: 32, offset: 1568)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !205, file: !206, line: 132, baseType: !308, size: 64, offset: 2240)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !205, file: !206, line: 133, baseType: !323, size: 64, offset: 2304)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !310, line: 334, size: 1728, elements: !325)
!325 = !{!326, !327, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !363}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !324, file: !310, line: 335, baseType: !189, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !324, file: !310, line: 336, baseType: !328, size: 64, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !330, line: 51, flags: DIFlagFwdDecl)
!330 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !324, file: !310, line: 338, baseType: !163, size: 16, offset: 192)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !324, file: !310, line: 338, baseType: !163, size: 16, offset: 208)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !324, file: !310, line: 339, baseType: !5, size: 32, offset: 224)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !324, file: !310, line: 340, baseType: !66, size: 32, offset: 256)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !324, file: !310, line: 342, baseType: !113, size: 32, offset: 288)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !324, file: !310, line: 343, baseType: !231, size: 96, offset: 320)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !324, file: !310, line: 344, baseType: !231, size: 96, offset: 416)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !324, file: !310, line: 347, baseType: !189, size: 128, offset: 512)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !324, file: !310, line: 349, baseType: !66, size: 32, offset: 640)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !324, file: !310, line: 350, baseType: !66, size: 32, offset: 672)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !324, file: !310, line: 351, baseType: !105, size: 64, offset: 704)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !324, file: !310, line: 352, baseType: !105, size: 64, offset: 768)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !324, file: !310, line: 354, baseType: !344, size: 384, offset: 832)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !310, line: 116, baseType: !345)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !310, line: 94, size: 384, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !345, file: !310, line: 96, baseType: !66, size: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !345, file: !310, line: 96, baseType: !66, size: 32, offset: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !345, file: !310, line: 97, baseType: !66, size: 32, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !345, file: !310, line: 97, baseType: !66, size: 32, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !345, file: !310, line: 99, baseType: !163, size: 16, offset: 128)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !345, file: !310, line: 100, baseType: !163, size: 16, offset: 144)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !345, file: !310, line: 102, baseType: !163, size: 16, offset: 160)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !345, file: !310, line: 105, baseType: !163, size: 16, offset: 176)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !345, file: !310, line: 108, baseType: !163, size: 16, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !345, file: !310, line: 109, baseType: !163, size: 16, offset: 208)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !345, file: !310, line: 111, baseType: !163, size: 16, offset: 224)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !345, file: !310, line: 112, baseType: !163, size: 16, offset: 240)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !345, file: !310, line: 114, baseType: !66, size: 32, offset: 256)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !345, file: !310, line: 114, baseType: !66, size: 32, offset: 288)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !345, file: !310, line: 115, baseType: !66, size: 32, offset: 320)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !345, file: !310, line: 115, baseType: !66, size: 32, offset: 352)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !324, file: !310, line: 355, baseType: !179, size: 512, offset: 1216)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !205, file: !206, line: 134, baseType: !105, size: 64, offset: 2368)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !205, file: !206, line: 136, baseType: !366, size: 64, offset: 2432)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !127, line: 61, flags: DIFlagFwdDecl)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !205, file: !206, line: 138, baseType: !344, size: 384, offset: 2496)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !205, file: !206, line: 139, baseType: !370, size: 64, offset: 2880)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !310, line: 80, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !310, line: 72, size: 192, elements: !373)
!373 = !{!374, !381, !382, !383, !384}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !372, file: !310, line: 73, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !310, line: 59, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !310, line: 56, size: 128, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !377, file: !310, line: 57, baseType: !231, size: 96)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !377, file: !310, line: 58, baseType: !66, size: 32, offset: 96)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !372, file: !310, line: 74, baseType: !66, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !372, file: !310, line: 76, baseType: !66, size: 32, offset: 96)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !372, file: !310, line: 77, baseType: !66, size: 32, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !372, file: !310, line: 79, baseType: !66, size: 32, offset: 160)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !205, file: !206, line: 141, baseType: !189, size: 128, offset: 2944)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !205, file: !206, line: 142, baseType: !189, size: 128, offset: 3072)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !205, file: !206, line: 143, baseType: !189, size: 128, offset: 3200)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !205, file: !206, line: 144, baseType: !189, size: 128, offset: 3328)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !205, file: !206, line: 146, baseType: !66, size: 32, offset: 3456)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !205, file: !206, line: 147, baseType: !66, size: 32, offset: 3488)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !205, file: !206, line: 150, baseType: !392, size: 64, offset: 3520)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !330, line: 46, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !205, file: !206, line: 151, baseType: !108, size: 64, offset: 3584)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !205, file: !206, line: 152, baseType: !66, size: 32, offset: 3648)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !205, file: !206, line: 153, baseType: !66, size: 32, offset: 3680)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !205, file: !206, line: 156, baseType: !231, size: 96, offset: 3712)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !205, file: !206, line: 156, baseType: !231, size: 96, offset: 3808)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !205, file: !206, line: 156, baseType: !231, size: 96, offset: 3904)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !205, file: !206, line: 157, baseType: !231, size: 96, offset: 4000)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !205, file: !206, line: 158, baseType: !231, size: 96, offset: 4096)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !205, file: !206, line: 159, baseType: !231, size: 96, offset: 4192)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !205, file: !206, line: 160, baseType: !231, size: 96, offset: 4288)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !205, file: !206, line: 160, baseType: !231, size: 96, offset: 4384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !205, file: !206, line: 161, baseType: !407, size: 128, offset: 4480)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 128, elements: !408)
!408 = !{!409}
!409 = !DISubrange(count: 4)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !205, file: !206, line: 161, baseType: !407, size: 128, offset: 4608)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !205, file: !206, line: 162, baseType: !231, size: 96, offset: 4736)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !205, file: !206, line: 162, baseType: !231, size: 96, offset: 4832)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !205, file: !206, line: 163, baseType: !113, size: 32, offset: 4928)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !205, file: !206, line: 163, baseType: !113, size: 32, offset: 4960)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !205, file: !206, line: 164, baseType: !416, size: 512, offset: 4992)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 512, elements: !417)
!417 = !{!409, !409}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !205, file: !206, line: 165, baseType: !416, size: 512, offset: 5504)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !205, file: !206, line: 166, baseType: !416, size: 512, offset: 6016)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !205, file: !206, line: 167, baseType: !416, size: 512, offset: 6528)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !205, file: !206, line: 176, baseType: !416, size: 512, offset: 7040)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !205, file: !206, line: 178, baseType: !5, size: 32, offset: 7552)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !205, file: !206, line: 180, baseType: !163, size: 16, offset: 7584)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !205, file: !206, line: 181, baseType: !163, size: 16, offset: 7600)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !205, file: !206, line: 183, baseType: !163, size: 16, offset: 7616)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !205, file: !206, line: 183, baseType: !163, size: 16, offset: 7632)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !205, file: !206, line: 184, baseType: !163, size: 16, offset: 7648)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !205, file: !206, line: 184, baseType: !163, size: 16, offset: 7664)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !205, file: !206, line: 185, baseType: !163, size: 16, offset: 7680)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !205, file: !206, line: 186, baseType: !163, size: 16, offset: 7696)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !205, file: !206, line: 187, baseType: !163, size: 16, offset: 7712)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !205, file: !206, line: 188, baseType: !109, size: 8, offset: 7728)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !205, file: !206, line: 189, baseType: !109, size: 8, offset: 7736)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !205, file: !206, line: 192, baseType: !66, size: 32, offset: 7744)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !205, file: !206, line: 192, baseType: !66, size: 32, offset: 7776)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !205, file: !206, line: 192, baseType: !66, size: 32, offset: 7808)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !205, file: !206, line: 192, baseType: !66, size: 32, offset: 7840)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !205, file: !206, line: 194, baseType: !66, size: 32, offset: 7872)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !205, file: !206, line: 202, baseType: !113, size: 32, offset: 7904)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !205, file: !206, line: 202, baseType: !113, size: 32, offset: 7936)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !205, file: !206, line: 202, baseType: !113, size: 32, offset: 7968)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !205, file: !206, line: 211, baseType: !113, size: 32, offset: 8000)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !205, file: !206, line: 212, baseType: !113, size: 32, offset: 8032)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !205, file: !206, line: 213, baseType: !113, size: 32, offset: 8064)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !205, file: !206, line: 214, baseType: !113, size: 32, offset: 8096)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !205, file: !206, line: 215, baseType: !113, size: 32, offset: 8128)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !205, file: !206, line: 216, baseType: !113, size: 32, offset: 8160)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !205, file: !206, line: 219, baseType: !113, size: 32, offset: 8192)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !205, file: !206, line: 220, baseType: !113, size: 32, offset: 8224)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !205, file: !206, line: 221, baseType: !113, size: 32, offset: 8256)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !205, file: !206, line: 224, baseType: !114, size: 16, offset: 8288)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !205, file: !206, line: 224, baseType: !114, size: 16, offset: 8304)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !205, file: !206, line: 226, baseType: !163, size: 16, offset: 8320)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !205, file: !206, line: 228, baseType: !109, size: 8, offset: 8336)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !205, file: !206, line: 229, baseType: !109, size: 8, offset: 8344)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !205, file: !206, line: 231, baseType: !163, size: 16, offset: 8352)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !205, file: !206, line: 232, baseType: !109, size: 8, offset: 8368)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !205, file: !206, line: 233, baseType: !109, size: 8, offset: 8376)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !205, file: !206, line: 234, baseType: !113, size: 32, offset: 8384)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !205, file: !206, line: 235, baseType: !113, size: 32, offset: 8416)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !205, file: !206, line: 237, baseType: !189, size: 128, offset: 8448)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !205, file: !206, line: 238, baseType: !189, size: 128, offset: 8576)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !205, file: !206, line: 239, baseType: !189, size: 128, offset: 8704)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !205, file: !206, line: 240, baseType: !189, size: 128, offset: 8832)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !205, file: !206, line: 242, baseType: !113, size: 32, offset: 8960)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !205, file: !206, line: 244, baseType: !163, size: 16, offset: 8992)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !205, file: !206, line: 245, baseType: !114, size: 16, offset: 9008)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !205, file: !206, line: 246, baseType: !407, size: 128, offset: 9024)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !205, file: !206, line: 248, baseType: !66, size: 32, offset: 9152)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !205, file: !206, line: 249, baseType: !66, size: 32, offset: 9184)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !205, file: !206, line: 251, baseType: !472, size: 64, offset: 9216)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !206, line: 251, flags: DIFlagFwdDecl)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !205, file: !206, line: 253, baseType: !109, size: 8, offset: 9280)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !205, file: !206, line: 254, baseType: !109, size: 8, offset: 9288)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !205, file: !206, line: 255, baseType: !163, size: 16, offset: 9296)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !205, file: !206, line: 256, baseType: !231, size: 96, offset: 9312)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !205, file: !206, line: 258, baseType: !189, size: 128, offset: 9408)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !205, file: !206, line: 259, baseType: !189, size: 128, offset: 9536)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !205, file: !206, line: 260, baseType: !189, size: 128, offset: 9664)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !205, file: !206, line: 261, baseType: !189, size: 128, offset: 9792)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !205, file: !206, line: 263, baseType: !483, size: 64, offset: 9920)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !206, line: 52, flags: DIFlagFwdDecl)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !205, file: !206, line: 264, baseType: !486, size: 64, offset: 9984)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !206, line: 53, flags: DIFlagFwdDecl)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !205, file: !206, line: 265, baseType: !489, size: 64, offset: 10048)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !491, line: 43, flags: DIFlagFwdDecl)
!491 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!492 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !205, file: !206, line: 267, baseType: !109, size: 8, offset: 10112)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !205, file: !206, line: 268, baseType: !109, size: 8, offset: 10120)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !205, file: !206, line: 269, baseType: !163, size: 16, offset: 10128)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !205, file: !206, line: 270, baseType: !113, size: 32, offset: 10144)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !205, file: !206, line: 272, baseType: !497, size: 64, offset: 10176)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !206, line: 54, flags: DIFlagFwdDecl)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !205, file: !206, line: 275, baseType: !500, size: 64, offset: 10240)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !206, line: 275, flags: DIFlagFwdDecl)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !205, file: !206, line: 277, baseType: !503, size: 64, offset: 10304)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !206, line: 56, flags: DIFlagFwdDecl)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !205, file: !206, line: 277, baseType: !503, size: 64, offset: 10368)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !205, file: !206, line: 278, baseType: !507, size: 64, offset: 10432)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !508, line: 27, baseType: !509)
!508 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !510, line: 45, baseType: !511)
!510 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!511 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !205, file: !206, line: 279, baseType: !507, size: 64, offset: 10496)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !205, file: !206, line: 280, baseType: !5, size: 32, offset: 10560)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !205, file: !206, line: 281, baseType: !5, size: 32, offset: 10592)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !205, file: !206, line: 283, baseType: !189, size: 128, offset: 10624)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !205, file: !206, line: 284, baseType: !189, size: 128, offset: 10752)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !205, file: !206, line: 285, baseType: !518, size: 64, offset: 10880)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !205, file: !206, line: 287, baseType: !520, size: 64, offset: 10944)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !206, line: 59, flags: DIFlagFwdDecl)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !205, file: !206, line: 288, baseType: !523, size: 64, offset: 11008)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !206, line: 288, flags: DIFlagFwdDecl)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !205, file: !206, line: 290, baseType: !526, size: 64, offset: 11072)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !527)
!527 = !{!528}
!528 = !DISubrange(count: 2)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !205, file: !206, line: 291, baseType: !530, size: 64, offset: 11136)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !532, line: 65, baseType: !533)
!532 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !532, line: 50, size: 320, elements: !534)
!534 = !{!535, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !533, file: !532, line: 51, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !533, file: !532, line: 53, baseType: !66, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !533, file: !532, line: 54, baseType: !66, size: 32, offset: 96)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !533, file: !532, line: 55, baseType: !66, size: 32, offset: 128)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !533, file: !532, line: 55, baseType: !66, size: 32, offset: 160)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !533, file: !532, line: 56, baseType: !109, size: 8, offset: 192)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !533, file: !532, line: 56, baseType: !109, size: 8, offset: 200)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !533, file: !532, line: 57, baseType: !109, size: 8, offset: 208)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !533, file: !532, line: 57, baseType: !109, size: 8, offset: 216)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !533, file: !532, line: 59, baseType: !163, size: 16, offset: 224)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !533, file: !532, line: 59, baseType: !163, size: 16, offset: 240)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !533, file: !532, line: 59, baseType: !163, size: 16, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !533, file: !532, line: 61, baseType: !163, size: 16, offset: 272)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !533, file: !532, line: 63, baseType: !66, size: 32, offset: 288)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !205, file: !206, line: 293, baseType: !189, size: 128, offset: 11200)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !205, file: !206, line: 294, baseType: !552, size: 64, offset: 11328)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !206, line: 113, baseType: !554)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !206, line: 108, size: 256, elements: !555)
!555 = !{!556, !558, !559, !560, !561}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !554, file: !206, line: 109, baseType: !557, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !554, file: !206, line: 109, baseType: !557, size: 64, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !554, file: !206, line: 110, baseType: !204, size: 64, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !554, file: !206, line: 111, baseType: !66, size: 32, offset: 192)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !554, file: !206, line: 112, baseType: !113, size: 32, offset: 224)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !128, file: !127, line: 1221, baseType: !563, size: 64, offset: 1088)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !127, line: 52, flags: DIFlagFwdDecl)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !128, file: !127, line: 1223, baseType: !536, size: 64, offset: 1152)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !128, file: !127, line: 1225, baseType: !189, size: 128, offset: 1216)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !128, file: !127, line: 1226, baseType: !568, size: 64, offset: 1344)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !127, line: 69, size: 320, elements: !570)
!570 = !{!571, !572, !573, !574, !575, !576, !577, !578}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !569, file: !127, line: 70, baseType: !568, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !569, file: !127, line: 70, baseType: !568, size: 64, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !569, file: !127, line: 71, baseType: !5, size: 32, offset: 128)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !569, file: !127, line: 71, baseType: !5, size: 32, offset: 160)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !569, file: !127, line: 72, baseType: !66, size: 32, offset: 192)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !569, file: !127, line: 73, baseType: !163, size: 16, offset: 224)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !569, file: !127, line: 73, baseType: !163, size: 16, offset: 240)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !569, file: !127, line: 74, baseType: !204, size: 64, offset: 256)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !128, file: !127, line: 1227, baseType: !204, size: 64, offset: 1408)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !128, file: !127, line: 1229, baseType: !231, size: 96, offset: 1472)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !128, file: !127, line: 1230, baseType: !231, size: 96, offset: 1568)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !128, file: !127, line: 1231, baseType: !231, size: 96, offset: 1664)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !128, file: !127, line: 1231, baseType: !231, size: 96, offset: 1760)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !128, file: !127, line: 1233, baseType: !5, size: 32, offset: 1856)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !128, file: !127, line: 1234, baseType: !66, size: 32, offset: 1888)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !128, file: !127, line: 1235, baseType: !5, size: 32, offset: 1920)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !128, file: !127, line: 1237, baseType: !163, size: 16, offset: 1952)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !128, file: !127, line: 1239, baseType: !109, size: 8, offset: 1968)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !128, file: !127, line: 1240, baseType: !590, size: 8, offset: 1976)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 8, elements: !591)
!591 = !{!592}
!592 = !DISubrange(count: 1)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !128, file: !127, line: 1242, baseType: !594, size: 64, offset: 1984)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !596, line: 328, size: 3456, elements: !597)
!596 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!597 = !{!598, !599, !600, !603, !604, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !632, !633, !634, !637, !642, !643, !646, !650, !654, !658, !662, !663, !664, !665}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !595, file: !596, line: 329, baseType: !131, size: 960)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !595, file: !596, line: 330, baseType: !200, size: 64, offset: 960)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !595, file: !596, line: 332, baseType: !601, size: 64, offset: 1024)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !596, line: 332, flags: DIFlagFwdDecl)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !595, file: !596, line: 333, baseType: !179, size: 512, offset: 1088)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !595, file: !596, line: 335, baseType: !605, size: 64, offset: 1600)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !596, line: 335, flags: DIFlagFwdDecl)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !595, file: !596, line: 337, baseType: !366, size: 64, offset: 1664)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !595, file: !596, line: 338, baseType: !526, size: 64, offset: 1728)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !595, file: !596, line: 340, baseType: !189, size: 128, offset: 1792)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !595, file: !596, line: 340, baseType: !189, size: 128, offset: 1920)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !595, file: !596, line: 342, baseType: !66, size: 32, offset: 2048)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !595, file: !596, line: 342, baseType: !66, size: 32, offset: 2080)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !595, file: !596, line: 343, baseType: !66, size: 32, offset: 2112)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !595, file: !596, line: 345, baseType: !66, size: 32, offset: 2144)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !595, file: !596, line: 346, baseType: !66, size: 32, offset: 2176)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !595, file: !596, line: 347, baseType: !163, size: 16, offset: 2208)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !595, file: !596, line: 348, baseType: !163, size: 16, offset: 2224)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !595, file: !596, line: 349, baseType: !66, size: 32, offset: 2240)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !595, file: !596, line: 351, baseType: !66, size: 32, offset: 2272)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !595, file: !596, line: 353, baseType: !163, size: 16, offset: 2304)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !595, file: !596, line: 354, baseType: !163, size: 16, offset: 2320)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !595, file: !596, line: 355, baseType: !66, size: 32, offset: 2336)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !595, file: !596, line: 357, baseType: !624, size: 128, offset: 2368)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !625, line: 95, baseType: !626)
!625 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !625, line: 92, size: 128, elements: !627)
!627 = !{!628, !629, !630, !631}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !626, file: !625, line: 93, baseType: !113, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !626, file: !625, line: 93, baseType: !113, size: 32, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !626, file: !625, line: 94, baseType: !113, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !626, file: !625, line: 94, baseType: !113, size: 32, offset: 96)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !595, file: !596, line: 363, baseType: !189, size: 128, offset: 2496)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !595, file: !596, line: 363, baseType: !189, size: 128, offset: 2624)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !595, file: !596, line: 368, baseType: !635, size: 64, offset: 2752)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !596, line: 48, flags: DIFlagFwdDecl)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !595, file: !596, line: 372, baseType: !638, size: 32, offset: 2816)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !596, line: 274, baseType: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !596, line: 271, size: 32, elements: !640)
!640 = !{!641}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !639, file: !596, line: 273, baseType: !5, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !595, file: !596, line: 373, baseType: !66, size: 32, offset: 2848)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !595, file: !596, line: 382, baseType: !644, size: 64, offset: 2880)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !596, line: 46, flags: DIFlagFwdDecl)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !595, file: !596, line: 385, baseType: !647, size: 64, offset: 2944)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !105, !113}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !595, file: !596, line: 386, baseType: !651, size: 64, offset: 3008)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DISubroutineType(types: !653)
!653 = !{null, !105, !108}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !595, file: !596, line: 387, baseType: !655, size: 64, offset: 3072)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DISubroutineType(types: !657)
!657 = !{!66, !105}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !595, file: !596, line: 388, baseType: !659, size: 64, offset: 3136)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{null, !105}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !595, file: !596, line: 389, baseType: !105, size: 64, offset: 3200)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !595, file: !596, line: 389, baseType: !105, size: 64, offset: 3264)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !595, file: !596, line: 389, baseType: !105, size: 64, offset: 3328)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !595, file: !596, line: 389, baseType: !105, size: 64, offset: 3392)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !128, file: !127, line: 1244, baseType: !667, size: 64, offset: 2048)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !669, line: 200, size: 17024, elements: !670)
!669 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!670 = !{!671, !672, !673, !674, !1085, !1086, !1087, !1088, !1089, !1090, !1091}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !668, file: !669, line: 201, baseType: !518, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !668, file: !669, line: 202, baseType: !189, size: 128, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !668, file: !669, line: 203, baseType: !189, size: 128, offset: 192)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !668, file: !669, line: 206, baseType: !675, size: 64, offset: 320)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !669, line: 190, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !669, line: 126, size: 2816, elements: !678)
!678 = !{!679, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !777, !778, !779, !780, !1057, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1084}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !677, file: !669, line: 127, baseType: !680, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !677, file: !669, line: 127, baseType: !680, size: 64, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !677, file: !669, line: 128, baseType: !105, size: 64, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !677, file: !669, line: 129, baseType: !105, size: 64, offset: 192)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !677, file: !669, line: 130, baseType: !179, size: 512, offset: 256)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !677, file: !669, line: 132, baseType: !66, size: 32, offset: 768)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !677, file: !669, line: 132, baseType: !66, size: 32, offset: 800)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !677, file: !669, line: 133, baseType: !66, size: 32, offset: 832)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !677, file: !669, line: 134, baseType: !66, size: 32, offset: 864)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !677, file: !669, line: 134, baseType: !66, size: 32, offset: 896)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !677, file: !669, line: 134, baseType: !66, size: 32, offset: 928)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !677, file: !669, line: 135, baseType: !66, size: 32, offset: 960)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !677, file: !669, line: 135, baseType: !66, size: 32, offset: 992)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !677, file: !669, line: 136, baseType: !66, size: 32, offset: 1024)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !677, file: !669, line: 136, baseType: !66, size: 32, offset: 1056)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !677, file: !669, line: 137, baseType: !66, size: 32, offset: 1088)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !677, file: !669, line: 137, baseType: !66, size: 32, offset: 1120)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !677, file: !669, line: 138, baseType: !113, size: 32, offset: 1152)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !677, file: !669, line: 139, baseType: !113, size: 32, offset: 1184)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !677, file: !669, line: 139, baseType: !113, size: 32, offset: 1216)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !677, file: !669, line: 141, baseType: !163, size: 16, offset: 1248)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !677, file: !669, line: 142, baseType: !163, size: 16, offset: 1264)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !677, file: !669, line: 143, baseType: !66, size: 32, offset: 1280)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !677, file: !669, line: 144, baseType: !66, size: 32, offset: 1312)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !677, file: !669, line: 146, baseType: !705, size: 64, offset: 1344)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !669, line: 114, baseType: !707)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !669, line: 99, size: 7232, elements: !708)
!708 = !{!709, !711, !712, !713, !714, !715, !716, !727, !731, !745, !754, !761, !771}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !707, file: !669, line: 100, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !707, file: !669, line: 100, baseType: !710, size: 64, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !707, file: !669, line: 101, baseType: !66, size: 32, offset: 128)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !707, file: !669, line: 101, baseType: !66, size: 32, offset: 160)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !707, file: !669, line: 102, baseType: !66, size: 32, offset: 192)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !707, file: !669, line: 102, baseType: !66, size: 32, offset: 224)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !707, file: !669, line: 103, baseType: !717, size: 64, offset: 256)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !669, line: 59, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !669, line: 56, size: 2112, elements: !720)
!720 = !{!721, !725, !726}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !719, file: !669, line: 57, baseType: !722, size: 2048)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !723)
!723 = !{!724}
!724 = !DISubrange(count: 256)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !719, file: !669, line: 58, baseType: !66, size: 32, offset: 2048)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !719, file: !669, line: 58, baseType: !66, size: 32, offset: 2080)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !707, file: !669, line: 106, baseType: !728, size: 6144, offset: 320)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 6144, elements: !729)
!729 = !{!730}
!730 = !DISubrange(count: 768)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !707, file: !669, line: 107, baseType: !732, size: 64, offset: 6464)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !669, line: 97, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !669, line: 83, size: 8320, elements: !735)
!735 = !{!736, !737, !738, !741, !742, !743, !744}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !734, file: !669, line: 84, baseType: !728, size: 6144)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !734, file: !669, line: 87, baseType: !722, size: 2048, offset: 6144)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !734, file: !669, line: 88, baseType: !739, size: 64, offset: 8192)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !532, line: 41, flags: DIFlagFwdDecl)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !734, file: !669, line: 90, baseType: !163, size: 16, offset: 8256)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !734, file: !669, line: 92, baseType: !163, size: 16, offset: 8272)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !734, file: !669, line: 93, baseType: !163, size: 16, offset: 8288)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !734, file: !669, line: 95, baseType: !163, size: 16, offset: 8304)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !707, file: !669, line: 108, baseType: !746, size: 64, offset: 6528)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !669, line: 66, baseType: !748)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !669, line: 61, size: 128, elements: !749)
!749 = !{!750, !751, !752, !753}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !748, file: !669, line: 62, baseType: !66, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !748, file: !669, line: 63, baseType: !66, size: 32, offset: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !748, file: !669, line: 64, baseType: !66, size: 32, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !748, file: !669, line: 65, baseType: !66, size: 32, offset: 96)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !707, file: !669, line: 109, baseType: !755, size: 64, offset: 6592)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !669, line: 71, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !669, line: 68, size: 64, elements: !758)
!758 = !{!759, !760}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !757, file: !669, line: 69, baseType: !66, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !757, file: !669, line: 70, baseType: !66, size: 32, offset: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !707, file: !669, line: 110, baseType: !762, size: 64, offset: 6656)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !669, line: 81, baseType: !764)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !669, line: 73, size: 352, elements: !765)
!765 = !{!766, !767, !768, !769, !770}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !764, file: !669, line: 74, baseType: !231, size: 96)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !764, file: !669, line: 75, baseType: !231, size: 96, offset: 96)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !764, file: !669, line: 76, baseType: !231, size: 96, offset: 192)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !764, file: !669, line: 77, baseType: !66, size: 32, offset: 288)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !764, file: !669, line: 78, baseType: !66, size: 32, offset: 320)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !707, file: !669, line: 113, baseType: !772, size: 512, offset: 6720)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !773, line: 182, baseType: !774)
!773 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !773, line: 180, size: 512, elements: !775)
!775 = !{!776}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !774, file: !773, line: 181, baseType: !179, size: 512)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !677, file: !669, line: 148, baseType: !295, size: 64, offset: 1408)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !677, file: !669, line: 151, baseType: !536, size: 64, offset: 1472)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !677, file: !669, line: 152, baseType: !204, size: 64, offset: 1536)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !677, file: !669, line: 153, baseType: !781, size: 64, offset: 1600)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !783, line: 64, size: 19136, elements: !784)
!783 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!784 = !{!785, !786, !787, !788, !789, !790, !792, !793, !794, !795, !798, !799, !1043, !1044, !1052, !1053, !1054, !1055, !1056}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !782, file: !783, line: 65, baseType: !131, size: 960)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !782, file: !783, line: 66, baseType: !200, size: 64, offset: 960)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !782, file: !783, line: 68, baseType: !150, size: 8192, offset: 1024)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !782, file: !783, line: 70, baseType: !66, size: 32, offset: 9216)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !782, file: !783, line: 71, baseType: !66, size: 32, offset: 9248)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !782, file: !783, line: 72, baseType: !791, size: 64, offset: 9280)
!791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !66, size: 64, elements: !527)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !782, file: !783, line: 74, baseType: !113, size: 32, offset: 9344)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !782, file: !783, line: 74, baseType: !113, size: 32, offset: 9376)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !782, file: !783, line: 76, baseType: !739, size: 64, offset: 9408)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !782, file: !783, line: 77, baseType: !796, size: 64, offset: 9472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !783, line: 77, flags: DIFlagFwdDecl)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !782, file: !783, line: 78, baseType: !366, size: 64, offset: 9536)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !782, file: !783, line: 80, baseType: !800, size: 2624, offset: 9600)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !801, line: 340, size: 2624, elements: !802)
!801 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!802 = !{!803, !831, !849, !850, !851, !866, !924, !925, !1023, !1024, !1025, !1026, !1032}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !800, file: !801, line: 341, baseType: !804, size: 576)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !801, line: 251, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !801, line: 207, size: 576, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !805, file: !801, line: 208, baseType: !66, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !805, file: !801, line: 211, baseType: !163, size: 16, offset: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !805, file: !801, line: 212, baseType: !163, size: 16, offset: 48)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !805, file: !801, line: 213, baseType: !113, size: 32, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !805, file: !801, line: 214, baseType: !163, size: 16, offset: 96)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !805, file: !801, line: 215, baseType: !163, size: 16, offset: 112)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !805, file: !801, line: 216, baseType: !163, size: 16, offset: 128)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !805, file: !801, line: 217, baseType: !163, size: 16, offset: 144)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !805, file: !801, line: 218, baseType: !163, size: 16, offset: 160)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !805, file: !801, line: 219, baseType: !163, size: 16, offset: 176)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !805, file: !801, line: 220, baseType: !113, size: 32, offset: 192)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !805, file: !801, line: 222, baseType: !163, size: 16, offset: 224)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !805, file: !801, line: 225, baseType: !163, size: 16, offset: 240)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !805, file: !801, line: 228, baseType: !66, size: 32, offset: 256)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !805, file: !801, line: 229, baseType: !66, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !805, file: !801, line: 233, baseType: !66, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !805, file: !801, line: 236, baseType: !163, size: 16, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !805, file: !801, line: 236, baseType: !163, size: 16, offset: 368)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !805, file: !801, line: 241, baseType: !113, size: 32, offset: 384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !805, file: !801, line: 244, baseType: !66, size: 32, offset: 416)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !805, file: !801, line: 244, baseType: !66, size: 32, offset: 448)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !805, file: !801, line: 245, baseType: !113, size: 32, offset: 480)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !805, file: !801, line: 248, baseType: !113, size: 32, offset: 512)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !805, file: !801, line: 250, baseType: !66, size: 32, offset: 544)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !800, file: !801, line: 342, baseType: !832, size: 448, offset: 576)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !801, line: 79, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !801, line: 61, size: 448, elements: !834)
!834 = !{!835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !833, file: !801, line: 62, baseType: !105, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !833, file: !801, line: 64, baseType: !163, size: 16, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !833, file: !801, line: 65, baseType: !163, size: 16, offset: 80)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !833, file: !801, line: 67, baseType: !113, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !833, file: !801, line: 68, baseType: !113, size: 32, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !833, file: !801, line: 69, baseType: !113, size: 32, offset: 160)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !833, file: !801, line: 70, baseType: !163, size: 16, offset: 192)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !833, file: !801, line: 71, baseType: !163, size: 16, offset: 208)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !833, file: !801, line: 72, baseType: !526, size: 64, offset: 224)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !833, file: !801, line: 75, baseType: !113, size: 32, offset: 288)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !833, file: !801, line: 75, baseType: !113, size: 32, offset: 320)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !833, file: !801, line: 75, baseType: !113, size: 32, offset: 352)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !833, file: !801, line: 78, baseType: !113, size: 32, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !833, file: !801, line: 78, baseType: !113, size: 32, offset: 416)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !800, file: !801, line: 343, baseType: !189, size: 128, offset: 1024)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !800, file: !801, line: 344, baseType: !189, size: 128, offset: 1152)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !800, file: !801, line: 345, baseType: !852, size: 192, offset: 1280)
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !801, line: 278, baseType: !853)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !801, line: 270, size: 192, elements: !854)
!854 = !{!855, !856, !857, !858, !859}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !853, file: !801, line: 271, baseType: !66, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !853, file: !801, line: 273, baseType: !113, size: 32, offset: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !853, file: !801, line: 275, baseType: !66, size: 32, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !853, file: !801, line: 276, baseType: !66, size: 32, offset: 96)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !853, file: !801, line: 277, baseType: !860, size: 64, offset: 128)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !801, line: 55, size: 576, elements: !862)
!862 = !{!863, !864, !865}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !861, file: !801, line: 56, baseType: !66, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !861, file: !801, line: 57, baseType: !113, size: 32, offset: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !861, file: !801, line: 58, baseType: !416, size: 512, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !800, file: !801, line: 346, baseType: !867, size: 384, offset: 1472)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !801, line: 268, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !801, line: 253, size: 384, elements: !869)
!869 = !{!870, !871, !872, !873, !874, !918, !919, !920, !921, !922, !923}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !868, file: !801, line: 254, baseType: !66, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !868, file: !801, line: 255, baseType: !66, size: 32, offset: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !868, file: !801, line: 255, baseType: !66, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !868, file: !801, line: 258, baseType: !113, size: 32, offset: 96)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !868, file: !801, line: 259, baseType: !875, size: 64, offset: 128)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !801, line: 164, baseType: !877)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !801, line: 108, size: 1664, elements: !878)
!878 = !{!879, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !877, file: !801, line: 109, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !877, file: !801, line: 109, baseType: !880, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !877, file: !801, line: 111, baseType: !179, size: 512, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !877, file: !801, line: 119, baseType: !526, size: 64, offset: 640)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !877, file: !801, line: 119, baseType: !526, size: 64, offset: 704)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !877, file: !801, line: 125, baseType: !526, size: 64, offset: 768)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !877, file: !801, line: 125, baseType: !526, size: 64, offset: 832)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !877, file: !801, line: 127, baseType: !526, size: 64, offset: 896)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !877, file: !801, line: 130, baseType: !66, size: 32, offset: 960)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !877, file: !801, line: 131, baseType: !66, size: 32, offset: 992)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !877, file: !801, line: 132, baseType: !891, size: 64, offset: 1024)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !801, line: 106, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !801, line: 81, size: 512, elements: !894)
!894 = !{!895, !896, !899, !900, !901, !902}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !893, file: !801, line: 82, baseType: !526, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !893, file: !801, line: 97, baseType: !897, size: 256, offset: 64)
!897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 256, elements: !898)
!898 = !{!409, !528}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !893, file: !801, line: 102, baseType: !526, size: 64, offset: 320)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !893, file: !801, line: 102, baseType: !526, size: 64, offset: 384)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !893, file: !801, line: 104, baseType: !66, size: 32, offset: 448)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !893, file: !801, line: 105, baseType: !66, size: 32, offset: 480)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !877, file: !801, line: 135, baseType: !231, size: 96, offset: 1088)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !877, file: !801, line: 136, baseType: !113, size: 32, offset: 1184)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !877, file: !801, line: 139, baseType: !66, size: 32, offset: 1216)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !877, file: !801, line: 139, baseType: !66, size: 32, offset: 1248)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !877, file: !801, line: 139, baseType: !66, size: 32, offset: 1280)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !877, file: !801, line: 140, baseType: !231, size: 96, offset: 1312)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !877, file: !801, line: 143, baseType: !163, size: 16, offset: 1408)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !877, file: !801, line: 144, baseType: !163, size: 16, offset: 1424)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !877, file: !801, line: 145, baseType: !163, size: 16, offset: 1440)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !877, file: !801, line: 148, baseType: !163, size: 16, offset: 1456)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !877, file: !801, line: 149, baseType: !66, size: 32, offset: 1472)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !877, file: !801, line: 150, baseType: !113, size: 32, offset: 1504)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !877, file: !801, line: 152, baseType: !366, size: 64, offset: 1536)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !877, file: !801, line: 163, baseType: !113, size: 32, offset: 1600)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !877, file: !801, line: 163, baseType: !113, size: 32, offset: 1632)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !868, file: !801, line: 261, baseType: !113, size: 32, offset: 192)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !868, file: !801, line: 261, baseType: !113, size: 32, offset: 224)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !868, file: !801, line: 261, baseType: !113, size: 32, offset: 256)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !868, file: !801, line: 263, baseType: !66, size: 32, offset: 288)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !868, file: !801, line: 266, baseType: !66, size: 32, offset: 320)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !868, file: !801, line: 267, baseType: !113, size: 32, offset: 352)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !800, file: !801, line: 347, baseType: !875, size: 64, offset: 1856)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !800, file: !801, line: 348, baseType: !926, size: 64, offset: 1920)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !801, line: 205, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !801, line: 186, size: 1024, elements: !929)
!929 = !{!930, !932, !933, !934, !936, !937, !938, !946, !947, !948, !1021, !1022}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !928, file: !801, line: 187, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !928, file: !801, line: 187, baseType: !931, size: 64, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !928, file: !801, line: 189, baseType: !179, size: 512, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !928, file: !801, line: 191, baseType: !935, size: 64, offset: 640)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !928, file: !801, line: 193, baseType: !66, size: 32, offset: 704)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !928, file: !801, line: 193, baseType: !66, size: 32, offset: 736)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !928, file: !801, line: 195, baseType: !939, size: 64, offset: 768)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !801, line: 184, baseType: !941)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !801, line: 166, size: 320, elements: !942)
!942 = !{!943, !944, !945}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !941, file: !801, line: 180, baseType: !897, size: 256)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !941, file: !801, line: 182, baseType: !66, size: 32, offset: 256)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !941, file: !801, line: 183, baseType: !66, size: 32, offset: 288)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !928, file: !801, line: 196, baseType: !66, size: 32, offset: 832)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !928, file: !801, line: 198, baseType: !66, size: 32, offset: 864)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !928, file: !801, line: 200, baseType: !949, size: 64, offset: 896)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !532, line: 77, size: 15424, elements: !951)
!951 = !{!952, !953, !954, !957, !960, !961, !964, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1015}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !950, file: !532, line: 78, baseType: !131, size: 960)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !950, file: !532, line: 80, baseType: !150, size: 8192, offset: 960)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !950, file: !532, line: 82, baseType: !955, size: 64, offset: 9152)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !532, line: 43, flags: DIFlagFwdDecl)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !950, file: !532, line: 83, baseType: !958, size: 64, offset: 9216)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !132, line: 46, flags: DIFlagFwdDecl)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !950, file: !532, line: 86, baseType: !739, size: 64, offset: 9280)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !950, file: !532, line: 87, baseType: !962, size: 64, offset: 9344)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !532, line: 44, flags: DIFlagFwdDecl)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !950, file: !532, line: 89, baseType: !965, size: 512, offset: 9408)
!965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !962, size: 512, elements: !966)
!966 = !{!304}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !950, file: !532, line: 90, baseType: !163, size: 16, offset: 9920)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !950, file: !532, line: 90, baseType: !163, size: 16, offset: 9936)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !950, file: !532, line: 92, baseType: !163, size: 16, offset: 9952)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !950, file: !532, line: 92, baseType: !163, size: 16, offset: 9968)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !950, file: !532, line: 93, baseType: !163, size: 16, offset: 9984)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !950, file: !532, line: 93, baseType: !163, size: 16, offset: 10000)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !950, file: !532, line: 94, baseType: !66, size: 32, offset: 10016)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !950, file: !532, line: 97, baseType: !163, size: 16, offset: 10048)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !950, file: !532, line: 97, baseType: !163, size: 16, offset: 10064)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !950, file: !532, line: 98, baseType: !163, size: 16, offset: 10080)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !950, file: !532, line: 98, baseType: !163, size: 16, offset: 10096)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !950, file: !532, line: 99, baseType: !163, size: 16, offset: 10112)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !950, file: !532, line: 99, baseType: !163, size: 16, offset: 10128)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !950, file: !532, line: 100, baseType: !5, size: 32, offset: 10144)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !950, file: !532, line: 101, baseType: !266, size: 64, offset: 10176)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !950, file: !532, line: 103, baseType: !156, size: 64, offset: 10240)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !950, file: !532, line: 104, baseType: !984, size: 64, offset: 10304)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !132, line: 159, size: 448, elements: !986)
!986 = !{!987, !989, !990, !992, !993, !995}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !985, file: !132, line: 161, baseType: !988, size: 64)
!988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !527)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !985, file: !132, line: 162, baseType: !988, size: 64, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !985, file: !132, line: 163, baseType: !991, size: 32, offset: 128)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 32, elements: !527)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !985, file: !132, line: 164, baseType: !991, size: 32, offset: 160)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !985, file: !132, line: 165, baseType: !994, size: 128, offset: 192)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 128, elements: !527)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !985, file: !132, line: 166, baseType: !996, size: 128, offset: 320)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 128, elements: !527)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !950, file: !532, line: 107, baseType: !113, size: 32, offset: 10368)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !950, file: !532, line: 108, baseType: !66, size: 32, offset: 10400)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !950, file: !532, line: 109, baseType: !163, size: 16, offset: 10432)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !950, file: !532, line: 110, baseType: !163, size: 16, offset: 10448)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !950, file: !532, line: 113, baseType: !66, size: 32, offset: 10464)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !950, file: !532, line: 113, baseType: !66, size: 32, offset: 10496)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !950, file: !532, line: 114, baseType: !109, size: 8, offset: 10528)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !950, file: !532, line: 114, baseType: !109, size: 8, offset: 10536)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !950, file: !532, line: 115, baseType: !163, size: 16, offset: 10544)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !950, file: !532, line: 116, baseType: !407, size: 128, offset: 10560)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !950, file: !532, line: 119, baseType: !113, size: 32, offset: 10688)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !950, file: !532, line: 119, baseType: !113, size: 32, offset: 10720)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !950, file: !532, line: 122, baseType: !772, size: 512, offset: 10752)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !950, file: !532, line: 123, baseType: !109, size: 8, offset: 11264)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !950, file: !532, line: 125, baseType: !1012, size: 56, offset: 11272)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 56, elements: !1013)
!1013 = !{!1014}
!1014 = !DISubrange(count: 7)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !950, file: !532, line: 126, baseType: !1016, size: 4096, offset: 11328)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 4096, elements: !966)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !532, line: 69, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !532, line: 67, size: 512, elements: !1019)
!1019 = !{!1020}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1018, file: !532, line: 68, baseType: !179, size: 512)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !928, file: !801, line: 201, baseType: !113, size: 32, offset: 960)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !928, file: !801, line: 204, baseType: !66, size: 32, offset: 992)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !800, file: !801, line: 350, baseType: !189, size: 128, offset: 1984)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !800, file: !801, line: 351, baseType: !66, size: 32, offset: 2112)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !800, file: !801, line: 351, baseType: !66, size: 32, offset: 2144)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !800, file: !801, line: 353, baseType: !1027, size: 64, offset: 2176)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !801, line: 297, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !801, line: 295, size: 2048, elements: !1030)
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1029, file: !801, line: 296, baseType: !722, size: 2048)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !800, file: !801, line: 355, baseType: !1033, size: 384, offset: 2240)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !801, line: 338, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !801, line: 322, size: 384, elements: !1035)
!1035 = !{!1036, !1037, !1038, !1039, !1040, !1041, !1042}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1034, file: !801, line: 323, baseType: !66, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1034, file: !801, line: 325, baseType: !163, size: 16, offset: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1034, file: !801, line: 326, baseType: !163, size: 16, offset: 48)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1034, file: !801, line: 331, baseType: !189, size: 128, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1034, file: !801, line: 334, baseType: !189, size: 128, offset: 192)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1034, file: !801, line: 335, baseType: !66, size: 32, offset: 320)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1034, file: !801, line: 337, baseType: !66, size: 32, offset: 352)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !782, file: !783, line: 81, baseType: !105, size: 64, offset: 12224)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !782, file: !783, line: 85, baseType: !1045, size: 6208, offset: 12288)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !783, line: 55, size: 6208, elements: !1046)
!1046 = !{!1047, !1048, !1049, !1050, !1051}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1045, file: !783, line: 56, baseType: !728, size: 6144)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1045, file: !783, line: 58, baseType: !163, size: 16, offset: 6144)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1045, file: !783, line: 59, baseType: !163, size: 16, offset: 6160)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1045, file: !783, line: 60, baseType: !163, size: 16, offset: 6176)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1045, file: !783, line: 61, baseType: !163, size: 16, offset: 6192)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !782, file: !783, line: 86, baseType: !66, size: 32, offset: 18496)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !782, file: !783, line: 88, baseType: !66, size: 32, offset: 18528)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !782, file: !783, line: 90, baseType: !66, size: 32, offset: 18560)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !782, file: !783, line: 94, baseType: !66, size: 32, offset: 18592)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !782, file: !783, line: 100, baseType: !772, size: 512, offset: 18624)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !677, file: !669, line: 154, baseType: !1058, size: 64, offset: 1664)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !669, line: 154, flags: DIFlagFwdDecl)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !677, file: !669, line: 156, baseType: !739, size: 64, offset: 1728)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !677, file: !669, line: 158, baseType: !113, size: 32, offset: 1792)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !677, file: !669, line: 159, baseType: !113, size: 32, offset: 1824)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !677, file: !669, line: 162, baseType: !680, size: 64, offset: 1856)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !677, file: !669, line: 162, baseType: !680, size: 64, offset: 1920)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !677, file: !669, line: 162, baseType: !680, size: 64, offset: 1984)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !677, file: !669, line: 164, baseType: !189, size: 128, offset: 2048)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !677, file: !669, line: 166, baseType: !1068, size: 64, offset: 2176)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !669, line: 51, flags: DIFlagFwdDecl)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !677, file: !669, line: 167, baseType: !105, size: 64, offset: 2240)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !677, file: !669, line: 168, baseType: !113, size: 32, offset: 2304)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !677, file: !669, line: 170, baseType: !113, size: 32, offset: 2336)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !677, file: !669, line: 170, baseType: !113, size: 32, offset: 2368)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !677, file: !669, line: 171, baseType: !113, size: 32, offset: 2400)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !677, file: !669, line: 173, baseType: !105, size: 64, offset: 2432)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !677, file: !669, line: 175, baseType: !66, size: 32, offset: 2496)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !677, file: !669, line: 176, baseType: !66, size: 32, offset: 2528)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !677, file: !669, line: 179, baseType: !66, size: 32, offset: 2560)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !677, file: !669, line: 180, baseType: !113, size: 32, offset: 2592)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !677, file: !669, line: 183, baseType: !66, size: 32, offset: 2624)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !677, file: !669, line: 185, baseType: !109, size: 8, offset: 2656)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !677, file: !669, line: 186, baseType: !1083, size: 24, offset: 2664)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 24, elements: !232)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !677, file: !669, line: 189, baseType: !189, size: 128, offset: 2688)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !668, file: !669, line: 207, baseType: !150, size: 8192, offset: 384)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !668, file: !669, line: 208, baseType: !150, size: 8192, offset: 8576)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !668, file: !669, line: 210, baseType: !66, size: 32, offset: 16768)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !668, file: !669, line: 210, baseType: !66, size: 32, offset: 16800)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !668, file: !669, line: 211, baseType: !66, size: 32, offset: 16832)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !668, file: !669, line: 211, baseType: !66, size: 32, offset: 16864)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !668, file: !669, line: 212, baseType: !624, size: 128, offset: 16896)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !128, file: !127, line: 1246, baseType: !1093, size: 64, offset: 2112)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !127, line: 1067, size: 5184, elements: !1095)
!1095 = !{!1096, !1574, !1575, !1589, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1611, !1627, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1735}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1094, file: !127, line: 1068, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !127, line: 934, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !127, line: 925, size: 576, elements: !1100)
!1100 = !{!1101, !1566, !1567, !1568, !1569, !1570, !1573}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1099, file: !127, line: 926, baseType: !1102, size: 320)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !127, line: 830, baseType: !1103)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !127, line: 813, size: 320, elements: !1104)
!1104 = !{!1105, !1551, !1560, !1561, !1563, !1564, !1565}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1103, file: !127, line: 814, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !51, line: 54, size: 16448, elements: !1108)
!1108 = !{!1109, !1110, !1117, !1156, !1463, !1464, !1465, !1466, !1469, !1470, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1107, file: !51, line: 55, baseType: !131, size: 960)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1107, file: !51, line: 57, baseType: !1111, size: 192, offset: 960)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !51, line: 48, size: 192, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1111, file: !51, line: 49, baseType: !949, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1111, file: !51, line: 50, baseType: !526, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1111, file: !51, line: 51, baseType: !113, size: 32, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1111, file: !51, line: 51, baseType: !113, size: 32, offset: 160)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1107, file: !51, line: 58, baseType: !1118, size: 64, offset: 1152)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !773, line: 72, size: 3072, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1125, !1126, !1127, !1152, !1153, !1154, !1155}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1119, file: !773, line: 73, baseType: !66, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1119, file: !773, line: 73, baseType: !66, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1119, file: !773, line: 74, baseType: !66, size: 32, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1119, file: !773, line: 75, baseType: !66, size: 32, offset: 96)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1119, file: !773, line: 77, baseType: !624, size: 128, offset: 128)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1119, file: !773, line: 77, baseType: !624, size: 128, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1119, file: !773, line: 79, baseType: !1128, size: 2304, offset: 384)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 2304, elements: !408)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !773, line: 67, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !773, line: 55, size: 576, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1148, !1149, !1150, !1151}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1130, file: !773, line: 56, baseType: !163, size: 16)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1130, file: !773, line: 56, baseType: !163, size: 16, offset: 16)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1130, file: !773, line: 58, baseType: !113, size: 32, offset: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1130, file: !773, line: 59, baseType: !113, size: 32, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1130, file: !773, line: 59, baseType: !113, size: 32, offset: 96)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1130, file: !773, line: 60, baseType: !526, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1130, file: !773, line: 60, baseType: !526, size: 64, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1130, file: !773, line: 61, baseType: !1140, size: 64, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !773, line: 47, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !773, line: 44, size: 96, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1142, file: !773, line: 45, baseType: !113, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1142, file: !773, line: 45, baseType: !113, size: 32, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1142, file: !773, line: 46, baseType: !163, size: 16, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1142, file: !773, line: 46, baseType: !163, size: 16, offset: 80)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1130, file: !773, line: 62, baseType: !1140, size: 64, offset: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1130, file: !773, line: 64, baseType: !1140, size: 64, offset: 384)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1130, file: !773, line: 65, baseType: !526, size: 64, offset: 448)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1130, file: !773, line: 66, baseType: !526, size: 64, offset: 512)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1119, file: !773, line: 80, baseType: !231, size: 96, offset: 2688)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1119, file: !773, line: 80, baseType: !231, size: 96, offset: 2784)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1119, file: !773, line: 81, baseType: !231, size: 96, offset: 2880)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1119, file: !773, line: 83, baseType: !231, size: 96, offset: 2976)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1107, file: !51, line: 59, baseType: !1157, size: 2496, offset: 1216)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !202, line: 57, size: 2496, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163, !1164, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1157, file: !202, line: 59, baseType: !163, size: 16)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1157, file: !202, line: 59, baseType: !163, size: 16, offset: 16)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !1157, file: !202, line: 59, baseType: !163, size: 16, offset: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !1157, file: !202, line: 59, baseType: !163, size: 16, offset: 48)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1157, file: !202, line: 60, baseType: !204, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1157, file: !202, line: 61, baseType: !1165, size: 64, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !202, line: 202, size: 3328, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1246, !1342, !1343, !1373, !1394, !1402, !1403}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1166, file: !202, line: 203, baseType: !131, size: 960)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1166, file: !202, line: 204, baseType: !200, size: 64, offset: 960)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1166, file: !202, line: 206, baseType: !113, size: 32, offset: 1024)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1166, file: !202, line: 206, baseType: !113, size: 32, offset: 1056)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1166, file: !202, line: 207, baseType: !113, size: 32, offset: 1088)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1166, file: !202, line: 207, baseType: !113, size: 32, offset: 1120)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1166, file: !202, line: 207, baseType: !113, size: 32, offset: 1152)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1166, file: !202, line: 207, baseType: !113, size: 32, offset: 1184)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1166, file: !202, line: 207, baseType: !113, size: 32, offset: 1216)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1166, file: !202, line: 207, baseType: !113, size: 32, offset: 1248)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1166, file: !202, line: 208, baseType: !113, size: 32, offset: 1280)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1166, file: !202, line: 208, baseType: !113, size: 32, offset: 1312)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1166, file: !202, line: 211, baseType: !113, size: 32, offset: 1344)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1166, file: !202, line: 211, baseType: !113, size: 32, offset: 1376)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1166, file: !202, line: 211, baseType: !113, size: 32, offset: 1408)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1166, file: !202, line: 211, baseType: !113, size: 32, offset: 1440)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1166, file: !202, line: 211, baseType: !113, size: 32, offset: 1472)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1166, file: !202, line: 214, baseType: !113, size: 32, offset: 1504)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1166, file: !202, line: 214, baseType: !113, size: 32, offset: 1536)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1166, file: !202, line: 217, baseType: !113, size: 32, offset: 1568)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1166, file: !202, line: 218, baseType: !113, size: 32, offset: 1600)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1166, file: !202, line: 219, baseType: !113, size: 32, offset: 1632)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1166, file: !202, line: 220, baseType: !113, size: 32, offset: 1664)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1166, file: !202, line: 221, baseType: !113, size: 32, offset: 1696)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1166, file: !202, line: 222, baseType: !163, size: 16, offset: 1728)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1166, file: !202, line: 222, baseType: !163, size: 16, offset: 1744)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1166, file: !202, line: 224, baseType: !163, size: 16, offset: 1760)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1166, file: !202, line: 224, baseType: !163, size: 16, offset: 1776)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1166, file: !202, line: 227, baseType: !163, size: 16, offset: 1792)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1166, file: !202, line: 227, baseType: !163, size: 16, offset: 1808)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1166, file: !202, line: 229, baseType: !163, size: 16, offset: 1824)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1166, file: !202, line: 229, baseType: !163, size: 16, offset: 1840)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1166, file: !202, line: 230, baseType: !163, size: 16, offset: 1856)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1166, file: !202, line: 230, baseType: !163, size: 16, offset: 1872)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1166, file: !202, line: 232, baseType: !113, size: 32, offset: 1888)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1166, file: !202, line: 232, baseType: !113, size: 32, offset: 1920)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1166, file: !202, line: 232, baseType: !113, size: 32, offset: 1952)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1166, file: !202, line: 232, baseType: !113, size: 32, offset: 1984)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1166, file: !202, line: 233, baseType: !66, size: 32, offset: 2016)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1166, file: !202, line: 234, baseType: !66, size: 32, offset: 2048)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1166, file: !202, line: 235, baseType: !163, size: 16, offset: 2080)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1166, file: !202, line: 235, baseType: !163, size: 16, offset: 2096)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1166, file: !202, line: 236, baseType: !163, size: 16, offset: 2112)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1166, file: !202, line: 239, baseType: !163, size: 16, offset: 2128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1166, file: !202, line: 240, baseType: !66, size: 32, offset: 2144)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1166, file: !202, line: 241, baseType: !66, size: 32, offset: 2176)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1166, file: !202, line: 241, baseType: !66, size: 32, offset: 2208)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1166, file: !202, line: 241, baseType: !66, size: 32, offset: 2240)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1166, file: !202, line: 243, baseType: !113, size: 32, offset: 2272)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1166, file: !202, line: 243, baseType: !113, size: 32, offset: 2304)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1166, file: !202, line: 244, baseType: !113, size: 32, offset: 2336)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1166, file: !202, line: 246, baseType: !533, size: 320, offset: 2368)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1166, file: !202, line: 248, baseType: !594, size: 64, offset: 2688)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1166, file: !202, line: 249, baseType: !295, size: 64, offset: 2752)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1166, file: !202, line: 250, baseType: !949, size: 64, offset: 2816)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1166, file: !202, line: 251, baseType: !1224, size: 64, offset: 2880)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !202, line: 113, size: 6208, elements: !1226)
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1225, file: !202, line: 114, baseType: !163, size: 16)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1225, file: !202, line: 114, baseType: !163, size: 16, offset: 16)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1225, file: !202, line: 115, baseType: !109, size: 8, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1225, file: !202, line: 115, baseType: !109, size: 8, offset: 40)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1225, file: !202, line: 116, baseType: !109, size: 8, offset: 48)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1225, file: !202, line: 117, baseType: !590, size: 8, offset: 56)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1225, file: !202, line: 119, baseType: !1234, size: 6144, offset: 64)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1235, size: 6144, elements: !1244)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !202, line: 109, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !202, line: 106, size: 192, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1236, file: !202, line: 107, baseType: !113, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1236, file: !202, line: 107, baseType: !113, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1236, file: !202, line: 107, baseType: !113, size: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1236, file: !202, line: 107, baseType: !113, size: 32, offset: 96)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1236, file: !202, line: 107, baseType: !113, size: 32, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1236, file: !202, line: 108, baseType: !66, size: 32, offset: 160)
!1244 = !{!1245}
!1245 = !DISubrange(count: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1166, file: !202, line: 252, baseType: !1247, size: 64, offset: 2944)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !202, line: 122, size: 1600, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1248, file: !202, line: 123, baseType: !204, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1248, file: !202, line: 124, baseType: !949, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1248, file: !202, line: 125, baseType: !1253, size: 384, offset: 128)
!1253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1254, size: 384, elements: !1326)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !4, line: 70, size: 19840, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1270, !1271, !1272, !1273, !1274, !1276, !1278, !1279, !1280, !1284, !1285, !1286, !1287, !1288, !1291, !1292, !1293, !1294, !1295, !1298, !1299, !1300, !1301, !1302, !1305, !1306, !1307, !1310, !1311, !1319}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1255, file: !4, line: 71, baseType: !1254, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1255, file: !4, line: 71, baseType: !1254, size: 64, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1255, file: !4, line: 74, baseType: !66, size: 32, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1255, file: !4, line: 74, baseType: !66, size: 32, offset: 160)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1255, file: !4, line: 79, baseType: !107, size: 8, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1255, file: !4, line: 80, baseType: !66, size: 32, offset: 224)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1255, file: !4, line: 83, baseType: !66, size: 32, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !1255, file: !4, line: 84, baseType: !66, size: 32, offset: 288)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1255, file: !4, line: 87, baseType: !266, size: 64, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !1255, file: !4, line: 88, baseType: !238, size: 64, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !1255, file: !4, line: 93, baseType: !1268, size: 128, offset: 448)
!1268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 128, elements: !527)
!1269 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1255, file: !4, line: 96, baseType: !66, size: 32, offset: 576)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1255, file: !4, line: 96, baseType: !66, size: 32, offset: 608)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !1255, file: !4, line: 97, baseType: !66, size: 32, offset: 640)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !1255, file: !4, line: 97, baseType: !66, size: 32, offset: 672)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !1255, file: !4, line: 98, baseType: !1275, size: 64, offset: 704)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1255, file: !4, line: 101, baseType: !1277, size: 64, offset: 768)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !1255, file: !4, line: 102, baseType: !238, size: 64, offset: 832)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1255, file: !4, line: 105, baseType: !113, size: 32, offset: 896)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !1255, file: !4, line: 108, baseType: !1281, size: 1280, offset: 960)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1254, size: 1280, elements: !1282)
!1282 = !{!1283}
!1283 = !DISubrange(count: 20)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !1255, file: !4, line: 109, baseType: !66, size: 32, offset: 2240)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !1255, file: !4, line: 109, baseType: !66, size: 32, offset: 2272)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1255, file: !4, line: 112, baseType: !66, size: 32, offset: 2304)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !1255, file: !4, line: 113, baseType: !66, size: 32, offset: 2336)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1255, file: !4, line: 114, baseType: !1289, size: 64, offset: 2368)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !4, line: 50, flags: DIFlagFwdDecl)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1255, file: !4, line: 115, baseType: !105, size: 64, offset: 2432)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !1255, file: !4, line: 118, baseType: !66, size: 32, offset: 2496)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1255, file: !4, line: 119, baseType: !150, size: 8192, offset: 2528)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !1255, file: !4, line: 120, baseType: !150, size: 8192, offset: 10720)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !1255, file: !4, line: 123, baseType: !1296, size: 64, offset: 18944)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !4, line: 123, flags: DIFlagFwdDecl)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !1255, file: !4, line: 124, baseType: !66, size: 32, offset: 19008)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !1255, file: !4, line: 127, baseType: !106, size: 64, offset: 19072)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !1255, file: !4, line: 128, baseType: !5, size: 32, offset: 19136)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !1255, file: !4, line: 129, baseType: !5, size: 32, offset: 19168)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !1255, file: !4, line: 132, baseType: !1303, size: 64, offset: 19200)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !127, line: 63, flags: DIFlagFwdDecl)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !1255, file: !4, line: 133, baseType: !1303, size: 64, offset: 19264)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !1255, file: !4, line: 134, baseType: !266, size: 64, offset: 19328)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !1255, file: !4, line: 135, baseType: !1308, size: 64, offset: 19392)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !4, line: 135, flags: DIFlagFwdDecl)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !1255, file: !4, line: 136, baseType: !66, size: 32, offset: 19456)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !1255, file: !4, line: 137, baseType: !1312, size: 128, offset: 19488)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !625, line: 89, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !625, line: 86, size: 128, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1313, file: !625, line: 87, baseType: !66, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1313, file: !625, line: 87, baseType: !66, size: 32, offset: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1313, file: !625, line: 88, baseType: !66, size: 32, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1313, file: !625, line: 88, baseType: !66, size: 32, offset: 96)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !1255, file: !4, line: 140, baseType: !1320, size: 192, offset: 19648)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !4, line: 55, size: 192, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1320, file: !4, line: 56, baseType: !5, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1320, file: !4, line: 57, baseType: !5, size: 32, offset: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1320, file: !4, line: 58, baseType: !106, size: 64, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1320, file: !4, line: 59, baseType: !5, size: 32, offset: 128)
!1326 = !{!1327}
!1327 = !DISubrange(count: 6)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1248, file: !202, line: 126, baseType: !416, size: 512, offset: 512)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1248, file: !202, line: 127, baseType: !261, size: 288, offset: 1024)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1248, file: !202, line: 128, baseType: !163, size: 16, offset: 1312)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1248, file: !202, line: 128, baseType: !163, size: 16, offset: 1328)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1248, file: !202, line: 129, baseType: !113, size: 32, offset: 1344)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1248, file: !202, line: 129, baseType: !113, size: 32, offset: 1376)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1248, file: !202, line: 130, baseType: !113, size: 32, offset: 1408)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1248, file: !202, line: 131, baseType: !5, size: 32, offset: 1440)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1248, file: !202, line: 132, baseType: !163, size: 16, offset: 1472)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1248, file: !202, line: 132, baseType: !163, size: 16, offset: 1488)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1248, file: !202, line: 133, baseType: !66, size: 32, offset: 1504)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1248, file: !202, line: 133, baseType: !66, size: 32, offset: 1536)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1248, file: !202, line: 134, baseType: !163, size: 16, offset: 1568)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1248, file: !202, line: 134, baseType: !163, size: 16, offset: 1584)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1166, file: !202, line: 253, baseType: !984, size: 64, offset: 3008)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1166, file: !202, line: 254, baseType: !1344, size: 64, offset: 3072)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !202, line: 137, size: 832, elements: !1346)
!1346 = !{!1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1367, !1368, !1369, !1370, !1371, !1372}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1345, file: !202, line: 138, baseType: !163, size: 16)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1345, file: !202, line: 140, baseType: !163, size: 16, offset: 16)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1345, file: !202, line: 141, baseType: !113, size: 32, offset: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1345, file: !202, line: 142, baseType: !113, size: 32, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1345, file: !202, line: 143, baseType: !163, size: 16, offset: 96)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1345, file: !202, line: 144, baseType: !163, size: 16, offset: 112)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1345, file: !202, line: 145, baseType: !66, size: 32, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1345, file: !202, line: 147, baseType: !66, size: 32, offset: 160)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1345, file: !202, line: 149, baseType: !204, size: 64, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1345, file: !202, line: 150, baseType: !66, size: 32, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1345, file: !202, line: 151, baseType: !163, size: 16, offset: 288)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1345, file: !202, line: 152, baseType: !163, size: 16, offset: 304)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1345, file: !202, line: 154, baseType: !105, size: 64, offset: 320)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1345, file: !202, line: 155, baseType: !238, size: 64, offset: 384)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1345, file: !202, line: 157, baseType: !113, size: 32, offset: 448)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1345, file: !202, line: 158, baseType: !163, size: 16, offset: 480)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1345, file: !202, line: 159, baseType: !163, size: 16, offset: 496)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1345, file: !202, line: 160, baseType: !163, size: 16, offset: 512)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1345, file: !202, line: 161, baseType: !1366, size: 48, offset: 528)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 48, elements: !232)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1345, file: !202, line: 162, baseType: !113, size: 32, offset: 576)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1345, file: !202, line: 164, baseType: !113, size: 32, offset: 608)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1345, file: !202, line: 164, baseType: !113, size: 32, offset: 640)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1345, file: !202, line: 164, baseType: !113, size: 32, offset: 672)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1345, file: !202, line: 165, baseType: !1224, size: 64, offset: 704)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1345, file: !202, line: 167, baseType: !1118, size: 64, offset: 768)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1166, file: !202, line: 255, baseType: !1374, size: 64, offset: 3136)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !202, line: 170, size: 8704, elements: !1376)
!1376 = !{!1377, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1375, file: !202, line: 171, baseType: !1378, size: 96)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !66, size: 96, elements: !232)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1375, file: !202, line: 172, baseType: !66, size: 32, offset: 96)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1375, file: !202, line: 173, baseType: !163, size: 16, offset: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1375, file: !202, line: 174, baseType: !163, size: 16, offset: 144)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1375, file: !202, line: 175, baseType: !163, size: 16, offset: 160)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1375, file: !202, line: 176, baseType: !163, size: 16, offset: 176)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1375, file: !202, line: 177, baseType: !163, size: 16, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1375, file: !202, line: 178, baseType: !163, size: 16, offset: 208)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1375, file: !202, line: 179, baseType: !66, size: 32, offset: 224)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1375, file: !202, line: 181, baseType: !204, size: 64, offset: 256)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1375, file: !202, line: 182, baseType: !113, size: 32, offset: 320)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1375, file: !202, line: 183, baseType: !66, size: 32, offset: 352)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1375, file: !202, line: 184, baseType: !150, size: 8192, offset: 384)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1375, file: !202, line: 187, baseType: !238, size: 64, offset: 8576)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1375, file: !202, line: 188, baseType: !66, size: 32, offset: 8640)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1375, file: !202, line: 189, baseType: !66, size: 32, offset: 8672)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1166, file: !202, line: 256, baseType: !1395, size: 64, offset: 3200)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !202, line: 193, size: 640, elements: !1397)
!1397 = !{!1398, !1399, !1400, !1401}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1396, file: !202, line: 194, baseType: !204, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1396, file: !202, line: 195, baseType: !179, size: 512, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1396, file: !202, line: 197, baseType: !66, size: 32, offset: 576)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1396, file: !202, line: 198, baseType: !66, size: 32, offset: 608)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1166, file: !202, line: 258, baseType: !109, size: 8, offset: 3264)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1166, file: !202, line: 259, baseType: !1012, size: 56, offset: 3272)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1157, file: !202, line: 62, baseType: !179, size: 512, offset: 192)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !1157, file: !202, line: 64, baseType: !109, size: 8, offset: 704)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !1157, file: !202, line: 64, baseType: !109, size: 8, offset: 712)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !1157, file: !202, line: 64, baseType: !109, size: 8, offset: 720)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1157, file: !202, line: 64, baseType: !109, size: 8, offset: 728)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1157, file: !202, line: 65, baseType: !231, size: 96, offset: 736)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1157, file: !202, line: 65, baseType: !231, size: 96, offset: 832)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1157, file: !202, line: 65, baseType: !113, size: 32, offset: 928)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1157, file: !202, line: 67, baseType: !163, size: 16, offset: 960)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1157, file: !202, line: 67, baseType: !163, size: 16, offset: 976)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !1157, file: !202, line: 67, baseType: !163, size: 16, offset: 992)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !1157, file: !202, line: 67, baseType: !163, size: 16, offset: 1008)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !1157, file: !202, line: 68, baseType: !163, size: 16, offset: 1024)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !1157, file: !202, line: 68, baseType: !163, size: 16, offset: 1040)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !1157, file: !202, line: 69, baseType: !109, size: 8, offset: 1056)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1157, file: !202, line: 69, baseType: !1012, size: 56, offset: 1064)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1157, file: !202, line: 70, baseType: !113, size: 32, offset: 1120)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1157, file: !202, line: 70, baseType: !113, size: 32, offset: 1152)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1157, file: !202, line: 70, baseType: !113, size: 32, offset: 1184)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1157, file: !202, line: 70, baseType: !113, size: 32, offset: 1216)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !1157, file: !202, line: 71, baseType: !113, size: 32, offset: 1248)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1157, file: !202, line: 71, baseType: !113, size: 32, offset: 1280)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !1157, file: !202, line: 74, baseType: !113, size: 32, offset: 1312)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !1157, file: !202, line: 74, baseType: !113, size: 32, offset: 1344)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !1157, file: !202, line: 77, baseType: !113, size: 32, offset: 1376)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !1157, file: !202, line: 77, baseType: !113, size: 32, offset: 1408)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !1157, file: !202, line: 77, baseType: !113, size: 32, offset: 1440)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !1157, file: !202, line: 78, baseType: !113, size: 32, offset: 1472)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !1157, file: !202, line: 78, baseType: !113, size: 32, offset: 1504)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1157, file: !202, line: 78, baseType: !113, size: 32, offset: 1536)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !1157, file: !202, line: 79, baseType: !113, size: 32, offset: 1568)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !1157, file: !202, line: 79, baseType: !113, size: 32, offset: 1600)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !1157, file: !202, line: 79, baseType: !113, size: 32, offset: 1632)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !1157, file: !202, line: 79, baseType: !113, size: 32, offset: 1664)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !1157, file: !202, line: 80, baseType: !113, size: 32, offset: 1696)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !1157, file: !202, line: 80, baseType: !113, size: 32, offset: 1728)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !1157, file: !202, line: 80, baseType: !113, size: 32, offset: 1760)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !1157, file: !202, line: 81, baseType: !113, size: 32, offset: 1792)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !1157, file: !202, line: 81, baseType: !113, size: 32, offset: 1824)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !1157, file: !202, line: 81, baseType: !113, size: 32, offset: 1856)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !1157, file: !202, line: 82, baseType: !113, size: 32, offset: 1888)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !1157, file: !202, line: 82, baseType: !113, size: 32, offset: 1920)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !1157, file: !202, line: 82, baseType: !113, size: 32, offset: 1952)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !1157, file: !202, line: 85, baseType: !113, size: 32, offset: 1984)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !1157, file: !202, line: 85, baseType: !113, size: 32, offset: 2016)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1157, file: !202, line: 85, baseType: !113, size: 32, offset: 2048)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1157, file: !202, line: 85, baseType: !113, size: 32, offset: 2080)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !1157, file: !202, line: 86, baseType: !113, size: 32, offset: 2112)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !1157, file: !202, line: 86, baseType: !113, size: 32, offset: 2144)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !1157, file: !202, line: 86, baseType: !113, size: 32, offset: 2176)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !1157, file: !202, line: 86, baseType: !113, size: 32, offset: 2208)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !1157, file: !202, line: 87, baseType: !113, size: 32, offset: 2240)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !1157, file: !202, line: 87, baseType: !113, size: 32, offset: 2272)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !1157, file: !202, line: 87, baseType: !113, size: 32, offset: 2304)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !1157, file: !202, line: 87, baseType: !113, size: 32, offset: 2336)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !1157, file: !202, line: 90, baseType: !113, size: 32, offset: 2368)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !1157, file: !202, line: 93, baseType: !113, size: 32, offset: 2400)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !1157, file: !202, line: 93, baseType: !113, size: 32, offset: 2432)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !1157, file: !202, line: 93, baseType: !113, size: 32, offset: 2464)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !1107, file: !51, line: 60, baseType: !1157, size: 2496, offset: 3712)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !1107, file: !51, line: 62, baseType: !1106, size: 64, offset: 6208)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !1107, file: !51, line: 64, baseType: !1254, size: 64, offset: 6272)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1107, file: !51, line: 65, baseType: !1467, size: 64, offset: 6336)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !132, line: 167, baseType: !985)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1107, file: !51, line: 66, baseType: !1224, size: 64, offset: 6400)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !1107, file: !51, line: 67, baseType: !1471, size: 64, offset: 6464)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !51, line: 166, size: 1088, elements: !1473)
!1473 = !{!1474, !1475, !1502, !1503}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1472, file: !51, line: 168, baseType: !131, size: 960)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1472, file: !51, line: 169, baseType: !1476, size: 64, offset: 960)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !51, line: 164, baseType: !1478)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !51, line: 160, size: 608, elements: !1479)
!1479 = !{!1480, !1501}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !1478, file: !51, line: 162, baseType: !1481, size: 576)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !330, line: 133, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !330, line: 117, size: 576, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1482, file: !330, line: 118, baseType: !261, size: 288)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1482, file: !330, line: 119, baseType: !113, size: 32, offset: 288)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1482, file: !330, line: 119, baseType: !113, size: 32, offset: 320)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1482, file: !330, line: 119, baseType: !113, size: 32, offset: 352)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1482, file: !330, line: 121, baseType: !109, size: 8, offset: 384)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1482, file: !330, line: 123, baseType: !109, size: 8, offset: 392)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1482, file: !330, line: 123, baseType: !109, size: 8, offset: 400)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1482, file: !330, line: 124, baseType: !109, size: 8, offset: 408)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1482, file: !330, line: 124, baseType: !109, size: 8, offset: 416)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1482, file: !330, line: 124, baseType: !109, size: 8, offset: 424)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1482, file: !330, line: 126, baseType: !109, size: 8, offset: 432)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1482, file: !330, line: 128, baseType: !109, size: 8, offset: 440)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1482, file: !330, line: 129, baseType: !113, size: 32, offset: 448)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1482, file: !330, line: 130, baseType: !113, size: 32, offset: 480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1482, file: !330, line: 130, baseType: !113, size: 32, offset: 512)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1482, file: !330, line: 132, baseType: !1500, size: 32, offset: 544)
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 32, elements: !408)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !1478, file: !51, line: 163, baseType: !113, size: 32, offset: 576)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !1472, file: !51, line: 170, baseType: !66, size: 32, offset: 1024)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !1472, file: !51, line: 171, baseType: !66, size: 32, offset: 1056)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !1107, file: !51, line: 69, baseType: !150, size: 8192, offset: 6528)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !1107, file: !51, line: 71, baseType: !113, size: 32, offset: 14720)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1107, file: !51, line: 73, baseType: !163, size: 16, offset: 14752)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !1107, file: !51, line: 74, baseType: !163, size: 16, offset: 14768)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1107, file: !51, line: 75, baseType: !113, size: 32, offset: 14784)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1107, file: !51, line: 76, baseType: !66, size: 32, offset: 14816)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1107, file: !51, line: 77, baseType: !66, size: 32, offset: 14848)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !1107, file: !51, line: 78, baseType: !66, size: 32, offset: 14880)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !1107, file: !51, line: 79, baseType: !113, size: 32, offset: 14912)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !1107, file: !51, line: 80, baseType: !66, size: 32, offset: 14944)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !1107, file: !51, line: 81, baseType: !66, size: 32, offset: 14976)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1107, file: !51, line: 82, baseType: !66, size: 32, offset: 15008)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !1107, file: !51, line: 83, baseType: !66, size: 32, offset: 15040)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !1107, file: !51, line: 84, baseType: !113, size: 32, offset: 15072)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1107, file: !51, line: 85, baseType: !113, size: 32, offset: 15104)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1107, file: !51, line: 87, baseType: !231, size: 96, offset: 15136)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1107, file: !51, line: 88, baseType: !113, size: 32, offset: 15232)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1107, file: !51, line: 90, baseType: !231, size: 96, offset: 15264)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !1107, file: !51, line: 92, baseType: !66, size: 32, offset: 15360)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !1107, file: !51, line: 94, baseType: !113, size: 32, offset: 15392)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1107, file: !51, line: 96, baseType: !113, size: 32, offset: 15424)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !1107, file: !51, line: 97, baseType: !66, size: 32, offset: 15456)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !1107, file: !51, line: 98, baseType: !66, size: 32, offset: 15488)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !1107, file: !51, line: 99, baseType: !66, size: 32, offset: 15520)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !1107, file: !51, line: 101, baseType: !109, size: 8, offset: 15552)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !1107, file: !51, line: 102, baseType: !109, size: 8, offset: 15560)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !1107, file: !51, line: 103, baseType: !109, size: 8, offset: 15568)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !1107, file: !51, line: 104, baseType: !109, size: 8, offset: 15576)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !1107, file: !51, line: 106, baseType: !113, size: 32, offset: 15584)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !1107, file: !51, line: 108, baseType: !113, size: 32, offset: 15616)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !1107, file: !51, line: 110, baseType: !113, size: 32, offset: 15648)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1107, file: !51, line: 111, baseType: !113, size: 32, offset: 15680)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !1107, file: !51, line: 113, baseType: !113, size: 32, offset: 15712)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !1107, file: !51, line: 116, baseType: !66, size: 32, offset: 15744)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !1107, file: !51, line: 117, baseType: !66, size: 32, offset: 15776)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !1107, file: !51, line: 118, baseType: !66, size: 32, offset: 15808)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1107, file: !51, line: 120, baseType: !113, size: 32, offset: 15840)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !1107, file: !51, line: 123, baseType: !113, size: 32, offset: 15872)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !1107, file: !51, line: 124, baseType: !66, size: 32, offset: 15904)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !1107, file: !51, line: 125, baseType: !66, size: 32, offset: 15936)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !1107, file: !51, line: 128, baseType: !113, size: 32, offset: 15968)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !1107, file: !51, line: 130, baseType: !231, size: 96, offset: 16000)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !1107, file: !51, line: 131, baseType: !231, size: 96, offset: 16096)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !1107, file: !51, line: 133, baseType: !526, size: 64, offset: 16192)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !1107, file: !51, line: 134, baseType: !526, size: 64, offset: 16256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !1107, file: !51, line: 136, baseType: !526, size: 64, offset: 16320)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !1107, file: !51, line: 137, baseType: !526, size: 64, offset: 16384)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1103, file: !127, line: 815, baseType: !1552, size: 64, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !51, line: 148, size: 1280, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558, !1559}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1553, file: !51, line: 150, baseType: !131, size: 960)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1553, file: !51, line: 153, baseType: !189, size: 128, offset: 960)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !1553, file: !51, line: 154, baseType: !189, size: 128, offset: 1088)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !1553, file: !51, line: 156, baseType: !66, size: 32, offset: 1216)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1553, file: !51, line: 157, baseType: !66, size: 32, offset: 1248)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1103, file: !127, line: 818, baseType: !105, size: 64, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1103, file: !127, line: 819, baseType: !1562, size: 32, offset: 192)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 32, elements: !408)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1103, file: !127, line: 822, baseType: !66, size: 32, offset: 224)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1103, file: !127, line: 826, baseType: !66, size: 32, offset: 256)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1103, file: !127, line: 829, baseType: !66, size: 32, offset: 288)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1099, file: !127, line: 928, baseType: !163, size: 16, offset: 320)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1099, file: !127, line: 928, baseType: !163, size: 16, offset: 336)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1099, file: !127, line: 929, baseType: !66, size: 32, offset: 352)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1099, file: !127, line: 930, baseType: !266, size: 64, offset: 384)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1099, file: !127, line: 931, baseType: !1571, size: 64, offset: 448)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !127, line: 931, flags: DIFlagFwdDecl)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1099, file: !127, line: 933, baseType: !105, size: 64, offset: 512)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1094, file: !127, line: 1069, baseType: !1097, size: 64, offset: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1094, file: !127, line: 1070, baseType: !1576, size: 64, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !127, line: 916, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !127, line: 891, size: 704, elements: !1579)
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1578, file: !127, line: 892, baseType: !1102, size: 320)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1578, file: !127, line: 896, baseType: !66, size: 32, offset: 320)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1578, file: !127, line: 900, baseType: !1378, size: 96, offset: 352)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1578, file: !127, line: 903, baseType: !113, size: 32, offset: 448)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1578, file: !127, line: 906, baseType: !66, size: 32, offset: 480)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1578, file: !127, line: 909, baseType: !113, size: 32, offset: 512)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1578, file: !127, line: 912, baseType: !113, size: 32, offset: 544)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1578, file: !127, line: 914, baseType: !204, size: 64, offset: 576)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1578, file: !127, line: 915, baseType: !105, size: 64, offset: 640)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1094, file: !127, line: 1071, baseType: !1590, size: 64, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !127, line: 920, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !127, line: 918, size: 320, elements: !1593)
!1593 = !{!1594}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1592, file: !127, line: 919, baseType: !1102, size: 320)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1094, file: !127, line: 1075, baseType: !113, size: 32, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1094, file: !127, line: 1077, baseType: !113, size: 32, offset: 288)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1094, file: !127, line: 1078, baseType: !113, size: 32, offset: 320)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1094, file: !127, line: 1079, baseType: !163, size: 16, offset: 352)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1094, file: !127, line: 1082, baseType: !163, size: 16, offset: 368)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1094, file: !127, line: 1085, baseType: !109, size: 8, offset: 384)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1094, file: !127, line: 1086, baseType: !109, size: 8, offset: 392)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1094, file: !127, line: 1087, baseType: !109, size: 8, offset: 400)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1094, file: !127, line: 1088, baseType: !109, size: 8, offset: 408)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1094, file: !127, line: 1090, baseType: !113, size: 32, offset: 416)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1094, file: !127, line: 1093, baseType: !163, size: 16, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1094, file: !127, line: 1096, baseType: !109, size: 8, offset: 464)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1094, file: !127, line: 1098, baseType: !1608, size: 40, offset: 472)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 40, elements: !1609)
!1609 = !{!1610}
!1610 = !DISubrange(count: 5)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1094, file: !127, line: 1101, baseType: !1612, size: 832, offset: 512)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !127, line: 836, size: 832, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1612, file: !127, line: 837, baseType: !1102, size: 320)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1612, file: !127, line: 839, baseType: !163, size: 16, offset: 320)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1612, file: !127, line: 839, baseType: !163, size: 16, offset: 336)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1612, file: !127, line: 842, baseType: !163, size: 16, offset: 352)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1612, file: !127, line: 842, baseType: !163, size: 16, offset: 368)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1612, file: !127, line: 843, baseType: !991, size: 32, offset: 384)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1612, file: !127, line: 845, baseType: !66, size: 32, offset: 416)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1612, file: !127, line: 847, baseType: !105, size: 64, offset: 448)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1612, file: !127, line: 848, baseType: !949, size: 64, offset: 512)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1612, file: !127, line: 849, baseType: !949, size: 64, offset: 576)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1612, file: !127, line: 850, baseType: !949, size: 64, offset: 640)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1612, file: !127, line: 851, baseType: !231, size: 96, offset: 704)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1612, file: !127, line: 852, baseType: !113, size: 32, offset: 800)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1094, file: !127, line: 1104, baseType: !1628, size: 1344, offset: 1344)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !127, line: 867, size: 1344, elements: !1629)
!1629 = !{!1630, !1631, !1632, !1633, !1634, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1628, file: !127, line: 868, baseType: !163, size: 16)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1628, file: !127, line: 869, baseType: !163, size: 16, offset: 16)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1628, file: !127, line: 870, baseType: !163, size: 16, offset: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1628, file: !127, line: 871, baseType: !163, size: 16, offset: 48)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1628, file: !127, line: 873, baseType: !1635, size: 896, offset: 64)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1636, size: 896, elements: !1013)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !127, line: 864, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !127, line: 859, size: 128, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1637, file: !127, line: 860, baseType: !163, size: 16)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1637, file: !127, line: 861, baseType: !163, size: 16, offset: 16)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1637, file: !127, line: 861, baseType: !163, size: 16, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1637, file: !127, line: 861, baseType: !163, size: 16, offset: 48)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1637, file: !127, line: 862, baseType: !66, size: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1637, file: !127, line: 863, baseType: !113, size: 32, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1628, file: !127, line: 874, baseType: !105, size: 64, offset: 960)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1628, file: !127, line: 876, baseType: !113, size: 32, offset: 1024)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1628, file: !127, line: 876, baseType: !113, size: 32, offset: 1056)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1628, file: !127, line: 878, baseType: !66, size: 32, offset: 1088)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1628, file: !127, line: 879, baseType: !66, size: 32, offset: 1120)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1628, file: !127, line: 881, baseType: !66, size: 32, offset: 1152)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1628, file: !127, line: 881, baseType: !66, size: 32, offset: 1184)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1628, file: !127, line: 883, baseType: !536, size: 64, offset: 1216)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1628, file: !127, line: 884, baseType: !204, size: 64, offset: 1280)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1094, file: !127, line: 1107, baseType: !113, size: 32, offset: 2688)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1094, file: !127, line: 1110, baseType: !113, size: 32, offset: 2720)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1094, file: !127, line: 1113, baseType: !163, size: 16, offset: 2752)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1094, file: !127, line: 1113, baseType: !163, size: 16, offset: 2768)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1094, file: !127, line: 1116, baseType: !109, size: 8, offset: 2784)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1094, file: !127, line: 1117, baseType: !590, size: 8, offset: 2792)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1094, file: !127, line: 1120, baseType: !163, size: 16, offset: 2800)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1094, file: !127, line: 1121, baseType: !113, size: 32, offset: 2816)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1094, file: !127, line: 1122, baseType: !113, size: 32, offset: 2848)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1094, file: !127, line: 1123, baseType: !113, size: 32, offset: 2880)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1094, file: !127, line: 1124, baseType: !113, size: 32, offset: 2912)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1094, file: !127, line: 1125, baseType: !113, size: 32, offset: 2944)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1094, file: !127, line: 1126, baseType: !113, size: 32, offset: 2976)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1094, file: !127, line: 1127, baseType: !113, size: 32, offset: 3008)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1094, file: !127, line: 1128, baseType: !113, size: 32, offset: 3040)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1094, file: !127, line: 1129, baseType: !113, size: 32, offset: 3072)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1094, file: !127, line: 1130, baseType: !113, size: 32, offset: 3104)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1094, file: !127, line: 1131, baseType: !163, size: 16, offset: 3136)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1094, file: !127, line: 1132, baseType: !109, size: 8, offset: 3152)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1094, file: !127, line: 1133, baseType: !109, size: 8, offset: 3160)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1094, file: !127, line: 1134, baseType: !1083, size: 24, offset: 3168)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1094, file: !127, line: 1135, baseType: !109, size: 8, offset: 3192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1094, file: !127, line: 1138, baseType: !204, size: 64, offset: 3200)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1094, file: !127, line: 1139, baseType: !109, size: 8, offset: 3264)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1094, file: !127, line: 1140, baseType: !109, size: 8, offset: 3272)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1094, file: !127, line: 1141, baseType: !109, size: 8, offset: 3280)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1094, file: !127, line: 1142, baseType: !109, size: 8, offset: 3288)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1094, file: !127, line: 1143, baseType: !109, size: 8, offset: 3296)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1094, file: !127, line: 1144, baseType: !1683, size: 64, offset: 3304)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !966)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1094, file: !127, line: 1145, baseType: !1683, size: 64, offset: 3368)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1094, file: !127, line: 1148, baseType: !109, size: 8, offset: 3432)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1094, file: !127, line: 1149, baseType: !109, size: 8, offset: 3440)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1094, file: !127, line: 1152, baseType: !109, size: 8, offset: 3448)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1094, file: !127, line: 1152, baseType: !109, size: 8, offset: 3456)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1094, file: !127, line: 1153, baseType: !109, size: 8, offset: 3464)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1094, file: !127, line: 1154, baseType: !163, size: 16, offset: 3472)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1094, file: !127, line: 1154, baseType: !163, size: 16, offset: 3488)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1094, file: !127, line: 1155, baseType: !163, size: 16, offset: 3504)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1094, file: !127, line: 1155, baseType: !163, size: 16, offset: 3520)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1094, file: !127, line: 1156, baseType: !109, size: 8, offset: 3536)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1094, file: !127, line: 1157, baseType: !109, size: 8, offset: 3544)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1094, file: !127, line: 1159, baseType: !109, size: 8, offset: 3552)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1094, file: !127, line: 1160, baseType: !109, size: 8, offset: 3560)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1094, file: !127, line: 1161, baseType: !109, size: 8, offset: 3568)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1094, file: !127, line: 1162, baseType: !109, size: 8, offset: 3576)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1094, file: !127, line: 1165, baseType: !66, size: 32, offset: 3584)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1094, file: !127, line: 1166, baseType: !66, size: 32, offset: 3616)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1094, file: !127, line: 1167, baseType: !66, size: 32, offset: 3648)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1094, file: !127, line: 1168, baseType: !66, size: 32, offset: 3680)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1094, file: !127, line: 1171, baseType: !163, size: 16, offset: 3712)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1094, file: !127, line: 1171, baseType: !163, size: 16, offset: 3728)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1094, file: !127, line: 1172, baseType: !66, size: 32, offset: 3744)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1094, file: !127, line: 1173, baseType: !113, size: 32, offset: 3776)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1094, file: !127, line: 1174, baseType: !113, size: 32, offset: 3808)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1094, file: !127, line: 1177, baseType: !1710, size: 1024, offset: 3840)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !127, line: 963, size: 1024, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1710, file: !127, line: 965, baseType: !66, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1710, file: !127, line: 968, baseType: !113, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1710, file: !127, line: 971, baseType: !113, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1710, file: !127, line: 974, baseType: !113, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1710, file: !127, line: 977, baseType: !231, size: 96, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1710, file: !127, line: 979, baseType: !231, size: 96, offset: 224)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1710, file: !127, line: 982, baseType: !66, size: 32, offset: 320)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1710, file: !127, line: 987, baseType: !526, size: 64, offset: 352)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1710, file: !127, line: 989, baseType: !113, size: 32, offset: 416)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1710, file: !127, line: 994, baseType: !66, size: 32, offset: 448)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1710, file: !127, line: 995, baseType: !66, size: 32, offset: 480)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1710, file: !127, line: 997, baseType: !109, size: 8, offset: 512)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1710, file: !127, line: 998, baseType: !1012, size: 56, offset: 520)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1710, file: !127, line: 1000, baseType: !113, size: 32, offset: 576)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1710, file: !127, line: 1003, baseType: !526, size: 64, offset: 608)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1710, file: !127, line: 1006, baseType: !66, size: 32, offset: 672)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1710, file: !127, line: 1009, baseType: !113, size: 32, offset: 704)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1710, file: !127, line: 1012, baseType: !526, size: 64, offset: 736)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1710, file: !127, line: 1015, baseType: !526, size: 64, offset: 800)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1710, file: !127, line: 1018, baseType: !66, size: 32, offset: 864)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1710, file: !127, line: 1019, baseType: !1303, size: 64, offset: 896)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1710, file: !127, line: 1023, baseType: !113, size: 32, offset: 960)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1710, file: !127, line: 1024, baseType: !66, size: 32, offset: 992)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1094, file: !127, line: 1179, baseType: !1736, size: 320, offset: 4864)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !127, line: 1043, size: 320, elements: !1737)
!1737 = !{!1738, !1739, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1736, file: !127, line: 1044, baseType: !109, size: 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1736, file: !127, line: 1045, baseType: !1740, size: 16, offset: 8)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 16, elements: !527)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1736, file: !127, line: 1048, baseType: !109, size: 8, offset: 24)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1736, file: !127, line: 1049, baseType: !113, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1736, file: !127, line: 1049, baseType: !113, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1736, file: !127, line: 1052, baseType: !113, size: 32, offset: 96)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1736, file: !127, line: 1052, baseType: !113, size: 32, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1736, file: !127, line: 1053, baseType: !109, size: 8, offset: 160)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1736, file: !127, line: 1054, baseType: !1083, size: 24, offset: 168)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1736, file: !127, line: 1057, baseType: !113, size: 32, offset: 192)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1736, file: !127, line: 1057, baseType: !113, size: 32, offset: 224)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1736, file: !127, line: 1060, baseType: !113, size: 32, offset: 256)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1736, file: !127, line: 1060, baseType: !113, size: 32, offset: 288)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !128, file: !127, line: 1247, baseType: !1753, size: 64, offset: 2176)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !127, line: 60, flags: DIFlagFwdDecl)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !128, file: !127, line: 1251, baseType: !1756, size: 31872, offset: 2240)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !127, line: 403, size: 31872, elements: !1757)
!1757 = !{!1758, !1793, !1813, !1822, !1842, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1972, !1973, !1974, !1976, !1992, !1993}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1756, file: !127, line: 404, baseType: !1759, size: 1984)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !127, line: 259, size: 1984, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1776, !1788}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1759, file: !127, line: 260, baseType: !109, size: 8)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1759, file: !127, line: 263, baseType: !109, size: 8, offset: 8)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1759, file: !127, line: 266, baseType: !109, size: 8, offset: 16)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1759, file: !127, line: 267, baseType: !109, size: 8, offset: 24)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1759, file: !127, line: 269, baseType: !109, size: 8, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1759, file: !127, line: 270, baseType: !109, size: 8, offset: 40)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1759, file: !127, line: 276, baseType: !109, size: 8, offset: 48)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1759, file: !127, line: 279, baseType: !109, size: 8, offset: 56)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1759, file: !127, line: 280, baseType: !163, size: 16, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1759, file: !127, line: 280, baseType: !163, size: 16, offset: 80)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1759, file: !127, line: 281, baseType: !113, size: 32, offset: 96)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1759, file: !127, line: 284, baseType: !109, size: 8, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1759, file: !127, line: 285, baseType: !109, size: 8, offset: 136)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1759, file: !127, line: 287, baseType: !1775, size: 48, offset: 144)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 48, elements: !1326)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1759, file: !127, line: 290, baseType: !1777, size: 1280, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !773, line: 174, baseType: !1778)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !773, line: 166, size: 1280, elements: !1779)
!1779 = !{!1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1778, file: !773, line: 167, baseType: !66, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1778, file: !773, line: 167, baseType: !66, size: 32, offset: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1778, file: !773, line: 168, baseType: !179, size: 512, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1778, file: !773, line: 169, baseType: !179, size: 512, offset: 576)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1778, file: !773, line: 170, baseType: !113, size: 32, offset: 1088)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1778, file: !773, line: 171, baseType: !113, size: 32, offset: 1120)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1778, file: !773, line: 172, baseType: !1118, size: 64, offset: 1152)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1778, file: !773, line: 173, baseType: !105, size: 64, offset: 1216)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1759, file: !127, line: 291, baseType: !1789, size: 512, offset: 1472)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !773, line: 178, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !773, line: 176, size: 512, elements: !1791)
!1791 = !{!1792}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1790, file: !773, line: 177, baseType: !179, size: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1756, file: !127, line: 406, baseType: !1794, size: 64, offset: 1984)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !127, line: 80, size: 1472, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1795, file: !127, line: 81, baseType: !105, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1795, file: !127, line: 82, baseType: !105, size: 64, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1795, file: !127, line: 83, baseType: !5, size: 32, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1795, file: !127, line: 84, baseType: !5, size: 32, offset: 160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1795, file: !127, line: 86, baseType: !5, size: 32, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1795, file: !127, line: 87, baseType: !5, size: 32, offset: 224)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1795, file: !127, line: 88, baseType: !5, size: 32, offset: 256)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1795, file: !127, line: 89, baseType: !5, size: 32, offset: 288)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1795, file: !127, line: 90, baseType: !5, size: 32, offset: 320)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1795, file: !127, line: 91, baseType: !5, size: 32, offset: 352)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1795, file: !127, line: 92, baseType: !5, size: 32, offset: 384)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1795, file: !127, line: 93, baseType: !5, size: 32, offset: 416)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1795, file: !127, line: 95, baseType: !1810, size: 1024, offset: 448)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 1024, elements: !1811)
!1811 = !{!1812}
!1812 = !DISubrange(count: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1756, file: !127, line: 407, baseType: !1814, size: 64, offset: 2048)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !127, line: 98, size: 1216, elements: !1816)
!1816 = !{!1817, !1818, !1819, !1820, !1821}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1815, file: !127, line: 100, baseType: !105, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1815, file: !127, line: 101, baseType: !105, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1815, file: !127, line: 103, baseType: !5, size: 32, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1815, file: !127, line: 104, baseType: !5, size: 32, offset: 160)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1815, file: !127, line: 106, baseType: !1810, size: 1024, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1756, file: !127, line: 408, baseType: !1823, size: 512, offset: 2112)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !127, line: 109, size: 512, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1823, file: !127, line: 111, baseType: !66, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1823, file: !127, line: 112, baseType: !66, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1823, file: !127, line: 115, baseType: !66, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1823, file: !127, line: 116, baseType: !66, size: 32, offset: 96)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1823, file: !127, line: 117, baseType: !66, size: 32, offset: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1823, file: !127, line: 118, baseType: !66, size: 32, offset: 160)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1823, file: !127, line: 119, baseType: !66, size: 32, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1823, file: !127, line: 120, baseType: !66, size: 32, offset: 224)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1823, file: !127, line: 121, baseType: !66, size: 32, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1823, file: !127, line: 122, baseType: !66, size: 32, offset: 288)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1823, file: !127, line: 125, baseType: !66, size: 32, offset: 320)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1823, file: !127, line: 126, baseType: !66, size: 32, offset: 352)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1823, file: !127, line: 127, baseType: !163, size: 16, offset: 384)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1823, file: !127, line: 128, baseType: !163, size: 16, offset: 400)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1823, file: !127, line: 129, baseType: !66, size: 32, offset: 416)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1823, file: !127, line: 130, baseType: !66, size: 32, offset: 448)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1823, file: !127, line: 131, baseType: !66, size: 32, offset: 480)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1756, file: !127, line: 409, baseType: !1843, size: 576, offset: 2624)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !127, line: 134, size: 576, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1843, file: !127, line: 135, baseType: !66, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1843, file: !127, line: 136, baseType: !66, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1843, file: !127, line: 137, baseType: !66, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1843, file: !127, line: 138, baseType: !66, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1843, file: !127, line: 139, baseType: !66, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1843, file: !127, line: 140, baseType: !66, size: 32, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1843, file: !127, line: 141, baseType: !66, size: 32, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1843, file: !127, line: 142, baseType: !66, size: 32, offset: 224)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1843, file: !127, line: 143, baseType: !113, size: 32, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1843, file: !127, line: 144, baseType: !66, size: 32, offset: 288)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1843, file: !127, line: 145, baseType: !66, size: 32, offset: 320)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1843, file: !127, line: 147, baseType: !66, size: 32, offset: 352)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1843, file: !127, line: 148, baseType: !66, size: 32, offset: 384)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1843, file: !127, line: 149, baseType: !66, size: 32, offset: 416)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1843, file: !127, line: 150, baseType: !66, size: 32, offset: 448)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1843, file: !127, line: 151, baseType: !66, size: 32, offset: 480)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1843, file: !127, line: 152, baseType: !168, size: 64, offset: 512)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1756, file: !127, line: 411, baseType: !66, size: 32, offset: 3200)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1756, file: !127, line: 411, baseType: !66, size: 32, offset: 3232)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1756, file: !127, line: 411, baseType: !66, size: 32, offset: 3264)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1756, file: !127, line: 412, baseType: !113, size: 32, offset: 3296)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1756, file: !127, line: 413, baseType: !66, size: 32, offset: 3328)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1756, file: !127, line: 413, baseType: !66, size: 32, offset: 3360)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1756, file: !127, line: 415, baseType: !66, size: 32, offset: 3392)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1756, file: !127, line: 415, baseType: !66, size: 32, offset: 3424)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1756, file: !127, line: 416, baseType: !163, size: 16, offset: 3456)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1756, file: !127, line: 416, baseType: !163, size: 16, offset: 3472)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1756, file: !127, line: 418, baseType: !113, size: 32, offset: 3488)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1756, file: !127, line: 418, baseType: !113, size: 32, offset: 3520)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1756, file: !127, line: 421, baseType: !113, size: 32, offset: 3552)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1756, file: !127, line: 421, baseType: !113, size: 32, offset: 3584)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1756, file: !127, line: 421, baseType: !113, size: 32, offset: 3616)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1756, file: !127, line: 425, baseType: !163, size: 16, offset: 3648)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1756, file: !127, line: 425, baseType: !163, size: 16, offset: 3664)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1756, file: !127, line: 425, baseType: !163, size: 16, offset: 3680)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1756, file: !127, line: 426, baseType: !163, size: 16, offset: 3696)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1756, file: !127, line: 428, baseType: !163, size: 16, offset: 3712)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1756, file: !127, line: 428, baseType: !163, size: 16, offset: 3728)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1756, file: !127, line: 431, baseType: !66, size: 32, offset: 3744)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1756, file: !127, line: 433, baseType: !163, size: 16, offset: 3776)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1756, file: !127, line: 435, baseType: !163, size: 16, offset: 3792)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1756, file: !127, line: 437, baseType: !163, size: 16, offset: 3808)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1756, file: !127, line: 439, baseType: !163, size: 16, offset: 3824)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1756, file: !127, line: 441, baseType: !163, size: 16, offset: 3840)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1756, file: !127, line: 443, baseType: !163, size: 16, offset: 3856)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1756, file: !127, line: 449, baseType: !66, size: 32, offset: 3872)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1756, file: !127, line: 453, baseType: !66, size: 32, offset: 3904)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1756, file: !127, line: 458, baseType: !163, size: 16, offset: 3936)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1756, file: !127, line: 462, baseType: !163, size: 16, offset: 3952)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1756, file: !127, line: 467, baseType: !66, size: 32, offset: 3968)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1756, file: !127, line: 467, baseType: !66, size: 32, offset: 4000)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1756, file: !127, line: 469, baseType: !163, size: 16, offset: 4032)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1756, file: !127, line: 469, baseType: !163, size: 16, offset: 4048)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1756, file: !127, line: 469, baseType: !163, size: 16, offset: 4064)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1756, file: !127, line: 469, baseType: !163, size: 16, offset: 4080)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1756, file: !127, line: 474, baseType: !163, size: 16, offset: 4096)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1756, file: !127, line: 475, baseType: !109, size: 8, offset: 4112)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1756, file: !127, line: 476, baseType: !109, size: 8, offset: 4120)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1756, file: !127, line: 481, baseType: !66, size: 32, offset: 4128)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1756, file: !127, line: 486, baseType: !66, size: 32, offset: 4160)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1756, file: !127, line: 491, baseType: !66, size: 32, offset: 4192)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1756, file: !127, line: 496, baseType: !163, size: 16, offset: 4224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1756, file: !127, line: 498, baseType: !163, size: 16, offset: 4240)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1756, file: !127, line: 501, baseType: !163, size: 16, offset: 4256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1756, file: !127, line: 502, baseType: !163, size: 16, offset: 4272)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1756, file: !127, line: 508, baseType: !163, size: 16, offset: 4288)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1756, file: !127, line: 513, baseType: !163, size: 16, offset: 4304)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1756, file: !127, line: 515, baseType: !163, size: 16, offset: 4320)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1756, file: !127, line: 515, baseType: !163, size: 16, offset: 4336)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1756, file: !127, line: 519, baseType: !624, size: 128, offset: 4352)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1756, file: !127, line: 519, baseType: !624, size: 128, offset: 4480)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1756, file: !127, line: 520, baseType: !1312, size: 128, offset: 4608)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1756, file: !127, line: 523, baseType: !189, size: 128, offset: 4736)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1756, file: !127, line: 524, baseType: !163, size: 16, offset: 4864)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1756, file: !127, line: 527, baseType: !163, size: 16, offset: 4880)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1756, file: !127, line: 532, baseType: !113, size: 32, offset: 4896)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1756, file: !127, line: 532, baseType: !113, size: 32, offset: 4928)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1756, file: !127, line: 534, baseType: !113, size: 32, offset: 4960)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1756, file: !127, line: 538, baseType: !113, size: 32, offset: 4992)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1756, file: !127, line: 542, baseType: !66, size: 32, offset: 5024)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1756, file: !127, line: 545, baseType: !113, size: 32, offset: 5056)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1756, file: !127, line: 545, baseType: !113, size: 32, offset: 5088)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1756, file: !127, line: 545, baseType: !113, size: 32, offset: 5120)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1756, file: !127, line: 548, baseType: !113, size: 32, offset: 5152)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1756, file: !127, line: 551, baseType: !163, size: 16, offset: 5184)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1756, file: !127, line: 551, baseType: !163, size: 16, offset: 5200)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1756, file: !127, line: 551, baseType: !163, size: 16, offset: 5216)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1756, file: !127, line: 551, baseType: !163, size: 16, offset: 5232)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1756, file: !127, line: 552, baseType: !163, size: 16, offset: 5248)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1756, file: !127, line: 552, baseType: !163, size: 16, offset: 5264)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1756, file: !127, line: 553, baseType: !113, size: 32, offset: 5280)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1756, file: !127, line: 553, baseType: !113, size: 32, offset: 5312)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1756, file: !127, line: 554, baseType: !163, size: 16, offset: 5344)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1756, file: !127, line: 554, baseType: !163, size: 16, offset: 5360)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1756, file: !127, line: 555, baseType: !113, size: 32, offset: 5376)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1756, file: !127, line: 555, baseType: !113, size: 32, offset: 5408)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1756, file: !127, line: 558, baseType: !150, size: 8192, offset: 5440)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1756, file: !127, line: 561, baseType: !66, size: 32, offset: 13632)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1756, file: !127, line: 562, baseType: !163, size: 16, offset: 13664)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1756, file: !127, line: 562, baseType: !163, size: 16, offset: 13680)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1756, file: !127, line: 565, baseType: !728, size: 6144, offset: 13696)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1756, file: !127, line: 568, baseType: !407, size: 128, offset: 19840)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1756, file: !127, line: 569, baseType: !407, size: 128, offset: 19968)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1756, file: !127, line: 572, baseType: !109, size: 8, offset: 20096)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1756, file: !127, line: 573, baseType: !109, size: 8, offset: 20104)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1756, file: !127, line: 574, baseType: !109, size: 8, offset: 20112)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1756, file: !127, line: 575, baseType: !1608, size: 40, offset: 20120)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1756, file: !127, line: 578, baseType: !66, size: 32, offset: 20160)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1756, file: !127, line: 579, baseType: !163, size: 16, offset: 20192)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1756, file: !127, line: 580, baseType: !163, size: 16, offset: 20208)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1756, file: !127, line: 581, baseType: !113, size: 32, offset: 20224)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1756, file: !127, line: 582, baseType: !113, size: 32, offset: 20256)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1756, file: !127, line: 585, baseType: !163, size: 16, offset: 20288)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1756, file: !127, line: 585, baseType: !163, size: 16, offset: 20304)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1756, file: !127, line: 586, baseType: !113, size: 32, offset: 20320)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1756, file: !127, line: 589, baseType: !163, size: 16, offset: 20352)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1756, file: !127, line: 589, baseType: !163, size: 16, offset: 20368)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1756, file: !127, line: 590, baseType: !66, size: 32, offset: 20384)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1756, file: !127, line: 593, baseType: !163, size: 16, offset: 20416)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1756, file: !127, line: 593, baseType: !163, size: 16, offset: 20432)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1756, file: !127, line: 594, baseType: !163, size: 16, offset: 20448)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1756, file: !127, line: 594, baseType: !163, size: 16, offset: 20464)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1756, file: !127, line: 595, baseType: !113, size: 32, offset: 20480)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1756, file: !127, line: 596, baseType: !113, size: 32, offset: 20512)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1756, file: !127, line: 597, baseType: !1970, size: 64, offset: 20544)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !491, line: 44, flags: DIFlagFwdDecl)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1756, file: !127, line: 600, baseType: !66, size: 32, offset: 20608)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1756, file: !127, line: 601, baseType: !113, size: 32, offset: 20640)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1756, file: !127, line: 604, baseType: !1975, size: 256, offset: 20672)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 256, elements: !1244)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1756, file: !127, line: 607, baseType: !1977, size: 10880, offset: 20928)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !127, line: 364, size: 10880, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1977, file: !127, line: 365, baseType: !1759, size: 1984)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1977, file: !127, line: 367, baseType: !150, size: 8192, offset: 1984)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1977, file: !127, line: 369, baseType: !163, size: 16, offset: 10176)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1977, file: !127, line: 369, baseType: !163, size: 16, offset: 10192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1977, file: !127, line: 370, baseType: !163, size: 16, offset: 10208)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1977, file: !127, line: 370, baseType: !163, size: 16, offset: 10224)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1977, file: !127, line: 372, baseType: !113, size: 32, offset: 10240)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1977, file: !127, line: 373, baseType: !113, size: 32, offset: 10272)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1977, file: !127, line: 375, baseType: !1083, size: 24, offset: 10304)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1977, file: !127, line: 376, baseType: !109, size: 8, offset: 10328)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1977, file: !127, line: 378, baseType: !109, size: 8, offset: 10336)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1977, file: !127, line: 379, baseType: !1083, size: 24, offset: 10344)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1977, file: !127, line: 381, baseType: !179, size: 512, offset: 10368)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1756, file: !127, line: 609, baseType: !66, size: 32, offset: 31808)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1756, file: !127, line: 610, baseType: !66, size: 32, offset: 31840)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !128, file: !127, line: 1252, baseType: !1995, size: 256, offset: 34112)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !127, line: 158, size: 256, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1995, file: !127, line: 159, baseType: !66, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1995, file: !127, line: 160, baseType: !113, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1995, file: !127, line: 161, baseType: !113, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1995, file: !127, line: 162, baseType: !113, size: 32, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1995, file: !127, line: 163, baseType: !66, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1995, file: !127, line: 164, baseType: !163, size: 16, offset: 160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1995, file: !127, line: 165, baseType: !163, size: 16, offset: 176)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1995, file: !127, line: 166, baseType: !113, size: 32, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1995, file: !127, line: 167, baseType: !113, size: 32, offset: 224)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !128, file: !127, line: 1254, baseType: !189, size: 128, offset: 34368)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !128, file: !127, line: 1255, baseType: !189, size: 128, offset: 34496)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !128, file: !127, line: 1257, baseType: !105, size: 64, offset: 34624)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !128, file: !127, line: 1258, baseType: !105, size: 64, offset: 34688)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !128, file: !127, line: 1259, baseType: !105, size: 64, offset: 34752)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !128, file: !127, line: 1260, baseType: !105, size: 64, offset: 34816)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !128, file: !127, line: 1262, baseType: !105, size: 64, offset: 34880)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !128, file: !127, line: 1265, baseType: !2014, size: 64, offset: 34944)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !127, line: 1265, flags: DIFlagFwdDecl)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !128, file: !127, line: 1266, baseType: !163, size: 16, offset: 35008)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !128, file: !127, line: 1267, baseType: !163, size: 16, offset: 35024)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !128, file: !127, line: 1270, baseType: !66, size: 32, offset: 35040)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !128, file: !127, line: 1271, baseType: !189, size: 128, offset: 35072)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !128, file: !127, line: 1274, baseType: !2021, size: 128, offset: 35200)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !127, line: 650, size: 128, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2027}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2021, file: !127, line: 651, baseType: !231, size: 96)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2021, file: !127, line: 652, baseType: !109, size: 8, offset: 96)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2021, file: !127, line: 652, baseType: !109, size: 8, offset: 104)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2021, file: !127, line: 652, baseType: !109, size: 8, offset: 112)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2021, file: !127, line: 652, baseType: !109, size: 8, offset: 120)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !128, file: !127, line: 1275, baseType: !2029, size: 1472, offset: 35328)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !127, line: 676, size: 1472, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2052, !2053, !2054, !2055, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2029, file: !127, line: 679, baseType: !2021, size: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2029, file: !127, line: 680, baseType: !163, size: 16, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2029, file: !127, line: 680, baseType: !163, size: 16, offset: 144)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2029, file: !127, line: 680, baseType: !163, size: 16, offset: 160)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2029, file: !127, line: 680, baseType: !163, size: 16, offset: 176)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2029, file: !127, line: 681, baseType: !163, size: 16, offset: 192)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2029, file: !127, line: 681, baseType: !163, size: 16, offset: 208)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2029, file: !127, line: 681, baseType: !163, size: 16, offset: 224)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2029, file: !127, line: 681, baseType: !163, size: 16, offset: 240)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2029, file: !127, line: 682, baseType: !163, size: 16, offset: 256)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2029, file: !127, line: 682, baseType: !1366, size: 48, offset: 272)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2029, file: !127, line: 685, baseType: !2043, size: 192, offset: 320)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !127, line: 633, size: 192, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048, !2049, !2050, !2051}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2043, file: !127, line: 634, baseType: !163, size: 16)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2043, file: !127, line: 634, baseType: !163, size: 16, offset: 16)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2043, file: !127, line: 635, baseType: !163, size: 16, offset: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2043, file: !127, line: 635, baseType: !163, size: 16, offset: 48)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2043, file: !127, line: 636, baseType: !113, size: 32, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2043, file: !127, line: 636, baseType: !113, size: 32, offset: 96)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2043, file: !127, line: 637, baseType: !1970, size: 64, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2029, file: !127, line: 686, baseType: !163, size: 16, offset: 512)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2029, file: !127, line: 686, baseType: !163, size: 16, offset: 528)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2029, file: !127, line: 687, baseType: !113, size: 32, offset: 544)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2029, file: !127, line: 688, baseType: !2056, size: 448, offset: 576)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !127, line: 674, baseType: !2057)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !127, line: 659, size: 448, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2057, file: !127, line: 660, baseType: !113, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2057, file: !127, line: 661, baseType: !113, size: 32, offset: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2057, file: !127, line: 662, baseType: !113, size: 32, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2057, file: !127, line: 663, baseType: !113, size: 32, offset: 96)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2057, file: !127, line: 664, baseType: !113, size: 32, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2057, file: !127, line: 665, baseType: !113, size: 32, offset: 160)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2057, file: !127, line: 666, baseType: !113, size: 32, offset: 192)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2057, file: !127, line: 667, baseType: !113, size: 32, offset: 224)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2057, file: !127, line: 668, baseType: !113, size: 32, offset: 256)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2057, file: !127, line: 669, baseType: !113, size: 32, offset: 288)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2057, file: !127, line: 670, baseType: !66, size: 32, offset: 320)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2057, file: !127, line: 671, baseType: !113, size: 32, offset: 352)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2057, file: !127, line: 672, baseType: !113, size: 32, offset: 384)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2057, file: !127, line: 673, baseType: !163, size: 16, offset: 416)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2057, file: !127, line: 673, baseType: !163, size: 16, offset: 432)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2029, file: !127, line: 692, baseType: !113, size: 32, offset: 1024)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2029, file: !127, line: 697, baseType: !113, size: 32, offset: 1056)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2029, file: !127, line: 703, baseType: !66, size: 32, offset: 1088)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2029, file: !127, line: 704, baseType: !163, size: 16, offset: 1120)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2029, file: !127, line: 704, baseType: !163, size: 16, offset: 1136)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2029, file: !127, line: 705, baseType: !163, size: 16, offset: 1152)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2029, file: !127, line: 706, baseType: !163, size: 16, offset: 1168)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2029, file: !127, line: 707, baseType: !163, size: 16, offset: 1184)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2029, file: !127, line: 708, baseType: !163, size: 16, offset: 1200)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2029, file: !127, line: 709, baseType: !163, size: 16, offset: 1216)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2029, file: !127, line: 709, baseType: !163, size: 16, offset: 1232)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2029, file: !127, line: 709, baseType: !163, size: 16, offset: 1248)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2029, file: !127, line: 709, baseType: !163, size: 16, offset: 1264)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2029, file: !127, line: 710, baseType: !163, size: 16, offset: 1280)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2029, file: !127, line: 711, baseType: !163, size: 16, offset: 1296)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2029, file: !127, line: 712, baseType: !113, size: 32, offset: 1312)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2029, file: !127, line: 713, baseType: !113, size: 32, offset: 1344)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2029, file: !127, line: 713, baseType: !113, size: 32, offset: 1376)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2029, file: !127, line: 713, baseType: !113, size: 32, offset: 1408)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2029, file: !127, line: 713, baseType: !113, size: 32, offset: 1440)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !128, file: !127, line: 1278, baseType: !2095, size: 64, offset: 36800)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !127, line: 1197, size: 64, elements: !2096)
!2096 = !{!2097, !2098, !2099, !2100}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2095, file: !127, line: 1199, baseType: !113, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2095, file: !127, line: 1200, baseType: !109, size: 8, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2095, file: !127, line: 1201, baseType: !109, size: 8, offset: 40)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2095, file: !127, line: 1202, baseType: !163, size: 16, offset: 48)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !128, file: !127, line: 1281, baseType: !366, size: 64, offset: 36864)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !128, file: !127, line: 1284, baseType: !2103, size: 192, offset: 36928)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !127, line: 1208, size: 192, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2103, file: !127, line: 1209, baseType: !231, size: 96)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2103, file: !127, line: 1210, baseType: !66, size: 32, offset: 96)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2103, file: !127, line: 1210, baseType: !66, size: 32, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2103, file: !127, line: 1210, baseType: !66, size: 32, offset: 160)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !128, file: !127, line: 1287, baseType: !781, size: 64, offset: 37120)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !128, file: !127, line: 1289, baseType: !507, size: 64, offset: 37184)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !128, file: !127, line: 1290, baseType: !507, size: 64, offset: 37248)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !128, file: !127, line: 1293, baseType: !1777, size: 1280, offset: 37312)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !128, file: !127, line: 1294, baseType: !1789, size: 512, offset: 38592)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !128, file: !127, line: 1295, baseType: !772, size: 512, offset: 39104)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !128, file: !127, line: 1298, baseType: !2116, size: 64, offset: 39616)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !127, line: 1298, flags: DIFlagFwdDecl)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !122, file: !1, line: 102, baseType: !2119, size: 64, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "Brush", file: !51, line: 138, baseType: !1107)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "lastpaintpos", scope: !122, file: !1, line: 104, baseType: !526, size: 64, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "startpaintpos", scope: !122, file: !1, line: 105, baseType: !526, size: 64, offset: 192)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "firsttouch", scope: !122, file: !1, line: 107, baseType: !163, size: 16, offset: 256)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !122, file: !1, line: 109, baseType: !269, size: 64, offset: 320)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mapping", scope: !122, file: !1, line: 110, baseType: !624, size: 128, offset: 384)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mapping", scope: !122, file: !1, line: 111, baseType: !624, size: 128, offset: 512)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !122, file: !1, line: 113, baseType: !2128, size: 576, offset: 640)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "BrushPainterCache", file: !1, line: 98, baseType: !2129)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushPainterCache", file: !1, line: 78, size: 576, elements: !2130)
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2143, !2144, !2146, !2147, !2148, !2149}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "use_float", scope: !2129, file: !1, line: 79, baseType: !107, size: 8)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "use_color_correction", scope: !2129, file: !1, line: 80, baseType: !107, size: 8, offset: 8)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2129, file: !1, line: 81, baseType: !107, size: 8, offset: 16)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "is_texbrush", scope: !2129, file: !1, line: 83, baseType: !107, size: 8, offset: 24)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "is_maskbrush", scope: !2129, file: !1, line: 84, baseType: !107, size: 8, offset: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "lastdiameter", scope: !2129, file: !1, line: 86, baseType: !66, size: 32, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "last_tex_rotation", scope: !2129, file: !1, line: 87, baseType: !113, size: 32, offset: 96)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "last_mask_rotation", scope: !2129, file: !1, line: 88, baseType: !113, size: 32, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "last_pressure", scope: !2129, file: !1, line: 89, baseType: !113, size: 32, offset: 160)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "ibuf", scope: !2129, file: !1, line: 91, baseType: !2141, size: 64, offset: 192)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !4, line: 141, baseType: !1255)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "texibuf", scope: !2129, file: !1, line: 92, baseType: !2141, size: 64, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mask", scope: !2129, file: !1, line: 93, baseType: !2145, size: 64, offset: 320)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mask", scope: !2129, file: !1, line: 94, baseType: !2145, size: 64, offset: 384)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mask_old", scope: !2129, file: !1, line: 95, baseType: !2145, size: 64, offset: 448)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mask_old_w", scope: !2129, file: !1, line: 96, baseType: !5, size: 32, offset: 512)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mask_old_h", scope: !2129, file: !1, line: 97, baseType: !5, size: 32, offset: 544)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "sima", scope: !117, file: !1, line: 124, baseType: !2151, size: 64, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !2153, line: 743, baseType: !2154)
!2153 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !2153, line: 710, size: 84672, elements: !2155)
!2155 = !{!2156, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2154, file: !2153, line: 711, baseType: !2157, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !2153, line: 91, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !2153, line: 85, size: 448, elements: !2160)
!2160 = !{!2161, !2163, !2164, !2165, !2166, !2167}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2159, file: !2153, line: 86, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2159, file: !2153, line: 86, baseType: !2162, size: 64, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2159, file: !2153, line: 87, baseType: !189, size: 128, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2159, file: !2153, line: 88, baseType: !66, size: 32, offset: 256)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2159, file: !2153, line: 89, baseType: !113, size: 32, offset: 288)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2159, file: !2153, line: 90, baseType: !2168, size: 128, offset: 320)
!2168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 128, elements: !966)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2154, file: !2153, line: 711, baseType: !2157, size: 64, offset: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2154, file: !2153, line: 712, baseType: !189, size: 128, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2154, file: !2153, line: 713, baseType: !66, size: 32, offset: 256)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2154, file: !2153, line: 715, baseType: !66, size: 32, offset: 288)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2154, file: !2153, line: 717, baseType: !949, size: 64, offset: 320)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2154, file: !2153, line: 718, baseType: !533, size: 320, offset: 384)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !2154, file: !2153, line: 720, baseType: !1118, size: 64, offset: 704)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !2154, file: !2153, line: 722, baseType: !2177, size: 42112, offset: 768)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !773, line: 138, size: 42112, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2192, !2211, !2212, !2213, !2214, !2215, !2216}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2177, file: !773, line: 139, baseType: !66, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !2177, file: !773, line: 140, baseType: !66, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !2177, file: !773, line: 141, baseType: !66, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !2177, file: !773, line: 142, baseType: !113, size: 32, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !2177, file: !773, line: 143, baseType: !66, size: 32, offset: 128)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !2177, file: !773, line: 144, baseType: !113, size: 32, offset: 160)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !2177, file: !773, line: 145, baseType: !113, size: 32, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !2177, file: !773, line: 146, baseType: !66, size: 32, offset: 224)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !2177, file: !773, line: 147, baseType: !113, size: 32, offset: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !2177, file: !773, line: 148, baseType: !66, size: 32, offset: 288)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !2177, file: !773, line: 149, baseType: !2190, size: 192, offset: 320)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 192, elements: !2191)
!2191 = !{!233, !528}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !2177, file: !773, line: 150, baseType: !2193, size: 41280, offset: 512)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !773, line: 118, size: 41280, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2193, file: !773, line: 119, baseType: !66, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !2193, file: !773, line: 120, baseType: !66, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !2193, file: !773, line: 121, baseType: !2198, size: 8192, offset: 64)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 8192, elements: !723)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !2193, file: !773, line: 122, baseType: !2198, size: 8192, offset: 8256)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !2193, file: !773, line: 123, baseType: !2198, size: 8192, offset: 16448)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !2193, file: !773, line: 124, baseType: !2198, size: 8192, offset: 24640)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !2193, file: !773, line: 125, baseType: !2198, size: 8192, offset: 32832)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2193, file: !773, line: 126, baseType: !113, size: 32, offset: 41024)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2193, file: !773, line: 126, baseType: !113, size: 32, offset: 41056)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2193, file: !773, line: 127, baseType: !163, size: 16, offset: 41088)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2193, file: !773, line: 128, baseType: !163, size: 16, offset: 41104)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2193, file: !773, line: 129, baseType: !66, size: 32, offset: 41120)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2193, file: !773, line: 133, baseType: !2209, size: 128, offset: 41152)
!2209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 128, elements: !2210)
!2210 = !{!528, !528}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !2177, file: !773, line: 151, baseType: !238, size: 64, offset: 41792)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !2177, file: !773, line: 152, baseType: !238, size: 64, offset: 41856)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !2177, file: !773, line: 153, baseType: !238, size: 64, offset: 41920)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !2177, file: !773, line: 154, baseType: !238, size: 64, offset: 41984)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !2177, file: !773, line: 155, baseType: !66, size: 32, offset: 42048)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2177, file: !773, line: 156, baseType: !66, size: 32, offset: 42080)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !2154, file: !2153, line: 723, baseType: !2193, size: 41280, offset: 42880)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2154, file: !2153, line: 725, baseType: !366, size: 64, offset: 84160)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2154, file: !2153, line: 727, baseType: !526, size: 64, offset: 84224)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2154, file: !2153, line: 728, baseType: !113, size: 32, offset: 84288)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2154, file: !2153, line: 728, baseType: !113, size: 32, offset: 84320)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !2154, file: !2153, line: 729, baseType: !113, size: 32, offset: 84352)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !2154, file: !2153, line: 730, baseType: !113, size: 32, offset: 84384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !2154, file: !2153, line: 730, baseType: !113, size: 32, offset: 84416)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2154, file: !2153, line: 732, baseType: !109, size: 8, offset: 84448)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !2154, file: !2153, line: 733, baseType: !109, size: 8, offset: 84456)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2154, file: !2153, line: 734, baseType: !163, size: 16, offset: 84464)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !2154, file: !2153, line: 735, baseType: !163, size: 16, offset: 84480)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2154, file: !2153, line: 736, baseType: !163, size: 16, offset: 84496)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !2154, file: !2153, line: 737, baseType: !109, size: 8, offset: 84512)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !2154, file: !2153, line: 738, baseType: !109, size: 8, offset: 84520)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !2154, file: !2153, line: 739, baseType: !109, size: 8, offset: 84528)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2154, file: !2153, line: 740, baseType: !109, size: 8, offset: 84536)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !2154, file: !2153, line: 742, baseType: !2235, size: 128, offset: 84544)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !2153, line: 554, baseType: !2236)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !2153, line: 545, size: 128, elements: !2237)
!2237 = !{!2238, !2239, !2240, !2241, !2242}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2236, file: !2153, line: 548, baseType: !1058, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !2236, file: !2153, line: 550, baseType: !109, size: 8, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !2236, file: !2153, line: 551, baseType: !109, size: 8, offset: 72)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !2236, file: !2153, line: 552, baseType: !109, size: 8, offset: 80)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2236, file: !2153, line: 553, baseType: !1608, size: 40, offset: 88)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !117, file: !1, line: 125, baseType: !2244, size: 64, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !2246, line: 71, baseType: !2247)
!2246 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !2246, line: 40, size: 1280, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2276}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2247, file: !2246, line: 41, baseType: !624, size: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2247, file: !2246, line: 41, baseType: !624, size: 128, offset: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2247, file: !2246, line: 42, baseType: !1312, size: 128, offset: 256)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !2247, file: !2246, line: 42, baseType: !1312, size: 128, offset: 384)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2247, file: !2246, line: 43, baseType: !1312, size: 128, offset: 512)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2247, file: !2246, line: 45, baseType: !526, size: 64, offset: 640)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2247, file: !2246, line: 45, baseType: !526, size: 64, offset: 704)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !2247, file: !2246, line: 46, baseType: !113, size: 32, offset: 768)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !2247, file: !2246, line: 46, baseType: !113, size: 32, offset: 800)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !2247, file: !2246, line: 48, baseType: !163, size: 16, offset: 832)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !2247, file: !2246, line: 49, baseType: !163, size: 16, offset: 848)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !2247, file: !2246, line: 51, baseType: !163, size: 16, offset: 864)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !2247, file: !2246, line: 52, baseType: !163, size: 16, offset: 880)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !2247, file: !2246, line: 53, baseType: !163, size: 16, offset: 896)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2247, file: !2246, line: 55, baseType: !163, size: 16, offset: 912)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2247, file: !2246, line: 56, baseType: !163, size: 16, offset: 928)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2247, file: !2246, line: 58, baseType: !163, size: 16, offset: 944)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2247, file: !2246, line: 58, baseType: !163, size: 16, offset: 960)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !2247, file: !2246, line: 59, baseType: !163, size: 16, offset: 976)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !2247, file: !2246, line: 59, baseType: !163, size: 16, offset: 992)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2247, file: !2246, line: 61, baseType: !163, size: 16, offset: 1008)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !2247, file: !2246, line: 63, baseType: !238, size: 64, offset: 1024)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !2247, file: !2246, line: 64, baseType: !66, size: 32, offset: 1088)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !2247, file: !2246, line: 65, baseType: !66, size: 32, offset: 1120)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2247, file: !2246, line: 68, baseType: !2274, size: 64, offset: 1152)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !2246, line: 68, flags: DIFlagFwdDecl)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2247, file: !2246, line: 69, baseType: !2277, size: 64, offset: 1216)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !2279, line: 490, size: 768, elements: !2280)
!2279 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2280 = !{!2281, !2282, !2283, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2278, file: !2279, line: 491, baseType: !2277, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2278, file: !2279, line: 491, baseType: !2277, size: 64, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !2278, file: !2279, line: 493, baseType: !2284, size: 64, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !39, line: 169, size: 2048, elements: !2286)
!2286 = !{!2287, !2288, !2289, !2290, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2377, !2380, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2285, file: !39, line: 170, baseType: !2284, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2285, file: !39, line: 170, baseType: !2284, size: 64, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !2285, file: !39, line: 172, baseType: !105, size: 64, offset: 128)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2285, file: !39, line: 174, baseType: !2291, size: 64, offset: 192)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !2293, line: 49, size: 1984, elements: !2294)
!2293 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2294 = !{!2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2292, file: !2293, line: 50, baseType: !131, size: 960)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !2292, file: !2293, line: 52, baseType: !189, size: 128, offset: 960)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !2292, file: !2293, line: 53, baseType: !189, size: 128, offset: 1088)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !2292, file: !2293, line: 54, baseType: !189, size: 128, offset: 1216)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2292, file: !2293, line: 55, baseType: !189, size: 128, offset: 1344)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2292, file: !2293, line: 57, baseType: !536, size: 64, offset: 1472)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !2292, file: !2293, line: 58, baseType: !536, size: 64, offset: 1536)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !2292, file: !2293, line: 60, baseType: !66, size: 32, offset: 1600)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2292, file: !2293, line: 61, baseType: !66, size: 32, offset: 1632)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2292, file: !2293, line: 63, baseType: !163, size: 16, offset: 1664)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2292, file: !2293, line: 64, baseType: !163, size: 16, offset: 1680)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !2292, file: !2293, line: 65, baseType: !163, size: 16, offset: 1696)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !2292, file: !2293, line: 66, baseType: !163, size: 16, offset: 1712)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !2292, file: !2293, line: 67, baseType: !163, size: 16, offset: 1728)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !2292, file: !2293, line: 68, baseType: !163, size: 16, offset: 1744)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !2292, file: !2293, line: 69, baseType: !163, size: 16, offset: 1760)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !2292, file: !2293, line: 70, baseType: !163, size: 16, offset: 1776)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !2292, file: !2293, line: 71, baseType: !163, size: 16, offset: 1792)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !2292, file: !2293, line: 73, baseType: !163, size: 16, offset: 1808)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !2292, file: !2293, line: 74, baseType: !163, size: 16, offset: 1824)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2292, file: !2293, line: 76, baseType: !163, size: 16, offset: 1840)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !2292, file: !2293, line: 78, baseType: !2277, size: 64, offset: 1856)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2292, file: !2293, line: 79, baseType: !105, size: 64, offset: 1920)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !2285, file: !39, line: 175, baseType: !2291, size: 64, offset: 256)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !2285, file: !39, line: 176, baseType: !179, size: 512, offset: 320)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !2285, file: !39, line: 178, baseType: !163, size: 16, offset: 832)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !2285, file: !39, line: 178, baseType: !163, size: 16, offset: 848)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !2285, file: !39, line: 178, baseType: !163, size: 16, offset: 864)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !2285, file: !39, line: 178, baseType: !163, size: 16, offset: 880)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !2285, file: !39, line: 179, baseType: !163, size: 16, offset: 896)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !2285, file: !39, line: 180, baseType: !163, size: 16, offset: 912)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2285, file: !39, line: 181, baseType: !163, size: 16, offset: 928)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2285, file: !39, line: 182, baseType: !163, size: 16, offset: 944)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !2285, file: !39, line: 183, baseType: !163, size: 16, offset: 960)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !2285, file: !39, line: 184, baseType: !163, size: 16, offset: 976)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !2285, file: !39, line: 185, baseType: !163, size: 16, offset: 992)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !2285, file: !39, line: 186, baseType: !163, size: 16, offset: 1008)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !2285, file: !39, line: 188, baseType: !66, size: 32, offset: 1024)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !2285, file: !39, line: 190, baseType: !163, size: 16, offset: 1056)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !2285, file: !39, line: 191, baseType: !163, size: 16, offset: 1072)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !2285, file: !39, line: 194, baseType: !2336, size: 64, offset: 1088)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !2279, line: 421, size: 960, elements: !2338)
!2338 = !{!2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2365, !2373, !2374, !2375, !2376}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2337, file: !2279, line: 422, baseType: !2336, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2337, file: !2279, line: 422, baseType: !2336, size: 64, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2337, file: !2279, line: 424, baseType: !163, size: 16, offset: 128)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2337, file: !2279, line: 425, baseType: !163, size: 16, offset: 144)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2337, file: !2279, line: 426, baseType: !66, size: 32, offset: 160)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2337, file: !2279, line: 426, baseType: !66, size: 32, offset: 192)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2337, file: !2279, line: 427, baseType: !791, size: 64, offset: 224)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2337, file: !2279, line: 428, baseType: !1775, size: 48, offset: 288)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2337, file: !2279, line: 431, baseType: !109, size: 8, offset: 336)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2337, file: !2279, line: 432, baseType: !109, size: 8, offset: 344)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2337, file: !2279, line: 435, baseType: !163, size: 16, offset: 352)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2337, file: !2279, line: 436, baseType: !163, size: 16, offset: 368)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2337, file: !2279, line: 437, baseType: !66, size: 32, offset: 384)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2337, file: !2279, line: 437, baseType: !66, size: 32, offset: 416)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2337, file: !2279, line: 438, baseType: !1269, size: 64, offset: 448)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2337, file: !2279, line: 439, baseType: !66, size: 32, offset: 512)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2337, file: !2279, line: 439, baseType: !66, size: 32, offset: 544)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2337, file: !2279, line: 442, baseType: !163, size: 16, offset: 576)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2337, file: !2279, line: 442, baseType: !163, size: 16, offset: 592)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2337, file: !2279, line: 442, baseType: !163, size: 16, offset: 608)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2337, file: !2279, line: 442, baseType: !163, size: 16, offset: 624)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2337, file: !2279, line: 443, baseType: !163, size: 16, offset: 640)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2337, file: !2279, line: 446, baseType: !163, size: 16, offset: 656)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2337, file: !2279, line: 449, baseType: !2363, size: 64, offset: 704)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2337, file: !2279, line: 452, baseType: !2366, size: 64, offset: 768)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !2279, line: 463, size: 128, elements: !2368)
!2368 = !{!2369, !2370, !2371, !2372}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2367, file: !2279, line: 464, baseType: !66, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2367, file: !2279, line: 465, baseType: !113, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2367, file: !2279, line: 466, baseType: !113, size: 32, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2367, file: !2279, line: 467, baseType: !113, size: 32, offset: 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2337, file: !2279, line: 455, baseType: !163, size: 16, offset: 832)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2337, file: !2279, line: 456, baseType: !163, size: 16, offset: 848)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2337, file: !2279, line: 457, baseType: !66, size: 32, offset: 864)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2337, file: !2279, line: 458, baseType: !105, size: 64, offset: 896)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !2285, file: !39, line: 196, baseType: !2378, size: 64, offset: 1152)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !39, line: 55, flags: DIFlagFwdDecl)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !2285, file: !39, line: 198, baseType: !2381, size: 64, offset: 1216)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !2279, line: 398, size: 448, elements: !2383)
!2383 = !{!2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2382, file: !2279, line: 399, baseType: !2381, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2382, file: !2279, line: 399, baseType: !2381, size: 64, offset: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2382, file: !2279, line: 400, baseType: !66, size: 32, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2382, file: !2279, line: 401, baseType: !66, size: 32, offset: 160)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2382, file: !2279, line: 402, baseType: !66, size: 32, offset: 192)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2382, file: !2279, line: 403, baseType: !66, size: 32, offset: 224)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2382, file: !2279, line: 404, baseType: !66, size: 32, offset: 256)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2382, file: !2279, line: 405, baseType: !66, size: 32, offset: 288)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2382, file: !2279, line: 407, baseType: !105, size: 64, offset: 320)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2382, file: !2279, line: 414, baseType: !105, size: 64, offset: 384)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !2285, file: !39, line: 200, baseType: !66, size: 32, offset: 1280)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !2285, file: !39, line: 200, baseType: !66, size: 32, offset: 1312)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !2285, file: !39, line: 201, baseType: !105, size: 64, offset: 1344)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2285, file: !39, line: 203, baseType: !189, size: 128, offset: 1408)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2285, file: !39, line: 204, baseType: !189, size: 128, offset: 1536)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !2285, file: !39, line: 205, baseType: !189, size: 128, offset: 1664)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !2285, file: !39, line: 207, baseType: !189, size: 128, offset: 1792)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !2285, file: !39, line: 208, baseType: !189, size: 128, offset: 1920)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !2278, file: !2279, line: 495, baseType: !1269, size: 64, offset: 192)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2278, file: !2279, line: 496, baseType: !66, size: 32, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2278, file: !2279, line: 497, baseType: !105, size: 64, offset: 320)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2278, file: !2279, line: 499, baseType: !1269, size: 64, offset: 384)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2278, file: !2279, line: 500, baseType: !1269, size: 64, offset: 448)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !2278, file: !2279, line: 502, baseType: !1269, size: 64, offset: 512)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !2278, file: !2279, line: 503, baseType: !1269, size: 64, offset: 576)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2278, file: !2279, line: 504, baseType: !1269, size: 64, offset: 640)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !2278, file: !2279, line: 505, baseType: !66, size: 32, offset: 704)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !117, file: !1, line: 126, baseType: !125, size: 64, offset: 192)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !117, file: !1, line: 127, baseType: !2413, size: 64, offset: 256)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !2293, line: 80, baseType: !2292)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "image_pool", scope: !117, file: !1, line: 128, baseType: !269, size: 64, offset: 320)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !117, file: !1, line: 130, baseType: !2119, size: 64, offset: 384)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "tool", scope: !117, file: !1, line: 131, baseType: !163, size: 16, offset: 448)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !117, file: !1, line: 131, baseType: !163, size: 16, offset: 464)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !117, file: !1, line: 132, baseType: !2420, size: 64, offset: 512)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !532, line: 127, baseType: !950)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !117, file: !1, line: 133, baseType: !2141, size: 64, offset: 576)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "clonecanvas", scope: !117, file: !1, line: 134, baseType: !2141, size: 64, offset: 640)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "warnpackedfile", scope: !117, file: !1, line: 135, baseType: !2363, size: 64, offset: 704)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "warnmultifile", scope: !117, file: !1, line: 136, baseType: !2363, size: 64, offset: 768)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "do_masking", scope: !117, file: !1, line: 138, baseType: !107, size: 8, offset: 832)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !117, file: !1, line: 141, baseType: !2428, size: 64, offset: 896)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !206, line: 295, baseType: !205)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "faceindex", scope: !117, file: !1, line: 142, baseType: !66, size: 32, offset: 960)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !117, file: !1, line: 143, baseType: !526, size: 64, offset: 992)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "do_facesel", scope: !117, file: !1, line: 144, baseType: !66, size: 32, offset: 1056)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "need_redraw", scope: !117, file: !1, line: 146, baseType: !107, size: 8, offset: 1088)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "blurkernel", scope: !117, file: !1, line: 148, baseType: !2435, size: 64, offset: 1152)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlurKernel", file: !60, line: 300, baseType: !2437)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !60, line: 295, size: 192, elements: !2438)
!2438 = !{!2439, !2440, !2441, !2442}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "wdata", scope: !2437, file: !60, line: 296, baseType: !238, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "side", scope: !2437, file: !60, line: 297, baseType: !66, size: 32, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "side_squared", scope: !2437, file: !60, line: 298, baseType: !66, size: 32, offset: 96)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_len", scope: !2437, file: !60, line: 299, baseType: !66, size: 32, offset: 128)
!2443 = !{i32 7, !"Dwarf Version", i32 4}
!2444 = !{i32 2, !"Debug Info Version", i32 3}
!2445 = !{i32 1, !"wchar_size", i32 4}
!2446 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2447 = distinct !DISubprogram(name: "paint_2d_stroke", scope: !1, file: !1, line: 1169, type: !2448, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{null, !105, !2450, !2450, !2452, !113, !113, !113}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!2452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!2453 = !{}
!2454 = !DILocalVariable(name: "ps", arg: 1, scope: !2447, file: !1, line: 1169, type: !105)
!2455 = !DILocation(line: 1169, column: 28, scope: !2447)
!2456 = !DILocalVariable(name: "prev_mval", arg: 2, scope: !2447, file: !1, line: 1169, type: !2450)
!2457 = !DILocation(line: 1169, column: 44, scope: !2447)
!2458 = !DILocalVariable(name: "mval", arg: 3, scope: !2447, file: !1, line: 1169, type: !2450)
!2459 = !DILocation(line: 1169, column: 70, scope: !2447)
!2460 = !DILocalVariable(name: "eraser", arg: 4, scope: !2447, file: !1, line: 1169, type: !2452)
!2461 = !DILocation(line: 1169, column: 90, scope: !2447)
!2462 = !DILocalVariable(name: "pressure", arg: 5, scope: !2447, file: !1, line: 1169, type: !113)
!2463 = !DILocation(line: 1169, column: 104, scope: !2447)
!2464 = !DILocalVariable(name: "distance", arg: 6, scope: !2447, file: !1, line: 1169, type: !113)
!2465 = !DILocation(line: 1169, column: 120, scope: !2447)
!2466 = !DILocalVariable(name: "size", arg: 7, scope: !2447, file: !1, line: 1169, type: !113)
!2467 = !DILocation(line: 1169, column: 136, scope: !2447)
!2468 = !DILocalVariable(name: "newuv", scope: !2447, file: !1, line: 1171, type: !526)
!2469 = !DILocation(line: 1171, column: 8, scope: !2447)
!2470 = !DILocalVariable(name: "olduv", scope: !2447, file: !1, line: 1171, type: !526)
!2471 = !DILocation(line: 1171, column: 18, scope: !2447)
!2472 = !DILocalVariable(name: "s", scope: !2447, file: !1, line: 1172, type: !115)
!2473 = !DILocation(line: 1172, column: 19, scope: !2447)
!2474 = !DILocation(line: 1172, column: 23, scope: !2447)
!2475 = !DILocalVariable(name: "painter", scope: !2447, file: !1, line: 1173, type: !120)
!2476 = !DILocation(line: 1173, column: 16, scope: !2447)
!2477 = !DILocation(line: 1173, column: 26, scope: !2447)
!2478 = !DILocation(line: 1173, column: 29, scope: !2447)
!2479 = !DILocalVariable(name: "ibuf", scope: !2447, file: !1, line: 1174, type: !2141)
!2480 = !DILocation(line: 1174, column: 9, scope: !2447)
!2481 = !DILocation(line: 1174, column: 39, scope: !2447)
!2482 = !DILocation(line: 1174, column: 42, scope: !2447)
!2483 = !DILocation(line: 1174, column: 49, scope: !2447)
!2484 = !DILocation(line: 1174, column: 52, scope: !2447)
!2485 = !DILocation(line: 1174, column: 60, scope: !2447)
!2486 = !DILocation(line: 1174, column: 63, scope: !2447)
!2487 = !DILocation(line: 1174, column: 69, scope: !2447)
!2488 = !DILocation(line: 1174, column: 16, scope: !2447)
!2489 = !DILocalVariable(name: "is_data", scope: !2447, file: !1, line: 1175, type: !2452)
!2490 = !DILocation(line: 1175, column: 13, scope: !2447)
!2491 = !DILocation(line: 1175, column: 24, scope: !2447)
!2492 = !DILocation(line: 1175, column: 29, scope: !2447)
!2493 = !DILocation(line: 1175, column: 32, scope: !2447)
!2494 = !DILocation(line: 1175, column: 38, scope: !2447)
!2495 = !DILocation(line: 1175, column: 55, scope: !2447)
!2496 = !DILocation(line: 0, scope: !2447)
!2497 = !DILocation(line: 1175, column: 23, scope: !2447)
!2498 = !DILocation(line: 1177, column: 7, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2447, file: !1, line: 1177, column: 6)
!2500 = !DILocation(line: 1177, column: 6, scope: !2447)
!2501 = !DILocation(line: 1178, column: 3, scope: !2499)
!2502 = !DILocation(line: 1180, column: 13, scope: !2447)
!2503 = !DILocation(line: 1180, column: 16, scope: !2447)
!2504 = !DILocation(line: 1180, column: 23, scope: !2447)
!2505 = !DILocation(line: 1180, column: 2, scope: !2447)
!2506 = !DILocation(line: 1180, column: 5, scope: !2447)
!2507 = !DILocation(line: 1180, column: 11, scope: !2447)
!2508 = !DILocation(line: 1181, column: 6, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2447, file: !1, line: 1181, column: 6)
!2510 = !DILocation(line: 1181, column: 6, scope: !2447)
!2511 = !DILocation(line: 1182, column: 3, scope: !2509)
!2512 = !DILocation(line: 1182, column: 6, scope: !2509)
!2513 = !DILocation(line: 1182, column: 12, scope: !2509)
!2514 = !DILocation(line: 1184, column: 27, scope: !2447)
!2515 = !DILocation(line: 1184, column: 30, scope: !2447)
!2516 = !DILocation(line: 1184, column: 35, scope: !2447)
!2517 = !DILocation(line: 1184, column: 44, scope: !2447)
!2518 = !DILocation(line: 1184, column: 54, scope: !2447)
!2519 = !DILocation(line: 1184, column: 65, scope: !2447)
!2520 = !DILocation(line: 1184, column: 2, scope: !2447)
!2521 = !DILocation(line: 1185, column: 27, scope: !2447)
!2522 = !DILocation(line: 1185, column: 30, scope: !2447)
!2523 = !DILocation(line: 1185, column: 35, scope: !2447)
!2524 = !DILocation(line: 1185, column: 49, scope: !2447)
!2525 = !DILocation(line: 1185, column: 64, scope: !2447)
!2526 = !DILocation(line: 1185, column: 75, scope: !2447)
!2527 = !DILocation(line: 1185, column: 2, scope: !2447)
!2528 = !DILocation(line: 1187, column: 14, scope: !2447)
!2529 = !DILocation(line: 1187, column: 20, scope: !2447)
!2530 = !DILocation(line: 1187, column: 2, scope: !2447)
!2531 = !DILocation(line: 1187, column: 11, scope: !2447)
!2532 = !DILocation(line: 1188, column: 14, scope: !2447)
!2533 = !DILocation(line: 1188, column: 20, scope: !2447)
!2534 = !DILocation(line: 1188, column: 2, scope: !2447)
!2535 = !DILocation(line: 1188, column: 11, scope: !2447)
!2536 = !DILocation(line: 1190, column: 14, scope: !2447)
!2537 = !DILocation(line: 1190, column: 20, scope: !2447)
!2538 = !DILocation(line: 1190, column: 2, scope: !2447)
!2539 = !DILocation(line: 1190, column: 11, scope: !2447)
!2540 = !DILocation(line: 1191, column: 14, scope: !2447)
!2541 = !DILocation(line: 1191, column: 20, scope: !2447)
!2542 = !DILocation(line: 1191, column: 2, scope: !2447)
!2543 = !DILocation(line: 1191, column: 11, scope: !2447)
!2544 = !DILocation(line: 1193, column: 6, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2447, file: !1, line: 1193, column: 6)
!2546 = !DILocation(line: 1193, column: 15, scope: !2545)
!2547 = !DILocation(line: 1193, column: 6, scope: !2447)
!2548 = !DILocalVariable(name: "startuv", scope: !2549, file: !1, line: 1194, type: !526)
!2549 = distinct !DILexicalBlock(scope: !2545, file: !1, line: 1193, column: 27)
!2550 = !DILocation(line: 1194, column: 9, scope: !2549)
!2551 = !DILocation(line: 1196, column: 28, scope: !2549)
!2552 = !DILocation(line: 1196, column: 31, scope: !2549)
!2553 = !DILocation(line: 1196, column: 43, scope: !2549)
!2554 = !DILocation(line: 1196, column: 56, scope: !2549)
!2555 = !DILocation(line: 1196, column: 3, scope: !2549)
!2556 = !DILocation(line: 1199, column: 31, scope: !2549)
!2557 = !DILocation(line: 1199, column: 44, scope: !2549)
!2558 = !DILocation(line: 1199, column: 50, scope: !2549)
!2559 = !DILocation(line: 1199, column: 42, scope: !2549)
!2560 = !DILocation(line: 1199, column: 3, scope: !2549)
!2561 = !DILocation(line: 1199, column: 12, scope: !2549)
!2562 = !DILocation(line: 1199, column: 29, scope: !2549)
!2563 = !DILocation(line: 1200, column: 31, scope: !2549)
!2564 = !DILocation(line: 1200, column: 44, scope: !2549)
!2565 = !DILocation(line: 1200, column: 50, scope: !2549)
!2566 = !DILocation(line: 1200, column: 42, scope: !2549)
!2567 = !DILocation(line: 1200, column: 3, scope: !2549)
!2568 = !DILocation(line: 1200, column: 12, scope: !2549)
!2569 = !DILocation(line: 1200, column: 29, scope: !2549)
!2570 = !DILocation(line: 1202, column: 3, scope: !2549)
!2571 = !DILocation(line: 1202, column: 12, scope: !2549)
!2572 = !DILocation(line: 1202, column: 23, scope: !2549)
!2573 = !DILocation(line: 1203, column: 14, scope: !2549)
!2574 = !DILocation(line: 1203, column: 23, scope: !2549)
!2575 = !DILocation(line: 1203, column: 37, scope: !2549)
!2576 = !DILocation(line: 1203, column: 3, scope: !2549)
!2577 = !DILocation(line: 1204, column: 2, scope: !2549)
!2578 = !DILocation(line: 1206, column: 14, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2545, file: !1, line: 1205, column: 7)
!2580 = !DILocation(line: 1206, column: 23, scope: !2579)
!2581 = !DILocation(line: 1206, column: 37, scope: !2579)
!2582 = !DILocation(line: 1206, column: 3, scope: !2579)
!2583 = !DILocation(line: 1212, column: 33, scope: !2447)
!2584 = !DILocation(line: 1212, column: 43, scope: !2447)
!2585 = !DILocation(line: 1212, column: 49, scope: !2447)
!2586 = !DILocation(line: 1212, column: 60, scope: !2447)
!2587 = !DILocation(line: 1212, column: 42, scope: !2447)
!2588 = !DILocation(line: 1212, column: 71, scope: !2447)
!2589 = !DILocation(line: 1212, column: 70, scope: !2447)
!2590 = !DILocation(line: 1212, column: 2, scope: !2447)
!2591 = !DILocation(line: 1214, column: 33, scope: !2447)
!2592 = !DILocation(line: 1214, column: 36, scope: !2447)
!2593 = !DILocation(line: 1214, column: 45, scope: !2447)
!2594 = !DILocation(line: 1214, column: 52, scope: !2447)
!2595 = !DILocation(line: 1214, column: 58, scope: !2447)
!2596 = !DILocation(line: 1214, column: 68, scope: !2447)
!2597 = !DILocation(line: 1214, column: 78, scope: !2447)
!2598 = !DILocation(line: 1214, column: 2, scope: !2447)
!2599 = !DILocation(line: 1216, column: 18, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2447, file: !1, line: 1216, column: 6)
!2601 = !DILocation(line: 1216, column: 21, scope: !2600)
!2602 = !DILocation(line: 1216, column: 30, scope: !2600)
!2603 = !DILocation(line: 1216, column: 36, scope: !2600)
!2604 = !DILocation(line: 1216, column: 42, scope: !2600)
!2605 = !DILocation(line: 1216, column: 51, scope: !2600)
!2606 = !DILocation(line: 1216, column: 57, scope: !2600)
!2607 = !DILocation(line: 1216, column: 69, scope: !2600)
!2608 = !DILocation(line: 1216, column: 78, scope: !2600)
!2609 = !DILocation(line: 1216, column: 84, scope: !2600)
!2610 = !DILocation(line: 1216, column: 94, scope: !2600)
!2611 = !DILocation(line: 1216, column: 101, scope: !2600)
!2612 = !DILocation(line: 1216, column: 6, scope: !2600)
!2613 = !DILocation(line: 1216, column: 6, scope: !2447)
!2614 = !DILocation(line: 1217, column: 3, scope: !2600)
!2615 = !DILocation(line: 1217, column: 6, scope: !2600)
!2616 = !DILocation(line: 1217, column: 18, scope: !2600)
!2617 = !DILocation(line: 1219, column: 25, scope: !2447)
!2618 = !DILocation(line: 1219, column: 28, scope: !2447)
!2619 = !DILocation(line: 1219, column: 35, scope: !2447)
!2620 = !DILocation(line: 1219, column: 2, scope: !2447)
!2621 = !DILocation(line: 1220, column: 1, scope: !2447)
!2622 = distinct !DISubprogram(name: "copy_v2_v2", scope: !2623, file: !2623, line: 58, type: !2624, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!2623 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2624 = !DISubroutineType(types: !2625)
!2625 = !{null, !238, !2450}
!2626 = !DILocalVariable(name: "r", arg: 1, scope: !2622, file: !2623, line: 58, type: !238)
!2627 = !DILocation(line: 58, column: 31, scope: !2622)
!2628 = !DILocalVariable(name: "a", arg: 2, scope: !2622, file: !2623, line: 58, type: !2450)
!2629 = !DILocation(line: 58, column: 49, scope: !2622)
!2630 = !DILocation(line: 60, column: 9, scope: !2622)
!2631 = !DILocation(line: 60, column: 2, scope: !2622)
!2632 = !DILocation(line: 60, column: 7, scope: !2622)
!2633 = !DILocation(line: 61, column: 9, scope: !2622)
!2634 = !DILocation(line: 61, column: 2, scope: !2622)
!2635 = !DILocation(line: 61, column: 7, scope: !2622)
!2636 = !DILocation(line: 62, column: 1, scope: !2622)
!2637 = distinct !DISubprogram(name: "brush_painter_2d_require_imbuf", scope: !1, file: !1, line: 166, type: !2638, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{null, !120, !107, !107}
!2640 = !DILocalVariable(name: "painter", arg: 1, scope: !2637, file: !1, line: 166, type: !120)
!2641 = !DILocation(line: 166, column: 58, scope: !2637)
!2642 = !DILocalVariable(name: "use_float", arg: 2, scope: !2637, file: !1, line: 166, type: !107)
!2643 = !DILocation(line: 166, column: 72, scope: !2637)
!2644 = !DILocalVariable(name: "use_color_correction", arg: 3, scope: !2637, file: !1, line: 166, type: !107)
!2645 = !DILocation(line: 166, column: 88, scope: !2637)
!2646 = !DILocalVariable(name: "brush", scope: !2637, file: !1, line: 168, type: !2119)
!2647 = !DILocation(line: 168, column: 9, scope: !2637)
!2648 = !DILocation(line: 168, column: 17, scope: !2637)
!2649 = !DILocation(line: 168, column: 26, scope: !2637)
!2650 = !DILocation(line: 170, column: 7, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2637, file: !1, line: 170, column: 6)
!2652 = !DILocation(line: 170, column: 16, scope: !2651)
!2653 = !DILocation(line: 170, column: 22, scope: !2651)
!2654 = !DILocation(line: 170, column: 35, scope: !2651)
!2655 = !DILocation(line: 170, column: 32, scope: !2651)
!2656 = !DILocation(line: 170, column: 6, scope: !2637)
!2657 = !DILocation(line: 171, column: 7, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2659, file: !1, line: 171, column: 7)
!2659 = distinct !DILexicalBlock(scope: !2651, file: !1, line: 170, column: 47)
!2660 = !DILocation(line: 171, column: 16, scope: !2658)
!2661 = !DILocation(line: 171, column: 22, scope: !2658)
!2662 = !DILocation(line: 171, column: 7, scope: !2659)
!2663 = !DILocation(line: 171, column: 42, scope: !2658)
!2664 = !DILocation(line: 171, column: 51, scope: !2658)
!2665 = !DILocation(line: 171, column: 57, scope: !2658)
!2666 = !DILocation(line: 171, column: 28, scope: !2658)
!2667 = !DILocation(line: 172, column: 7, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2659, file: !1, line: 172, column: 7)
!2669 = !DILocation(line: 172, column: 16, scope: !2668)
!2670 = !DILocation(line: 172, column: 22, scope: !2668)
!2671 = !DILocation(line: 172, column: 7, scope: !2659)
!2672 = !DILocation(line: 172, column: 34, scope: !2668)
!2673 = !DILocation(line: 172, column: 44, scope: !2668)
!2674 = !DILocation(line: 172, column: 53, scope: !2668)
!2675 = !DILocation(line: 172, column: 59, scope: !2668)
!2676 = !DILocation(line: 173, column: 7, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2659, file: !1, line: 173, column: 7)
!2678 = !DILocation(line: 173, column: 16, scope: !2677)
!2679 = !DILocation(line: 173, column: 22, scope: !2677)
!2680 = !DILocation(line: 173, column: 7, scope: !2659)
!2681 = !DILocation(line: 173, column: 32, scope: !2677)
!2682 = !DILocation(line: 173, column: 42, scope: !2677)
!2683 = !DILocation(line: 173, column: 51, scope: !2677)
!2684 = !DILocation(line: 173, column: 57, scope: !2677)
!2685 = !DILocation(line: 174, column: 7, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2659, file: !1, line: 174, column: 7)
!2687 = !DILocation(line: 174, column: 16, scope: !2686)
!2688 = !DILocation(line: 174, column: 22, scope: !2686)
!2689 = !DILocation(line: 174, column: 7, scope: !2659)
!2690 = !DILocation(line: 174, column: 36, scope: !2686)
!2691 = !DILocation(line: 174, column: 46, scope: !2686)
!2692 = !DILocation(line: 174, column: 55, scope: !2686)
!2693 = !DILocation(line: 174, column: 61, scope: !2686)
!2694 = !DILocation(line: 175, column: 3, scope: !2659)
!2695 = !DILocation(line: 175, column: 12, scope: !2659)
!2696 = !DILocation(line: 175, column: 18, scope: !2659)
!2697 = !DILocation(line: 175, column: 23, scope: !2659)
!2698 = !DILocation(line: 176, column: 3, scope: !2659)
!2699 = !DILocation(line: 176, column: 12, scope: !2659)
!2700 = !DILocation(line: 176, column: 18, scope: !2659)
!2701 = !DILocation(line: 176, column: 29, scope: !2659)
!2702 = !DILocation(line: 177, column: 3, scope: !2659)
!2703 = !DILocation(line: 177, column: 12, scope: !2659)
!2704 = !DILocation(line: 177, column: 18, scope: !2659)
!2705 = !DILocation(line: 177, column: 27, scope: !2659)
!2706 = !DILocation(line: 178, column: 3, scope: !2659)
!2707 = !DILocation(line: 178, column: 12, scope: !2659)
!2708 = !DILocation(line: 178, column: 18, scope: !2659)
!2709 = !DILocation(line: 178, column: 31, scope: !2659)
!2710 = !DILocation(line: 179, column: 2, scope: !2659)
!2711 = !DILocation(line: 181, column: 29, scope: !2637)
!2712 = !DILocation(line: 181, column: 2, scope: !2637)
!2713 = !DILocation(line: 181, column: 11, scope: !2637)
!2714 = !DILocation(line: 181, column: 17, scope: !2637)
!2715 = !DILocation(line: 181, column: 27, scope: !2637)
!2716 = !DILocation(line: 182, column: 40, scope: !2637)
!2717 = !DILocation(line: 182, column: 50, scope: !2637)
!2718 = !DILocation(line: 182, column: 53, scope: !2637)
!2719 = !DILocation(line: 0, scope: !2637)
!2720 = !DILocation(line: 182, column: 2, scope: !2637)
!2721 = !DILocation(line: 182, column: 11, scope: !2637)
!2722 = !DILocation(line: 182, column: 17, scope: !2637)
!2723 = !DILocation(line: 182, column: 38, scope: !2637)
!2724 = !DILocation(line: 183, column: 32, scope: !2637)
!2725 = !DILocation(line: 183, column: 39, scope: !2637)
!2726 = !DILocation(line: 183, column: 44, scope: !2637)
!2727 = !DILocation(line: 183, column: 48, scope: !2637)
!2728 = !DILocation(line: 183, column: 51, scope: !2637)
!2729 = !DILocation(line: 183, column: 58, scope: !2637)
!2730 = !DILocation(line: 183, column: 74, scope: !2637)
!2731 = !DILocation(line: 183, column: 31, scope: !2637)
!2732 = !DILocation(line: 183, column: 2, scope: !2637)
!2733 = !DILocation(line: 183, column: 11, scope: !2637)
!2734 = !DILocation(line: 183, column: 17, scope: !2637)
!2735 = !DILocation(line: 183, column: 29, scope: !2637)
!2736 = !DILocation(line: 184, column: 33, scope: !2637)
!2737 = !DILocation(line: 184, column: 40, scope: !2637)
!2738 = !DILocation(line: 184, column: 50, scope: !2637)
!2739 = !DILocation(line: 184, column: 32, scope: !2637)
!2740 = !DILocation(line: 184, column: 2, scope: !2637)
!2741 = !DILocation(line: 184, column: 11, scope: !2637)
!2742 = !DILocation(line: 184, column: 17, scope: !2637)
!2743 = !DILocation(line: 184, column: 30, scope: !2637)
!2744 = !DILocation(line: 185, column: 1, scope: !2637)
!2745 = distinct !DISubprogram(name: "brush_painter_2d_refresh_cache", scope: !1, file: !1, line: 653, type: !2746, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{null, !115, !120, !2450, !2450, !113, !113, !113}
!2748 = !DILocalVariable(name: "s", arg: 1, scope: !2745, file: !1, line: 653, type: !115)
!2749 = !DILocation(line: 653, column: 61, scope: !2745)
!2750 = !DILocalVariable(name: "painter", arg: 2, scope: !2745, file: !1, line: 653, type: !120)
!2751 = !DILocation(line: 653, column: 78, scope: !2745)
!2752 = !DILocalVariable(name: "pos", arg: 3, scope: !2745, file: !1, line: 653, type: !2450)
!2753 = !DILocation(line: 653, column: 99, scope: !2745)
!2754 = !DILocalVariable(name: "mouse", arg: 4, scope: !2745, file: !1, line: 653, type: !2450)
!2755 = !DILocation(line: 653, column: 119, scope: !2745)
!2756 = !DILocalVariable(name: "pressure", arg: 5, scope: !2745, file: !1, line: 653, type: !113)
!2757 = !DILocation(line: 653, column: 135, scope: !2745)
!2758 = !DILocalVariable(name: "distance", arg: 6, scope: !2745, file: !1, line: 653, type: !113)
!2759 = !DILocation(line: 653, column: 151, scope: !2745)
!2760 = !DILocalVariable(name: "size", arg: 7, scope: !2745, file: !1, line: 653, type: !113)
!2761 = !DILocation(line: 653, column: 167, scope: !2745)
!2762 = !DILocalVariable(name: "scene", scope: !2745, file: !1, line: 655, type: !2763)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!2765 = !DILocation(line: 655, column: 15, scope: !2745)
!2766 = !DILocation(line: 655, column: 23, scope: !2745)
!2767 = !DILocation(line: 655, column: 32, scope: !2745)
!2768 = !DILocalVariable(name: "ups", scope: !2745, file: !1, line: 656, type: !2769)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "UnifiedPaintSettings", file: !127, line: 1025, baseType: !1710)
!2771 = !DILocation(line: 656, column: 24, scope: !2745)
!2772 = !DILocation(line: 656, column: 31, scope: !2745)
!2773 = !DILocation(line: 656, column: 38, scope: !2745)
!2774 = !DILocation(line: 656, column: 52, scope: !2745)
!2775 = !DILocalVariable(name: "brush", scope: !2745, file: !1, line: 657, type: !2119)
!2776 = !DILocation(line: 657, column: 9, scope: !2745)
!2777 = !DILocation(line: 657, column: 17, scope: !2745)
!2778 = !DILocation(line: 657, column: 26, scope: !2745)
!2779 = !DILocalVariable(name: "cache", scope: !2745, file: !1, line: 658, type: !2780)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2781 = !DILocation(line: 658, column: 21, scope: !2745)
!2782 = !DILocation(line: 658, column: 30, scope: !2745)
!2783 = !DILocation(line: 658, column: 39, scope: !2745)
!2784 = !DILocalVariable(name: "diameter", scope: !2745, file: !1, line: 659, type: !2785)
!2785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !66)
!2786 = !DILocation(line: 659, column: 12, scope: !2745)
!2787 = !DILocation(line: 659, column: 27, scope: !2745)
!2788 = !DILocation(line: 659, column: 25, scope: !2745)
!2789 = !DILocation(line: 659, column: 23, scope: !2745)
!2790 = !DILocalVariable(name: "do_random", scope: !2745, file: !1, line: 661, type: !107)
!2791 = !DILocation(line: 661, column: 7, scope: !2745)
!2792 = !DILocalVariable(name: "do_partial_update", scope: !2745, file: !1, line: 662, type: !107)
!2793 = !DILocation(line: 662, column: 7, scope: !2745)
!2794 = !DILocalVariable(name: "update_color", scope: !2745, file: !1, line: 663, type: !107)
!2795 = !DILocation(line: 663, column: 7, scope: !2745)
!2796 = !DILocation(line: 663, column: 23, scope: !2745)
!2797 = !DILocation(line: 663, column: 30, scope: !2745)
!2798 = !DILocation(line: 663, column: 35, scope: !2745)
!2799 = !DILocation(line: 663, column: 57, scope: !2745)
!2800 = !DILocation(line: 664, column: 24, scope: !2745)
!2801 = !DILocation(line: 666, column: 60, scope: !2745)
!2802 = !DILocation(line: 667, column: 24, scope: !2745)
!2803 = !DILocation(line: 667, column: 31, scope: !2745)
!2804 = !DILocation(line: 667, column: 48, scope: !2745)
!2805 = !DILocation(line: 667, column: 45, scope: !2745)
!2806 = !DILocation(line: 0, scope: !2745)
!2807 = !DILocation(line: 663, column: 22, scope: !2745)
!2808 = !DILocalVariable(name: "tex_rotation", scope: !2745, file: !1, line: 668, type: !113)
!2809 = !DILocation(line: 668, column: 8, scope: !2745)
!2810 = !DILocation(line: 668, column: 24, scope: !2745)
!2811 = !DILocation(line: 668, column: 31, scope: !2745)
!2812 = !DILocation(line: 668, column: 36, scope: !2745)
!2813 = !DILocation(line: 668, column: 23, scope: !2745)
!2814 = !DILocalVariable(name: "mask_rotation", scope: !2745, file: !1, line: 669, type: !113)
!2815 = !DILocation(line: 669, column: 8, scope: !2745)
!2816 = !DILocation(line: 669, column: 25, scope: !2745)
!2817 = !DILocation(line: 669, column: 32, scope: !2745)
!2818 = !DILocation(line: 669, column: 42, scope: !2745)
!2819 = !DILocation(line: 669, column: 24, scope: !2745)
!2820 = !DILocation(line: 671, column: 18, scope: !2745)
!2821 = !DILocation(line: 671, column: 2, scope: !2745)
!2822 = !DILocation(line: 671, column: 11, scope: !2745)
!2823 = !DILocation(line: 671, column: 16, scope: !2745)
!2824 = !DILocation(line: 674, column: 6, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2745, file: !1, line: 674, column: 6)
!2826 = !DILocation(line: 674, column: 15, scope: !2825)
!2827 = !DILocation(line: 674, column: 21, scope: !2825)
!2828 = !DILocation(line: 674, column: 6, scope: !2745)
!2829 = !DILocation(line: 675, column: 7, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2831, file: !1, line: 675, column: 7)
!2831 = distinct !DILexicalBlock(scope: !2825, file: !1, line: 674, column: 34)
!2832 = !DILocation(line: 675, column: 14, scope: !2830)
!2833 = !DILocation(line: 675, column: 19, scope: !2830)
!2834 = !DILocation(line: 675, column: 34, scope: !2830)
!2835 = !DILocation(line: 675, column: 7, scope: !2831)
!2836 = !DILocation(line: 676, column: 20, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2830, file: !1, line: 675, column: 57)
!2838 = !DILocation(line: 676, column: 25, scope: !2837)
!2839 = !DILocation(line: 676, column: 17, scope: !2837)
!2840 = !DILocation(line: 677, column: 3, scope: !2837)
!2841 = !DILocation(line: 678, column: 12, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2830, file: !1, line: 678, column: 12)
!2843 = !DILocation(line: 678, column: 19, scope: !2842)
!2844 = !DILocation(line: 678, column: 24, scope: !2842)
!2845 = !DILocation(line: 678, column: 39, scope: !2842)
!2846 = !DILocation(line: 678, column: 12, scope: !2830)
!2847 = !DILocation(line: 679, column: 14, scope: !2842)
!2848 = !DILocation(line: 679, column: 4, scope: !2842)
!2849 = !DILocation(line: 680, column: 15, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2842, file: !1, line: 680, column: 12)
!2851 = !DILocation(line: 680, column: 22, scope: !2850)
!2852 = !DILocation(line: 680, column: 27, scope: !2850)
!2853 = !DILocation(line: 680, column: 45, scope: !2850)
!2854 = !DILocation(line: 680, column: 48, scope: !2850)
!2855 = !DILocation(line: 680, column: 12, scope: !2842)
!2856 = !DILocation(line: 681, column: 22, scope: !2850)
!2857 = !DILocation(line: 681, column: 4, scope: !2850)
!2858 = !DILocation(line: 683, column: 32, scope: !2831)
!2859 = !DILocation(line: 683, column: 35, scope: !2831)
!2860 = !DILocation(line: 683, column: 45, scope: !2831)
!2861 = !DILocation(line: 683, column: 54, scope: !2831)
!2862 = !DILocation(line: 683, column: 69, scope: !2831)
!2863 = !DILocation(line: 683, column: 74, scope: !2831)
!2864 = !DILocation(line: 684, column: 32, scope: !2831)
!2865 = !DILocation(line: 684, column: 39, scope: !2831)
!2866 = !DILocation(line: 684, column: 44, scope: !2831)
!2867 = !DILocation(line: 684, column: 61, scope: !2831)
!2868 = !DILocation(line: 684, column: 70, scope: !2831)
!2869 = !DILocation(line: 683, column: 3, scope: !2831)
!2870 = !DILocation(line: 685, column: 2, scope: !2831)
!2871 = !DILocation(line: 687, column: 6, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2745, file: !1, line: 687, column: 6)
!2873 = !DILocation(line: 687, column: 15, scope: !2872)
!2874 = !DILocation(line: 687, column: 21, scope: !2872)
!2875 = !DILocation(line: 687, column: 6, scope: !2745)
!2876 = !DILocalVariable(name: "renew_maxmask", scope: !2877, file: !1, line: 688, type: !107)
!2877 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 687, column: 35)
!2878 = !DILocation(line: 688, column: 8, scope: !2877)
!2879 = !DILocalVariable(name: "do_partial_update_mask", scope: !2877, file: !1, line: 689, type: !107)
!2880 = !DILocation(line: 689, column: 8, scope: !2877)
!2881 = !DILocation(line: 691, column: 7, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 691, column: 7)
!2883 = !DILocation(line: 691, column: 14, scope: !2882)
!2884 = !DILocation(line: 691, column: 24, scope: !2882)
!2885 = !DILocation(line: 691, column: 39, scope: !2882)
!2886 = !DILocation(line: 691, column: 7, scope: !2877)
!2887 = !DILocation(line: 692, column: 21, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2882, file: !1, line: 691, column: 62)
!2889 = !DILocation(line: 692, column: 26, scope: !2888)
!2890 = !DILocation(line: 692, column: 18, scope: !2888)
!2891 = !DILocation(line: 693, column: 3, scope: !2888)
!2892 = !DILocation(line: 694, column: 12, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2882, file: !1, line: 694, column: 12)
!2894 = !DILocation(line: 694, column: 19, scope: !2893)
!2895 = !DILocation(line: 694, column: 29, scope: !2893)
!2896 = !DILocation(line: 694, column: 44, scope: !2893)
!2897 = !DILocation(line: 694, column: 12, scope: !2882)
!2898 = !DILocation(line: 695, column: 18, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2893, file: !1, line: 694, column: 69)
!2900 = !DILocation(line: 696, column: 3, scope: !2899)
!2901 = !DILocation(line: 697, column: 14, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2893, file: !1, line: 697, column: 12)
!2903 = !DILocation(line: 697, column: 21, scope: !2902)
!2904 = !DILocation(line: 697, column: 26, scope: !2902)
!2905 = !DILocation(line: 697, column: 12, scope: !2893)
!2906 = !DILocation(line: 698, column: 27, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2902, file: !1, line: 697, column: 45)
!2908 = !DILocation(line: 699, column: 18, scope: !2907)
!2909 = !DILocation(line: 700, column: 3, scope: !2907)
!2910 = !DILocation(line: 702, column: 7, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 702, column: 7)
!2912 = !DILocation(line: 702, column: 14, scope: !2911)
!2913 = !DILocation(line: 702, column: 7, scope: !2877)
!2914 = !DILocation(line: 703, column: 27, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2911, file: !1, line: 702, column: 29)
!2916 = !DILocation(line: 704, column: 18, scope: !2915)
!2917 = !DILocation(line: 705, column: 3, scope: !2915)
!2918 = !DILocation(line: 707, column: 8, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2877, file: !1, line: 707, column: 7)
!2920 = !DILocation(line: 707, column: 20, scope: !2919)
!2921 = !DILocation(line: 707, column: 27, scope: !2919)
!2922 = !DILocation(line: 707, column: 17, scope: !2919)
!2923 = !DILocation(line: 707, column: 41, scope: !2919)
!2924 = !DILocation(line: 708, column: 8, scope: !2919)
!2925 = !DILocation(line: 708, column: 25, scope: !2919)
!2926 = !DILocation(line: 708, column: 32, scope: !2919)
!2927 = !DILocation(line: 708, column: 22, scope: !2919)
!2928 = !DILocation(line: 708, column: 52, scope: !2919)
!2929 = !DILocation(line: 709, column: 7, scope: !2919)
!2930 = !DILocation(line: 707, column: 7, scope: !2877)
!2931 = !DILocation(line: 711, column: 8, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2933, file: !1, line: 711, column: 8)
!2933 = distinct !DILexicalBlock(scope: !2919, file: !1, line: 710, column: 3)
!2934 = !DILocation(line: 711, column: 15, scope: !2932)
!2935 = !DILocation(line: 711, column: 8, scope: !2933)
!2936 = !DILocation(line: 712, column: 5, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2932, file: !1, line: 711, column: 25)
!2938 = !DILocation(line: 712, column: 15, scope: !2937)
!2939 = !DILocation(line: 712, column: 22, scope: !2937)
!2940 = !DILocation(line: 713, column: 5, scope: !2937)
!2941 = !DILocation(line: 713, column: 12, scope: !2937)
!2942 = !DILocation(line: 713, column: 21, scope: !2937)
!2943 = !DILocation(line: 714, column: 4, scope: !2937)
!2944 = !DILocation(line: 716, column: 33, scope: !2933)
!2945 = !DILocation(line: 716, column: 36, scope: !2933)
!2946 = !DILocation(line: 716, column: 46, scope: !2933)
!2947 = !DILocation(line: 716, column: 55, scope: !2933)
!2948 = !DILocation(line: 716, column: 70, scope: !2933)
!2949 = !DILocation(line: 716, column: 75, scope: !2933)
!2950 = !DILocation(line: 717, column: 33, scope: !2933)
!2951 = !DILocation(line: 717, column: 40, scope: !2933)
!2952 = !DILocation(line: 717, column: 50, scope: !2933)
!2953 = !DILocation(line: 717, column: 67, scope: !2933)
!2954 = !DILocation(line: 717, column: 76, scope: !2933)
!2955 = !DILocation(line: 716, column: 4, scope: !2933)
!2956 = !DILocation(line: 719, column: 8, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2933, file: !1, line: 719, column: 8)
!2958 = !DILocation(line: 719, column: 8, scope: !2933)
!2959 = !DILocation(line: 720, column: 45, scope: !2957)
!2960 = !DILocation(line: 720, column: 54, scope: !2957)
!2961 = !DILocation(line: 720, column: 59, scope: !2957)
!2962 = !DILocation(line: 720, column: 5, scope: !2957)
!2963 = !DILocation(line: 722, column: 51, scope: !2957)
!2964 = !DILocation(line: 722, column: 60, scope: !2957)
!2965 = !DILocation(line: 722, column: 23, scope: !2957)
!2966 = !DILocation(line: 722, column: 5, scope: !2957)
!2967 = !DILocation(line: 722, column: 12, scope: !2957)
!2968 = !DILocation(line: 722, column: 21, scope: !2957)
!2969 = !DILocation(line: 723, column: 32, scope: !2933)
!2970 = !DILocation(line: 723, column: 4, scope: !2933)
!2971 = !DILocation(line: 723, column: 11, scope: !2933)
!2972 = !DILocation(line: 723, column: 30, scope: !2933)
!2973 = !DILocation(line: 724, column: 3, scope: !2933)
!2974 = !DILocation(line: 725, column: 2, scope: !2877)
!2975 = !DILocation(line: 728, column: 6, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2745, file: !1, line: 728, column: 6)
!2977 = !DILocation(line: 728, column: 18, scope: !2976)
!2978 = !DILocation(line: 728, column: 25, scope: !2976)
!2979 = !DILocation(line: 728, column: 15, scope: !2976)
!2980 = !DILocation(line: 728, column: 6, scope: !2745)
!2981 = !DILocation(line: 729, column: 7, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2983, file: !1, line: 729, column: 7)
!2983 = distinct !DILexicalBlock(scope: !2976, file: !1, line: 728, column: 39)
!2984 = !DILocation(line: 729, column: 14, scope: !2982)
!2985 = !DILocation(line: 729, column: 7, scope: !2983)
!2986 = !DILocation(line: 730, column: 4, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2982, file: !1, line: 729, column: 26)
!2988 = !DILocation(line: 730, column: 14, scope: !2987)
!2989 = !DILocation(line: 730, column: 21, scope: !2987)
!2990 = !DILocation(line: 731, column: 4, scope: !2987)
!2991 = !DILocation(line: 731, column: 11, scope: !2987)
!2992 = !DILocation(line: 731, column: 22, scope: !2987)
!2993 = !DILocation(line: 732, column: 3, scope: !2987)
!2994 = !DILocation(line: 734, column: 52, scope: !2983)
!2995 = !DILocation(line: 734, column: 61, scope: !2983)
!2996 = !DILocation(line: 734, column: 71, scope: !2983)
!2997 = !DILocation(line: 734, column: 23, scope: !2983)
!2998 = !DILocation(line: 734, column: 3, scope: !2983)
!2999 = !DILocation(line: 734, column: 10, scope: !2983)
!3000 = !DILocation(line: 734, column: 21, scope: !2983)
!3001 = !DILocation(line: 735, column: 2, scope: !2983)
!3002 = !DILocation(line: 738, column: 7, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2745, file: !1, line: 738, column: 6)
!3004 = !DILocation(line: 738, column: 19, scope: !3003)
!3005 = !DILocation(line: 738, column: 26, scope: !3003)
!3006 = !DILocation(line: 738, column: 16, scope: !3003)
!3007 = !DILocation(line: 738, column: 40, scope: !3003)
!3008 = !DILocation(line: 739, column: 7, scope: !3003)
!3009 = !DILocation(line: 739, column: 23, scope: !3003)
!3010 = !DILocation(line: 739, column: 30, scope: !3003)
!3011 = !DILocation(line: 739, column: 20, scope: !3003)
!3012 = !DILocation(line: 739, column: 49, scope: !3003)
!3013 = !DILocation(line: 740, column: 6, scope: !3003)
!3014 = !DILocation(line: 740, column: 16, scope: !3003)
!3015 = !DILocation(line: 741, column: 6, scope: !3003)
!3016 = !DILocation(line: 738, column: 6, scope: !2745)
!3017 = !DILocation(line: 743, column: 7, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !1, line: 743, column: 7)
!3019 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 742, column: 2)
!3020 = !DILocation(line: 743, column: 14, scope: !3018)
!3021 = !DILocation(line: 743, column: 7, scope: !3019)
!3022 = !DILocation(line: 744, column: 18, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3018, file: !1, line: 743, column: 20)
!3024 = !DILocation(line: 744, column: 25, scope: !3023)
!3025 = !DILocation(line: 744, column: 4, scope: !3023)
!3026 = !DILocation(line: 745, column: 4, scope: !3023)
!3027 = !DILocation(line: 745, column: 11, scope: !3023)
!3028 = !DILocation(line: 745, column: 16, scope: !3023)
!3029 = !DILocation(line: 746, column: 3, scope: !3023)
!3030 = !DILocation(line: 748, column: 7, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3019, file: !1, line: 748, column: 7)
!3032 = !DILocation(line: 748, column: 7, scope: !3019)
!3033 = !DILocation(line: 750, column: 39, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3031, file: !1, line: 748, column: 26)
!3035 = !DILocation(line: 750, column: 48, scope: !3034)
!3036 = !DILocation(line: 750, column: 53, scope: !3034)
!3037 = !DILocation(line: 750, column: 4, scope: !3034)
!3038 = !DILocation(line: 751, column: 3, scope: !3034)
!3039 = !DILocation(line: 754, column: 42, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3031, file: !1, line: 752, column: 8)
!3041 = !DILocation(line: 754, column: 51, scope: !3040)
!3042 = !DILocation(line: 754, column: 61, scope: !3040)
!3043 = !DILocation(line: 754, column: 71, scope: !3040)
!3044 = !DILocation(line: 754, column: 18, scope: !3040)
!3045 = !DILocation(line: 754, column: 4, scope: !3040)
!3046 = !DILocation(line: 754, column: 11, scope: !3040)
!3047 = !DILocation(line: 754, column: 16, scope: !3040)
!3048 = !DILocation(line: 757, column: 25, scope: !3019)
!3049 = !DILocation(line: 757, column: 3, scope: !3019)
!3050 = !DILocation(line: 757, column: 10, scope: !3019)
!3051 = !DILocation(line: 757, column: 23, scope: !3019)
!3052 = !DILocation(line: 758, column: 30, scope: !3019)
!3053 = !DILocation(line: 758, column: 3, scope: !3019)
!3054 = !DILocation(line: 758, column: 10, scope: !3019)
!3055 = !DILocation(line: 758, column: 28, scope: !3019)
!3056 = !DILocation(line: 759, column: 26, scope: !3019)
!3057 = !DILocation(line: 759, column: 3, scope: !3019)
!3058 = !DILocation(line: 759, column: 10, scope: !3019)
!3059 = !DILocation(line: 759, column: 24, scope: !3019)
!3060 = !DILocation(line: 760, column: 2, scope: !3019)
!3061 = !DILocation(line: 761, column: 11, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 761, column: 11)
!3063 = !DILocation(line: 761, column: 11, scope: !3003)
!3064 = !DILocalVariable(name: "dx", scope: !3065, file: !1, line: 763, type: !66)
!3065 = distinct !DILexicalBlock(scope: !3062, file: !1, line: 761, column: 30)
!3066 = !DILocation(line: 763, column: 7, scope: !3065)
!3067 = !DILocation(line: 763, column: 17, scope: !3065)
!3068 = !DILocation(line: 763, column: 26, scope: !3065)
!3069 = !DILocation(line: 763, column: 12, scope: !3065)
!3070 = !DILocation(line: 763, column: 49, scope: !3065)
!3071 = !DILocation(line: 763, column: 44, scope: !3065)
!3072 = !DILocation(line: 763, column: 42, scope: !3065)
!3073 = !DILocalVariable(name: "dy", scope: !3065, file: !1, line: 764, type: !66)
!3074 = !DILocation(line: 764, column: 7, scope: !3065)
!3075 = !DILocation(line: 764, column: 17, scope: !3065)
!3076 = !DILocation(line: 764, column: 26, scope: !3065)
!3077 = !DILocation(line: 764, column: 12, scope: !3065)
!3078 = !DILocation(line: 764, column: 49, scope: !3065)
!3079 = !DILocation(line: 764, column: 44, scope: !3065)
!3080 = !DILocation(line: 764, column: 42, scope: !3065)
!3081 = !DILocation(line: 766, column: 8, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3065, file: !1, line: 766, column: 7)
!3083 = !DILocation(line: 766, column: 11, scope: !3082)
!3084 = !DILocation(line: 766, column: 17, scope: !3082)
!3085 = !DILocation(line: 766, column: 21, scope: !3082)
!3086 = !DILocation(line: 766, column: 24, scope: !3082)
!3087 = !DILocation(line: 766, column: 7, scope: !3065)
!3088 = !DILocation(line: 767, column: 39, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3082, file: !1, line: 766, column: 31)
!3090 = !DILocation(line: 767, column: 48, scope: !3089)
!3091 = !DILocation(line: 767, column: 53, scope: !3089)
!3092 = !DILocation(line: 767, column: 4, scope: !3089)
!3093 = !DILocation(line: 768, column: 3, scope: !3089)
!3094 = !DILocation(line: 769, column: 2, scope: !3065)
!3095 = !DILocation(line: 771, column: 22, scope: !2745)
!3096 = !DILocation(line: 771, column: 31, scope: !2745)
!3097 = !DILocation(line: 771, column: 2, scope: !2745)
!3098 = !DILocation(line: 772, column: 2, scope: !2745)
!3099 = !DILocation(line: 772, column: 11, scope: !2745)
!3100 = !DILocation(line: 772, column: 16, scope: !2745)
!3101 = !DILocation(line: 773, column: 1, scope: !2745)
!3102 = distinct !DISubprogram(name: "paint_2d_op", scope: !1, file: !1, line: 1006, type: !3103, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!66, !105, !2141, !2145, !2145, !2450, !2450}
!3105 = !DILocalVariable(name: "state", arg: 1, scope: !3102, file: !1, line: 1006, type: !105)
!3106 = !DILocation(line: 1006, column: 30, scope: !3102)
!3107 = !DILocalVariable(name: "ibufb", arg: 2, scope: !3102, file: !1, line: 1006, type: !2141)
!3108 = !DILocation(line: 1006, column: 44, scope: !3102)
!3109 = !DILocalVariable(name: "curveb", arg: 3, scope: !3102, file: !1, line: 1006, type: !2145)
!3110 = !DILocation(line: 1006, column: 67, scope: !3102)
!3111 = !DILocalVariable(name: "texmaskb", arg: 4, scope: !3102, file: !1, line: 1006, type: !2145)
!3112 = !DILocation(line: 1006, column: 91, scope: !3102)
!3113 = !DILocalVariable(name: "lastpos", arg: 5, scope: !3102, file: !1, line: 1006, type: !2450)
!3114 = !DILocation(line: 1006, column: 113, scope: !3102)
!3115 = !DILocalVariable(name: "pos", arg: 6, scope: !3102, file: !1, line: 1006, type: !2450)
!3116 = !DILocation(line: 1006, column: 137, scope: !3102)
!3117 = !DILocalVariable(name: "s", scope: !3102, file: !1, line: 1008, type: !115)
!3118 = !DILocation(line: 1008, column: 19, scope: !3102)
!3119 = !DILocation(line: 1008, column: 43, scope: !3102)
!3120 = !DILocation(line: 1008, column: 24, scope: !3102)
!3121 = !DILocalVariable(name: "clonebuf", scope: !3102, file: !1, line: 1009, type: !2141)
!3122 = !DILocation(line: 1009, column: 9, scope: !3102)
!3123 = !DILocalVariable(name: "frombuf", scope: !3102, file: !1, line: 1009, type: !2141)
!3124 = !DILocation(line: 1009, column: 27, scope: !3102)
!3125 = !DILocalVariable(name: "region", scope: !3102, file: !1, line: 1010, type: !3126)
!3126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3127, size: 768, elements: !408)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImagePaintRegion", file: !1, line: 120, baseType: !3128)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintRegion", file: !1, line: 116, size: 192, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3133, !3134, !3135}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "destx", scope: !3128, file: !1, line: 117, baseType: !66, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "desty", scope: !3128, file: !1, line: 117, baseType: !66, size: 32, offset: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "srcx", scope: !3128, file: !1, line: 118, baseType: !66, size: 32, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "srcy", scope: !3128, file: !1, line: 118, baseType: !66, size: 32, offset: 96)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3128, file: !1, line: 119, baseType: !66, size: 32, offset: 128)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3128, file: !1, line: 119, baseType: !66, size: 32, offset: 160)
!3136 = !DILocation(line: 1010, column: 19, scope: !3102)
!3137 = !DILocalVariable(name: "torus", scope: !3102, file: !1, line: 1011, type: !163)
!3138 = !DILocation(line: 1011, column: 8, scope: !3102)
!3139 = !DILocation(line: 1011, column: 16, scope: !3102)
!3140 = !DILocation(line: 1011, column: 19, scope: !3102)
!3141 = !DILocation(line: 1011, column: 26, scope: !3102)
!3142 = !DILocation(line: 1011, column: 31, scope: !3102)
!3143 = !DILocalVariable(name: "blend", scope: !3102, file: !1, line: 1012, type: !163)
!3144 = !DILocation(line: 1012, column: 8, scope: !3102)
!3145 = !DILocation(line: 1012, column: 16, scope: !3102)
!3146 = !DILocation(line: 1012, column: 19, scope: !3102)
!3147 = !DILocalVariable(name: "offset", scope: !3102, file: !1, line: 1013, type: !2450)
!3148 = !DILocation(line: 1013, column: 15, scope: !3102)
!3149 = !DILocation(line: 1013, column: 24, scope: !3102)
!3150 = !DILocation(line: 1013, column: 27, scope: !3102)
!3151 = !DILocation(line: 1013, column: 34, scope: !3102)
!3152 = !DILocation(line: 1013, column: 40, scope: !3102)
!3153 = !DILocalVariable(name: "liftpos", scope: !3102, file: !1, line: 1014, type: !526)
!3154 = !DILocation(line: 1014, column: 8, scope: !3102)
!3155 = !DILocalVariable(name: "mask_max", scope: !3102, file: !1, line: 1015, type: !113)
!3156 = !DILocation(line: 1015, column: 8, scope: !3102)
!3157 = !DILocation(line: 1015, column: 39, scope: !3102)
!3158 = !DILocation(line: 1015, column: 42, scope: !3102)
!3159 = !DILocation(line: 1015, column: 49, scope: !3102)
!3160 = !DILocation(line: 1015, column: 52, scope: !3102)
!3161 = !DILocation(line: 1015, column: 19, scope: !3102)
!3162 = !DILocalVariable(name: "bpos", scope: !3102, file: !1, line: 1016, type: !791)
!3163 = !DILocation(line: 1016, column: 6, scope: !3102)
!3164 = !DILocalVariable(name: "blastpos", scope: !3102, file: !1, line: 1016, type: !791)
!3165 = !DILocation(line: 1016, column: 15, scope: !3102)
!3166 = !DILocalVariable(name: "bliftpos", scope: !3102, file: !1, line: 1016, type: !791)
!3167 = !DILocation(line: 1016, column: 28, scope: !3102)
!3168 = !DILocalVariable(name: "a", scope: !3102, file: !1, line: 1017, type: !66)
!3169 = !DILocation(line: 1017, column: 6, scope: !3102)
!3170 = !DILocalVariable(name: "tot", scope: !3102, file: !1, line: 1017, type: !66)
!3171 = !DILocation(line: 1017, column: 9, scope: !3102)
!3172 = !DILocation(line: 1019, column: 27, scope: !3102)
!3173 = !DILocation(line: 1019, column: 34, scope: !3102)
!3174 = !DILocation(line: 1019, column: 39, scope: !3102)
!3175 = !DILocation(line: 1019, column: 2, scope: !3102)
!3176 = !DILocation(line: 1022, column: 6, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3102, file: !1, line: 1022, column: 6)
!3178 = !DILocation(line: 1022, column: 9, scope: !3177)
!3179 = !DILocation(line: 1022, column: 14, scope: !3177)
!3180 = !DILocation(line: 1022, column: 6, scope: !3102)
!3181 = !DILocation(line: 1023, column: 24, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3177, file: !1, line: 1022, column: 36)
!3183 = !DILocation(line: 1023, column: 27, scope: !3182)
!3184 = !DILocation(line: 1023, column: 30, scope: !3182)
!3185 = !DILocation(line: 1023, column: 38, scope: !3182)
!3186 = !DILocation(line: 1023, column: 45, scope: !3182)
!3187 = !DILocation(line: 1023, column: 51, scope: !3182)
!3188 = !DILocation(line: 1023, column: 3, scope: !3182)
!3189 = !DILocation(line: 1024, column: 2, scope: !3182)
!3190 = !DILocation(line: 1025, column: 11, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3177, file: !1, line: 1025, column: 11)
!3192 = !DILocation(line: 1025, column: 14, scope: !3191)
!3193 = !DILocation(line: 1025, column: 19, scope: !3191)
!3194 = !DILocation(line: 1025, column: 11, scope: !3177)
!3195 = !DILocation(line: 1026, column: 7, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 1026, column: 7)
!3197 = distinct !DILexicalBlock(scope: !3191, file: !1, line: 1025, column: 40)
!3198 = !DILocation(line: 1026, column: 21, scope: !3196)
!3199 = !DILocation(line: 1026, column: 18, scope: !3196)
!3200 = !DILocation(line: 1026, column: 28, scope: !3196)
!3201 = !DILocation(line: 1026, column: 31, scope: !3196)
!3202 = !DILocation(line: 1026, column: 45, scope: !3196)
!3203 = !DILocation(line: 1026, column: 42, scope: !3196)
!3204 = !DILocation(line: 1026, column: 7, scope: !3197)
!3205 = !DILocation(line: 1027, column: 4, scope: !3196)
!3206 = !DILocation(line: 1029, column: 28, scope: !3197)
!3207 = !DILocation(line: 1029, column: 35, scope: !3197)
!3208 = !DILocation(line: 1029, column: 44, scope: !3197)
!3209 = !DILocation(line: 1029, column: 3, scope: !3197)
!3210 = !DILocation(line: 1030, column: 23, scope: !3197)
!3211 = !DILocation(line: 1030, column: 26, scope: !3197)
!3212 = !DILocation(line: 1030, column: 34, scope: !3197)
!3213 = !DILocation(line: 1030, column: 41, scope: !3197)
!3214 = !DILocation(line: 1030, column: 3, scope: !3197)
!3215 = !DILocation(line: 1031, column: 2, scope: !3197)
!3216 = !DILocation(line: 1032, column: 11, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3191, file: !1, line: 1032, column: 11)
!3218 = !DILocation(line: 1032, column: 14, scope: !3217)
!3219 = !DILocation(line: 1032, column: 19, scope: !3217)
!3220 = !DILocation(line: 1032, column: 39, scope: !3217)
!3221 = !DILocation(line: 1032, column: 42, scope: !3217)
!3222 = !DILocation(line: 1032, column: 45, scope: !3217)
!3223 = !DILocation(line: 1032, column: 11, scope: !3191)
!3224 = !DILocation(line: 1033, column: 16, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3217, file: !1, line: 1032, column: 58)
!3226 = !DILocation(line: 1033, column: 25, scope: !3225)
!3227 = !DILocation(line: 1033, column: 37, scope: !3225)
!3228 = !DILocation(line: 1033, column: 40, scope: !3225)
!3229 = !DILocation(line: 1033, column: 48, scope: !3225)
!3230 = !DILocation(line: 1033, column: 35, scope: !3225)
!3231 = !DILocation(line: 1033, column: 23, scope: !3225)
!3232 = !DILocation(line: 1033, column: 3, scope: !3225)
!3233 = !DILocation(line: 1033, column: 14, scope: !3225)
!3234 = !DILocation(line: 1034, column: 16, scope: !3225)
!3235 = !DILocation(line: 1034, column: 25, scope: !3225)
!3236 = !DILocation(line: 1034, column: 37, scope: !3225)
!3237 = !DILocation(line: 1034, column: 40, scope: !3225)
!3238 = !DILocation(line: 1034, column: 48, scope: !3225)
!3239 = !DILocation(line: 1034, column: 35, scope: !3225)
!3240 = !DILocation(line: 1034, column: 23, scope: !3225)
!3241 = !DILocation(line: 1034, column: 3, scope: !3225)
!3242 = !DILocation(line: 1034, column: 14, scope: !3225)
!3243 = !DILocation(line: 1036, column: 28, scope: !3225)
!3244 = !DILocation(line: 1036, column: 35, scope: !3225)
!3245 = !DILocation(line: 1036, column: 44, scope: !3225)
!3246 = !DILocation(line: 1036, column: 3, scope: !3225)
!3247 = !DILocation(line: 1037, column: 34, scope: !3225)
!3248 = !DILocation(line: 1037, column: 37, scope: !3225)
!3249 = !DILocation(line: 1037, column: 50, scope: !3225)
!3250 = !DILocation(line: 1037, column: 57, scope: !3225)
!3251 = !DILocation(line: 1037, column: 14, scope: !3225)
!3252 = !DILocation(line: 1037, column: 12, scope: !3225)
!3253 = !DILocation(line: 1038, column: 2, scope: !3225)
!3254 = !DILocation(line: 1040, column: 13, scope: !3102)
!3255 = !DILocation(line: 1040, column: 12, scope: !3102)
!3256 = !DILocation(line: 1040, column: 25, scope: !3102)
!3257 = !DILocation(line: 1040, column: 36, scope: !3102)
!3258 = !DILocation(line: 1040, column: 10, scope: !3102)
!3259 = !DILocation(line: 1042, column: 6, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3102, file: !1, line: 1042, column: 6)
!3261 = !DILocation(line: 1042, column: 6, scope: !3102)
!3262 = !DILocation(line: 1043, column: 23, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3260, file: !1, line: 1042, column: 13)
!3264 = !DILocation(line: 1043, column: 31, scope: !3263)
!3265 = !DILocation(line: 1043, column: 40, scope: !3263)
!3266 = !DILocation(line: 1043, column: 55, scope: !3263)
!3267 = !DILocation(line: 1043, column: 64, scope: !3263)
!3268 = !DILocation(line: 1043, column: 67, scope: !3263)
!3269 = !DILocation(line: 1043, column: 76, scope: !3263)
!3270 = !DILocation(line: 1043, column: 3, scope: !3263)
!3271 = !DILocation(line: 1044, column: 37, scope: !3263)
!3272 = !DILocation(line: 1044, column: 45, scope: !3263)
!3273 = !DILocation(line: 1044, column: 48, scope: !3263)
!3274 = !DILocation(line: 1044, column: 56, scope: !3263)
!3275 = !DILocation(line: 1044, column: 9, scope: !3263)
!3276 = !DILocation(line: 1044, column: 7, scope: !3263)
!3277 = !DILocation(line: 1045, column: 2, scope: !3263)
!3278 = !DILocation(line: 1047, column: 23, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3260, file: !1, line: 1046, column: 7)
!3280 = !DILocation(line: 1047, column: 31, scope: !3279)
!3281 = !DILocation(line: 1047, column: 40, scope: !3279)
!3282 = !DILocation(line: 1047, column: 55, scope: !3279)
!3283 = !DILocation(line: 1047, column: 64, scope: !3279)
!3284 = !DILocation(line: 1047, column: 67, scope: !3279)
!3285 = !DILocation(line: 1047, column: 76, scope: !3279)
!3286 = !DILocation(line: 1047, column: 3, scope: !3279)
!3287 = !DILocation(line: 1048, column: 7, scope: !3279)
!3288 = !DILocation(line: 1052, column: 9, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3102, file: !1, line: 1052, column: 2)
!3290 = !DILocation(line: 1052, column: 7, scope: !3289)
!3291 = !DILocation(line: 1052, column: 14, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3289, file: !1, line: 1052, column: 2)
!3293 = !DILocation(line: 1052, column: 18, scope: !3292)
!3294 = !DILocation(line: 1052, column: 16, scope: !3292)
!3295 = !DILocation(line: 1052, column: 2, scope: !3289)
!3296 = !DILocation(line: 1053, column: 28, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 1052, column: 28)
!3298 = !DILocation(line: 1053, column: 31, scope: !3297)
!3299 = !DILocation(line: 1053, column: 38, scope: !3297)
!3300 = !DILocation(line: 1053, column: 41, scope: !3297)
!3301 = !DILocation(line: 1054, column: 32, scope: !3297)
!3302 = !DILocation(line: 1054, column: 25, scope: !3297)
!3303 = !DILocation(line: 1054, column: 35, scope: !3297)
!3304 = !DILocation(line: 1054, column: 49, scope: !3297)
!3305 = !DILocation(line: 1054, column: 42, scope: !3297)
!3306 = !DILocation(line: 1054, column: 52, scope: !3297)
!3307 = !DILocation(line: 1055, column: 32, scope: !3297)
!3308 = !DILocation(line: 1055, column: 25, scope: !3297)
!3309 = !DILocation(line: 1055, column: 35, scope: !3297)
!3310 = !DILocation(line: 1055, column: 49, scope: !3297)
!3311 = !DILocation(line: 1055, column: 42, scope: !3297)
!3312 = !DILocation(line: 1055, column: 52, scope: !3297)
!3313 = !DILocation(line: 1053, column: 3, scope: !3297)
!3314 = !DILocation(line: 1057, column: 7, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 1057, column: 7)
!3316 = !DILocation(line: 1057, column: 10, scope: !3315)
!3317 = !DILocation(line: 1057, column: 7, scope: !3297)
!3318 = !DILocalVariable(name: "tilex", scope: !3319, file: !1, line: 1059, type: !66)
!3319 = distinct !DILexicalBlock(scope: !3315, file: !1, line: 1057, column: 22)
!3320 = !DILocation(line: 1059, column: 8, scope: !3319)
!3321 = !DILocalVariable(name: "tiley", scope: !3319, file: !1, line: 1059, type: !66)
!3322 = !DILocation(line: 1059, column: 15, scope: !3319)
!3323 = !DILocalVariable(name: "tilew", scope: !3319, file: !1, line: 1059, type: !66)
!3324 = !DILocation(line: 1059, column: 22, scope: !3319)
!3325 = !DILocalVariable(name: "tileh", scope: !3319, file: !1, line: 1059, type: !66)
!3326 = !DILocation(line: 1059, column: 29, scope: !3319)
!3327 = !DILocalVariable(name: "tx", scope: !3319, file: !1, line: 1059, type: !66)
!3328 = !DILocation(line: 1059, column: 36, scope: !3319)
!3329 = !DILocalVariable(name: "ty", scope: !3319, file: !1, line: 1059, type: !66)
!3330 = !DILocation(line: 1059, column: 40, scope: !3319)
!3331 = !DILocalVariable(name: "tmpbuf", scope: !3319, file: !1, line: 1060, type: !2141)
!3332 = !DILocation(line: 1060, column: 11, scope: !3319)
!3333 = !DILocation(line: 1062, column: 26, scope: !3319)
!3334 = !DILocation(line: 1062, column: 29, scope: !3319)
!3335 = !DILocation(line: 1062, column: 44, scope: !3319)
!3336 = !DILocation(line: 1062, column: 37, scope: !3319)
!3337 = !DILocation(line: 1062, column: 47, scope: !3319)
!3338 = !DILocation(line: 1062, column: 61, scope: !3319)
!3339 = !DILocation(line: 1062, column: 54, scope: !3319)
!3340 = !DILocation(line: 1062, column: 64, scope: !3319)
!3341 = !DILocation(line: 1063, column: 33, scope: !3319)
!3342 = !DILocation(line: 1063, column: 26, scope: !3319)
!3343 = !DILocation(line: 1063, column: 36, scope: !3319)
!3344 = !DILocation(line: 1063, column: 50, scope: !3319)
!3345 = !DILocation(line: 1063, column: 43, scope: !3319)
!3346 = !DILocation(line: 1063, column: 53, scope: !3319)
!3347 = !DILocation(line: 1062, column: 4, scope: !3319)
!3348 = !DILocation(line: 1066, column: 13, scope: !3319)
!3349 = !DILocation(line: 1066, column: 11, scope: !3319)
!3350 = !DILocation(line: 1068, column: 14, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3319, file: !1, line: 1068, column: 4)
!3352 = !DILocation(line: 1068, column: 12, scope: !3351)
!3353 = !DILocation(line: 1068, column: 9, scope: !3351)
!3354 = !DILocation(line: 1068, column: 21, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3351, file: !1, line: 1068, column: 4)
!3356 = !DILocation(line: 1068, column: 27, scope: !3355)
!3357 = !DILocation(line: 1068, column: 24, scope: !3355)
!3358 = !DILocation(line: 1068, column: 4, scope: !3351)
!3359 = !DILocation(line: 1069, column: 15, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3361, file: !1, line: 1069, column: 5)
!3361 = distinct !DILexicalBlock(scope: !3355, file: !1, line: 1068, column: 40)
!3362 = !DILocation(line: 1069, column: 13, scope: !3360)
!3363 = !DILocation(line: 1069, column: 10, scope: !3360)
!3364 = !DILocation(line: 1069, column: 22, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3360, file: !1, line: 1069, column: 5)
!3366 = !DILocation(line: 1069, column: 28, scope: !3365)
!3367 = !DILocation(line: 1069, column: 25, scope: !3365)
!3368 = !DILocation(line: 1069, column: 5, scope: !3360)
!3369 = !DILocalVariable(name: "mask", scope: !3370, file: !1, line: 1071, type: !2145)
!3370 = distinct !DILexicalBlock(scope: !3365, file: !1, line: 1069, column: 41)
!3371 = !DILocation(line: 1071, column: 22, scope: !3370)
!3372 = !DILocalVariable(name: "origx", scope: !3370, file: !1, line: 1072, type: !66)
!3373 = !DILocation(line: 1072, column: 10, scope: !3370)
!3374 = !DILocation(line: 1072, column: 25, scope: !3370)
!3375 = !DILocation(line: 1072, column: 18, scope: !3370)
!3376 = !DILocation(line: 1072, column: 28, scope: !3370)
!3377 = !DILocation(line: 1072, column: 36, scope: !3370)
!3378 = !DILocation(line: 1072, column: 39, scope: !3370)
!3379 = !DILocation(line: 1072, column: 34, scope: !3370)
!3380 = !DILocalVariable(name: "origy", scope: !3370, file: !1, line: 1073, type: !66)
!3381 = !DILocation(line: 1073, column: 10, scope: !3370)
!3382 = !DILocation(line: 1073, column: 25, scope: !3370)
!3383 = !DILocation(line: 1073, column: 18, scope: !3370)
!3384 = !DILocation(line: 1073, column: 28, scope: !3370)
!3385 = !DILocation(line: 1073, column: 36, scope: !3370)
!3386 = !DILocation(line: 1073, column: 39, scope: !3370)
!3387 = !DILocation(line: 1073, column: 34, scope: !3370)
!3388 = !DILocation(line: 1075, column: 10, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3370, file: !1, line: 1075, column: 10)
!3390 = !DILocation(line: 1075, column: 13, scope: !3389)
!3391 = !DILocation(line: 1075, column: 21, scope: !3389)
!3392 = !DILocation(line: 1075, column: 10, scope: !3370)
!3393 = !DILocation(line: 1076, column: 49, scope: !3389)
!3394 = !DILocation(line: 1076, column: 52, scope: !3389)
!3395 = !DILocation(line: 1076, column: 59, scope: !3389)
!3396 = !DILocation(line: 1076, column: 62, scope: !3389)
!3397 = !DILocation(line: 1076, column: 70, scope: !3389)
!3398 = !DILocation(line: 1076, column: 74, scope: !3389)
!3399 = !DILocation(line: 1076, column: 28, scope: !3389)
!3400 = !DILocation(line: 1076, column: 7, scope: !3389)
!3401 = !DILocation(line: 1076, column: 15, scope: !3389)
!3402 = !DILocation(line: 1076, column: 26, scope: !3389)
!3403 = !DILocation(line: 1078, column: 43, scope: !3389)
!3404 = !DILocation(line: 1078, column: 46, scope: !3389)
!3405 = !DILocation(line: 1078, column: 53, scope: !3389)
!3406 = !DILocation(line: 1078, column: 56, scope: !3389)
!3407 = !DILocation(line: 1078, column: 64, scope: !3389)
!3408 = !DILocation(line: 1078, column: 68, scope: !3389)
!3409 = !DILocation(line: 1078, column: 22, scope: !3389)
!3410 = !DILocation(line: 1078, column: 7, scope: !3389)
!3411 = !DILocation(line: 1078, column: 15, scope: !3389)
!3412 = !DILocation(line: 1078, column: 20, scope: !3389)
!3413 = !DILocation(line: 1080, column: 20, scope: !3370)
!3414 = !DILocation(line: 1080, column: 23, scope: !3370)
!3415 = !DILocation(line: 1080, column: 31, scope: !3370)
!3416 = !DILocation(line: 1080, column: 39, scope: !3370)
!3417 = !DILocation(line: 1080, column: 48, scope: !3370)
!3418 = !DILocation(line: 1081, column: 20, scope: !3370)
!3419 = !DILocation(line: 1081, column: 28, scope: !3370)
!3420 = !DILocation(line: 1081, column: 38, scope: !3370)
!3421 = !DILocation(line: 1082, column: 27, scope: !3370)
!3422 = !DILocation(line: 1082, column: 20, scope: !3370)
!3423 = !DILocation(line: 1082, column: 30, scope: !3370)
!3424 = !DILocation(line: 1082, column: 44, scope: !3370)
!3425 = !DILocation(line: 1082, column: 37, scope: !3370)
!3426 = !DILocation(line: 1082, column: 47, scope: !3370)
!3427 = !DILocation(line: 1083, column: 20, scope: !3370)
!3428 = !DILocation(line: 1083, column: 27, scope: !3370)
!3429 = !DILocation(line: 1084, column: 27, scope: !3370)
!3430 = !DILocation(line: 1084, column: 20, scope: !3370)
!3431 = !DILocation(line: 1084, column: 30, scope: !3370)
!3432 = !DILocation(line: 1084, column: 43, scope: !3370)
!3433 = !DILocation(line: 1084, column: 36, scope: !3370)
!3434 = !DILocation(line: 1084, column: 46, scope: !3370)
!3435 = !DILocation(line: 1085, column: 27, scope: !3370)
!3436 = !DILocation(line: 1085, column: 20, scope: !3370)
!3437 = !DILocation(line: 1085, column: 30, scope: !3370)
!3438 = !DILocation(line: 1085, column: 44, scope: !3370)
!3439 = !DILocation(line: 1085, column: 37, scope: !3370)
!3440 = !DILocation(line: 1085, column: 47, scope: !3370)
!3441 = !DILocation(line: 1085, column: 55, scope: !3370)
!3442 = !DILocation(line: 1085, column: 64, scope: !3370)
!3443 = !DILocation(line: 1085, column: 67, scope: !3370)
!3444 = !DILocation(line: 1085, column: 74, scope: !3370)
!3445 = !DILocation(line: 1085, column: 79, scope: !3370)
!3446 = !DILocation(line: 1085, column: 99, scope: !3370)
!3447 = !DILocation(line: 1085, column: 62, scope: !3370)
!3448 = !DILocation(line: 1080, column: 6, scope: !3370)
!3449 = !DILocation(line: 1086, column: 5, scope: !3370)
!3450 = !DILocation(line: 1069, column: 37, scope: !3365)
!3451 = !DILocation(line: 1069, column: 5, scope: !3365)
!3452 = distinct !{!3452, !3368, !3453}
!3453 = !DILocation(line: 1086, column: 5, scope: !3360)
!3454 = !DILocation(line: 1087, column: 4, scope: !3361)
!3455 = !DILocation(line: 1068, column: 36, scope: !3355)
!3456 = !DILocation(line: 1068, column: 4, scope: !3355)
!3457 = distinct !{!3457, !3358, !3458}
!3458 = !DILocation(line: 1087, column: 4, scope: !3351)
!3459 = !DILocation(line: 1089, column: 18, scope: !3319)
!3460 = !DILocation(line: 1089, column: 4, scope: !3319)
!3461 = !DILocation(line: 1090, column: 3, scope: !3319)
!3462 = !DILocation(line: 1093, column: 18, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3315, file: !1, line: 1091, column: 8)
!3464 = !DILocation(line: 1093, column: 21, scope: !3463)
!3465 = !DILocation(line: 1093, column: 29, scope: !3463)
!3466 = !DILocation(line: 1093, column: 32, scope: !3463)
!3467 = !DILocation(line: 1093, column: 40, scope: !3463)
!3468 = !DILocation(line: 1093, column: 55, scope: !3463)
!3469 = !DILocation(line: 1093, column: 63, scope: !3463)
!3470 = !DILocation(line: 1093, column: 73, scope: !3463)
!3471 = !DILocation(line: 1094, column: 25, scope: !3463)
!3472 = !DILocation(line: 1094, column: 18, scope: !3463)
!3473 = !DILocation(line: 1094, column: 28, scope: !3463)
!3474 = !DILocation(line: 1094, column: 42, scope: !3463)
!3475 = !DILocation(line: 1094, column: 35, scope: !3463)
!3476 = !DILocation(line: 1094, column: 45, scope: !3463)
!3477 = !DILocation(line: 1095, column: 25, scope: !3463)
!3478 = !DILocation(line: 1095, column: 18, scope: !3463)
!3479 = !DILocation(line: 1095, column: 28, scope: !3463)
!3480 = !DILocation(line: 1095, column: 42, scope: !3463)
!3481 = !DILocation(line: 1095, column: 35, scope: !3463)
!3482 = !DILocation(line: 1095, column: 45, scope: !3463)
!3483 = !DILocation(line: 1096, column: 25, scope: !3463)
!3484 = !DILocation(line: 1096, column: 18, scope: !3463)
!3485 = !DILocation(line: 1096, column: 28, scope: !3463)
!3486 = !DILocation(line: 1096, column: 41, scope: !3463)
!3487 = !DILocation(line: 1096, column: 34, scope: !3463)
!3488 = !DILocation(line: 1096, column: 44, scope: !3463)
!3489 = !DILocation(line: 1097, column: 25, scope: !3463)
!3490 = !DILocation(line: 1097, column: 18, scope: !3463)
!3491 = !DILocation(line: 1097, column: 28, scope: !3463)
!3492 = !DILocation(line: 1097, column: 42, scope: !3463)
!3493 = !DILocation(line: 1097, column: 35, scope: !3463)
!3494 = !DILocation(line: 1097, column: 45, scope: !3463)
!3495 = !DILocation(line: 1097, column: 53, scope: !3463)
!3496 = !DILocation(line: 1093, column: 4, scope: !3463)
!3497 = !DILocation(line: 1099, column: 2, scope: !3297)
!3498 = !DILocation(line: 1052, column: 24, scope: !3292)
!3499 = !DILocation(line: 1052, column: 2, scope: !3292)
!3500 = distinct !{!3500, !3295, !3501}
!3501 = !DILocation(line: 1099, column: 2, scope: !3289)
!3502 = !DILocation(line: 1101, column: 6, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3102, file: !1, line: 1101, column: 6)
!3504 = !DILocation(line: 1101, column: 6, scope: !3102)
!3505 = !DILocation(line: 1101, column: 30, scope: !3503)
!3506 = !DILocation(line: 1101, column: 16, scope: !3503)
!3507 = !DILocation(line: 1103, column: 2, scope: !3102)
!3508 = !DILocation(line: 1104, column: 1, scope: !3102)
!3509 = distinct !DISubprogram(name: "paint_2d_new_stroke", scope: !1, file: !1, line: 1222, type: !3510, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!105, !3512, !3517, !66}
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !3514, line: 69, baseType: !3515)
!3514 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3515 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !3516, line: 44, flags: DIFlagFwdDecl)
!3516 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !39, line: 348, baseType: !3519)
!3519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !39, line: 328, size: 1344, elements: !3520)
!3520 = !{!3521, !3523, !3524, !3525, !3526, !3622, !3623, !3624, !3625, !3635, !3636, !3637, !3640, !3641}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3519, file: !39, line: 329, baseType: !3522, size: 64)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3519, file: !39, line: 329, baseType: !3522, size: 64, offset: 64)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3519, file: !39, line: 332, baseType: !179, size: 512, offset: 128)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3519, file: !39, line: 333, baseType: !168, size: 64, offset: 640)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3519, file: !39, line: 336, baseType: !3527, size: 64, offset: 704)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !2279, line: 508, size: 1536, elements: !3529)
!3529 = !{!3530, !3531, !3532, !3533, !3534, !3539, !3543, !3549, !3553, !3554, !3558, !3559, !3560, !3561, !3565, !3566, !3581, !3582, !3586, !3621}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3528, file: !2279, line: 509, baseType: !2363, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3528, file: !2279, line: 510, baseType: !2363, size: 64, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3528, file: !2279, line: 511, baseType: !2363, size: 64, offset: 128)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3528, file: !2279, line: 512, baseType: !2363, size: 64, offset: 192)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3528, file: !2279, line: 518, baseType: !3535, size: 64, offset: 256)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!66, !3538, !3522}
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3528, file: !2279, line: 524, baseType: !3540, size: 64, offset: 320)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DISubroutineType(types: !3542)
!3542 = !{!107, !3538, !3522}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3528, file: !2279, line: 530, baseType: !3544, size: 64, offset: 384)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!66, !3538, !3522, !3547}
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2337)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3528, file: !2279, line: 531, baseType: !3550, size: 64, offset: 448)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !3538, !3522}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3528, file: !2279, line: 532, baseType: !3544, size: 64, offset: 512)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3528, file: !2279, line: 536, baseType: !3555, size: 64, offset: 576)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!66, !3538}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3528, file: !2279, line: 539, baseType: !3550, size: 64, offset: 640)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3528, file: !2279, line: 542, baseType: !605, size: 64, offset: 704)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3528, file: !2279, line: 545, baseType: !173, size: 64, offset: 768)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3528, file: !2279, line: 549, baseType: !3562, size: 64, offset: 832)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !3516, line: 333, baseType: !3564)
!3564 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !3516, line: 39, flags: DIFlagFwdDecl)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3528, file: !2279, line: 552, baseType: !189, size: 128, offset: 896)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3528, file: !2279, line: 555, baseType: !3567, size: 64, offset: 1024)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !39, line: 281, size: 1088, elements: !3569)
!3569 = !{!3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3568, file: !39, line: 282, baseType: !3567, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3568, file: !39, line: 282, baseType: !3567, size: 64, offset: 64)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3568, file: !39, line: 284, baseType: !189, size: 128, offset: 128)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3568, file: !39, line: 285, baseType: !189, size: 128, offset: 256)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3568, file: !39, line: 287, baseType: !179, size: 512, offset: 384)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3568, file: !39, line: 288, baseType: !163, size: 16, offset: 896)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3568, file: !39, line: 289, baseType: !163, size: 16, offset: 912)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3568, file: !39, line: 291, baseType: !163, size: 16, offset: 928)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3568, file: !39, line: 292, baseType: !163, size: 16, offset: 944)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3568, file: !39, line: 295, baseType: !3555, size: 64, offset: 960)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3568, file: !39, line: 296, baseType: !105, size: 64, offset: 1024)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3528, file: !2279, line: 559, baseType: !105, size: 64, offset: 1088)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3528, file: !2279, line: 560, baseType: !3583, size: 64, offset: 1152)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!66, !3538, !3527}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3528, file: !2279, line: 563, baseType: !3587, size: 256, offset: 1216)
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !3516, line: 436, baseType: !3588)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !3516, line: 430, size: 256, elements: !3589)
!3589 = !{!3590, !3591, !3594, !3619}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3588, file: !3516, line: 431, baseType: !105, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3588, file: !3516, line: 432, baseType: !3592, size: 64, offset: 64)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !3516, line: 417, baseType: !606)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3588, file: !3516, line: 433, baseType: !3595, size: 64, offset: 128)
!3595 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !3516, line: 408, baseType: !3596)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!66, !3538, !3599, !3608, !3610}
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !3516, line: 55, size: 192, elements: !3601)
!3601 = !{!3602, !3606, !3607}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3600, file: !3516, line: 58, baseType: !3603, size: 64)
!3603 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3600, file: !3516, line: 56, size: 64, elements: !3604)
!3604 = !{!3605}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3603, file: !3516, line: 57, baseType: !105, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3600, file: !3516, line: 60, baseType: !605, size: 64, offset: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3600, file: !3516, line: 61, baseType: !105, size: 64, offset: 128)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !3516, line: 38, flags: DIFlagFwdDecl)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !3516, line: 348, baseType: !3612)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !3516, line: 337, size: 256, elements: !3613)
!3613 = !{!3614, !3615, !3616, !3617, !3618}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3612, file: !3516, line: 339, baseType: !105, size: 64)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3612, file: !3516, line: 342, baseType: !3608, size: 64, offset: 64)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !3612, file: !3516, line: 345, baseType: !66, size: 32, offset: 128)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !3612, file: !3516, line: 347, baseType: !66, size: 32, offset: 160)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !3612, file: !3516, line: 347, baseType: !66, size: 32, offset: 192)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3588, file: !3516, line: 434, baseType: !3620, size: 64, offset: 192)
!3620 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !3516, line: 409, baseType: !659)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3528, file: !2279, line: 566, baseType: !163, size: 16, offset: 1472)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3519, file: !39, line: 337, baseType: !105, size: 64, offset: 768)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3519, file: !39, line: 338, baseType: !105, size: 64, offset: 832)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3519, file: !39, line: 340, baseType: !3599, size: 64, offset: 896)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3519, file: !39, line: 341, baseType: !3626, size: 64, offset: 960)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !39, line: 106, size: 320, elements: !3628)
!3628 = !{!3629, !3630, !3631, !3632, !3633, !3634}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3627, file: !39, line: 107, baseType: !189, size: 128)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3627, file: !39, line: 108, baseType: !66, size: 32, offset: 128)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3627, file: !39, line: 109, baseType: !66, size: 32, offset: 160)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3627, file: !39, line: 110, baseType: !66, size: 32, offset: 192)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3627, file: !39, line: 110, baseType: !66, size: 32, offset: 224)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3627, file: !39, line: 111, baseType: !2277, size: 64, offset: 256)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3519, file: !39, line: 343, baseType: !189, size: 128, offset: 1024)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3519, file: !39, line: 344, baseType: !3522, size: 64, offset: 1152)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3519, file: !39, line: 345, baseType: !3638, size: 64, offset: 1216)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !39, line: 61, flags: DIFlagFwdDecl)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3519, file: !39, line: 346, baseType: !163, size: 16, offset: 1280)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3519, file: !39, line: 346, baseType: !1366, size: 48, offset: 1296)
!3642 = !DILocalVariable(name: "C", arg: 1, scope: !3509, file: !1, line: 1222, type: !3512)
!3643 = !DILocation(line: 1222, column: 37, scope: !3509)
!3644 = !DILocalVariable(name: "op", arg: 2, scope: !3509, file: !1, line: 1222, type: !3517)
!3645 = !DILocation(line: 1222, column: 52, scope: !3509)
!3646 = !DILocalVariable(name: "mode", arg: 3, scope: !3509, file: !1, line: 1222, type: !66)
!3647 = !DILocation(line: 1222, column: 60, scope: !3509)
!3648 = !DILocalVariable(name: "scene", scope: !3509, file: !1, line: 1224, type: !125)
!3649 = !DILocation(line: 1224, column: 9, scope: !3509)
!3650 = !DILocation(line: 1224, column: 32, scope: !3509)
!3651 = !DILocation(line: 1224, column: 17, scope: !3509)
!3652 = !DILocalVariable(name: "settings", scope: !3509, file: !1, line: 1225, type: !3653)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !127, line: 1180, baseType: !1094)
!3655 = !DILocation(line: 1225, column: 16, scope: !3509)
!3656 = !DILocation(line: 1225, column: 27, scope: !3509)
!3657 = !DILocation(line: 1225, column: 34, scope: !3509)
!3658 = !DILocalVariable(name: "brush", scope: !3509, file: !1, line: 1226, type: !2119)
!3659 = !DILocation(line: 1226, column: 9, scope: !3509)
!3660 = !DILocation(line: 1226, column: 34, scope: !3509)
!3661 = !DILocation(line: 1226, column: 44, scope: !3509)
!3662 = !DILocation(line: 1226, column: 53, scope: !3509)
!3663 = !DILocation(line: 1226, column: 17, scope: !3509)
!3664 = !DILocalVariable(name: "s", scope: !3509, file: !1, line: 1228, type: !115)
!3665 = !DILocation(line: 1228, column: 19, scope: !3509)
!3666 = !DILocation(line: 1228, column: 23, scope: !3509)
!3667 = !DILocation(line: 1230, column: 31, scope: !3509)
!3668 = !DILocation(line: 1230, column: 12, scope: !3509)
!3669 = !DILocation(line: 1230, column: 2, scope: !3509)
!3670 = !DILocation(line: 1230, column: 5, scope: !3509)
!3671 = !DILocation(line: 1230, column: 10, scope: !3509)
!3672 = !DILocation(line: 1231, column: 26, scope: !3509)
!3673 = !DILocation(line: 1231, column: 12, scope: !3509)
!3674 = !DILocation(line: 1231, column: 30, scope: !3509)
!3675 = !DILocation(line: 1231, column: 2, scope: !3509)
!3676 = !DILocation(line: 1231, column: 5, scope: !3509)
!3677 = !DILocation(line: 1231, column: 9, scope: !3509)
!3678 = !DILocation(line: 1232, column: 13, scope: !3509)
!3679 = !DILocation(line: 1232, column: 2, scope: !3509)
!3680 = !DILocation(line: 1232, column: 5, scope: !3509)
!3681 = !DILocation(line: 1232, column: 11, scope: !3509)
!3682 = !DILocation(line: 1233, column: 28, scope: !3509)
!3683 = !DILocation(line: 1233, column: 14, scope: !3509)
!3684 = !DILocation(line: 1233, column: 2, scope: !3509)
!3685 = !DILocation(line: 1233, column: 5, scope: !3509)
!3686 = !DILocation(line: 1233, column: 12, scope: !3509)
!3687 = !DILocation(line: 1235, column: 13, scope: !3509)
!3688 = !DILocation(line: 1235, column: 2, scope: !3509)
!3689 = !DILocation(line: 1235, column: 5, scope: !3509)
!3690 = !DILocation(line: 1235, column: 11, scope: !3509)
!3691 = !DILocation(line: 1236, column: 12, scope: !3509)
!3692 = !DILocation(line: 1236, column: 19, scope: !3509)
!3693 = !DILocation(line: 1236, column: 2, scope: !3509)
!3694 = !DILocation(line: 1236, column: 5, scope: !3509)
!3695 = !DILocation(line: 1236, column: 10, scope: !3509)
!3696 = !DILocation(line: 1237, column: 13, scope: !3509)
!3697 = !DILocation(line: 1237, column: 20, scope: !3509)
!3698 = !DILocation(line: 1237, column: 2, scope: !3509)
!3699 = !DILocation(line: 1237, column: 5, scope: !3509)
!3700 = !DILocation(line: 1237, column: 11, scope: !3509)
!3701 = !DILocation(line: 1239, column: 13, scope: !3509)
!3702 = !DILocation(line: 1239, column: 16, scope: !3509)
!3703 = !DILocation(line: 1239, column: 22, scope: !3509)
!3704 = !DILocation(line: 1239, column: 2, scope: !3509)
!3705 = !DILocation(line: 1239, column: 5, scope: !3509)
!3706 = !DILocation(line: 1239, column: 11, scope: !3509)
!3707 = !DILocation(line: 1241, column: 27, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3509, file: !1, line: 1241, column: 6)
!3709 = !DILocation(line: 1241, column: 30, scope: !3708)
!3710 = !DILocation(line: 1241, column: 33, scope: !3708)
!3711 = !DILocation(line: 1241, column: 7, scope: !3708)
!3712 = !DILocation(line: 1241, column: 6, scope: !3509)
!3713 = !DILocation(line: 1242, column: 7, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 1242, column: 7)
!3715 = distinct !DILexicalBlock(scope: !3708, file: !1, line: 1241, column: 41)
!3716 = !DILocation(line: 1242, column: 10, scope: !3714)
!3717 = !DILocation(line: 1242, column: 7, scope: !3715)
!3718 = !DILocation(line: 1243, column: 15, scope: !3714)
!3719 = !DILocation(line: 1243, column: 19, scope: !3714)
!3720 = !DILocation(line: 1243, column: 4, scope: !3714)
!3721 = !DILocation(line: 1244, column: 7, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 1244, column: 7)
!3723 = !DILocation(line: 1244, column: 10, scope: !3722)
!3724 = !DILocation(line: 1244, column: 7, scope: !3715)
!3725 = !DILocation(line: 1245, column: 15, scope: !3722)
!3726 = !DILocation(line: 1245, column: 19, scope: !3722)
!3727 = !DILocation(line: 1245, column: 4, scope: !3722)
!3728 = !DILocation(line: 1247, column: 3, scope: !3715)
!3729 = !DILocation(line: 1247, column: 13, scope: !3715)
!3730 = !DILocation(line: 1248, column: 3, scope: !3715)
!3731 = !DILocation(line: 1251, column: 6, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3509, file: !1, line: 1251, column: 6)
!3733 = !DILocation(line: 1251, column: 13, scope: !3732)
!3734 = !DILocation(line: 1251, column: 29, scope: !3732)
!3735 = !DILocation(line: 1251, column: 6, scope: !3509)
!3736 = !DILocation(line: 1252, column: 41, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3732, file: !1, line: 1251, column: 51)
!3738 = !DILocation(line: 1252, column: 19, scope: !3737)
!3739 = !DILocation(line: 1252, column: 3, scope: !3737)
!3740 = !DILocation(line: 1252, column: 6, scope: !3737)
!3741 = !DILocation(line: 1252, column: 17, scope: !3737)
!3742 = !DILocation(line: 1253, column: 2, scope: !3737)
!3743 = !DILocation(line: 1255, column: 23, scope: !3509)
!3744 = !DILocation(line: 1255, column: 26, scope: !3509)
!3745 = !DILocation(line: 1255, column: 2, scope: !3509)
!3746 = !DILocation(line: 1258, column: 36, scope: !3509)
!3747 = !DILocation(line: 1258, column: 43, scope: !3509)
!3748 = !DILocation(line: 1258, column: 46, scope: !3509)
!3749 = !DILocation(line: 1258, column: 53, scope: !3509)
!3750 = !DILocation(line: 1258, column: 58, scope: !3509)
!3751 = !DILocation(line: 1258, column: 15, scope: !3509)
!3752 = !DILocation(line: 1258, column: 2, scope: !3509)
!3753 = !DILocation(line: 1258, column: 5, scope: !3509)
!3754 = !DILocation(line: 1258, column: 13, scope: !3509)
!3755 = !DILocation(line: 1260, column: 9, scope: !3509)
!3756 = !DILocation(line: 1260, column: 2, scope: !3509)
!3757 = !DILocation(line: 1261, column: 1, scope: !3509)
!3758 = distinct !DISubprogram(name: "paint_2d_canvas_set", scope: !1, file: !1, line: 1107, type: !3759, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!66, !115, !2420}
!3761 = !DILocalVariable(name: "s", arg: 1, scope: !3758, file: !1, line: 1107, type: !115)
!3762 = !DILocation(line: 1107, column: 49, scope: !3758)
!3763 = !DILocalVariable(name: "ima", arg: 2, scope: !3758, file: !1, line: 1107, type: !2420)
!3764 = !DILocation(line: 1107, column: 59, scope: !3758)
!3765 = !DILocalVariable(name: "ibuf", scope: !3758, file: !1, line: 1109, type: !2141)
!3766 = !DILocation(line: 1109, column: 9, scope: !3758)
!3767 = !DILocation(line: 1109, column: 39, scope: !3758)
!3768 = !DILocation(line: 1109, column: 44, scope: !3758)
!3769 = !DILocation(line: 1109, column: 47, scope: !3758)
!3770 = !DILocation(line: 1109, column: 55, scope: !3758)
!3771 = !DILocation(line: 1109, column: 58, scope: !3758)
!3772 = !DILocation(line: 1109, column: 64, scope: !3758)
!3773 = !DILocation(line: 1109, column: 16, scope: !3758)
!3774 = !DILocation(line: 1112, column: 6, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3758, file: !1, line: 1112, column: 6)
!3776 = !DILocation(line: 1112, column: 10, scope: !3775)
!3777 = !DILocation(line: 1112, column: 6, scope: !3758)
!3778 = !DILocation(line: 1113, column: 3, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !1, line: 1112, column: 19)
!3780 = !DILocation(line: 1115, column: 11, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3775, file: !1, line: 1115, column: 11)
!3782 = !DILocation(line: 1115, column: 16, scope: !3781)
!3783 = !DILocation(line: 1115, column: 27, scope: !3781)
!3784 = !DILocation(line: 1115, column: 30, scope: !3781)
!3785 = !DILocation(line: 1115, column: 35, scope: !3781)
!3786 = !DILocation(line: 1115, column: 11, scope: !3775)
!3787 = !DILocation(line: 1116, column: 23, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3781, file: !1, line: 1115, column: 39)
!3789 = !DILocation(line: 1116, column: 28, scope: !3788)
!3790 = !DILocation(line: 1116, column: 31, scope: !3788)
!3791 = !DILocation(line: 1116, column: 36, scope: !3788)
!3792 = !DILocation(line: 1116, column: 3, scope: !3788)
!3793 = !DILocation(line: 1116, column: 6, scope: !3788)
!3794 = !DILocation(line: 1116, column: 21, scope: !3788)
!3795 = !DILocation(line: 1117, column: 3, scope: !3788)
!3796 = !DILocation(line: 1119, column: 11, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3781, file: !1, line: 1119, column: 11)
!3798 = !DILocation(line: 1119, column: 16, scope: !3797)
!3799 = !DILocation(line: 1119, column: 19, scope: !3797)
!3800 = !DILocation(line: 1119, column: 25, scope: !3797)
!3801 = !DILocation(line: 1119, column: 34, scope: !3797)
!3802 = !DILocation(line: 1119, column: 11, scope: !3781)
!3803 = !DILocation(line: 1120, column: 22, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3797, file: !1, line: 1119, column: 40)
!3805 = !DILocation(line: 1120, column: 27, scope: !3804)
!3806 = !DILocation(line: 1120, column: 30, scope: !3804)
!3807 = !DILocation(line: 1120, column: 35, scope: !3804)
!3808 = !DILocation(line: 1120, column: 3, scope: !3804)
!3809 = !DILocation(line: 1120, column: 6, scope: !3804)
!3810 = !DILocation(line: 1120, column: 20, scope: !3804)
!3811 = !DILocation(line: 1121, column: 3, scope: !3804)
!3812 = !DILocation(line: 1123, column: 12, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3797, file: !1, line: 1123, column: 11)
!3814 = !DILocation(line: 1123, column: 17, scope: !3813)
!3815 = !DILocation(line: 1123, column: 22, scope: !3813)
!3816 = !DILocation(line: 1123, column: 28, scope: !3813)
!3817 = !DILocation(line: 1123, column: 33, scope: !3813)
!3818 = !DILocation(line: 1123, column: 36, scope: !3813)
!3819 = !DILocation(line: 1123, column: 42, scope: !3813)
!3820 = !DILocation(line: 1123, column: 11, scope: !3797)
!3821 = !DILocation(line: 1124, column: 3, scope: !3813)
!3822 = !DILocation(line: 1126, column: 13, scope: !3758)
!3823 = !DILocation(line: 1126, column: 2, scope: !3758)
!3824 = !DILocation(line: 1126, column: 5, scope: !3758)
!3825 = !DILocation(line: 1126, column: 11, scope: !3758)
!3826 = !DILocation(line: 1127, column: 14, scope: !3758)
!3827 = !DILocation(line: 1127, column: 2, scope: !3758)
!3828 = !DILocation(line: 1127, column: 5, scope: !3758)
!3829 = !DILocation(line: 1127, column: 12, scope: !3758)
!3830 = !DILocation(line: 1130, column: 6, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3758, file: !1, line: 1130, column: 6)
!3832 = !DILocation(line: 1130, column: 9, scope: !3831)
!3833 = !DILocation(line: 1130, column: 14, scope: !3831)
!3834 = !DILocation(line: 1130, column: 6, scope: !3758)
!3835 = !DILocation(line: 1131, column: 9, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 1130, column: 35)
!3837 = !DILocation(line: 1131, column: 12, scope: !3836)
!3838 = !DILocation(line: 1131, column: 19, scope: !3836)
!3839 = !DILocation(line: 1131, column: 25, scope: !3836)
!3840 = !DILocation(line: 1131, column: 7, scope: !3836)
!3841 = !DILocation(line: 1132, column: 33, scope: !3836)
!3842 = !DILocation(line: 1132, column: 38, scope: !3836)
!3843 = !DILocation(line: 1132, column: 41, scope: !3836)
!3844 = !DILocation(line: 1132, column: 49, scope: !3836)
!3845 = !DILocation(line: 1132, column: 52, scope: !3836)
!3846 = !DILocation(line: 1132, column: 58, scope: !3836)
!3847 = !DILocation(line: 1132, column: 10, scope: !3836)
!3848 = !DILocation(line: 1132, column: 8, scope: !3836)
!3849 = !DILocation(line: 1134, column: 8, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3836, file: !1, line: 1134, column: 7)
!3851 = !DILocation(line: 1134, column: 12, scope: !3850)
!3852 = !DILocation(line: 1134, column: 16, scope: !3850)
!3853 = !DILocation(line: 1134, column: 21, scope: !3850)
!3854 = !DILocation(line: 1134, column: 26, scope: !3850)
!3855 = !DILocation(line: 1134, column: 32, scope: !3850)
!3856 = !DILocation(line: 1134, column: 37, scope: !3850)
!3857 = !DILocation(line: 1134, column: 40, scope: !3850)
!3858 = !DILocation(line: 1134, column: 46, scope: !3850)
!3859 = !DILocation(line: 1134, column: 7, scope: !3836)
!3860 = !DILocation(line: 1135, column: 27, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3850, file: !1, line: 1134, column: 59)
!3862 = !DILocation(line: 1135, column: 32, scope: !3861)
!3863 = !DILocation(line: 1135, column: 4, scope: !3861)
!3864 = !DILocation(line: 1136, column: 27, scope: !3861)
!3865 = !DILocation(line: 1136, column: 30, scope: !3861)
!3866 = !DILocation(line: 1136, column: 37, scope: !3861)
!3867 = !DILocation(line: 1136, column: 40, scope: !3861)
!3868 = !DILocation(line: 1136, column: 4, scope: !3861)
!3869 = !DILocation(line: 1137, column: 4, scope: !3861)
!3870 = !DILocation(line: 1140, column: 20, scope: !3836)
!3871 = !DILocation(line: 1140, column: 3, scope: !3836)
!3872 = !DILocation(line: 1140, column: 6, scope: !3836)
!3873 = !DILocation(line: 1140, column: 18, scope: !3836)
!3874 = !DILocation(line: 1143, column: 7, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3836, file: !1, line: 1143, column: 7)
!3876 = !DILocation(line: 1143, column: 10, scope: !3875)
!3877 = !DILocation(line: 1143, column: 18, scope: !3875)
!3878 = !DILocation(line: 1143, column: 29, scope: !3875)
!3879 = !DILocation(line: 1143, column: 33, scope: !3875)
!3880 = !DILocation(line: 1143, column: 36, scope: !3875)
!3881 = !DILocation(line: 1143, column: 49, scope: !3875)
!3882 = !DILocation(line: 1143, column: 7, scope: !3836)
!3883 = !DILocation(line: 1144, column: 24, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3875, file: !1, line: 1143, column: 61)
!3885 = !DILocation(line: 1144, column: 27, scope: !3884)
!3886 = !DILocation(line: 1144, column: 4, scope: !3884)
!3887 = !DILocation(line: 1145, column: 3, scope: !3884)
!3888 = !DILocation(line: 1146, column: 13, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3875, file: !1, line: 1146, column: 12)
!3890 = !DILocation(line: 1146, column: 16, scope: !3889)
!3891 = !DILocation(line: 1146, column: 24, scope: !3889)
!3892 = !DILocation(line: 1146, column: 35, scope: !3889)
!3893 = !DILocation(line: 1146, column: 39, scope: !3889)
!3894 = !DILocation(line: 1146, column: 42, scope: !3889)
!3895 = !DILocation(line: 1146, column: 55, scope: !3889)
!3896 = !DILocation(line: 1146, column: 12, scope: !3875)
!3897 = !DILocation(line: 1147, column: 24, scope: !3889)
!3898 = !DILocation(line: 1147, column: 27, scope: !3889)
!3899 = !DILocation(line: 1147, column: 4, scope: !3889)
!3900 = !DILocation(line: 1148, column: 2, scope: !3836)
!3901 = !DILocation(line: 1151, column: 44, scope: !3758)
!3902 = !DILocation(line: 1151, column: 47, scope: !3758)
!3903 = !DILocation(line: 1151, column: 18, scope: !3758)
!3904 = !DILocation(line: 1151, column: 2, scope: !3758)
!3905 = !DILocation(line: 1151, column: 5, scope: !3758)
!3906 = !DILocation(line: 1151, column: 16, scope: !3758)
!3907 = !DILocation(line: 1153, column: 2, scope: !3758)
!3908 = !DILocation(line: 1154, column: 1, scope: !3758)
!3909 = distinct !DISubprogram(name: "brush_painter_2d_new", scope: !1, file: !1, line: 152, type: !3910, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{!120, !125, !2119, !107}
!3912 = !DILocalVariable(name: "scene", arg: 1, scope: !3909, file: !1, line: 152, type: !125)
!3913 = !DILocation(line: 152, column: 50, scope: !3909)
!3914 = !DILocalVariable(name: "brush", arg: 2, scope: !3909, file: !1, line: 152, type: !2119)
!3915 = !DILocation(line: 152, column: 64, scope: !3909)
!3916 = !DILocalVariable(name: "invert", arg: 3, scope: !3909, file: !1, line: 152, type: !107)
!3917 = !DILocation(line: 152, column: 76, scope: !3909)
!3918 = !DILocalVariable(name: "painter", scope: !3909, file: !1, line: 154, type: !120)
!3919 = !DILocation(line: 154, column: 16, scope: !3909)
!3920 = !DILocation(line: 154, column: 26, scope: !3909)
!3921 = !DILocation(line: 156, column: 19, scope: !3909)
!3922 = !DILocation(line: 156, column: 2, scope: !3909)
!3923 = !DILocation(line: 156, column: 11, scope: !3909)
!3924 = !DILocation(line: 156, column: 17, scope: !3909)
!3925 = !DILocation(line: 157, column: 19, scope: !3909)
!3926 = !DILocation(line: 157, column: 2, scope: !3909)
!3927 = !DILocation(line: 157, column: 11, scope: !3909)
!3928 = !DILocation(line: 157, column: 17, scope: !3909)
!3929 = !DILocation(line: 158, column: 2, scope: !3909)
!3930 = !DILocation(line: 158, column: 11, scope: !3909)
!3931 = !DILocation(line: 158, column: 22, scope: !3909)
!3932 = !DILocation(line: 159, column: 2, scope: !3909)
!3933 = !DILocation(line: 159, column: 11, scope: !3909)
!3934 = !DILocation(line: 159, column: 17, scope: !3909)
!3935 = !DILocation(line: 159, column: 30, scope: !3909)
!3936 = !DILocation(line: 160, column: 26, scope: !3909)
!3937 = !DILocation(line: 160, column: 2, scope: !3909)
!3938 = !DILocation(line: 160, column: 11, scope: !3909)
!3939 = !DILocation(line: 160, column: 17, scope: !3909)
!3940 = !DILocation(line: 160, column: 24, scope: !3909)
!3941 = !DILocation(line: 162, column: 9, scope: !3909)
!3942 = !DILocation(line: 162, column: 2, scope: !3909)
!3943 = distinct !DISubprogram(name: "paint_2d_redraw", scope: !1, file: !1, line: 1263, type: !3944, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{null, !3946, !105, !107}
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3513)
!3948 = !DILocalVariable(name: "C", arg: 1, scope: !3943, file: !1, line: 1263, type: !3946)
!3949 = !DILocation(line: 1263, column: 38, scope: !3943)
!3950 = !DILocalVariable(name: "ps", arg: 2, scope: !3943, file: !1, line: 1263, type: !105)
!3951 = !DILocation(line: 1263, column: 47, scope: !3943)
!3952 = !DILocalVariable(name: "final", arg: 3, scope: !3943, file: !1, line: 1263, type: !107)
!3953 = !DILocation(line: 1263, column: 56, scope: !3943)
!3954 = !DILocalVariable(name: "s", scope: !3943, file: !1, line: 1265, type: !115)
!3955 = !DILocation(line: 1265, column: 19, scope: !3943)
!3956 = !DILocation(line: 1265, column: 23, scope: !3943)
!3957 = !DILocation(line: 1267, column: 6, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3943, file: !1, line: 1267, column: 6)
!3959 = !DILocation(line: 1267, column: 9, scope: !3958)
!3960 = !DILocation(line: 1267, column: 6, scope: !3943)
!3961 = !DILocalVariable(name: "ibuf", scope: !3962, file: !1, line: 1268, type: !2141)
!3962 = distinct !DILexicalBlock(scope: !3958, file: !1, line: 1267, column: 22)
!3963 = !DILocation(line: 1268, column: 10, scope: !3962)
!3964 = !DILocation(line: 1268, column: 40, scope: !3962)
!3965 = !DILocation(line: 1268, column: 43, scope: !3962)
!3966 = !DILocation(line: 1268, column: 50, scope: !3962)
!3967 = !DILocation(line: 1268, column: 53, scope: !3962)
!3968 = !DILocation(line: 1268, column: 61, scope: !3962)
!3969 = !DILocation(line: 1268, column: 64, scope: !3962)
!3970 = !DILocation(line: 1268, column: 70, scope: !3962)
!3971 = !DILocation(line: 1268, column: 17, scope: !3962)
!3972 = !DILocation(line: 1270, column: 25, scope: !3962)
!3973 = !DILocation(line: 1270, column: 28, scope: !3962)
!3974 = !DILocation(line: 1270, column: 34, scope: !3962)
!3975 = !DILocation(line: 1270, column: 37, scope: !3962)
!3976 = !DILocation(line: 1270, column: 44, scope: !3962)
!3977 = !DILocation(line: 1270, column: 3, scope: !3962)
!3978 = !DILocation(line: 1271, column: 3, scope: !3962)
!3979 = !DILocation(line: 1273, column: 26, scope: !3962)
!3980 = !DILocation(line: 1273, column: 29, scope: !3962)
!3981 = !DILocation(line: 1273, column: 36, scope: !3962)
!3982 = !DILocation(line: 1273, column: 3, scope: !3962)
!3983 = !DILocation(line: 1275, column: 3, scope: !3962)
!3984 = !DILocation(line: 1275, column: 6, scope: !3962)
!3985 = !DILocation(line: 1275, column: 18, scope: !3962)
!3986 = !DILocation(line: 1276, column: 2, scope: !3962)
!3987 = !DILocation(line: 1277, column: 12, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3958, file: !1, line: 1277, column: 11)
!3989 = !DILocation(line: 1277, column: 11, scope: !3958)
!3990 = !DILocation(line: 1278, column: 3, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3988, file: !1, line: 1277, column: 19)
!3992 = !DILocation(line: 1281, column: 6, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3943, file: !1, line: 1281, column: 6)
!3994 = !DILocation(line: 1281, column: 6, scope: !3943)
!3995 = !DILocation(line: 1282, column: 7, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !1, line: 1282, column: 7)
!3997 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 1281, column: 13)
!3998 = !DILocation(line: 1282, column: 10, scope: !3996)
!3999 = !DILocation(line: 1282, column: 16, scope: !3996)
!4000 = !DILocation(line: 1282, column: 21, scope: !3996)
!4001 = !DILocation(line: 1282, column: 24, scope: !3996)
!4002 = !DILocation(line: 1282, column: 29, scope: !3996)
!4003 = !DILocation(line: 1282, column: 32, scope: !3996)
!4004 = !DILocation(line: 1282, column: 35, scope: !3996)
!4005 = !DILocation(line: 1282, column: 41, scope: !3996)
!4006 = !DILocation(line: 1282, column: 7, scope: !3997)
!4007 = !DILocation(line: 1283, column: 19, scope: !3996)
!4008 = !DILocation(line: 1283, column: 22, scope: !3996)
!4009 = !DILocation(line: 1283, column: 4, scope: !3996)
!4010 = !DILocation(line: 1286, column: 25, scope: !3997)
!4011 = !DILocation(line: 1286, column: 50, scope: !3997)
!4012 = !DILocation(line: 1286, column: 53, scope: !3997)
!4013 = !DILocation(line: 1286, column: 3, scope: !3997)
!4014 = !DILocation(line: 1287, column: 22, scope: !3997)
!4015 = !DILocation(line: 1287, column: 25, scope: !3997)
!4016 = !DILocation(line: 1287, column: 32, scope: !3997)
!4017 = !DILocation(line: 1287, column: 3, scope: !3997)
!4018 = !DILocation(line: 1288, column: 2, scope: !3997)
!4019 = !DILocation(line: 1290, column: 8, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !1, line: 1290, column: 7)
!4021 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 1289, column: 7)
!4022 = !DILocation(line: 1290, column: 11, scope: !4020)
!4023 = !DILocation(line: 1290, column: 16, scope: !4020)
!4024 = !DILocation(line: 1290, column: 20, scope: !4020)
!4025 = !DILocation(line: 1290, column: 23, scope: !4020)
!4026 = !DILocation(line: 1290, column: 29, scope: !4020)
!4027 = !DILocation(line: 1290, column: 7, scope: !4021)
!4028 = !DILocation(line: 1291, column: 39, scope: !4020)
!4029 = !DILocation(line: 1291, column: 25, scope: !4020)
!4030 = !DILocation(line: 1291, column: 4, scope: !4020)
!4031 = !DILocation(line: 1293, column: 26, scope: !4020)
!4032 = !DILocation(line: 1293, column: 53, scope: !4020)
!4033 = !DILocation(line: 1293, column: 56, scope: !4020)
!4034 = !DILocation(line: 1293, column: 4, scope: !4020)
!4035 = !DILocation(line: 1295, column: 1, scope: !3943)
!4036 = distinct !DISubprogram(name: "paint_2d_stroke_done", scope: !1, file: !1, line: 1297, type: !660, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4037 = !DILocalVariable(name: "ps", arg: 1, scope: !4036, file: !1, line: 1297, type: !105)
!4038 = !DILocation(line: 1297, column: 33, scope: !4036)
!4039 = !DILocalVariable(name: "s", scope: !4036, file: !1, line: 1299, type: !115)
!4040 = !DILocation(line: 1299, column: 19, scope: !4036)
!4041 = !DILocation(line: 1299, column: 23, scope: !4036)
!4042 = !DILocation(line: 1301, column: 23, scope: !4036)
!4043 = !DILocation(line: 1301, column: 2, scope: !4036)
!4044 = !DILocation(line: 1302, column: 24, scope: !4036)
!4045 = !DILocation(line: 1302, column: 27, scope: !4036)
!4046 = !DILocation(line: 1302, column: 2, scope: !4036)
!4047 = !DILocation(line: 1303, column: 23, scope: !4036)
!4048 = !DILocation(line: 1303, column: 26, scope: !4036)
!4049 = !DILocation(line: 1303, column: 2, scope: !4036)
!4050 = !DILocation(line: 1305, column: 2, scope: !4036)
!4051 = !DILocation(line: 1305, column: 12, scope: !4036)
!4052 = !DILocation(line: 1306, column: 1, scope: !4036)
!4053 = distinct !DISubprogram(name: "paint_2d_canvas_free", scope: !1, file: !1, line: 1156, type: !4054, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{null, !115}
!4056 = !DILocalVariable(name: "s", arg: 1, scope: !4053, file: !1, line: 1156, type: !115)
!4057 = !DILocation(line: 1156, column: 51, scope: !4053)
!4058 = !DILocation(line: 1158, column: 25, scope: !4053)
!4059 = !DILocation(line: 1158, column: 28, scope: !4053)
!4060 = !DILocation(line: 1158, column: 35, scope: !4053)
!4061 = !DILocation(line: 1158, column: 38, scope: !4053)
!4062 = !DILocation(line: 1158, column: 2, scope: !4053)
!4063 = !DILocation(line: 1159, column: 25, scope: !4053)
!4064 = !DILocation(line: 1159, column: 28, scope: !4053)
!4065 = !DILocation(line: 1159, column: 35, scope: !4053)
!4066 = !DILocation(line: 1159, column: 41, scope: !4053)
!4067 = !DILocation(line: 1159, column: 48, scope: !4053)
!4068 = !DILocation(line: 1159, column: 51, scope: !4053)
!4069 = !DILocation(line: 1159, column: 2, scope: !4053)
!4070 = !DILocation(line: 1161, column: 6, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4053, file: !1, line: 1161, column: 6)
!4072 = !DILocation(line: 1161, column: 9, scope: !4071)
!4073 = !DILocation(line: 1161, column: 6, scope: !4053)
!4074 = !DILocation(line: 1162, column: 28, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4071, file: !1, line: 1161, column: 21)
!4076 = !DILocation(line: 1162, column: 31, scope: !4075)
!4077 = !DILocation(line: 1162, column: 3, scope: !4075)
!4078 = !DILocation(line: 1163, column: 3, scope: !4075)
!4079 = !DILocation(line: 1163, column: 13, scope: !4075)
!4080 = !DILocation(line: 1163, column: 16, scope: !4075)
!4081 = !DILocation(line: 1164, column: 2, scope: !4075)
!4082 = !DILocation(line: 1166, column: 2, scope: !4053)
!4083 = !DILocation(line: 1167, column: 1, scope: !4053)
!4084 = distinct !DISubprogram(name: "brush_painter_2d_free", scope: !1, file: !1, line: 187, type: !4085, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{null, !120}
!4087 = !DILocalVariable(name: "painter", arg: 1, scope: !4084, file: !1, line: 187, type: !120)
!4088 = !DILocation(line: 187, column: 49, scope: !4084)
!4089 = !DILocation(line: 189, column: 6, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4084, file: !1, line: 189, column: 6)
!4091 = !DILocation(line: 189, column: 15, scope: !4090)
!4092 = !DILocation(line: 189, column: 21, scope: !4090)
!4093 = !DILocation(line: 189, column: 6, scope: !4084)
!4094 = !DILocation(line: 189, column: 41, scope: !4090)
!4095 = !DILocation(line: 189, column: 50, scope: !4090)
!4096 = !DILocation(line: 189, column: 56, scope: !4090)
!4097 = !DILocation(line: 189, column: 27, scope: !4090)
!4098 = !DILocation(line: 190, column: 6, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4084, file: !1, line: 190, column: 6)
!4100 = !DILocation(line: 190, column: 15, scope: !4099)
!4101 = !DILocation(line: 190, column: 21, scope: !4099)
!4102 = !DILocation(line: 190, column: 6, scope: !4084)
!4103 = !DILocation(line: 190, column: 44, scope: !4099)
!4104 = !DILocation(line: 190, column: 53, scope: !4099)
!4105 = !DILocation(line: 190, column: 59, scope: !4099)
!4106 = !DILocation(line: 190, column: 30, scope: !4099)
!4107 = !DILocation(line: 191, column: 6, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4084, file: !1, line: 191, column: 6)
!4109 = !DILocation(line: 191, column: 15, scope: !4108)
!4110 = !DILocation(line: 191, column: 21, scope: !4108)
!4111 = !DILocation(line: 191, column: 6, scope: !4084)
!4112 = !DILocation(line: 191, column: 33, scope: !4108)
!4113 = !DILocation(line: 191, column: 43, scope: !4108)
!4114 = !DILocation(line: 191, column: 52, scope: !4108)
!4115 = !DILocation(line: 191, column: 58, scope: !4108)
!4116 = !DILocation(line: 192, column: 6, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4084, file: !1, line: 192, column: 6)
!4118 = !DILocation(line: 192, column: 15, scope: !4117)
!4119 = !DILocation(line: 192, column: 21, scope: !4117)
!4120 = !DILocation(line: 192, column: 6, scope: !4084)
!4121 = !DILocation(line: 192, column: 31, scope: !4117)
!4122 = !DILocation(line: 192, column: 41, scope: !4117)
!4123 = !DILocation(line: 192, column: 50, scope: !4117)
!4124 = !DILocation(line: 192, column: 56, scope: !4117)
!4125 = !DILocation(line: 193, column: 6, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4084, file: !1, line: 193, column: 6)
!4127 = !DILocation(line: 193, column: 15, scope: !4126)
!4128 = !DILocation(line: 193, column: 21, scope: !4126)
!4129 = !DILocation(line: 193, column: 6, scope: !4084)
!4130 = !DILocation(line: 193, column: 35, scope: !4126)
!4131 = !DILocation(line: 193, column: 45, scope: !4126)
!4132 = !DILocation(line: 193, column: 54, scope: !4126)
!4133 = !DILocation(line: 193, column: 60, scope: !4126)
!4134 = !DILocation(line: 194, column: 2, scope: !4084)
!4135 = !DILocation(line: 194, column: 12, scope: !4084)
!4136 = !DILocation(line: 195, column: 1, scope: !4084)
!4137 = distinct !DISubprogram(name: "paint_2d_bucket_fill", scope: !1, file: !1, line: 1351, type: !4138, scopeLine: 1355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{null, !3946, !2450, !2119, !2450, !105}
!4140 = !DILocalVariable(name: "C", arg: 1, scope: !4137, file: !1, line: 1352, type: !3946)
!4141 = !DILocation(line: 1352, column: 25, scope: !4137)
!4142 = !DILocalVariable(name: "color", arg: 2, scope: !4137, file: !1, line: 1352, type: !2450)
!4143 = !DILocation(line: 1352, column: 40, scope: !4137)
!4144 = !DILocalVariable(name: "br", arg: 3, scope: !4137, file: !1, line: 1352, type: !2119)
!4145 = !DILocation(line: 1352, column: 57, scope: !4137)
!4146 = !DILocalVariable(name: "mouse_init", arg: 4, scope: !4137, file: !1, line: 1353, type: !2450)
!4147 = !DILocation(line: 1353, column: 21, scope: !4137)
!4148 = !DILocalVariable(name: "ps", arg: 5, scope: !4137, file: !1, line: 1354, type: !105)
!4149 = !DILocation(line: 1354, column: 15, scope: !4137)
!4150 = !DILocalVariable(name: "sima", scope: !4137, file: !1, line: 1356, type: !2151)
!4151 = !DILocation(line: 1356, column: 14, scope: !4137)
!4152 = !DILocation(line: 1356, column: 40, scope: !4137)
!4153 = !DILocation(line: 1356, column: 21, scope: !4137)
!4154 = !DILocalVariable(name: "ima", scope: !4137, file: !1, line: 1357, type: !2420)
!4155 = !DILocation(line: 1357, column: 9, scope: !4137)
!4156 = !DILocation(line: 1357, column: 15, scope: !4137)
!4157 = !DILocation(line: 1357, column: 21, scope: !4137)
!4158 = !DILocalVariable(name: "s", scope: !4137, file: !1, line: 1359, type: !115)
!4159 = !DILocation(line: 1359, column: 19, scope: !4137)
!4160 = !DILocation(line: 1359, column: 23, scope: !4137)
!4161 = !DILocalVariable(name: "ibuf", scope: !4137, file: !1, line: 1361, type: !2141)
!4162 = !DILocation(line: 1361, column: 9, scope: !4137)
!4163 = !DILocalVariable(name: "x_px", scope: !4137, file: !1, line: 1362, type: !66)
!4164 = !DILocation(line: 1362, column: 6, scope: !4137)
!4165 = !DILocalVariable(name: "y_px", scope: !4137, file: !1, line: 1362, type: !66)
!4166 = !DILocation(line: 1362, column: 12, scope: !4137)
!4167 = !DILocalVariable(name: "color_b", scope: !4137, file: !1, line: 1363, type: !5)
!4168 = !DILocation(line: 1363, column: 15, scope: !4137)
!4169 = !DILocalVariable(name: "color_f", scope: !4137, file: !1, line: 1364, type: !407)
!4170 = !DILocation(line: 1364, column: 8, scope: !4137)
!4171 = !DILocalVariable(name: "strength", scope: !4137, file: !1, line: 1365, type: !113)
!4172 = !DILocation(line: 1365, column: 8, scope: !4137)
!4173 = !DILocation(line: 1365, column: 19, scope: !4137)
!4174 = !DILocation(line: 1365, column: 24, scope: !4137)
!4175 = !DILocation(line: 1365, column: 28, scope: !4137)
!4176 = !DILocalVariable(name: "do_float", scope: !4137, file: !1, line: 1367, type: !107)
!4177 = !DILocation(line: 1367, column: 7, scope: !4137)
!4178 = !DILocation(line: 1369, column: 7, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 1369, column: 6)
!4180 = !DILocation(line: 1369, column: 6, scope: !4137)
!4181 = !DILocation(line: 1370, column: 3, scope: !4179)
!4182 = !DILocation(line: 1372, column: 32, scope: !4137)
!4183 = !DILocation(line: 1372, column: 38, scope: !4137)
!4184 = !DILocation(line: 1372, column: 44, scope: !4137)
!4185 = !DILocation(line: 1372, column: 9, scope: !4137)
!4186 = !DILocation(line: 1372, column: 7, scope: !4137)
!4187 = !DILocation(line: 1374, column: 7, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 1374, column: 6)
!4189 = !DILocation(line: 1374, column: 6, scope: !4137)
!4190 = !DILocation(line: 1375, column: 3, scope: !4188)
!4191 = !DILocation(line: 1377, column: 14, scope: !4137)
!4192 = !DILocation(line: 1377, column: 20, scope: !4137)
!4193 = !DILocation(line: 1377, column: 31, scope: !4137)
!4194 = !DILocation(line: 1377, column: 13, scope: !4137)
!4195 = !DILocation(line: 1377, column: 11, scope: !4137)
!4196 = !DILocation(line: 1381, column: 7, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 1381, column: 6)
!4198 = !DILocation(line: 1381, column: 6, scope: !4137)
!4199 = !DILocation(line: 1382, column: 28, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4197, file: !1, line: 1381, column: 17)
!4201 = !DILocation(line: 1382, column: 55, scope: !4200)
!4202 = !DILocation(line: 1382, column: 3, scope: !4200)
!4203 = !DILocation(line: 1383, column: 31, scope: !4200)
!4204 = !DILocation(line: 1383, column: 40, scope: !4200)
!4205 = !DILocation(line: 1383, column: 6, scope: !4200)
!4206 = !DILocation(line: 1383, column: 24, scope: !4200)
!4207 = !DILocation(line: 1383, column: 29, scope: !4200)
!4208 = !DILocation(line: 1384, column: 2, scope: !4200)
!4209 = !DILocation(line: 1386, column: 14, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4197, file: !1, line: 1385, column: 7)
!4211 = !DILocation(line: 1386, column: 23, scope: !4210)
!4212 = !DILocation(line: 1386, column: 3, scope: !4210)
!4213 = !DILocation(line: 1387, column: 16, scope: !4210)
!4214 = !DILocation(line: 1387, column: 3, scope: !4210)
!4215 = !DILocation(line: 1387, column: 14, scope: !4210)
!4216 = !DILocation(line: 1390, column: 7, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 1390, column: 6)
!4218 = !DILocation(line: 1390, column: 18, scope: !4217)
!4219 = !DILocation(line: 1390, column: 22, scope: !4217)
!4220 = !DILocation(line: 1390, column: 6, scope: !4137)
!4221 = !DILocation(line: 1392, column: 28, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4217, file: !1, line: 1390, column: 26)
!4223 = !DILocation(line: 1392, column: 33, scope: !4222)
!4224 = !DILocation(line: 1392, column: 45, scope: !4222)
!4225 = !DILocation(line: 1392, column: 51, scope: !4222)
!4226 = !DILocation(line: 1392, column: 54, scope: !4222)
!4227 = !DILocation(line: 1392, column: 60, scope: !4222)
!4228 = !DILocation(line: 1392, column: 3, scope: !4222)
!4229 = !DILocation(line: 1394, column: 7, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4222, file: !1, line: 1394, column: 7)
!4231 = !DILocation(line: 1394, column: 7, scope: !4222)
!4232 = !DILocation(line: 1395, column: 14, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !1, line: 1395, column: 4)
!4234 = distinct !DILexicalBlock(scope: !4230, file: !1, line: 1394, column: 17)
!4235 = !DILocation(line: 1395, column: 9, scope: !4233)
!4236 = !DILocation(line: 1395, column: 19, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4233, file: !1, line: 1395, column: 4)
!4238 = !DILocation(line: 1395, column: 26, scope: !4237)
!4239 = !DILocation(line: 1395, column: 32, scope: !4237)
!4240 = !DILocation(line: 1395, column: 24, scope: !4237)
!4241 = !DILocation(line: 1395, column: 4, scope: !4233)
!4242 = !DILocation(line: 1396, column: 15, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !1, line: 1396, column: 5)
!4244 = distinct !DILexicalBlock(scope: !4237, file: !1, line: 1395, column: 43)
!4245 = !DILocation(line: 1396, column: 10, scope: !4243)
!4246 = !DILocation(line: 1396, column: 20, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4243, file: !1, line: 1396, column: 5)
!4248 = !DILocation(line: 1396, column: 27, scope: !4247)
!4249 = !DILocation(line: 1396, column: 33, scope: !4247)
!4250 = !DILocation(line: 1396, column: 25, scope: !4247)
!4251 = !DILocation(line: 1396, column: 5, scope: !4243)
!4252 = !DILocation(line: 1397, column: 28, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4247, file: !1, line: 1396, column: 44)
!4254 = !DILocation(line: 1397, column: 34, scope: !4253)
!4255 = !DILocation(line: 1397, column: 52, scope: !4253)
!4256 = !DILocation(line: 1397, column: 59, scope: !4253)
!4257 = !DILocation(line: 1397, column: 65, scope: !4253)
!4258 = !DILocation(line: 1397, column: 57, scope: !4253)
!4259 = !DILocation(line: 1397, column: 69, scope: !4253)
!4260 = !DILocation(line: 1397, column: 67, scope: !4253)
!4261 = !DILocation(line: 1397, column: 49, scope: !4253)
!4262 = !DILocation(line: 1397, column: 45, scope: !4253)
!4263 = !DILocation(line: 1398, column: 28, scope: !4253)
!4264 = !DILocation(line: 1398, column: 34, scope: !4253)
!4265 = !DILocation(line: 1398, column: 52, scope: !4253)
!4266 = !DILocation(line: 1398, column: 59, scope: !4253)
!4267 = !DILocation(line: 1398, column: 65, scope: !4253)
!4268 = !DILocation(line: 1398, column: 57, scope: !4253)
!4269 = !DILocation(line: 1398, column: 69, scope: !4253)
!4270 = !DILocation(line: 1398, column: 67, scope: !4253)
!4271 = !DILocation(line: 1398, column: 49, scope: !4253)
!4272 = !DILocation(line: 1398, column: 45, scope: !4253)
!4273 = !DILocation(line: 1398, column: 76, scope: !4253)
!4274 = !DILocation(line: 1397, column: 6, scope: !4253)
!4275 = !DILocation(line: 1399, column: 5, scope: !4253)
!4276 = !DILocation(line: 1396, column: 40, scope: !4247)
!4277 = !DILocation(line: 1396, column: 5, scope: !4247)
!4278 = distinct !{!4278, !4251, !4279}
!4279 = !DILocation(line: 1399, column: 5, scope: !4243)
!4280 = !DILocation(line: 1400, column: 4, scope: !4244)
!4281 = !DILocation(line: 1395, column: 39, scope: !4237)
!4282 = !DILocation(line: 1395, column: 4, scope: !4237)
!4283 = distinct !{!4283, !4241, !4284}
!4284 = !DILocation(line: 1400, column: 4, scope: !4233)
!4285 = !DILocation(line: 1401, column: 3, scope: !4234)
!4286 = !DILocation(line: 1403, column: 14, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !1, line: 1403, column: 4)
!4288 = distinct !DILexicalBlock(scope: !4230, file: !1, line: 1402, column: 8)
!4289 = !DILocation(line: 1403, column: 9, scope: !4287)
!4290 = !DILocation(line: 1403, column: 19, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4287, file: !1, line: 1403, column: 4)
!4292 = !DILocation(line: 1403, column: 26, scope: !4291)
!4293 = !DILocation(line: 1403, column: 32, scope: !4291)
!4294 = !DILocation(line: 1403, column: 24, scope: !4291)
!4295 = !DILocation(line: 1403, column: 4, scope: !4287)
!4296 = !DILocation(line: 1404, column: 15, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !1, line: 1404, column: 5)
!4298 = distinct !DILexicalBlock(scope: !4291, file: !1, line: 1403, column: 43)
!4299 = !DILocation(line: 1404, column: 10, scope: !4297)
!4300 = !DILocation(line: 1404, column: 20, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 1404, column: 5)
!4302 = !DILocation(line: 1404, column: 27, scope: !4301)
!4303 = !DILocation(line: 1404, column: 33, scope: !4301)
!4304 = !DILocation(line: 1404, column: 25, scope: !4301)
!4305 = !DILocation(line: 1404, column: 5, scope: !4297)
!4306 = !DILocation(line: 1405, column: 45, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4301, file: !1, line: 1404, column: 44)
!4308 = !DILocation(line: 1405, column: 51, scope: !4307)
!4309 = !DILocation(line: 1405, column: 58, scope: !4307)
!4310 = !DILocation(line: 1405, column: 65, scope: !4307)
!4311 = !DILocation(line: 1405, column: 71, scope: !4307)
!4312 = !DILocation(line: 1405, column: 63, scope: !4307)
!4313 = !DILocation(line: 1405, column: 56, scope: !4307)
!4314 = !DILocation(line: 1405, column: 75, scope: !4307)
!4315 = !DILocation(line: 1405, column: 73, scope: !4307)
!4316 = !DILocation(line: 1405, column: 27, scope: !4307)
!4317 = !DILocation(line: 1406, column: 45, scope: !4307)
!4318 = !DILocation(line: 1406, column: 51, scope: !4307)
!4319 = !DILocation(line: 1406, column: 58, scope: !4307)
!4320 = !DILocation(line: 1406, column: 65, scope: !4307)
!4321 = !DILocation(line: 1406, column: 71, scope: !4307)
!4322 = !DILocation(line: 1406, column: 63, scope: !4307)
!4323 = !DILocation(line: 1406, column: 56, scope: !4307)
!4324 = !DILocation(line: 1406, column: 75, scope: !4307)
!4325 = !DILocation(line: 1406, column: 73, scope: !4307)
!4326 = !DILocation(line: 1406, column: 27, scope: !4307)
!4327 = !DILocation(line: 1406, column: 82, scope: !4307)
!4328 = !DILocation(line: 1405, column: 6, scope: !4307)
!4329 = !DILocation(line: 1407, column: 5, scope: !4307)
!4330 = !DILocation(line: 1404, column: 40, scope: !4301)
!4331 = !DILocation(line: 1404, column: 5, scope: !4301)
!4332 = distinct !{!4332, !4305, !4333}
!4333 = !DILocation(line: 1407, column: 5, scope: !4297)
!4334 = !DILocation(line: 1408, column: 4, scope: !4298)
!4335 = !DILocation(line: 1403, column: 39, scope: !4291)
!4336 = !DILocation(line: 1403, column: 4, scope: !4291)
!4337 = distinct !{!4337, !4295, !4338}
!4338 = !DILocation(line: 1408, column: 4, scope: !4287)
!4339 = !DILocation(line: 1410, column: 2, scope: !4222)
!4340 = !DILocalVariable(name: "stack", scope: !4341, file: !1, line: 1414, type: !4342)
!4341 = distinct !DILexicalBlock(scope: !4217, file: !1, line: 1411, column: 7)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_Stack", file: !4344, line: 33, baseType: !4345)
!4344 = !DIFile(filename: "blender/source/blender/blenlib/BLI_stack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4345 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_Stack", file: !4344, line: 33, flags: DIFlagFwdDecl)
!4346 = !DILocation(line: 1414, column: 14, scope: !4341)
!4347 = !DILocalVariable(name: "touched", scope: !4341, file: !1, line: 1415, type: !110)
!4348 = !DILocation(line: 1415, column: 15, scope: !4341)
!4349 = !DILocalVariable(name: "coordinate", scope: !4341, file: !1, line: 1416, type: !66)
!4350 = !DILocation(line: 1416, column: 7, scope: !4341)
!4351 = !DILocalVariable(name: "width", scope: !4341, file: !1, line: 1417, type: !66)
!4352 = !DILocation(line: 1417, column: 7, scope: !4341)
!4353 = !DILocation(line: 1417, column: 15, scope: !4341)
!4354 = !DILocation(line: 1417, column: 21, scope: !4341)
!4355 = !DILocalVariable(name: "image_init", scope: !4341, file: !1, line: 1418, type: !526)
!4356 = !DILocation(line: 1418, column: 9, scope: !4341)
!4357 = !DILocalVariable(name: "minx", scope: !4341, file: !1, line: 1419, type: !66)
!4358 = !DILocation(line: 1419, column: 7, scope: !4341)
!4359 = !DILocation(line: 1419, column: 14, scope: !4341)
!4360 = !DILocation(line: 1419, column: 20, scope: !4341)
!4361 = !DILocalVariable(name: "miny", scope: !4341, file: !1, line: 1419, type: !66)
!4362 = !DILocation(line: 1419, column: 23, scope: !4341)
!4363 = !DILocation(line: 1419, column: 30, scope: !4341)
!4364 = !DILocation(line: 1419, column: 36, scope: !4341)
!4365 = !DILocalVariable(name: "maxx", scope: !4341, file: !1, line: 1419, type: !66)
!4366 = !DILocation(line: 1419, column: 39, scope: !4341)
!4367 = !DILocalVariable(name: "maxy", scope: !4341, file: !1, line: 1419, type: !66)
!4368 = !DILocation(line: 1419, column: 49, scope: !4341)
!4369 = !DILocalVariable(name: "pixel_color", scope: !4341, file: !1, line: 1420, type: !407)
!4370 = !DILocation(line: 1420, column: 9, scope: !4341)
!4371 = !DILocalVariable(name: "threshold_sq", scope: !4341, file: !1, line: 1421, type: !113)
!4372 = !DILocation(line: 1421, column: 9, scope: !4341)
!4373 = !DILocation(line: 1421, column: 24, scope: !4341)
!4374 = !DILocation(line: 1421, column: 28, scope: !4341)
!4375 = !DILocation(line: 1421, column: 45, scope: !4341)
!4376 = !DILocation(line: 1421, column: 49, scope: !4341)
!4377 = !DILocation(line: 1421, column: 43, scope: !4341)
!4378 = !DILocation(line: 1423, column: 28, scope: !4341)
!4379 = !DILocation(line: 1423, column: 31, scope: !4341)
!4380 = !DILocation(line: 1423, column: 36, scope: !4341)
!4381 = !DILocation(line: 1423, column: 51, scope: !4341)
!4382 = !DILocation(line: 1423, column: 67, scope: !4341)
!4383 = !DILocation(line: 1423, column: 83, scope: !4341)
!4384 = !DILocation(line: 1423, column: 3, scope: !4341)
!4385 = !DILocation(line: 1425, column: 10, scope: !4341)
!4386 = !DILocation(line: 1425, column: 26, scope: !4341)
!4387 = !DILocation(line: 1425, column: 32, scope: !4341)
!4388 = !DILocation(line: 1425, column: 24, scope: !4341)
!4389 = !DILocation(line: 1425, column: 8, scope: !4341)
!4390 = !DILocation(line: 1426, column: 10, scope: !4341)
!4391 = !DILocation(line: 1426, column: 26, scope: !4341)
!4392 = !DILocation(line: 1426, column: 32, scope: !4341)
!4393 = !DILocation(line: 1426, column: 24, scope: !4341)
!4394 = !DILocation(line: 1426, column: 8, scope: !4341)
!4395 = !DILocation(line: 1428, column: 7, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4341, file: !1, line: 1428, column: 7)
!4397 = !DILocation(line: 1428, column: 15, scope: !4396)
!4398 = !DILocation(line: 1428, column: 21, scope: !4396)
!4399 = !DILocation(line: 1428, column: 12, scope: !4396)
!4400 = !DILocation(line: 1428, column: 23, scope: !4396)
!4401 = !DILocation(line: 1428, column: 26, scope: !4396)
!4402 = !DILocation(line: 1428, column: 31, scope: !4396)
!4403 = !DILocation(line: 1428, column: 35, scope: !4396)
!4404 = !DILocation(line: 1428, column: 38, scope: !4396)
!4405 = !DILocation(line: 1428, column: 45, scope: !4396)
!4406 = !DILocation(line: 1428, column: 51, scope: !4396)
!4407 = !DILocation(line: 1428, column: 43, scope: !4396)
!4408 = !DILocation(line: 1428, column: 53, scope: !4396)
!4409 = !DILocation(line: 1428, column: 56, scope: !4396)
!4410 = !DILocation(line: 1428, column: 61, scope: !4396)
!4411 = !DILocation(line: 1428, column: 7, scope: !4341)
!4412 = !DILocation(line: 1429, column: 27, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4396, file: !1, line: 1428, column: 66)
!4414 = !DILocation(line: 1429, column: 32, scope: !4413)
!4415 = !DILocation(line: 1429, column: 4, scope: !4413)
!4416 = !DILocation(line: 1430, column: 4, scope: !4413)
!4417 = !DILocation(line: 1434, column: 28, scope: !4341)
!4418 = !DILocation(line: 1434, column: 33, scope: !4341)
!4419 = !DILocation(line: 1434, column: 45, scope: !4341)
!4420 = !DILocation(line: 1434, column: 51, scope: !4341)
!4421 = !DILocation(line: 1434, column: 54, scope: !4341)
!4422 = !DILocation(line: 1434, column: 60, scope: !4341)
!4423 = !DILocation(line: 1434, column: 3, scope: !4341)
!4424 = !DILocation(line: 1436, column: 11, scope: !4341)
!4425 = !DILocation(line: 1436, column: 9, scope: !4341)
!4426 = !DILocation(line: 1437, column: 13, scope: !4341)
!4427 = !DILocation(line: 1437, column: 11, scope: !4341)
!4428 = !DILocation(line: 1439, column: 17, scope: !4341)
!4429 = !DILocation(line: 1439, column: 24, scope: !4341)
!4430 = !DILocation(line: 1439, column: 30, scope: !4341)
!4431 = !DILocation(line: 1439, column: 22, scope: !4341)
!4432 = !DILocation(line: 1439, column: 34, scope: !4341)
!4433 = !DILocation(line: 1439, column: 32, scope: !4341)
!4434 = !DILocation(line: 1439, column: 14, scope: !4341)
!4435 = !DILocation(line: 1441, column: 7, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4341, file: !1, line: 1441, column: 7)
!4437 = !DILocation(line: 1441, column: 7, scope: !4341)
!4438 = !DILocation(line: 1442, column: 15, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 1441, column: 17)
!4440 = !DILocation(line: 1442, column: 28, scope: !4439)
!4441 = !DILocation(line: 1442, column: 34, scope: !4439)
!4442 = !DILocation(line: 1442, column: 51, scope: !4439)
!4443 = !DILocation(line: 1442, column: 49, scope: !4439)
!4444 = !DILocation(line: 1442, column: 45, scope: !4439)
!4445 = !DILocation(line: 1442, column: 4, scope: !4439)
!4446 = !DILocation(line: 1443, column: 3, scope: !4439)
!4447 = !DILocalVariable(name: "pixel_color_b", scope: !4448, file: !1, line: 1445, type: !66)
!4448 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 1444, column: 8)
!4449 = !DILocation(line: 1445, column: 8, scope: !4448)
!4450 = !DILocation(line: 1445, column: 26, scope: !4448)
!4451 = !DILocation(line: 1445, column: 32, scope: !4448)
!4452 = !DILocation(line: 1445, column: 39, scope: !4448)
!4453 = !DILocation(line: 1445, column: 37, scope: !4448)
!4454 = !DILocation(line: 1445, column: 24, scope: !4448)
!4455 = !DILocation(line: 1446, column: 24, scope: !4448)
!4456 = !DILocation(line: 1446, column: 37, scope: !4448)
!4457 = !DILocation(line: 1446, column: 4, scope: !4448)
!4458 = !DILocation(line: 1449, column: 18, scope: !4341)
!4459 = !DILocation(line: 1449, column: 25, scope: !4341)
!4460 = !DILocation(line: 1449, column: 3, scope: !4341)
!4461 = !DILocation(line: 1450, column: 3, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !1, line: 1450, column: 3)
!4463 = distinct !DILexicalBlock(scope: !4341, file: !1, line: 1450, column: 3)
!4464 = !DILocation(line: 1452, column: 7, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4341, file: !1, line: 1452, column: 7)
!4466 = !DILocation(line: 1452, column: 7, scope: !4341)
!4467 = !DILocation(line: 1453, column: 4, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4465, file: !1, line: 1452, column: 17)
!4469 = !DILocation(line: 1453, column: 31, scope: !4468)
!4470 = !DILocation(line: 1453, column: 12, scope: !4468)
!4471 = !DILocation(line: 1453, column: 11, scope: !4468)
!4472 = !DILocation(line: 1454, column: 19, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4468, file: !1, line: 1453, column: 39)
!4474 = !DILocation(line: 1454, column: 26, scope: !4473)
!4475 = !DILocation(line: 1454, column: 5, scope: !4473)
!4476 = !DILocation(line: 1456, column: 27, scope: !4473)
!4477 = !DILocation(line: 1456, column: 33, scope: !4473)
!4478 = !DILocation(line: 1456, column: 51, scope: !4473)
!4479 = !DILocation(line: 1456, column: 48, scope: !4473)
!4480 = !DILocation(line: 1456, column: 44, scope: !4473)
!4481 = !DILocation(line: 1457, column: 27, scope: !4473)
!4482 = !DILocation(line: 1457, column: 33, scope: !4473)
!4483 = !DILocation(line: 1457, column: 51, scope: !4473)
!4484 = !DILocation(line: 1457, column: 48, scope: !4473)
!4485 = !DILocation(line: 1457, column: 44, scope: !4473)
!4486 = !DILocation(line: 1458, column: 27, scope: !4473)
!4487 = !DILocation(line: 1458, column: 36, scope: !4473)
!4488 = !DILocation(line: 1458, column: 40, scope: !4473)
!4489 = !DILocation(line: 1456, column: 5, scope: !4473)
!4490 = !DILocation(line: 1461, column: 12, scope: !4473)
!4491 = !DILocation(line: 1461, column: 25, scope: !4473)
!4492 = !DILocation(line: 1461, column: 23, scope: !4473)
!4493 = !DILocation(line: 1461, column: 10, scope: !4473)
!4494 = !DILocation(line: 1462, column: 12, scope: !4473)
!4495 = !DILocation(line: 1462, column: 25, scope: !4473)
!4496 = !DILocation(line: 1462, column: 23, scope: !4473)
!4497 = !DILocation(line: 1462, column: 10, scope: !4473)
!4498 = !DILocation(line: 1464, column: 35, scope: !4473)
!4499 = !DILocation(line: 1464, column: 40, scope: !4473)
!4500 = !DILocation(line: 1464, column: 45, scope: !4473)
!4501 = !DILocation(line: 1464, column: 50, scope: !4473)
!4502 = !DILocation(line: 1464, column: 55, scope: !4473)
!4503 = !DILocation(line: 1464, column: 61, scope: !4473)
!4504 = !DILocation(line: 1464, column: 68, scope: !4473)
!4505 = !DILocation(line: 1464, column: 77, scope: !4473)
!4506 = !DILocation(line: 1464, column: 90, scope: !4473)
!4507 = !DILocation(line: 1464, column: 5, scope: !4473)
!4508 = !DILocation(line: 1465, column: 35, scope: !4473)
!4509 = !DILocation(line: 1465, column: 40, scope: !4473)
!4510 = !DILocation(line: 1465, column: 45, scope: !4473)
!4511 = !DILocation(line: 1465, column: 51, scope: !4473)
!4512 = !DILocation(line: 1465, column: 57, scope: !4473)
!4513 = !DILocation(line: 1465, column: 64, scope: !4473)
!4514 = !DILocation(line: 1465, column: 73, scope: !4473)
!4515 = !DILocation(line: 1465, column: 86, scope: !4473)
!4516 = !DILocation(line: 1465, column: 5, scope: !4473)
!4517 = !DILocation(line: 1466, column: 35, scope: !4473)
!4518 = !DILocation(line: 1466, column: 40, scope: !4473)
!4519 = !DILocation(line: 1466, column: 45, scope: !4473)
!4520 = !DILocation(line: 1466, column: 50, scope: !4473)
!4521 = !DILocation(line: 1466, column: 55, scope: !4473)
!4522 = !DILocation(line: 1466, column: 61, scope: !4473)
!4523 = !DILocation(line: 1466, column: 68, scope: !4473)
!4524 = !DILocation(line: 1466, column: 77, scope: !4473)
!4525 = !DILocation(line: 1466, column: 90, scope: !4473)
!4526 = !DILocation(line: 1466, column: 5, scope: !4473)
!4527 = !DILocation(line: 1467, column: 35, scope: !4473)
!4528 = !DILocation(line: 1467, column: 41, scope: !4473)
!4529 = !DILocation(line: 1467, column: 46, scope: !4473)
!4530 = !DILocation(line: 1467, column: 51, scope: !4473)
!4531 = !DILocation(line: 1467, column: 57, scope: !4473)
!4532 = !DILocation(line: 1467, column: 64, scope: !4473)
!4533 = !DILocation(line: 1467, column: 73, scope: !4473)
!4534 = !DILocation(line: 1467, column: 86, scope: !4473)
!4535 = !DILocation(line: 1467, column: 5, scope: !4473)
!4536 = !DILocation(line: 1468, column: 35, scope: !4473)
!4537 = !DILocation(line: 1468, column: 41, scope: !4473)
!4538 = !DILocation(line: 1468, column: 46, scope: !4473)
!4539 = !DILocation(line: 1468, column: 51, scope: !4473)
!4540 = !DILocation(line: 1468, column: 57, scope: !4473)
!4541 = !DILocation(line: 1468, column: 64, scope: !4473)
!4542 = !DILocation(line: 1468, column: 73, scope: !4473)
!4543 = !DILocation(line: 1468, column: 86, scope: !4473)
!4544 = !DILocation(line: 1468, column: 5, scope: !4473)
!4545 = !DILocation(line: 1469, column: 35, scope: !4473)
!4546 = !DILocation(line: 1469, column: 40, scope: !4473)
!4547 = !DILocation(line: 1469, column: 45, scope: !4473)
!4548 = !DILocation(line: 1469, column: 50, scope: !4473)
!4549 = !DILocation(line: 1469, column: 55, scope: !4473)
!4550 = !DILocation(line: 1469, column: 61, scope: !4473)
!4551 = !DILocation(line: 1469, column: 68, scope: !4473)
!4552 = !DILocation(line: 1469, column: 77, scope: !4473)
!4553 = !DILocation(line: 1469, column: 90, scope: !4473)
!4554 = !DILocation(line: 1469, column: 5, scope: !4473)
!4555 = !DILocation(line: 1470, column: 35, scope: !4473)
!4556 = !DILocation(line: 1470, column: 40, scope: !4473)
!4557 = !DILocation(line: 1470, column: 45, scope: !4473)
!4558 = !DILocation(line: 1470, column: 51, scope: !4473)
!4559 = !DILocation(line: 1470, column: 57, scope: !4473)
!4560 = !DILocation(line: 1470, column: 64, scope: !4473)
!4561 = !DILocation(line: 1470, column: 73, scope: !4473)
!4562 = !DILocation(line: 1470, column: 86, scope: !4473)
!4563 = !DILocation(line: 1470, column: 5, scope: !4473)
!4564 = !DILocation(line: 1471, column: 35, scope: !4473)
!4565 = !DILocation(line: 1471, column: 40, scope: !4473)
!4566 = !DILocation(line: 1471, column: 45, scope: !4473)
!4567 = !DILocation(line: 1471, column: 50, scope: !4473)
!4568 = !DILocation(line: 1471, column: 55, scope: !4473)
!4569 = !DILocation(line: 1471, column: 61, scope: !4473)
!4570 = !DILocation(line: 1471, column: 68, scope: !4473)
!4571 = !DILocation(line: 1471, column: 77, scope: !4473)
!4572 = !DILocation(line: 1471, column: 90, scope: !4473)
!4573 = !DILocation(line: 1471, column: 5, scope: !4473)
!4574 = !DILocation(line: 1473, column: 9, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4473, file: !1, line: 1473, column: 9)
!4576 = !DILocation(line: 1473, column: 16, scope: !4575)
!4577 = !DILocation(line: 1473, column: 14, scope: !4575)
!4578 = !DILocation(line: 1473, column: 9, scope: !4473)
!4579 = !DILocation(line: 1474, column: 13, scope: !4575)
!4580 = !DILocation(line: 1474, column: 11, scope: !4575)
!4581 = !DILocation(line: 1474, column: 6, scope: !4575)
!4582 = !DILocation(line: 1475, column: 9, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4473, file: !1, line: 1475, column: 9)
!4584 = !DILocation(line: 1475, column: 16, scope: !4583)
!4585 = !DILocation(line: 1475, column: 14, scope: !4583)
!4586 = !DILocation(line: 1475, column: 9, scope: !4473)
!4587 = !DILocation(line: 1476, column: 13, scope: !4583)
!4588 = !DILocation(line: 1476, column: 11, scope: !4583)
!4589 = !DILocation(line: 1476, column: 6, scope: !4583)
!4590 = !DILocation(line: 1477, column: 9, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4473, file: !1, line: 1477, column: 9)
!4592 = !DILocation(line: 1477, column: 16, scope: !4591)
!4593 = !DILocation(line: 1477, column: 14, scope: !4591)
!4594 = !DILocation(line: 1477, column: 9, scope: !4473)
!4595 = !DILocation(line: 1478, column: 13, scope: !4591)
!4596 = !DILocation(line: 1478, column: 11, scope: !4591)
!4597 = !DILocation(line: 1478, column: 6, scope: !4591)
!4598 = !DILocation(line: 1479, column: 9, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4473, file: !1, line: 1479, column: 9)
!4600 = !DILocation(line: 1479, column: 16, scope: !4599)
!4601 = !DILocation(line: 1479, column: 14, scope: !4599)
!4602 = !DILocation(line: 1479, column: 9, scope: !4473)
!4603 = !DILocation(line: 1480, column: 13, scope: !4599)
!4604 = !DILocation(line: 1480, column: 11, scope: !4599)
!4605 = !DILocation(line: 1480, column: 6, scope: !4599)
!4606 = distinct !{!4606, !4467, !4607}
!4607 = !DILocation(line: 1481, column: 4, scope: !4468)
!4608 = !DILocation(line: 1482, column: 3, scope: !4468)
!4609 = !DILocation(line: 1484, column: 4, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4465, file: !1, line: 1483, column: 8)
!4611 = !DILocation(line: 1484, column: 31, scope: !4610)
!4612 = !DILocation(line: 1484, column: 12, scope: !4610)
!4613 = !DILocation(line: 1484, column: 11, scope: !4610)
!4614 = !DILocation(line: 1485, column: 19, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4610, file: !1, line: 1484, column: 39)
!4616 = !DILocation(line: 1485, column: 26, scope: !4615)
!4617 = !DILocation(line: 1485, column: 5, scope: !4615)
!4618 = !DILocation(line: 1487, column: 44, scope: !4615)
!4619 = !DILocation(line: 1487, column: 50, scope: !4615)
!4620 = !DILocation(line: 1487, column: 57, scope: !4615)
!4621 = !DILocation(line: 1487, column: 55, scope: !4615)
!4622 = !DILocation(line: 1487, column: 26, scope: !4615)
!4623 = !DILocation(line: 1488, column: 44, scope: !4615)
!4624 = !DILocation(line: 1488, column: 50, scope: !4615)
!4625 = !DILocation(line: 1488, column: 57, scope: !4615)
!4626 = !DILocation(line: 1488, column: 55, scope: !4615)
!4627 = !DILocation(line: 1488, column: 26, scope: !4615)
!4628 = !DILocation(line: 1489, column: 26, scope: !4615)
!4629 = !DILocation(line: 1489, column: 53, scope: !4615)
!4630 = !DILocation(line: 1489, column: 57, scope: !4615)
!4631 = !DILocation(line: 1487, column: 5, scope: !4615)
!4632 = !DILocation(line: 1492, column: 12, scope: !4615)
!4633 = !DILocation(line: 1492, column: 25, scope: !4615)
!4634 = !DILocation(line: 1492, column: 23, scope: !4615)
!4635 = !DILocation(line: 1492, column: 10, scope: !4615)
!4636 = !DILocation(line: 1493, column: 12, scope: !4615)
!4637 = !DILocation(line: 1493, column: 25, scope: !4615)
!4638 = !DILocation(line: 1493, column: 23, scope: !4615)
!4639 = !DILocation(line: 1493, column: 10, scope: !4615)
!4640 = !DILocation(line: 1495, column: 34, scope: !4615)
!4641 = !DILocation(line: 1495, column: 39, scope: !4615)
!4642 = !DILocation(line: 1495, column: 44, scope: !4615)
!4643 = !DILocation(line: 1495, column: 49, scope: !4615)
!4644 = !DILocation(line: 1495, column: 54, scope: !4615)
!4645 = !DILocation(line: 1495, column: 60, scope: !4615)
!4646 = !DILocation(line: 1495, column: 67, scope: !4615)
!4647 = !DILocation(line: 1495, column: 76, scope: !4615)
!4648 = !DILocation(line: 1495, column: 89, scope: !4615)
!4649 = !DILocation(line: 1495, column: 5, scope: !4615)
!4650 = !DILocation(line: 1496, column: 34, scope: !4615)
!4651 = !DILocation(line: 1496, column: 39, scope: !4615)
!4652 = !DILocation(line: 1496, column: 44, scope: !4615)
!4653 = !DILocation(line: 1496, column: 50, scope: !4615)
!4654 = !DILocation(line: 1496, column: 56, scope: !4615)
!4655 = !DILocation(line: 1496, column: 63, scope: !4615)
!4656 = !DILocation(line: 1496, column: 72, scope: !4615)
!4657 = !DILocation(line: 1496, column: 85, scope: !4615)
!4658 = !DILocation(line: 1496, column: 5, scope: !4615)
!4659 = !DILocation(line: 1497, column: 34, scope: !4615)
!4660 = !DILocation(line: 1497, column: 39, scope: !4615)
!4661 = !DILocation(line: 1497, column: 44, scope: !4615)
!4662 = !DILocation(line: 1497, column: 49, scope: !4615)
!4663 = !DILocation(line: 1497, column: 54, scope: !4615)
!4664 = !DILocation(line: 1497, column: 60, scope: !4615)
!4665 = !DILocation(line: 1497, column: 67, scope: !4615)
!4666 = !DILocation(line: 1497, column: 76, scope: !4615)
!4667 = !DILocation(line: 1497, column: 89, scope: !4615)
!4668 = !DILocation(line: 1497, column: 5, scope: !4615)
!4669 = !DILocation(line: 1498, column: 34, scope: !4615)
!4670 = !DILocation(line: 1498, column: 40, scope: !4615)
!4671 = !DILocation(line: 1498, column: 45, scope: !4615)
!4672 = !DILocation(line: 1498, column: 50, scope: !4615)
!4673 = !DILocation(line: 1498, column: 56, scope: !4615)
!4674 = !DILocation(line: 1498, column: 63, scope: !4615)
!4675 = !DILocation(line: 1498, column: 72, scope: !4615)
!4676 = !DILocation(line: 1498, column: 85, scope: !4615)
!4677 = !DILocation(line: 1498, column: 5, scope: !4615)
!4678 = !DILocation(line: 1499, column: 34, scope: !4615)
!4679 = !DILocation(line: 1499, column: 40, scope: !4615)
!4680 = !DILocation(line: 1499, column: 45, scope: !4615)
!4681 = !DILocation(line: 1499, column: 50, scope: !4615)
!4682 = !DILocation(line: 1499, column: 56, scope: !4615)
!4683 = !DILocation(line: 1499, column: 63, scope: !4615)
!4684 = !DILocation(line: 1499, column: 72, scope: !4615)
!4685 = !DILocation(line: 1499, column: 85, scope: !4615)
!4686 = !DILocation(line: 1499, column: 5, scope: !4615)
!4687 = !DILocation(line: 1500, column: 34, scope: !4615)
!4688 = !DILocation(line: 1500, column: 39, scope: !4615)
!4689 = !DILocation(line: 1500, column: 44, scope: !4615)
!4690 = !DILocation(line: 1500, column: 49, scope: !4615)
!4691 = !DILocation(line: 1500, column: 54, scope: !4615)
!4692 = !DILocation(line: 1500, column: 60, scope: !4615)
!4693 = !DILocation(line: 1500, column: 67, scope: !4615)
!4694 = !DILocation(line: 1500, column: 76, scope: !4615)
!4695 = !DILocation(line: 1500, column: 89, scope: !4615)
!4696 = !DILocation(line: 1500, column: 5, scope: !4615)
!4697 = !DILocation(line: 1501, column: 34, scope: !4615)
!4698 = !DILocation(line: 1501, column: 39, scope: !4615)
!4699 = !DILocation(line: 1501, column: 44, scope: !4615)
!4700 = !DILocation(line: 1501, column: 50, scope: !4615)
!4701 = !DILocation(line: 1501, column: 56, scope: !4615)
!4702 = !DILocation(line: 1501, column: 63, scope: !4615)
!4703 = !DILocation(line: 1501, column: 72, scope: !4615)
!4704 = !DILocation(line: 1501, column: 85, scope: !4615)
!4705 = !DILocation(line: 1501, column: 5, scope: !4615)
!4706 = !DILocation(line: 1502, column: 34, scope: !4615)
!4707 = !DILocation(line: 1502, column: 39, scope: !4615)
!4708 = !DILocation(line: 1502, column: 44, scope: !4615)
!4709 = !DILocation(line: 1502, column: 49, scope: !4615)
!4710 = !DILocation(line: 1502, column: 54, scope: !4615)
!4711 = !DILocation(line: 1502, column: 60, scope: !4615)
!4712 = !DILocation(line: 1502, column: 67, scope: !4615)
!4713 = !DILocation(line: 1502, column: 76, scope: !4615)
!4714 = !DILocation(line: 1502, column: 89, scope: !4615)
!4715 = !DILocation(line: 1502, column: 5, scope: !4615)
!4716 = !DILocation(line: 1504, column: 9, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 1504, column: 9)
!4718 = !DILocation(line: 1504, column: 16, scope: !4717)
!4719 = !DILocation(line: 1504, column: 14, scope: !4717)
!4720 = !DILocation(line: 1504, column: 9, scope: !4615)
!4721 = !DILocation(line: 1505, column: 13, scope: !4717)
!4722 = !DILocation(line: 1505, column: 11, scope: !4717)
!4723 = !DILocation(line: 1505, column: 6, scope: !4717)
!4724 = !DILocation(line: 1506, column: 9, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 1506, column: 9)
!4726 = !DILocation(line: 1506, column: 16, scope: !4725)
!4727 = !DILocation(line: 1506, column: 14, scope: !4725)
!4728 = !DILocation(line: 1506, column: 9, scope: !4615)
!4729 = !DILocation(line: 1507, column: 13, scope: !4725)
!4730 = !DILocation(line: 1507, column: 11, scope: !4725)
!4731 = !DILocation(line: 1507, column: 6, scope: !4725)
!4732 = !DILocation(line: 1508, column: 9, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 1508, column: 9)
!4734 = !DILocation(line: 1508, column: 16, scope: !4733)
!4735 = !DILocation(line: 1508, column: 14, scope: !4733)
!4736 = !DILocation(line: 1508, column: 9, scope: !4615)
!4737 = !DILocation(line: 1509, column: 13, scope: !4733)
!4738 = !DILocation(line: 1509, column: 11, scope: !4733)
!4739 = !DILocation(line: 1509, column: 6, scope: !4733)
!4740 = !DILocation(line: 1510, column: 9, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 1510, column: 9)
!4742 = !DILocation(line: 1510, column: 16, scope: !4741)
!4743 = !DILocation(line: 1510, column: 14, scope: !4741)
!4744 = !DILocation(line: 1510, column: 9, scope: !4615)
!4745 = !DILocation(line: 1511, column: 13, scope: !4741)
!4746 = !DILocation(line: 1511, column: 11, scope: !4741)
!4747 = !DILocation(line: 1511, column: 6, scope: !4741)
!4748 = distinct !{!4748, !4609, !4749}
!4749 = !DILocation(line: 1512, column: 4, scope: !4610)
!4750 = !DILocation(line: 1515, column: 3, scope: !4341)
!4751 = !DILocation(line: 1515, column: 13, scope: !4341)
!4752 = !DILocation(line: 1516, column: 18, scope: !4341)
!4753 = !DILocation(line: 1516, column: 3, scope: !4341)
!4754 = !DILocation(line: 1519, column: 24, scope: !4137)
!4755 = !DILocation(line: 1519, column: 30, scope: !4137)
!4756 = !DILocation(line: 1519, column: 35, scope: !4137)
!4757 = !DILocation(line: 1519, column: 2, scope: !4137)
!4758 = !DILocation(line: 1520, column: 2, scope: !4137)
!4759 = !DILocation(line: 1522, column: 25, scope: !4137)
!4760 = !DILocation(line: 1522, column: 30, scope: !4137)
!4761 = !DILocation(line: 1522, column: 2, scope: !4137)
!4762 = !DILocation(line: 1524, column: 24, scope: !4137)
!4763 = !DILocation(line: 1524, column: 49, scope: !4137)
!4764 = !DILocation(line: 1524, column: 2, scope: !4137)
!4765 = !DILocation(line: 1525, column: 1, scope: !4137)
!4766 = distinct !DISubprogram(name: "linearrgb_to_srgb_uchar3", scope: !4767, file: !4767, line: 65, type: !4768, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4767 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4768 = !DISubroutineType(types: !4769)
!4769 = !{null, !106, !2450}
!4770 = !DILocalVariable(name: "srgb", arg: 1, scope: !4766, file: !4767, line: 65, type: !106)
!4771 = !DILocation(line: 65, column: 53, scope: !4766)
!4772 = !DILocalVariable(name: "linear", arg: 2, scope: !4766, file: !4767, line: 65, type: !2450)
!4773 = !DILocation(line: 65, column: 74, scope: !4766)
!4774 = !DILocalVariable(name: "srgb_f", scope: !4766, file: !4767, line: 67, type: !231)
!4775 = !DILocation(line: 67, column: 8, scope: !4766)
!4776 = !DILocation(line: 69, column: 26, scope: !4766)
!4777 = !DILocation(line: 69, column: 34, scope: !4766)
!4778 = !DILocation(line: 69, column: 2, scope: !4766)
!4779 = !DILocation(line: 70, column: 2, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4766, file: !4767, line: 70, column: 2)
!4781 = !DILocation(line: 71, column: 1, scope: !4766)
!4782 = distinct !DISubprogram(name: "copy_v3_v3", scope: !2623, file: !2623, line: 64, type: !2624, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4783 = !DILocalVariable(name: "r", arg: 1, scope: !4782, file: !2623, line: 64, type: !238)
!4784 = !DILocation(line: 64, column: 31, scope: !4782)
!4785 = !DILocalVariable(name: "a", arg: 2, scope: !4782, file: !2623, line: 64, type: !2450)
!4786 = !DILocation(line: 64, column: 49, scope: !4782)
!4787 = !DILocation(line: 66, column: 9, scope: !4782)
!4788 = !DILocation(line: 66, column: 2, scope: !4782)
!4789 = !DILocation(line: 66, column: 7, scope: !4782)
!4790 = !DILocation(line: 67, column: 9, scope: !4782)
!4791 = !DILocation(line: 67, column: 2, scope: !4782)
!4792 = !DILocation(line: 67, column: 7, scope: !4782)
!4793 = !DILocation(line: 68, column: 9, scope: !4782)
!4794 = !DILocation(line: 68, column: 2, scope: !4782)
!4795 = !DILocation(line: 68, column: 7, scope: !4782)
!4796 = !DILocation(line: 69, column: 1, scope: !4782)
!4797 = distinct !DISubprogram(name: "blend_color_mix_float", scope: !4798, file: !4798, line: 630, type: !4799, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4798 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_blend_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4799 = !DISubroutineType(types: !4800)
!4800 = !{null, !238, !2450, !2450}
!4801 = !DILocalVariable(name: "dst", arg: 1, scope: !4797, file: !4798, line: 630, type: !238)
!4802 = !DILocation(line: 630, column: 42, scope: !4797)
!4803 = !DILocalVariable(name: "src1", arg: 2, scope: !4797, file: !4798, line: 630, type: !2450)
!4804 = !DILocation(line: 630, column: 62, scope: !4797)
!4805 = !DILocalVariable(name: "src2", arg: 3, scope: !4797, file: !4798, line: 630, type: !2450)
!4806 = !DILocation(line: 630, column: 83, scope: !4797)
!4807 = !DILocation(line: 632, column: 6, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4797, file: !4798, line: 632, column: 6)
!4809 = !DILocation(line: 632, column: 14, scope: !4808)
!4810 = !DILocation(line: 632, column: 6, scope: !4797)
!4811 = !DILocalVariable(name: "t", scope: !4812, file: !4798, line: 634, type: !2451)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !4798, line: 632, column: 23)
!4813 = !DILocation(line: 634, column: 15, scope: !4812)
!4814 = !DILocation(line: 634, column: 19, scope: !4812)
!4815 = !DILocalVariable(name: "mt", scope: !4812, file: !4798, line: 635, type: !2451)
!4816 = !DILocation(line: 635, column: 15, scope: !4812)
!4817 = !DILocation(line: 635, column: 27, scope: !4812)
!4818 = !DILocation(line: 635, column: 25, scope: !4812)
!4819 = !DILocation(line: 637, column: 12, scope: !4812)
!4820 = !DILocation(line: 637, column: 17, scope: !4812)
!4821 = !DILocation(line: 637, column: 15, scope: !4812)
!4822 = !DILocation(line: 637, column: 27, scope: !4812)
!4823 = !DILocation(line: 637, column: 25, scope: !4812)
!4824 = !DILocation(line: 637, column: 3, scope: !4812)
!4825 = !DILocation(line: 637, column: 10, scope: !4812)
!4826 = !DILocation(line: 638, column: 12, scope: !4812)
!4827 = !DILocation(line: 638, column: 17, scope: !4812)
!4828 = !DILocation(line: 638, column: 15, scope: !4812)
!4829 = !DILocation(line: 638, column: 27, scope: !4812)
!4830 = !DILocation(line: 638, column: 25, scope: !4812)
!4831 = !DILocation(line: 638, column: 3, scope: !4812)
!4832 = !DILocation(line: 638, column: 10, scope: !4812)
!4833 = !DILocation(line: 639, column: 12, scope: !4812)
!4834 = !DILocation(line: 639, column: 17, scope: !4812)
!4835 = !DILocation(line: 639, column: 15, scope: !4812)
!4836 = !DILocation(line: 639, column: 27, scope: !4812)
!4837 = !DILocation(line: 639, column: 25, scope: !4812)
!4838 = !DILocation(line: 639, column: 3, scope: !4812)
!4839 = !DILocation(line: 639, column: 10, scope: !4812)
!4840 = !DILocation(line: 640, column: 12, scope: !4812)
!4841 = !DILocation(line: 640, column: 17, scope: !4812)
!4842 = !DILocation(line: 640, column: 15, scope: !4812)
!4843 = !DILocation(line: 640, column: 27, scope: !4812)
!4844 = !DILocation(line: 640, column: 25, scope: !4812)
!4845 = !DILocation(line: 640, column: 3, scope: !4812)
!4846 = !DILocation(line: 640, column: 10, scope: !4812)
!4847 = !DILocation(line: 641, column: 2, scope: !4812)
!4848 = !DILocation(line: 644, column: 14, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4808, file: !4798, line: 642, column: 7)
!4850 = !DILocation(line: 644, column: 19, scope: !4849)
!4851 = !DILocation(line: 644, column: 3, scope: !4849)
!4852 = !DILocation(line: 646, column: 1, scope: !4797)
!4853 = distinct !DISubprogram(name: "blend_color_mix_byte", scope: !4798, file: !4798, line: 55, type: !4854, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{null, !106, !4856, !4856}
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!4857 = !DILocalVariable(name: "dst", arg: 1, scope: !4853, file: !4798, line: 55, type: !106)
!4858 = !DILocation(line: 55, column: 49, scope: !4853)
!4859 = !DILocalVariable(name: "src1", arg: 2, scope: !4853, file: !4798, line: 55, type: !4856)
!4860 = !DILocation(line: 55, column: 77, scope: !4853)
!4861 = !DILocalVariable(name: "src2", arg: 3, scope: !4853, file: !4798, line: 55, type: !4856)
!4862 = !DILocation(line: 55, column: 106, scope: !4853)
!4863 = !DILocation(line: 57, column: 6, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4853, file: !4798, line: 57, column: 6)
!4865 = !DILocation(line: 57, column: 14, scope: !4864)
!4866 = !DILocation(line: 57, column: 6, scope: !4853)
!4867 = !DILocalVariable(name: "t", scope: !4868, file: !4798, line: 59, type: !2785)
!4868 = distinct !DILexicalBlock(scope: !4864, file: !4798, line: 57, column: 20)
!4869 = !DILocation(line: 59, column: 13, scope: !4868)
!4870 = !DILocation(line: 59, column: 17, scope: !4868)
!4871 = !DILocalVariable(name: "mt", scope: !4868, file: !4798, line: 60, type: !2785)
!4872 = !DILocation(line: 60, column: 13, scope: !4868)
!4873 = !DILocation(line: 60, column: 24, scope: !4868)
!4874 = !DILocation(line: 60, column: 22, scope: !4868)
!4875 = !DILocalVariable(name: "tmp", scope: !4868, file: !4798, line: 61, type: !4876)
!4876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !66, size: 128, elements: !408)
!4877 = !DILocation(line: 61, column: 7, scope: !4868)
!4878 = !DILocation(line: 63, column: 13, scope: !4868)
!4879 = !DILocation(line: 63, column: 18, scope: !4868)
!4880 = !DILocation(line: 63, column: 16, scope: !4868)
!4881 = !DILocation(line: 63, column: 28, scope: !4868)
!4882 = !DILocation(line: 63, column: 26, scope: !4868)
!4883 = !DILocation(line: 63, column: 40, scope: !4868)
!4884 = !DILocation(line: 63, column: 42, scope: !4868)
!4885 = !DILocation(line: 63, column: 50, scope: !4868)
!4886 = !DILocation(line: 63, column: 48, scope: !4868)
!4887 = !DILocation(line: 63, column: 37, scope: !4868)
!4888 = !DILocation(line: 63, column: 3, scope: !4868)
!4889 = !DILocation(line: 63, column: 10, scope: !4868)
!4890 = !DILocation(line: 64, column: 13, scope: !4868)
!4891 = !DILocation(line: 64, column: 18, scope: !4868)
!4892 = !DILocation(line: 64, column: 16, scope: !4868)
!4893 = !DILocation(line: 64, column: 28, scope: !4868)
!4894 = !DILocation(line: 64, column: 26, scope: !4868)
!4895 = !DILocation(line: 64, column: 40, scope: !4868)
!4896 = !DILocation(line: 64, column: 42, scope: !4868)
!4897 = !DILocation(line: 64, column: 50, scope: !4868)
!4898 = !DILocation(line: 64, column: 48, scope: !4868)
!4899 = !DILocation(line: 64, column: 37, scope: !4868)
!4900 = !DILocation(line: 64, column: 3, scope: !4868)
!4901 = !DILocation(line: 64, column: 10, scope: !4868)
!4902 = !DILocation(line: 65, column: 13, scope: !4868)
!4903 = !DILocation(line: 65, column: 18, scope: !4868)
!4904 = !DILocation(line: 65, column: 16, scope: !4868)
!4905 = !DILocation(line: 65, column: 28, scope: !4868)
!4906 = !DILocation(line: 65, column: 26, scope: !4868)
!4907 = !DILocation(line: 65, column: 40, scope: !4868)
!4908 = !DILocation(line: 65, column: 42, scope: !4868)
!4909 = !DILocation(line: 65, column: 50, scope: !4868)
!4910 = !DILocation(line: 65, column: 48, scope: !4868)
!4911 = !DILocation(line: 65, column: 37, scope: !4868)
!4912 = !DILocation(line: 65, column: 3, scope: !4868)
!4913 = !DILocation(line: 65, column: 10, scope: !4868)
!4914 = !DILocation(line: 66, column: 13, scope: !4868)
!4915 = !DILocation(line: 66, column: 18, scope: !4868)
!4916 = !DILocation(line: 66, column: 16, scope: !4868)
!4917 = !DILocation(line: 66, column: 30, scope: !4868)
!4918 = !DILocation(line: 66, column: 32, scope: !4868)
!4919 = !DILocation(line: 66, column: 27, scope: !4868)
!4920 = !DILocation(line: 66, column: 3, scope: !4868)
!4921 = !DILocation(line: 66, column: 10, scope: !4868)
!4922 = !DILocation(line: 68, column: 42, scope: !4868)
!4923 = !DILocation(line: 68, column: 50, scope: !4868)
!4924 = !DILocation(line: 68, column: 27, scope: !4868)
!4925 = !DILocation(line: 68, column: 12, scope: !4868)
!4926 = !DILocation(line: 68, column: 3, scope: !4868)
!4927 = !DILocation(line: 68, column: 10, scope: !4868)
!4928 = !DILocation(line: 69, column: 42, scope: !4868)
!4929 = !DILocation(line: 69, column: 50, scope: !4868)
!4930 = !DILocation(line: 69, column: 27, scope: !4868)
!4931 = !DILocation(line: 69, column: 12, scope: !4868)
!4932 = !DILocation(line: 69, column: 3, scope: !4868)
!4933 = !DILocation(line: 69, column: 10, scope: !4868)
!4934 = !DILocation(line: 70, column: 42, scope: !4868)
!4935 = !DILocation(line: 70, column: 50, scope: !4868)
!4936 = !DILocation(line: 70, column: 27, scope: !4868)
!4937 = !DILocation(line: 70, column: 12, scope: !4868)
!4938 = !DILocation(line: 70, column: 3, scope: !4868)
!4939 = !DILocation(line: 70, column: 10, scope: !4868)
!4940 = !DILocation(line: 71, column: 42, scope: !4868)
!4941 = !DILocation(line: 71, column: 27, scope: !4868)
!4942 = !DILocation(line: 71, column: 12, scope: !4868)
!4943 = !DILocation(line: 71, column: 3, scope: !4868)
!4944 = !DILocation(line: 71, column: 10, scope: !4868)
!4945 = !DILocation(line: 72, column: 2, scope: !4868)
!4946 = !DILocation(line: 75, column: 27, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4864, file: !4798, line: 73, column: 7)
!4948 = !DILocation(line: 75, column: 40, scope: !4947)
!4949 = !DILocation(line: 75, column: 3, scope: !4947)
!4950 = !DILocation(line: 77, column: 1, scope: !4853)
!4951 = distinct !DISubprogram(name: "copy_v4_v4", scope: !2623, file: !2623, line: 71, type: !2624, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4952 = !DILocalVariable(name: "r", arg: 1, scope: !4951, file: !2623, line: 71, type: !238)
!4953 = !DILocation(line: 71, column: 31, scope: !4951)
!4954 = !DILocalVariable(name: "a", arg: 2, scope: !4951, file: !2623, line: 71, type: !2450)
!4955 = !DILocation(line: 71, column: 49, scope: !4951)
!4956 = !DILocation(line: 73, column: 9, scope: !4951)
!4957 = !DILocation(line: 73, column: 2, scope: !4951)
!4958 = !DILocation(line: 73, column: 7, scope: !4951)
!4959 = !DILocation(line: 74, column: 9, scope: !4951)
!4960 = !DILocation(line: 74, column: 2, scope: !4951)
!4961 = !DILocation(line: 74, column: 7, scope: !4951)
!4962 = !DILocation(line: 75, column: 9, scope: !4951)
!4963 = !DILocation(line: 75, column: 2, scope: !4951)
!4964 = !DILocation(line: 75, column: 7, scope: !4951)
!4965 = !DILocation(line: 76, column: 9, scope: !4951)
!4966 = !DILocation(line: 76, column: 2, scope: !4951)
!4967 = !DILocation(line: 76, column: 7, scope: !4951)
!4968 = !DILocation(line: 77, column: 1, scope: !4951)
!4969 = distinct !DISubprogram(name: "paint_2d_fill_add_pixel_float", scope: !1, file: !1, line: 1331, type: !4970, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{null, !2785, !2785, !2141, !4342, !110, !2450, !113}
!4972 = !DILocalVariable(name: "x_px", arg: 1, scope: !4969, file: !1, line: 1332, type: !2785)
!4973 = !DILocation(line: 1332, column: 19, scope: !4969)
!4974 = !DILocalVariable(name: "y_px", arg: 2, scope: !4969, file: !1, line: 1332, type: !2785)
!4975 = !DILocation(line: 1332, column: 35, scope: !4969)
!4976 = !DILocalVariable(name: "ibuf", arg: 3, scope: !4969, file: !1, line: 1332, type: !2141)
!4977 = !DILocation(line: 1332, column: 48, scope: !4969)
!4978 = !DILocalVariable(name: "stack", arg: 4, scope: !4969, file: !1, line: 1332, type: !4342)
!4979 = !DILocation(line: 1332, column: 65, scope: !4969)
!4980 = !DILocalVariable(name: "touched", arg: 5, scope: !4969, file: !1, line: 1332, type: !110)
!4981 = !DILocation(line: 1332, column: 84, scope: !4969)
!4982 = !DILocalVariable(name: "color", arg: 6, scope: !4969, file: !1, line: 1333, type: !2450)
!4983 = !DILocation(line: 1333, column: 21, scope: !4969)
!4984 = !DILocalVariable(name: "threshold_sq", arg: 7, scope: !4969, file: !1, line: 1333, type: !113)
!4985 = !DILocation(line: 1333, column: 37, scope: !4969)
!4986 = !DILocalVariable(name: "coordinate", scope: !4969, file: !1, line: 1335, type: !66)
!4987 = !DILocation(line: 1335, column: 6, scope: !4969)
!4988 = !DILocation(line: 1337, column: 6, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4969, file: !1, line: 1337, column: 6)
!4990 = !DILocation(line: 1337, column: 14, scope: !4989)
!4991 = !DILocation(line: 1337, column: 20, scope: !4989)
!4992 = !DILocation(line: 1337, column: 11, scope: !4989)
!4993 = !DILocation(line: 1337, column: 22, scope: !4989)
!4994 = !DILocation(line: 1337, column: 25, scope: !4989)
!4995 = !DILocation(line: 1337, column: 30, scope: !4989)
!4996 = !DILocation(line: 1337, column: 34, scope: !4989)
!4997 = !DILocation(line: 1337, column: 37, scope: !4989)
!4998 = !DILocation(line: 1337, column: 45, scope: !4989)
!4999 = !DILocation(line: 1337, column: 51, scope: !4989)
!5000 = !DILocation(line: 1337, column: 42, scope: !4989)
!5001 = !DILocation(line: 1337, column: 53, scope: !4989)
!5002 = !DILocation(line: 1337, column: 56, scope: !4989)
!5003 = !DILocation(line: 1337, column: 61, scope: !4989)
!5004 = !DILocation(line: 1337, column: 6, scope: !4969)
!5005 = !DILocation(line: 1338, column: 3, scope: !4989)
!5006 = !DILocation(line: 1340, column: 15, scope: !4969)
!5007 = !DILocation(line: 1340, column: 22, scope: !4969)
!5008 = !DILocation(line: 1340, column: 28, scope: !4969)
!5009 = !DILocation(line: 1340, column: 20, scope: !4969)
!5010 = !DILocation(line: 1340, column: 32, scope: !4969)
!5011 = !DILocation(line: 1340, column: 30, scope: !4969)
!5012 = !DILocation(line: 1340, column: 13, scope: !4969)
!5013 = !DILocation(line: 1342, column: 7, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4969, file: !1, line: 1342, column: 6)
!5015 = !DILocation(line: 1342, column: 6, scope: !4969)
!5016 = !DILocation(line: 1343, column: 32, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5018, file: !1, line: 1343, column: 7)
!5018 = distinct !DILexicalBlock(scope: !5014, file: !1, line: 1342, column: 45)
!5019 = !DILocation(line: 1343, column: 38, scope: !5017)
!5020 = !DILocation(line: 1343, column: 55, scope: !5017)
!5021 = !DILocation(line: 1343, column: 53, scope: !5017)
!5022 = !DILocation(line: 1343, column: 49, scope: !5017)
!5023 = !DILocation(line: 1343, column: 67, scope: !5017)
!5024 = !DILocation(line: 1343, column: 74, scope: !5017)
!5025 = !DILocation(line: 1343, column: 7, scope: !5017)
!5026 = !DILocation(line: 1343, column: 7, scope: !5018)
!5027 = !DILocation(line: 1344, column: 19, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5017, file: !1, line: 1343, column: 89)
!5029 = !DILocation(line: 1344, column: 26, scope: !5028)
!5030 = !DILocation(line: 1344, column: 4, scope: !5028)
!5031 = !DILocation(line: 1345, column: 3, scope: !5028)
!5032 = !DILocation(line: 1346, column: 3, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5034, file: !1, line: 1346, column: 3)
!5034 = distinct !DILexicalBlock(scope: !5018, file: !1, line: 1346, column: 3)
!5035 = !DILocation(line: 1347, column: 2, scope: !5018)
!5036 = !DILocation(line: 1348, column: 1, scope: !4969)
!5037 = distinct !DISubprogram(name: "paint_2d_fill_add_pixel_byte", scope: !1, file: !1, line: 1308, type: !4970, scopeLine: 1311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5038 = !DILocalVariable(name: "x_px", arg: 1, scope: !5037, file: !1, line: 1309, type: !2785)
!5039 = !DILocation(line: 1309, column: 19, scope: !5037)
!5040 = !DILocalVariable(name: "y_px", arg: 2, scope: !5037, file: !1, line: 1309, type: !2785)
!5041 = !DILocation(line: 1309, column: 35, scope: !5037)
!5042 = !DILocalVariable(name: "ibuf", arg: 3, scope: !5037, file: !1, line: 1309, type: !2141)
!5043 = !DILocation(line: 1309, column: 48, scope: !5037)
!5044 = !DILocalVariable(name: "stack", arg: 4, scope: !5037, file: !1, line: 1309, type: !4342)
!5045 = !DILocation(line: 1309, column: 65, scope: !5037)
!5046 = !DILocalVariable(name: "touched", arg: 5, scope: !5037, file: !1, line: 1309, type: !110)
!5047 = !DILocation(line: 1309, column: 84, scope: !5037)
!5048 = !DILocalVariable(name: "color", arg: 6, scope: !5037, file: !1, line: 1310, type: !2450)
!5049 = !DILocation(line: 1310, column: 21, scope: !5037)
!5050 = !DILocalVariable(name: "threshold_sq", arg: 7, scope: !5037, file: !1, line: 1310, type: !113)
!5051 = !DILocation(line: 1310, column: 37, scope: !5037)
!5052 = !DILocalVariable(name: "coordinate", scope: !5037, file: !1, line: 1312, type: !66)
!5053 = !DILocation(line: 1312, column: 6, scope: !5037)
!5054 = !DILocation(line: 1314, column: 6, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5037, file: !1, line: 1314, column: 6)
!5056 = !DILocation(line: 1314, column: 14, scope: !5055)
!5057 = !DILocation(line: 1314, column: 20, scope: !5055)
!5058 = !DILocation(line: 1314, column: 11, scope: !5055)
!5059 = !DILocation(line: 1314, column: 22, scope: !5055)
!5060 = !DILocation(line: 1314, column: 25, scope: !5055)
!5061 = !DILocation(line: 1314, column: 30, scope: !5055)
!5062 = !DILocation(line: 1314, column: 34, scope: !5055)
!5063 = !DILocation(line: 1314, column: 37, scope: !5055)
!5064 = !DILocation(line: 1314, column: 45, scope: !5055)
!5065 = !DILocation(line: 1314, column: 51, scope: !5055)
!5066 = !DILocation(line: 1314, column: 42, scope: !5055)
!5067 = !DILocation(line: 1314, column: 53, scope: !5055)
!5068 = !DILocation(line: 1314, column: 56, scope: !5055)
!5069 = !DILocation(line: 1314, column: 61, scope: !5055)
!5070 = !DILocation(line: 1314, column: 6, scope: !5037)
!5071 = !DILocation(line: 1315, column: 3, scope: !5055)
!5072 = !DILocation(line: 1317, column: 15, scope: !5037)
!5073 = !DILocation(line: 1317, column: 22, scope: !5037)
!5074 = !DILocation(line: 1317, column: 28, scope: !5037)
!5075 = !DILocation(line: 1317, column: 20, scope: !5037)
!5076 = !DILocation(line: 1317, column: 32, scope: !5037)
!5077 = !DILocation(line: 1317, column: 30, scope: !5037)
!5078 = !DILocation(line: 1317, column: 13, scope: !5037)
!5079 = !DILocation(line: 1319, column: 7, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5037, file: !1, line: 1319, column: 6)
!5081 = !DILocation(line: 1319, column: 6, scope: !5037)
!5082 = !DILocalVariable(name: "color_f", scope: !5083, file: !1, line: 1320, type: !407)
!5083 = distinct !DILexicalBlock(scope: !5080, file: !1, line: 1319, column: 45)
!5084 = !DILocation(line: 1320, column: 9, scope: !5083)
!5085 = !DILocalVariable(name: "color_b", scope: !5083, file: !1, line: 1321, type: !106)
!5086 = !DILocation(line: 1321, column: 18, scope: !5083)
!5087 = !DILocation(line: 1321, column: 46, scope: !5083)
!5088 = !DILocation(line: 1321, column: 52, scope: !5083)
!5089 = !DILocation(line: 1321, column: 59, scope: !5083)
!5090 = !DILocation(line: 1321, column: 57, scope: !5083)
!5091 = !DILocation(line: 1321, column: 28, scope: !5083)
!5092 = !DILocation(line: 1322, column: 23, scope: !5083)
!5093 = !DILocation(line: 1322, column: 32, scope: !5083)
!5094 = !DILocation(line: 1322, column: 3, scope: !5083)
!5095 = !DILocation(line: 1324, column: 32, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5083, file: !1, line: 1324, column: 7)
!5097 = !DILocation(line: 1324, column: 41, scope: !5096)
!5098 = !DILocation(line: 1324, column: 48, scope: !5096)
!5099 = !DILocation(line: 1324, column: 7, scope: !5096)
!5100 = !DILocation(line: 1324, column: 7, scope: !5083)
!5101 = !DILocation(line: 1325, column: 19, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5096, file: !1, line: 1324, column: 63)
!5103 = !DILocation(line: 1325, column: 26, scope: !5102)
!5104 = !DILocation(line: 1325, column: 4, scope: !5102)
!5105 = !DILocation(line: 1326, column: 3, scope: !5102)
!5106 = !DILocation(line: 1327, column: 3, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5108, file: !1, line: 1327, column: 3)
!5108 = distinct !DILexicalBlock(scope: !5083, file: !1, line: 1327, column: 3)
!5109 = !DILocation(line: 1328, column: 2, scope: !5083)
!5110 = !DILocation(line: 1329, column: 1, scope: !5037)
!5111 = distinct !DISubprogram(name: "paint_2d_gradient_fill", scope: !1, file: !1, line: 1527, type: !5112, scopeLine: 1531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{null, !3946, !2119, !2450, !2450, !105}
!5114 = !DILocalVariable(name: "C", arg: 1, scope: !5111, file: !1, line: 1528, type: !3946)
!5115 = !DILocation(line: 1528, column: 25, scope: !5111)
!5116 = !DILocalVariable(name: "br", arg: 2, scope: !5111, file: !1, line: 1528, type: !2119)
!5117 = !DILocation(line: 1528, column: 35, scope: !5111)
!5118 = !DILocalVariable(name: "mouse_init", arg: 3, scope: !5111, file: !1, line: 1529, type: !2450)
!5119 = !DILocation(line: 1529, column: 21, scope: !5111)
!5120 = !DILocalVariable(name: "mouse_final", arg: 4, scope: !5111, file: !1, line: 1529, type: !2450)
!5121 = !DILocation(line: 1529, column: 48, scope: !5111)
!5122 = !DILocalVariable(name: "ps", arg: 5, scope: !5111, file: !1, line: 1530, type: !105)
!5123 = !DILocation(line: 1530, column: 15, scope: !5111)
!5124 = !DILocalVariable(name: "sima", scope: !5111, file: !1, line: 1532, type: !2151)
!5125 = !DILocation(line: 1532, column: 14, scope: !5111)
!5126 = !DILocation(line: 1532, column: 40, scope: !5111)
!5127 = !DILocation(line: 1532, column: 21, scope: !5111)
!5128 = !DILocalVariable(name: "ima", scope: !5111, file: !1, line: 1533, type: !2420)
!5129 = !DILocation(line: 1533, column: 9, scope: !5111)
!5130 = !DILocation(line: 1533, column: 15, scope: !5111)
!5131 = !DILocation(line: 1533, column: 21, scope: !5111)
!5132 = !DILocalVariable(name: "s", scope: !5111, file: !1, line: 1534, type: !115)
!5133 = !DILocation(line: 1534, column: 19, scope: !5111)
!5134 = !DILocation(line: 1534, column: 23, scope: !5111)
!5135 = !DILocalVariable(name: "ibuf", scope: !5111, file: !1, line: 1536, type: !2141)
!5136 = !DILocation(line: 1536, column: 9, scope: !5111)
!5137 = !DILocalVariable(name: "x_px", scope: !5111, file: !1, line: 1537, type: !66)
!5138 = !DILocation(line: 1537, column: 6, scope: !5111)
!5139 = !DILocalVariable(name: "y_px", scope: !5111, file: !1, line: 1537, type: !66)
!5140 = !DILocation(line: 1537, column: 12, scope: !5111)
!5141 = !DILocalVariable(name: "color_b", scope: !5111, file: !1, line: 1538, type: !5)
!5142 = !DILocation(line: 1538, column: 15, scope: !5111)
!5143 = !DILocalVariable(name: "color_f", scope: !5111, file: !1, line: 1539, type: !407)
!5144 = !DILocation(line: 1539, column: 8, scope: !5111)
!5145 = !DILocalVariable(name: "image_init", scope: !5111, file: !1, line: 1540, type: !526)
!5146 = !DILocation(line: 1540, column: 8, scope: !5111)
!5147 = !DILocalVariable(name: "image_final", scope: !5111, file: !1, line: 1540, type: !526)
!5148 = !DILocation(line: 1540, column: 23, scope: !5111)
!5149 = !DILocalVariable(name: "tangent", scope: !5111, file: !1, line: 1541, type: !526)
!5150 = !DILocation(line: 1541, column: 8, scope: !5111)
!5151 = !DILocalVariable(name: "line_len_sq_inv", scope: !5111, file: !1, line: 1542, type: !113)
!5152 = !DILocation(line: 1542, column: 8, scope: !5111)
!5153 = !DILocalVariable(name: "line_len", scope: !5111, file: !1, line: 1542, type: !113)
!5154 = !DILocation(line: 1542, column: 25, scope: !5111)
!5155 = !DILocalVariable(name: "do_float", scope: !5111, file: !1, line: 1544, type: !107)
!5156 = !DILocation(line: 1544, column: 7, scope: !5111)
!5157 = !DILocation(line: 1546, column: 7, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5111, file: !1, line: 1546, column: 6)
!5159 = !DILocation(line: 1546, column: 6, scope: !5111)
!5160 = !DILocation(line: 1547, column: 3, scope: !5158)
!5161 = !DILocation(line: 1549, column: 32, scope: !5111)
!5162 = !DILocation(line: 1549, column: 38, scope: !5111)
!5163 = !DILocation(line: 1549, column: 44, scope: !5111)
!5164 = !DILocation(line: 1549, column: 9, scope: !5111)
!5165 = !DILocation(line: 1549, column: 7, scope: !5111)
!5166 = !DILocation(line: 1551, column: 7, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5111, file: !1, line: 1551, column: 6)
!5168 = !DILocation(line: 1551, column: 6, scope: !5111)
!5169 = !DILocation(line: 1552, column: 3, scope: !5167)
!5170 = !DILocation(line: 1554, column: 27, scope: !5111)
!5171 = !DILocation(line: 1554, column: 30, scope: !5111)
!5172 = !DILocation(line: 1554, column: 35, scope: !5111)
!5173 = !DILocation(line: 1554, column: 51, scope: !5111)
!5174 = !DILocation(line: 1554, column: 68, scope: !5111)
!5175 = !DILocation(line: 1554, column: 85, scope: !5111)
!5176 = !DILocation(line: 1554, column: 2, scope: !5111)
!5177 = !DILocation(line: 1555, column: 27, scope: !5111)
!5178 = !DILocation(line: 1555, column: 30, scope: !5111)
!5179 = !DILocation(line: 1555, column: 35, scope: !5111)
!5180 = !DILocation(line: 1555, column: 50, scope: !5111)
!5181 = !DILocation(line: 1555, column: 66, scope: !5111)
!5182 = !DILocation(line: 1555, column: 82, scope: !5111)
!5183 = !DILocation(line: 1555, column: 2, scope: !5111)
!5184 = !DILocation(line: 1557, column: 20, scope: !5111)
!5185 = !DILocation(line: 1557, column: 26, scope: !5111)
!5186 = !DILocation(line: 1557, column: 2, scope: !5111)
!5187 = !DILocation(line: 1557, column: 17, scope: !5111)
!5188 = !DILocation(line: 1558, column: 20, scope: !5111)
!5189 = !DILocation(line: 1558, column: 26, scope: !5111)
!5190 = !DILocation(line: 1558, column: 2, scope: !5111)
!5191 = !DILocation(line: 1558, column: 17, scope: !5111)
!5192 = !DILocation(line: 1560, column: 19, scope: !5111)
!5193 = !DILocation(line: 1560, column: 25, scope: !5111)
!5194 = !DILocation(line: 1560, column: 2, scope: !5111)
!5195 = !DILocation(line: 1560, column: 16, scope: !5111)
!5196 = !DILocation(line: 1561, column: 19, scope: !5111)
!5197 = !DILocation(line: 1561, column: 25, scope: !5111)
!5198 = !DILocation(line: 1561, column: 2, scope: !5111)
!5199 = !DILocation(line: 1561, column: 16, scope: !5111)
!5200 = !DILocation(line: 1564, column: 14, scope: !5111)
!5201 = !DILocation(line: 1564, column: 23, scope: !5111)
!5202 = !DILocation(line: 1564, column: 36, scope: !5111)
!5203 = !DILocation(line: 1564, column: 2, scope: !5111)
!5204 = !DILocation(line: 1565, column: 28, scope: !5111)
!5205 = !DILocation(line: 1565, column: 13, scope: !5111)
!5206 = !DILocation(line: 1565, column: 11, scope: !5111)
!5207 = !DILocation(line: 1566, column: 27, scope: !5111)
!5208 = !DILocation(line: 1566, column: 25, scope: !5111)
!5209 = !DILocation(line: 1566, column: 18, scope: !5111)
!5210 = !DILocation(line: 1567, column: 19, scope: !5111)
!5211 = !DILocation(line: 1567, column: 13, scope: !5111)
!5212 = !DILocation(line: 1567, column: 11, scope: !5111)
!5213 = !DILocation(line: 1569, column: 14, scope: !5111)
!5214 = !DILocation(line: 1569, column: 20, scope: !5111)
!5215 = !DILocation(line: 1569, column: 31, scope: !5111)
!5216 = !DILocation(line: 1569, column: 13, scope: !5111)
!5217 = !DILocation(line: 1569, column: 11, scope: !5111)
!5218 = !DILocation(line: 1572, column: 27, scope: !5111)
!5219 = !DILocation(line: 1572, column: 32, scope: !5111)
!5220 = !DILocation(line: 1572, column: 44, scope: !5111)
!5221 = !DILocation(line: 1572, column: 50, scope: !5111)
!5222 = !DILocation(line: 1572, column: 53, scope: !5111)
!5223 = !DILocation(line: 1572, column: 59, scope: !5111)
!5224 = !DILocation(line: 1572, column: 2, scope: !5111)
!5225 = !DILocation(line: 1574, column: 6, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5111, file: !1, line: 1574, column: 6)
!5227 = !DILocation(line: 1574, column: 6, scope: !5111)
!5228 = !DILocation(line: 1575, column: 13, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !1, line: 1575, column: 3)
!5230 = distinct !DILexicalBlock(scope: !5226, file: !1, line: 1574, column: 16)
!5231 = !DILocation(line: 1575, column: 8, scope: !5229)
!5232 = !DILocation(line: 1575, column: 18, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5229, file: !1, line: 1575, column: 3)
!5234 = !DILocation(line: 1575, column: 25, scope: !5233)
!5235 = !DILocation(line: 1575, column: 31, scope: !5233)
!5236 = !DILocation(line: 1575, column: 23, scope: !5233)
!5237 = !DILocation(line: 1575, column: 3, scope: !5229)
!5238 = !DILocation(line: 1576, column: 14, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5240, file: !1, line: 1576, column: 4)
!5240 = distinct !DILexicalBlock(scope: !5233, file: !1, line: 1575, column: 42)
!5241 = !DILocation(line: 1576, column: 9, scope: !5239)
!5242 = !DILocation(line: 1576, column: 19, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5239, file: !1, line: 1576, column: 4)
!5244 = !DILocation(line: 1576, column: 26, scope: !5243)
!5245 = !DILocation(line: 1576, column: 32, scope: !5243)
!5246 = !DILocation(line: 1576, column: 24, scope: !5243)
!5247 = !DILocation(line: 1576, column: 4, scope: !5239)
!5248 = !DILocalVariable(name: "f", scope: !5249, file: !1, line: 1577, type: !113)
!5249 = distinct !DILexicalBlock(scope: !5243, file: !1, line: 1576, column: 43)
!5250 = !DILocation(line: 1577, column: 11, scope: !5249)
!5251 = !DILocalVariable(name: "p", scope: !5249, file: !1, line: 1578, type: !526)
!5252 = !DILocation(line: 1578, column: 11, scope: !5249)
!5253 = !DILocation(line: 1578, column: 18, scope: !5249)
!5254 = !DILocation(line: 1578, column: 19, scope: !5249)
!5255 = !DILocation(line: 1578, column: 26, scope: !5249)
!5256 = !DILocation(line: 1578, column: 24, scope: !5249)
!5257 = !DILocation(line: 1578, column: 41, scope: !5249)
!5258 = !DILocation(line: 1578, column: 48, scope: !5249)
!5259 = !DILocation(line: 1578, column: 46, scope: !5249)
!5260 = !DILocation(line: 1580, column: 13, scope: !5249)
!5261 = !DILocation(line: 1580, column: 17, scope: !5249)
!5262 = !DILocation(line: 1580, column: 5, scope: !5249)
!5263 = !DILocation(line: 1583, column: 20, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5265, file: !1, line: 1582, column: 6)
!5265 = distinct !DILexicalBlock(scope: !5249, file: !1, line: 1580, column: 37)
!5266 = !DILocation(line: 1583, column: 23, scope: !5264)
!5267 = !DILocation(line: 1583, column: 11, scope: !5264)
!5268 = !DILocation(line: 1583, column: 34, scope: !5264)
!5269 = !DILocation(line: 1583, column: 32, scope: !5264)
!5270 = !DILocation(line: 1583, column: 9, scope: !5264)
!5271 = !DILocation(line: 1584, column: 7, scope: !5264)
!5272 = !DILocation(line: 1588, column: 18, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5265, file: !1, line: 1587, column: 6)
!5274 = !DILocation(line: 1588, column: 11, scope: !5273)
!5275 = !DILocation(line: 1588, column: 23, scope: !5273)
!5276 = !DILocation(line: 1588, column: 21, scope: !5273)
!5277 = !DILocation(line: 1588, column: 9, scope: !5273)
!5278 = !DILocation(line: 1589, column: 7, scope: !5273)
!5279 = !DILocation(line: 1592, column: 18, scope: !5249)
!5280 = !DILocation(line: 1592, column: 22, scope: !5249)
!5281 = !DILocation(line: 1592, column: 32, scope: !5249)
!5282 = !DILocation(line: 1592, column: 35, scope: !5249)
!5283 = !DILocation(line: 1592, column: 5, scope: !5249)
!5284 = !DILocation(line: 1594, column: 15, scope: !5249)
!5285 = !DILocation(line: 1594, column: 24, scope: !5249)
!5286 = !DILocation(line: 1594, column: 5, scope: !5249)
!5287 = !DILocation(line: 1595, column: 19, scope: !5249)
!5288 = !DILocation(line: 1595, column: 23, scope: !5249)
!5289 = !DILocation(line: 1595, column: 5, scope: !5249)
!5290 = !DILocation(line: 1595, column: 16, scope: !5249)
!5291 = !DILocation(line: 1596, column: 27, scope: !5249)
!5292 = !DILocation(line: 1596, column: 33, scope: !5249)
!5293 = !DILocation(line: 1596, column: 51, scope: !5249)
!5294 = !DILocation(line: 1596, column: 58, scope: !5249)
!5295 = !DILocation(line: 1596, column: 64, scope: !5249)
!5296 = !DILocation(line: 1596, column: 56, scope: !5249)
!5297 = !DILocation(line: 1596, column: 68, scope: !5249)
!5298 = !DILocation(line: 1596, column: 66, scope: !5249)
!5299 = !DILocation(line: 1596, column: 48, scope: !5249)
!5300 = !DILocation(line: 1596, column: 44, scope: !5249)
!5301 = !DILocation(line: 1597, column: 27, scope: !5249)
!5302 = !DILocation(line: 1597, column: 33, scope: !5249)
!5303 = !DILocation(line: 1597, column: 51, scope: !5249)
!5304 = !DILocation(line: 1597, column: 58, scope: !5249)
!5305 = !DILocation(line: 1597, column: 64, scope: !5249)
!5306 = !DILocation(line: 1597, column: 56, scope: !5249)
!5307 = !DILocation(line: 1597, column: 68, scope: !5249)
!5308 = !DILocation(line: 1597, column: 66, scope: !5249)
!5309 = !DILocation(line: 1597, column: 48, scope: !5249)
!5310 = !DILocation(line: 1597, column: 44, scope: !5249)
!5311 = !DILocation(line: 1598, column: 27, scope: !5249)
!5312 = !DILocation(line: 1598, column: 36, scope: !5249)
!5313 = !DILocation(line: 1598, column: 40, scope: !5249)
!5314 = !DILocation(line: 1596, column: 5, scope: !5249)
!5315 = !DILocation(line: 1599, column: 4, scope: !5249)
!5316 = !DILocation(line: 1576, column: 39, scope: !5243)
!5317 = !DILocation(line: 1576, column: 4, scope: !5243)
!5318 = distinct !{!5318, !5247, !5319}
!5319 = !DILocation(line: 1599, column: 4, scope: !5239)
!5320 = !DILocation(line: 1600, column: 3, scope: !5240)
!5321 = !DILocation(line: 1575, column: 38, scope: !5233)
!5322 = !DILocation(line: 1575, column: 3, scope: !5233)
!5323 = distinct !{!5323, !5237, !5324}
!5324 = !DILocation(line: 1600, column: 3, scope: !5229)
!5325 = !DILocation(line: 1601, column: 2, scope: !5230)
!5326 = !DILocation(line: 1603, column: 13, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5328, file: !1, line: 1603, column: 3)
!5328 = distinct !DILexicalBlock(scope: !5226, file: !1, line: 1602, column: 7)
!5329 = !DILocation(line: 1603, column: 8, scope: !5327)
!5330 = !DILocation(line: 1603, column: 18, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5327, file: !1, line: 1603, column: 3)
!5332 = !DILocation(line: 1603, column: 25, scope: !5331)
!5333 = !DILocation(line: 1603, column: 31, scope: !5331)
!5334 = !DILocation(line: 1603, column: 23, scope: !5331)
!5335 = !DILocation(line: 1603, column: 3, scope: !5327)
!5336 = !DILocation(line: 1604, column: 14, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !1, line: 1604, column: 4)
!5338 = distinct !DILexicalBlock(scope: !5331, file: !1, line: 1603, column: 42)
!5339 = !DILocation(line: 1604, column: 9, scope: !5337)
!5340 = !DILocation(line: 1604, column: 19, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5337, file: !1, line: 1604, column: 4)
!5342 = !DILocation(line: 1604, column: 26, scope: !5341)
!5343 = !DILocation(line: 1604, column: 32, scope: !5341)
!5344 = !DILocation(line: 1604, column: 24, scope: !5341)
!5345 = !DILocation(line: 1604, column: 4, scope: !5337)
!5346 = !DILocalVariable(name: "f", scope: !5347, file: !1, line: 1605, type: !113)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !1, line: 1604, column: 43)
!5348 = !DILocation(line: 1605, column: 11, scope: !5347)
!5349 = !DILocalVariable(name: "p", scope: !5347, file: !1, line: 1606, type: !526)
!5350 = !DILocation(line: 1606, column: 11, scope: !5347)
!5351 = !DILocation(line: 1606, column: 18, scope: !5347)
!5352 = !DILocation(line: 1606, column: 19, scope: !5347)
!5353 = !DILocation(line: 1606, column: 26, scope: !5347)
!5354 = !DILocation(line: 1606, column: 24, scope: !5347)
!5355 = !DILocation(line: 1606, column: 41, scope: !5347)
!5356 = !DILocation(line: 1606, column: 48, scope: !5347)
!5357 = !DILocation(line: 1606, column: 46, scope: !5347)
!5358 = !DILocation(line: 1608, column: 13, scope: !5347)
!5359 = !DILocation(line: 1608, column: 17, scope: !5347)
!5360 = !DILocation(line: 1608, column: 5, scope: !5347)
!5361 = !DILocation(line: 1611, column: 20, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !1, line: 1610, column: 6)
!5363 = distinct !DILexicalBlock(scope: !5347, file: !1, line: 1608, column: 37)
!5364 = !DILocation(line: 1611, column: 23, scope: !5362)
!5365 = !DILocation(line: 1611, column: 11, scope: !5362)
!5366 = !DILocation(line: 1611, column: 34, scope: !5362)
!5367 = !DILocation(line: 1611, column: 32, scope: !5362)
!5368 = !DILocation(line: 1611, column: 9, scope: !5362)
!5369 = !DILocation(line: 1612, column: 7, scope: !5362)
!5370 = !DILocation(line: 1616, column: 18, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5363, file: !1, line: 1615, column: 6)
!5372 = !DILocation(line: 1616, column: 11, scope: !5371)
!5373 = !DILocation(line: 1616, column: 23, scope: !5371)
!5374 = !DILocation(line: 1616, column: 21, scope: !5371)
!5375 = !DILocation(line: 1616, column: 9, scope: !5371)
!5376 = !DILocation(line: 1617, column: 7, scope: !5371)
!5377 = !DILocation(line: 1621, column: 18, scope: !5347)
!5378 = !DILocation(line: 1621, column: 22, scope: !5347)
!5379 = !DILocation(line: 1621, column: 32, scope: !5347)
!5380 = !DILocation(line: 1621, column: 35, scope: !5347)
!5381 = !DILocation(line: 1621, column: 5, scope: !5347)
!5382 = !DILocation(line: 1622, column: 29, scope: !5347)
!5383 = !DILocation(line: 1622, column: 38, scope: !5347)
!5384 = !DILocation(line: 1622, column: 5, scope: !5347)
!5385 = !DILocation(line: 1623, column: 25, scope: !5347)
!5386 = !DILocation(line: 1623, column: 52, scope: !5347)
!5387 = !DILocation(line: 1623, column: 5, scope: !5347)
!5388 = !DILocation(line: 1624, column: 39, scope: !5347)
!5389 = !DILocation(line: 1624, column: 43, scope: !5347)
!5390 = !DILocation(line: 1624, column: 5, scope: !5347)
!5391 = !DILocation(line: 1624, column: 36, scope: !5347)
!5392 = !DILocation(line: 1625, column: 44, scope: !5347)
!5393 = !DILocation(line: 1625, column: 50, scope: !5347)
!5394 = !DILocation(line: 1625, column: 57, scope: !5347)
!5395 = !DILocation(line: 1625, column: 64, scope: !5347)
!5396 = !DILocation(line: 1625, column: 70, scope: !5347)
!5397 = !DILocation(line: 1625, column: 62, scope: !5347)
!5398 = !DILocation(line: 1625, column: 55, scope: !5347)
!5399 = !DILocation(line: 1625, column: 74, scope: !5347)
!5400 = !DILocation(line: 1625, column: 72, scope: !5347)
!5401 = !DILocation(line: 1625, column: 26, scope: !5347)
!5402 = !DILocation(line: 1626, column: 44, scope: !5347)
!5403 = !DILocation(line: 1626, column: 50, scope: !5347)
!5404 = !DILocation(line: 1626, column: 57, scope: !5347)
!5405 = !DILocation(line: 1626, column: 64, scope: !5347)
!5406 = !DILocation(line: 1626, column: 70, scope: !5347)
!5407 = !DILocation(line: 1626, column: 62, scope: !5347)
!5408 = !DILocation(line: 1626, column: 55, scope: !5347)
!5409 = !DILocation(line: 1626, column: 74, scope: !5347)
!5410 = !DILocation(line: 1626, column: 72, scope: !5347)
!5411 = !DILocation(line: 1626, column: 26, scope: !5347)
!5412 = !DILocation(line: 1627, column: 26, scope: !5347)
!5413 = !DILocation(line: 1627, column: 53, scope: !5347)
!5414 = !DILocation(line: 1627, column: 57, scope: !5347)
!5415 = !DILocation(line: 1625, column: 5, scope: !5347)
!5416 = !DILocation(line: 1628, column: 4, scope: !5347)
!5417 = !DILocation(line: 1604, column: 39, scope: !5341)
!5418 = !DILocation(line: 1604, column: 4, scope: !5341)
!5419 = distinct !{!5419, !5345, !5420}
!5420 = !DILocation(line: 1628, column: 4, scope: !5337)
!5421 = !DILocation(line: 1629, column: 3, scope: !5338)
!5422 = !DILocation(line: 1603, column: 38, scope: !5331)
!5423 = !DILocation(line: 1603, column: 3, scope: !5331)
!5424 = distinct !{!5424, !5335, !5425}
!5425 = !DILocation(line: 1629, column: 3, scope: !5327)
!5426 = !DILocation(line: 1632, column: 24, scope: !5111)
!5427 = !DILocation(line: 1632, column: 30, scope: !5111)
!5428 = !DILocation(line: 1632, column: 35, scope: !5111)
!5429 = !DILocation(line: 1632, column: 2, scope: !5111)
!5430 = !DILocation(line: 1633, column: 2, scope: !5111)
!5431 = !DILocation(line: 1635, column: 25, scope: !5111)
!5432 = !DILocation(line: 1635, column: 30, scope: !5111)
!5433 = !DILocation(line: 1635, column: 2, scope: !5111)
!5434 = !DILocation(line: 1637, column: 24, scope: !5111)
!5435 = !DILocation(line: 1637, column: 49, scope: !5111)
!5436 = !DILocation(line: 1637, column: 2, scope: !5111)
!5437 = !DILocation(line: 1638, column: 1, scope: !5111)
!5438 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !2623, file: !2623, line: 338, type: !4799, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5439 = !DILocalVariable(name: "r", arg: 1, scope: !5438, file: !2623, line: 338, type: !238)
!5440 = !DILocation(line: 338, column: 32, scope: !5438)
!5441 = !DILocalVariable(name: "a", arg: 2, scope: !5438, file: !2623, line: 338, type: !2450)
!5442 = !DILocation(line: 338, column: 50, scope: !5438)
!5443 = !DILocalVariable(name: "b", arg: 3, scope: !5438, file: !2623, line: 338, type: !2450)
!5444 = !DILocation(line: 338, column: 68, scope: !5438)
!5445 = !DILocation(line: 340, column: 9, scope: !5438)
!5446 = !DILocation(line: 340, column: 16, scope: !5438)
!5447 = !DILocation(line: 340, column: 14, scope: !5438)
!5448 = !DILocation(line: 340, column: 2, scope: !5438)
!5449 = !DILocation(line: 340, column: 7, scope: !5438)
!5450 = !DILocation(line: 341, column: 9, scope: !5438)
!5451 = !DILocation(line: 341, column: 16, scope: !5438)
!5452 = !DILocation(line: 341, column: 14, scope: !5438)
!5453 = !DILocation(line: 341, column: 2, scope: !5438)
!5454 = !DILocation(line: 341, column: 7, scope: !5438)
!5455 = !DILocation(line: 342, column: 1, scope: !5438)
!5456 = distinct !DISubprogram(name: "len_squared_v2", scope: !2623, file: !2623, line: 666, type: !5457, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{!113, !2450}
!5459 = !DILocalVariable(name: "v", arg: 1, scope: !5456, file: !2623, line: 666, type: !2450)
!5460 = !DILocation(line: 666, column: 42, scope: !5456)
!5461 = !DILocation(line: 668, column: 9, scope: !5456)
!5462 = !DILocation(line: 668, column: 16, scope: !5456)
!5463 = !DILocation(line: 668, column: 14, scope: !5456)
!5464 = !DILocation(line: 668, column: 23, scope: !5456)
!5465 = !DILocation(line: 668, column: 30, scope: !5456)
!5466 = !DILocation(line: 668, column: 28, scope: !5456)
!5467 = !DILocation(line: 668, column: 21, scope: !5456)
!5468 = !DILocation(line: 668, column: 2, scope: !5456)
!5469 = distinct !DISubprogram(name: "dot_v2v2", scope: !2623, file: !2623, line: 614, type: !5470, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{!113, !2450, !2450}
!5472 = !DILocalVariable(name: "a", arg: 1, scope: !5469, file: !2623, line: 614, type: !2450)
!5473 = !DILocation(line: 614, column: 36, scope: !5469)
!5474 = !DILocalVariable(name: "b", arg: 2, scope: !5469, file: !2623, line: 614, type: !2450)
!5475 = !DILocation(line: 614, column: 54, scope: !5469)
!5476 = !DILocation(line: 616, column: 9, scope: !5469)
!5477 = !DILocation(line: 616, column: 16, scope: !5469)
!5478 = !DILocation(line: 616, column: 14, scope: !5469)
!5479 = !DILocation(line: 616, column: 23, scope: !5469)
!5480 = !DILocation(line: 616, column: 30, scope: !5469)
!5481 = !DILocation(line: 616, column: 28, scope: !5469)
!5482 = !DILocation(line: 616, column: 21, scope: !5469)
!5483 = !DILocation(line: 616, column: 2, scope: !5469)
!5484 = distinct !DISubprogram(name: "len_v2", scope: !2623, file: !2623, line: 691, type: !5457, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5485 = !DILocalVariable(name: "v", arg: 1, scope: !5484, file: !2623, line: 691, type: !2450)
!5486 = !DILocation(line: 691, column: 34, scope: !5484)
!5487 = !DILocation(line: 693, column: 15, scope: !5484)
!5488 = !DILocation(line: 693, column: 22, scope: !5484)
!5489 = !DILocation(line: 693, column: 20, scope: !5484)
!5490 = !DILocation(line: 693, column: 29, scope: !5484)
!5491 = !DILocation(line: 693, column: 36, scope: !5484)
!5492 = !DILocation(line: 693, column: 34, scope: !5484)
!5493 = !DILocation(line: 693, column: 27, scope: !5484)
!5494 = !DILocation(line: 693, column: 9, scope: !5484)
!5495 = !DILocation(line: 693, column: 2, scope: !5484)
!5496 = distinct !DISubprogram(name: "mul_v3_fl", scope: !2623, file: !2623, line: 392, type: !5497, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{null, !238, !113}
!5499 = !DILocalVariable(name: "r", arg: 1, scope: !5496, file: !2623, line: 392, type: !238)
!5500 = !DILocation(line: 392, column: 30, scope: !5496)
!5501 = !DILocalVariable(name: "f", arg: 2, scope: !5496, file: !2623, line: 392, type: !113)
!5502 = !DILocation(line: 392, column: 42, scope: !5496)
!5503 = !DILocation(line: 394, column: 10, scope: !5496)
!5504 = !DILocation(line: 394, column: 2, scope: !5496)
!5505 = !DILocation(line: 394, column: 7, scope: !5496)
!5506 = !DILocation(line: 395, column: 10, scope: !5496)
!5507 = !DILocation(line: 395, column: 2, scope: !5496)
!5508 = !DILocation(line: 395, column: 7, scope: !5496)
!5509 = !DILocation(line: 396, column: 10, scope: !5496)
!5510 = !DILocation(line: 396, column: 2, scope: !5496)
!5511 = !DILocation(line: 396, column: 7, scope: !5496)
!5512 = !DILocation(line: 397, column: 1, scope: !5496)
!5513 = distinct !DISubprogram(name: "linearrgb_to_srgb_v3_v3", scope: !4767, file: !4767, line: 46, type: !2624, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5514 = !DILocalVariable(name: "srgb", arg: 1, scope: !5513, file: !4767, line: 46, type: !238)
!5515 = !DILocation(line: 46, column: 44, scope: !5513)
!5516 = !DILocalVariable(name: "linear", arg: 2, scope: !5513, file: !4767, line: 46, type: !2450)
!5517 = !DILocation(line: 46, column: 65, scope: !5513)
!5518 = !DILocation(line: 48, column: 30, scope: !5513)
!5519 = !DILocation(line: 48, column: 12, scope: !5513)
!5520 = !DILocation(line: 48, column: 2, scope: !5513)
!5521 = !DILocation(line: 48, column: 10, scope: !5513)
!5522 = !DILocation(line: 49, column: 30, scope: !5513)
!5523 = !DILocation(line: 49, column: 12, scope: !5513)
!5524 = !DILocation(line: 49, column: 2, scope: !5513)
!5525 = !DILocation(line: 49, column: 10, scope: !5513)
!5526 = !DILocation(line: 50, column: 30, scope: !5513)
!5527 = !DILocation(line: 50, column: 12, scope: !5513)
!5528 = !DILocation(line: 50, column: 2, scope: !5513)
!5529 = !DILocation(line: 50, column: 10, scope: !5513)
!5530 = !DILocation(line: 51, column: 1, scope: !5513)
!5531 = distinct !DISubprogram(name: "brush_painter_2d_tex_mapping", scope: !1, file: !1, line: 609, type: !5532, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{null, !115, !66, !2450, !2450, !2450, !66, !5534}
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!5535 = !DILocalVariable(name: "s", arg: 1, scope: !5531, file: !1, line: 609, type: !115)
!5536 = !DILocation(line: 609, column: 59, scope: !5531)
!5537 = !DILocalVariable(name: "diameter", arg: 2, scope: !5531, file: !1, line: 609, type: !66)
!5538 = !DILocation(line: 609, column: 66, scope: !5531)
!5539 = !DILocalVariable(name: "startpos", arg: 3, scope: !5531, file: !1, line: 609, type: !2450)
!5540 = !DILocation(line: 609, column: 88, scope: !5531)
!5541 = !DILocalVariable(name: "pos", arg: 4, scope: !5531, file: !1, line: 609, type: !2450)
!5542 = !DILocation(line: 609, column: 113, scope: !5531)
!5543 = !DILocalVariable(name: "mouse", arg: 5, scope: !5531, file: !1, line: 609, type: !2450)
!5544 = !DILocation(line: 609, column: 133, scope: !5531)
!5545 = !DILocalVariable(name: "mapmode", arg: 6, scope: !5531, file: !1, line: 609, type: !66)
!5546 = !DILocation(line: 609, column: 147, scope: !5531)
!5547 = !DILocalVariable(name: "mapping", arg: 7, scope: !5531, file: !1, line: 609, type: !5534)
!5548 = !DILocation(line: 609, column: 162, scope: !5531)
!5549 = !DILocalVariable(name: "invw", scope: !5531, file: !1, line: 611, type: !113)
!5550 = !DILocation(line: 611, column: 8, scope: !5531)
!5551 = !DILocation(line: 611, column: 29, scope: !5531)
!5552 = !DILocation(line: 611, column: 32, scope: !5531)
!5553 = !DILocation(line: 611, column: 40, scope: !5531)
!5554 = !DILocation(line: 611, column: 22, scope: !5531)
!5555 = !DILocation(line: 611, column: 20, scope: !5531)
!5556 = !DILocalVariable(name: "invh", scope: !5531, file: !1, line: 612, type: !113)
!5557 = !DILocation(line: 612, column: 8, scope: !5531)
!5558 = !DILocation(line: 612, column: 29, scope: !5531)
!5559 = !DILocation(line: 612, column: 32, scope: !5531)
!5560 = !DILocation(line: 612, column: 40, scope: !5531)
!5561 = !DILocation(line: 612, column: 22, scope: !5531)
!5562 = !DILocation(line: 612, column: 20, scope: !5531)
!5563 = !DILocalVariable(name: "xmin", scope: !5531, file: !1, line: 613, type: !66)
!5564 = !DILocation(line: 613, column: 6, scope: !5531)
!5565 = !DILocalVariable(name: "ymin", scope: !5531, file: !1, line: 613, type: !66)
!5566 = !DILocation(line: 613, column: 12, scope: !5531)
!5567 = !DILocalVariable(name: "xmax", scope: !5531, file: !1, line: 613, type: !66)
!5568 = !DILocation(line: 613, column: 18, scope: !5531)
!5569 = !DILocalVariable(name: "ymax", scope: !5531, file: !1, line: 613, type: !66)
!5570 = !DILocation(line: 613, column: 24, scope: !5531)
!5571 = !DILocalVariable(name: "ipos", scope: !5531, file: !1, line: 614, type: !791)
!5572 = !DILocation(line: 614, column: 6, scope: !5531)
!5573 = !DILocation(line: 617, column: 25, scope: !5531)
!5574 = !DILocation(line: 617, column: 34, scope: !5531)
!5575 = !DILocation(line: 617, column: 43, scope: !5531)
!5576 = !DILocation(line: 617, column: 32, scope: !5531)
!5577 = !DILocation(line: 617, column: 48, scope: !5531)
!5578 = !DILocation(line: 617, column: 17, scope: !5531)
!5579 = !DILocation(line: 617, column: 12, scope: !5531)
!5580 = !DILocation(line: 617, column: 2, scope: !5531)
!5581 = !DILocation(line: 617, column: 10, scope: !5531)
!5582 = !DILocation(line: 618, column: 25, scope: !5531)
!5583 = !DILocation(line: 618, column: 34, scope: !5531)
!5584 = !DILocation(line: 618, column: 43, scope: !5531)
!5585 = !DILocation(line: 618, column: 32, scope: !5531)
!5586 = !DILocation(line: 618, column: 48, scope: !5531)
!5587 = !DILocation(line: 618, column: 17, scope: !5531)
!5588 = !DILocation(line: 618, column: 12, scope: !5531)
!5589 = !DILocation(line: 618, column: 2, scope: !5531)
!5590 = !DILocation(line: 618, column: 10, scope: !5531)
!5591 = !DILocation(line: 620, column: 6, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5531, file: !1, line: 620, column: 6)
!5593 = !DILocation(line: 620, column: 14, scope: !5592)
!5594 = !DILocation(line: 620, column: 6, scope: !5531)
!5595 = !DILocation(line: 622, column: 28, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 620, column: 40)
!5597 = !DILocation(line: 622, column: 31, scope: !5596)
!5598 = !DILocation(line: 622, column: 36, scope: !5596)
!5599 = !DILocation(line: 622, column: 46, scope: !5596)
!5600 = !DILocation(line: 622, column: 44, scope: !5596)
!5601 = !DILocation(line: 622, column: 52, scope: !5596)
!5602 = !DILocation(line: 622, column: 62, scope: !5596)
!5603 = !DILocation(line: 622, column: 60, scope: !5596)
!5604 = !DILocation(line: 622, column: 3, scope: !5596)
!5605 = !DILocation(line: 623, column: 28, scope: !5596)
!5606 = !DILocation(line: 623, column: 31, scope: !5596)
!5607 = !DILocation(line: 623, column: 37, scope: !5596)
!5608 = !DILocation(line: 623, column: 47, scope: !5596)
!5609 = !DILocation(line: 623, column: 45, scope: !5596)
!5610 = !DILocation(line: 623, column: 36, scope: !5596)
!5611 = !DILocation(line: 623, column: 59, scope: !5596)
!5612 = !DILocation(line: 623, column: 57, scope: !5596)
!5613 = !DILocation(line: 623, column: 66, scope: !5596)
!5614 = !DILocation(line: 623, column: 76, scope: !5596)
!5615 = !DILocation(line: 623, column: 74, scope: !5596)
!5616 = !DILocation(line: 623, column: 65, scope: !5596)
!5617 = !DILocation(line: 623, column: 88, scope: !5596)
!5618 = !DILocation(line: 623, column: 86, scope: !5596)
!5619 = !DILocation(line: 623, column: 3, scope: !5596)
!5620 = !DILocation(line: 626, column: 19, scope: !5596)
!5621 = !DILocation(line: 626, column: 3, scope: !5596)
!5622 = !DILocation(line: 626, column: 12, scope: !5596)
!5623 = !DILocation(line: 626, column: 17, scope: !5596)
!5624 = !DILocation(line: 627, column: 19, scope: !5596)
!5625 = !DILocation(line: 627, column: 3, scope: !5596)
!5626 = !DILocation(line: 627, column: 12, scope: !5596)
!5627 = !DILocation(line: 627, column: 17, scope: !5596)
!5628 = !DILocation(line: 628, column: 20, scope: !5596)
!5629 = !DILocation(line: 628, column: 27, scope: !5596)
!5630 = !DILocation(line: 628, column: 25, scope: !5596)
!5631 = !DILocation(line: 628, column: 19, scope: !5596)
!5632 = !DILocation(line: 628, column: 42, scope: !5596)
!5633 = !DILocation(line: 628, column: 35, scope: !5596)
!5634 = !DILocation(line: 628, column: 33, scope: !5596)
!5635 = !DILocation(line: 628, column: 3, scope: !5596)
!5636 = !DILocation(line: 628, column: 12, scope: !5596)
!5637 = !DILocation(line: 628, column: 17, scope: !5596)
!5638 = !DILocation(line: 629, column: 20, scope: !5596)
!5639 = !DILocation(line: 629, column: 27, scope: !5596)
!5640 = !DILocation(line: 629, column: 25, scope: !5596)
!5641 = !DILocation(line: 629, column: 19, scope: !5596)
!5642 = !DILocation(line: 629, column: 42, scope: !5596)
!5643 = !DILocation(line: 629, column: 35, scope: !5596)
!5644 = !DILocation(line: 629, column: 33, scope: !5596)
!5645 = !DILocation(line: 629, column: 3, scope: !5596)
!5646 = !DILocation(line: 629, column: 12, scope: !5596)
!5647 = !DILocation(line: 629, column: 17, scope: !5596)
!5648 = !DILocation(line: 630, column: 2, scope: !5596)
!5649 = !DILocation(line: 631, column: 11, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5592, file: !1, line: 631, column: 11)
!5651 = !DILocation(line: 631, column: 19, scope: !5650)
!5652 = !DILocation(line: 631, column: 11, scope: !5592)
!5653 = !DILocation(line: 633, column: 27, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5650, file: !1, line: 631, column: 40)
!5655 = !DILocation(line: 633, column: 37, scope: !5654)
!5656 = !DILocation(line: 633, column: 35, scope: !5654)
!5657 = !DILocation(line: 633, column: 42, scope: !5654)
!5658 = !DILocation(line: 633, column: 24, scope: !5654)
!5659 = !DILocation(line: 633, column: 3, scope: !5654)
!5660 = !DILocation(line: 633, column: 12, scope: !5654)
!5661 = !DILocation(line: 633, column: 17, scope: !5654)
!5662 = !DILocation(line: 634, column: 27, scope: !5654)
!5663 = !DILocation(line: 634, column: 37, scope: !5654)
!5664 = !DILocation(line: 634, column: 35, scope: !5654)
!5665 = !DILocation(line: 634, column: 42, scope: !5654)
!5666 = !DILocation(line: 634, column: 24, scope: !5654)
!5667 = !DILocation(line: 634, column: 3, scope: !5654)
!5668 = !DILocation(line: 634, column: 12, scope: !5654)
!5669 = !DILocation(line: 634, column: 17, scope: !5654)
!5670 = !DILocation(line: 635, column: 26, scope: !5654)
!5671 = !DILocation(line: 635, column: 24, scope: !5654)
!5672 = !DILocation(line: 635, column: 3, scope: !5654)
!5673 = !DILocation(line: 635, column: 12, scope: !5654)
!5674 = !DILocation(line: 635, column: 17, scope: !5654)
!5675 = !DILocation(line: 636, column: 26, scope: !5654)
!5676 = !DILocation(line: 636, column: 24, scope: !5654)
!5677 = !DILocation(line: 636, column: 3, scope: !5654)
!5678 = !DILocation(line: 636, column: 12, scope: !5654)
!5679 = !DILocation(line: 636, column: 17, scope: !5654)
!5680 = !DILocation(line: 637, column: 2, scope: !5654)
!5681 = !DILocation(line: 638, column: 11, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5650, file: !1, line: 638, column: 11)
!5683 = !DILocation(line: 638, column: 11, scope: !5650)
!5684 = !DILocation(line: 640, column: 19, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5682, file: !1, line: 638, column: 68)
!5686 = !DILocation(line: 640, column: 30, scope: !5685)
!5687 = !DILocation(line: 640, column: 39, scope: !5685)
!5688 = !DILocation(line: 640, column: 28, scope: !5685)
!5689 = !DILocation(line: 640, column: 46, scope: !5685)
!5690 = !DILocation(line: 640, column: 3, scope: !5685)
!5691 = !DILocation(line: 640, column: 12, scope: !5685)
!5692 = !DILocation(line: 640, column: 17, scope: !5685)
!5693 = !DILocation(line: 641, column: 19, scope: !5685)
!5694 = !DILocation(line: 641, column: 30, scope: !5685)
!5695 = !DILocation(line: 641, column: 39, scope: !5685)
!5696 = !DILocation(line: 641, column: 28, scope: !5685)
!5697 = !DILocation(line: 641, column: 46, scope: !5685)
!5698 = !DILocation(line: 641, column: 3, scope: !5685)
!5699 = !DILocation(line: 641, column: 12, scope: !5685)
!5700 = !DILocation(line: 641, column: 17, scope: !5685)
!5701 = !DILocation(line: 642, column: 3, scope: !5685)
!5702 = !DILocation(line: 642, column: 12, scope: !5685)
!5703 = !DILocation(line: 642, column: 17, scope: !5685)
!5704 = !DILocation(line: 643, column: 3, scope: !5685)
!5705 = !DILocation(line: 643, column: 12, scope: !5685)
!5706 = !DILocation(line: 643, column: 17, scope: !5685)
!5707 = !DILocation(line: 644, column: 2, scope: !5685)
!5708 = !DILocation(line: 646, column: 26, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5682, file: !1, line: 645, column: 49)
!5710 = !DILocation(line: 646, column: 25, scope: !5709)
!5711 = !DILocation(line: 646, column: 35, scope: !5709)
!5712 = !DILocation(line: 646, column: 19, scope: !5709)
!5713 = !DILocation(line: 646, column: 49, scope: !5709)
!5714 = !DILocation(line: 646, column: 44, scope: !5709)
!5715 = !DILocation(line: 646, column: 42, scope: !5709)
!5716 = !DILocation(line: 646, column: 63, scope: !5709)
!5717 = !DILocation(line: 646, column: 58, scope: !5709)
!5718 = !DILocation(line: 646, column: 56, scope: !5709)
!5719 = !DILocation(line: 646, column: 3, scope: !5709)
!5720 = !DILocation(line: 646, column: 12, scope: !5709)
!5721 = !DILocation(line: 646, column: 17, scope: !5709)
!5722 = !DILocation(line: 647, column: 26, scope: !5709)
!5723 = !DILocation(line: 647, column: 25, scope: !5709)
!5724 = !DILocation(line: 647, column: 35, scope: !5709)
!5725 = !DILocation(line: 647, column: 19, scope: !5709)
!5726 = !DILocation(line: 647, column: 49, scope: !5709)
!5727 = !DILocation(line: 647, column: 44, scope: !5709)
!5728 = !DILocation(line: 647, column: 42, scope: !5709)
!5729 = !DILocation(line: 647, column: 63, scope: !5709)
!5730 = !DILocation(line: 647, column: 58, scope: !5709)
!5731 = !DILocation(line: 647, column: 56, scope: !5709)
!5732 = !DILocation(line: 647, column: 3, scope: !5709)
!5733 = !DILocation(line: 647, column: 12, scope: !5709)
!5734 = !DILocation(line: 647, column: 17, scope: !5709)
!5735 = !DILocation(line: 648, column: 3, scope: !5709)
!5736 = !DILocation(line: 648, column: 12, scope: !5709)
!5737 = !DILocation(line: 648, column: 17, scope: !5709)
!5738 = !DILocation(line: 649, column: 3, scope: !5709)
!5739 = !DILocation(line: 649, column: 12, scope: !5709)
!5740 = !DILocation(line: 649, column: 17, scope: !5709)
!5741 = !DILocation(line: 651, column: 1, scope: !5531)
!5742 = distinct !DISubprogram(name: "brush_painter_mask_imbuf_partial_update", scope: !1, file: !1, line: 283, type: !5743, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5743 = !DISubroutineType(types: !5744)
!5744 = !{null, !120, !2450, !66}
!5745 = !DILocalVariable(name: "painter", arg: 1, scope: !5742, file: !1, line: 283, type: !120)
!5746 = !DILocation(line: 283, column: 67, scope: !5742)
!5747 = !DILocalVariable(name: "pos", arg: 2, scope: !5742, file: !1, line: 283, type: !2450)
!5748 = !DILocation(line: 283, column: 88, scope: !5742)
!5749 = !DILocalVariable(name: "diameter", arg: 3, scope: !5742, file: !1, line: 283, type: !66)
!5750 = !DILocation(line: 283, column: 100, scope: !5742)
!5751 = !DILocalVariable(name: "cache", scope: !5742, file: !1, line: 285, type: !2780)
!5752 = !DILocation(line: 285, column: 21, scope: !5742)
!5753 = !DILocation(line: 285, column: 30, scope: !5742)
!5754 = !DILocation(line: 285, column: 39, scope: !5742)
!5755 = !DILocalVariable(name: "tex_mask_old", scope: !5742, file: !1, line: 286, type: !2145)
!5756 = !DILocation(line: 286, column: 18, scope: !5742)
!5757 = !DILocalVariable(name: "destx", scope: !5742, file: !1, line: 287, type: !66)
!5758 = !DILocation(line: 287, column: 6, scope: !5742)
!5759 = !DILocalVariable(name: "desty", scope: !5742, file: !1, line: 287, type: !66)
!5760 = !DILocation(line: 287, column: 13, scope: !5742)
!5761 = !DILocalVariable(name: "srcx", scope: !5742, file: !1, line: 287, type: !66)
!5762 = !DILocation(line: 287, column: 20, scope: !5742)
!5763 = !DILocalVariable(name: "srcy", scope: !5742, file: !1, line: 287, type: !66)
!5764 = !DILocation(line: 287, column: 26, scope: !5742)
!5765 = !DILocalVariable(name: "w", scope: !5742, file: !1, line: 287, type: !66)
!5766 = !DILocation(line: 287, column: 32, scope: !5742)
!5767 = !DILocalVariable(name: "h", scope: !5742, file: !1, line: 287, type: !66)
!5768 = !DILocation(line: 287, column: 35, scope: !5742)
!5769 = !DILocalVariable(name: "x1", scope: !5742, file: !1, line: 287, type: !66)
!5770 = !DILocation(line: 287, column: 38, scope: !5742)
!5771 = !DILocalVariable(name: "y1", scope: !5742, file: !1, line: 287, type: !66)
!5772 = !DILocation(line: 287, column: 42, scope: !5742)
!5773 = !DILocalVariable(name: "x2", scope: !5742, file: !1, line: 287, type: !66)
!5774 = !DILocation(line: 287, column: 46, scope: !5742)
!5775 = !DILocalVariable(name: "y2", scope: !5742, file: !1, line: 287, type: !66)
!5776 = !DILocation(line: 287, column: 50, scope: !5742)
!5777 = !DILocation(line: 290, column: 7, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 290, column: 6)
!5779 = !DILocation(line: 290, column: 14, scope: !5778)
!5780 = !DILocation(line: 290, column: 6, scope: !5742)
!5781 = !DILocation(line: 291, column: 21, scope: !5778)
!5782 = !DILocation(line: 291, column: 58, scope: !5778)
!5783 = !DILocation(line: 291, column: 56, scope: !5778)
!5784 = !DILocation(line: 291, column: 69, scope: !5778)
!5785 = !DILocation(line: 291, column: 67, scope: !5778)
!5786 = !DILocation(line: 291, column: 3, scope: !5778)
!5787 = !DILocation(line: 291, column: 10, scope: !5778)
!5788 = !DILocation(line: 291, column: 19, scope: !5778)
!5789 = !DILocation(line: 294, column: 17, scope: !5742)
!5790 = !DILocation(line: 294, column: 24, scope: !5742)
!5791 = !DILocation(line: 294, column: 15, scope: !5742)
!5792 = !DILocation(line: 295, column: 24, scope: !5742)
!5793 = !DILocation(line: 295, column: 61, scope: !5742)
!5794 = !DILocation(line: 295, column: 59, scope: !5742)
!5795 = !DILocation(line: 295, column: 72, scope: !5742)
!5796 = !DILocation(line: 295, column: 70, scope: !5742)
!5797 = !DILocation(line: 295, column: 2, scope: !5742)
!5798 = !DILocation(line: 295, column: 9, scope: !5742)
!5799 = !DILocation(line: 295, column: 22, scope: !5742)
!5800 = !DILocation(line: 297, column: 6, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 297, column: 6)
!5802 = !DILocation(line: 297, column: 6, scope: !5742)
!5803 = !DILocalVariable(name: "maskibuf", scope: !5804, file: !1, line: 298, type: !2142)
!5804 = distinct !DILexicalBlock(scope: !5801, file: !1, line: 297, column: 20)
!5805 = !DILocation(line: 298, column: 9, scope: !5804)
!5806 = !DILocalVariable(name: "maskibuf_old", scope: !5804, file: !1, line: 299, type: !2142)
!5807 = !DILocation(line: 299, column: 9, scope: !5804)
!5808 = !DILocation(line: 300, column: 29, scope: !5804)
!5809 = !DILocation(line: 300, column: 25, scope: !5804)
!5810 = !DILocation(line: 300, column: 27, scope: !5804)
!5811 = !DILocation(line: 300, column: 12, scope: !5804)
!5812 = !DILocation(line: 300, column: 14, scope: !5804)
!5813 = !DILocation(line: 301, column: 20, scope: !5804)
!5814 = !DILocation(line: 301, column: 27, scope: !5804)
!5815 = !DILocation(line: 301, column: 16, scope: !5804)
!5816 = !DILocation(line: 301, column: 18, scope: !5804)
!5817 = !DILocation(line: 302, column: 20, scope: !5804)
!5818 = !DILocation(line: 302, column: 27, scope: !5804)
!5819 = !DILocation(line: 302, column: 16, scope: !5804)
!5820 = !DILocation(line: 302, column: 18, scope: !5804)
!5821 = !DILocation(line: 304, column: 15, scope: !5804)
!5822 = !DILocation(line: 304, column: 8, scope: !5804)
!5823 = !DILocation(line: 305, column: 7, scope: !5804)
!5824 = !DILocation(line: 305, column: 14, scope: !5804)
!5825 = !DILocation(line: 305, column: 5, scope: !5804)
!5826 = !DILocation(line: 306, column: 7, scope: !5804)
!5827 = !DILocation(line: 306, column: 14, scope: !5804)
!5828 = !DILocation(line: 306, column: 5, scope: !5804)
!5829 = !DILocation(line: 307, column: 16, scope: !5804)
!5830 = !DILocation(line: 307, column: 25, scope: !5804)
!5831 = !DILocation(line: 307, column: 11, scope: !5804)
!5832 = !DILocation(line: 307, column: 48, scope: !5804)
!5833 = !DILocation(line: 307, column: 43, scope: !5804)
!5834 = !DILocation(line: 307, column: 41, scope: !5804)
!5835 = !DILocation(line: 307, column: 59, scope: !5804)
!5836 = !DILocation(line: 307, column: 68, scope: !5804)
!5837 = !DILocation(line: 307, column: 74, scope: !5804)
!5838 = !DILocation(line: 307, column: 76, scope: !5804)
!5839 = !DILocation(line: 307, column: 72, scope: !5804)
!5840 = !DILocation(line: 307, column: 56, scope: !5804)
!5841 = !DILocation(line: 307, column: 9, scope: !5804)
!5842 = !DILocation(line: 308, column: 16, scope: !5804)
!5843 = !DILocation(line: 308, column: 25, scope: !5804)
!5844 = !DILocation(line: 308, column: 11, scope: !5804)
!5845 = !DILocation(line: 308, column: 48, scope: !5804)
!5846 = !DILocation(line: 308, column: 43, scope: !5804)
!5847 = !DILocation(line: 308, column: 41, scope: !5804)
!5848 = !DILocation(line: 308, column: 59, scope: !5804)
!5849 = !DILocation(line: 308, column: 68, scope: !5804)
!5850 = !DILocation(line: 308, column: 74, scope: !5804)
!5851 = !DILocation(line: 308, column: 76, scope: !5804)
!5852 = !DILocation(line: 308, column: 72, scope: !5804)
!5853 = !DILocation(line: 308, column: 56, scope: !5804)
!5854 = !DILocation(line: 308, column: 9, scope: !5804)
!5855 = !DILocation(line: 311, column: 3, scope: !5804)
!5856 = !DILocation(line: 312, column: 2, scope: !5804)
!5857 = !DILocation(line: 314, column: 15, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5801, file: !1, line: 313, column: 7)
!5859 = !DILocation(line: 314, column: 8, scope: !5858)
!5860 = !DILocation(line: 315, column: 17, scope: !5858)
!5861 = !DILocation(line: 315, column: 9, scope: !5858)
!5862 = !DILocation(line: 316, column: 9, scope: !5858)
!5863 = !DILocation(line: 316, column: 5, scope: !5858)
!5864 = !DILocation(line: 319, column: 14, scope: !5742)
!5865 = !DILocation(line: 319, column: 21, scope: !5742)
!5866 = !DILocation(line: 319, column: 7, scope: !5742)
!5867 = !DILocation(line: 319, column: 5, scope: !5742)
!5868 = !DILocation(line: 320, column: 14, scope: !5742)
!5869 = !DILocation(line: 320, column: 21, scope: !5742)
!5870 = !DILocation(line: 320, column: 7, scope: !5742)
!5871 = !DILocation(line: 320, column: 5, scope: !5742)
!5872 = !DILocation(line: 321, column: 14, scope: !5742)
!5873 = !DILocation(line: 321, column: 22, scope: !5742)
!5874 = !DILocation(line: 321, column: 20, scope: !5742)
!5875 = !DILocation(line: 321, column: 25, scope: !5742)
!5876 = !DILocation(line: 321, column: 7, scope: !5742)
!5877 = !DILocation(line: 321, column: 5, scope: !5742)
!5878 = !DILocation(line: 322, column: 14, scope: !5742)
!5879 = !DILocation(line: 322, column: 22, scope: !5742)
!5880 = !DILocation(line: 322, column: 20, scope: !5742)
!5881 = !DILocation(line: 322, column: 25, scope: !5742)
!5882 = !DILocation(line: 322, column: 7, scope: !5742)
!5883 = !DILocation(line: 322, column: 5, scope: !5742)
!5884 = !DILocation(line: 325, column: 7, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 325, column: 6)
!5886 = !DILocation(line: 325, column: 12, scope: !5885)
!5887 = !DILocation(line: 325, column: 10, scope: !5885)
!5888 = !DILocation(line: 325, column: 16, scope: !5885)
!5889 = !DILocation(line: 325, column: 20, scope: !5885)
!5890 = !DILocation(line: 325, column: 25, scope: !5885)
!5891 = !DILocation(line: 325, column: 23, scope: !5885)
!5892 = !DILocation(line: 325, column: 6, scope: !5742)
!5893 = !DILocation(line: 326, column: 35, scope: !5885)
!5894 = !DILocation(line: 326, column: 44, scope: !5885)
!5895 = !DILocation(line: 326, column: 58, scope: !5885)
!5896 = !DILocation(line: 326, column: 62, scope: !5885)
!5897 = !DILocation(line: 326, column: 66, scope: !5885)
!5898 = !DILocation(line: 326, column: 70, scope: !5885)
!5899 = !DILocation(line: 326, column: 74, scope: !5885)
!5900 = !DILocation(line: 326, column: 80, scope: !5885)
!5901 = !DILocation(line: 326, column: 86, scope: !5885)
!5902 = !DILocation(line: 326, column: 3, scope: !5885)
!5903 = !DILocation(line: 328, column: 6, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 328, column: 6)
!5905 = !DILocation(line: 328, column: 6, scope: !5742)
!5906 = !DILocation(line: 329, column: 3, scope: !5904)
!5907 = !DILocation(line: 329, column: 13, scope: !5904)
!5908 = !DILocation(line: 332, column: 11, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 332, column: 6)
!5910 = !DILocation(line: 332, column: 9, scope: !5909)
!5911 = !DILocation(line: 332, column: 15, scope: !5909)
!5912 = !DILocation(line: 332, column: 23, scope: !5909)
!5913 = !DILocation(line: 332, column: 21, scope: !5909)
!5914 = !DILocation(line: 332, column: 6, scope: !5742)
!5915 = !DILocation(line: 333, column: 35, scope: !5909)
!5916 = !DILocation(line: 333, column: 56, scope: !5909)
!5917 = !DILocation(line: 333, column: 60, scope: !5909)
!5918 = !DILocation(line: 333, column: 76, scope: !5909)
!5919 = !DILocation(line: 333, column: 3, scope: !5909)
!5920 = !DILocation(line: 334, column: 7, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 334, column: 6)
!5922 = !DILocation(line: 334, column: 12, scope: !5921)
!5923 = !DILocation(line: 334, column: 10, scope: !5921)
!5924 = !DILocation(line: 334, column: 22, scope: !5921)
!5925 = !DILocation(line: 334, column: 30, scope: !5921)
!5926 = !DILocation(line: 334, column: 28, scope: !5921)
!5927 = !DILocation(line: 334, column: 6, scope: !5742)
!5928 = !DILocation(line: 335, column: 35, scope: !5921)
!5929 = !DILocation(line: 335, column: 50, scope: !5921)
!5930 = !DILocation(line: 335, column: 57, scope: !5921)
!5931 = !DILocation(line: 335, column: 67, scope: !5921)
!5932 = !DILocation(line: 335, column: 83, scope: !5921)
!5933 = !DILocation(line: 335, column: 3, scope: !5921)
!5934 = !DILocation(line: 336, column: 7, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 336, column: 6)
!5936 = !DILocation(line: 336, column: 12, scope: !5935)
!5937 = !DILocation(line: 336, column: 10, scope: !5935)
!5938 = !DILocation(line: 336, column: 16, scope: !5935)
!5939 = !DILocation(line: 336, column: 24, scope: !5935)
!5940 = !DILocation(line: 336, column: 22, scope: !5935)
!5941 = !DILocation(line: 336, column: 6, scope: !5742)
!5942 = !DILocation(line: 337, column: 35, scope: !5935)
!5943 = !DILocation(line: 337, column: 50, scope: !5935)
!5944 = !DILocation(line: 337, column: 57, scope: !5935)
!5945 = !DILocation(line: 337, column: 61, scope: !5935)
!5946 = !DILocation(line: 337, column: 71, scope: !5935)
!5947 = !DILocation(line: 337, column: 3, scope: !5935)
!5948 = !DILocation(line: 338, column: 7, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 338, column: 6)
!5950 = !DILocation(line: 338, column: 12, scope: !5949)
!5951 = !DILocation(line: 338, column: 10, scope: !5949)
!5952 = !DILocation(line: 338, column: 16, scope: !5949)
!5953 = !DILocation(line: 338, column: 20, scope: !5949)
!5954 = !DILocation(line: 338, column: 25, scope: !5949)
!5955 = !DILocation(line: 338, column: 23, scope: !5949)
!5956 = !DILocation(line: 338, column: 6, scope: !5742)
!5957 = !DILocation(line: 339, column: 35, scope: !5949)
!5958 = !DILocation(line: 339, column: 50, scope: !5949)
!5959 = !DILocation(line: 339, column: 54, scope: !5949)
!5960 = !DILocation(line: 339, column: 58, scope: !5949)
!5961 = !DILocation(line: 339, column: 62, scope: !5949)
!5962 = !DILocation(line: 339, column: 78, scope: !5949)
!5963 = !DILocation(line: 339, column: 3, scope: !5949)
!5964 = !DILocation(line: 342, column: 26, scope: !5742)
!5965 = !DILocation(line: 342, column: 2, scope: !5742)
!5966 = !DILocation(line: 342, column: 9, scope: !5742)
!5967 = !DILocation(line: 342, column: 24, scope: !5742)
!5968 = !DILocation(line: 343, column: 26, scope: !5742)
!5969 = !DILocation(line: 343, column: 2, scope: !5742)
!5970 = !DILocation(line: 343, column: 9, scope: !5742)
!5971 = !DILocation(line: 343, column: 24, scope: !5742)
!5972 = !DILocation(line: 344, column: 1, scope: !5742)
!5973 = distinct !DISubprogram(name: "brush_painter_mask_ibuf_new", scope: !1, file: !1, line: 205, type: !5974, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!2145, !120, !66}
!5976 = !DILocalVariable(name: "painter", arg: 1, scope: !5973, file: !1, line: 205, type: !120)
!5977 = !DILocation(line: 205, column: 66, scope: !5973)
!5978 = !DILocalVariable(name: "size", arg: 2, scope: !5973, file: !1, line: 205, type: !66)
!5979 = !DILocation(line: 205, column: 79, scope: !5973)
!5980 = !DILocalVariable(name: "scene", scope: !5973, file: !1, line: 207, type: !125)
!5981 = !DILocation(line: 207, column: 9, scope: !5973)
!5982 = !DILocation(line: 207, column: 17, scope: !5973)
!5983 = !DILocation(line: 207, column: 26, scope: !5973)
!5984 = !DILocalVariable(name: "brush", scope: !5973, file: !1, line: 208, type: !2119)
!5985 = !DILocation(line: 208, column: 9, scope: !5973)
!5986 = !DILocation(line: 208, column: 17, scope: !5973)
!5987 = !DILocation(line: 208, column: 26, scope: !5973)
!5988 = !DILocalVariable(name: "mask_mapping", scope: !5973, file: !1, line: 209, type: !624)
!5989 = !DILocation(line: 209, column: 7, scope: !5973)
!5990 = !DILocation(line: 209, column: 22, scope: !5973)
!5991 = !DILocation(line: 209, column: 31, scope: !5973)
!5992 = !DILocalVariable(name: "pool", scope: !5973, file: !1, line: 210, type: !269)
!5993 = !DILocation(line: 210, column: 20, scope: !5973)
!5994 = !DILocation(line: 210, column: 27, scope: !5973)
!5995 = !DILocation(line: 210, column: 36, scope: !5973)
!5996 = !DILocalVariable(name: "texco", scope: !5973, file: !1, line: 212, type: !231)
!5997 = !DILocation(line: 212, column: 8, scope: !5973)
!5998 = !DILocalVariable(name: "mask", scope: !5973, file: !1, line: 213, type: !2145)
!5999 = !DILocation(line: 213, column: 18, scope: !5973)
!6000 = !DILocalVariable(name: "m", scope: !5973, file: !1, line: 213, type: !2145)
!6001 = !DILocation(line: 213, column: 25, scope: !5973)
!6002 = !DILocalVariable(name: "x", scope: !5973, file: !1, line: 214, type: !66)
!6003 = !DILocation(line: 214, column: 6, scope: !5973)
!6004 = !DILocalVariable(name: "y", scope: !5973, file: !1, line: 214, type: !66)
!6005 = !DILocation(line: 214, column: 9, scope: !5973)
!6006 = !DILocalVariable(name: "thread", scope: !5973, file: !1, line: 214, type: !66)
!6007 = !DILocation(line: 214, column: 12, scope: !5973)
!6008 = !DILocation(line: 216, column: 9, scope: !5973)
!6009 = !DILocation(line: 216, column: 46, scope: !5973)
!6010 = !DILocation(line: 216, column: 44, scope: !5973)
!6011 = !DILocation(line: 216, column: 53, scope: !5973)
!6012 = !DILocation(line: 216, column: 51, scope: !5973)
!6013 = !DILocation(line: 216, column: 7, scope: !5973)
!6014 = !DILocation(line: 217, column: 6, scope: !5973)
!6015 = !DILocation(line: 217, column: 4, scope: !5973)
!6016 = !DILocation(line: 219, column: 9, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5973, file: !1, line: 219, column: 2)
!6018 = !DILocation(line: 219, column: 7, scope: !6017)
!6019 = !DILocation(line: 219, column: 14, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6017, file: !1, line: 219, column: 2)
!6021 = !DILocation(line: 219, column: 18, scope: !6020)
!6022 = !DILocation(line: 219, column: 16, scope: !6020)
!6023 = !DILocation(line: 219, column: 2, scope: !6017)
!6024 = !DILocation(line: 220, column: 10, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !1, line: 220, column: 3)
!6026 = distinct !DILexicalBlock(scope: !6020, file: !1, line: 219, column: 29)
!6027 = !DILocation(line: 220, column: 8, scope: !6025)
!6028 = !DILocation(line: 220, column: 15, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6025, file: !1, line: 220, column: 3)
!6030 = !DILocation(line: 220, column: 19, scope: !6029)
!6031 = !DILocation(line: 220, column: 17, scope: !6029)
!6032 = !DILocation(line: 220, column: 3, scope: !6025)
!6033 = !DILocalVariable(name: "res", scope: !6034, file: !1, line: 221, type: !113)
!6034 = distinct !DILexicalBlock(scope: !6029, file: !1, line: 220, column: 35)
!6035 = !DILocation(line: 221, column: 10, scope: !6034)
!6036 = !DILocation(line: 222, column: 38, scope: !6034)
!6037 = !DILocation(line: 222, column: 41, scope: !6034)
!6038 = !DILocation(line: 222, column: 44, scope: !6034)
!6039 = !DILocation(line: 222, column: 4, scope: !6034)
!6040 = !DILocation(line: 223, column: 35, scope: !6034)
!6041 = !DILocation(line: 223, column: 42, scope: !6034)
!6042 = !DILocation(line: 223, column: 49, scope: !6034)
!6043 = !DILocation(line: 223, column: 56, scope: !6034)
!6044 = !DILocation(line: 223, column: 64, scope: !6034)
!6045 = !DILocation(line: 223, column: 10, scope: !6034)
!6046 = !DILocation(line: 223, column: 8, scope: !6034)
!6047 = !DILocation(line: 224, column: 37, scope: !6034)
!6048 = !DILocation(line: 224, column: 35, scope: !6034)
!6049 = !DILocation(line: 224, column: 9, scope: !6034)
!6050 = !DILocation(line: 224, column: 5, scope: !6034)
!6051 = !DILocation(line: 224, column: 7, scope: !6034)
!6052 = !DILocation(line: 225, column: 3, scope: !6034)
!6053 = !DILocation(line: 220, column: 26, scope: !6029)
!6054 = !DILocation(line: 220, column: 31, scope: !6029)
!6055 = !DILocation(line: 220, column: 3, scope: !6029)
!6056 = distinct !{!6056, !6032, !6057}
!6057 = !DILocation(line: 225, column: 3, scope: !6025)
!6058 = !DILocation(line: 226, column: 2, scope: !6026)
!6059 = !DILocation(line: 219, column: 25, scope: !6020)
!6060 = !DILocation(line: 219, column: 2, scope: !6020)
!6061 = distinct !{!6061, !6023, !6062}
!6062 = !DILocation(line: 226, column: 2, scope: !6017)
!6063 = !DILocation(line: 228, column: 9, scope: !5973)
!6064 = !DILocation(line: 228, column: 2, scope: !5973)
!6065 = distinct !DISubprogram(name: "brush_painter_curve_mask_new", scope: !1, file: !1, line: 347, type: !6066, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{!2145, !120, !66, !113}
!6068 = !DILocalVariable(name: "painter", arg: 1, scope: !6065, file: !1, line: 347, type: !120)
!6069 = !DILocation(line: 347, column: 67, scope: !6065)
!6070 = !DILocalVariable(name: "diameter", arg: 2, scope: !6065, file: !1, line: 347, type: !66)
!6071 = !DILocation(line: 347, column: 80, scope: !6065)
!6072 = !DILocalVariable(name: "radius", arg: 3, scope: !6065, file: !1, line: 347, type: !113)
!6073 = !DILocation(line: 347, column: 96, scope: !6065)
!6074 = !DILocalVariable(name: "brush", scope: !6065, file: !1, line: 349, type: !2119)
!6075 = !DILocation(line: 349, column: 9, scope: !6065)
!6076 = !DILocation(line: 349, column: 17, scope: !6065)
!6077 = !DILocation(line: 349, column: 26, scope: !6065)
!6078 = !DILocalVariable(name: "xoff", scope: !6065, file: !1, line: 351, type: !66)
!6079 = !DILocation(line: 351, column: 6, scope: !6065)
!6080 = !DILocation(line: 351, column: 14, scope: !6065)
!6081 = !DILocation(line: 351, column: 13, scope: !6065)
!6082 = !DILocation(line: 351, column: 23, scope: !6065)
!6083 = !DILocation(line: 351, column: 30, scope: !6065)
!6084 = !DILocalVariable(name: "yoff", scope: !6065, file: !1, line: 352, type: !66)
!6085 = !DILocation(line: 352, column: 6, scope: !6065)
!6086 = !DILocation(line: 352, column: 14, scope: !6065)
!6087 = !DILocation(line: 352, column: 13, scope: !6065)
!6088 = !DILocation(line: 352, column: 23, scope: !6065)
!6089 = !DILocation(line: 352, column: 30, scope: !6065)
!6090 = !DILocalVariable(name: "mask", scope: !6065, file: !1, line: 354, type: !2145)
!6091 = !DILocation(line: 354, column: 18, scope: !6065)
!6092 = !DILocalVariable(name: "m", scope: !6065, file: !1, line: 354, type: !2145)
!6093 = !DILocation(line: 354, column: 25, scope: !6065)
!6094 = !DILocalVariable(name: "x", scope: !6065, file: !1, line: 355, type: !66)
!6095 = !DILocation(line: 355, column: 6, scope: !6065)
!6096 = !DILocalVariable(name: "y", scope: !6065, file: !1, line: 355, type: !66)
!6097 = !DILocation(line: 355, column: 9, scope: !6065)
!6098 = !DILocation(line: 357, column: 9, scope: !6065)
!6099 = !DILocation(line: 357, column: 46, scope: !6065)
!6100 = !DILocation(line: 357, column: 44, scope: !6065)
!6101 = !DILocation(line: 357, column: 57, scope: !6065)
!6102 = !DILocation(line: 357, column: 55, scope: !6065)
!6103 = !DILocation(line: 357, column: 7, scope: !6065)
!6104 = !DILocation(line: 358, column: 6, scope: !6065)
!6105 = !DILocation(line: 358, column: 4, scope: !6065)
!6106 = !DILocation(line: 360, column: 9, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6065, file: !1, line: 360, column: 2)
!6108 = !DILocation(line: 360, column: 7, scope: !6107)
!6109 = !DILocation(line: 360, column: 14, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6107, file: !1, line: 360, column: 2)
!6111 = !DILocation(line: 360, column: 18, scope: !6110)
!6112 = !DILocation(line: 360, column: 16, scope: !6110)
!6113 = !DILocation(line: 360, column: 2, scope: !6107)
!6114 = !DILocation(line: 361, column: 10, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 361, column: 3)
!6116 = distinct !DILexicalBlock(scope: !6110, file: !1, line: 360, column: 33)
!6117 = !DILocation(line: 361, column: 8, scope: !6115)
!6118 = !DILocation(line: 361, column: 15, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6115, file: !1, line: 361, column: 3)
!6120 = !DILocation(line: 361, column: 19, scope: !6119)
!6121 = !DILocation(line: 361, column: 17, scope: !6119)
!6122 = !DILocation(line: 361, column: 3, scope: !6115)
!6123 = !DILocalVariable(name: "xy", scope: !6124, file: !1, line: 362, type: !526)
!6124 = distinct !DILexicalBlock(scope: !6119, file: !1, line: 361, column: 39)
!6125 = !DILocation(line: 362, column: 10, scope: !6124)
!6126 = !DILocation(line: 362, column: 18, scope: !6124)
!6127 = !DILocation(line: 362, column: 19, scope: !6124)
!6128 = !DILocation(line: 362, column: 23, scope: !6124)
!6129 = !DILocation(line: 362, column: 21, scope: !6124)
!6130 = !DILocation(line: 362, column: 29, scope: !6124)
!6131 = !DILocation(line: 362, column: 33, scope: !6124)
!6132 = !DILocation(line: 362, column: 31, scope: !6124)
!6133 = !DILocalVariable(name: "len", scope: !6124, file: !1, line: 363, type: !113)
!6134 = !DILocation(line: 363, column: 10, scope: !6124)
!6135 = !DILocation(line: 363, column: 23, scope: !6124)
!6136 = !DILocation(line: 363, column: 16, scope: !6124)
!6137 = !DILocation(line: 365, column: 68, scope: !6124)
!6138 = !DILocation(line: 365, column: 75, scope: !6124)
!6139 = !DILocation(line: 365, column: 80, scope: !6124)
!6140 = !DILocation(line: 365, column: 37, scope: !6124)
!6141 = !DILocation(line: 365, column: 35, scope: !6124)
!6142 = !DILocation(line: 365, column: 9, scope: !6124)
!6143 = !DILocation(line: 365, column: 5, scope: !6124)
!6144 = !DILocation(line: 365, column: 7, scope: !6124)
!6145 = !DILocation(line: 366, column: 3, scope: !6124)
!6146 = !DILocation(line: 361, column: 30, scope: !6119)
!6147 = !DILocation(line: 361, column: 35, scope: !6119)
!6148 = !DILocation(line: 361, column: 3, scope: !6119)
!6149 = distinct !{!6149, !6122, !6150}
!6150 = !DILocation(line: 366, column: 3, scope: !6115)
!6151 = !DILocation(line: 367, column: 2, scope: !6116)
!6152 = !DILocation(line: 360, column: 29, scope: !6110)
!6153 = !DILocation(line: 360, column: 2, scope: !6110)
!6154 = distinct !{!6154, !6113, !6155}
!6155 = !DILocation(line: 367, column: 2, scope: !6107)
!6156 = !DILocation(line: 369, column: 9, scope: !6065)
!6157 = !DILocation(line: 369, column: 2, scope: !6065)
!6158 = distinct !DISubprogram(name: "brush_painter_imbuf_partial_update", scope: !1, file: !1, line: 555, type: !5743, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!6159 = !DILocalVariable(name: "painter", arg: 1, scope: !6158, file: !1, line: 555, type: !120)
!6160 = !DILocation(line: 555, column: 62, scope: !6158)
!6161 = !DILocalVariable(name: "pos", arg: 2, scope: !6158, file: !1, line: 555, type: !2450)
!6162 = !DILocation(line: 555, column: 83, scope: !6158)
!6163 = !DILocalVariable(name: "diameter", arg: 3, scope: !6158, file: !1, line: 555, type: !66)
!6164 = !DILocation(line: 555, column: 95, scope: !6158)
!6165 = !DILocalVariable(name: "cache", scope: !6158, file: !1, line: 557, type: !2780)
!6166 = !DILocation(line: 557, column: 21, scope: !6158)
!6167 = !DILocation(line: 557, column: 30, scope: !6158)
!6168 = !DILocation(line: 557, column: 39, scope: !6158)
!6169 = !DILocalVariable(name: "oldtexibuf", scope: !6158, file: !1, line: 558, type: !2141)
!6170 = !DILocation(line: 558, column: 9, scope: !6158)
!6171 = !DILocalVariable(name: "ibuf", scope: !6158, file: !1, line: 558, type: !2141)
!6172 = !DILocation(line: 558, column: 22, scope: !6158)
!6173 = !DILocalVariable(name: "imbflag", scope: !6158, file: !1, line: 559, type: !66)
!6174 = !DILocation(line: 559, column: 6, scope: !6158)
!6175 = !DILocalVariable(name: "destx", scope: !6158, file: !1, line: 559, type: !66)
!6176 = !DILocation(line: 559, column: 15, scope: !6158)
!6177 = !DILocalVariable(name: "desty", scope: !6158, file: !1, line: 559, type: !66)
!6178 = !DILocation(line: 559, column: 22, scope: !6158)
!6179 = !DILocalVariable(name: "srcx", scope: !6158, file: !1, line: 559, type: !66)
!6180 = !DILocation(line: 559, column: 29, scope: !6158)
!6181 = !DILocalVariable(name: "srcy", scope: !6158, file: !1, line: 559, type: !66)
!6182 = !DILocation(line: 559, column: 35, scope: !6158)
!6183 = !DILocalVariable(name: "w", scope: !6158, file: !1, line: 559, type: !66)
!6184 = !DILocation(line: 559, column: 41, scope: !6158)
!6185 = !DILocalVariable(name: "h", scope: !6158, file: !1, line: 559, type: !66)
!6186 = !DILocation(line: 559, column: 44, scope: !6158)
!6187 = !DILocalVariable(name: "x1", scope: !6158, file: !1, line: 559, type: !66)
!6188 = !DILocation(line: 559, column: 47, scope: !6158)
!6189 = !DILocalVariable(name: "y1", scope: !6158, file: !1, line: 559, type: !66)
!6190 = !DILocation(line: 559, column: 51, scope: !6158)
!6191 = !DILocalVariable(name: "x2", scope: !6158, file: !1, line: 559, type: !66)
!6192 = !DILocation(line: 559, column: 55, scope: !6158)
!6193 = !DILocalVariable(name: "y2", scope: !6158, file: !1, line: 559, type: !66)
!6194 = !DILocation(line: 559, column: 59, scope: !6158)
!6195 = !DILocation(line: 562, column: 13, scope: !6158)
!6196 = !DILocation(line: 562, column: 20, scope: !6158)
!6197 = !DILocation(line: 562, column: 12, scope: !6158)
!6198 = !DILocation(line: 562, column: 10, scope: !6158)
!6199 = !DILocation(line: 563, column: 7, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 563, column: 6)
!6201 = !DILocation(line: 563, column: 14, scope: !6200)
!6202 = !DILocation(line: 563, column: 6, scope: !6158)
!6203 = !DILocation(line: 564, column: 32, scope: !6200)
!6204 = !DILocation(line: 564, column: 42, scope: !6200)
!6205 = !DILocation(line: 564, column: 56, scope: !6200)
!6206 = !DILocation(line: 564, column: 17, scope: !6200)
!6207 = !DILocation(line: 564, column: 3, scope: !6200)
!6208 = !DILocation(line: 564, column: 10, scope: !6200)
!6209 = !DILocation(line: 564, column: 15, scope: !6200)
!6210 = !DILocation(line: 565, column: 9, scope: !6158)
!6211 = !DILocation(line: 565, column: 16, scope: !6158)
!6212 = !DILocation(line: 565, column: 7, scope: !6158)
!6213 = !DILocation(line: 568, column: 15, scope: !6158)
!6214 = !DILocation(line: 568, column: 22, scope: !6158)
!6215 = !DILocation(line: 568, column: 13, scope: !6158)
!6216 = !DILocation(line: 569, column: 34, scope: !6158)
!6217 = !DILocation(line: 569, column: 44, scope: !6158)
!6218 = !DILocation(line: 569, column: 58, scope: !6158)
!6219 = !DILocation(line: 569, column: 19, scope: !6158)
!6220 = !DILocation(line: 569, column: 2, scope: !6158)
!6221 = !DILocation(line: 569, column: 9, scope: !6158)
!6222 = !DILocation(line: 569, column: 17, scope: !6158)
!6223 = !DILocation(line: 571, column: 6, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 571, column: 6)
!6225 = !DILocation(line: 571, column: 6, scope: !6158)
!6226 = !DILocation(line: 572, column: 15, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6224, file: !1, line: 571, column: 18)
!6228 = !DILocation(line: 572, column: 8, scope: !6227)
!6229 = !DILocation(line: 573, column: 7, scope: !6227)
!6230 = !DILocation(line: 573, column: 19, scope: !6227)
!6231 = !DILocation(line: 573, column: 5, scope: !6227)
!6232 = !DILocation(line: 574, column: 7, scope: !6227)
!6233 = !DILocation(line: 574, column: 19, scope: !6227)
!6234 = !DILocation(line: 574, column: 5, scope: !6227)
!6235 = !DILocation(line: 575, column: 16, scope: !6227)
!6236 = !DILocation(line: 575, column: 25, scope: !6227)
!6237 = !DILocation(line: 575, column: 11, scope: !6227)
!6238 = !DILocation(line: 575, column: 48, scope: !6227)
!6239 = !DILocation(line: 575, column: 43, scope: !6227)
!6240 = !DILocation(line: 575, column: 41, scope: !6227)
!6241 = !DILocation(line: 575, column: 58, scope: !6227)
!6242 = !DILocation(line: 575, column: 67, scope: !6227)
!6243 = !DILocation(line: 575, column: 73, scope: !6227)
!6244 = !DILocation(line: 575, column: 75, scope: !6227)
!6245 = !DILocation(line: 575, column: 71, scope: !6227)
!6246 = !DILocation(line: 575, column: 55, scope: !6227)
!6247 = !DILocation(line: 575, column: 9, scope: !6227)
!6248 = !DILocation(line: 576, column: 16, scope: !6227)
!6249 = !DILocation(line: 576, column: 25, scope: !6227)
!6250 = !DILocation(line: 576, column: 11, scope: !6227)
!6251 = !DILocation(line: 576, column: 48, scope: !6227)
!6252 = !DILocation(line: 576, column: 43, scope: !6227)
!6253 = !DILocation(line: 576, column: 41, scope: !6227)
!6254 = !DILocation(line: 576, column: 58, scope: !6227)
!6255 = !DILocation(line: 576, column: 67, scope: !6227)
!6256 = !DILocation(line: 576, column: 73, scope: !6227)
!6257 = !DILocation(line: 576, column: 75, scope: !6227)
!6258 = !DILocation(line: 576, column: 71, scope: !6227)
!6259 = !DILocation(line: 576, column: 55, scope: !6227)
!6260 = !DILocation(line: 576, column: 9, scope: !6227)
!6261 = !DILocation(line: 578, column: 16, scope: !6227)
!6262 = !DILocation(line: 578, column: 23, scope: !6227)
!6263 = !DILocation(line: 578, column: 32, scope: !6227)
!6264 = !DILocation(line: 578, column: 3, scope: !6227)
!6265 = !DILocation(line: 579, column: 2, scope: !6227)
!6266 = !DILocation(line: 581, column: 15, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6224, file: !1, line: 580, column: 7)
!6268 = !DILocation(line: 581, column: 8, scope: !6267)
!6269 = !DILocation(line: 582, column: 17, scope: !6267)
!6270 = !DILocation(line: 582, column: 9, scope: !6267)
!6271 = !DILocation(line: 583, column: 9, scope: !6267)
!6272 = !DILocation(line: 583, column: 5, scope: !6267)
!6273 = !DILocation(line: 586, column: 14, scope: !6158)
!6274 = !DILocation(line: 586, column: 21, scope: !6158)
!6275 = !DILocation(line: 586, column: 27, scope: !6158)
!6276 = !DILocation(line: 586, column: 7, scope: !6158)
!6277 = !DILocation(line: 586, column: 5, scope: !6158)
!6278 = !DILocation(line: 587, column: 14, scope: !6158)
!6279 = !DILocation(line: 587, column: 21, scope: !6158)
!6280 = !DILocation(line: 587, column: 27, scope: !6158)
!6281 = !DILocation(line: 587, column: 7, scope: !6158)
!6282 = !DILocation(line: 587, column: 5, scope: !6158)
!6283 = !DILocation(line: 588, column: 14, scope: !6158)
!6284 = !DILocation(line: 588, column: 22, scope: !6158)
!6285 = !DILocation(line: 588, column: 20, scope: !6158)
!6286 = !DILocation(line: 588, column: 25, scope: !6158)
!6287 = !DILocation(line: 588, column: 31, scope: !6158)
!6288 = !DILocation(line: 588, column: 7, scope: !6158)
!6289 = !DILocation(line: 588, column: 5, scope: !6158)
!6290 = !DILocation(line: 589, column: 14, scope: !6158)
!6291 = !DILocation(line: 589, column: 22, scope: !6158)
!6292 = !DILocation(line: 589, column: 20, scope: !6158)
!6293 = !DILocation(line: 589, column: 25, scope: !6158)
!6294 = !DILocation(line: 589, column: 31, scope: !6158)
!6295 = !DILocation(line: 589, column: 7, scope: !6158)
!6296 = !DILocation(line: 589, column: 5, scope: !6158)
!6297 = !DILocation(line: 592, column: 7, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 592, column: 6)
!6299 = !DILocation(line: 592, column: 12, scope: !6298)
!6300 = !DILocation(line: 592, column: 10, scope: !6298)
!6301 = !DILocation(line: 592, column: 16, scope: !6298)
!6302 = !DILocation(line: 592, column: 20, scope: !6298)
!6303 = !DILocation(line: 592, column: 25, scope: !6298)
!6304 = !DILocation(line: 592, column: 23, scope: !6298)
!6305 = !DILocation(line: 592, column: 6, scope: !6158)
!6306 = !DILocation(line: 593, column: 30, scope: !6298)
!6307 = !DILocation(line: 593, column: 39, scope: !6298)
!6308 = !DILocation(line: 593, column: 51, scope: !6298)
!6309 = !DILocation(line: 593, column: 55, scope: !6298)
!6310 = !DILocation(line: 593, column: 59, scope: !6298)
!6311 = !DILocation(line: 593, column: 63, scope: !6298)
!6312 = !DILocation(line: 593, column: 67, scope: !6298)
!6313 = !DILocation(line: 593, column: 73, scope: !6298)
!6314 = !DILocation(line: 593, column: 3, scope: !6298)
!6315 = !DILocation(line: 595, column: 6, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 595, column: 6)
!6317 = !DILocation(line: 595, column: 6, scope: !6158)
!6318 = !DILocation(line: 596, column: 17, scope: !6316)
!6319 = !DILocation(line: 596, column: 3, scope: !6316)
!6320 = !DILocation(line: 599, column: 11, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 599, column: 6)
!6322 = !DILocation(line: 599, column: 9, scope: !6321)
!6323 = !DILocation(line: 599, column: 15, scope: !6321)
!6324 = !DILocation(line: 599, column: 23, scope: !6321)
!6325 = !DILocation(line: 599, column: 29, scope: !6321)
!6326 = !DILocation(line: 599, column: 21, scope: !6321)
!6327 = !DILocation(line: 599, column: 6, scope: !6158)
!6328 = !DILocation(line: 600, column: 30, scope: !6321)
!6329 = !DILocation(line: 600, column: 51, scope: !6321)
!6330 = !DILocation(line: 600, column: 55, scope: !6321)
!6331 = !DILocation(line: 600, column: 61, scope: !6321)
!6332 = !DILocation(line: 600, column: 3, scope: !6321)
!6333 = !DILocation(line: 601, column: 7, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 601, column: 6)
!6335 = !DILocation(line: 601, column: 12, scope: !6334)
!6336 = !DILocation(line: 601, column: 18, scope: !6334)
!6337 = !DILocation(line: 601, column: 10, scope: !6334)
!6338 = !DILocation(line: 601, column: 21, scope: !6334)
!6339 = !DILocation(line: 601, column: 29, scope: !6334)
!6340 = !DILocation(line: 601, column: 35, scope: !6334)
!6341 = !DILocation(line: 601, column: 27, scope: !6334)
!6342 = !DILocation(line: 601, column: 6, scope: !6158)
!6343 = !DILocation(line: 602, column: 30, scope: !6334)
!6344 = !DILocation(line: 602, column: 45, scope: !6334)
!6345 = !DILocation(line: 602, column: 52, scope: !6334)
!6346 = !DILocation(line: 602, column: 58, scope: !6334)
!6347 = !DILocation(line: 602, column: 61, scope: !6334)
!6348 = !DILocation(line: 602, column: 67, scope: !6334)
!6349 = !DILocation(line: 602, column: 3, scope: !6334)
!6350 = !DILocation(line: 603, column: 7, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 603, column: 6)
!6352 = !DILocation(line: 603, column: 12, scope: !6351)
!6353 = !DILocation(line: 603, column: 10, scope: !6351)
!6354 = !DILocation(line: 603, column: 16, scope: !6351)
!6355 = !DILocation(line: 603, column: 24, scope: !6351)
!6356 = !DILocation(line: 603, column: 22, scope: !6351)
!6357 = !DILocation(line: 603, column: 6, scope: !6158)
!6358 = !DILocation(line: 604, column: 30, scope: !6351)
!6359 = !DILocation(line: 604, column: 45, scope: !6351)
!6360 = !DILocation(line: 604, column: 52, scope: !6351)
!6361 = !DILocation(line: 604, column: 56, scope: !6351)
!6362 = !DILocation(line: 604, column: 3, scope: !6351)
!6363 = !DILocation(line: 605, column: 7, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 605, column: 6)
!6365 = !DILocation(line: 605, column: 12, scope: !6364)
!6366 = !DILocation(line: 605, column: 10, scope: !6364)
!6367 = !DILocation(line: 605, column: 16, scope: !6364)
!6368 = !DILocation(line: 605, column: 20, scope: !6364)
!6369 = !DILocation(line: 605, column: 25, scope: !6364)
!6370 = !DILocation(line: 605, column: 31, scope: !6364)
!6371 = !DILocation(line: 605, column: 23, scope: !6364)
!6372 = !DILocation(line: 605, column: 6, scope: !6158)
!6373 = !DILocation(line: 606, column: 30, scope: !6364)
!6374 = !DILocation(line: 606, column: 45, scope: !6364)
!6375 = !DILocation(line: 606, column: 49, scope: !6364)
!6376 = !DILocation(line: 606, column: 53, scope: !6364)
!6377 = !DILocation(line: 606, column: 57, scope: !6364)
!6378 = !DILocation(line: 606, column: 63, scope: !6364)
!6379 = !DILocation(line: 606, column: 3, scope: !6364)
!6380 = !DILocation(line: 607, column: 1, scope: !6158)
!6381 = distinct !DISubprogram(name: "brush_painter_imbuf_new", scope: !1, file: !1, line: 374, type: !6382, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!6382 = !DISubroutineType(types: !6383)
!6383 = !{!2141, !120, !66, !113, !113}
!6384 = !DILocalVariable(name: "painter", arg: 1, scope: !6381, file: !1, line: 374, type: !120)
!6385 = !DILocation(line: 374, column: 53, scope: !6381)
!6386 = !DILocalVariable(name: "size", arg: 2, scope: !6381, file: !1, line: 374, type: !66)
!6387 = !DILocation(line: 374, column: 66, scope: !6381)
!6388 = !DILocalVariable(name: "pressure", arg: 3, scope: !6381, file: !1, line: 374, type: !113)
!6389 = !DILocation(line: 374, column: 78, scope: !6381)
!6390 = !DILocalVariable(name: "distance", arg: 4, scope: !6381, file: !1, line: 374, type: !113)
!6391 = !DILocation(line: 374, column: 94, scope: !6381)
!6392 = !DILocalVariable(name: "scene", scope: !6381, file: !1, line: 376, type: !125)
!6393 = !DILocation(line: 376, column: 9, scope: !6381)
!6394 = !DILocation(line: 376, column: 17, scope: !6381)
!6395 = !DILocation(line: 376, column: 26, scope: !6381)
!6396 = !DILocalVariable(name: "brush", scope: !6381, file: !1, line: 377, type: !2119)
!6397 = !DILocation(line: 377, column: 9, scope: !6381)
!6398 = !DILocation(line: 377, column: 17, scope: !6381)
!6399 = !DILocation(line: 377, column: 26, scope: !6381)
!6400 = !DILocalVariable(name: "display_device", scope: !6381, file: !1, line: 379, type: !2363)
!6401 = !DILocation(line: 379, column: 14, scope: !6381)
!6402 = !DILocation(line: 379, column: 31, scope: !6381)
!6403 = !DILocation(line: 379, column: 38, scope: !6381)
!6404 = !DILocation(line: 379, column: 55, scope: !6381)
!6405 = !DILocalVariable(name: "display", scope: !6381, file: !1, line: 380, type: !6406)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6407, size: 64)
!6407 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplay", file: !9, line: 87, flags: DIFlagFwdDecl)
!6408 = !DILocation(line: 380, column: 30, scope: !6381)
!6409 = !DILocation(line: 380, column: 78, scope: !6381)
!6410 = !DILocation(line: 380, column: 40, scope: !6381)
!6411 = !DILocalVariable(name: "tex_mapping", scope: !6381, file: !1, line: 382, type: !624)
!6412 = !DILocation(line: 382, column: 7, scope: !6381)
!6413 = !DILocation(line: 382, column: 21, scope: !6381)
!6414 = !DILocation(line: 382, column: 30, scope: !6381)
!6415 = !DILocalVariable(name: "pool", scope: !6381, file: !1, line: 383, type: !269)
!6416 = !DILocation(line: 383, column: 20, scope: !6381)
!6417 = !DILocation(line: 383, column: 27, scope: !6381)
!6418 = !DILocation(line: 383, column: 36, scope: !6381)
!6419 = !DILocalVariable(name: "use_color_correction", scope: !6381, file: !1, line: 385, type: !107)
!6420 = !DILocation(line: 385, column: 7, scope: !6381)
!6421 = !DILocation(line: 385, column: 30, scope: !6381)
!6422 = !DILocation(line: 385, column: 39, scope: !6381)
!6423 = !DILocation(line: 385, column: 45, scope: !6381)
!6424 = !DILocalVariable(name: "use_float", scope: !6381, file: !1, line: 386, type: !107)
!6425 = !DILocation(line: 386, column: 7, scope: !6381)
!6426 = !DILocation(line: 386, column: 19, scope: !6381)
!6427 = !DILocation(line: 386, column: 28, scope: !6381)
!6428 = !DILocation(line: 386, column: 34, scope: !6381)
!6429 = !DILocalVariable(name: "is_texbrush", scope: !6381, file: !1, line: 387, type: !107)
!6430 = !DILocation(line: 387, column: 7, scope: !6381)
!6431 = !DILocation(line: 387, column: 21, scope: !6381)
!6432 = !DILocation(line: 387, column: 30, scope: !6381)
!6433 = !DILocation(line: 387, column: 36, scope: !6381)
!6434 = !DILocalVariable(name: "x", scope: !6381, file: !1, line: 389, type: !66)
!6435 = !DILocation(line: 389, column: 6, scope: !6381)
!6436 = !DILocalVariable(name: "y", scope: !6381, file: !1, line: 389, type: !66)
!6437 = !DILocation(line: 389, column: 9, scope: !6381)
!6438 = !DILocalVariable(name: "thread", scope: !6381, file: !1, line: 389, type: !66)
!6439 = !DILocation(line: 389, column: 12, scope: !6381)
!6440 = !DILocalVariable(name: "brush_rgb", scope: !6381, file: !1, line: 390, type: !231)
!6441 = !DILocation(line: 390, column: 8, scope: !6381)
!6442 = !DILocalVariable(name: "ibuf", scope: !6381, file: !1, line: 393, type: !2141)
!6443 = !DILocation(line: 393, column: 9, scope: !6381)
!6444 = !DILocation(line: 393, column: 31, scope: !6381)
!6445 = !DILocation(line: 393, column: 37, scope: !6381)
!6446 = !DILocation(line: 393, column: 48, scope: !6381)
!6447 = !DILocation(line: 393, column: 47, scope: !6381)
!6448 = !DILocation(line: 393, column: 16, scope: !6381)
!6449 = !DILocation(line: 396, column: 6, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6381, file: !1, line: 396, column: 6)
!6451 = !DILocation(line: 396, column: 13, scope: !6450)
!6452 = !DILocation(line: 396, column: 29, scope: !6450)
!6453 = !DILocation(line: 396, column: 6, scope: !6381)
!6454 = !DILocation(line: 397, column: 25, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 396, column: 49)
!6456 = !DILocation(line: 397, column: 32, scope: !6455)
!6457 = !DILocation(line: 397, column: 39, scope: !6455)
!6458 = !DILocation(line: 397, column: 61, scope: !6455)
!6459 = !DILocation(line: 397, column: 70, scope: !6455)
!6460 = !DILocation(line: 397, column: 76, scope: !6455)
!6461 = !DILocation(line: 397, column: 84, scope: !6455)
!6462 = !DILocation(line: 397, column: 94, scope: !6455)
!6463 = !DILocation(line: 397, column: 104, scope: !6455)
!6464 = !DILocation(line: 397, column: 115, scope: !6455)
!6465 = !DILocation(line: 397, column: 3, scope: !6455)
!6466 = !DILocation(line: 398, column: 2, scope: !6455)
!6467 = !DILocation(line: 400, column: 3, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 399, column: 7)
!6469 = !DILocation(line: 400, column: 16, scope: !6468)
!6470 = !DILocation(line: 401, column: 3, scope: !6468)
!6471 = !DILocation(line: 401, column: 16, scope: !6468)
!6472 = !DILocation(line: 402, column: 3, scope: !6468)
!6473 = !DILocation(line: 402, column: 16, scope: !6468)
!6474 = !DILocation(line: 406, column: 9, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6381, file: !1, line: 406, column: 2)
!6476 = !DILocation(line: 406, column: 7, scope: !6475)
!6477 = !DILocation(line: 406, column: 14, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6475, file: !1, line: 406, column: 2)
!6479 = !DILocation(line: 406, column: 18, scope: !6478)
!6480 = !DILocation(line: 406, column: 16, scope: !6478)
!6481 = !DILocation(line: 406, column: 2, scope: !6475)
!6482 = !DILocation(line: 407, column: 10, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6484, file: !1, line: 407, column: 3)
!6484 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 406, column: 29)
!6485 = !DILocation(line: 407, column: 8, scope: !6483)
!6486 = !DILocation(line: 407, column: 15, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !1, line: 407, column: 3)
!6488 = !DILocation(line: 407, column: 19, scope: !6487)
!6489 = !DILocation(line: 407, column: 17, scope: !6487)
!6490 = !DILocation(line: 407, column: 3, scope: !6483)
!6491 = !DILocalVariable(name: "texco", scope: !6492, file: !1, line: 409, type: !231)
!6492 = distinct !DILexicalBlock(scope: !6487, file: !1, line: 407, column: 30)
!6493 = !DILocation(line: 409, column: 10, scope: !6492)
!6494 = !DILocalVariable(name: "rgba", scope: !6492, file: !1, line: 409, type: !407)
!6495 = !DILocation(line: 409, column: 20, scope: !6492)
!6496 = !DILocation(line: 411, column: 8, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !1, line: 411, column: 8)
!6498 = !DILocation(line: 411, column: 8, scope: !6492)
!6499 = !DILocation(line: 412, column: 38, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6497, file: !1, line: 411, column: 21)
!6501 = !DILocation(line: 412, column: 41, scope: !6500)
!6502 = !DILocation(line: 412, column: 44, scope: !6500)
!6503 = !DILocation(line: 412, column: 5, scope: !6500)
!6504 = !DILocation(line: 413, column: 29, scope: !6500)
!6505 = !DILocation(line: 413, column: 36, scope: !6500)
!6506 = !DILocation(line: 413, column: 43, scope: !6500)
!6507 = !DILocation(line: 413, column: 50, scope: !6500)
!6508 = !DILocation(line: 413, column: 56, scope: !6500)
!6509 = !DILocation(line: 413, column: 64, scope: !6500)
!6510 = !DILocation(line: 413, column: 5, scope: !6500)
!6511 = !DILocation(line: 414, column: 15, scope: !6500)
!6512 = !DILocation(line: 414, column: 21, scope: !6500)
!6513 = !DILocation(line: 414, column: 5, scope: !6500)
!6514 = !DILocation(line: 416, column: 10, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6500, file: !1, line: 416, column: 9)
!6516 = !DILocation(line: 416, column: 9, scope: !6500)
!6517 = !DILocation(line: 417, column: 53, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6515, file: !1, line: 416, column: 21)
!6519 = !DILocation(line: 417, column: 59, scope: !6518)
!6520 = !DILocation(line: 417, column: 6, scope: !6518)
!6521 = !DILocation(line: 418, column: 5, scope: !6518)
!6522 = !DILocation(line: 419, column: 4, scope: !6500)
!6523 = !DILocation(line: 421, column: 16, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6497, file: !1, line: 420, column: 9)
!6525 = !DILocation(line: 421, column: 22, scope: !6524)
!6526 = !DILocation(line: 421, column: 5, scope: !6524)
!6527 = !DILocation(line: 422, column: 5, scope: !6524)
!6528 = !DILocation(line: 422, column: 13, scope: !6524)
!6529 = !DILocation(line: 425, column: 8, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6492, file: !1, line: 425, column: 8)
!6531 = !DILocation(line: 425, column: 8, scope: !6492)
!6532 = !DILocalVariable(name: "dstf", scope: !6533, file: !1, line: 427, type: !238)
!6533 = distinct !DILexicalBlock(scope: !6530, file: !1, line: 425, column: 19)
!6534 = !DILocation(line: 427, column: 12, scope: !6533)
!6535 = !DILocation(line: 427, column: 19, scope: !6533)
!6536 = !DILocation(line: 427, column: 25, scope: !6533)
!6537 = !DILocation(line: 427, column: 39, scope: !6533)
!6538 = !DILocation(line: 427, column: 43, scope: !6533)
!6539 = !DILocation(line: 427, column: 41, scope: !6533)
!6540 = !DILocation(line: 427, column: 50, scope: !6533)
!6541 = !DILocation(line: 427, column: 48, scope: !6533)
!6542 = !DILocation(line: 427, column: 53, scope: !6533)
!6543 = !DILocation(line: 427, column: 36, scope: !6533)
!6544 = !DILocation(line: 428, column: 17, scope: !6533)
!6545 = !DILocation(line: 428, column: 23, scope: !6533)
!6546 = !DILocation(line: 428, column: 29, scope: !6533)
!6547 = !DILocation(line: 428, column: 5, scope: !6533)
!6548 = !DILocation(line: 429, column: 15, scope: !6533)
!6549 = !DILocation(line: 429, column: 5, scope: !6533)
!6550 = !DILocation(line: 429, column: 13, scope: !6533)
!6551 = !DILocation(line: 430, column: 4, scope: !6533)
!6552 = !DILocalVariable(name: "dst", scope: !6553, file: !1, line: 433, type: !106)
!6553 = distinct !DILexicalBlock(scope: !6530, file: !1, line: 431, column: 9)
!6554 = !DILocation(line: 433, column: 20, scope: !6553)
!6555 = !DILocation(line: 433, column: 43, scope: !6553)
!6556 = !DILocation(line: 433, column: 49, scope: !6553)
!6557 = !DILocation(line: 433, column: 26, scope: !6553)
!6558 = !DILocation(line: 433, column: 57, scope: !6553)
!6559 = !DILocation(line: 433, column: 61, scope: !6553)
!6560 = !DILocation(line: 433, column: 59, scope: !6553)
!6561 = !DILocation(line: 433, column: 68, scope: !6553)
!6562 = !DILocation(line: 433, column: 66, scope: !6553)
!6563 = !DILocation(line: 433, column: 71, scope: !6553)
!6564 = !DILocation(line: 433, column: 54, scope: !6553)
!6565 = !DILocation(line: 435, column: 24, scope: !6553)
!6566 = !DILocation(line: 435, column: 29, scope: !6553)
!6567 = !DILocation(line: 435, column: 5, scope: !6553)
!6568 = !DILocation(line: 436, column: 14, scope: !6553)
!6569 = !DILocation(line: 436, column: 5, scope: !6553)
!6570 = !DILocation(line: 436, column: 12, scope: !6553)
!6571 = !DILocation(line: 438, column: 3, scope: !6492)
!6572 = !DILocation(line: 407, column: 26, scope: !6487)
!6573 = !DILocation(line: 407, column: 3, scope: !6487)
!6574 = distinct !{!6574, !6490, !6575}
!6575 = !DILocation(line: 438, column: 3, scope: !6483)
!6576 = !DILocation(line: 439, column: 2, scope: !6484)
!6577 = !DILocation(line: 406, column: 25, scope: !6478)
!6578 = !DILocation(line: 406, column: 2, scope: !6478)
!6579 = distinct !{!6579, !6481, !6580}
!6580 = !DILocation(line: 439, column: 2, scope: !6475)
!6581 = !DILocation(line: 441, column: 9, scope: !6381)
!6582 = !DILocation(line: 441, column: 2, scope: !6381)
!6583 = distinct !DISubprogram(name: "min_ii", scope: !6584, file: !6584, line: 211, type: !6585, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!6584 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6585 = !DISubroutineType(types: !6586)
!6586 = !{!66, !66, !66}
!6587 = !DILocalVariable(name: "a", arg: 1, scope: !6583, file: !6584, line: 211, type: !66)
!6588 = !DILocation(line: 211, column: 24, scope: !6583)
!6589 = !DILocalVariable(name: "b", arg: 2, scope: !6583, file: !6584, line: 211, type: !66)
!6590 = !DILocation(line: 211, column: 31, scope: !6583)
!6591 = !DILocation(line: 213, column: 10, scope: !6583)
!6592 = !DILocation(line: 213, column: 14, scope: !6583)
!6593 = !DILocation(line: 213, column: 12, scope: !6583)
!6594 = !DILocation(line: 213, column: 9, scope: !6583)
!6595 = !DILocation(line: 213, column: 19, scope: !6583)
!6596 = !DILocation(line: 213, column: 23, scope: !6583)
!6597 = !DILocation(line: 213, column: 2, scope: !6583)
!6598 = distinct !DISubprogram(name: "brush_painter_mask_imbuf_update", scope: !1, file: !1, line: 232, type: !6599, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!6599 = !DISubroutineType(types: !6600)
!6600 = !{null, !120, !2145, !66, !66, !66, !66, !66, !66, !66}
!6601 = !DILocalVariable(name: "painter", arg: 1, scope: !6598, file: !1, line: 233, type: !120)
!6602 = !DILocation(line: 233, column: 23, scope: !6598)
!6603 = !DILocalVariable(name: "tex_mask_old", arg: 2, scope: !6598, file: !1, line: 233, type: !2145)
!6604 = !DILocation(line: 233, column: 48, scope: !6598)
!6605 = !DILocalVariable(name: "origx", arg: 3, scope: !6598, file: !1, line: 234, type: !66)
!6606 = !DILocation(line: 234, column: 13, scope: !6598)
!6607 = !DILocalVariable(name: "origy", arg: 4, scope: !6598, file: !1, line: 234, type: !66)
!6608 = !DILocation(line: 234, column: 24, scope: !6598)
!6609 = !DILocalVariable(name: "w", arg: 5, scope: !6598, file: !1, line: 234, type: !66)
!6610 = !DILocation(line: 234, column: 35, scope: !6598)
!6611 = !DILocalVariable(name: "h", arg: 6, scope: !6598, file: !1, line: 234, type: !66)
!6612 = !DILocation(line: 234, column: 42, scope: !6598)
!6613 = !DILocalVariable(name: "xt", arg: 7, scope: !6598, file: !1, line: 234, type: !66)
!6614 = !DILocation(line: 234, column: 49, scope: !6598)
!6615 = !DILocalVariable(name: "yt", arg: 8, scope: !6598, file: !1, line: 234, type: !66)
!6616 = !DILocation(line: 234, column: 57, scope: !6598)
!6617 = !DILocalVariable(name: "diameter", arg: 9, scope: !6598, file: !1, line: 234, type: !66)
!6618 = !DILocation(line: 234, column: 65, scope: !6598)
!6619 = !DILocalVariable(name: "scene", scope: !6598, file: !1, line: 236, type: !125)
!6620 = !DILocation(line: 236, column: 9, scope: !6598)
!6621 = !DILocation(line: 236, column: 17, scope: !6598)
!6622 = !DILocation(line: 236, column: 26, scope: !6598)
!6623 = !DILocalVariable(name: "brush", scope: !6598, file: !1, line: 237, type: !2119)
!6624 = !DILocation(line: 237, column: 9, scope: !6598)
!6625 = !DILocation(line: 237, column: 17, scope: !6598)
!6626 = !DILocation(line: 237, column: 26, scope: !6598)
!6627 = !DILocalVariable(name: "tex_mapping", scope: !6598, file: !1, line: 238, type: !624)
!6628 = !DILocation(line: 238, column: 7, scope: !6598)
!6629 = !DILocation(line: 238, column: 21, scope: !6598)
!6630 = !DILocation(line: 238, column: 30, scope: !6598)
!6631 = !DILocalVariable(name: "pool", scope: !6598, file: !1, line: 239, type: !269)
!6632 = !DILocation(line: 239, column: 20, scope: !6598)
!6633 = !DILocation(line: 239, column: 27, scope: !6598)
!6634 = !DILocation(line: 239, column: 36, scope: !6598)
!6635 = !DILocalVariable(name: "res", scope: !6598, file: !1, line: 240, type: !114)
!6636 = !DILocation(line: 240, column: 17, scope: !6598)
!6637 = !DILocalVariable(name: "use_texture_old", scope: !6598, file: !1, line: 242, type: !107)
!6638 = !DILocation(line: 242, column: 7, scope: !6598)
!6639 = !DILocation(line: 242, column: 26, scope: !6598)
!6640 = !DILocation(line: 242, column: 39, scope: !6598)
!6641 = !DILocation(line: 242, column: 25, scope: !6598)
!6642 = !DILocalVariable(name: "x", scope: !6598, file: !1, line: 244, type: !66)
!6643 = !DILocation(line: 244, column: 6, scope: !6598)
!6644 = !DILocalVariable(name: "y", scope: !6598, file: !1, line: 244, type: !66)
!6645 = !DILocation(line: 244, column: 9, scope: !6598)
!6646 = !DILocalVariable(name: "thread", scope: !6598, file: !1, line: 244, type: !66)
!6647 = !DILocation(line: 244, column: 12, scope: !6598)
!6648 = !DILocalVariable(name: "tex_mask", scope: !6598, file: !1, line: 246, type: !2145)
!6649 = !DILocation(line: 246, column: 18, scope: !6598)
!6650 = !DILocation(line: 246, column: 29, scope: !6598)
!6651 = !DILocation(line: 246, column: 38, scope: !6598)
!6652 = !DILocation(line: 246, column: 44, scope: !6598)
!6653 = !DILocalVariable(name: "tex_mask_cur", scope: !6598, file: !1, line: 247, type: !2145)
!6654 = !DILocation(line: 247, column: 18, scope: !6598)
!6655 = !DILocation(line: 247, column: 33, scope: !6598)
!6656 = !DILocation(line: 247, column: 42, scope: !6598)
!6657 = !DILocation(line: 247, column: 48, scope: !6598)
!6658 = !DILocation(line: 250, column: 11, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6598, file: !1, line: 250, column: 2)
!6660 = !DILocation(line: 250, column: 9, scope: !6659)
!6661 = !DILocation(line: 250, column: 7, scope: !6659)
!6662 = !DILocation(line: 250, column: 18, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6659, file: !1, line: 250, column: 2)
!6664 = !DILocation(line: 250, column: 22, scope: !6663)
!6665 = !DILocation(line: 250, column: 20, scope: !6663)
!6666 = !DILocation(line: 250, column: 2, scope: !6659)
!6667 = !DILocation(line: 251, column: 12, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !1, line: 251, column: 3)
!6669 = distinct !DILexicalBlock(scope: !6663, file: !1, line: 250, column: 30)
!6670 = !DILocation(line: 251, column: 10, scope: !6668)
!6671 = !DILocation(line: 251, column: 8, scope: !6668)
!6672 = !DILocation(line: 251, column: 19, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6668, file: !1, line: 251, column: 3)
!6674 = !DILocation(line: 251, column: 23, scope: !6673)
!6675 = !DILocation(line: 251, column: 21, scope: !6673)
!6676 = !DILocation(line: 251, column: 3, scope: !6668)
!6677 = !DILocalVariable(name: "texco", scope: !6678, file: !1, line: 253, type: !231)
!6678 = distinct !DILexicalBlock(scope: !6673, file: !1, line: 251, column: 31)
!6679 = !DILocation(line: 253, column: 10, scope: !6678)
!6680 = !DILocalVariable(name: "b", scope: !6678, file: !1, line: 256, type: !2145)
!6681 = !DILocation(line: 256, column: 20, scope: !6678)
!6682 = !DILocation(line: 256, column: 24, scope: !6678)
!6683 = !DILocation(line: 256, column: 36, scope: !6678)
!6684 = !DILocation(line: 256, column: 40, scope: !6678)
!6685 = !DILocation(line: 256, column: 38, scope: !6678)
!6686 = !DILocation(line: 256, column: 51, scope: !6678)
!6687 = !DILocation(line: 256, column: 49, scope: !6678)
!6688 = !DILocation(line: 256, column: 33, scope: !6678)
!6689 = !DILocalVariable(name: "t", scope: !6678, file: !1, line: 257, type: !2145)
!6690 = !DILocation(line: 257, column: 20, scope: !6678)
!6691 = !DILocation(line: 257, column: 24, scope: !6678)
!6692 = !DILocation(line: 257, column: 40, scope: !6678)
!6693 = !DILocation(line: 257, column: 44, scope: !6678)
!6694 = !DILocation(line: 257, column: 42, scope: !6678)
!6695 = !DILocation(line: 257, column: 55, scope: !6678)
!6696 = !DILocation(line: 257, column: 53, scope: !6678)
!6697 = !DILocation(line: 257, column: 37, scope: !6678)
!6698 = !DILocation(line: 259, column: 9, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6678, file: !1, line: 259, column: 8)
!6700 = !DILocation(line: 259, column: 8, scope: !6678)
!6701 = !DILocation(line: 260, column: 38, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6699, file: !1, line: 259, column: 26)
!6703 = !DILocation(line: 260, column: 41, scope: !6702)
!6704 = !DILocation(line: 260, column: 44, scope: !6702)
!6705 = !DILocation(line: 260, column: 5, scope: !6702)
!6706 = !DILocation(line: 261, column: 64, scope: !6702)
!6707 = !DILocation(line: 261, column: 71, scope: !6702)
!6708 = !DILocation(line: 261, column: 78, scope: !6702)
!6709 = !DILocation(line: 261, column: 85, scope: !6702)
!6710 = !DILocation(line: 261, column: 93, scope: !6702)
!6711 = !DILocation(line: 261, column: 39, scope: !6702)
!6712 = !DILocation(line: 261, column: 37, scope: !6702)
!6713 = !DILocation(line: 261, column: 11, scope: !6702)
!6714 = !DILocation(line: 261, column: 9, scope: !6702)
!6715 = !DILocation(line: 262, column: 4, scope: !6702)
!6716 = !DILocation(line: 265, column: 8, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6678, file: !1, line: 265, column: 8)
!6718 = !DILocation(line: 265, column: 8, scope: !6678)
!6719 = !DILocation(line: 266, column: 13, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6717, file: !1, line: 265, column: 25)
!6721 = !DILocation(line: 266, column: 30, scope: !6720)
!6722 = !DILocation(line: 266, column: 34, scope: !6720)
!6723 = !DILocation(line: 266, column: 32, scope: !6720)
!6724 = !DILocation(line: 266, column: 42, scope: !6720)
!6725 = !DILocation(line: 266, column: 40, scope: !6720)
!6726 = !DILocation(line: 266, column: 48, scope: !6720)
!6727 = !DILocation(line: 266, column: 57, scope: !6720)
!6728 = !DILocation(line: 266, column: 63, scope: !6720)
!6729 = !DILocation(line: 266, column: 46, scope: !6720)
!6730 = !DILocation(line: 266, column: 81, scope: !6720)
!6731 = !DILocation(line: 266, column: 85, scope: !6720)
!6732 = !DILocation(line: 266, column: 83, scope: !6720)
!6733 = !DILocation(line: 266, column: 93, scope: !6720)
!6734 = !DILocation(line: 266, column: 91, scope: !6720)
!6735 = !DILocation(line: 266, column: 78, scope: !6720)
!6736 = !DILocation(line: 266, column: 26, scope: !6720)
!6737 = !DILocation(line: 266, column: 11, scope: !6720)
!6738 = !DILocation(line: 266, column: 9, scope: !6720)
!6739 = !DILocation(line: 267, column: 4, scope: !6720)
!6740 = !DILocation(line: 270, column: 9, scope: !6678)
!6741 = !DILocation(line: 270, column: 5, scope: !6678)
!6742 = !DILocation(line: 270, column: 7, scope: !6678)
!6743 = !DILocation(line: 272, column: 9, scope: !6678)
!6744 = !DILocation(line: 272, column: 5, scope: !6678)
!6745 = !DILocation(line: 272, column: 7, scope: !6678)
!6746 = !DILocation(line: 273, column: 3, scope: !6678)
!6747 = !DILocation(line: 251, column: 27, scope: !6673)
!6748 = !DILocation(line: 251, column: 3, scope: !6673)
!6749 = distinct !{!6749, !6676, !6750}
!6750 = !DILocation(line: 273, column: 3, scope: !6668)
!6751 = !DILocation(line: 274, column: 2, scope: !6669)
!6752 = !DILocation(line: 250, column: 26, scope: !6663)
!6753 = !DILocation(line: 250, column: 2, scope: !6663)
!6754 = distinct !{!6754, !6666, !6755}
!6755 = !DILocation(line: 274, column: 2, scope: !6659)
!6756 = !DILocation(line: 275, column: 1, scope: !6598)
!6757 = distinct !DISubprogram(name: "brush_imbuf_tex_co", scope: !1, file: !1, line: 197, type: !6758, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{null, !5534, !66, !66, !238}
!6760 = !DILocalVariable(name: "mapping", arg: 1, scope: !6757, file: !1, line: 197, type: !5534)
!6761 = !DILocation(line: 197, column: 38, scope: !6757)
!6762 = !DILocalVariable(name: "x", arg: 2, scope: !6757, file: !1, line: 197, type: !66)
!6763 = !DILocation(line: 197, column: 51, scope: !6757)
!6764 = !DILocalVariable(name: "y", arg: 3, scope: !6757, file: !1, line: 197, type: !66)
!6765 = !DILocation(line: 197, column: 58, scope: !6757)
!6766 = !DILocalVariable(name: "texco", arg: 4, scope: !6757, file: !1, line: 197, type: !238)
!6767 = !DILocation(line: 197, column: 67, scope: !6757)
!6768 = !DILocation(line: 199, column: 13, scope: !6757)
!6769 = !DILocation(line: 199, column: 22, scope: !6757)
!6770 = !DILocation(line: 199, column: 29, scope: !6757)
!6771 = !DILocation(line: 199, column: 33, scope: !6757)
!6772 = !DILocation(line: 199, column: 42, scope: !6757)
!6773 = !DILocation(line: 199, column: 31, scope: !6757)
!6774 = !DILocation(line: 199, column: 27, scope: !6757)
!6775 = !DILocation(line: 199, column: 2, scope: !6757)
!6776 = !DILocation(line: 199, column: 11, scope: !6757)
!6777 = !DILocation(line: 200, column: 13, scope: !6757)
!6778 = !DILocation(line: 200, column: 22, scope: !6757)
!6779 = !DILocation(line: 200, column: 29, scope: !6757)
!6780 = !DILocation(line: 200, column: 33, scope: !6757)
!6781 = !DILocation(line: 200, column: 42, scope: !6757)
!6782 = !DILocation(line: 200, column: 31, scope: !6757)
!6783 = !DILocation(line: 200, column: 27, scope: !6757)
!6784 = !DILocation(line: 200, column: 2, scope: !6757)
!6785 = !DILocation(line: 200, column: 11, scope: !6757)
!6786 = !DILocation(line: 201, column: 2, scope: !6757)
!6787 = !DILocation(line: 201, column: 11, scope: !6757)
!6788 = !DILocation(line: 202, column: 1, scope: !6757)
!6789 = distinct !DISubprogram(name: "brush_painter_imbuf_update", scope: !1, file: !1, line: 445, type: !6790, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!6790 = !DISubroutineType(types: !6791)
!6791 = !{null, !120, !2141, !66, !66, !66, !66, !66, !66}
!6792 = !DILocalVariable(name: "painter", arg: 1, scope: !6789, file: !1, line: 445, type: !120)
!6793 = !DILocation(line: 445, column: 54, scope: !6789)
!6794 = !DILocalVariable(name: "oldtexibuf", arg: 2, scope: !6789, file: !1, line: 445, type: !2141)
!6795 = !DILocation(line: 445, column: 70, scope: !6789)
!6796 = !DILocalVariable(name: "origx", arg: 3, scope: !6789, file: !1, line: 446, type: !66)
!6797 = !DILocation(line: 446, column: 44, scope: !6789)
!6798 = !DILocalVariable(name: "origy", arg: 4, scope: !6789, file: !1, line: 446, type: !66)
!6799 = !DILocation(line: 446, column: 55, scope: !6789)
!6800 = !DILocalVariable(name: "w", arg: 5, scope: !6789, file: !1, line: 446, type: !66)
!6801 = !DILocation(line: 446, column: 66, scope: !6789)
!6802 = !DILocalVariable(name: "h", arg: 6, scope: !6789, file: !1, line: 446, type: !66)
!6803 = !DILocation(line: 446, column: 73, scope: !6789)
!6804 = !DILocalVariable(name: "xt", arg: 7, scope: !6789, file: !1, line: 446, type: !66)
!6805 = !DILocation(line: 446, column: 80, scope: !6789)
!6806 = !DILocalVariable(name: "yt", arg: 8, scope: !6789, file: !1, line: 446, type: !66)
!6807 = !DILocation(line: 446, column: 88, scope: !6789)
!6808 = !DILocalVariable(name: "scene", scope: !6789, file: !1, line: 448, type: !125)
!6809 = !DILocation(line: 448, column: 9, scope: !6789)
!6810 = !DILocation(line: 448, column: 17, scope: !6789)
!6811 = !DILocation(line: 448, column: 26, scope: !6789)
!6812 = !DILocalVariable(name: "brush", scope: !6789, file: !1, line: 449, type: !2119)
!6813 = !DILocation(line: 449, column: 9, scope: !6789)
!6814 = !DILocation(line: 449, column: 17, scope: !6789)
!6815 = !DILocation(line: 449, column: 26, scope: !6789)
!6816 = !DILocalVariable(name: "display_device", scope: !6789, file: !1, line: 451, type: !2363)
!6817 = !DILocation(line: 451, column: 14, scope: !6789)
!6818 = !DILocation(line: 451, column: 31, scope: !6789)
!6819 = !DILocation(line: 451, column: 38, scope: !6789)
!6820 = !DILocation(line: 451, column: 55, scope: !6789)
!6821 = !DILocalVariable(name: "display", scope: !6789, file: !1, line: 452, type: !6406)
!6822 = !DILocation(line: 452, column: 30, scope: !6789)
!6823 = !DILocation(line: 452, column: 78, scope: !6789)
!6824 = !DILocation(line: 452, column: 40, scope: !6789)
!6825 = !DILocalVariable(name: "tex_mapping", scope: !6789, file: !1, line: 454, type: !624)
!6826 = !DILocation(line: 454, column: 7, scope: !6789)
!6827 = !DILocation(line: 454, column: 21, scope: !6789)
!6828 = !DILocation(line: 454, column: 30, scope: !6789)
!6829 = !DILocalVariable(name: "pool", scope: !6789, file: !1, line: 455, type: !269)
!6830 = !DILocation(line: 455, column: 20, scope: !6789)
!6831 = !DILocation(line: 455, column: 27, scope: !6789)
!6832 = !DILocation(line: 455, column: 36, scope: !6789)
!6833 = !DILocalVariable(name: "use_color_correction", scope: !6789, file: !1, line: 457, type: !107)
!6834 = !DILocation(line: 457, column: 7, scope: !6789)
!6835 = !DILocation(line: 457, column: 30, scope: !6789)
!6836 = !DILocation(line: 457, column: 39, scope: !6789)
!6837 = !DILocation(line: 457, column: 45, scope: !6789)
!6838 = !DILocalVariable(name: "use_float", scope: !6789, file: !1, line: 458, type: !107)
!6839 = !DILocation(line: 458, column: 7, scope: !6789)
!6840 = !DILocation(line: 458, column: 19, scope: !6789)
!6841 = !DILocation(line: 458, column: 28, scope: !6789)
!6842 = !DILocation(line: 458, column: 34, scope: !6789)
!6843 = !DILocalVariable(name: "is_texbrush", scope: !6789, file: !1, line: 459, type: !107)
!6844 = !DILocation(line: 459, column: 7, scope: !6789)
!6845 = !DILocation(line: 459, column: 21, scope: !6789)
!6846 = !DILocation(line: 459, column: 30, scope: !6789)
!6847 = !DILocation(line: 459, column: 36, scope: !6789)
!6848 = !DILocalVariable(name: "use_texture_old", scope: !6789, file: !1, line: 460, type: !107)
!6849 = !DILocation(line: 460, column: 7, scope: !6789)
!6850 = !DILocation(line: 460, column: 26, scope: !6789)
!6851 = !DILocation(line: 460, column: 37, scope: !6789)
!6852 = !DILocation(line: 460, column: 25, scope: !6789)
!6853 = !DILocalVariable(name: "x", scope: !6789, file: !1, line: 462, type: !66)
!6854 = !DILocation(line: 462, column: 6, scope: !6789)
!6855 = !DILocalVariable(name: "y", scope: !6789, file: !1, line: 462, type: !66)
!6856 = !DILocation(line: 462, column: 9, scope: !6789)
!6857 = !DILocalVariable(name: "thread", scope: !6789, file: !1, line: 462, type: !66)
!6858 = !DILocation(line: 462, column: 12, scope: !6789)
!6859 = !DILocalVariable(name: "brush_rgb", scope: !6789, file: !1, line: 463, type: !231)
!6860 = !DILocation(line: 463, column: 8, scope: !6789)
!6861 = !DILocalVariable(name: "ibuf", scope: !6789, file: !1, line: 465, type: !2141)
!6862 = !DILocation(line: 465, column: 9, scope: !6789)
!6863 = !DILocation(line: 465, column: 16, scope: !6789)
!6864 = !DILocation(line: 465, column: 25, scope: !6789)
!6865 = !DILocation(line: 465, column: 31, scope: !6789)
!6866 = !DILocalVariable(name: "texibuf", scope: !6789, file: !1, line: 466, type: !2141)
!6867 = !DILocation(line: 466, column: 9, scope: !6789)
!6868 = !DILocation(line: 466, column: 19, scope: !6789)
!6869 = !DILocation(line: 466, column: 28, scope: !6789)
!6870 = !DILocation(line: 466, column: 34, scope: !6789)
!6871 = !DILocation(line: 469, column: 6, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6789, file: !1, line: 469, column: 6)
!6873 = !DILocation(line: 469, column: 13, scope: !6872)
!6874 = !DILocation(line: 469, column: 29, scope: !6872)
!6875 = !DILocation(line: 469, column: 6, scope: !6789)
!6876 = !DILocation(line: 470, column: 25, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !1, line: 469, column: 49)
!6878 = !DILocation(line: 470, column: 32, scope: !6877)
!6879 = !DILocation(line: 470, column: 39, scope: !6877)
!6880 = !DILocation(line: 470, column: 61, scope: !6877)
!6881 = !DILocation(line: 470, column: 70, scope: !6877)
!6882 = !DILocation(line: 470, column: 76, scope: !6877)
!6883 = !DILocation(line: 470, column: 94, scope: !6877)
!6884 = !DILocation(line: 470, column: 105, scope: !6877)
!6885 = !DILocation(line: 470, column: 3, scope: !6877)
!6886 = !DILocation(line: 471, column: 2, scope: !6877)
!6887 = !DILocation(line: 473, column: 3, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6872, file: !1, line: 472, column: 7)
!6889 = !DILocation(line: 473, column: 16, scope: !6888)
!6890 = !DILocation(line: 474, column: 3, scope: !6888)
!6891 = !DILocation(line: 474, column: 16, scope: !6888)
!6892 = !DILocation(line: 475, column: 3, scope: !6888)
!6893 = !DILocation(line: 475, column: 16, scope: !6888)
!6894 = !DILocation(line: 479, column: 11, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6789, file: !1, line: 479, column: 2)
!6896 = !DILocation(line: 479, column: 9, scope: !6895)
!6897 = !DILocation(line: 479, column: 7, scope: !6895)
!6898 = !DILocation(line: 479, column: 18, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6895, file: !1, line: 479, column: 2)
!6900 = !DILocation(line: 479, column: 22, scope: !6899)
!6901 = !DILocation(line: 479, column: 20, scope: !6899)
!6902 = !DILocation(line: 479, column: 2, scope: !6895)
!6903 = !DILocation(line: 480, column: 12, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !1, line: 480, column: 3)
!6905 = distinct !DILexicalBlock(scope: !6899, file: !1, line: 479, column: 30)
!6906 = !DILocation(line: 480, column: 10, scope: !6904)
!6907 = !DILocation(line: 480, column: 8, scope: !6904)
!6908 = !DILocation(line: 480, column: 19, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6904, file: !1, line: 480, column: 3)
!6910 = !DILocation(line: 480, column: 23, scope: !6909)
!6911 = !DILocation(line: 480, column: 21, scope: !6909)
!6912 = !DILocation(line: 480, column: 3, scope: !6904)
!6913 = !DILocalVariable(name: "texco", scope: !6914, file: !1, line: 482, type: !231)
!6914 = distinct !DILexicalBlock(scope: !6909, file: !1, line: 480, column: 31)
!6915 = !DILocation(line: 482, column: 10, scope: !6914)
!6916 = !DILocalVariable(name: "rgba", scope: !6914, file: !1, line: 482, type: !407)
!6917 = !DILocation(line: 482, column: 20, scope: !6914)
!6918 = !DILocation(line: 484, column: 9, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6914, file: !1, line: 484, column: 8)
!6920 = !DILocation(line: 484, column: 8, scope: !6914)
!6921 = !DILocation(line: 485, column: 9, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !1, line: 485, column: 9)
!6923 = distinct !DILexicalBlock(scope: !6919, file: !1, line: 484, column: 26)
!6924 = !DILocation(line: 485, column: 9, scope: !6923)
!6925 = !DILocation(line: 486, column: 39, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6922, file: !1, line: 485, column: 22)
!6927 = !DILocation(line: 486, column: 42, scope: !6926)
!6928 = !DILocation(line: 486, column: 45, scope: !6926)
!6929 = !DILocation(line: 486, column: 6, scope: !6926)
!6930 = !DILocation(line: 487, column: 30, scope: !6926)
!6931 = !DILocation(line: 487, column: 37, scope: !6926)
!6932 = !DILocation(line: 487, column: 44, scope: !6926)
!6933 = !DILocation(line: 487, column: 51, scope: !6926)
!6934 = !DILocation(line: 487, column: 57, scope: !6926)
!6935 = !DILocation(line: 487, column: 65, scope: !6926)
!6936 = !DILocation(line: 487, column: 6, scope: !6926)
!6937 = !DILocation(line: 488, column: 16, scope: !6926)
!6938 = !DILocation(line: 488, column: 22, scope: !6926)
!6939 = !DILocation(line: 488, column: 6, scope: !6926)
!6940 = !DILocation(line: 490, column: 11, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6926, file: !1, line: 490, column: 10)
!6942 = !DILocation(line: 490, column: 10, scope: !6926)
!6943 = !DILocation(line: 491, column: 54, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6941, file: !1, line: 490, column: 22)
!6945 = !DILocation(line: 491, column: 60, scope: !6944)
!6946 = !DILocation(line: 491, column: 7, scope: !6944)
!6947 = !DILocation(line: 492, column: 6, scope: !6944)
!6948 = !DILocation(line: 493, column: 5, scope: !6926)
!6949 = !DILocation(line: 495, column: 17, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6922, file: !1, line: 494, column: 10)
!6951 = !DILocation(line: 495, column: 23, scope: !6950)
!6952 = !DILocation(line: 495, column: 6, scope: !6950)
!6953 = !DILocation(line: 496, column: 6, scope: !6950)
!6954 = !DILocation(line: 496, column: 14, scope: !6950)
!6955 = !DILocation(line: 498, column: 4, scope: !6923)
!6956 = !DILocation(line: 500, column: 8, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6914, file: !1, line: 500, column: 8)
!6958 = !DILocation(line: 500, column: 8, scope: !6914)
!6959 = !DILocalVariable(name: "bf", scope: !6960, file: !1, line: 502, type: !238)
!6960 = distinct !DILexicalBlock(scope: !6957, file: !1, line: 500, column: 19)
!6961 = !DILocation(line: 502, column: 12, scope: !6960)
!6962 = !DILocation(line: 502, column: 17, scope: !6960)
!6963 = !DILocation(line: 502, column: 23, scope: !6960)
!6964 = !DILocation(line: 502, column: 37, scope: !6960)
!6965 = !DILocation(line: 502, column: 41, scope: !6960)
!6966 = !DILocation(line: 502, column: 47, scope: !6960)
!6967 = !DILocation(line: 502, column: 39, scope: !6960)
!6968 = !DILocation(line: 502, column: 51, scope: !6960)
!6969 = !DILocation(line: 502, column: 49, scope: !6960)
!6970 = !DILocation(line: 502, column: 54, scope: !6960)
!6971 = !DILocation(line: 502, column: 34, scope: !6960)
!6972 = !DILocalVariable(name: "tf", scope: !6960, file: !1, line: 503, type: !238)
!6973 = !DILocation(line: 503, column: 12, scope: !6960)
!6974 = !DILocation(line: 503, column: 17, scope: !6960)
!6975 = !DILocation(line: 503, column: 26, scope: !6960)
!6976 = !DILocation(line: 503, column: 40, scope: !6960)
!6977 = !DILocation(line: 503, column: 44, scope: !6960)
!6978 = !DILocation(line: 503, column: 53, scope: !6960)
!6979 = !DILocation(line: 503, column: 42, scope: !6960)
!6980 = !DILocation(line: 503, column: 57, scope: !6960)
!6981 = !DILocation(line: 503, column: 55, scope: !6960)
!6982 = !DILocation(line: 503, column: 60, scope: !6960)
!6983 = !DILocation(line: 503, column: 37, scope: !6960)
!6984 = !DILocation(line: 506, column: 9, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6960, file: !1, line: 506, column: 9)
!6986 = !DILocation(line: 506, column: 9, scope: !6960)
!6987 = !DILocalVariable(name: "otf", scope: !6988, file: !1, line: 507, type: !2450)
!6988 = distinct !DILexicalBlock(scope: !6985, file: !1, line: 506, column: 26)
!6989 = !DILocation(line: 507, column: 19, scope: !6988)
!6990 = !DILocation(line: 507, column: 25, scope: !6988)
!6991 = !DILocation(line: 507, column: 37, scope: !6988)
!6992 = !DILocation(line: 507, column: 52, scope: !6988)
!6993 = !DILocation(line: 507, column: 56, scope: !6988)
!6994 = !DILocation(line: 507, column: 54, scope: !6988)
!6995 = !DILocation(line: 507, column: 64, scope: !6988)
!6996 = !DILocation(line: 507, column: 62, scope: !6988)
!6997 = !DILocation(line: 507, column: 70, scope: !6988)
!6998 = !DILocation(line: 507, column: 82, scope: !6988)
!6999 = !DILocation(line: 507, column: 68, scope: !6988)
!7000 = !DILocation(line: 507, column: 87, scope: !6988)
!7001 = !DILocation(line: 507, column: 91, scope: !6988)
!7002 = !DILocation(line: 507, column: 89, scope: !6988)
!7003 = !DILocation(line: 507, column: 99, scope: !6988)
!7004 = !DILocation(line: 507, column: 97, scope: !6988)
!7005 = !DILocation(line: 507, column: 84, scope: !6988)
!7006 = !DILocation(line: 507, column: 104, scope: !6988)
!7007 = !DILocation(line: 507, column: 48, scope: !6988)
!7008 = !DILocation(line: 508, column: 17, scope: !6988)
!7009 = !DILocation(line: 508, column: 23, scope: !6988)
!7010 = !DILocation(line: 508, column: 6, scope: !6988)
!7011 = !DILocation(line: 509, column: 5, scope: !6988)
!7012 = !DILocation(line: 512, column: 16, scope: !6960)
!7013 = !DILocation(line: 512, column: 20, scope: !6960)
!7014 = !DILocation(line: 512, column: 5, scope: !6960)
!7015 = !DILocation(line: 515, column: 17, scope: !6960)
!7016 = !DILocation(line: 515, column: 21, scope: !6960)
!7017 = !DILocation(line: 515, column: 27, scope: !6960)
!7018 = !DILocation(line: 515, column: 5, scope: !6960)
!7019 = !DILocation(line: 516, column: 13, scope: !6960)
!7020 = !DILocation(line: 516, column: 5, scope: !6960)
!7021 = !DILocation(line: 516, column: 11, scope: !6960)
!7022 = !DILocation(line: 517, column: 4, scope: !6960)
!7023 = !DILocalVariable(name: "crgba", scope: !7024, file: !1, line: 519, type: !1562)
!7024 = distinct !DILexicalBlock(scope: !6957, file: !1, line: 518, column: 9)
!7025 = !DILocation(line: 519, column: 19, scope: !7024)
!7026 = !DILocalVariable(name: "b", scope: !7024, file: !1, line: 522, type: !106)
!7027 = !DILocation(line: 522, column: 20, scope: !7024)
!7028 = !DILocation(line: 522, column: 41, scope: !7024)
!7029 = !DILocation(line: 522, column: 47, scope: !7024)
!7030 = !DILocation(line: 522, column: 24, scope: !7024)
!7031 = !DILocation(line: 522, column: 55, scope: !7024)
!7032 = !DILocation(line: 522, column: 59, scope: !7024)
!7033 = !DILocation(line: 522, column: 65, scope: !7024)
!7034 = !DILocation(line: 522, column: 57, scope: !7024)
!7035 = !DILocation(line: 522, column: 69, scope: !7024)
!7036 = !DILocation(line: 522, column: 67, scope: !7024)
!7037 = !DILocation(line: 522, column: 72, scope: !7024)
!7038 = !DILocation(line: 522, column: 52, scope: !7024)
!7039 = !DILocalVariable(name: "t", scope: !7024, file: !1, line: 523, type: !106)
!7040 = !DILocation(line: 523, column: 20, scope: !7024)
!7041 = !DILocation(line: 523, column: 41, scope: !7024)
!7042 = !DILocation(line: 523, column: 50, scope: !7024)
!7043 = !DILocation(line: 523, column: 24, scope: !7024)
!7044 = !DILocation(line: 523, column: 58, scope: !7024)
!7045 = !DILocation(line: 523, column: 62, scope: !7024)
!7046 = !DILocation(line: 523, column: 71, scope: !7024)
!7047 = !DILocation(line: 523, column: 60, scope: !7024)
!7048 = !DILocation(line: 523, column: 75, scope: !7024)
!7049 = !DILocation(line: 523, column: 73, scope: !7024)
!7050 = !DILocation(line: 523, column: 78, scope: !7024)
!7051 = !DILocation(line: 523, column: 55, scope: !7024)
!7052 = !DILocation(line: 526, column: 9, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7024, file: !1, line: 526, column: 9)
!7054 = !DILocation(line: 526, column: 9, scope: !7024)
!7055 = !DILocalVariable(name: "ot", scope: !7056, file: !1, line: 527, type: !106)
!7056 = distinct !DILexicalBlock(scope: !7053, file: !1, line: 526, column: 26)
!7057 = !DILocation(line: 527, column: 21, scope: !7056)
!7058 = !DILocation(line: 527, column: 43, scope: !7056)
!7059 = !DILocation(line: 527, column: 55, scope: !7056)
!7060 = !DILocation(line: 527, column: 26, scope: !7056)
!7061 = !DILocation(line: 527, column: 64, scope: !7056)
!7062 = !DILocation(line: 527, column: 68, scope: !7056)
!7063 = !DILocation(line: 527, column: 66, scope: !7056)
!7064 = !DILocation(line: 527, column: 76, scope: !7056)
!7065 = !DILocation(line: 527, column: 74, scope: !7056)
!7066 = !DILocation(line: 527, column: 82, scope: !7056)
!7067 = !DILocation(line: 527, column: 94, scope: !7056)
!7068 = !DILocation(line: 527, column: 80, scope: !7056)
!7069 = !DILocation(line: 527, column: 99, scope: !7056)
!7070 = !DILocation(line: 527, column: 103, scope: !7056)
!7071 = !DILocation(line: 527, column: 101, scope: !7056)
!7072 = !DILocation(line: 527, column: 111, scope: !7056)
!7073 = !DILocation(line: 527, column: 109, scope: !7056)
!7074 = !DILocation(line: 527, column: 96, scope: !7056)
!7075 = !DILocation(line: 527, column: 116, scope: !7056)
!7076 = !DILocation(line: 527, column: 60, scope: !7056)
!7077 = !DILocation(line: 528, column: 17, scope: !7056)
!7078 = !DILocation(line: 528, column: 6, scope: !7056)
!7079 = !DILocation(line: 528, column: 15, scope: !7056)
!7080 = !DILocation(line: 529, column: 17, scope: !7056)
!7081 = !DILocation(line: 529, column: 6, scope: !7056)
!7082 = !DILocation(line: 529, column: 15, scope: !7056)
!7083 = !DILocation(line: 530, column: 17, scope: !7056)
!7084 = !DILocation(line: 530, column: 6, scope: !7056)
!7085 = !DILocation(line: 530, column: 15, scope: !7056)
!7086 = !DILocation(line: 531, column: 17, scope: !7056)
!7087 = !DILocation(line: 531, column: 6, scope: !7056)
!7088 = !DILocation(line: 531, column: 15, scope: !7056)
!7089 = !DILocation(line: 532, column: 5, scope: !7056)
!7090 = !DILocation(line: 534, column: 26, scope: !7053)
!7091 = !DILocation(line: 534, column: 33, scope: !7053)
!7092 = !DILocation(line: 534, column: 6, scope: !7053)
!7093 = !DILocation(line: 537, column: 12, scope: !7024)
!7094 = !DILocation(line: 537, column: 5, scope: !7024)
!7095 = !DILocation(line: 537, column: 10, scope: !7024)
!7096 = !DILocation(line: 538, column: 12, scope: !7024)
!7097 = !DILocation(line: 538, column: 5, scope: !7024)
!7098 = !DILocation(line: 538, column: 10, scope: !7024)
!7099 = !DILocation(line: 539, column: 12, scope: !7024)
!7100 = !DILocation(line: 539, column: 5, scope: !7024)
!7101 = !DILocation(line: 539, column: 10, scope: !7024)
!7102 = !DILocation(line: 540, column: 12, scope: !7024)
!7103 = !DILocation(line: 540, column: 5, scope: !7024)
!7104 = !DILocation(line: 540, column: 10, scope: !7024)
!7105 = !DILocation(line: 543, column: 12, scope: !7024)
!7106 = !DILocation(line: 543, column: 5, scope: !7024)
!7107 = !DILocation(line: 543, column: 10, scope: !7024)
!7108 = !DILocation(line: 544, column: 12, scope: !7024)
!7109 = !DILocation(line: 544, column: 5, scope: !7024)
!7110 = !DILocation(line: 544, column: 10, scope: !7024)
!7111 = !DILocation(line: 545, column: 12, scope: !7024)
!7112 = !DILocation(line: 545, column: 5, scope: !7024)
!7113 = !DILocation(line: 545, column: 10, scope: !7024)
!7114 = !DILocation(line: 546, column: 12, scope: !7024)
!7115 = !DILocation(line: 546, column: 5, scope: !7024)
!7116 = !DILocation(line: 546, column: 10, scope: !7024)
!7117 = !DILocation(line: 548, column: 3, scope: !6914)
!7118 = !DILocation(line: 480, column: 27, scope: !6909)
!7119 = !DILocation(line: 480, column: 3, scope: !6909)
!7120 = distinct !{!7120, !6912, !7121}
!7121 = !DILocation(line: 548, column: 3, scope: !6904)
!7122 = !DILocation(line: 549, column: 2, scope: !6905)
!7123 = !DILocation(line: 479, column: 26, scope: !6899)
!7124 = !DILocation(line: 479, column: 2, scope: !6899)
!7125 = distinct !{!7125, !6902, !7126}
!7126 = !DILocation(line: 549, column: 2, scope: !6895)
!7127 = !DILocation(line: 550, column: 1, scope: !6789)
!7128 = distinct !DISubprogram(name: "mul_v3_v3", scope: !2623, file: !2623, line: 412, type: !2624, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7129 = !DILocalVariable(name: "r", arg: 1, scope: !7128, file: !2623, line: 412, type: !238)
!7130 = !DILocation(line: 412, column: 30, scope: !7128)
!7131 = !DILocalVariable(name: "a", arg: 2, scope: !7128, file: !2623, line: 412, type: !2450)
!7132 = !DILocation(line: 412, column: 48, scope: !7128)
!7133 = !DILocation(line: 414, column: 10, scope: !7128)
!7134 = !DILocation(line: 414, column: 2, scope: !7128)
!7135 = !DILocation(line: 414, column: 7, scope: !7128)
!7136 = !DILocation(line: 415, column: 10, scope: !7128)
!7137 = !DILocation(line: 415, column: 2, scope: !7128)
!7138 = !DILocation(line: 415, column: 7, scope: !7128)
!7139 = !DILocation(line: 416, column: 10, scope: !7128)
!7140 = !DILocation(line: 416, column: 2, scope: !7128)
!7141 = !DILocation(line: 416, column: 7, scope: !7128)
!7142 = !DILocation(line: 417, column: 1, scope: !7128)
!7143 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !2623, file: !2623, line: 399, type: !7144, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{null, !238, !2450, !113}
!7146 = !DILocalVariable(name: "r", arg: 1, scope: !7143, file: !2623, line: 399, type: !238)
!7147 = !DILocation(line: 399, column: 32, scope: !7143)
!7148 = !DILocalVariable(name: "a", arg: 2, scope: !7143, file: !2623, line: 399, type: !2450)
!7149 = !DILocation(line: 399, column: 50, scope: !7143)
!7150 = !DILocalVariable(name: "f", arg: 3, scope: !7143, file: !2623, line: 399, type: !113)
!7151 = !DILocation(line: 399, column: 62, scope: !7143)
!7152 = !DILocation(line: 401, column: 9, scope: !7143)
!7153 = !DILocation(line: 401, column: 16, scope: !7143)
!7154 = !DILocation(line: 401, column: 14, scope: !7143)
!7155 = !DILocation(line: 401, column: 2, scope: !7143)
!7156 = !DILocation(line: 401, column: 7, scope: !7143)
!7157 = !DILocation(line: 402, column: 9, scope: !7143)
!7158 = !DILocation(line: 402, column: 16, scope: !7143)
!7159 = !DILocation(line: 402, column: 14, scope: !7143)
!7160 = !DILocation(line: 402, column: 2, scope: !7143)
!7161 = !DILocation(line: 402, column: 7, scope: !7143)
!7162 = !DILocation(line: 403, column: 9, scope: !7143)
!7163 = !DILocation(line: 403, column: 16, scope: !7143)
!7164 = !DILocation(line: 403, column: 14, scope: !7143)
!7165 = !DILocation(line: 403, column: 2, scope: !7143)
!7166 = !DILocation(line: 403, column: 7, scope: !7143)
!7167 = !DILocation(line: 404, column: 1, scope: !7143)
!7168 = distinct !DISubprogram(name: "paint_2d_convert_brushco", scope: !1, file: !1, line: 1000, type: !7169, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{null, !2141, !2450, !1277}
!7171 = !DILocalVariable(name: "ibufb", arg: 1, scope: !7168, file: !1, line: 1000, type: !2141)
!7172 = !DILocation(line: 1000, column: 45, scope: !7168)
!7173 = !DILocalVariable(name: "pos", arg: 2, scope: !7168, file: !1, line: 1000, type: !2450)
!7174 = !DILocation(line: 1000, column: 64, scope: !7168)
!7175 = !DILocalVariable(name: "ipos", arg: 3, scope: !7168, file: !1, line: 1000, type: !1277)
!7176 = !DILocation(line: 1000, column: 76, scope: !7168)
!7177 = !DILocation(line: 1002, column: 25, scope: !7168)
!7178 = !DILocation(line: 1002, column: 34, scope: !7168)
!7179 = !DILocation(line: 1002, column: 41, scope: !7168)
!7180 = !DILocation(line: 1002, column: 43, scope: !7168)
!7181 = !DILocation(line: 1002, column: 32, scope: !7168)
!7182 = !DILocation(line: 1002, column: 48, scope: !7168)
!7183 = !DILocation(line: 1002, column: 17, scope: !7168)
!7184 = !DILocation(line: 1002, column: 12, scope: !7168)
!7185 = !DILocation(line: 1002, column: 2, scope: !7168)
!7186 = !DILocation(line: 1002, column: 10, scope: !7168)
!7187 = !DILocation(line: 1003, column: 25, scope: !7168)
!7188 = !DILocation(line: 1003, column: 34, scope: !7168)
!7189 = !DILocation(line: 1003, column: 41, scope: !7168)
!7190 = !DILocation(line: 1003, column: 43, scope: !7168)
!7191 = !DILocation(line: 1003, column: 32, scope: !7168)
!7192 = !DILocation(line: 1003, column: 48, scope: !7168)
!7193 = !DILocation(line: 1003, column: 17, scope: !7168)
!7194 = !DILocation(line: 1003, column: 12, scope: !7168)
!7195 = !DILocation(line: 1003, column: 2, scope: !7168)
!7196 = !DILocation(line: 1003, column: 10, scope: !7168)
!7197 = !DILocation(line: 1004, column: 1, scope: !7168)
!7198 = distinct !DISubprogram(name: "paint_2d_lift_soften", scope: !1, file: !1, line: 839, type: !7199, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{null, !115, !2141, !2141, !1277, !7201}
!7201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!7202 = !DILocalVariable(name: "s", arg: 1, scope: !7198, file: !1, line: 839, type: !115)
!7203 = !DILocation(line: 839, column: 51, scope: !7198)
!7204 = !DILocalVariable(name: "ibuf", arg: 2, scope: !7198, file: !1, line: 839, type: !2141)
!7205 = !DILocation(line: 839, column: 61, scope: !7198)
!7206 = !DILocalVariable(name: "ibufb", arg: 3, scope: !7198, file: !1, line: 839, type: !2141)
!7207 = !DILocation(line: 839, column: 74, scope: !7198)
!7208 = !DILocalVariable(name: "pos", arg: 4, scope: !7198, file: !1, line: 839, type: !1277)
!7209 = !DILocation(line: 839, column: 86, scope: !7198)
!7210 = !DILocalVariable(name: "is_torus", arg: 5, scope: !7198, file: !1, line: 839, type: !7201)
!7211 = !DILocation(line: 839, column: 103, scope: !7198)
!7212 = !DILocalVariable(name: "sharpen", scope: !7198, file: !1, line: 841, type: !107)
!7213 = !DILocation(line: 841, column: 7, scope: !7198)
!7214 = !DILocation(line: 841, column: 18, scope: !7198)
!7215 = !DILocation(line: 841, column: 21, scope: !7198)
!7216 = !DILocation(line: 841, column: 30, scope: !7198)
!7217 = !DILocation(line: 841, column: 36, scope: !7198)
!7218 = !DILocation(line: 841, column: 47, scope: !7198)
!7219 = !DILocation(line: 841, column: 50, scope: !7198)
!7220 = !DILocation(line: 841, column: 57, scope: !7198)
!7221 = !DILocation(line: 841, column: 62, scope: !7198)
!7222 = !DILocation(line: 841, column: 78, scope: !7198)
!7223 = !DILocation(line: 841, column: 43, scope: !7198)
!7224 = !DILocation(line: 841, column: 17, scope: !7198)
!7225 = !DILocalVariable(name: "threshold", scope: !7198, file: !1, line: 842, type: !113)
!7226 = !DILocation(line: 842, column: 8, scope: !7198)
!7227 = !DILocation(line: 842, column: 20, scope: !7198)
!7228 = !DILocation(line: 842, column: 23, scope: !7198)
!7229 = !DILocation(line: 842, column: 30, scope: !7198)
!7230 = !DILocalVariable(name: "x", scope: !7198, file: !1, line: 843, type: !66)
!7231 = !DILocation(line: 843, column: 6, scope: !7198)
!7232 = !DILocalVariable(name: "y", scope: !7198, file: !1, line: 843, type: !66)
!7233 = !DILocation(line: 843, column: 9, scope: !7198)
!7234 = !DILocalVariable(name: "xi", scope: !7198, file: !1, line: 843, type: !66)
!7235 = !DILocation(line: 843, column: 12, scope: !7198)
!7236 = !DILocalVariable(name: "yi", scope: !7198, file: !1, line: 843, type: !66)
!7237 = !DILocation(line: 843, column: 16, scope: !7198)
!7238 = !DILocalVariable(name: "xo", scope: !7198, file: !1, line: 843, type: !66)
!7239 = !DILocation(line: 843, column: 20, scope: !7198)
!7240 = !DILocalVariable(name: "yo", scope: !7198, file: !1, line: 843, type: !66)
!7241 = !DILocation(line: 843, column: 24, scope: !7198)
!7242 = !DILocalVariable(name: "xk", scope: !7198, file: !1, line: 843, type: !66)
!7243 = !DILocation(line: 843, column: 28, scope: !7198)
!7244 = !DILocalVariable(name: "yk", scope: !7198, file: !1, line: 843, type: !66)
!7245 = !DILocation(line: 843, column: 32, scope: !7198)
!7246 = !DILocalVariable(name: "count", scope: !7198, file: !1, line: 844, type: !113)
!7247 = !DILocation(line: 844, column: 8, scope: !7198)
!7248 = !DILocalVariable(name: "out_off", scope: !7198, file: !1, line: 845, type: !791)
!7249 = !DILocation(line: 845, column: 6, scope: !7198)
!7250 = !DILocalVariable(name: "in_off", scope: !7198, file: !1, line: 845, type: !791)
!7251 = !DILocation(line: 845, column: 18, scope: !7198)
!7252 = !DILocalVariable(name: "dim", scope: !7198, file: !1, line: 845, type: !791)
!7253 = !DILocation(line: 845, column: 29, scope: !7198)
!7254 = !DILocalVariable(name: "diff_pos", scope: !7198, file: !1, line: 846, type: !791)
!7255 = !DILocation(line: 846, column: 6, scope: !7198)
!7256 = !DILocalVariable(name: "outrgb", scope: !7198, file: !1, line: 847, type: !407)
!7257 = !DILocation(line: 847, column: 8, scope: !7198)
!7258 = !DILocalVariable(name: "rgba", scope: !7198, file: !1, line: 848, type: !407)
!7259 = !DILocation(line: 848, column: 8, scope: !7198)
!7260 = !DILocalVariable(name: "kernel", scope: !7198, file: !1, line: 849, type: !2435)
!7261 = !DILocation(line: 849, column: 14, scope: !7198)
!7262 = !DILocation(line: 849, column: 23, scope: !7198)
!7263 = !DILocation(line: 849, column: 26, scope: !7198)
!7264 = !DILocation(line: 851, column: 11, scope: !7198)
!7265 = !DILocation(line: 851, column: 18, scope: !7198)
!7266 = !DILocation(line: 851, column: 2, scope: !7198)
!7267 = !DILocation(line: 851, column: 9, scope: !7198)
!7268 = !DILocation(line: 852, column: 11, scope: !7198)
!7269 = !DILocation(line: 852, column: 18, scope: !7198)
!7270 = !DILocation(line: 852, column: 2, scope: !7198)
!7271 = !DILocation(line: 852, column: 9, scope: !7198)
!7272 = !DILocation(line: 853, column: 14, scope: !7198)
!7273 = !DILocation(line: 853, column: 2, scope: !7198)
!7274 = !DILocation(line: 853, column: 12, scope: !7198)
!7275 = !DILocation(line: 854, column: 14, scope: !7198)
!7276 = !DILocation(line: 854, column: 2, scope: !7198)
!7277 = !DILocation(line: 854, column: 12, scope: !7198)
!7278 = !DILocation(line: 855, column: 15, scope: !7198)
!7279 = !DILocation(line: 855, column: 26, scope: !7198)
!7280 = !DILocation(line: 855, column: 2, scope: !7198)
!7281 = !DILocation(line: 855, column: 13, scope: !7198)
!7282 = !DILocation(line: 857, column: 7, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7198, file: !1, line: 857, column: 6)
!7284 = !DILocation(line: 857, column: 6, scope: !7198)
!7285 = !DILocation(line: 858, column: 16, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7283, file: !1, line: 857, column: 17)
!7287 = !DILocation(line: 858, column: 22, scope: !7286)
!7288 = !DILocation(line: 858, column: 30, scope: !7286)
!7289 = !DILocation(line: 858, column: 42, scope: !7286)
!7290 = !DILocation(line: 858, column: 54, scope: !7286)
!7291 = !DILocation(line: 859, column: 17, scope: !7286)
!7292 = !DILocation(line: 859, column: 30, scope: !7286)
!7293 = !DILocation(line: 859, column: 39, scope: !7286)
!7294 = !DILocation(line: 858, column: 3, scope: !7286)
!7295 = !DILocation(line: 861, column: 8, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7286, file: !1, line: 861, column: 7)
!7297 = !DILocation(line: 861, column: 15, scope: !7296)
!7298 = !DILocation(line: 861, column: 21, scope: !7296)
!7299 = !DILocation(line: 861, column: 25, scope: !7296)
!7300 = !DILocation(line: 861, column: 32, scope: !7296)
!7301 = !DILocation(line: 861, column: 7, scope: !7286)
!7302 = !DILocation(line: 862, column: 4, scope: !7296)
!7303 = !DILocation(line: 863, column: 2, scope: !7286)
!7304 = !DILocation(line: 866, column: 18, scope: !7198)
!7305 = !DILocation(line: 866, column: 28, scope: !7198)
!7306 = !DILocation(line: 866, column: 37, scope: !7198)
!7307 = !DILocation(line: 866, column: 2, scope: !7198)
!7308 = !DILocation(line: 868, column: 9, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7198, file: !1, line: 868, column: 2)
!7310 = !DILocation(line: 868, column: 7, scope: !7309)
!7311 = !DILocation(line: 868, column: 14, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7309, file: !1, line: 868, column: 2)
!7313 = !DILocation(line: 868, column: 18, scope: !7312)
!7314 = !DILocation(line: 868, column: 16, scope: !7312)
!7315 = !DILocation(line: 868, column: 2, scope: !7309)
!7316 = !DILocation(line: 869, column: 10, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !1, line: 869, column: 3)
!7318 = distinct !DILexicalBlock(scope: !7312, file: !1, line: 868, column: 31)
!7319 = !DILocation(line: 869, column: 8, scope: !7317)
!7320 = !DILocation(line: 869, column: 15, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7317, file: !1, line: 869, column: 3)
!7322 = !DILocation(line: 869, column: 19, scope: !7321)
!7323 = !DILocation(line: 869, column: 17, scope: !7321)
!7324 = !DILocation(line: 869, column: 3, scope: !7317)
!7325 = !DILocation(line: 871, column: 9, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7321, file: !1, line: 869, column: 32)
!7327 = !DILocation(line: 871, column: 21, scope: !7326)
!7328 = !DILocation(line: 871, column: 19, scope: !7326)
!7329 = !DILocation(line: 871, column: 7, scope: !7326)
!7330 = !DILocation(line: 872, column: 9, scope: !7326)
!7331 = !DILocation(line: 872, column: 21, scope: !7326)
!7332 = !DILocation(line: 872, column: 19, scope: !7326)
!7333 = !DILocation(line: 872, column: 7, scope: !7326)
!7334 = !DILocation(line: 874, column: 10, scope: !7326)
!7335 = !DILocation(line: 875, column: 26, scope: !7326)
!7336 = !DILocation(line: 875, column: 32, scope: !7326)
!7337 = !DILocation(line: 875, column: 36, scope: !7326)
!7338 = !DILocation(line: 875, column: 40, scope: !7326)
!7339 = !DILocation(line: 875, column: 50, scope: !7326)
!7340 = !DILocation(line: 875, column: 4, scope: !7326)
!7341 = !DILocation(line: 876, column: 12, scope: !7326)
!7342 = !DILocation(line: 876, column: 4, scope: !7326)
!7343 = !DILocation(line: 878, column: 12, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7326, file: !1, line: 878, column: 4)
!7345 = !DILocation(line: 878, column: 9, scope: !7344)
!7346 = !DILocation(line: 878, column: 17, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7344, file: !1, line: 878, column: 4)
!7348 = !DILocation(line: 878, column: 22, scope: !7347)
!7349 = !DILocation(line: 878, column: 30, scope: !7347)
!7350 = !DILocation(line: 878, column: 20, scope: !7347)
!7351 = !DILocation(line: 878, column: 4, scope: !7344)
!7352 = !DILocation(line: 879, column: 13, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !1, line: 879, column: 5)
!7354 = distinct !DILexicalBlock(scope: !7347, file: !1, line: 878, column: 42)
!7355 = !DILocation(line: 879, column: 10, scope: !7353)
!7356 = !DILocation(line: 879, column: 18, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7353, file: !1, line: 879, column: 5)
!7358 = !DILocation(line: 879, column: 23, scope: !7357)
!7359 = !DILocation(line: 879, column: 31, scope: !7357)
!7360 = !DILocation(line: 879, column: 21, scope: !7357)
!7361 = !DILocation(line: 879, column: 5, scope: !7353)
!7362 = !DILocation(line: 880, column: 36, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7357, file: !1, line: 879, column: 43)
!7364 = !DILocation(line: 880, column: 42, scope: !7363)
!7365 = !DILocation(line: 880, column: 47, scope: !7363)
!7366 = !DILocation(line: 880, column: 45, scope: !7363)
!7367 = !DILocation(line: 880, column: 52, scope: !7363)
!7368 = !DILocation(line: 880, column: 60, scope: !7363)
!7369 = !DILocation(line: 880, column: 50, scope: !7363)
!7370 = !DILocation(line: 881, column: 37, scope: !7363)
!7371 = !DILocation(line: 881, column: 42, scope: !7363)
!7372 = !DILocation(line: 881, column: 40, scope: !7363)
!7373 = !DILocation(line: 881, column: 47, scope: !7363)
!7374 = !DILocation(line: 881, column: 55, scope: !7363)
!7375 = !DILocation(line: 881, column: 45, scope: !7363)
!7376 = !DILocation(line: 881, column: 66, scope: !7363)
!7377 = !DILocation(line: 881, column: 74, scope: !7363)
!7378 = !DILocation(line: 882, column: 37, scope: !7363)
!7379 = !DILocation(line: 882, column: 45, scope: !7363)
!7380 = !DILocation(line: 882, column: 51, scope: !7363)
!7381 = !DILocation(line: 882, column: 56, scope: !7363)
!7382 = !DILocation(line: 882, column: 61, scope: !7363)
!7383 = !DILocation(line: 882, column: 69, scope: !7363)
!7384 = !DILocation(line: 882, column: 59, scope: !7363)
!7385 = !DILocation(line: 882, column: 54, scope: !7363)
!7386 = !DILocation(line: 880, column: 15, scope: !7363)
!7387 = !DILocation(line: 880, column: 12, scope: !7363)
!7388 = !DILocation(line: 883, column: 5, scope: !7363)
!7389 = !DILocation(line: 879, column: 39, scope: !7357)
!7390 = !DILocation(line: 879, column: 5, scope: !7357)
!7391 = distinct !{!7391, !7361, !7392}
!7392 = !DILocation(line: 883, column: 5, scope: !7353)
!7393 = !DILocation(line: 884, column: 4, scope: !7354)
!7394 = !DILocation(line: 878, column: 38, scope: !7347)
!7395 = !DILocation(line: 878, column: 4, scope: !7347)
!7396 = distinct !{!7396, !7351, !7397}
!7397 = !DILocation(line: 884, column: 4, scope: !7344)
!7398 = !DILocation(line: 886, column: 8, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7326, file: !1, line: 886, column: 8)
!7400 = !DILocation(line: 886, column: 14, scope: !7399)
!7401 = !DILocation(line: 886, column: 8, scope: !7326)
!7402 = !DILocation(line: 887, column: 15, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7399, file: !1, line: 886, column: 22)
!7404 = !DILocation(line: 887, column: 37, scope: !7403)
!7405 = !DILocation(line: 887, column: 28, scope: !7403)
!7406 = !DILocation(line: 887, column: 5, scope: !7403)
!7407 = !DILocation(line: 889, column: 9, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7403, file: !1, line: 889, column: 9)
!7409 = !DILocation(line: 889, column: 9, scope: !7403)
!7410 = !DILocation(line: 891, column: 18, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7408, file: !1, line: 889, column: 18)
!7412 = !DILocation(line: 891, column: 26, scope: !7411)
!7413 = !DILocation(line: 891, column: 32, scope: !7411)
!7414 = !DILocation(line: 891, column: 6, scope: !7411)
!7415 = !DILocation(line: 895, column: 59, scope: !7411)
!7416 = !DILocation(line: 895, column: 42, scope: !7411)
!7417 = !DILocation(line: 895, column: 30, scope: !7411)
!7418 = !DILocation(line: 895, column: 40, scope: !7411)
!7419 = !DILocation(line: 895, column: 18, scope: !7411)
!7420 = !DILocation(line: 895, column: 28, scope: !7411)
!7421 = !DILocation(line: 895, column: 6, scope: !7411)
!7422 = !DILocation(line: 895, column: 16, scope: !7411)
!7423 = !DILocation(line: 896, column: 16, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7411, file: !1, line: 896, column: 10)
!7425 = !DILocation(line: 896, column: 10, scope: !7424)
!7426 = !DILocation(line: 896, column: 29, scope: !7424)
!7427 = !DILocation(line: 896, column: 27, scope: !7424)
!7428 = !DILocation(line: 896, column: 10, scope: !7411)
!7429 = !DILocalVariable(name: "mask", scope: !7430, file: !1, line: 897, type: !113)
!7430 = distinct !DILexicalBlock(scope: !7424, file: !1, line: 896, column: 40)
!7431 = !DILocation(line: 897, column: 13, scope: !7430)
!7432 = !DILocation(line: 897, column: 40, scope: !7430)
!7433 = !DILocation(line: 897, column: 43, scope: !7430)
!7434 = !DILocation(line: 897, column: 50, scope: !7430)
!7435 = !DILocation(line: 897, column: 53, scope: !7430)
!7436 = !DILocation(line: 897, column: 20, scope: !7430)
!7437 = !DILocalVariable(name: "alpha", scope: !7430, file: !1, line: 898, type: !113)
!7438 = !DILocation(line: 898, column: 13, scope: !7430)
!7439 = !DILocation(line: 898, column: 21, scope: !7430)
!7440 = !DILocation(line: 899, column: 29, scope: !7430)
!7441 = !DILocation(line: 899, column: 17, scope: !7430)
!7442 = !DILocation(line: 899, column: 27, scope: !7430)
!7443 = !DILocation(line: 899, column: 7, scope: !7430)
!7444 = !DILocation(line: 899, column: 15, scope: !7430)
!7445 = !DILocation(line: 902, column: 29, scope: !7430)
!7446 = !DILocation(line: 902, column: 37, scope: !7430)
!7447 = !DILocation(line: 902, column: 43, scope: !7430)
!7448 = !DILocation(line: 902, column: 7, scope: !7430)
!7449 = !DILocation(line: 903, column: 19, scope: !7430)
!7450 = !DILocation(line: 903, column: 7, scope: !7430)
!7451 = !DILocation(line: 903, column: 17, scope: !7430)
!7452 = !DILocation(line: 904, column: 6, scope: !7430)
!7453 = !DILocation(line: 906, column: 18, scope: !7424)
!7454 = !DILocation(line: 906, column: 26, scope: !7424)
!7455 = !DILocation(line: 906, column: 7, scope: !7424)
!7456 = !DILocation(line: 907, column: 5, scope: !7411)
!7457 = !DILocation(line: 908, column: 4, scope: !7403)
!7458 = !DILocation(line: 910, column: 16, scope: !7399)
!7459 = !DILocation(line: 910, column: 24, scope: !7399)
!7460 = !DILocation(line: 910, column: 5, scope: !7399)
!7461 = !DILocation(line: 912, column: 9, scope: !7326)
!7462 = !DILocation(line: 912, column: 22, scope: !7326)
!7463 = !DILocation(line: 912, column: 20, scope: !7326)
!7464 = !DILocation(line: 912, column: 7, scope: !7326)
!7465 = !DILocation(line: 913, column: 9, scope: !7326)
!7466 = !DILocation(line: 913, column: 22, scope: !7326)
!7467 = !DILocation(line: 913, column: 20, scope: !7326)
!7468 = !DILocation(line: 913, column: 7, scope: !7326)
!7469 = !DILocation(line: 914, column: 26, scope: !7326)
!7470 = !DILocation(line: 914, column: 33, scope: !7326)
!7471 = !DILocation(line: 914, column: 37, scope: !7326)
!7472 = !DILocation(line: 914, column: 44, scope: !7326)
!7473 = !DILocation(line: 914, column: 4, scope: !7326)
!7474 = !DILocation(line: 915, column: 3, scope: !7326)
!7475 = !DILocation(line: 869, column: 28, scope: !7321)
!7476 = !DILocation(line: 869, column: 3, scope: !7321)
!7477 = distinct !{!7477, !7324, !7478}
!7478 = !DILocation(line: 915, column: 3, scope: !7317)
!7479 = !DILocation(line: 916, column: 2, scope: !7318)
!7480 = !DILocation(line: 868, column: 27, scope: !7312)
!7481 = !DILocation(line: 868, column: 2, scope: !7312)
!7482 = distinct !{!7482, !7315, !7483}
!7483 = !DILocation(line: 916, column: 2, scope: !7309)
!7484 = !DILocation(line: 917, column: 1, scope: !7198)
!7485 = distinct !DISubprogram(name: "paint_2d_lift_smear", scope: !1, file: !1, line: 969, type: !7486, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7486 = !DISubroutineType(types: !7487)
!7487 = !{null, !2141, !2141, !1277}
!7488 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7485, file: !1, line: 969, type: !2141)
!7489 = !DILocation(line: 969, column: 40, scope: !7485)
!7490 = !DILocalVariable(name: "ibufb", arg: 2, scope: !7485, file: !1, line: 969, type: !2141)
!7491 = !DILocation(line: 969, column: 53, scope: !7485)
!7492 = !DILocalVariable(name: "pos", arg: 3, scope: !7485, file: !1, line: 969, type: !1277)
!7493 = !DILocation(line: 969, column: 65, scope: !7485)
!7494 = !DILocalVariable(name: "region", scope: !7485, file: !1, line: 971, type: !3126)
!7495 = !DILocation(line: 971, column: 19, scope: !7485)
!7496 = !DILocalVariable(name: "a", scope: !7485, file: !1, line: 972, type: !66)
!7497 = !DILocation(line: 972, column: 6, scope: !7485)
!7498 = !DILocalVariable(name: "tot", scope: !7485, file: !1, line: 972, type: !66)
!7499 = !DILocation(line: 972, column: 9, scope: !7485)
!7500 = !DILocation(line: 974, column: 22, scope: !7485)
!7501 = !DILocation(line: 974, column: 36, scope: !7485)
!7502 = !DILocation(line: 974, column: 44, scope: !7485)
!7503 = !DILocation(line: 974, column: 52, scope: !7485)
!7504 = !DILocation(line: 974, column: 59, scope: !7485)
!7505 = !DILocation(line: 974, column: 62, scope: !7485)
!7506 = !DILocation(line: 974, column: 69, scope: !7485)
!7507 = !DILocation(line: 974, column: 2, scope: !7485)
!7508 = !DILocation(line: 975, column: 36, scope: !7485)
!7509 = !DILocation(line: 975, column: 44, scope: !7485)
!7510 = !DILocation(line: 975, column: 51, scope: !7485)
!7511 = !DILocation(line: 975, column: 8, scope: !7485)
!7512 = !DILocation(line: 975, column: 6, scope: !7485)
!7513 = !DILocation(line: 977, column: 9, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7485, file: !1, line: 977, column: 2)
!7515 = !DILocation(line: 977, column: 7, scope: !7514)
!7516 = !DILocation(line: 977, column: 14, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7514, file: !1, line: 977, column: 2)
!7518 = !DILocation(line: 977, column: 18, scope: !7517)
!7519 = !DILocation(line: 977, column: 16, scope: !7517)
!7520 = !DILocation(line: 977, column: 2, scope: !7514)
!7521 = !DILocation(line: 978, column: 17, scope: !7517)
!7522 = !DILocation(line: 978, column: 24, scope: !7517)
!7523 = !DILocation(line: 978, column: 31, scope: !7517)
!7524 = !DILocation(line: 978, column: 65, scope: !7517)
!7525 = !DILocation(line: 978, column: 58, scope: !7517)
!7526 = !DILocation(line: 978, column: 68, scope: !7517)
!7527 = !DILocation(line: 978, column: 82, scope: !7517)
!7528 = !DILocation(line: 978, column: 75, scope: !7517)
!7529 = !DILocation(line: 978, column: 85, scope: !7517)
!7530 = !DILocation(line: 979, column: 24, scope: !7517)
!7531 = !DILocation(line: 979, column: 17, scope: !7517)
!7532 = !DILocation(line: 979, column: 27, scope: !7517)
!7533 = !DILocation(line: 979, column: 41, scope: !7517)
!7534 = !DILocation(line: 979, column: 34, scope: !7517)
!7535 = !DILocation(line: 979, column: 44, scope: !7517)
!7536 = !DILocation(line: 980, column: 24, scope: !7517)
!7537 = !DILocation(line: 980, column: 17, scope: !7517)
!7538 = !DILocation(line: 980, column: 27, scope: !7517)
!7539 = !DILocation(line: 980, column: 40, scope: !7517)
!7540 = !DILocation(line: 980, column: 33, scope: !7517)
!7541 = !DILocation(line: 980, column: 43, scope: !7517)
!7542 = !DILocation(line: 981, column: 24, scope: !7517)
!7543 = !DILocation(line: 981, column: 17, scope: !7517)
!7544 = !DILocation(line: 981, column: 27, scope: !7517)
!7545 = !DILocation(line: 981, column: 41, scope: !7517)
!7546 = !DILocation(line: 981, column: 34, scope: !7517)
!7547 = !DILocation(line: 981, column: 44, scope: !7517)
!7548 = !DILocation(line: 978, column: 3, scope: !7517)
!7549 = !DILocation(line: 977, column: 24, scope: !7517)
!7550 = !DILocation(line: 977, column: 2, scope: !7517)
!7551 = distinct !{!7551, !7520, !7552}
!7552 = !DILocation(line: 981, column: 77, scope: !7514)
!7553 = !DILocation(line: 982, column: 1, scope: !7485)
!7554 = distinct !DISubprogram(name: "paint_2d_lift_clone", scope: !1, file: !1, line: 984, type: !7555, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!2141, !2141, !2141, !1277}
!7557 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7554, file: !1, line: 984, type: !2141)
!7558 = !DILocation(line: 984, column: 42, scope: !7554)
!7559 = !DILocalVariable(name: "ibufb", arg: 2, scope: !7554, file: !1, line: 984, type: !2141)
!7560 = !DILocation(line: 984, column: 55, scope: !7554)
!7561 = !DILocalVariable(name: "pos", arg: 3, scope: !7554, file: !1, line: 984, type: !1277)
!7562 = !DILocation(line: 984, column: 67, scope: !7554)
!7563 = !DILocalVariable(name: "w", scope: !7554, file: !1, line: 988, type: !66)
!7564 = !DILocation(line: 988, column: 6, scope: !7554)
!7565 = !DILocation(line: 988, column: 10, scope: !7554)
!7566 = !DILocation(line: 988, column: 17, scope: !7554)
!7567 = !DILocalVariable(name: "h", scope: !7554, file: !1, line: 988, type: !66)
!7568 = !DILocation(line: 988, column: 20, scope: !7554)
!7569 = !DILocation(line: 988, column: 24, scope: !7554)
!7570 = !DILocation(line: 988, column: 31, scope: !7554)
!7571 = !DILocalVariable(name: "destx", scope: !7554, file: !1, line: 988, type: !66)
!7572 = !DILocation(line: 988, column: 34, scope: !7554)
!7573 = !DILocalVariable(name: "desty", scope: !7554, file: !1, line: 988, type: !66)
!7574 = !DILocation(line: 988, column: 45, scope: !7554)
!7575 = !DILocalVariable(name: "srcx", scope: !7554, file: !1, line: 988, type: !66)
!7576 = !DILocation(line: 988, column: 56, scope: !7554)
!7577 = !DILocation(line: 988, column: 63, scope: !7554)
!7578 = !DILocalVariable(name: "srcy", scope: !7554, file: !1, line: 988, type: !66)
!7579 = !DILocation(line: 988, column: 71, scope: !7554)
!7580 = !DILocation(line: 988, column: 78, scope: !7554)
!7581 = !DILocalVariable(name: "clonebuf", scope: !7554, file: !1, line: 989, type: !2141)
!7582 = !DILocation(line: 989, column: 9, scope: !7554)
!7583 = !DILocation(line: 989, column: 35, scope: !7554)
!7584 = !DILocation(line: 989, column: 38, scope: !7554)
!7585 = !DILocation(line: 989, column: 41, scope: !7554)
!7586 = !DILocation(line: 989, column: 48, scope: !7554)
!7587 = !DILocation(line: 989, column: 56, scope: !7554)
!7588 = !DILocation(line: 989, column: 63, scope: !7554)
!7589 = !DILocation(line: 989, column: 20, scope: !7554)
!7590 = !DILocation(line: 991, column: 15, scope: !7554)
!7591 = !DILocation(line: 991, column: 25, scope: !7554)
!7592 = !DILocation(line: 991, column: 2, scope: !7554)
!7593 = !DILocation(line: 992, column: 16, scope: !7554)
!7594 = !DILocation(line: 992, column: 26, scope: !7554)
!7595 = !DILocation(line: 992, column: 36, scope: !7554)
!7596 = !DILocation(line: 992, column: 64, scope: !7554)
!7597 = !DILocation(line: 992, column: 71, scope: !7554)
!7598 = !DILocation(line: 992, column: 78, scope: !7554)
!7599 = !DILocation(line: 992, column: 85, scope: !7554)
!7600 = !DILocation(line: 992, column: 92, scope: !7554)
!7601 = !DILocation(line: 992, column: 99, scope: !7554)
!7602 = !DILocation(line: 992, column: 106, scope: !7554)
!7603 = !DILocation(line: 992, column: 109, scope: !7554)
!7604 = !DILocation(line: 992, column: 2, scope: !7554)
!7605 = !DILocation(line: 994, column: 16, scope: !7554)
!7606 = !DILocation(line: 994, column: 26, scope: !7554)
!7607 = !DILocation(line: 994, column: 36, scope: !7554)
!7608 = !DILocation(line: 994, column: 63, scope: !7554)
!7609 = !DILocation(line: 994, column: 70, scope: !7554)
!7610 = !DILocation(line: 994, column: 77, scope: !7554)
!7611 = !DILocation(line: 994, column: 84, scope: !7554)
!7612 = !DILocation(line: 994, column: 91, scope: !7554)
!7613 = !DILocation(line: 994, column: 97, scope: !7554)
!7614 = !DILocation(line: 994, column: 103, scope: !7554)
!7615 = !DILocation(line: 994, column: 106, scope: !7554)
!7616 = !DILocation(line: 994, column: 2, scope: !7554)
!7617 = !DILocation(line: 997, column: 9, scope: !7554)
!7618 = !DILocation(line: 997, column: 2, scope: !7554)
!7619 = distinct !DISubprogram(name: "paint_2d_set_region", scope: !1, file: !1, line: 919, type: !7620, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{null, !7622, !66, !66, !66, !66, !66, !66}
!7622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!7623 = !DILocalVariable(name: "region", arg: 1, scope: !7619, file: !1, line: 919, type: !7622)
!7624 = !DILocation(line: 919, column: 51, scope: !7619)
!7625 = !DILocalVariable(name: "destx", arg: 2, scope: !7619, file: !1, line: 919, type: !66)
!7626 = !DILocation(line: 919, column: 63, scope: !7619)
!7627 = !DILocalVariable(name: "desty", arg: 3, scope: !7619, file: !1, line: 919, type: !66)
!7628 = !DILocation(line: 919, column: 74, scope: !7619)
!7629 = !DILocalVariable(name: "srcx", arg: 4, scope: !7619, file: !1, line: 919, type: !66)
!7630 = !DILocation(line: 919, column: 85, scope: !7619)
!7631 = !DILocalVariable(name: "srcy", arg: 5, scope: !7619, file: !1, line: 919, type: !66)
!7632 = !DILocation(line: 919, column: 95, scope: !7619)
!7633 = !DILocalVariable(name: "width", arg: 6, scope: !7619, file: !1, line: 919, type: !66)
!7634 = !DILocation(line: 919, column: 105, scope: !7619)
!7635 = !DILocalVariable(name: "height", arg: 7, scope: !7619, file: !1, line: 919, type: !66)
!7636 = !DILocation(line: 919, column: 116, scope: !7619)
!7637 = !DILocation(line: 921, column: 18, scope: !7619)
!7638 = !DILocation(line: 921, column: 2, scope: !7619)
!7639 = !DILocation(line: 921, column: 10, scope: !7619)
!7640 = !DILocation(line: 921, column: 16, scope: !7619)
!7641 = !DILocation(line: 922, column: 18, scope: !7619)
!7642 = !DILocation(line: 922, column: 2, scope: !7619)
!7643 = !DILocation(line: 922, column: 10, scope: !7619)
!7644 = !DILocation(line: 922, column: 16, scope: !7619)
!7645 = !DILocation(line: 923, column: 17, scope: !7619)
!7646 = !DILocation(line: 923, column: 2, scope: !7619)
!7647 = !DILocation(line: 923, column: 10, scope: !7619)
!7648 = !DILocation(line: 923, column: 15, scope: !7619)
!7649 = !DILocation(line: 924, column: 17, scope: !7619)
!7650 = !DILocation(line: 924, column: 2, scope: !7619)
!7651 = !DILocation(line: 924, column: 10, scope: !7619)
!7652 = !DILocation(line: 924, column: 15, scope: !7619)
!7653 = !DILocation(line: 925, column: 18, scope: !7619)
!7654 = !DILocation(line: 925, column: 2, scope: !7619)
!7655 = !DILocation(line: 925, column: 10, scope: !7619)
!7656 = !DILocation(line: 925, column: 16, scope: !7619)
!7657 = !DILocation(line: 926, column: 19, scope: !7619)
!7658 = !DILocation(line: 926, column: 2, scope: !7619)
!7659 = !DILocation(line: 926, column: 10, scope: !7619)
!7660 = !DILocation(line: 926, column: 17, scope: !7619)
!7661 = !DILocation(line: 927, column: 1, scope: !7619)
!7662 = distinct !DISubprogram(name: "paint_2d_torus_split_region", scope: !1, file: !1, line: 929, type: !7663, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{!66, !7622, !2141, !2141}
!7665 = !DILocalVariable(name: "region", arg: 1, scope: !7662, file: !1, line: 929, type: !7622)
!7666 = !DILocation(line: 929, column: 57, scope: !7662)
!7667 = !DILocalVariable(name: "dbuf", arg: 2, scope: !7662, file: !1, line: 929, type: !2141)
!7668 = !DILocation(line: 929, column: 75, scope: !7662)
!7669 = !DILocalVariable(name: "sbuf", arg: 3, scope: !7662, file: !1, line: 929, type: !2141)
!7670 = !DILocation(line: 929, column: 88, scope: !7662)
!7671 = !DILocalVariable(name: "destx", scope: !7662, file: !1, line: 931, type: !66)
!7672 = !DILocation(line: 931, column: 6, scope: !7662)
!7673 = !DILocation(line: 931, column: 14, scope: !7662)
!7674 = !DILocation(line: 931, column: 22, scope: !7662)
!7675 = !DILocalVariable(name: "desty", scope: !7662, file: !1, line: 932, type: !66)
!7676 = !DILocation(line: 932, column: 6, scope: !7662)
!7677 = !DILocation(line: 932, column: 14, scope: !7662)
!7678 = !DILocation(line: 932, column: 22, scope: !7662)
!7679 = !DILocalVariable(name: "srcx", scope: !7662, file: !1, line: 933, type: !66)
!7680 = !DILocation(line: 933, column: 6, scope: !7662)
!7681 = !DILocation(line: 933, column: 13, scope: !7662)
!7682 = !DILocation(line: 933, column: 21, scope: !7662)
!7683 = !DILocalVariable(name: "srcy", scope: !7662, file: !1, line: 934, type: !66)
!7684 = !DILocation(line: 934, column: 6, scope: !7662)
!7685 = !DILocation(line: 934, column: 13, scope: !7662)
!7686 = !DILocation(line: 934, column: 21, scope: !7662)
!7687 = !DILocalVariable(name: "width", scope: !7662, file: !1, line: 935, type: !66)
!7688 = !DILocation(line: 935, column: 6, scope: !7662)
!7689 = !DILocation(line: 935, column: 14, scope: !7662)
!7690 = !DILocation(line: 935, column: 22, scope: !7662)
!7691 = !DILocalVariable(name: "height", scope: !7662, file: !1, line: 936, type: !66)
!7692 = !DILocation(line: 936, column: 6, scope: !7662)
!7693 = !DILocation(line: 936, column: 15, scope: !7662)
!7694 = !DILocation(line: 936, column: 23, scope: !7662)
!7695 = !DILocalVariable(name: "origw", scope: !7662, file: !1, line: 937, type: !66)
!7696 = !DILocation(line: 937, column: 6, scope: !7662)
!7697 = !DILocalVariable(name: "origh", scope: !7662, file: !1, line: 937, type: !66)
!7698 = !DILocation(line: 937, column: 13, scope: !7662)
!7699 = !DILocalVariable(name: "w", scope: !7662, file: !1, line: 937, type: !66)
!7700 = !DILocation(line: 937, column: 20, scope: !7662)
!7701 = !DILocalVariable(name: "h", scope: !7662, file: !1, line: 937, type: !66)
!7702 = !DILocation(line: 937, column: 23, scope: !7662)
!7703 = !DILocalVariable(name: "tot", scope: !7662, file: !1, line: 937, type: !66)
!7704 = !DILocation(line: 937, column: 26, scope: !7662)
!7705 = !DILocation(line: 940, column: 10, scope: !7662)
!7706 = !DILocation(line: 940, column: 18, scope: !7662)
!7707 = !DILocation(line: 940, column: 24, scope: !7662)
!7708 = !DILocation(line: 940, column: 16, scope: !7662)
!7709 = !DILocation(line: 940, column: 8, scope: !7662)
!7710 = !DILocation(line: 941, column: 6, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 941, column: 6)
!7712 = !DILocation(line: 941, column: 12, scope: !7711)
!7713 = !DILocation(line: 941, column: 6, scope: !7662)
!7714 = !DILocation(line: 941, column: 26, scope: !7711)
!7715 = !DILocation(line: 941, column: 32, scope: !7711)
!7716 = !DILocation(line: 941, column: 23, scope: !7711)
!7717 = !DILocation(line: 941, column: 17, scope: !7711)
!7718 = !DILocation(line: 942, column: 10, scope: !7662)
!7719 = !DILocation(line: 942, column: 18, scope: !7662)
!7720 = !DILocation(line: 942, column: 24, scope: !7662)
!7721 = !DILocation(line: 942, column: 16, scope: !7662)
!7722 = !DILocation(line: 942, column: 8, scope: !7662)
!7723 = !DILocation(line: 943, column: 6, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 943, column: 6)
!7725 = !DILocation(line: 943, column: 12, scope: !7724)
!7726 = !DILocation(line: 943, column: 6, scope: !7662)
!7727 = !DILocation(line: 943, column: 26, scope: !7724)
!7728 = !DILocation(line: 943, column: 32, scope: !7724)
!7729 = !DILocation(line: 943, column: 23, scope: !7724)
!7730 = !DILocation(line: 943, column: 17, scope: !7724)
!7731 = !DILocation(line: 944, column: 9, scope: !7662)
!7732 = !DILocation(line: 944, column: 16, scope: !7662)
!7733 = !DILocation(line: 944, column: 22, scope: !7662)
!7734 = !DILocation(line: 944, column: 14, scope: !7662)
!7735 = !DILocation(line: 944, column: 7, scope: !7662)
!7736 = !DILocation(line: 945, column: 6, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 945, column: 6)
!7738 = !DILocation(line: 945, column: 11, scope: !7737)
!7739 = !DILocation(line: 945, column: 6, scope: !7662)
!7740 = !DILocation(line: 945, column: 24, scope: !7737)
!7741 = !DILocation(line: 945, column: 30, scope: !7737)
!7742 = !DILocation(line: 945, column: 21, scope: !7737)
!7743 = !DILocation(line: 945, column: 16, scope: !7737)
!7744 = !DILocation(line: 946, column: 9, scope: !7662)
!7745 = !DILocation(line: 946, column: 16, scope: !7662)
!7746 = !DILocation(line: 946, column: 22, scope: !7662)
!7747 = !DILocation(line: 946, column: 14, scope: !7662)
!7748 = !DILocation(line: 946, column: 7, scope: !7662)
!7749 = !DILocation(line: 947, column: 6, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 947, column: 6)
!7751 = !DILocation(line: 947, column: 11, scope: !7750)
!7752 = !DILocation(line: 947, column: 6, scope: !7662)
!7753 = !DILocation(line: 947, column: 24, scope: !7750)
!7754 = !DILocation(line: 947, column: 30, scope: !7750)
!7755 = !DILocation(line: 947, column: 21, scope: !7750)
!7756 = !DILocation(line: 947, column: 16, scope: !7750)
!7757 = !DILocation(line: 951, column: 15, scope: !7662)
!7758 = !DILocation(line: 951, column: 23, scope: !7662)
!7759 = !DILocation(line: 951, column: 29, scope: !7662)
!7760 = !DILocation(line: 951, column: 21, scope: !7662)
!7761 = !DILocation(line: 951, column: 14, scope: !7662)
!7762 = !DILocation(line: 951, column: 34, scope: !7662)
!7763 = !DILocation(line: 951, column: 40, scope: !7662)
!7764 = !DILocation(line: 951, column: 44, scope: !7662)
!7765 = !DILocation(line: 951, column: 12, scope: !7662)
!7766 = !DILocation(line: 951, column: 8, scope: !7662)
!7767 = !DILocation(line: 952, column: 15, scope: !7662)
!7768 = !DILocation(line: 952, column: 24, scope: !7662)
!7769 = !DILocation(line: 952, column: 30, scope: !7662)
!7770 = !DILocation(line: 952, column: 22, scope: !7662)
!7771 = !DILocation(line: 952, column: 14, scope: !7662)
!7772 = !DILocation(line: 952, column: 35, scope: !7662)
!7773 = !DILocation(line: 952, column: 41, scope: !7662)
!7774 = !DILocation(line: 952, column: 45, scope: !7662)
!7775 = !DILocation(line: 952, column: 12, scope: !7662)
!7776 = !DILocation(line: 952, column: 8, scope: !7662)
!7777 = !DILocation(line: 955, column: 15, scope: !7662)
!7778 = !DILocation(line: 955, column: 21, scope: !7662)
!7779 = !DILocation(line: 955, column: 2, scope: !7662)
!7780 = !DILocation(line: 956, column: 23, scope: !7662)
!7781 = !DILocation(line: 956, column: 33, scope: !7662)
!7782 = !DILocation(line: 956, column: 38, scope: !7662)
!7783 = !DILocation(line: 956, column: 45, scope: !7662)
!7784 = !DILocation(line: 956, column: 52, scope: !7662)
!7785 = !DILocation(line: 956, column: 58, scope: !7662)
!7786 = !DILocation(line: 956, column: 64, scope: !7662)
!7787 = !DILocation(line: 956, column: 67, scope: !7662)
!7788 = !DILocation(line: 956, column: 2, scope: !7662)
!7789 = !DILocation(line: 959, column: 6, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 959, column: 6)
!7791 = !DILocation(line: 959, column: 10, scope: !7790)
!7792 = !DILocation(line: 959, column: 8, scope: !7790)
!7793 = !DILocation(line: 959, column: 6, scope: !7662)
!7794 = !DILocation(line: 960, column: 24, scope: !7790)
!7795 = !DILocation(line: 960, column: 34, scope: !7790)
!7796 = !DILocation(line: 960, column: 40, scope: !7790)
!7797 = !DILocation(line: 960, column: 48, scope: !7790)
!7798 = !DILocation(line: 960, column: 46, scope: !7790)
!7799 = !DILocation(line: 960, column: 53, scope: !7790)
!7800 = !DILocation(line: 960, column: 59, scope: !7790)
!7801 = !DILocation(line: 960, column: 51, scope: !7790)
!7802 = !DILocation(line: 960, column: 62, scope: !7790)
!7803 = !DILocation(line: 960, column: 70, scope: !7790)
!7804 = !DILocation(line: 960, column: 77, scope: !7790)
!7805 = !DILocation(line: 960, column: 75, scope: !7790)
!7806 = !DILocation(line: 960, column: 82, scope: !7790)
!7807 = !DILocation(line: 960, column: 88, scope: !7790)
!7808 = !DILocation(line: 960, column: 80, scope: !7790)
!7809 = !DILocation(line: 960, column: 91, scope: !7790)
!7810 = !DILocation(line: 960, column: 97, scope: !7790)
!7811 = !DILocation(line: 960, column: 105, scope: !7790)
!7812 = !DILocation(line: 960, column: 103, scope: !7790)
!7813 = !DILocation(line: 960, column: 108, scope: !7790)
!7814 = !DILocation(line: 960, column: 3, scope: !7790)
!7815 = !DILocation(line: 961, column: 6, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 961, column: 6)
!7817 = !DILocation(line: 961, column: 10, scope: !7816)
!7818 = !DILocation(line: 961, column: 8, scope: !7816)
!7819 = !DILocation(line: 961, column: 6, scope: !7662)
!7820 = !DILocation(line: 962, column: 24, scope: !7816)
!7821 = !DILocation(line: 962, column: 34, scope: !7816)
!7822 = !DILocation(line: 962, column: 39, scope: !7816)
!7823 = !DILocation(line: 962, column: 47, scope: !7816)
!7824 = !DILocation(line: 962, column: 55, scope: !7816)
!7825 = !DILocation(line: 962, column: 53, scope: !7816)
!7826 = !DILocation(line: 962, column: 60, scope: !7816)
!7827 = !DILocation(line: 962, column: 66, scope: !7816)
!7828 = !DILocation(line: 962, column: 58, scope: !7816)
!7829 = !DILocation(line: 962, column: 69, scope: !7816)
!7830 = !DILocation(line: 962, column: 76, scope: !7816)
!7831 = !DILocation(line: 962, column: 83, scope: !7816)
!7832 = !DILocation(line: 962, column: 81, scope: !7816)
!7833 = !DILocation(line: 962, column: 88, scope: !7816)
!7834 = !DILocation(line: 962, column: 94, scope: !7816)
!7835 = !DILocation(line: 962, column: 86, scope: !7816)
!7836 = !DILocation(line: 962, column: 97, scope: !7816)
!7837 = !DILocation(line: 962, column: 100, scope: !7816)
!7838 = !DILocation(line: 962, column: 108, scope: !7816)
!7839 = !DILocation(line: 962, column: 106, scope: !7816)
!7840 = !DILocation(line: 962, column: 3, scope: !7816)
!7841 = !DILocation(line: 963, column: 7, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7662, file: !1, line: 963, column: 6)
!7843 = !DILocation(line: 963, column: 11, scope: !7842)
!7844 = !DILocation(line: 963, column: 9, scope: !7842)
!7845 = !DILocation(line: 963, column: 18, scope: !7842)
!7846 = !DILocation(line: 963, column: 22, scope: !7842)
!7847 = !DILocation(line: 963, column: 26, scope: !7842)
!7848 = !DILocation(line: 963, column: 24, scope: !7842)
!7849 = !DILocation(line: 963, column: 6, scope: !7662)
!7850 = !DILocation(line: 964, column: 24, scope: !7842)
!7851 = !DILocation(line: 964, column: 34, scope: !7842)
!7852 = !DILocation(line: 964, column: 40, scope: !7842)
!7853 = !DILocation(line: 964, column: 48, scope: !7842)
!7854 = !DILocation(line: 964, column: 46, scope: !7842)
!7855 = !DILocation(line: 964, column: 53, scope: !7842)
!7856 = !DILocation(line: 964, column: 59, scope: !7842)
!7857 = !DILocation(line: 964, column: 51, scope: !7842)
!7858 = !DILocation(line: 964, column: 63, scope: !7842)
!7859 = !DILocation(line: 964, column: 71, scope: !7842)
!7860 = !DILocation(line: 964, column: 69, scope: !7842)
!7861 = !DILocation(line: 964, column: 76, scope: !7842)
!7862 = !DILocation(line: 964, column: 82, scope: !7842)
!7863 = !DILocation(line: 964, column: 74, scope: !7842)
!7864 = !DILocation(line: 964, column: 86, scope: !7842)
!7865 = !DILocation(line: 964, column: 93, scope: !7842)
!7866 = !DILocation(line: 964, column: 91, scope: !7842)
!7867 = !DILocation(line: 964, column: 98, scope: !7842)
!7868 = !DILocation(line: 964, column: 104, scope: !7842)
!7869 = !DILocation(line: 964, column: 96, scope: !7842)
!7870 = !DILocation(line: 964, column: 108, scope: !7842)
!7871 = !DILocation(line: 964, column: 115, scope: !7842)
!7872 = !DILocation(line: 964, column: 113, scope: !7842)
!7873 = !DILocation(line: 964, column: 120, scope: !7842)
!7874 = !DILocation(line: 964, column: 126, scope: !7842)
!7875 = !DILocation(line: 964, column: 118, scope: !7842)
!7876 = !DILocation(line: 964, column: 129, scope: !7842)
!7877 = !DILocation(line: 964, column: 137, scope: !7842)
!7878 = !DILocation(line: 964, column: 135, scope: !7842)
!7879 = !DILocation(line: 964, column: 140, scope: !7842)
!7880 = !DILocation(line: 964, column: 148, scope: !7842)
!7881 = !DILocation(line: 964, column: 146, scope: !7842)
!7882 = !DILocation(line: 964, column: 3, scope: !7842)
!7883 = !DILocation(line: 966, column: 9, scope: !7662)
!7884 = !DILocation(line: 966, column: 2, scope: !7662)
!7885 = distinct !DISubprogram(name: "sub_v2_v2v2_int", scope: !2623, file: !2623, line: 344, type: !7886, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{null, !1277, !7888, !7888}
!7888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!7889 = !DILocalVariable(name: "r", arg: 1, scope: !7885, file: !2623, line: 344, type: !1277)
!7890 = !DILocation(line: 344, column: 34, scope: !7885)
!7891 = !DILocalVariable(name: "a", arg: 2, scope: !7885, file: !2623, line: 344, type: !7888)
!7892 = !DILocation(line: 344, column: 50, scope: !7885)
!7893 = !DILocalVariable(name: "b", arg: 3, scope: !7885, file: !2623, line: 344, type: !7888)
!7894 = !DILocation(line: 344, column: 66, scope: !7885)
!7895 = !DILocation(line: 346, column: 9, scope: !7885)
!7896 = !DILocation(line: 346, column: 16, scope: !7885)
!7897 = !DILocation(line: 346, column: 14, scope: !7885)
!7898 = !DILocation(line: 346, column: 2, scope: !7885)
!7899 = !DILocation(line: 346, column: 7, scope: !7885)
!7900 = !DILocation(line: 347, column: 9, scope: !7885)
!7901 = !DILocation(line: 347, column: 16, scope: !7885)
!7902 = !DILocation(line: 347, column: 14, scope: !7885)
!7903 = !DILocation(line: 347, column: 2, scope: !7885)
!7904 = !DILocation(line: 347, column: 7, scope: !7885)
!7905 = !DILocation(line: 348, column: 1, scope: !7885)
!7906 = distinct !DISubprogram(name: "paint_2d_ibuf_rgb_get", scope: !1, file: !1, line: 776, type: !7907, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{null, !2141, !66, !66, !2452, !238}
!7909 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7906, file: !1, line: 776, type: !2141)
!7910 = !DILocation(line: 776, column: 42, scope: !7906)
!7911 = !DILocalVariable(name: "x", arg: 2, scope: !7906, file: !1, line: 776, type: !66)
!7912 = !DILocation(line: 776, column: 52, scope: !7906)
!7913 = !DILocalVariable(name: "y", arg: 3, scope: !7906, file: !1, line: 776, type: !66)
!7914 = !DILocation(line: 776, column: 59, scope: !7906)
!7915 = !DILocalVariable(name: "is_torus", arg: 4, scope: !7906, file: !1, line: 776, type: !2452)
!7916 = !DILocation(line: 776, column: 73, scope: !7906)
!7917 = !DILocalVariable(name: "r_rgb", arg: 5, scope: !7906, file: !1, line: 776, type: !238)
!7918 = !DILocation(line: 776, column: 89, scope: !7906)
!7919 = !DILocation(line: 778, column: 6, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7906, file: !1, line: 778, column: 6)
!7921 = !DILocation(line: 778, column: 6, scope: !7906)
!7922 = !DILocation(line: 779, column: 8, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7920, file: !1, line: 778, column: 16)
!7924 = !DILocation(line: 779, column: 14, scope: !7923)
!7925 = !DILocation(line: 779, column: 5, scope: !7923)
!7926 = !DILocation(line: 780, column: 7, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7923, file: !1, line: 780, column: 7)
!7928 = !DILocation(line: 780, column: 9, scope: !7927)
!7929 = !DILocation(line: 780, column: 7, scope: !7923)
!7930 = !DILocation(line: 780, column: 19, scope: !7927)
!7931 = !DILocation(line: 780, column: 25, scope: !7927)
!7932 = !DILocation(line: 780, column: 16, scope: !7927)
!7933 = !DILocation(line: 780, column: 14, scope: !7927)
!7934 = !DILocation(line: 781, column: 8, scope: !7923)
!7935 = !DILocation(line: 781, column: 14, scope: !7923)
!7936 = !DILocation(line: 781, column: 5, scope: !7923)
!7937 = !DILocation(line: 782, column: 7, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7923, file: !1, line: 782, column: 7)
!7939 = !DILocation(line: 782, column: 9, scope: !7938)
!7940 = !DILocation(line: 782, column: 7, scope: !7923)
!7941 = !DILocation(line: 782, column: 19, scope: !7938)
!7942 = !DILocation(line: 782, column: 25, scope: !7938)
!7943 = !DILocation(line: 782, column: 16, scope: !7938)
!7944 = !DILocation(line: 782, column: 14, scope: !7938)
!7945 = !DILocation(line: 783, column: 2, scope: !7923)
!7946 = !DILocation(line: 785, column: 6, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7906, file: !1, line: 785, column: 6)
!7948 = !DILocation(line: 785, column: 12, scope: !7947)
!7949 = !DILocation(line: 785, column: 6, scope: !7906)
!7950 = !DILocalVariable(name: "rrgbf", scope: !7951, file: !1, line: 786, type: !2450)
!7951 = distinct !DILexicalBlock(scope: !7947, file: !1, line: 785, column: 24)
!7952 = !DILocation(line: 786, column: 16, scope: !7951)
!7953 = !DILocation(line: 786, column: 24, scope: !7951)
!7954 = !DILocation(line: 786, column: 30, scope: !7951)
!7955 = !DILocation(line: 786, column: 44, scope: !7951)
!7956 = !DILocation(line: 786, column: 50, scope: !7951)
!7957 = !DILocation(line: 786, column: 54, scope: !7951)
!7958 = !DILocation(line: 786, column: 52, scope: !7951)
!7959 = !DILocation(line: 786, column: 58, scope: !7951)
!7960 = !DILocation(line: 786, column: 56, scope: !7951)
!7961 = !DILocation(line: 786, column: 61, scope: !7951)
!7962 = !DILocation(line: 786, column: 41, scope: !7951)
!7963 = !DILocation(line: 787, column: 14, scope: !7951)
!7964 = !DILocation(line: 787, column: 21, scope: !7951)
!7965 = !DILocation(line: 787, column: 3, scope: !7951)
!7966 = !DILocation(line: 788, column: 2, scope: !7951)
!7967 = !DILocalVariable(name: "rrgb", scope: !7968, file: !1, line: 790, type: !106)
!7968 = distinct !DILexicalBlock(scope: !7947, file: !1, line: 789, column: 7)
!7969 = !DILocation(line: 790, column: 18, scope: !7968)
!7970 = !DILocation(line: 790, column: 42, scope: !7968)
!7971 = !DILocation(line: 790, column: 48, scope: !7968)
!7972 = !DILocation(line: 790, column: 25, scope: !7968)
!7973 = !DILocation(line: 790, column: 56, scope: !7968)
!7974 = !DILocation(line: 790, column: 62, scope: !7968)
!7975 = !DILocation(line: 790, column: 66, scope: !7968)
!7976 = !DILocation(line: 790, column: 64, scope: !7968)
!7977 = !DILocation(line: 790, column: 70, scope: !7968)
!7978 = !DILocation(line: 790, column: 68, scope: !7968)
!7979 = !DILocation(line: 790, column: 73, scope: !7968)
!7980 = !DILocation(line: 790, column: 53, scope: !7968)
!7981 = !DILocation(line: 791, column: 34, scope: !7968)
!7982 = !DILocation(line: 791, column: 41, scope: !7968)
!7983 = !DILocation(line: 791, column: 3, scope: !7968)
!7984 = !DILocation(line: 793, column: 1, scope: !7906)
!7985 = distinct !DISubprogram(name: "zero_v4", scope: !2623, file: !2623, line: 50, type: !7986, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!7986 = !DISubroutineType(types: !7987)
!7987 = !{null, !238}
!7988 = !DILocalVariable(name: "r", arg: 1, scope: !7985, file: !2623, line: 50, type: !238)
!7989 = !DILocation(line: 50, column: 28, scope: !7985)
!7990 = !DILocation(line: 52, column: 2, scope: !7985)
!7991 = !DILocation(line: 52, column: 7, scope: !7985)
!7992 = !DILocation(line: 53, column: 2, scope: !7985)
!7993 = !DILocation(line: 53, column: 7, scope: !7985)
!7994 = !DILocation(line: 54, column: 2, scope: !7985)
!7995 = !DILocation(line: 54, column: 7, scope: !7985)
!7996 = !DILocation(line: 55, column: 2, scope: !7985)
!7997 = !DILocation(line: 55, column: 7, scope: !7985)
!7998 = !DILocation(line: 56, column: 1, scope: !7985)
!7999 = distinct !DISubprogram(name: "paint_2d_ibuf_add_if", scope: !1, file: !1, line: 820, type: !8000, scopeLine: 821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8000 = !DISubroutineType(types: !8001)
!8001 = !{!113, !2141, !5, !5, !238, !163, !113}
!8002 = !DILocalVariable(name: "ibuf", arg: 1, scope: !7999, file: !1, line: 820, type: !2141)
!8003 = !DILocation(line: 820, column: 42, scope: !7999)
!8004 = !DILocalVariable(name: "x", arg: 2, scope: !7999, file: !1, line: 820, type: !5)
!8005 = !DILocation(line: 820, column: 61, scope: !7999)
!8006 = !DILocalVariable(name: "y", arg: 3, scope: !7999, file: !1, line: 820, type: !5)
!8007 = !DILocation(line: 820, column: 77, scope: !7999)
!8008 = !DILocalVariable(name: "outrgb", arg: 4, scope: !7999, file: !1, line: 820, type: !238)
!8009 = !DILocation(line: 820, column: 87, scope: !7999)
!8010 = !DILocalVariable(name: "torus", arg: 5, scope: !7999, file: !1, line: 820, type: !163)
!8011 = !DILocation(line: 820, column: 101, scope: !7999)
!8012 = !DILocalVariable(name: "w", arg: 6, scope: !7999, file: !1, line: 820, type: !113)
!8013 = !DILocation(line: 820, column: 114, scope: !7999)
!8014 = !DILocalVariable(name: "inrgb", scope: !7999, file: !1, line: 822, type: !407)
!8015 = !DILocation(line: 822, column: 8, scope: !7999)
!8016 = !DILocation(line: 825, column: 7, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7999, file: !1, line: 825, column: 6)
!8018 = !DILocation(line: 825, column: 27, scope: !8017)
!8019 = !DILocation(line: 825, column: 33, scope: !8017)
!8020 = !DILocation(line: 825, column: 9, scope: !8017)
!8021 = !DILocation(line: 825, column: 37, scope: !8017)
!8022 = !DILocation(line: 825, column: 41, scope: !8017)
!8023 = !DILocation(line: 825, column: 61, scope: !8017)
!8024 = !DILocation(line: 825, column: 67, scope: !8017)
!8025 = !DILocation(line: 825, column: 43, scope: !8017)
!8026 = !DILocation(line: 825, column: 6, scope: !7999)
!8027 = !DILocation(line: 826, column: 7, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !1, line: 826, column: 7)
!8029 = distinct !DILexicalBlock(scope: !8017, file: !1, line: 825, column: 72)
!8030 = !DILocation(line: 826, column: 7, scope: !8029)
!8031 = !DILocation(line: 826, column: 36, scope: !8028)
!8032 = !DILocation(line: 826, column: 42, scope: !8028)
!8033 = !DILocation(line: 826, column: 45, scope: !8028)
!8034 = !DILocation(line: 826, column: 51, scope: !8028)
!8035 = !DILocation(line: 826, column: 14, scope: !8028)
!8036 = !DILocation(line: 827, column: 8, scope: !8028)
!8037 = !DILocation(line: 828, column: 2, scope: !8029)
!8038 = !DILocation(line: 830, column: 25, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8017, file: !1, line: 829, column: 7)
!8040 = !DILocation(line: 830, column: 31, scope: !8039)
!8041 = !DILocation(line: 830, column: 34, scope: !8039)
!8042 = !DILocation(line: 830, column: 40, scope: !8039)
!8043 = !DILocation(line: 830, column: 3, scope: !8039)
!8044 = !DILocation(line: 833, column: 12, scope: !7999)
!8045 = !DILocation(line: 833, column: 19, scope: !7999)
!8046 = !DILocation(line: 833, column: 2, scope: !7999)
!8047 = !DILocation(line: 834, column: 12, scope: !7999)
!8048 = !DILocation(line: 834, column: 20, scope: !7999)
!8049 = !DILocation(line: 834, column: 2, scope: !7999)
!8050 = !DILocation(line: 836, column: 9, scope: !7999)
!8051 = !DILocation(line: 836, column: 2, scope: !7999)
!8052 = !DILocation(line: 837, column: 1, scope: !7999)
!8053 = distinct !DISubprogram(name: "mul_v4_fl", scope: !2623, file: !2623, line: 419, type: !5497, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8054 = !DILocalVariable(name: "r", arg: 1, scope: !8053, file: !2623, line: 419, type: !238)
!8055 = !DILocation(line: 419, column: 30, scope: !8053)
!8056 = !DILocalVariable(name: "f", arg: 2, scope: !8053, file: !2623, line: 419, type: !113)
!8057 = !DILocation(line: 419, column: 42, scope: !8053)
!8058 = !DILocation(line: 421, column: 10, scope: !8053)
!8059 = !DILocation(line: 421, column: 2, scope: !8053)
!8060 = !DILocation(line: 421, column: 7, scope: !8053)
!8061 = !DILocation(line: 422, column: 10, scope: !8053)
!8062 = !DILocation(line: 422, column: 2, scope: !8053)
!8063 = !DILocation(line: 422, column: 7, scope: !8053)
!8064 = !DILocation(line: 423, column: 10, scope: !8053)
!8065 = !DILocation(line: 423, column: 2, scope: !8053)
!8066 = !DILocation(line: 423, column: 7, scope: !8053)
!8067 = !DILocation(line: 424, column: 10, scope: !8053)
!8068 = !DILocation(line: 424, column: 2, scope: !8053)
!8069 = !DILocation(line: 424, column: 7, scope: !8053)
!8070 = !DILocation(line: 425, column: 1, scope: !8053)
!8071 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !2623, file: !2623, line: 357, type: !4799, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8072 = !DILocalVariable(name: "r", arg: 1, scope: !8071, file: !2623, line: 357, type: !238)
!8073 = !DILocation(line: 357, column: 32, scope: !8071)
!8074 = !DILocalVariable(name: "a", arg: 2, scope: !8071, file: !2623, line: 357, type: !2450)
!8075 = !DILocation(line: 357, column: 50, scope: !8071)
!8076 = !DILocalVariable(name: "b", arg: 3, scope: !8071, file: !2623, line: 357, type: !2450)
!8077 = !DILocation(line: 357, column: 68, scope: !8071)
!8078 = !DILocation(line: 359, column: 9, scope: !8071)
!8079 = !DILocation(line: 359, column: 16, scope: !8071)
!8080 = !DILocation(line: 359, column: 14, scope: !8071)
!8081 = !DILocation(line: 359, column: 2, scope: !8071)
!8082 = !DILocation(line: 359, column: 7, scope: !8071)
!8083 = !DILocation(line: 360, column: 9, scope: !8071)
!8084 = !DILocation(line: 360, column: 16, scope: !8071)
!8085 = !DILocation(line: 360, column: 14, scope: !8071)
!8086 = !DILocation(line: 360, column: 2, scope: !8071)
!8087 = !DILocation(line: 360, column: 7, scope: !8071)
!8088 = !DILocation(line: 361, column: 9, scope: !8071)
!8089 = !DILocation(line: 361, column: 16, scope: !8071)
!8090 = !DILocation(line: 361, column: 14, scope: !8071)
!8091 = !DILocation(line: 361, column: 2, scope: !8071)
!8092 = !DILocation(line: 361, column: 7, scope: !8071)
!8093 = !DILocation(line: 362, column: 1, scope: !8071)
!8094 = distinct !DISubprogram(name: "rgb_to_grayscale", scope: !4767, file: !4767, line: 220, type: !5457, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8095 = !DILocalVariable(name: "rgb", arg: 1, scope: !8094, file: !4767, line: 220, type: !2450)
!8096 = !DILocation(line: 220, column: 44, scope: !8094)
!8097 = !DILocation(line: 222, column: 16, scope: !8094)
!8098 = !DILocation(line: 222, column: 14, scope: !8094)
!8099 = !DILocation(line: 222, column: 33, scope: !8094)
!8100 = !DILocation(line: 222, column: 31, scope: !8094)
!8101 = !DILocation(line: 222, column: 23, scope: !8094)
!8102 = !DILocation(line: 222, column: 50, scope: !8094)
!8103 = !DILocation(line: 222, column: 48, scope: !8094)
!8104 = !DILocation(line: 222, column: 40, scope: !8094)
!8105 = !DILocation(line: 222, column: 2, scope: !8094)
!8106 = distinct !DISubprogram(name: "blend_color_add_float", scope: !4798, file: !4798, line: 648, type: !4799, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8107 = !DILocalVariable(name: "dst", arg: 1, scope: !8106, file: !4798, line: 648, type: !238)
!8108 = !DILocation(line: 648, column: 42, scope: !8106)
!8109 = !DILocalVariable(name: "src1", arg: 2, scope: !8106, file: !4798, line: 648, type: !2450)
!8110 = !DILocation(line: 648, column: 62, scope: !8106)
!8111 = !DILocalVariable(name: "src2", arg: 3, scope: !8106, file: !4798, line: 648, type: !2450)
!8112 = !DILocation(line: 648, column: 83, scope: !8106)
!8113 = !DILocation(line: 650, column: 6, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8106, file: !4798, line: 650, column: 6)
!8115 = !DILocation(line: 650, column: 14, scope: !8114)
!8116 = !DILocation(line: 650, column: 6, scope: !8106)
!8117 = !DILocation(line: 652, column: 12, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8114, file: !4798, line: 650, column: 23)
!8119 = !DILocation(line: 652, column: 22, scope: !8118)
!8120 = !DILocation(line: 652, column: 32, scope: !8118)
!8121 = !DILocation(line: 652, column: 30, scope: !8118)
!8122 = !DILocation(line: 652, column: 20, scope: !8118)
!8123 = !DILocation(line: 652, column: 3, scope: !8118)
!8124 = !DILocation(line: 652, column: 10, scope: !8118)
!8125 = !DILocation(line: 653, column: 12, scope: !8118)
!8126 = !DILocation(line: 653, column: 22, scope: !8118)
!8127 = !DILocation(line: 653, column: 32, scope: !8118)
!8128 = !DILocation(line: 653, column: 30, scope: !8118)
!8129 = !DILocation(line: 653, column: 20, scope: !8118)
!8130 = !DILocation(line: 653, column: 3, scope: !8118)
!8131 = !DILocation(line: 653, column: 10, scope: !8118)
!8132 = !DILocation(line: 654, column: 12, scope: !8118)
!8133 = !DILocation(line: 654, column: 22, scope: !8118)
!8134 = !DILocation(line: 654, column: 32, scope: !8118)
!8135 = !DILocation(line: 654, column: 30, scope: !8118)
!8136 = !DILocation(line: 654, column: 20, scope: !8118)
!8137 = !DILocation(line: 654, column: 3, scope: !8118)
!8138 = !DILocation(line: 654, column: 10, scope: !8118)
!8139 = !DILocation(line: 655, column: 12, scope: !8118)
!8140 = !DILocation(line: 655, column: 3, scope: !8118)
!8141 = !DILocation(line: 655, column: 10, scope: !8118)
!8142 = !DILocation(line: 656, column: 2, scope: !8118)
!8143 = !DILocation(line: 659, column: 14, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8114, file: !4798, line: 657, column: 7)
!8145 = !DILocation(line: 659, column: 19, scope: !8144)
!8146 = !DILocation(line: 659, column: 3, scope: !8144)
!8147 = !DILocation(line: 661, column: 1, scope: !8106)
!8148 = distinct !DISubprogram(name: "paint_2d_ibuf_rgb_set", scope: !1, file: !1, line: 794, type: !8149, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8149 = !DISubroutineType(types: !8150)
!8150 = !{null, !2141, !66, !66, !2452, !2450}
!8151 = !DILocalVariable(name: "ibuf", arg: 1, scope: !8148, file: !1, line: 794, type: !2141)
!8152 = !DILocation(line: 794, column: 42, scope: !8148)
!8153 = !DILocalVariable(name: "x", arg: 2, scope: !8148, file: !1, line: 794, type: !66)
!8154 = !DILocation(line: 794, column: 52, scope: !8148)
!8155 = !DILocalVariable(name: "y", arg: 3, scope: !8148, file: !1, line: 794, type: !66)
!8156 = !DILocation(line: 794, column: 59, scope: !8148)
!8157 = !DILocalVariable(name: "is_torus", arg: 4, scope: !8148, file: !1, line: 794, type: !2452)
!8158 = !DILocation(line: 794, column: 73, scope: !8148)
!8159 = !DILocalVariable(name: "rgb", arg: 5, scope: !8148, file: !1, line: 794, type: !2450)
!8160 = !DILocation(line: 794, column: 95, scope: !8148)
!8161 = !DILocation(line: 796, column: 6, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8148, file: !1, line: 796, column: 6)
!8163 = !DILocation(line: 796, column: 6, scope: !8148)
!8164 = !DILocation(line: 797, column: 8, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8162, file: !1, line: 796, column: 16)
!8166 = !DILocation(line: 797, column: 14, scope: !8165)
!8167 = !DILocation(line: 797, column: 5, scope: !8165)
!8168 = !DILocation(line: 798, column: 7, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8165, file: !1, line: 798, column: 7)
!8170 = !DILocation(line: 798, column: 9, scope: !8169)
!8171 = !DILocation(line: 798, column: 7, scope: !8165)
!8172 = !DILocation(line: 798, column: 19, scope: !8169)
!8173 = !DILocation(line: 798, column: 25, scope: !8169)
!8174 = !DILocation(line: 798, column: 16, scope: !8169)
!8175 = !DILocation(line: 798, column: 14, scope: !8169)
!8176 = !DILocation(line: 799, column: 8, scope: !8165)
!8177 = !DILocation(line: 799, column: 14, scope: !8165)
!8178 = !DILocation(line: 799, column: 5, scope: !8165)
!8179 = !DILocation(line: 800, column: 7, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8165, file: !1, line: 800, column: 7)
!8181 = !DILocation(line: 800, column: 9, scope: !8180)
!8182 = !DILocation(line: 800, column: 7, scope: !8165)
!8183 = !DILocation(line: 800, column: 19, scope: !8180)
!8184 = !DILocation(line: 800, column: 25, scope: !8180)
!8185 = !DILocation(line: 800, column: 16, scope: !8180)
!8186 = !DILocation(line: 800, column: 14, scope: !8180)
!8187 = !DILocation(line: 801, column: 2, scope: !8165)
!8188 = !DILocation(line: 803, column: 6, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8148, file: !1, line: 803, column: 6)
!8190 = !DILocation(line: 803, column: 12, scope: !8189)
!8191 = !DILocation(line: 803, column: 6, scope: !8148)
!8192 = !DILocalVariable(name: "rrgbf", scope: !8193, file: !1, line: 804, type: !238)
!8193 = distinct !DILexicalBlock(scope: !8189, file: !1, line: 803, column: 24)
!8194 = !DILocation(line: 804, column: 10, scope: !8193)
!8195 = !DILocation(line: 804, column: 18, scope: !8193)
!8196 = !DILocation(line: 804, column: 24, scope: !8193)
!8197 = !DILocation(line: 804, column: 38, scope: !8193)
!8198 = !DILocation(line: 804, column: 44, scope: !8193)
!8199 = !DILocation(line: 804, column: 48, scope: !8193)
!8200 = !DILocation(line: 804, column: 46, scope: !8193)
!8201 = !DILocation(line: 804, column: 52, scope: !8193)
!8202 = !DILocation(line: 804, column: 50, scope: !8193)
!8203 = !DILocation(line: 804, column: 55, scope: !8193)
!8204 = !DILocation(line: 804, column: 35, scope: !8193)
!8205 = !DILocalVariable(name: "map_alpha", scope: !8193, file: !1, line: 805, type: !113)
!8206 = !DILocation(line: 805, column: 9, scope: !8193)
!8207 = !DILocation(line: 805, column: 22, scope: !8193)
!8208 = !DILocation(line: 805, column: 29, scope: !8193)
!8209 = !DILocation(line: 805, column: 21, scope: !8193)
!8210 = !DILocation(line: 805, column: 40, scope: !8193)
!8211 = !DILocation(line: 805, column: 51, scope: !8193)
!8212 = !DILocation(line: 805, column: 62, scope: !8193)
!8213 = !DILocation(line: 805, column: 60, scope: !8193)
!8214 = !DILocation(line: 807, column: 15, scope: !8193)
!8215 = !DILocation(line: 807, column: 22, scope: !8193)
!8216 = !DILocation(line: 807, column: 27, scope: !8193)
!8217 = !DILocation(line: 807, column: 3, scope: !8193)
!8218 = !DILocation(line: 808, column: 2, scope: !8193)
!8219 = !DILocalVariable(name: "straight", scope: !8220, file: !1, line: 810, type: !1562)
!8220 = distinct !DILexicalBlock(scope: !8189, file: !1, line: 809, column: 7)
!8221 = !DILocation(line: 810, column: 17, scope: !8220)
!8222 = !DILocalVariable(name: "rrgb", scope: !8220, file: !1, line: 811, type: !106)
!8223 = !DILocation(line: 811, column: 18, scope: !8220)
!8224 = !DILocation(line: 811, column: 42, scope: !8220)
!8225 = !DILocation(line: 811, column: 48, scope: !8220)
!8226 = !DILocation(line: 811, column: 25, scope: !8220)
!8227 = !DILocation(line: 811, column: 56, scope: !8220)
!8228 = !DILocation(line: 811, column: 62, scope: !8220)
!8229 = !DILocation(line: 811, column: 66, scope: !8220)
!8230 = !DILocation(line: 811, column: 64, scope: !8220)
!8231 = !DILocation(line: 811, column: 70, scope: !8220)
!8232 = !DILocation(line: 811, column: 68, scope: !8220)
!8233 = !DILocation(line: 811, column: 73, scope: !8220)
!8234 = !DILocation(line: 811, column: 53, scope: !8220)
!8235 = !DILocation(line: 813, column: 34, scope: !8220)
!8236 = !DILocation(line: 813, column: 44, scope: !8220)
!8237 = !DILocation(line: 813, column: 3, scope: !8220)
!8238 = !DILocation(line: 814, column: 13, scope: !8220)
!8239 = !DILocation(line: 814, column: 3, scope: !8220)
!8240 = !DILocation(line: 814, column: 11, scope: !8220)
!8241 = !DILocation(line: 815, column: 13, scope: !8220)
!8242 = !DILocation(line: 815, column: 3, scope: !8220)
!8243 = !DILocation(line: 815, column: 11, scope: !8220)
!8244 = !DILocation(line: 816, column: 13, scope: !8220)
!8245 = !DILocation(line: 816, column: 3, scope: !8220)
!8246 = !DILocation(line: 816, column: 11, scope: !8220)
!8247 = !DILocation(line: 818, column: 1, scope: !8148)
!8248 = distinct !DISubprogram(name: "straight_uchar_to_premul_float", scope: !4767, file: !4767, line: 310, type: !8249, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8249 = !DISubroutineType(types: !8250)
!8250 = !{null, !238, !4856}
!8251 = !DILocalVariable(name: "result", arg: 1, scope: !8248, file: !4767, line: 310, type: !238)
!8252 = !DILocation(line: 310, column: 51, scope: !8248)
!8253 = !DILocalVariable(name: "color", arg: 2, scope: !8248, file: !4767, line: 310, type: !4856)
!8254 = !DILocation(line: 310, column: 82, scope: !8248)
!8255 = !DILocalVariable(name: "alpha", scope: !8248, file: !4767, line: 312, type: !2451)
!8256 = !DILocation(line: 312, column: 14, scope: !8248)
!8257 = !DILocation(line: 312, column: 22, scope: !8248)
!8258 = !DILocation(line: 312, column: 31, scope: !8248)
!8259 = !DILocalVariable(name: "fac", scope: !8248, file: !4767, line: 313, type: !2451)
!8260 = !DILocation(line: 313, column: 14, scope: !8248)
!8261 = !DILocation(line: 313, column: 20, scope: !8248)
!8262 = !DILocation(line: 313, column: 26, scope: !8248)
!8263 = !DILocation(line: 315, column: 14, scope: !8248)
!8264 = !DILocation(line: 315, column: 25, scope: !8248)
!8265 = !DILocation(line: 315, column: 23, scope: !8248)
!8266 = !DILocation(line: 315, column: 2, scope: !8248)
!8267 = !DILocation(line: 315, column: 12, scope: !8248)
!8268 = !DILocation(line: 316, column: 14, scope: !8248)
!8269 = !DILocation(line: 316, column: 25, scope: !8248)
!8270 = !DILocation(line: 316, column: 23, scope: !8248)
!8271 = !DILocation(line: 316, column: 2, scope: !8248)
!8272 = !DILocation(line: 316, column: 12, scope: !8248)
!8273 = !DILocation(line: 317, column: 14, scope: !8248)
!8274 = !DILocation(line: 317, column: 25, scope: !8248)
!8275 = !DILocation(line: 317, column: 23, scope: !8248)
!8276 = !DILocation(line: 317, column: 2, scope: !8248)
!8277 = !DILocation(line: 317, column: 12, scope: !8248)
!8278 = !DILocation(line: 318, column: 14, scope: !8248)
!8279 = !DILocation(line: 318, column: 2, scope: !8248)
!8280 = !DILocation(line: 318, column: 12, scope: !8248)
!8281 = !DILocation(line: 319, column: 1, scope: !8248)
!8282 = distinct !DISubprogram(name: "add_v4_v4", scope: !2623, file: !2623, line: 316, type: !2624, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8283 = !DILocalVariable(name: "r", arg: 1, scope: !8282, file: !2623, line: 316, type: !238)
!8284 = !DILocation(line: 316, column: 30, scope: !8282)
!8285 = !DILocalVariable(name: "a", arg: 2, scope: !8282, file: !2623, line: 316, type: !2450)
!8286 = !DILocation(line: 316, column: 48, scope: !8282)
!8287 = !DILocation(line: 318, column: 10, scope: !8282)
!8288 = !DILocation(line: 318, column: 2, scope: !8282)
!8289 = !DILocation(line: 318, column: 7, scope: !8282)
!8290 = !DILocation(line: 319, column: 10, scope: !8282)
!8291 = !DILocation(line: 319, column: 2, scope: !8282)
!8292 = !DILocation(line: 319, column: 7, scope: !8282)
!8293 = !DILocation(line: 320, column: 10, scope: !8282)
!8294 = !DILocation(line: 320, column: 2, scope: !8282)
!8295 = !DILocation(line: 320, column: 7, scope: !8282)
!8296 = !DILocation(line: 321, column: 10, scope: !8282)
!8297 = !DILocation(line: 321, column: 2, scope: !8282)
!8298 = !DILocation(line: 321, column: 7, scope: !8282)
!8299 = !DILocation(line: 322, column: 1, scope: !8282)
!8300 = distinct !DISubprogram(name: "premul_float_to_straight_uchar", scope: !4767, file: !4767, line: 321, type: !4768, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8301 = !DILocalVariable(name: "result", arg: 1, scope: !8300, file: !4767, line: 321, type: !106)
!8302 = !DILocation(line: 321, column: 60, scope: !8300)
!8303 = !DILocalVariable(name: "color", arg: 2, scope: !8300, file: !4767, line: 321, type: !2450)
!8304 = !DILocation(line: 321, column: 80, scope: !8300)
!8305 = !DILocation(line: 323, column: 6, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8300, file: !4767, line: 323, column: 6)
!8307 = !DILocation(line: 323, column: 15, scope: !8306)
!8308 = !DILocation(line: 323, column: 23, scope: !8306)
!8309 = !DILocation(line: 323, column: 26, scope: !8306)
!8310 = !DILocation(line: 323, column: 35, scope: !8306)
!8311 = !DILocation(line: 323, column: 6, scope: !8300)
!8312 = !DILocation(line: 324, column: 15, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8306, file: !4767, line: 323, column: 44)
!8314 = !DILocation(line: 324, column: 3, scope: !8313)
!8315 = !DILocation(line: 324, column: 13, scope: !8313)
!8316 = !DILocation(line: 325, column: 15, scope: !8313)
!8317 = !DILocation(line: 325, column: 3, scope: !8313)
!8318 = !DILocation(line: 325, column: 13, scope: !8313)
!8319 = !DILocation(line: 326, column: 15, scope: !8313)
!8320 = !DILocation(line: 326, column: 3, scope: !8313)
!8321 = !DILocation(line: 326, column: 13, scope: !8313)
!8322 = !DILocation(line: 327, column: 15, scope: !8313)
!8323 = !DILocation(line: 327, column: 3, scope: !8313)
!8324 = !DILocation(line: 327, column: 13, scope: !8313)
!8325 = !DILocation(line: 328, column: 2, scope: !8313)
!8326 = !DILocalVariable(name: "alpha_inv", scope: !8327, file: !4767, line: 330, type: !2451)
!8327 = distinct !DILexicalBlock(scope: !8306, file: !4767, line: 329, column: 7)
!8328 = !DILocation(line: 330, column: 15, scope: !8327)
!8329 = !DILocation(line: 330, column: 34, scope: !8327)
!8330 = !DILocation(line: 330, column: 32, scope: !8327)
!8331 = !DILocation(line: 333, column: 15, scope: !8327)
!8332 = !DILocation(line: 333, column: 3, scope: !8327)
!8333 = !DILocation(line: 333, column: 13, scope: !8327)
!8334 = !DILocation(line: 334, column: 15, scope: !8327)
!8335 = !DILocation(line: 334, column: 3, scope: !8327)
!8336 = !DILocation(line: 334, column: 13, scope: !8327)
!8337 = !DILocation(line: 335, column: 15, scope: !8327)
!8338 = !DILocation(line: 335, column: 3, scope: !8327)
!8339 = !DILocation(line: 335, column: 13, scope: !8327)
!8340 = !DILocation(line: 336, column: 15, scope: !8327)
!8341 = !DILocation(line: 336, column: 3, scope: !8327)
!8342 = !DILocation(line: 336, column: 13, scope: !8327)
!8343 = !DILocation(line: 338, column: 1, scope: !8300)
!8344 = distinct !DISubprogram(name: "divide_round_i", scope: !6584, file: !6584, line: 170, type: !6585, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8345 = !DILocalVariable(name: "a", arg: 1, scope: !8344, file: !6584, line: 170, type: !66)
!8346 = !DILocation(line: 170, column: 32, scope: !8344)
!8347 = !DILocalVariable(name: "b", arg: 2, scope: !8344, file: !6584, line: 170, type: !66)
!8348 = !DILocation(line: 170, column: 39, scope: !8344)
!8349 = !DILocation(line: 172, column: 14, scope: !8344)
!8350 = !DILocation(line: 172, column: 12, scope: !8344)
!8351 = !DILocation(line: 172, column: 18, scope: !8344)
!8352 = !DILocation(line: 172, column: 16, scope: !8344)
!8353 = !DILocation(line: 172, column: 28, scope: !8344)
!8354 = !DILocation(line: 172, column: 26, scope: !8344)
!8355 = !DILocation(line: 172, column: 21, scope: !8344)
!8356 = !DILocation(line: 172, column: 2, scope: !8344)
!8357 = distinct !DISubprogram(name: "copy_v4_v4_char", scope: !2623, file: !2623, line: 114, type: !8358, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{null, !108, !2363}
!8360 = !DILocalVariable(name: "r", arg: 1, scope: !8357, file: !2623, line: 114, type: !108)
!8361 = !DILocation(line: 114, column: 35, scope: !8357)
!8362 = !DILocalVariable(name: "a", arg: 2, scope: !8357, file: !2623, line: 114, type: !2363)
!8363 = !DILocation(line: 114, column: 52, scope: !8357)
!8364 = !DILocation(line: 116, column: 9, scope: !8357)
!8365 = !DILocation(line: 116, column: 2, scope: !8357)
!8366 = !DILocation(line: 116, column: 7, scope: !8357)
!8367 = !DILocation(line: 117, column: 9, scope: !8357)
!8368 = !DILocation(line: 117, column: 2, scope: !8357)
!8369 = !DILocation(line: 117, column: 7, scope: !8357)
!8370 = !DILocation(line: 118, column: 9, scope: !8357)
!8371 = !DILocation(line: 118, column: 2, scope: !8357)
!8372 = !DILocation(line: 118, column: 7, scope: !8357)
!8373 = !DILocation(line: 119, column: 9, scope: !8357)
!8374 = !DILocation(line: 119, column: 2, scope: !8357)
!8375 = !DILocation(line: 119, column: 7, scope: !8357)
!8376 = !DILocation(line: 120, column: 1, scope: !8357)
!8377 = distinct !DISubprogram(name: "compare_len_squared_v3v3", scope: !2623, file: !2623, line: 968, type: !8378, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2453)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!107, !2450, !2450, !2451}
!8380 = !DILocalVariable(name: "v1", arg: 1, scope: !8377, file: !2623, line: 968, type: !2450)
!8381 = !DILocation(line: 968, column: 51, scope: !8377)
!8382 = !DILocalVariable(name: "v2", arg: 2, scope: !8377, file: !2623, line: 968, type: !2450)
!8383 = !DILocation(line: 968, column: 70, scope: !8377)
!8384 = !DILocalVariable(name: "limit_sq", arg: 3, scope: !8377, file: !2623, line: 968, type: !2451)
!8385 = !DILocation(line: 968, column: 89, scope: !8377)
!8386 = !DILocalVariable(name: "x", scope: !8377, file: !2623, line: 970, type: !113)
!8387 = !DILocation(line: 970, column: 8, scope: !8377)
!8388 = !DILocalVariable(name: "y", scope: !8377, file: !2623, line: 970, type: !113)
!8389 = !DILocation(line: 970, column: 11, scope: !8377)
!8390 = !DILocalVariable(name: "z", scope: !8377, file: !2623, line: 970, type: !113)
!8391 = !DILocation(line: 970, column: 14, scope: !8377)
!8392 = !DILocation(line: 972, column: 6, scope: !8377)
!8393 = !DILocation(line: 972, column: 14, scope: !8377)
!8394 = !DILocation(line: 972, column: 12, scope: !8377)
!8395 = !DILocation(line: 972, column: 4, scope: !8377)
!8396 = !DILocation(line: 973, column: 6, scope: !8377)
!8397 = !DILocation(line: 973, column: 14, scope: !8377)
!8398 = !DILocation(line: 973, column: 12, scope: !8377)
!8399 = !DILocation(line: 973, column: 4, scope: !8377)
!8400 = !DILocation(line: 974, column: 6, scope: !8377)
!8401 = !DILocation(line: 974, column: 14, scope: !8377)
!8402 = !DILocation(line: 974, column: 12, scope: !8377)
!8403 = !DILocation(line: 974, column: 4, scope: !8377)
!8404 = !DILocation(line: 976, column: 11, scope: !8377)
!8405 = !DILocation(line: 976, column: 15, scope: !8377)
!8406 = !DILocation(line: 976, column: 13, scope: !8377)
!8407 = !DILocation(line: 976, column: 19, scope: !8377)
!8408 = !DILocation(line: 976, column: 23, scope: !8377)
!8409 = !DILocation(line: 976, column: 21, scope: !8377)
!8410 = !DILocation(line: 976, column: 17, scope: !8377)
!8411 = !DILocation(line: 976, column: 27, scope: !8377)
!8412 = !DILocation(line: 976, column: 31, scope: !8377)
!8413 = !DILocation(line: 976, column: 29, scope: !8377)
!8414 = !DILocation(line: 976, column: 25, scope: !8377)
!8415 = !DILocation(line: 976, column: 37, scope: !8377)
!8416 = !DILocation(line: 976, column: 34, scope: !8377)
!8417 = !DILocation(line: 976, column: 9, scope: !8377)
!8418 = !DILocation(line: 976, column: 2, scope: !8377)
