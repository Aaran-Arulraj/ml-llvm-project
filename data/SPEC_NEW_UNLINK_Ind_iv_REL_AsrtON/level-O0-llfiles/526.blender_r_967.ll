; ModuleID = 'blender/source/blender/editors/armature/editarmature_retarget.c'
source_filename = "blender/source/blender/editors/armature/editarmature_retarget.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.RigGraph = type { %struct.ListBase, %struct.ListBase, float, void (%struct.BArc*)*, void (%struct.BNode*)*, void (%struct.BNode*, %struct.RadialArc*, i32)*, void (%struct.BNode*, %struct.BNode*, %struct.BNode*, %struct.BArc*, %struct.BArc*)*, i32, %struct.ListBase, %struct.ListBase*, %struct.RigNode*, %struct.ReebGraph*, %struct.TaskScheduler*, %struct.TaskPool*, %struct.GHash*, %struct.GHash*, %struct.Object* }
%struct.BArc = type { i8*, i8*, %struct.BNode*, %struct.BNode*, i32, float, i32, i32, i32 }
%struct.BNode = type { i8*, i8*, [3 x float], i32, i32, %struct.BArc**, i32, i32, i32, [3 x float] }
%struct.RadialArc = type { %struct.BArc*, [3 x float] }
%struct.ListBase = type { i8*, i8* }
%struct.RigNode = type { i8*, i8*, [3 x float], i32, i32, %struct.BArc**, i32, i32, i32, [3 x float], %struct.ReebNode* }
%struct.ReebNode = type { i8*, i8*, [3 x float], i32, i32, %struct.ReebArc**, i32, i32, i32, [3 x float], [3 x float], i32, float, i32, %struct.ReebNode*, %struct.ReebNode* }
%struct.ReebArc = type { i8*, i8*, %struct.ReebNode*, %struct.ReebNode*, i32, float, i32, i32, i32, %struct.ListBase, i32, %struct.EmbedBucket*, %struct.GHash*, float, %struct.ReebArc* }
%struct.EmbedBucket = type { float, i32, [3 x float], [3 x float] }
%struct.ReebGraph = type { %struct.ListBase, %struct.ListBase, float, void (%struct.BArc*)*, void (%struct.BNode*)*, void (%struct.BNode*, %struct.RadialArc*, i32)*, void (%struct.BNode*, %struct.BNode*, %struct.BNode*, %struct.BArc*, %struct.BArc*)*, i32, i32, %struct.EdgeHash*, i32, %struct.ReebGraph* }
%struct.EdgeHash = type opaque
%struct.TaskScheduler = type opaque
%struct.TaskPool = type opaque
%struct.GHash = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.EditBone = type { %struct.EditBone*, %struct.EditBone*, %struct.IDProperty*, %struct.EditBone*, i8*, [64 x i8], float, [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, float, float, float, float, i16 }
%struct.BGraph = type { %struct.ListBase, %struct.ListBase, float, void (%struct.BArc*)*, void (%struct.BNode*)*, void (%struct.BNode*, %struct.RadialArc*, i32)*, void (%struct.BNode*, %struct.BNode*, %struct.BNode*, %struct.BArc*, %struct.BArc*)* }
%struct.RigArc = type { i8*, i8*, %struct.RigNode*, %struct.RigNode*, i32, float, i32, i32, i32, %struct.ListBase, i32, %struct.ReebArc* }
%struct.RigEdge = type { %struct.RigEdge*, %struct.RigEdge*, [3 x float], [3 x float], float, float, float, %struct.EditBone*, [3 x float] }
%struct.RigControl = type { %struct.RigControl*, %struct.RigControl*, [3 x float], [3 x float], %struct.EditBone*, %struct.EditBone*, %struct.EditBone*, [3 x float], [3 x float], [4 x float], i32, i32 }
%struct.bContext = type opaque
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct.RetargetParam = type { %struct.RigGraph*, %struct.RigArc*, %struct.RigNode*, %struct.bContext* }
%struct.ReebArcIterator = type { i8* (i8*)*, i8* (i8*)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*, i32)*, i8* (i8*)*, i32 (i8*)*, float*, float*, float, i32, i32, %struct.ReebArc*, i32, i32, i32 }
%struct.BArcIterator = type { i8* (i8*)*, i8* (i8*)*, i8* (i8*, i32)*, i8* (i8*)*, i8* (i8*, i32)*, i8* (i8*)*, i32 (i8*)*, float*, float*, float, i32, i32 }
%struct.MemoNode = type { float, i32 }
%struct.CollectionPointerLink = type { %struct.CollectionPointerLink*, %struct.CollectionPointerLink*, %struct.PointerRNA }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.StructRNA = type opaque
%struct._gh_Entry = type { i8*, i8*, i8* }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"---- \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"head\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09inner joints %0.3f %0.3f %0.3f\0A\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"\09\09length %f\0A\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"\09\09angle %f\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\09\09%s\0A\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"symmetry level: %i flag: %i group %i\0A\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"tail\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"---- ARCS ----\0A\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"HEAD NODE:\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"HEAD NODE: NONE\0A\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.13 = private unnamed_addr constant [10 x i8] c"EditBones\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"armature cyclic\0A\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"None\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"Last joint\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"Done\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"Bone offset\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"Reeb Graph created\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"Armature graph created\0A\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"retargetting %s\0A\00", align 1
@GLOBAL_RIGG = internal global %struct.RigGraph* null, align 8, !dbg !0
@.str.22 = private unnamed_addr constant [13 x i8] c"-----------\0A\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"runtime: \09%.3f\0A\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"reeb: \09\09%.3f (%.1f%%)\0A\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"rig: \09\09%.3f (%.1f%%)\0A\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"retarget: \09%.3f (%.1f%%)\0A\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"Retarget Skeleton\00", align 1
@.str.28 = private unnamed_addr constant [32 x i8] c"%s %p %i <%0.3f, %0.3f, %0.3f>\0A\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"Symmetry AXIAL\0A\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"Symmetry RADIAL\0A\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"symmetry axis\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"%sBone: %s\0A\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"%sLink: %s\0A\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"!NONE!\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"%soffset\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"%sFlag: %i\0A\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"rig graph\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"newRigGraph bones gh\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"newRigGraph cont gh\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"rig arc\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"rig node\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"rig edge\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"rig control\00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"NOT ENOUGH BUCKETS!\0A\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"Best positions\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"memoization table\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"positions cache\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"cloneRigGraph gh\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"RetargetParam\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local float @rollBoneByQuat(%struct.EditBone* %bone, float* %old_up_axis, float* %qrot) #0 !dbg !1588 {
entry:
  %bone.addr = alloca %struct.EditBone*, align 8
  %old_up_axis.addr = alloca float*, align 8
  %qrot.addr = alloca float*, align 8
  %new_up_axis = alloca [3 x float], align 4
  store %struct.EditBone* %bone, %struct.EditBone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone.addr, metadata !1592, metadata !DIExpression()), !dbg !1593
  store float* %old_up_axis, float** %old_up_axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_up_axis.addr, metadata !1594, metadata !DIExpression()), !dbg !1595
  store float* %qrot, float** %qrot.addr, align 8
  call void @llvm.dbg.declare(metadata float** %qrot.addr, metadata !1596, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.declare(metadata [3 x float]* %new_up_axis, metadata !1598, metadata !DIExpression()), !dbg !1599
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !1600
  %0 = load float*, float** %old_up_axis.addr, align 8, !dbg !1601
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !1602
  %1 = load float*, float** %qrot.addr, align 8, !dbg !1603
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !1604
  call void @mul_qt_v3(float* %1, float* %arraydecay1), !dbg !1605
  %2 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !1606
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !1607
  %call = call float @ED_rollBoneToVector(%struct.EditBone* %2, float* %arraydecay2, i8 zeroext 0), !dbg !1608
  ret float %call, !dbg !1609
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !1610 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !1616, metadata !DIExpression()), !dbg !1617
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !1618, metadata !DIExpression()), !dbg !1619
  %0 = load float*, float** %a.addr, align 8, !dbg !1620
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !1620
  %1 = load float, float* %arrayidx, align 4, !dbg !1620
  %2 = load float*, float** %r.addr, align 8, !dbg !1621
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !1621
  store float %1, float* %arrayidx1, align 4, !dbg !1622
  %3 = load float*, float** %a.addr, align 8, !dbg !1623
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !1623
  %4 = load float, float* %arrayidx2, align 4, !dbg !1623
  %5 = load float*, float** %r.addr, align 8, !dbg !1624
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !1624
  store float %4, float* %arrayidx3, align 4, !dbg !1625
  %6 = load float*, float** %a.addr, align 8, !dbg !1626
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !1626
  %7 = load float, float* %arrayidx4, align 4, !dbg !1626
  %8 = load float*, float** %r.addr, align 8, !dbg !1627
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !1627
  store float %7, float* %arrayidx5, align 4, !dbg !1628
  ret void, !dbg !1629
}

declare dso_local void @mul_qt_v3(float*, float*) #2

declare dso_local float @ED_rollBoneToVector(%struct.EditBone*, float*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RIG_freeRigGraph(%struct.BGraph* %rg) #0 !dbg !1630 {
entry:
  %rg.addr = alloca %struct.BGraph*, align 8
  %rigg = alloca %struct.RigGraph*, align 8
  %node = alloca %struct.BNode*, align 8
  %arc = alloca %struct.BArc*, align 8
  store %struct.BGraph* %rg, %struct.BGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BGraph** %rg.addr, metadata !1633, metadata !DIExpression()), !dbg !1634
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg, metadata !1635, metadata !DIExpression()), !dbg !1636
  %0 = load %struct.BGraph*, %struct.BGraph** %rg.addr, align 8, !dbg !1637
  %1 = bitcast %struct.BGraph* %0 to %struct.RigGraph*, !dbg !1638
  store %struct.RigGraph* %1, %struct.RigGraph** %rigg, align 8, !dbg !1636
  call void @llvm.dbg.declare(metadata %struct.BNode** %node, metadata !1639, metadata !DIExpression()), !dbg !1640
  call void @llvm.dbg.declare(metadata %struct.BArc** %arc, metadata !1641, metadata !DIExpression()), !dbg !1642
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1643
  %task_pool = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %2, i32 0, i32 13, !dbg !1644
  %3 = load %struct.TaskPool*, %struct.TaskPool** %task_pool, align 8, !dbg !1644
  call void @BLI_task_pool_free(%struct.TaskPool* %3), !dbg !1645
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1646
  %task_scheduler = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %4, i32 0, i32 12, !dbg !1647
  %5 = load %struct.TaskScheduler*, %struct.TaskScheduler** %task_scheduler, align 8, !dbg !1647
  call void @BLI_task_scheduler_free(%struct.TaskScheduler* %5), !dbg !1648
  %6 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1649
  %link_mesh = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %6, i32 0, i32 11, !dbg !1651
  %7 = load %struct.ReebGraph*, %struct.ReebGraph** %link_mesh, align 8, !dbg !1651
  %tobool = icmp ne %struct.ReebGraph* %7, null, !dbg !1649
  br i1 %tobool, label %if.then, label %if.end, !dbg !1652

if.then:                                          ; preds = %entry
  %8 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1653
  %link_mesh1 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %8, i32 0, i32 11, !dbg !1655
  %9 = load %struct.ReebGraph*, %struct.ReebGraph** %link_mesh1, align 8, !dbg !1655
  call void @REEB_freeGraph(%struct.ReebGraph* %9), !dbg !1656
  br label %if.end, !dbg !1657

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.BGraph*, %struct.BGraph** %rg.addr, align 8, !dbg !1658
  %arcs = getelementptr inbounds %struct.BGraph, %struct.BGraph* %10, i32 0, i32 0, !dbg !1660
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs, i32 0, i32 0, !dbg !1661
  %11 = load i8*, i8** %first, align 8, !dbg !1661
  %12 = bitcast i8* %11 to %struct.BArc*, !dbg !1658
  store %struct.BArc* %12, %struct.BArc** %arc, align 8, !dbg !1662
  br label %for.cond, !dbg !1663

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load %struct.BArc*, %struct.BArc** %arc, align 8, !dbg !1664
  %tobool2 = icmp ne %struct.BArc* %13, null, !dbg !1666
  br i1 %tobool2, label %for.body, label %for.end, !dbg !1666

for.body:                                         ; preds = %for.cond
  %14 = load %struct.BArc*, %struct.BArc** %arc, align 8, !dbg !1667
  call void @RIG_freeRigArc(%struct.BArc* %14), !dbg !1669
  br label %for.inc, !dbg !1670

for.inc:                                          ; preds = %for.body
  %15 = load %struct.BArc*, %struct.BArc** %arc, align 8, !dbg !1671
  %next = getelementptr inbounds %struct.BArc, %struct.BArc* %15, i32 0, i32 0, !dbg !1672
  %16 = load i8*, i8** %next, align 8, !dbg !1672
  %17 = bitcast i8* %16 to %struct.BArc*, !dbg !1671
  store %struct.BArc* %17, %struct.BArc** %arc, align 8, !dbg !1673
  br label %for.cond, !dbg !1674, !llvm.loop !1675

for.end:                                          ; preds = %for.cond
  %18 = load %struct.BGraph*, %struct.BGraph** %rg.addr, align 8, !dbg !1677
  %arcs3 = getelementptr inbounds %struct.BGraph, %struct.BGraph* %18, i32 0, i32 0, !dbg !1678
  call void @BLI_freelistN(%struct.ListBase* %arcs3), !dbg !1679
  %19 = load %struct.BGraph*, %struct.BGraph** %rg.addr, align 8, !dbg !1680
  %nodes = getelementptr inbounds %struct.BGraph, %struct.BGraph* %19, i32 0, i32 1, !dbg !1682
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !1683
  %20 = load i8*, i8** %first4, align 8, !dbg !1683
  %21 = bitcast i8* %20 to %struct.BNode*, !dbg !1680
  store %struct.BNode* %21, %struct.BNode** %node, align 8, !dbg !1684
  br label %for.cond5, !dbg !1685

for.cond5:                                        ; preds = %for.inc8, %for.end
  %22 = load %struct.BNode*, %struct.BNode** %node, align 8, !dbg !1686
  %tobool6 = icmp ne %struct.BNode* %22, null, !dbg !1688
  br i1 %tobool6, label %for.body7, label %for.end10, !dbg !1688

for.body7:                                        ; preds = %for.cond5
  %23 = load %struct.BGraph*, %struct.BGraph** %rg.addr, align 8, !dbg !1689
  %24 = load %struct.BNode*, %struct.BNode** %node, align 8, !dbg !1691
  call void @BLI_freeNode(%struct.BGraph* %23, %struct.BNode* %24), !dbg !1692
  br label %for.inc8, !dbg !1693

for.inc8:                                         ; preds = %for.body7
  %25 = load %struct.BNode*, %struct.BNode** %node, align 8, !dbg !1694
  %next9 = getelementptr inbounds %struct.BNode, %struct.BNode* %25, i32 0, i32 0, !dbg !1695
  %26 = load i8*, i8** %next9, align 8, !dbg !1695
  %27 = bitcast i8* %26 to %struct.BNode*, !dbg !1694
  store %struct.BNode* %27, %struct.BNode** %node, align 8, !dbg !1696
  br label %for.cond5, !dbg !1697, !llvm.loop !1698

for.end10:                                        ; preds = %for.cond5
  %28 = load %struct.BGraph*, %struct.BGraph** %rg.addr, align 8, !dbg !1700
  %nodes11 = getelementptr inbounds %struct.BGraph, %struct.BGraph* %28, i32 0, i32 1, !dbg !1701
  call void @BLI_freelistN(%struct.ListBase* %nodes11), !dbg !1702
  %29 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1703
  %controls = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %29, i32 0, i32 8, !dbg !1704
  call void @BLI_freelistN(%struct.ListBase* %controls), !dbg !1705
  %30 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1706
  %bones_map = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %30, i32 0, i32 14, !dbg !1707
  %31 = load %struct.GHash*, %struct.GHash** %bones_map, align 8, !dbg !1707
  call void @BLI_ghash_free(%struct.GHash* %31, void (i8*)* null, void (i8*)* null), !dbg !1708
  %32 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1709
  %controls_map = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %32, i32 0, i32 15, !dbg !1710
  %33 = load %struct.GHash*, %struct.GHash** %controls_map, align 8, !dbg !1710
  call void @BLI_ghash_free(%struct.GHash* %33, void (i8*)* null, void (i8*)* null), !dbg !1711
  %34 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1712
  %flag = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %34, i32 0, i32 7, !dbg !1714
  %35 = load i32, i32* %flag, align 8, !dbg !1714
  %and = and i32 %35, 1, !dbg !1715
  %tobool12 = icmp ne i32 %and, 0, !dbg !1715
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !1716

if.then13:                                        ; preds = %for.end10
  %36 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1717
  %editbones = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %36, i32 0, i32 9, !dbg !1719
  %37 = load %struct.ListBase*, %struct.ListBase** %editbones, align 8, !dbg !1719
  call void @BLI_freelistN(%struct.ListBase* %37), !dbg !1720
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1721
  %39 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !1722
  %editbones14 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %39, i32 0, i32 9, !dbg !1723
  %40 = load %struct.ListBase*, %struct.ListBase** %editbones14, align 8, !dbg !1723
  %41 = bitcast %struct.ListBase* %40 to i8*, !dbg !1722
  call void %38(i8* %41), !dbg !1721
  br label %if.end15, !dbg !1724

if.end15:                                         ; preds = %if.then13, %for.end10
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1725
  %43 = load %struct.BGraph*, %struct.BGraph** %rg.addr, align 8, !dbg !1726
  %44 = bitcast %struct.BGraph* %43 to i8*, !dbg !1726
  call void %42(i8* %44), !dbg !1725
  ret void, !dbg !1727
}

declare dso_local void @BLI_task_pool_free(%struct.TaskPool*) #2

declare dso_local void @BLI_task_scheduler_free(%struct.TaskScheduler*) #2

declare dso_local void @REEB_freeGraph(%struct.ReebGraph*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_freeRigArc(%struct.BArc* %arc) #0 !dbg !1728 {
entry:
  %arc.addr = alloca %struct.BArc*, align 8
  store %struct.BArc* %arc, %struct.BArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BArc** %arc.addr, metadata !1731, metadata !DIExpression()), !dbg !1732
  %0 = load %struct.BArc*, %struct.BArc** %arc.addr, align 8, !dbg !1733
  %1 = bitcast %struct.BArc* %0 to %struct.RigArc*, !dbg !1734
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %1, i32 0, i32 9, !dbg !1734
  call void @BLI_freelistN(%struct.ListBase* %edges), !dbg !1735
  ret void, !dbg !1736
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @BLI_freeNode(%struct.BGraph*, %struct.BNode*) #2

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RIG_printArcBones(%struct.RigArc* %arc) #0 !dbg !1737 {
entry:
  %arc.addr = alloca %struct.RigArc*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  store %struct.RigArc* %arc, %struct.RigArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc.addr, metadata !1740, metadata !DIExpression()), !dbg !1741
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !1742, metadata !DIExpression()), !dbg !1757
  %0 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !1758
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %0, i32 0, i32 9, !dbg !1760
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !1761
  %1 = load i8*, i8** %first, align 8, !dbg !1761
  %2 = bitcast i8* %1 to %struct.RigEdge*, !dbg !1758
  store %struct.RigEdge* %2, %struct.RigEdge** %edge, align 8, !dbg !1762
  br label %for.cond, !dbg !1763

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1764
  %tobool = icmp ne %struct.RigEdge* %3, null, !dbg !1766
  br i1 %tobool, label %for.body, label %for.end, !dbg !1766

for.body:                                         ; preds = %for.cond
  %4 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1767
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %4, i32 0, i32 7, !dbg !1770
  %5 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !1770
  %tobool1 = icmp ne %struct.EditBone* %5, null, !dbg !1767
  br i1 %tobool1, label %if.then, label %if.else, !dbg !1771

if.then:                                          ; preds = %for.body
  %6 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1772
  %bone2 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %6, i32 0, i32 7, !dbg !1773
  %7 = load %struct.EditBone*, %struct.EditBone** %bone2, align 8, !dbg !1773
  %name = getelementptr inbounds %struct.EditBone, %struct.EditBone* %7, i32 0, i32 5, !dbg !1774
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !1772
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8* %arraydecay), !dbg !1775
  br label %if.end, !dbg !1775

if.else:                                          ; preds = %for.body
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)), !dbg !1776
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !1777

for.inc:                                          ; preds = %if.end
  %8 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1778
  %next = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %8, i32 0, i32 0, !dbg !1779
  %9 = load %struct.RigEdge*, %struct.RigEdge** %next, align 8, !dbg !1779
  store %struct.RigEdge* %9, %struct.RigEdge** %edge, align 8, !dbg !1780
  br label %for.cond, !dbg !1781, !llvm.loop !1782

for.end:                                          ; preds = %for.cond
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !1784
  ret void, !dbg !1785
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RIG_printArc(%struct.RigGraph* %rg, %struct.RigArc* %arc) #0 !dbg !1786 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc.addr = alloca %struct.RigArc*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !1789, metadata !DIExpression()), !dbg !1790
  store %struct.RigArc* %arc, %struct.RigArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc.addr, metadata !1791, metadata !DIExpression()), !dbg !1792
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !1793, metadata !DIExpression()), !dbg !1794
  %0 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !1795
  %head = getelementptr inbounds %struct.RigArc, %struct.RigArc* %0, i32 0, i32 2, !dbg !1796
  %1 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !1796
  call void @RIG_printNode(%struct.RigNode* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)), !dbg !1797
  %2 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !1798
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %2, i32 0, i32 9, !dbg !1800
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !1801
  %3 = load i8*, i8** %first, align 8, !dbg !1801
  %4 = bitcast i8* %3 to %struct.RigEdge*, !dbg !1798
  store %struct.RigEdge* %4, %struct.RigEdge** %edge, align 8, !dbg !1802
  br label %for.cond, !dbg !1803

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1804
  %tobool = icmp ne %struct.RigEdge* %5, null, !dbg !1806
  br i1 %tobool, label %for.body, label %for.end, !dbg !1806

for.body:                                         ; preds = %for.cond
  %6 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1807
  %tail = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %6, i32 0, i32 3, !dbg !1809
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !1807
  %7 = load float, float* %arrayidx, align 4, !dbg !1807
  %conv = fpext float %7 to double, !dbg !1807
  %8 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1810
  %tail1 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %8, i32 0, i32 3, !dbg !1811
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %tail1, i64 0, i64 1, !dbg !1810
  %9 = load float, float* %arrayidx2, align 4, !dbg !1810
  %conv3 = fpext float %9 to double, !dbg !1810
  %10 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1812
  %tail4 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %10, i32 0, i32 3, !dbg !1813
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %tail4, i64 0, i64 2, !dbg !1812
  %11 = load float, float* %arrayidx5, align 4, !dbg !1812
  %conv6 = fpext float %11 to double, !dbg !1812
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), double %conv, double %conv3, double %conv6), !dbg !1814
  %12 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1815
  %length = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %12, i32 0, i32 4, !dbg !1816
  %13 = load float, float* %length, align 8, !dbg !1816
  %conv7 = fpext float %13 to double, !dbg !1815
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), double %conv7), !dbg !1817
  %14 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1818
  %angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %14, i32 0, i32 5, !dbg !1819
  %15 = load float, float* %angle, align 4, !dbg !1819
  %mul = fmul float %15, 0x404CA5DC20000000, !dbg !1820
  %conv9 = fpext float %mul to double, !dbg !1818
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), double %conv9), !dbg !1821
  %16 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1822
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %16, i32 0, i32 7, !dbg !1824
  %17 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !1824
  %tobool11 = icmp ne %struct.EditBone* %17, null, !dbg !1822
  br i1 %tobool11, label %if.then, label %if.end, !dbg !1825

if.then:                                          ; preds = %for.body
  %18 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1826
  %bone12 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %18, i32 0, i32 7, !dbg !1828
  %19 = load %struct.EditBone*, %struct.EditBone** %bone12, align 8, !dbg !1828
  %name = getelementptr inbounds %struct.EditBone, %struct.EditBone* %19, i32 0, i32 5, !dbg !1829
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !1826
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay), !dbg !1830
  %20 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !1831
  %21 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1832
  %bone14 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %21, i32 0, i32 7, !dbg !1833
  %22 = load %struct.EditBone*, %struct.EditBone** %bone14, align 8, !dbg !1833
  call void @RIG_printLinkedCtrl(%struct.RigGraph* %20, %struct.EditBone* %22, i32 3), !dbg !1834
  br label %if.end, !dbg !1835

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !1836

for.inc:                                          ; preds = %if.end
  %23 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !1837
  %next = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %23, i32 0, i32 0, !dbg !1838
  %24 = load %struct.RigEdge*, %struct.RigEdge** %next, align 8, !dbg !1838
  store %struct.RigEdge* %24, %struct.RigEdge** %edge, align 8, !dbg !1839
  br label %for.cond, !dbg !1840, !llvm.loop !1841

for.end:                                          ; preds = %for.cond
  %25 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !1843
  %symmetry_level = getelementptr inbounds %struct.RigArc, %struct.RigArc* %25, i32 0, i32 6, !dbg !1844
  %26 = load i32, i32* %symmetry_level, align 8, !dbg !1844
  %27 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !1845
  %symmetry_flag = getelementptr inbounds %struct.RigArc, %struct.RigArc* %27, i32 0, i32 8, !dbg !1846
  %28 = load i32, i32* %symmetry_flag, align 8, !dbg !1846
  %29 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !1847
  %symmetry_group = getelementptr inbounds %struct.RigArc, %struct.RigArc* %29, i32 0, i32 7, !dbg !1848
  %30 = load i32, i32* %symmetry_group, align 4, !dbg !1848
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i32 %26, i32 %28, i32 %30), !dbg !1849
  %31 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !1850
  %tail16 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %31, i32 0, i32 3, !dbg !1851
  %32 = load %struct.RigNode*, %struct.RigNode** %tail16, align 8, !dbg !1851
  call void @RIG_printNode(%struct.RigNode* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)), !dbg !1852
  ret void, !dbg !1853
}

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_printNode(%struct.RigNode* %node, i8* %name) #0 !dbg !1854 {
entry:
  %node.addr = alloca %struct.RigNode*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.RigNode* %node, %struct.RigNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %node.addr, metadata !1859, metadata !DIExpression()), !dbg !1860
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !1861, metadata !DIExpression()), !dbg !1862
  %0 = load i8*, i8** %name.addr, align 8, !dbg !1863
  %1 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1864
  %2 = bitcast %struct.RigNode* %1 to i8*, !dbg !1865
  %3 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1866
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %3, i32 0, i32 4, !dbg !1867
  %4 = load i32, i32* %degree, align 8, !dbg !1867
  %5 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1868
  %p = getelementptr inbounds %struct.RigNode, %struct.RigNode* %5, i32 0, i32 2, !dbg !1869
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !1868
  %6 = load float, float* %arrayidx, align 8, !dbg !1868
  %conv = fpext float %6 to double, !dbg !1868
  %7 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1870
  %p1 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %7, i32 0, i32 2, !dbg !1871
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 1, !dbg !1870
  %8 = load float, float* %arrayidx2, align 4, !dbg !1870
  %conv3 = fpext float %8 to double, !dbg !1870
  %9 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1872
  %p4 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %9, i32 0, i32 2, !dbg !1873
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %p4, i64 0, i64 2, !dbg !1872
  %10 = load float, float* %arrayidx5, align 8, !dbg !1872
  %conv6 = fpext float %10 to double, !dbg !1872
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0), i8* %0, i8* %2, i32 %4, double %conv, double %conv3, double %conv6), !dbg !1874
  %11 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1875
  %symmetry_flag = getelementptr inbounds %struct.RigNode, %struct.RigNode* %11, i32 0, i32 8, !dbg !1877
  %12 = load i32, i32* %symmetry_flag, align 8, !dbg !1877
  %and = and i32 %12, 1, !dbg !1878
  %tobool = icmp ne i32 %and, 0, !dbg !1878
  br i1 %tobool, label %if.then, label %if.end18, !dbg !1879

if.then:                                          ; preds = %entry
  %13 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1880
  %symmetry_flag7 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %13, i32 0, i32 8, !dbg !1883
  %14 = load i32, i32* %symmetry_flag7, align 8, !dbg !1883
  %and8 = and i32 %14, 4, !dbg !1884
  %tobool9 = icmp ne i32 %and8, 0, !dbg !1884
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !1885

if.then10:                                        ; preds = %if.then
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0)), !dbg !1886
  br label %if.end17, !dbg !1886

if.else:                                          ; preds = %if.then
  %15 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1887
  %symmetry_flag12 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %15, i32 0, i32 8, !dbg !1889
  %16 = load i32, i32* %symmetry_flag12, align 8, !dbg !1889
  %and13 = and i32 %16, 8, !dbg !1890
  %tobool14 = icmp ne i32 %and13, 0, !dbg !1890
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !1891

if.then15:                                        ; preds = %if.else
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0)), !dbg !1892
  br label %if.end, !dbg !1892

if.end:                                           ; preds = %if.then15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then10
  %17 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !1893
  %symmetry_axis = getelementptr inbounds %struct.RigNode, %struct.RigNode* %17, i32 0, i32 9, !dbg !1894
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %symmetry_axis, i64 0, i64 0, !dbg !1893
  call void @print_v3(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0), float* %arraydecay), !dbg !1895
  br label %if.end18, !dbg !1896

if.end18:                                         ; preds = %if.end17, %entry
  ret void, !dbg !1897
}

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_printLinkedCtrl(%struct.RigGraph* %rg, %struct.EditBone* %bone, i32 %tabs) #0 !dbg !1898 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %bone.addr = alloca %struct.EditBone*, align 8
  %tabs.addr = alloca i32, align 4
  %ctrl = alloca %struct.RigControl*, align 8
  %indent = alloca [64 x i8], align 16
  %s = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !1901, metadata !DIExpression()), !dbg !1902
  store %struct.EditBone* %bone, %struct.EditBone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone.addr, metadata !1903, metadata !DIExpression()), !dbg !1904
  store i32 %tabs, i32* %tabs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tabs.addr, metadata !1905, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl, metadata !1907, metadata !DIExpression()), !dbg !1926
  call void @llvm.dbg.declare(metadata [64 x i8]* %indent, metadata !1927, metadata !DIExpression()), !dbg !1928
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1929, metadata !DIExpression()), !dbg !1930
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %indent, i64 0, i64 0, !dbg !1931
  store i8* %arraydecay, i8** %s, align 8, !dbg !1930
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1932, metadata !DIExpression()), !dbg !1933
  store i32 0, i32* %i, align 4, !dbg !1934
  br label %for.cond, !dbg !1936

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1937
  %1 = load i32, i32* %tabs.addr, align 4, !dbg !1939
  %cmp = icmp slt i32 %0, %1, !dbg !1940
  br i1 %cmp, label %for.body, label %for.end, !dbg !1941

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %s, align 8, !dbg !1942
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !1942
  store i8 9, i8* %arrayidx, align 1, !dbg !1944
  %3 = load i8*, i8** %s, align 8, !dbg !1945
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !1945
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !1945
  br label %for.inc, !dbg !1946

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !1947
  %inc = add nsw i32 %4, 1, !dbg !1947
  store i32 %inc, i32* %i, align 4, !dbg !1947
  br label %for.cond, !dbg !1948, !llvm.loop !1949

for.end:                                          ; preds = %for.cond
  %5 = load i8*, i8** %s, align 8, !dbg !1951
  %arrayidx1 = getelementptr inbounds i8, i8* %5, i64 0, !dbg !1951
  store i8 0, i8* %arrayidx1, align 1, !dbg !1952
  %6 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !1953
  %controls = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %6, i32 0, i32 8, !dbg !1955
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls, i32 0, i32 0, !dbg !1956
  %7 = load i8*, i8** %first, align 8, !dbg !1956
  %8 = bitcast i8* %7 to %struct.RigControl*, !dbg !1953
  store %struct.RigControl* %8, %struct.RigControl** %ctrl, align 8, !dbg !1957
  br label %for.cond2, !dbg !1958

for.cond2:                                        ; preds = %for.inc7, %for.end
  %9 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !1959
  %tobool = icmp ne %struct.RigControl* %9, null, !dbg !1961
  br i1 %tobool, label %for.body3, label %for.end8, !dbg !1961

for.body3:                                        ; preds = %for.cond2
  %10 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !1962
  %link = getelementptr inbounds %struct.RigControl, %struct.RigControl* %10, i32 0, i32 5, !dbg !1965
  %11 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !1965
  %12 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !1966
  %cmp4 = icmp eq %struct.EditBone* %11, %12, !dbg !1967
  br i1 %cmp4, label %if.then, label %if.end, !dbg !1968

if.then:                                          ; preds = %for.body3
  %13 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !1969
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %indent, i64 0, i64 0, !dbg !1971
  call void @RIG_printCtrl(%struct.RigControl* %13, i8* %arraydecay5), !dbg !1972
  %14 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !1973
  %15 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !1974
  %bone6 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %15, i32 0, i32 4, !dbg !1975
  %16 = load %struct.EditBone*, %struct.EditBone** %bone6, align 8, !dbg !1975
  %17 = load i32, i32* %tabs.addr, align 4, !dbg !1976
  %add = add nsw i32 %17, 1, !dbg !1977
  call void @RIG_printLinkedCtrl(%struct.RigGraph* %14, %struct.EditBone* %16, i32 %add), !dbg !1978
  br label %if.end, !dbg !1979

if.end:                                           ; preds = %if.then, %for.body3
  br label %for.inc7, !dbg !1980

for.inc7:                                         ; preds = %if.end
  %18 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !1981
  %next = getelementptr inbounds %struct.RigControl, %struct.RigControl* %18, i32 0, i32 0, !dbg !1982
  %19 = load %struct.RigControl*, %struct.RigControl** %next, align 8, !dbg !1982
  store %struct.RigControl* %19, %struct.RigControl** %ctrl, align 8, !dbg !1983
  br label %for.cond2, !dbg !1984, !llvm.loop !1985

for.end8:                                         ; preds = %for.cond2
  ret void, !dbg !1987
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RIG_printGraph(%struct.RigGraph* %rg) #0 !dbg !1988 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc = alloca %struct.RigArc*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !1991, metadata !DIExpression()), !dbg !1992
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !1993, metadata !DIExpression()), !dbg !1994
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0)), !dbg !1995
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !1996
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 0, !dbg !1998
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs, i32 0, i32 0, !dbg !1999
  %1 = load i8*, i8** %first, align 8, !dbg !1999
  %2 = bitcast i8* %1 to %struct.RigArc*, !dbg !1996
  store %struct.RigArc* %2, %struct.RigArc** %arc, align 8, !dbg !2000
  br label %for.cond, !dbg !2001

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2002
  %tobool = icmp ne %struct.RigArc* %3, null, !dbg !2004
  br i1 %tobool, label %for.body, label %for.end, !dbg !2004

for.body:                                         ; preds = %for.cond
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2005
  %5 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2007
  call void @RIG_printArc(%struct.RigGraph* %4, %struct.RigArc* %5), !dbg !2008
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !2009
  br label %for.inc, !dbg !2010

for.inc:                                          ; preds = %for.body
  %6 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2011
  %next = getelementptr inbounds %struct.RigArc, %struct.RigArc* %6, i32 0, i32 0, !dbg !2012
  %7 = load i8*, i8** %next, align 8, !dbg !2012
  %8 = bitcast i8* %7 to %struct.RigArc*, !dbg !2011
  store %struct.RigArc* %8, %struct.RigArc** %arc, align 8, !dbg !2013
  br label %for.cond, !dbg !2014, !llvm.loop !2015

for.end:                                          ; preds = %for.cond
  %9 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2017
  %head = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %9, i32 0, i32 10, !dbg !2019
  %10 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !2019
  %tobool2 = icmp ne %struct.RigNode* %10, null, !dbg !2017
  br i1 %tobool2, label %if.then, label %if.else, !dbg !2020

if.then:                                          ; preds = %for.end
  %11 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2021
  %head3 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %11, i32 0, i32 10, !dbg !2023
  %12 = load %struct.RigNode*, %struct.RigNode** %head3, align 8, !dbg !2023
  call void @RIG_printNode(%struct.RigNode* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)), !dbg !2024
  br label %if.end, !dbg !2025

if.else:                                          ; preds = %for.end
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)), !dbg !2026
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2028
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RigGraph* @RIG_graphFromArmature(%struct.bContext* %C, %struct.Object* %ob, %struct.bArmature* %arm) #0 !dbg !2029 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %arm.addr = alloca %struct.bArmature*, align 8
  %obedit = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ebone = alloca %struct.EditBone*, align 8
  %rg = alloca %struct.RigGraph*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2036, metadata !DIExpression()), !dbg !2037
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2038, metadata !DIExpression()), !dbg !2039
  store %struct.bArmature* %arm, %struct.bArmature** %arm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm.addr, metadata !2040, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !2042, metadata !DIExpression()), !dbg !2043
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2044
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !2045
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !2043
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !2046, metadata !DIExpression()), !dbg !2049
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2050
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !2051
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !2049
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone, metadata !2052, metadata !DIExpression()), !dbg !2053
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg, metadata !2054, metadata !DIExpression()), !dbg !2055
  %call2 = call %struct.RigGraph* @newRigGraph(), !dbg !2056
  store %struct.RigGraph* %call2, %struct.RigGraph** %rg, align 8, !dbg !2057
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !2058
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2060
  %cmp = icmp eq %struct.Object* %2, %3, !dbg !2061
  br i1 %cmp, label %if.then, label %if.else, !dbg !2062

if.then:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !2063
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !2065
  %5 = load i8*, i8** %data, align 8, !dbg !2065
  %6 = bitcast i8* %5 to %struct.bArmature*, !dbg !2066
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %6, i32 0, i32 4, !dbg !2067
  %7 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !2067
  %8 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2068
  %editbones = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %8, i32 0, i32 9, !dbg !2069
  store %struct.ListBase* %7, %struct.ListBase** %editbones, align 8, !dbg !2070
  br label %if.end, !dbg !2071

if.else:                                          ; preds = %entry
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2072
  %call3 = call i8* %9(i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)), !dbg !2072
  %10 = bitcast i8* %call3 to %struct.ListBase*, !dbg !2072
  %11 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2074
  %editbones4 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %11, i32 0, i32 9, !dbg !2075
  store %struct.ListBase* %10, %struct.ListBase** %editbones4, align 8, !dbg !2076
  %12 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2077
  %editbones5 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %12, i32 0, i32 9, !dbg !2078
  %13 = load %struct.ListBase*, %struct.ListBase** %editbones5, align 8, !dbg !2078
  %14 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2079
  %bonebase = getelementptr inbounds %struct.bArmature, %struct.bArmature* %14, i32 0, i32 2, !dbg !2080
  %call6 = call %struct.EditBone* @make_boneList(%struct.ListBase* %13, %struct.ListBase* %bonebase, %struct.EditBone* null, %struct.Bone* null), !dbg !2081
  %15 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2082
  %flag = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %15, i32 0, i32 7, !dbg !2083
  %16 = load i32, i32* %flag, align 8, !dbg !2084
  %or = or i32 %16, 1, !dbg !2084
  store i32 %or, i32* %flag, align 8, !dbg !2084
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2085
  %18 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2086
  %ob7 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %18, i32 0, i32 16, !dbg !2087
  store %struct.Object* %17, %struct.Object** %ob7, align 8, !dbg !2088
  %19 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2089
  %editbones8 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %19, i32 0, i32 9, !dbg !2091
  %20 = load %struct.ListBase*, %struct.ListBase** %editbones8, align 8, !dbg !2091
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %20, i32 0, i32 0, !dbg !2092
  %21 = load i8*, i8** %first, align 8, !dbg !2092
  %22 = bitcast i8* %21 to %struct.EditBone*, !dbg !2089
  store %struct.EditBone* %22, %struct.EditBone** %ebone, align 8, !dbg !2093
  br label %for.cond, !dbg !2094

for.cond:                                         ; preds = %for.inc, %if.end
  %23 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !2095
  %tobool = icmp ne %struct.EditBone* %23, null, !dbg !2097
  br i1 %tobool, label %for.body, label %for.end, !dbg !2097

for.body:                                         ; preds = %for.cond
  %24 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !2098
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %24, i32 0, i32 3, !dbg !2101
  %25 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !2101
  %cmp9 = icmp eq %struct.EditBone* %25, null, !dbg !2102
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2103

if.then10:                                        ; preds = %for.body
  %26 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2104
  %27 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2106
  %editbones11 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %27, i32 0, i32 9, !dbg !2107
  %28 = load %struct.ListBase*, %struct.ListBase** %editbones11, align 8, !dbg !2107
  %29 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !2108
  call void @RIG_arcFromBoneChain(%struct.RigGraph* %26, %struct.ListBase* %28, %struct.EditBone* %29, %struct.RigNode* null, i8 zeroext 0), !dbg !2109
  br label %if.end12, !dbg !2110

if.end12:                                         ; preds = %if.then10, %for.body
  br label %for.inc, !dbg !2111

for.inc:                                          ; preds = %if.end12
  %30 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !2112
  %next = getelementptr inbounds %struct.EditBone, %struct.EditBone* %30, i32 0, i32 0, !dbg !2113
  %31 = load %struct.EditBone*, %struct.EditBone** %next, align 8, !dbg !2113
  store %struct.EditBone* %31, %struct.EditBone** %ebone, align 8, !dbg !2114
  br label %for.cond, !dbg !2115, !llvm.loop !2116

for.end:                                          ; preds = %for.cond
  %32 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2118
  %33 = bitcast %struct.RigGraph* %32 to %struct.BGraph*, !dbg !2119
  call void @BLI_removeDoubleNodes(%struct.BGraph* %33, float 0x3F50624DE0000000), !dbg !2120
  %34 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2121
  call void @RIG_removeNormalNodes(%struct.RigGraph* %34), !dbg !2122
  %35 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2123
  call void @RIG_removeUneededOffsets(%struct.RigGraph* %35), !dbg !2124
  %36 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2125
  %37 = bitcast %struct.RigGraph* %36 to %struct.BGraph*, !dbg !2126
  call void @BLI_buildAdjacencyList(%struct.BGraph* %37), !dbg !2127
  %38 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2128
  call void @RIG_findHead(%struct.RigGraph* %38), !dbg !2129
  %39 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2130
  %40 = bitcast %struct.RigGraph* %39 to %struct.BGraph*, !dbg !2131
  %41 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2132
  %head = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %41, i32 0, i32 10, !dbg !2133
  %42 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !2133
  %43 = bitcast %struct.RigNode* %42 to %struct.BNode*, !dbg !2134
  %44 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2135
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 20, !dbg !2136
  %45 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !2136
  %skgen_symmetry_limit = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %45, i32 0, i32 32, !dbg !2137
  %46 = load float, float* %skgen_symmetry_limit, align 8, !dbg !2137
  call void @BLI_markdownSymmetry(%struct.BGraph* %40, %struct.BNode* %43, float %46), !dbg !2138
  %47 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2139
  call void @RIG_reconnectControlBones(%struct.RigGraph* %47), !dbg !2140
  %48 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2141
  %49 = bitcast %struct.RigGraph* %48 to %struct.BGraph*, !dbg !2143
  %call13 = call zeroext i8 @BLI_isGraphCyclic(%struct.BGraph* %49), !dbg !2144
  %tobool14 = icmp ne i8 %call13, 0, !dbg !2144
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !2145

if.then15:                                        ; preds = %for.end
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)), !dbg !2146
  br label %if.end17, !dbg !2148

if.end17:                                         ; preds = %if.then15, %for.end
  %50 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2149
  ret %struct.RigGraph* %50, !dbg !2150
}

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigGraph* @newRigGraph() #0 !dbg !2151 {
entry:
  %rg = alloca %struct.RigGraph*, align 8
  %totthread = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg, metadata !2154, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !2156, metadata !DIExpression()), !dbg !2157
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2158
  %call = call i8* %0(i64 160, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0)), !dbg !2158
  %1 = bitcast i8* %call to %struct.RigGraph*, !dbg !2158
  store %struct.RigGraph* %1, %struct.RigGraph** %rg, align 8, !dbg !2159
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2160
  %head = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %2, i32 0, i32 10, !dbg !2161
  store %struct.RigNode* null, %struct.RigNode** %head, align 8, !dbg !2162
  %call1 = call %struct.GHash* @BLI_ghash_str_new(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)), !dbg !2163
  %3 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2164
  %bones_map = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %3, i32 0, i32 14, !dbg !2165
  store %struct.GHash* %call1, %struct.GHash** %bones_map, align 8, !dbg !2166
  %call2 = call %struct.GHash* @BLI_ghash_str_new(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i64 0, i64 0)), !dbg !2167
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2168
  %controls_map = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %4, i32 0, i32 15, !dbg !2169
  store %struct.GHash* %call2, %struct.GHash** %controls_map, align 8, !dbg !2170
  %5 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2171
  %free_arc = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %5, i32 0, i32 3, !dbg !2172
  store void (%struct.BArc*)* @RIG_freeRigArc, void (%struct.BArc*)** %free_arc, align 8, !dbg !2173
  %6 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2174
  %free_node = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %6, i32 0, i32 4, !dbg !2175
  store void (%struct.BNode*)* null, void (%struct.BNode*)** %free_node, align 8, !dbg !2176
  store i32 0, i32* %totthread, align 4, !dbg !2177
  %7 = load i32, i32* %totthread, align 4, !dbg !2178
  %call3 = call %struct.TaskScheduler* @BLI_task_scheduler_create(i32 %7), !dbg !2179
  %8 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2180
  %task_scheduler = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %8, i32 0, i32 12, !dbg !2181
  store %struct.TaskScheduler* %call3, %struct.TaskScheduler** %task_scheduler, align 8, !dbg !2182
  %9 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2183
  %task_scheduler4 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %9, i32 0, i32 12, !dbg !2184
  %10 = load %struct.TaskScheduler*, %struct.TaskScheduler** %task_scheduler4, align 8, !dbg !2184
  %call5 = call %struct.TaskPool* @BLI_task_pool_create(%struct.TaskScheduler* %10, i8* null), !dbg !2185
  %11 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2186
  %task_pool = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %11, i32 0, i32 13, !dbg !2187
  store %struct.TaskPool* %call5, %struct.TaskPool** %task_pool, align 8, !dbg !2188
  %12 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !2189
  ret %struct.RigGraph* %12, !dbg !2190
}

declare dso_local %struct.EditBone* @make_boneList(%struct.ListBase*, %struct.ListBase*, %struct.EditBone*, %struct.Bone*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_arcFromBoneChain(%struct.RigGraph* %rg, %struct.ListBase* %list, %struct.EditBone* %root_bone, %struct.RigNode* %starting_node, i8 zeroext %selected) #0 !dbg !2191 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %root_bone.addr = alloca %struct.EditBone*, align 8
  %starting_node.addr = alloca %struct.RigNode*, align 8
  %selected.addr = alloca i8, align 1
  %bone = alloca %struct.EditBone*, align 8
  %last_bone = alloca %struct.EditBone*, align 8
  %arc = alloca %struct.RigArc*, align 8
  %contain_head = alloca i32, align 4
  %nb_children = alloca i32, align 4
  %end_node = alloca %struct.RigNode*, align 8
  %i = alloca i32, align 4
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !2194, metadata !DIExpression()), !dbg !2195
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !2196, metadata !DIExpression()), !dbg !2197
  store %struct.EditBone* %root_bone, %struct.EditBone** %root_bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %root_bone.addr, metadata !2198, metadata !DIExpression()), !dbg !2199
  store %struct.RigNode* %starting_node, %struct.RigNode** %starting_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %starting_node.addr, metadata !2200, metadata !DIExpression()), !dbg !2201
  store i8 %selected, i8* %selected.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %selected.addr, metadata !2202, metadata !DIExpression()), !dbg !2203
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone, metadata !2204, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.declare(metadata %struct.EditBone** %last_bone, metadata !2206, metadata !DIExpression()), !dbg !2207
  %0 = load %struct.EditBone*, %struct.EditBone** %root_bone.addr, align 8, !dbg !2208
  store %struct.EditBone* %0, %struct.EditBone** %last_bone, align 8, !dbg !2207
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !2209, metadata !DIExpression()), !dbg !2210
  store %struct.RigArc* null, %struct.RigArc** %arc, align 8, !dbg !2210
  call void @llvm.dbg.declare(metadata i32* %contain_head, metadata !2211, metadata !DIExpression()), !dbg !2212
  store i32 0, i32* %contain_head, align 4, !dbg !2212
  %1 = load %struct.EditBone*, %struct.EditBone** %root_bone.addr, align 8, !dbg !2213
  store %struct.EditBone* %1, %struct.EditBone** %bone, align 8, !dbg !2215
  br label %for.cond, !dbg !2216

for.cond:                                         ; preds = %for.inc64, %entry
  %2 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2217
  %tobool = icmp ne %struct.EditBone* %2, null, !dbg !2219
  br i1 %tobool, label %for.body, label %for.end66, !dbg !2219

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %nb_children, metadata !2220, metadata !DIExpression()), !dbg !2222
  %3 = load i8, i8* %selected.addr, align 1, !dbg !2223
  %conv = zext i8 %3 to i32, !dbg !2223
  %cmp = icmp eq i32 %conv, 0, !dbg !2225
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2226

lor.lhs.false:                                    ; preds = %for.body
  %4 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2227
  %flag = getelementptr inbounds %struct.EditBone, %struct.EditBone* %4, i32 0, i32 9, !dbg !2228
  %5 = load i32, i32* %flag, align 4, !dbg !2228
  %and = and i32 %5, 1, !dbg !2229
  %tobool2 = icmp ne i32 %and, 0, !dbg !2229
  br i1 %tobool2, label %if.then, label %if.end42, !dbg !2230

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %6 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2231
  %flag3 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %6, i32 0, i32 9, !dbg !2234
  %7 = load i32, i32* %flag3, align 4, !dbg !2234
  %and4 = and i32 %7, 4096, !dbg !2235
  %cmp5 = icmp eq i32 %and4, 0, !dbg !2236
  br i1 %cmp5, label %if.then7, label %if.else34, !dbg !2237

if.then7:                                         ; preds = %if.then
  %8 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2238
  %bones_map = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %8, i32 0, i32 14, !dbg !2240
  %9 = load %struct.GHash*, %struct.GHash** %bones_map, align 8, !dbg !2240
  %10 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2241
  %name = getelementptr inbounds %struct.EditBone, %struct.EditBone* %10, i32 0, i32 5, !dbg !2242
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !2241
  %11 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2243
  %12 = bitcast %struct.EditBone* %11 to i8*, !dbg !2243
  call void @BLI_ghash_insert(%struct.GHash* %9, i8* %arraydecay, i8* %12), !dbg !2244
  %13 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2245
  %cmp8 = icmp eq %struct.RigArc* %13, null, !dbg !2247
  br i1 %cmp8, label %if.then10, label %if.end16, !dbg !2248

if.then10:                                        ; preds = %if.then7
  %14 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2249
  %call = call %struct.RigArc* @newRigArc(%struct.RigGraph* %14), !dbg !2251
  store %struct.RigArc* %call, %struct.RigArc** %arc, align 8, !dbg !2252
  %15 = load %struct.RigNode*, %struct.RigNode** %starting_node.addr, align 8, !dbg !2253
  %cmp11 = icmp eq %struct.RigNode* %15, null, !dbg !2255
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !2256

if.then13:                                        ; preds = %if.then10
  %16 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2257
  %17 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2259
  %18 = load %struct.EditBone*, %struct.EditBone** %root_bone.addr, align 8, !dbg !2260
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %18, i32 0, i32 7, !dbg !2261
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !2260
  %call15 = call %struct.RigNode* @newRigNodeHead(%struct.RigGraph* %16, %struct.RigArc* %17, float* %arraydecay14), !dbg !2262
  store %struct.RigNode* %call15, %struct.RigNode** %starting_node.addr, align 8, !dbg !2263
  br label %if.end, !dbg !2264

if.else:                                          ; preds = %if.then10
  %19 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2265
  %20 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2267
  %21 = load %struct.RigNode*, %struct.RigNode** %starting_node.addr, align 8, !dbg !2268
  call void @addRigNodeHead(%struct.RigGraph* %19, %struct.RigArc* %20, %struct.RigNode* %21), !dbg !2269
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  br label %if.end16, !dbg !2270

if.end16:                                         ; preds = %if.end, %if.then7
  %22 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2271
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %22, i32 0, i32 3, !dbg !2273
  %23 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !2273
  %tobool17 = icmp ne %struct.EditBone* %23, null, !dbg !2271
  br i1 %tobool17, label %land.lhs.true, label %if.end25, !dbg !2274

land.lhs.true:                                    ; preds = %if.end16
  %24 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2275
  %flag18 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %24, i32 0, i32 9, !dbg !2276
  %25 = load i32, i32* %flag18, align 4, !dbg !2276
  %and19 = and i32 %25, 16, !dbg !2277
  %cmp20 = icmp eq i32 %and19, 0, !dbg !2278
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !2279

if.then22:                                        ; preds = %land.lhs.true
  %26 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2280
  %27 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2282
  %head23 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %27, i32 0, i32 7, !dbg !2283
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %head23, i64 0, i64 0, !dbg !2282
  call void @RIG_addEdgeToArc(%struct.RigArc* %26, float* %arraydecay24, %struct.EditBone* null), !dbg !2284
  br label %if.end25, !dbg !2285

if.end25:                                         ; preds = %if.then22, %land.lhs.true, %if.end16
  %28 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2286
  %29 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2287
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %29, i32 0, i32 8, !dbg !2288
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !2287
  %30 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2289
  call void @RIG_addEdgeToArc(%struct.RigArc* %28, float* %arraydecay26, %struct.EditBone* %30), !dbg !2290
  %31 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2291
  store %struct.EditBone* %31, %struct.EditBone** %last_bone, align 8, !dbg !2292
  %32 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2293
  %name27 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %32, i32 0, i32 5, !dbg !2295
  %arraydecay28 = getelementptr inbounds [64 x i8], [64 x i8]* %name27, i64 0, i64 0, !dbg !2293
  %call29 = call i32 @strcmp(i8* %arraydecay28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2296
  %cmp30 = icmp eq i32 %call29, 0, !dbg !2297
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !2298

if.then32:                                        ; preds = %if.end25
  store i32 1, i32* %contain_head, align 4, !dbg !2299
  br label %if.end33, !dbg !2301

if.end33:                                         ; preds = %if.then32, %if.end25
  br label %if.end41, !dbg !2302

if.else34:                                        ; preds = %if.then
  %33 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2303
  %flag35 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %33, i32 0, i32 9, !dbg !2305
  %34 = load i32, i32* %flag35, align 4, !dbg !2305
  %and36 = and i32 %34, 524288, !dbg !2306
  %cmp37 = icmp eq i32 %and36, 0, !dbg !2307
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !2308

if.then39:                                        ; preds = %if.else34
  %35 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2309
  %36 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2311
  call void @RIG_addControlBone(%struct.RigGraph* %35, %struct.EditBone* %36), !dbg !2312
  br label %if.end40, !dbg !2313

if.end40:                                         ; preds = %if.then39, %if.else34
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end33
  br label %if.end42, !dbg !2314

if.end42:                                         ; preds = %if.end41, %lor.lhs.false
  %37 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !2315
  %38 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2316
  %call43 = call i32 @countEditBoneChildren(%struct.ListBase* %37, %struct.EditBone* %38), !dbg !2317
  store i32 %call43, i32* %nb_children, align 4, !dbg !2318
  %39 = load i32, i32* %nb_children, align 4, !dbg !2319
  %cmp44 = icmp sgt i32 %39, 1, !dbg !2321
  br i1 %cmp44, label %if.then46, label %if.end63, !dbg !2322

if.then46:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata %struct.RigNode** %end_node, metadata !2323, metadata !DIExpression()), !dbg !2325
  store %struct.RigNode* null, %struct.RigNode** %end_node, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2326, metadata !DIExpression()), !dbg !2327
  %40 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2328
  %cmp47 = icmp ne %struct.RigArc* %40, null, !dbg !2330
  br i1 %cmp47, label %if.then49, label %if.else53, !dbg !2331

if.then49:                                        ; preds = %if.then46
  %41 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2332
  %42 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2334
  %43 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2335
  %tail50 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %43, i32 0, i32 8, !dbg !2336
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %tail50, i64 0, i64 0, !dbg !2335
  %call52 = call %struct.RigNode* @newRigNodeTail(%struct.RigGraph* %41, %struct.RigArc* %42, float* %arraydecay51), !dbg !2337
  store %struct.RigNode* %call52, %struct.RigNode** %end_node, align 8, !dbg !2338
  br label %if.end57, !dbg !2339

if.else53:                                        ; preds = %if.then46
  %44 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2340
  %45 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2342
  %tail54 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %45, i32 0, i32 8, !dbg !2343
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %tail54, i64 0, i64 0, !dbg !2342
  %call56 = call %struct.RigNode* @newRigNode(%struct.RigGraph* %44, float* %arraydecay55), !dbg !2344
  store %struct.RigNode* %call56, %struct.RigNode** %end_node, align 8, !dbg !2345
  br label %if.end57

if.end57:                                         ; preds = %if.else53, %if.then49
  store i32 0, i32* %i, align 4, !dbg !2346
  br label %for.cond58, !dbg !2348

for.cond58:                                       ; preds = %for.inc, %if.end57
  %46 = load i32, i32* %i, align 4, !dbg !2349
  %47 = load i32, i32* %nb_children, align 4, !dbg !2351
  %cmp59 = icmp slt i32 %46, %47, !dbg !2352
  br i1 %cmp59, label %for.body61, label %for.end, !dbg !2353

for.body61:                                       ; preds = %for.cond58
  %48 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !2354
  %49 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2356
  %50 = load i32, i32* %i, align 4, !dbg !2357
  %call62 = call %struct.EditBone* @nextEditBoneChild(%struct.ListBase* %48, %struct.EditBone* %49, i32 %50), !dbg !2358
  store %struct.EditBone* %call62, %struct.EditBone** %root_bone.addr, align 8, !dbg !2359
  %51 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2360
  %52 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !2361
  %53 = load %struct.EditBone*, %struct.EditBone** %root_bone.addr, align 8, !dbg !2362
  %54 = load %struct.RigNode*, %struct.RigNode** %end_node, align 8, !dbg !2363
  %55 = load i8, i8* %selected.addr, align 1, !dbg !2364
  call void @RIG_arcFromBoneChain(%struct.RigGraph* %51, %struct.ListBase* %52, %struct.EditBone* %53, %struct.RigNode* %54, i8 zeroext %55), !dbg !2365
  br label %for.inc, !dbg !2366

for.inc:                                          ; preds = %for.body61
  %56 = load i32, i32* %i, align 4, !dbg !2367
  %inc = add nsw i32 %56, 1, !dbg !2367
  store i32 %inc, i32* %i, align 4, !dbg !2367
  br label %for.cond58, !dbg !2368, !llvm.loop !2369

for.end:                                          ; preds = %for.cond58
  br label %for.end66, !dbg !2371

if.end63:                                         ; preds = %if.end42
  br label %for.inc64, !dbg !2372

for.inc64:                                        ; preds = %if.end63
  %57 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !2373
  %58 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2374
  %call65 = call %struct.EditBone* @nextEditBoneChild(%struct.ListBase* %57, %struct.EditBone* %58, i32 0), !dbg !2375
  store %struct.EditBone* %call65, %struct.EditBone** %bone, align 8, !dbg !2376
  br label %for.cond, !dbg !2377, !llvm.loop !2378

for.end66:                                        ; preds = %for.end, %for.cond
  %59 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2380
  %cmp67 = icmp ne %struct.RigArc* %59, null, !dbg !2382
  br i1 %cmp67, label %land.lhs.true69, label %if.end76, !dbg !2383

land.lhs.true69:                                  ; preds = %for.end66
  %60 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2384
  %cmp70 = icmp eq %struct.EditBone* %60, null, !dbg !2385
  br i1 %cmp70, label %if.then72, label %if.end76, !dbg !2386

if.then72:                                        ; preds = %land.lhs.true69
  %61 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2387
  %62 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2389
  %63 = load %struct.EditBone*, %struct.EditBone** %last_bone, align 8, !dbg !2390
  %tail73 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %63, i32 0, i32 8, !dbg !2391
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %tail73, i64 0, i64 0, !dbg !2390
  %call75 = call %struct.RigNode* @newRigNodeTail(%struct.RigGraph* %61, %struct.RigArc* %62, float* %arraydecay74), !dbg !2392
  br label %if.end76, !dbg !2393

if.end76:                                         ; preds = %if.then72, %land.lhs.true69, %for.end66
  %64 = load i32, i32* %contain_head, align 4, !dbg !2394
  %tobool77 = icmp ne i32 %64, 0, !dbg !2394
  br i1 %tobool77, label %if.then78, label %if.end81, !dbg !2396

if.then78:                                        ; preds = %if.end76
  %65 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2397
  %tail79 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %65, i32 0, i32 3, !dbg !2399
  %66 = load %struct.RigNode*, %struct.RigNode** %tail79, align 8, !dbg !2399
  %67 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2400
  %head80 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %67, i32 0, i32 10, !dbg !2401
  store %struct.RigNode* %66, %struct.RigNode** %head80, align 8, !dbg !2402
  br label %if.end81, !dbg !2403

if.end81:                                         ; preds = %if.then78, %if.end76
  ret void, !dbg !2404
}

declare dso_local void @BLI_removeDoubleNodes(%struct.BGraph*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_removeNormalNodes(%struct.RigGraph* %rg) #0 !dbg !2405 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %node = alloca %struct.RigNode*, align 8
  %next_node = alloca %struct.RigNode*, align 8
  %arc = alloca %struct.RigArc*, align 8
  %joined_arc1 = alloca %struct.RigArc*, align 8
  %joined_arc2 = alloca %struct.RigArc*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !2406, metadata !DIExpression()), !dbg !2407
  call void @llvm.dbg.declare(metadata %struct.RigNode** %node, metadata !2408, metadata !DIExpression()), !dbg !2409
  call void @llvm.dbg.declare(metadata %struct.RigNode** %next_node, metadata !2410, metadata !DIExpression()), !dbg !2411
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2412
  %nodes = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 1, !dbg !2414
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !2415
  %1 = load i8*, i8** %first, align 8, !dbg !2415
  %2 = bitcast i8* %1 to %struct.RigNode*, !dbg !2412
  store %struct.RigNode* %2, %struct.RigNode** %node, align 8, !dbg !2416
  br label %for.cond, !dbg !2417

for.cond:                                         ; preds = %for.inc13, %entry
  %3 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !2418
  %tobool = icmp ne %struct.RigNode* %3, null, !dbg !2420
  br i1 %tobool, label %for.body, label %for.end14, !dbg !2420

for.body:                                         ; preds = %for.cond
  %4 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !2421
  %next = getelementptr inbounds %struct.RigNode, %struct.RigNode* %4, i32 0, i32 0, !dbg !2423
  %5 = load i8*, i8** %next, align 8, !dbg !2423
  %6 = bitcast i8* %5 to %struct.RigNode*, !dbg !2421
  store %struct.RigNode* %6, %struct.RigNode** %next_node, align 8, !dbg !2424
  %7 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !2425
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %7, i32 0, i32 4, !dbg !2427
  %8 = load i32, i32* %degree, align 8, !dbg !2427
  %cmp = icmp eq i32 %8, 2, !dbg !2428
  br i1 %cmp, label %if.then, label %if.end12, !dbg !2429

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !2430, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.declare(metadata %struct.RigArc** %joined_arc1, metadata !2433, metadata !DIExpression()), !dbg !2434
  store %struct.RigArc* null, %struct.RigArc** %joined_arc1, align 8, !dbg !2434
  call void @llvm.dbg.declare(metadata %struct.RigArc** %joined_arc2, metadata !2435, metadata !DIExpression()), !dbg !2436
  store %struct.RigArc* null, %struct.RigArc** %joined_arc2, align 8, !dbg !2436
  %9 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2437
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %9, i32 0, i32 0, !dbg !2439
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs, i32 0, i32 0, !dbg !2440
  %10 = load i8*, i8** %first1, align 8, !dbg !2440
  %11 = bitcast i8* %10 to %struct.RigArc*, !dbg !2437
  store %struct.RigArc* %11, %struct.RigArc** %arc, align 8, !dbg !2441
  br label %for.cond2, !dbg !2442

for.cond2:                                        ; preds = %for.inc, %if.then
  %12 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2443
  %tobool3 = icmp ne %struct.RigArc* %12, null, !dbg !2445
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !2445

for.body4:                                        ; preds = %for.cond2
  %13 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2446
  %head = getelementptr inbounds %struct.RigArc, %struct.RigArc* %13, i32 0, i32 2, !dbg !2449
  %14 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !2449
  %15 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !2450
  %cmp5 = icmp eq %struct.RigNode* %14, %15, !dbg !2451
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !2452

lor.lhs.false:                                    ; preds = %for.body4
  %16 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2453
  %tail = getelementptr inbounds %struct.RigArc, %struct.RigArc* %16, i32 0, i32 3, !dbg !2454
  %17 = load %struct.RigNode*, %struct.RigNode** %tail, align 8, !dbg !2454
  %18 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !2455
  %cmp6 = icmp eq %struct.RigNode* %17, %18, !dbg !2456
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !2457

if.then7:                                         ; preds = %lor.lhs.false, %for.body4
  %19 = load %struct.RigArc*, %struct.RigArc** %joined_arc1, align 8, !dbg !2458
  %cmp8 = icmp eq %struct.RigArc* %19, null, !dbg !2461
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !2462

if.then9:                                         ; preds = %if.then7
  %20 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2463
  store %struct.RigArc* %20, %struct.RigArc** %joined_arc1, align 8, !dbg !2465
  br label %if.end, !dbg !2466

if.else:                                          ; preds = %if.then7
  %21 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2467
  store %struct.RigArc* %21, %struct.RigArc** %joined_arc2, align 8, !dbg !2469
  br label %for.end, !dbg !2470

if.end:                                           ; preds = %if.then9
  br label %if.end10, !dbg !2471

if.end10:                                         ; preds = %if.end, %lor.lhs.false
  br label %for.inc, !dbg !2472

for.inc:                                          ; preds = %if.end10
  %22 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2473
  %next11 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %22, i32 0, i32 0, !dbg !2474
  %23 = load i8*, i8** %next11, align 8, !dbg !2474
  %24 = bitcast i8* %23 to %struct.RigArc*, !dbg !2473
  store %struct.RigArc* %24, %struct.RigArc** %arc, align 8, !dbg !2475
  br label %for.cond2, !dbg !2476, !llvm.loop !2477

for.end:                                          ; preds = %if.else, %for.cond2
  %25 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2479
  %26 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !2480
  %27 = load %struct.RigArc*, %struct.RigArc** %joined_arc1, align 8, !dbg !2481
  %28 = load %struct.RigArc*, %struct.RigArc** %joined_arc2, align 8, !dbg !2482
  call void @RIG_joinArcs(%struct.RigGraph* %25, %struct.RigNode* %26, %struct.RigArc* %27, %struct.RigArc* %28), !dbg !2483
  br label %if.end12, !dbg !2484

if.end12:                                         ; preds = %for.end, %for.body
  br label %for.inc13, !dbg !2485

for.inc13:                                        ; preds = %if.end12
  %29 = load %struct.RigNode*, %struct.RigNode** %next_node, align 8, !dbg !2486
  store %struct.RigNode* %29, %struct.RigNode** %node, align 8, !dbg !2487
  br label %for.cond, !dbg !2488, !llvm.loop !2489

for.end14:                                        ; preds = %for.cond
  ret void, !dbg !2491
}

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_removeUneededOffsets(%struct.RigGraph* %rg) #0 !dbg !2492 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc = alloca %struct.RigArc*, align 8
  %first_edge = alloca %struct.RigEdge*, align 8
  %last_edge = alloca %struct.RigEdge*, align 8
  %new_node = alloca %struct.RigNode*, align 8
  %next_edge = alloca %struct.RigEdge*, align 8
  %other_arc = alloca %struct.RigArc*, align 8
  %test_edge = alloca %struct.RigEdge*, align 8
  %new_node64 = alloca %struct.RigNode*, align 8
  %test_edge77 = alloca %struct.RigEdge*, align 8
  %next_edge104 = alloca %struct.RigEdge*, align 8
  %test_edge121 = alloca %struct.RigEdge*, align 8
  %new_node166 = alloca %struct.RigNode*, align 8
  %previous_edge = alloca %struct.RigEdge*, align 8
  %previous_edge178 = alloca %struct.RigEdge*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !2493, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !2495, metadata !DIExpression()), !dbg !2496
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2497
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 0, !dbg !2499
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs, i32 0, i32 0, !dbg !2500
  %1 = load i8*, i8** %first, align 8, !dbg !2500
  %2 = bitcast i8* %1 to %struct.RigArc*, !dbg !2497
  store %struct.RigArc* %2, %struct.RigArc** %arc, align 8, !dbg !2501
  br label %for.cond, !dbg !2502

for.cond:                                         ; preds = %for.inc194, %entry
  %3 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2503
  %tobool = icmp ne %struct.RigArc* %3, null, !dbg !2505
  br i1 %tobool, label %for.body, label %for.end196, !dbg !2505

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %first_edge, metadata !2506, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %last_edge, metadata !2509, metadata !DIExpression()), !dbg !2510
  %4 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2511
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %4, i32 0, i32 9, !dbg !2512
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !2513
  %5 = load i8*, i8** %first1, align 8, !dbg !2513
  %6 = bitcast i8* %5 to %struct.RigEdge*, !dbg !2511
  store %struct.RigEdge* %6, %struct.RigEdge** %first_edge, align 8, !dbg !2514
  %7 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2515
  %edges2 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %7, i32 0, i32 9, !dbg !2516
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges2, i32 0, i32 1, !dbg !2517
  %8 = load i8*, i8** %last, align 8, !dbg !2517
  %9 = bitcast i8* %8 to %struct.RigEdge*, !dbg !2515
  store %struct.RigEdge* %9, %struct.RigEdge** %last_edge, align 8, !dbg !2518
  %10 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2519
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %10, i32 0, i32 7, !dbg !2521
  %11 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !2521
  %cmp = icmp eq %struct.EditBone* %11, null, !dbg !2522
  br i1 %cmp, label %if.then, label %if.end148, !dbg !2523

if.then:                                          ; preds = %for.body
  %12 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2524
  %bone3 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %12, i32 0, i32 7, !dbg !2527
  %13 = load %struct.EditBone*, %struct.EditBone** %bone3, align 8, !dbg !2527
  %cmp4 = icmp eq %struct.EditBone* %13, null, !dbg !2528
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !2529

land.lhs.true:                                    ; preds = %if.then
  %14 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2530
  %tail = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %14, i32 0, i32 3, !dbg !2531
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !2530
  %15 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2532
  %head = getelementptr inbounds %struct.RigArc, %struct.RigArc* %15, i32 0, i32 2, !dbg !2533
  %16 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !2533
  %p = getelementptr inbounds %struct.RigNode, %struct.RigNode* %16, i32 0, i32 2, !dbg !2534
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !2532
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay5), !dbg !2535
  %cmp6 = fcmp ole float %call, 0x3F50624DE0000000, !dbg !2536
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !2537

if.then7:                                         ; preds = %land.lhs.true
  %17 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2538
  %edges8 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %17, i32 0, i32 9, !dbg !2540
  %18 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2541
  %19 = bitcast %struct.RigEdge* %18 to i8*, !dbg !2541
  call void @BLI_remlink(%struct.ListBase* %edges8, i8* %19), !dbg !2542
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2543
  %21 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2544
  %22 = bitcast %struct.RigEdge* %21 to i8*, !dbg !2544
  call void %20(i8* %22), !dbg !2543
  br label %if.end147, !dbg !2545

if.else:                                          ; preds = %land.lhs.true, %if.then
  %23 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2546
  %head9 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %23, i32 0, i32 2, !dbg !2548
  %24 = load %struct.RigNode*, %struct.RigNode** %head9, align 8, !dbg !2548
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %24, i32 0, i32 4, !dbg !2549
  %25 = load i32, i32* %degree, align 8, !dbg !2549
  %cmp10 = icmp eq i32 %25, 1, !dbg !2550
  br i1 %cmp10, label %if.then11, label %if.else29, !dbg !2551

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.RigNode** %new_node, metadata !2552, metadata !DIExpression()), !dbg !2554
  %26 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2555
  %27 = bitcast %struct.RigGraph* %26 to %struct.BGraph*, !dbg !2556
  %28 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2557
  %tail12 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %28, i32 0, i32 3, !dbg !2558
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %tail12, i64 0, i64 0, !dbg !2557
  %call14 = call %struct.BNode* @BLI_FindNodeByPosition(%struct.BGraph* %27, float* %arraydecay13, float 0x3F50624DE0000000), !dbg !2559
  %29 = bitcast %struct.BNode* %call14 to %struct.RigNode*, !dbg !2560
  store %struct.RigNode* %29, %struct.RigNode** %new_node, align 8, !dbg !2554
  %30 = load %struct.RigNode*, %struct.RigNode** %new_node, align 8, !dbg !2561
  %tobool15 = icmp ne %struct.RigNode* %30, null, !dbg !2561
  br i1 %tobool15, label %if.then16, label %if.else19, !dbg !2563

if.then16:                                        ; preds = %if.then11
  %31 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2564
  %edges17 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %31, i32 0, i32 9, !dbg !2566
  %32 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2567
  %33 = bitcast %struct.RigEdge* %32 to i8*, !dbg !2567
  call void @BLI_remlink(%struct.ListBase* %edges17, i8* %33), !dbg !2568
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2569
  %35 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2570
  %36 = bitcast %struct.RigEdge* %35 to i8*, !dbg !2570
  call void %34(i8* %36), !dbg !2569
  %37 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2571
  %38 = bitcast %struct.RigGraph* %37 to %struct.BGraph*, !dbg !2572
  %39 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2573
  %40 = bitcast %struct.RigArc* %39 to %struct.BArc*, !dbg !2574
  %41 = load %struct.RigNode*, %struct.RigNode** %new_node, align 8, !dbg !2575
  %42 = bitcast %struct.RigNode* %41 to %struct.BNode*, !dbg !2576
  %43 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2577
  %head18 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %43, i32 0, i32 2, !dbg !2578
  %44 = load %struct.RigNode*, %struct.RigNode** %head18, align 8, !dbg !2578
  %45 = bitcast %struct.RigNode* %44 to %struct.BNode*, !dbg !2579
  call void @BLI_replaceNodeInArc(%struct.BGraph* %38, %struct.BArc* %40, %struct.BNode* %42, %struct.BNode* %45), !dbg !2580
  br label %if.end28, !dbg !2581

if.else19:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %next_edge, metadata !2582, metadata !DIExpression()), !dbg !2584
  %46 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2585
  %next = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %46, i32 0, i32 0, !dbg !2586
  %47 = load %struct.RigEdge*, %struct.RigEdge** %next, align 8, !dbg !2586
  store %struct.RigEdge* %47, %struct.RigEdge** %next_edge, align 8, !dbg !2584
  %48 = load %struct.RigEdge*, %struct.RigEdge** %next_edge, align 8, !dbg !2587
  %tobool20 = icmp ne %struct.RigEdge* %48, null, !dbg !2587
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !2589

if.then21:                                        ; preds = %if.else19
  %49 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2590
  %edges22 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %49, i32 0, i32 9, !dbg !2592
  %50 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2593
  %51 = bitcast %struct.RigEdge* %50 to i8*, !dbg !2593
  call void @BLI_remlink(%struct.ListBase* %edges22, i8* %51), !dbg !2594
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2595
  %53 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2596
  %54 = bitcast %struct.RigEdge* %53 to i8*, !dbg !2596
  call void %52(i8* %54), !dbg !2595
  %55 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2597
  %head23 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %55, i32 0, i32 2, !dbg !2598
  %56 = load %struct.RigNode*, %struct.RigNode** %head23, align 8, !dbg !2598
  %p24 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %56, i32 0, i32 2, !dbg !2599
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %p24, i64 0, i64 0, !dbg !2597
  %57 = load %struct.RigEdge*, %struct.RigEdge** %next_edge, align 8, !dbg !2600
  %head26 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %57, i32 0, i32 2, !dbg !2601
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %head26, i64 0, i64 0, !dbg !2600
  call void @copy_v3_v3(float* %arraydecay25, float* %arraydecay27), !dbg !2602
  br label %if.end, !dbg !2603

if.end:                                           ; preds = %if.then21, %if.else19
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then16
  br label %if.end146, !dbg !2604

if.else29:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.RigArc** %other_arc, metadata !2605, metadata !DIExpression()), !dbg !2607
  %58 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2608
  %arcs30 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %58, i32 0, i32 0, !dbg !2610
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs30, i32 0, i32 0, !dbg !2611
  %59 = load i8*, i8** %first31, align 8, !dbg !2611
  %60 = bitcast i8* %59 to %struct.RigArc*, !dbg !2608
  store %struct.RigArc* %60, %struct.RigArc** %other_arc, align 8, !dbg !2612
  br label %for.cond32, !dbg !2613

for.cond32:                                       ; preds = %for.inc, %if.else29
  %61 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2614
  %tobool33 = icmp ne %struct.RigArc* %61, null, !dbg !2616
  br i1 %tobool33, label %for.body34, label %for.end, !dbg !2616

for.body34:                                       ; preds = %for.cond32
  %62 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2617
  %63 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2620
  %cmp35 = icmp ne %struct.RigArc* %62, %63, !dbg !2621
  br i1 %cmp35, label %if.then36, label %if.end60, !dbg !2622

if.then36:                                        ; preds = %for.body34
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %test_edge, metadata !2623, metadata !DIExpression()), !dbg !2625
  %64 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2626
  %head37 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %64, i32 0, i32 2, !dbg !2628
  %65 = load %struct.RigNode*, %struct.RigNode** %head37, align 8, !dbg !2628
  %66 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2629
  %head38 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %66, i32 0, i32 2, !dbg !2630
  %67 = load %struct.RigNode*, %struct.RigNode** %head38, align 8, !dbg !2630
  %cmp39 = icmp eq %struct.RigNode* %65, %67, !dbg !2631
  br i1 %cmp39, label %if.then40, label %if.else47, !dbg !2632

if.then40:                                        ; preds = %if.then36
  %68 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2633
  %edges41 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %68, i32 0, i32 9, !dbg !2635
  %first42 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges41, i32 0, i32 0, !dbg !2636
  %69 = load i8*, i8** %first42, align 8, !dbg !2636
  %70 = bitcast i8* %69 to %struct.RigEdge*, !dbg !2633
  store %struct.RigEdge* %70, %struct.RigEdge** %test_edge, align 8, !dbg !2637
  %71 = load %struct.RigEdge*, %struct.RigEdge** %test_edge, align 8, !dbg !2638
  %bone43 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %71, i32 0, i32 7, !dbg !2640
  %72 = load %struct.EditBone*, %struct.EditBone** %bone43, align 8, !dbg !2640
  %cmp44 = icmp ne %struct.EditBone* %72, null, !dbg !2641
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !2642

if.then45:                                        ; preds = %if.then40
  br label %for.end, !dbg !2643

if.end46:                                         ; preds = %if.then40
  br label %if.end59, !dbg !2645

if.else47:                                        ; preds = %if.then36
  %73 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2646
  %tail48 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %73, i32 0, i32 3, !dbg !2648
  %74 = load %struct.RigNode*, %struct.RigNode** %tail48, align 8, !dbg !2648
  %75 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2649
  %head49 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %75, i32 0, i32 2, !dbg !2650
  %76 = load %struct.RigNode*, %struct.RigNode** %head49, align 8, !dbg !2650
  %cmp50 = icmp eq %struct.RigNode* %74, %76, !dbg !2651
  br i1 %cmp50, label %if.then51, label %if.end58, !dbg !2652

if.then51:                                        ; preds = %if.else47
  %77 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2653
  %edges52 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %77, i32 0, i32 9, !dbg !2655
  %last53 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges52, i32 0, i32 1, !dbg !2656
  %78 = load i8*, i8** %last53, align 8, !dbg !2656
  %79 = bitcast i8* %78 to %struct.RigEdge*, !dbg !2653
  store %struct.RigEdge* %79, %struct.RigEdge** %test_edge, align 8, !dbg !2657
  %80 = load %struct.RigEdge*, %struct.RigEdge** %test_edge, align 8, !dbg !2658
  %bone54 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %80, i32 0, i32 7, !dbg !2660
  %81 = load %struct.EditBone*, %struct.EditBone** %bone54, align 8, !dbg !2660
  %cmp55 = icmp ne %struct.EditBone* %81, null, !dbg !2661
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !2662

if.then56:                                        ; preds = %if.then51
  br label %for.end, !dbg !2663

if.end57:                                         ; preds = %if.then51
  br label %if.end58, !dbg !2665

if.end58:                                         ; preds = %if.end57, %if.else47
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end46
  br label %if.end60, !dbg !2666

if.end60:                                         ; preds = %if.end59, %for.body34
  br label %for.inc, !dbg !2667

for.inc:                                          ; preds = %if.end60
  %82 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2668
  %next61 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %82, i32 0, i32 0, !dbg !2669
  %83 = load i8*, i8** %next61, align 8, !dbg !2669
  %84 = bitcast i8* %83 to %struct.RigArc*, !dbg !2668
  store %struct.RigArc* %84, %struct.RigArc** %other_arc, align 8, !dbg !2670
  br label %for.cond32, !dbg !2671, !llvm.loop !2672

for.end:                                          ; preds = %if.then56, %if.then45, %for.cond32
  %85 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2674
  %cmp62 = icmp eq %struct.RigArc* %85, null, !dbg !2676
  br i1 %cmp62, label %if.then63, label %if.end145, !dbg !2677

if.then63:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.RigNode** %new_node64, metadata !2678, metadata !DIExpression()), !dbg !2680
  %86 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2681
  %87 = bitcast %struct.RigGraph* %86 to %struct.BGraph*, !dbg !2682
  %88 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2683
  %tail65 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %88, i32 0, i32 3, !dbg !2684
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %tail65, i64 0, i64 0, !dbg !2683
  %call67 = call %struct.BNode* @BLI_FindNodeByPosition(%struct.BGraph* %87, float* %arraydecay66, float 0x3F50624DE0000000), !dbg !2685
  %89 = bitcast %struct.BNode* %call67 to %struct.RigNode*, !dbg !2686
  store %struct.RigNode* %89, %struct.RigNode** %new_node64, align 8, !dbg !2680
  %90 = load %struct.RigNode*, %struct.RigNode** %new_node64, align 8, !dbg !2687
  %tobool68 = icmp ne %struct.RigNode* %90, null, !dbg !2687
  br i1 %tobool68, label %if.then69, label %if.else103, !dbg !2689

if.then69:                                        ; preds = %if.then63
  %91 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2690
  %arcs70 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %91, i32 0, i32 0, !dbg !2693
  %first71 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs70, i32 0, i32 0, !dbg !2694
  %92 = load i8*, i8** %first71, align 8, !dbg !2694
  %93 = bitcast i8* %92 to %struct.RigArc*, !dbg !2690
  store %struct.RigArc* %93, %struct.RigArc** %other_arc, align 8, !dbg !2695
  br label %for.cond72, !dbg !2696

for.cond72:                                       ; preds = %for.inc98, %if.then69
  %94 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2697
  %tobool73 = icmp ne %struct.RigArc* %94, null, !dbg !2699
  br i1 %tobool73, label %for.body74, label %for.end100, !dbg !2699

for.body74:                                       ; preds = %for.cond72
  %95 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2700
  %96 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2703
  %cmp75 = icmp ne %struct.RigArc* %95, %96, !dbg !2704
  br i1 %cmp75, label %if.then76, label %if.end97, !dbg !2705

if.then76:                                        ; preds = %for.body74
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %test_edge77, metadata !2706, metadata !DIExpression()), !dbg !2708
  %97 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2709
  %head78 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %97, i32 0, i32 2, !dbg !2711
  %98 = load %struct.RigNode*, %struct.RigNode** %head78, align 8, !dbg !2711
  %99 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2712
  %head79 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %99, i32 0, i32 2, !dbg !2713
  %100 = load %struct.RigNode*, %struct.RigNode** %head79, align 8, !dbg !2713
  %cmp80 = icmp eq %struct.RigNode* %98, %100, !dbg !2714
  br i1 %cmp80, label %if.then81, label %if.else86, !dbg !2715

if.then81:                                        ; preds = %if.then76
  %101 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2716
  %102 = bitcast %struct.RigGraph* %101 to %struct.BGraph*, !dbg !2718
  %103 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2719
  %104 = bitcast %struct.RigArc* %103 to %struct.BArc*, !dbg !2720
  %105 = load %struct.RigNode*, %struct.RigNode** %new_node64, align 8, !dbg !2721
  %106 = bitcast %struct.RigNode* %105 to %struct.BNode*, !dbg !2722
  %107 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2723
  %head82 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %107, i32 0, i32 2, !dbg !2724
  %108 = load %struct.RigNode*, %struct.RigNode** %head82, align 8, !dbg !2724
  %109 = bitcast %struct.RigNode* %108 to %struct.BNode*, !dbg !2725
  call void @BLI_replaceNodeInArc(%struct.BGraph* %102, %struct.BArc* %104, %struct.BNode* %106, %struct.BNode* %109), !dbg !2726
  %110 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2727
  %edges83 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %110, i32 0, i32 9, !dbg !2728
  %first84 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges83, i32 0, i32 0, !dbg !2729
  %111 = load i8*, i8** %first84, align 8, !dbg !2729
  %112 = bitcast i8* %111 to %struct.RigEdge*, !dbg !2727
  store %struct.RigEdge* %112, %struct.RigEdge** %test_edge77, align 8, !dbg !2730
  %113 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2731
  %edges85 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %113, i32 0, i32 9, !dbg !2732
  %114 = load %struct.RigEdge*, %struct.RigEdge** %test_edge77, align 8, !dbg !2733
  %115 = bitcast %struct.RigEdge* %114 to i8*, !dbg !2733
  call void @BLI_remlink(%struct.ListBase* %edges85, i8* %115), !dbg !2734
  %116 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2735
  %117 = load %struct.RigEdge*, %struct.RigEdge** %test_edge77, align 8, !dbg !2736
  %118 = bitcast %struct.RigEdge* %117 to i8*, !dbg !2736
  call void %116(i8* %118), !dbg !2735
  br label %if.end96, !dbg !2737

if.else86:                                        ; preds = %if.then76
  %119 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2738
  %tail87 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %119, i32 0, i32 3, !dbg !2740
  %120 = load %struct.RigNode*, %struct.RigNode** %tail87, align 8, !dbg !2740
  %121 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2741
  %head88 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %121, i32 0, i32 2, !dbg !2742
  %122 = load %struct.RigNode*, %struct.RigNode** %head88, align 8, !dbg !2742
  %cmp89 = icmp eq %struct.RigNode* %120, %122, !dbg !2743
  br i1 %cmp89, label %if.then90, label %if.end95, !dbg !2744

if.then90:                                        ; preds = %if.else86
  %123 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2745
  %124 = bitcast %struct.RigGraph* %123 to %struct.BGraph*, !dbg !2747
  %125 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2748
  %126 = bitcast %struct.RigArc* %125 to %struct.BArc*, !dbg !2749
  %127 = load %struct.RigNode*, %struct.RigNode** %new_node64, align 8, !dbg !2750
  %128 = bitcast %struct.RigNode* %127 to %struct.BNode*, !dbg !2751
  %129 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2752
  %tail91 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %129, i32 0, i32 3, !dbg !2753
  %130 = load %struct.RigNode*, %struct.RigNode** %tail91, align 8, !dbg !2753
  %131 = bitcast %struct.RigNode* %130 to %struct.BNode*, !dbg !2754
  call void @BLI_replaceNodeInArc(%struct.BGraph* %124, %struct.BArc* %126, %struct.BNode* %128, %struct.BNode* %131), !dbg !2755
  %132 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2756
  %edges92 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %132, i32 0, i32 9, !dbg !2757
  %last93 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges92, i32 0, i32 1, !dbg !2758
  %133 = load i8*, i8** %last93, align 8, !dbg !2758
  %134 = bitcast i8* %133 to %struct.RigEdge*, !dbg !2756
  store %struct.RigEdge* %134, %struct.RigEdge** %test_edge77, align 8, !dbg !2759
  %135 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2760
  %edges94 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %135, i32 0, i32 9, !dbg !2761
  %136 = load %struct.RigEdge*, %struct.RigEdge** %test_edge77, align 8, !dbg !2762
  %137 = bitcast %struct.RigEdge* %136 to i8*, !dbg !2762
  call void @BLI_remlink(%struct.ListBase* %edges94, i8* %137), !dbg !2763
  %138 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2764
  %139 = load %struct.RigEdge*, %struct.RigEdge** %test_edge77, align 8, !dbg !2765
  %140 = bitcast %struct.RigEdge* %139 to i8*, !dbg !2765
  call void %138(i8* %140), !dbg !2764
  br label %if.end95, !dbg !2766

if.end95:                                         ; preds = %if.then90, %if.else86
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then81
  br label %if.end97, !dbg !2767

if.end97:                                         ; preds = %if.end96, %for.body74
  br label %for.inc98, !dbg !2768

for.inc98:                                        ; preds = %if.end97
  %141 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2769
  %next99 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %141, i32 0, i32 0, !dbg !2770
  %142 = load i8*, i8** %next99, align 8, !dbg !2770
  %143 = bitcast i8* %142 to %struct.RigArc*, !dbg !2769
  store %struct.RigArc* %143, %struct.RigArc** %other_arc, align 8, !dbg !2771
  br label %for.cond72, !dbg !2772, !llvm.loop !2773

for.end100:                                       ; preds = %for.cond72
  %144 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2775
  %edges101 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %144, i32 0, i32 9, !dbg !2776
  %145 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2777
  %146 = bitcast %struct.RigEdge* %145 to i8*, !dbg !2777
  call void @BLI_remlink(%struct.ListBase* %edges101, i8* %146), !dbg !2778
  %147 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2779
  %148 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2780
  %149 = bitcast %struct.RigEdge* %148 to i8*, !dbg !2780
  call void %147(i8* %149), !dbg !2779
  %150 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2781
  %151 = bitcast %struct.RigGraph* %150 to %struct.BGraph*, !dbg !2782
  %152 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2783
  %153 = bitcast %struct.RigArc* %152 to %struct.BArc*, !dbg !2784
  %154 = load %struct.RigNode*, %struct.RigNode** %new_node64, align 8, !dbg !2785
  %155 = bitcast %struct.RigNode* %154 to %struct.BNode*, !dbg !2786
  %156 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2787
  %head102 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %156, i32 0, i32 2, !dbg !2788
  %157 = load %struct.RigNode*, %struct.RigNode** %head102, align 8, !dbg !2788
  %158 = bitcast %struct.RigNode* %157 to %struct.BNode*, !dbg !2789
  call void @BLI_replaceNodeInArc(%struct.BGraph* %151, %struct.BArc* %153, %struct.BNode* %155, %struct.BNode* %158), !dbg !2790
  br label %if.end144, !dbg !2791

if.else103:                                       ; preds = %if.then63
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %next_edge104, metadata !2792, metadata !DIExpression()), !dbg !2794
  %159 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2795
  %next105 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %159, i32 0, i32 0, !dbg !2796
  %160 = load %struct.RigEdge*, %struct.RigEdge** %next105, align 8, !dbg !2796
  store %struct.RigEdge* %160, %struct.RigEdge** %next_edge104, align 8, !dbg !2794
  %161 = load %struct.RigEdge*, %struct.RigEdge** %next_edge104, align 8, !dbg !2797
  %tobool106 = icmp ne %struct.RigEdge* %161, null, !dbg !2797
  br i1 %tobool106, label %if.then107, label %if.end143, !dbg !2799

if.then107:                                       ; preds = %if.else103
  %162 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2800
  %edges108 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %162, i32 0, i32 9, !dbg !2802
  %163 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2803
  %164 = bitcast %struct.RigEdge* %163 to i8*, !dbg !2803
  call void @BLI_remlink(%struct.ListBase* %edges108, i8* %164), !dbg !2804
  %165 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2805
  %166 = load %struct.RigEdge*, %struct.RigEdge** %first_edge, align 8, !dbg !2806
  %167 = bitcast %struct.RigEdge* %166 to i8*, !dbg !2806
  call void %165(i8* %167), !dbg !2805
  %168 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2807
  %head109 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %168, i32 0, i32 2, !dbg !2808
  %169 = load %struct.RigNode*, %struct.RigNode** %head109, align 8, !dbg !2808
  %p110 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %169, i32 0, i32 2, !dbg !2809
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %p110, i64 0, i64 0, !dbg !2807
  %170 = load %struct.RigEdge*, %struct.RigEdge** %next_edge104, align 8, !dbg !2810
  %head112 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %170, i32 0, i32 2, !dbg !2811
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %head112, i64 0, i64 0, !dbg !2810
  call void @copy_v3_v3(float* %arraydecay111, float* %arraydecay113), !dbg !2812
  %171 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2813
  %arcs114 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %171, i32 0, i32 0, !dbg !2815
  %first115 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs114, i32 0, i32 0, !dbg !2816
  %172 = load i8*, i8** %first115, align 8, !dbg !2816
  %173 = bitcast i8* %172 to %struct.RigArc*, !dbg !2813
  store %struct.RigArc* %173, %struct.RigArc** %other_arc, align 8, !dbg !2817
  br label %for.cond116, !dbg !2818

for.cond116:                                      ; preds = %for.inc140, %if.then107
  %174 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2819
  %tobool117 = icmp ne %struct.RigArc* %174, null, !dbg !2821
  br i1 %tobool117, label %for.body118, label %for.end142, !dbg !2821

for.body118:                                      ; preds = %for.cond116
  %175 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2822
  %176 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2825
  %cmp119 = icmp ne %struct.RigArc* %175, %176, !dbg !2826
  br i1 %cmp119, label %if.then120, label %if.end139, !dbg !2827

if.then120:                                       ; preds = %for.body118
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %test_edge121, metadata !2828, metadata !DIExpression()), !dbg !2830
  %177 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2831
  %head122 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %177, i32 0, i32 2, !dbg !2833
  %178 = load %struct.RigNode*, %struct.RigNode** %head122, align 8, !dbg !2833
  %179 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2834
  %head123 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %179, i32 0, i32 2, !dbg !2835
  %180 = load %struct.RigNode*, %struct.RigNode** %head123, align 8, !dbg !2835
  %cmp124 = icmp eq %struct.RigNode* %178, %180, !dbg !2836
  br i1 %cmp124, label %if.then125, label %if.else129, !dbg !2837

if.then125:                                       ; preds = %if.then120
  %181 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2838
  %edges126 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %181, i32 0, i32 9, !dbg !2840
  %first127 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges126, i32 0, i32 0, !dbg !2841
  %182 = load i8*, i8** %first127, align 8, !dbg !2841
  %183 = bitcast i8* %182 to %struct.RigEdge*, !dbg !2838
  store %struct.RigEdge* %183, %struct.RigEdge** %test_edge121, align 8, !dbg !2842
  %184 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2843
  %edges128 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %184, i32 0, i32 9, !dbg !2844
  %185 = load %struct.RigEdge*, %struct.RigEdge** %test_edge121, align 8, !dbg !2845
  %186 = bitcast %struct.RigEdge* %185 to i8*, !dbg !2845
  call void @BLI_remlink(%struct.ListBase* %edges128, i8* %186), !dbg !2846
  %187 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2847
  %188 = load %struct.RigEdge*, %struct.RigEdge** %test_edge121, align 8, !dbg !2848
  %189 = bitcast %struct.RigEdge* %188 to i8*, !dbg !2848
  call void %187(i8* %189), !dbg !2847
  br label %if.end138, !dbg !2849

if.else129:                                       ; preds = %if.then120
  %190 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2850
  %tail130 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %190, i32 0, i32 3, !dbg !2852
  %191 = load %struct.RigNode*, %struct.RigNode** %tail130, align 8, !dbg !2852
  %192 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2853
  %head131 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %192, i32 0, i32 2, !dbg !2854
  %193 = load %struct.RigNode*, %struct.RigNode** %head131, align 8, !dbg !2854
  %cmp132 = icmp eq %struct.RigNode* %191, %193, !dbg !2855
  br i1 %cmp132, label %if.then133, label %if.end137, !dbg !2856

if.then133:                                       ; preds = %if.else129
  %194 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2857
  %edges134 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %194, i32 0, i32 9, !dbg !2859
  %last135 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges134, i32 0, i32 1, !dbg !2860
  %195 = load i8*, i8** %last135, align 8, !dbg !2860
  %196 = bitcast i8* %195 to %struct.RigEdge*, !dbg !2857
  store %struct.RigEdge* %196, %struct.RigEdge** %test_edge121, align 8, !dbg !2861
  %197 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2862
  %edges136 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %197, i32 0, i32 9, !dbg !2863
  %198 = load %struct.RigEdge*, %struct.RigEdge** %test_edge121, align 8, !dbg !2864
  %199 = bitcast %struct.RigEdge* %198 to i8*, !dbg !2864
  call void @BLI_remlink(%struct.ListBase* %edges136, i8* %199), !dbg !2865
  %200 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2866
  %201 = load %struct.RigEdge*, %struct.RigEdge** %test_edge121, align 8, !dbg !2867
  %202 = bitcast %struct.RigEdge* %201 to i8*, !dbg !2867
  call void %200(i8* %202), !dbg !2866
  br label %if.end137, !dbg !2868

if.end137:                                        ; preds = %if.then133, %if.else129
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then125
  br label %if.end139, !dbg !2869

if.end139:                                        ; preds = %if.end138, %for.body118
  br label %for.inc140, !dbg !2870

for.inc140:                                       ; preds = %if.end139
  %203 = load %struct.RigArc*, %struct.RigArc** %other_arc, align 8, !dbg !2871
  %next141 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %203, i32 0, i32 0, !dbg !2872
  %204 = load i8*, i8** %next141, align 8, !dbg !2872
  %205 = bitcast i8* %204 to %struct.RigArc*, !dbg !2871
  store %struct.RigArc* %205, %struct.RigArc** %other_arc, align 8, !dbg !2873
  br label %for.cond116, !dbg !2874, !llvm.loop !2875

for.end142:                                       ; preds = %for.cond116
  br label %if.end143, !dbg !2877

if.end143:                                        ; preds = %for.end142, %if.else103
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %for.end100
  br label %if.end145, !dbg !2878

if.end145:                                        ; preds = %if.end144, %for.end
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end28
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then7
  br label %if.end148, !dbg !2879

if.end148:                                        ; preds = %if.end147, %for.body
  %206 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2880
  %bone149 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %206, i32 0, i32 7, !dbg !2882
  %207 = load %struct.EditBone*, %struct.EditBone** %bone149, align 8, !dbg !2882
  %cmp150 = icmp eq %struct.EditBone* %207, null, !dbg !2883
  br i1 %cmp150, label %if.then151, label %if.end193, !dbg !2884

if.then151:                                       ; preds = %if.end148
  %208 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2885
  %head152 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %208, i32 0, i32 2, !dbg !2888
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %head152, i64 0, i64 0, !dbg !2885
  %209 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2889
  %tail154 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %209, i32 0, i32 3, !dbg !2890
  %210 = load %struct.RigNode*, %struct.RigNode** %tail154, align 8, !dbg !2890
  %p155 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %210, i32 0, i32 2, !dbg !2891
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %p155, i64 0, i64 0, !dbg !2889
  %call157 = call float @len_v3v3(float* %arraydecay153, float* %arraydecay156), !dbg !2892
  %cmp158 = fcmp ole float %call157, 0x3F50624DE0000000, !dbg !2893
  br i1 %cmp158, label %if.then159, label %if.else161, !dbg !2894

if.then159:                                       ; preds = %if.then151
  %211 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2895
  %edges160 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %211, i32 0, i32 9, !dbg !2897
  %212 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2898
  %213 = bitcast %struct.RigEdge* %212 to i8*, !dbg !2898
  call void @BLI_remlink(%struct.ListBase* %edges160, i8* %213), !dbg !2899
  %214 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2900
  %215 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2901
  %216 = bitcast %struct.RigEdge* %215 to i8*, !dbg !2901
  call void %214(i8* %216), !dbg !2900
  br label %if.end192, !dbg !2902

if.else161:                                       ; preds = %if.then151
  %217 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2903
  %tail162 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %217, i32 0, i32 3, !dbg !2905
  %218 = load %struct.RigNode*, %struct.RigNode** %tail162, align 8, !dbg !2905
  %degree163 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %218, i32 0, i32 4, !dbg !2906
  %219 = load i32, i32* %degree163, align 8, !dbg !2906
  %cmp164 = icmp eq i32 %219, 1, !dbg !2907
  br i1 %cmp164, label %if.then165, label %if.end191, !dbg !2908

if.then165:                                       ; preds = %if.else161
  call void @llvm.dbg.declare(metadata %struct.RigNode** %new_node166, metadata !2909, metadata !DIExpression()), !dbg !2911
  %220 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2912
  %221 = bitcast %struct.RigGraph* %220 to %struct.BGraph*, !dbg !2913
  %222 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2914
  %head167 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %222, i32 0, i32 2, !dbg !2915
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %head167, i64 0, i64 0, !dbg !2914
  %call169 = call %struct.BNode* @BLI_FindNodeByPosition(%struct.BGraph* %221, float* %arraydecay168, float 0x3F50624DE0000000), !dbg !2916
  %223 = bitcast %struct.BNode* %call169 to %struct.RigNode*, !dbg !2917
  store %struct.RigNode* %223, %struct.RigNode** %new_node166, align 8, !dbg !2911
  %224 = load %struct.RigNode*, %struct.RigNode** %new_node166, align 8, !dbg !2918
  %tobool170 = icmp ne %struct.RigNode* %224, null, !dbg !2918
  br i1 %tobool170, label %if.then171, label %if.else177, !dbg !2920

if.then171:                                       ; preds = %if.then165
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %previous_edge, metadata !2921, metadata !DIExpression()), !dbg !2923
  %225 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2924
  %prev = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %225, i32 0, i32 1, !dbg !2925
  %226 = load %struct.RigEdge*, %struct.RigEdge** %prev, align 8, !dbg !2925
  store %struct.RigEdge* %226, %struct.RigEdge** %previous_edge, align 8, !dbg !2923
  %227 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2926
  %edges172 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %227, i32 0, i32 9, !dbg !2927
  %228 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2928
  %229 = bitcast %struct.RigEdge* %228 to i8*, !dbg !2928
  call void @BLI_remlink(%struct.ListBase* %edges172, i8* %229), !dbg !2929
  %230 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2930
  %231 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2931
  %232 = bitcast %struct.RigEdge* %231 to i8*, !dbg !2931
  call void %230(i8* %232), !dbg !2930
  %233 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2932
  %234 = bitcast %struct.RigGraph* %233 to %struct.BGraph*, !dbg !2933
  %235 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2934
  %236 = bitcast %struct.RigArc* %235 to %struct.BArc*, !dbg !2935
  %237 = load %struct.RigNode*, %struct.RigNode** %new_node166, align 8, !dbg !2936
  %238 = bitcast %struct.RigNode* %237 to %struct.BNode*, !dbg !2937
  %239 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2938
  %tail173 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %239, i32 0, i32 3, !dbg !2939
  %240 = load %struct.RigNode*, %struct.RigNode** %tail173, align 8, !dbg !2939
  %241 = bitcast %struct.RigNode* %240 to %struct.BNode*, !dbg !2940
  call void @BLI_replaceNodeInArc(%struct.BGraph* %234, %struct.BArc* %236, %struct.BNode* %238, %struct.BNode* %241), !dbg !2941
  %242 = load %struct.RigEdge*, %struct.RigEdge** %previous_edge, align 8, !dbg !2942
  %tobool174 = icmp ne %struct.RigEdge* %242, null, !dbg !2942
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !2944

if.then175:                                       ; preds = %if.then171
  %243 = load %struct.RigEdge*, %struct.RigEdge** %previous_edge, align 8, !dbg !2945
  %angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %243, i32 0, i32 5, !dbg !2947
  store float 0.000000e+00, float* %angle, align 4, !dbg !2948
  br label %if.end176, !dbg !2949

if.end176:                                        ; preds = %if.then175, %if.then171
  br label %if.end190, !dbg !2950

if.else177:                                       ; preds = %if.then165
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %previous_edge178, metadata !2951, metadata !DIExpression()), !dbg !2953
  %244 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2954
  %prev179 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %244, i32 0, i32 1, !dbg !2955
  %245 = load %struct.RigEdge*, %struct.RigEdge** %prev179, align 8, !dbg !2955
  store %struct.RigEdge* %245, %struct.RigEdge** %previous_edge178, align 8, !dbg !2953
  %246 = load %struct.RigEdge*, %struct.RigEdge** %previous_edge178, align 8, !dbg !2956
  %tobool180 = icmp ne %struct.RigEdge* %246, null, !dbg !2956
  br i1 %tobool180, label %if.then181, label %if.end189, !dbg !2958

if.then181:                                       ; preds = %if.else177
  %247 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2959
  %edges182 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %247, i32 0, i32 9, !dbg !2961
  %248 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2962
  %249 = bitcast %struct.RigEdge* %248 to i8*, !dbg !2962
  call void @BLI_remlink(%struct.ListBase* %edges182, i8* %249), !dbg !2963
  %250 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2964
  %251 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !2965
  %252 = bitcast %struct.RigEdge* %251 to i8*, !dbg !2965
  call void %250(i8* %252), !dbg !2964
  %253 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2966
  %tail183 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %253, i32 0, i32 3, !dbg !2967
  %254 = load %struct.RigNode*, %struct.RigNode** %tail183, align 8, !dbg !2967
  %p184 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %254, i32 0, i32 2, !dbg !2968
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %p184, i64 0, i64 0, !dbg !2966
  %255 = load %struct.RigEdge*, %struct.RigEdge** %previous_edge178, align 8, !dbg !2969
  %tail186 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %255, i32 0, i32 3, !dbg !2970
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %tail186, i64 0, i64 0, !dbg !2969
  call void @copy_v3_v3(float* %arraydecay185, float* %arraydecay187), !dbg !2971
  %256 = load %struct.RigEdge*, %struct.RigEdge** %previous_edge178, align 8, !dbg !2972
  %angle188 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %256, i32 0, i32 5, !dbg !2973
  store float 0.000000e+00, float* %angle188, align 4, !dbg !2974
  br label %if.end189, !dbg !2975

if.end189:                                        ; preds = %if.then181, %if.else177
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end176
  br label %if.end191, !dbg !2976

if.end191:                                        ; preds = %if.end190, %if.else161
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then159
  br label %if.end193, !dbg !2977

if.end193:                                        ; preds = %if.end192, %if.end148
  br label %for.inc194, !dbg !2978

for.inc194:                                       ; preds = %if.end193
  %257 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !2979
  %next195 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %257, i32 0, i32 0, !dbg !2980
  %258 = load i8*, i8** %next195, align 8, !dbg !2980
  %259 = bitcast i8* %258 to %struct.RigArc*, !dbg !2979
  store %struct.RigArc* %259, %struct.RigArc** %arc, align 8, !dbg !2981
  br label %for.cond, !dbg !2982, !llvm.loop !2983

for.end196:                                       ; preds = %for.cond
  ret void, !dbg !2985
}

declare dso_local void @BLI_buildAdjacencyList(%struct.BGraph*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_findHead(%struct.RigGraph* %rg) #0 !dbg !2986 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc = alloca %struct.RigArc*, align 8
  %arc6 = alloca %struct.RigArc*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !2987, metadata !DIExpression()), !dbg !2988
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2989
  %head = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 10, !dbg !2991
  %1 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !2991
  %cmp = icmp eq %struct.RigNode* %1, null, !dbg !2992
  br i1 %cmp, label %if.then, label %if.end19, !dbg !2993

if.then:                                          ; preds = %entry
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !2994
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %2, i32 0, i32 0, !dbg !2997
  %call = call i32 @BLI_countlist(%struct.ListBase* %arcs), !dbg !2998
  %cmp1 = icmp eq i32 %call, 1, !dbg !2999
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !3000

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !3001, metadata !DIExpression()), !dbg !3003
  %3 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3004
  %arcs3 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %3, i32 0, i32 0, !dbg !3005
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs3, i32 0, i32 0, !dbg !3006
  %4 = load i8*, i8** %first, align 8, !dbg !3006
  %5 = bitcast i8* %4 to %struct.RigArc*, !dbg !3004
  store %struct.RigArc* %5, %struct.RigArc** %arc, align 8, !dbg !3003
  %6 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !3007
  %head4 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %6, i32 0, i32 2, !dbg !3008
  %7 = load %struct.RigNode*, %struct.RigNode** %head4, align 8, !dbg !3008
  %8 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3009
  %head5 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %8, i32 0, i32 10, !dbg !3010
  store %struct.RigNode* %7, %struct.RigNode** %head5, align 8, !dbg !3011
  br label %if.end12, !dbg !3012

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc6, metadata !3013, metadata !DIExpression()), !dbg !3015
  %9 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3016
  %arcs7 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %9, i32 0, i32 0, !dbg !3018
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs7, i32 0, i32 0, !dbg !3019
  %10 = load i8*, i8** %first8, align 8, !dbg !3019
  %11 = bitcast i8* %10 to %struct.RigArc*, !dbg !3016
  store %struct.RigArc* %11, %struct.RigArc** %arc6, align 8, !dbg !3020
  br label %for.cond, !dbg !3021

for.cond:                                         ; preds = %for.inc, %if.else
  %12 = load %struct.RigArc*, %struct.RigArc** %arc6, align 8, !dbg !3022
  %tobool = icmp ne %struct.RigArc* %12, null, !dbg !3024
  br i1 %tobool, label %for.body, label %for.end, !dbg !3024

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !3025, metadata !DIExpression()), !dbg !3027
  %13 = load %struct.RigArc*, %struct.RigArc** %arc6, align 8, !dbg !3028
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %13, i32 0, i32 9, !dbg !3029
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 1, !dbg !3030
  %14 = load i8*, i8** %last, align 8, !dbg !3030
  %15 = bitcast i8* %14 to %struct.RigEdge*, !dbg !3028
  store %struct.RigEdge* %15, %struct.RigEdge** %edge, align 8, !dbg !3027
  %16 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3031
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %16, i32 0, i32 7, !dbg !3033
  %17 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !3033
  %flag = getelementptr inbounds %struct.EditBone, %struct.EditBone* %17, i32 0, i32 9, !dbg !3034
  %18 = load i32, i32* %flag, align 4, !dbg !3034
  %and = and i32 %18, 5, !dbg !3035
  %tobool9 = icmp ne i32 %and, 0, !dbg !3035
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !3036

if.then10:                                        ; preds = %for.body
  %19 = load %struct.RigArc*, %struct.RigArc** %arc6, align 8, !dbg !3037
  %tail = getelementptr inbounds %struct.RigArc, %struct.RigArc* %19, i32 0, i32 3, !dbg !3039
  %20 = load %struct.RigNode*, %struct.RigNode** %tail, align 8, !dbg !3039
  %21 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3040
  %head11 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %21, i32 0, i32 10, !dbg !3041
  store %struct.RigNode* %20, %struct.RigNode** %head11, align 8, !dbg !3042
  br label %for.end, !dbg !3043

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3044

for.inc:                                          ; preds = %if.end
  %22 = load %struct.RigArc*, %struct.RigArc** %arc6, align 8, !dbg !3045
  %next = getelementptr inbounds %struct.RigArc, %struct.RigArc* %22, i32 0, i32 0, !dbg !3046
  %23 = load i8*, i8** %next, align 8, !dbg !3046
  %24 = bitcast i8* %23 to %struct.RigArc*, !dbg !3045
  store %struct.RigArc* %24, %struct.RigArc** %arc6, align 8, !dbg !3047
  br label %for.cond, !dbg !3048, !llvm.loop !3049

for.end:                                          ; preds = %if.then10, %for.cond
  br label %if.end12

if.end12:                                         ; preds = %for.end, %if.then2
  %25 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3051
  %head13 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %25, i32 0, i32 10, !dbg !3053
  %26 = load %struct.RigNode*, %struct.RigNode** %head13, align 8, !dbg !3053
  %cmp14 = icmp eq %struct.RigNode* %26, null, !dbg !3054
  br i1 %cmp14, label %if.then15, label %if.end18, !dbg !3055

if.then15:                                        ; preds = %if.end12
  %27 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3056
  %nodes = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %27, i32 0, i32 1, !dbg !3058
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !3059
  %28 = load i8*, i8** %first16, align 8, !dbg !3059
  %29 = bitcast i8* %28 to %struct.RigNode*, !dbg !3056
  %30 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3060
  %head17 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %30, i32 0, i32 10, !dbg !3061
  store %struct.RigNode* %29, %struct.RigNode** %head17, align 8, !dbg !3062
  br label %if.end18, !dbg !3063

if.end18:                                         ; preds = %if.then15, %if.end12
  br label %if.end19, !dbg !3064

if.end19:                                         ; preds = %if.end18, %entry
  ret void, !dbg !3065
}

declare dso_local void @BLI_markdownSymmetry(%struct.BGraph*, %struct.BNode*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_reconnectControlBones(%struct.RigGraph* %rg) #0 !dbg !3066 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %ctrl = alloca %struct.RigControl*, align 8
  %changed = alloca i8, align 1
  %pchan = alloca %struct.bPoseChannel*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %found = alloca i32, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %target_index = alloca i32, align 4
  %link = alloca %struct.EditBone*, align 8
  %link67 = alloca %struct.EditBone*, align 8
  %arc = alloca %struct.RigArc*, align 8
  %best_arc = alloca %struct.RigArc*, align 8
  %link76 = alloca %struct.EditBone*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  %fit = alloca i32, align 4
  %arc128 = alloca %struct.RigArc*, align 8
  %best_arc129 = alloca %struct.RigArc*, align 8
  %link130 = alloca %struct.EditBone*, align 8
  %edge136 = alloca %struct.RigEdge*, align 8
  %pchan183 = alloca %struct.bPoseChannel*, align 8
  %con184 = alloca %struct.bConstraint*, align 8
  %ctrl_parent = alloca %struct.RigControl*, align 8
  %ctrl_child = alloca %struct.RigControl*, align 8
  %found185 = alloca i32, align 4
  %cti208 = alloca %struct.bConstraintTypeInfo*, align 8
  %targets210 = alloca %struct.ListBase, align 8
  %ct211 = alloca %struct.bConstraintTarget*, align 8
  %link237 = alloca %struct.RigControl*, align 8
  %ghi = alloca %struct.GHashIterator, align 8
  %bone315 = alloca %struct.EditBone*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !3067, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl, metadata !3069, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !3071, metadata !DIExpression()), !dbg !3072
  store i8 1, i8* %changed, align 1, !dbg !3072
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3073
  %controls = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 8, !dbg !3075
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls, i32 0, i32 0, !dbg !3076
  %1 = load i8*, i8** %first, align 8, !dbg !3076
  %2 = bitcast i8* %1 to %struct.RigControl*, !dbg !3073
  store %struct.RigControl* %2, %struct.RigControl** %ctrl, align 8, !dbg !3077
  br label %for.cond, !dbg !3078

for.cond:                                         ; preds = %for.inc170, %entry
  %3 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3079
  %tobool = icmp ne %struct.RigControl* %3, null, !dbg !3081
  br i1 %tobool, label %for.body, label %for.end172, !dbg !3081

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !3082, metadata !DIExpression()), !dbg !3129
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !3130, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.declare(metadata i32* %found, metadata !3151, metadata !DIExpression()), !dbg !3152
  store i32 0, i32* %found, align 4, !dbg !3152
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3153
  %ob = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %4, i32 0, i32 16, !dbg !3155
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3155
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 18, !dbg !3156
  %6 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3156
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %6, i32 0, i32 0, !dbg !3157
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !3158
  %7 = load i8*, i8** %first1, align 8, !dbg !3158
  %8 = bitcast i8* %7 to %struct.bPoseChannel*, !dbg !3153
  store %struct.bPoseChannel* %8, %struct.bPoseChannel** %pchan, align 8, !dbg !3159
  br label %for.cond2, !dbg !3160

for.cond2:                                        ; preds = %for.inc57, %for.body
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3161
  %tobool3 = icmp ne %struct.bPoseChannel* %9, null, !dbg !3163
  br i1 %tobool3, label %for.body4, label %for.end59, !dbg !3163

for.body4:                                        ; preds = %for.cond2
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3164
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %10, i32 0, i32 3, !dbg !3167
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !3168
  %11 = load i8*, i8** %first5, align 8, !dbg !3168
  %12 = bitcast i8* %11 to %struct.bConstraint*, !dbg !3164
  store %struct.bConstraint* %12, %struct.bConstraint** %con, align 8, !dbg !3169
  br label %for.cond6, !dbg !3170

for.cond6:                                        ; preds = %for.inc54, %for.body4
  %13 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3171
  %tobool7 = icmp ne %struct.bConstraint* %13, null, !dbg !3173
  br i1 %tobool7, label %for.body8, label %for.end56, !dbg !3173

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !3174, metadata !DIExpression()), !dbg !3245
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3246
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %14), !dbg !3247
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3245
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !3248, metadata !DIExpression()), !dbg !3249
  %15 = bitcast %struct.ListBase* %targets to i8*, !dbg !3249
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false), !dbg !3249
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !3250, metadata !DIExpression()), !dbg !3253
  %16 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3254
  %tobool9 = icmp ne %struct.bConstraintTypeInfo* %16, null, !dbg !3254
  br i1 %tobool9, label %land.lhs.true, label %if.end53, !dbg !3256

land.lhs.true:                                    ; preds = %for.body8
  %17 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3257
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %17, i32 0, i32 8, !dbg !3258
  %18 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !3258
  %tobool10 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %18, null, !dbg !3257
  br i1 %tobool10, label %if.then, label %if.end53, !dbg !3259

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %target_index, metadata !3260, metadata !DIExpression()), !dbg !3262
  %19 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3263
  %get_constraint_targets11 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %19, i32 0, i32 8, !dbg !3264
  %20 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets11, align 8, !dbg !3264
  %21 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3265
  %call12 = call i32 %20(%struct.bConstraint* %21, %struct.ListBase* %targets), !dbg !3263
  store i32 0, i32* %target_index, align 4, !dbg !3266
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !3268
  %22 = load i8*, i8** %first13, align 8, !dbg !3268
  %23 = bitcast i8* %22 to %struct.bConstraintTarget*, !dbg !3269
  store %struct.bConstraintTarget* %23, %struct.bConstraintTarget** %ct, align 8, !dbg !3270
  br label %for.cond14, !dbg !3271

for.cond14:                                       ; preds = %for.inc, %if.then
  %24 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3272
  %tobool15 = icmp ne %struct.bConstraintTarget* %24, null, !dbg !3274
  br i1 %tobool15, label %for.body16, label %for.end, !dbg !3274

for.body16:                                       ; preds = %for.cond14
  %25 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3275
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %25, i32 0, i32 2, !dbg !3278
  %26 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !3278
  %27 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3279
  %ob17 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %27, i32 0, i32 16, !dbg !3280
  %28 = load %struct.Object*, %struct.Object** %ob17, align 8, !dbg !3280
  %cmp = icmp eq %struct.Object* %26, %28, !dbg !3281
  br i1 %cmp, label %land.lhs.true18, label %if.end48, !dbg !3282

land.lhs.true18:                                  ; preds = %for.body16
  %29 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3283
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %29, i32 0, i32 3, !dbg !3284
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !3283
  %30 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3285
  %bone = getelementptr inbounds %struct.RigControl, %struct.RigControl* %30, i32 0, i32 4, !dbg !3286
  %31 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !3286
  %name = getelementptr inbounds %struct.EditBone, %struct.EditBone* %31, i32 0, i32 5, !dbg !3287
  %arraydecay19 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3285
  %call20 = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay19) #6, !dbg !3288
  %cmp21 = icmp eq i32 %call20, 0, !dbg !3289
  br i1 %cmp21, label %if.then22, label %if.end48, !dbg !3290

if.then22:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata %struct.EditBone** %link, metadata !3291, metadata !DIExpression()), !dbg !3293
  %32 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3294
  %bones_map = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %32, i32 0, i32 14, !dbg !3295
  %33 = load %struct.GHash*, %struct.GHash** %bones_map, align 8, !dbg !3295
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3296
  %name23 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %34, i32 0, i32 4, !dbg !3297
  %arraydecay24 = getelementptr inbounds [64 x i8], [64 x i8]* %name23, i64 0, i64 0, !dbg !3296
  %call25 = call i8* @BLI_ghash_lookup(%struct.GHash* %33, i8* %arraydecay24), !dbg !3298
  %35 = bitcast i8* %call25 to %struct.EditBone*, !dbg !3298
  store %struct.EditBone* %35, %struct.EditBone** %link, align 8, !dbg !3293
  %36 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !3299
  %cmp26 = icmp ne %struct.EditBone* %36, null, !dbg !3301
  br i1 %cmp26, label %if.then27, label %if.end47, !dbg !3302

if.then27:                                        ; preds = %if.then22
  %37 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3303
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %37, i32 0, i32 3, !dbg !3306
  %38 = load i16, i16* %type, align 8, !dbg !3306
  %conv = sext i16 %38 to i32, !dbg !3303
  %cmp28 = icmp eq i32 %conv, 3, !dbg !3307
  br i1 %cmp28, label %land.lhs.true30, label %if.end45, !dbg !3308

land.lhs.true30:                                  ; preds = %if.then27
  %39 = load i32, i32* %target_index, align 4, !dbg !3309
  %cmp31 = icmp eq i32 %39, 1, !dbg !3310
  br i1 %cmp31, label %if.then33, label %if.end45, !dbg !3311

if.then33:                                        ; preds = %land.lhs.true30
  %40 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !3312
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %40, i32 0, i32 3, !dbg !3315
  %41 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !3315
  %tobool34 = icmp ne %struct.EditBone* %41, null, !dbg !3312
  br i1 %tobool34, label %land.lhs.true35, label %if.end, !dbg !3316

land.lhs.true35:                                  ; preds = %if.then33
  %42 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3317
  %bones_map36 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %42, i32 0, i32 14, !dbg !3318
  %43 = load %struct.GHash*, %struct.GHash** %bones_map36, align 8, !dbg !3318
  %44 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !3319
  %parent37 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %44, i32 0, i32 3, !dbg !3320
  %45 = load %struct.EditBone*, %struct.EditBone** %parent37, align 8, !dbg !3320
  %name38 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %45, i32 0, i32 5, !dbg !3321
  %arraydecay39 = getelementptr inbounds [64 x i8], [64 x i8]* %name38, i64 0, i64 0, !dbg !3319
  %call40 = call zeroext i8 @BLI_ghash_haskey(%struct.GHash* %43, i8* %arraydecay39), !dbg !3322
  %conv41 = zext i8 %call40 to i32, !dbg !3322
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !3322
  br i1 %tobool42, label %if.then43, label %if.end, !dbg !3323

if.then43:                                        ; preds = %land.lhs.true35
  %46 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !3324
  %parent44 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %46, i32 0, i32 3, !dbg !3326
  %47 = load %struct.EditBone*, %struct.EditBone** %parent44, align 8, !dbg !3326
  store %struct.EditBone* %47, %struct.EditBone** %link, align 8, !dbg !3327
  br label %if.end, !dbg !3328

if.end:                                           ; preds = %if.then43, %land.lhs.true35, %if.then33
  br label %if.end45, !dbg !3329

if.end45:                                         ; preds = %if.end, %land.lhs.true30, %if.then27
  %48 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3330
  %49 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !3331
  %call46 = call i32 @RIG_parentControl(%struct.RigControl* %48, %struct.EditBone* %49), !dbg !3332
  store i32 %call46, i32* %found, align 4, !dbg !3333
  br label %if.end47, !dbg !3334

if.end47:                                         ; preds = %if.end45, %if.then22
  br label %if.end48, !dbg !3335

if.end48:                                         ; preds = %if.end47, %land.lhs.true18, %for.body16
  br label %for.inc, !dbg !3336

for.inc:                                          ; preds = %if.end48
  %50 = load i32, i32* %target_index, align 4, !dbg !3337
  %inc = add nsw i32 %50, 1, !dbg !3337
  store i32 %inc, i32* %target_index, align 4, !dbg !3337
  %51 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !3338
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %51, i32 0, i32 0, !dbg !3339
  %52 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !3339
  store %struct.bConstraintTarget* %52, %struct.bConstraintTarget** %ct, align 8, !dbg !3340
  br label %for.cond14, !dbg !3341, !llvm.loop !3342

for.end:                                          ; preds = %for.cond14
  %53 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3344
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %53, i32 0, i32 9, !dbg !3346
  %54 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !3346
  %tobool49 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %54, null, !dbg !3344
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !3347

if.then50:                                        ; preds = %for.end
  %55 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !3348
  %flush_constraint_targets51 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %55, i32 0, i32 9, !dbg !3349
  %56 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets51, align 8, !dbg !3349
  %57 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3350
  call void %56(%struct.bConstraint* %57, %struct.ListBase* %targets, i8 zeroext 0), !dbg !3348
  br label %if.end52, !dbg !3348

if.end52:                                         ; preds = %if.then50, %for.end
  br label %if.end53, !dbg !3351

if.end53:                                         ; preds = %if.end52, %land.lhs.true, %for.body8
  br label %for.inc54, !dbg !3352

for.inc54:                                        ; preds = %if.end53
  %58 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !3353
  %next55 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %58, i32 0, i32 0, !dbg !3354
  %59 = load %struct.bConstraint*, %struct.bConstraint** %next55, align 8, !dbg !3354
  store %struct.bConstraint* %59, %struct.bConstraint** %con, align 8, !dbg !3355
  br label %for.cond6, !dbg !3356, !llvm.loop !3357

for.end56:                                        ; preds = %for.cond6
  br label %for.inc57, !dbg !3359

for.inc57:                                        ; preds = %for.end56
  %60 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3360
  %next58 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %60, i32 0, i32 0, !dbg !3361
  %61 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next58, align 8, !dbg !3361
  store %struct.bPoseChannel* %61, %struct.bPoseChannel** %pchan, align 8, !dbg !3362
  br label %for.cond2, !dbg !3363, !llvm.loop !3364

for.end59:                                        ; preds = %for.cond2
  %62 = load i32, i32* %found, align 4, !dbg !3366
  %cmp60 = icmp eq i32 %62, 0, !dbg !3368
  br i1 %cmp60, label %if.then62, label %if.end124, !dbg !3369

if.then62:                                        ; preds = %for.end59
  %63 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3370
  %bone63 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %63, i32 0, i32 4, !dbg !3373
  %64 = load %struct.EditBone*, %struct.EditBone** %bone63, align 8, !dbg !3373
  %parent64 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %64, i32 0, i32 3, !dbg !3374
  %65 = load %struct.EditBone*, %struct.EditBone** %parent64, align 8, !dbg !3374
  %tobool65 = icmp ne %struct.EditBone* %65, null, !dbg !3370
  br i1 %tobool65, label %if.then66, label %if.end75, !dbg !3375

if.then66:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata %struct.EditBone** %link67, metadata !3376, metadata !DIExpression()), !dbg !3378
  %66 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3379
  %bones_map68 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %66, i32 0, i32 14, !dbg !3380
  %67 = load %struct.GHash*, %struct.GHash** %bones_map68, align 8, !dbg !3380
  %68 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3381
  %bone69 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %68, i32 0, i32 4, !dbg !3382
  %69 = load %struct.EditBone*, %struct.EditBone** %bone69, align 8, !dbg !3382
  %parent70 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %69, i32 0, i32 3, !dbg !3383
  %70 = load %struct.EditBone*, %struct.EditBone** %parent70, align 8, !dbg !3383
  %name71 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %70, i32 0, i32 5, !dbg !3384
  %arraydecay72 = getelementptr inbounds [64 x i8], [64 x i8]* %name71, i64 0, i64 0, !dbg !3381
  %call73 = call i8* @BLI_ghash_lookup(%struct.GHash* %67, i8* %arraydecay72), !dbg !3385
  %71 = bitcast i8* %call73 to %struct.EditBone*, !dbg !3385
  store %struct.EditBone* %71, %struct.EditBone** %link67, align 8, !dbg !3378
  %72 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3386
  %73 = load %struct.EditBone*, %struct.EditBone** %link67, align 8, !dbg !3387
  %call74 = call i32 @RIG_parentControl(%struct.RigControl* %72, %struct.EditBone* %73), !dbg !3388
  store i32 %call74, i32* %found, align 4, !dbg !3389
  br label %if.end75, !dbg !3390

if.end75:                                         ; preds = %if.then66, %if.then62
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !3391, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.declare(metadata %struct.RigArc** %best_arc, metadata !3394, metadata !DIExpression()), !dbg !3395
  store %struct.RigArc* null, %struct.RigArc** %best_arc, align 8, !dbg !3395
  call void @llvm.dbg.declare(metadata %struct.EditBone** %link76, metadata !3396, metadata !DIExpression()), !dbg !3397
  store %struct.EditBone* null, %struct.EditBone** %link76, align 8, !dbg !3397
  %74 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3398
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %74, i32 0, i32 0, !dbg !3400
  %first77 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs, i32 0, i32 0, !dbg !3401
  %75 = load i8*, i8** %first77, align 8, !dbg !3401
  %76 = bitcast i8* %75 to %struct.RigArc*, !dbg !3398
  store %struct.RigArc* %76, %struct.RigArc** %arc, align 8, !dbg !3402
  br label %for.cond78, !dbg !3403

for.cond78:                                       ; preds = %for.inc120, %if.end75
  %77 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !3404
  %tobool79 = icmp ne %struct.RigArc* %77, null, !dbg !3406
  br i1 %tobool79, label %for.body80, label %for.end122, !dbg !3406

for.body80:                                       ; preds = %for.cond78
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !3407, metadata !DIExpression()), !dbg !3409
  %78 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !3410
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %78, i32 0, i32 9, !dbg !3412
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !3413
  %79 = load i8*, i8** %first81, align 8, !dbg !3413
  %80 = bitcast i8* %79 to %struct.RigEdge*, !dbg !3410
  store %struct.RigEdge* %80, %struct.RigEdge** %edge, align 8, !dbg !3414
  br label %for.cond82, !dbg !3415

for.cond82:                                       ; preds = %for.inc117, %for.body80
  %81 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3416
  %tobool83 = icmp ne %struct.RigEdge* %81, null, !dbg !3418
  br i1 %tobool83, label %for.body84, label %for.end119, !dbg !3418

for.body84:                                       ; preds = %for.cond82
  %82 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3419
  %bone85 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %82, i32 0, i32 7, !dbg !3422
  %83 = load %struct.EditBone*, %struct.EditBone** %bone85, align 8, !dbg !3422
  %tobool86 = icmp ne %struct.EditBone* %83, null, !dbg !3419
  br i1 %tobool86, label %if.then87, label %if.end116, !dbg !3423

if.then87:                                        ; preds = %for.body84
  call void @llvm.dbg.declare(metadata i32* %fit, metadata !3424, metadata !DIExpression()), !dbg !3426
  store i32 0, i32* %fit, align 4, !dbg !3426
  %84 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3427
  %bone88 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %84, i32 0, i32 4, !dbg !3428
  %85 = load %struct.EditBone*, %struct.EditBone** %bone88, align 8, !dbg !3428
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %85, i32 0, i32 7, !dbg !3429
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !3427
  %86 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3430
  %bone90 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %86, i32 0, i32 7, !dbg !3431
  %87 = load %struct.EditBone*, %struct.EditBone** %bone90, align 8, !dbg !3431
  %head91 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %87, i32 0, i32 7, !dbg !3432
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %head91, i64 0, i64 0, !dbg !3430
  %call93 = call float @len_v3v3(float* %arraydecay89, float* %arraydecay92), !dbg !3433
  %cmp94 = fcmp olt float %call93, 0x3F1A36E2E0000000, !dbg !3434
  %conv95 = zext i1 %cmp94 to i32, !dbg !3434
  store i32 %conv95, i32* %fit, align 4, !dbg !3435
  %88 = load i32, i32* %fit, align 4, !dbg !3436
  %tobool96 = icmp ne i32 %88, 0, !dbg !3436
  br i1 %tobool96, label %lor.end, label %lor.rhs, !dbg !3437

lor.rhs:                                          ; preds = %if.then87
  %89 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3438
  %bone97 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %89, i32 0, i32 4, !dbg !3439
  %90 = load %struct.EditBone*, %struct.EditBone** %bone97, align 8, !dbg !3439
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %90, i32 0, i32 8, !dbg !3440
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !3438
  %91 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3441
  %bone99 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %91, i32 0, i32 7, !dbg !3442
  %92 = load %struct.EditBone*, %struct.EditBone** %bone99, align 8, !dbg !3442
  %tail100 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %92, i32 0, i32 8, !dbg !3443
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %tail100, i64 0, i64 0, !dbg !3441
  %call102 = call float @len_v3v3(float* %arraydecay98, float* %arraydecay101), !dbg !3444
  %cmp103 = fcmp olt float %call102, 0x3F1A36E2E0000000, !dbg !3445
  br label %lor.end, !dbg !3437

lor.end:                                          ; preds = %lor.rhs, %if.then87
  %93 = phi i1 [ true, %if.then87 ], [ %cmp103, %lor.rhs ]
  %lor.ext = zext i1 %93 to i32, !dbg !3437
  store i32 %lor.ext, i32* %fit, align 4, !dbg !3446
  %94 = load i32, i32* %fit, align 4, !dbg !3447
  %tobool105 = icmp ne i32 %94, 0, !dbg !3447
  br i1 %tobool105, label %if.then106, label %if.end115, !dbg !3449

if.then106:                                       ; preds = %lor.end
  %95 = load %struct.RigArc*, %struct.RigArc** %best_arc, align 8, !dbg !3450
  %cmp107 = icmp eq %struct.RigArc* %95, null, !dbg !3453
  br i1 %cmp107, label %if.then112, label %lor.lhs.false, !dbg !3454

lor.lhs.false:                                    ; preds = %if.then106
  %96 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !3455
  %symmetry_level = getelementptr inbounds %struct.RigArc, %struct.RigArc* %96, i32 0, i32 6, !dbg !3456
  %97 = load i32, i32* %symmetry_level, align 8, !dbg !3456
  %98 = load %struct.RigArc*, %struct.RigArc** %best_arc, align 8, !dbg !3457
  %symmetry_level109 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %98, i32 0, i32 6, !dbg !3458
  %99 = load i32, i32* %symmetry_level109, align 8, !dbg !3458
  %cmp110 = icmp slt i32 %97, %99, !dbg !3459
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !3460

if.then112:                                       ; preds = %lor.lhs.false, %if.then106
  %100 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !3461
  store %struct.RigArc* %100, %struct.RigArc** %best_arc, align 8, !dbg !3463
  %101 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3464
  %bone113 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %101, i32 0, i32 7, !dbg !3465
  %102 = load %struct.EditBone*, %struct.EditBone** %bone113, align 8, !dbg !3465
  store %struct.EditBone* %102, %struct.EditBone** %link76, align 8, !dbg !3466
  br label %if.end114, !dbg !3467

if.end114:                                        ; preds = %if.then112, %lor.lhs.false
  br label %if.end115, !dbg !3468

if.end115:                                        ; preds = %if.end114, %lor.end
  br label %if.end116, !dbg !3469

if.end116:                                        ; preds = %if.end115, %for.body84
  br label %for.inc117, !dbg !3470

for.inc117:                                       ; preds = %if.end116
  %103 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3471
  %next118 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %103, i32 0, i32 0, !dbg !3472
  %104 = load %struct.RigEdge*, %struct.RigEdge** %next118, align 8, !dbg !3472
  store %struct.RigEdge* %104, %struct.RigEdge** %edge, align 8, !dbg !3473
  br label %for.cond82, !dbg !3474, !llvm.loop !3475

for.end119:                                       ; preds = %for.cond82
  br label %for.inc120, !dbg !3477

for.inc120:                                       ; preds = %for.end119
  %105 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !3478
  %next121 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %105, i32 0, i32 0, !dbg !3479
  %106 = load i8*, i8** %next121, align 8, !dbg !3479
  %107 = bitcast i8* %106 to %struct.RigArc*, !dbg !3478
  store %struct.RigArc* %107, %struct.RigArc** %arc, align 8, !dbg !3480
  br label %for.cond78, !dbg !3481, !llvm.loop !3482

for.end122:                                       ; preds = %for.cond78
  %108 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3484
  %109 = load %struct.EditBone*, %struct.EditBone** %link76, align 8, !dbg !3485
  %call123 = call i32 @RIG_parentControl(%struct.RigControl* %108, %struct.EditBone* %109), !dbg !3486
  store i32 %call123, i32* %found, align 4, !dbg !3487
  br label %if.end124, !dbg !3488

if.end124:                                        ; preds = %for.end122, %for.end59
  %110 = load i32, i32* %found, align 4, !dbg !3489
  %cmp125 = icmp eq i32 %110, 0, !dbg !3491
  br i1 %cmp125, label %if.then127, label %if.end169, !dbg !3492

if.then127:                                       ; preds = %if.end124
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc128, metadata !3493, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata %struct.RigArc** %best_arc129, metadata !3496, metadata !DIExpression()), !dbg !3497
  store %struct.RigArc* null, %struct.RigArc** %best_arc129, align 8, !dbg !3497
  call void @llvm.dbg.declare(metadata %struct.EditBone** %link130, metadata !3498, metadata !DIExpression()), !dbg !3499
  store %struct.EditBone* null, %struct.EditBone** %link130, align 8, !dbg !3499
  %111 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3500
  %arcs131 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %111, i32 0, i32 0, !dbg !3502
  %first132 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs131, i32 0, i32 0, !dbg !3503
  %112 = load i8*, i8** %first132, align 8, !dbg !3503
  %113 = bitcast i8* %112 to %struct.RigArc*, !dbg !3500
  store %struct.RigArc* %113, %struct.RigArc** %arc128, align 8, !dbg !3504
  br label %for.cond133, !dbg !3505

for.cond133:                                      ; preds = %for.inc165, %if.then127
  %114 = load %struct.RigArc*, %struct.RigArc** %arc128, align 8, !dbg !3506
  %tobool134 = icmp ne %struct.RigArc* %114, null, !dbg !3508
  br i1 %tobool134, label %for.body135, label %for.end167, !dbg !3508

for.body135:                                      ; preds = %for.cond133
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge136, metadata !3509, metadata !DIExpression()), !dbg !3511
  %115 = load %struct.RigArc*, %struct.RigArc** %arc128, align 8, !dbg !3512
  %edges137 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %115, i32 0, i32 9, !dbg !3514
  %first138 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges137, i32 0, i32 0, !dbg !3515
  %116 = load i8*, i8** %first138, align 8, !dbg !3515
  %117 = bitcast i8* %116 to %struct.RigEdge*, !dbg !3512
  store %struct.RigEdge* %117, %struct.RigEdge** %edge136, align 8, !dbg !3516
  br label %for.cond139, !dbg !3517

for.cond139:                                      ; preds = %for.inc162, %for.body135
  %118 = load %struct.RigEdge*, %struct.RigEdge** %edge136, align 8, !dbg !3518
  %tobool140 = icmp ne %struct.RigEdge* %118, null, !dbg !3520
  br i1 %tobool140, label %for.body141, label %for.end164, !dbg !3520

for.body141:                                      ; preds = %for.cond139
  %119 = load %struct.RigEdge*, %struct.RigEdge** %edge136, align 8, !dbg !3521
  %bone142 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %119, i32 0, i32 7, !dbg !3524
  %120 = load %struct.EditBone*, %struct.EditBone** %bone142, align 8, !dbg !3524
  %tobool143 = icmp ne %struct.EditBone* %120, null, !dbg !3521
  br i1 %tobool143, label %land.lhs.true144, label %if.end161, !dbg !3525

land.lhs.true144:                                 ; preds = %for.body141
  %121 = load %struct.RigEdge*, %struct.RigEdge** %edge136, align 8, !dbg !3526
  %bone145 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %121, i32 0, i32 7, !dbg !3527
  %122 = load %struct.EditBone*, %struct.EditBone** %bone145, align 8, !dbg !3527
  %parent146 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %122, i32 0, i32 3, !dbg !3528
  %123 = load %struct.EditBone*, %struct.EditBone** %parent146, align 8, !dbg !3528
  %124 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3529
  %bone147 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %124, i32 0, i32 4, !dbg !3530
  %125 = load %struct.EditBone*, %struct.EditBone** %bone147, align 8, !dbg !3530
  %cmp148 = icmp eq %struct.EditBone* %123, %125, !dbg !3531
  br i1 %cmp148, label %if.then150, label %if.end161, !dbg !3532

if.then150:                                       ; preds = %land.lhs.true144
  %126 = load %struct.RigArc*, %struct.RigArc** %best_arc129, align 8, !dbg !3533
  %cmp151 = icmp eq %struct.RigArc* %126, null, !dbg !3536
  br i1 %cmp151, label %if.then158, label %lor.lhs.false153, !dbg !3537

lor.lhs.false153:                                 ; preds = %if.then150
  %127 = load %struct.RigArc*, %struct.RigArc** %arc128, align 8, !dbg !3538
  %symmetry_level154 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %127, i32 0, i32 6, !dbg !3539
  %128 = load i32, i32* %symmetry_level154, align 8, !dbg !3539
  %129 = load %struct.RigArc*, %struct.RigArc** %best_arc129, align 8, !dbg !3540
  %symmetry_level155 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %129, i32 0, i32 6, !dbg !3541
  %130 = load i32, i32* %symmetry_level155, align 8, !dbg !3541
  %cmp156 = icmp slt i32 %128, %130, !dbg !3542
  br i1 %cmp156, label %if.then158, label %if.end160, !dbg !3543

if.then158:                                       ; preds = %lor.lhs.false153, %if.then150
  %131 = load %struct.RigArc*, %struct.RigArc** %arc128, align 8, !dbg !3544
  store %struct.RigArc* %131, %struct.RigArc** %best_arc129, align 8, !dbg !3546
  %132 = load %struct.RigEdge*, %struct.RigEdge** %edge136, align 8, !dbg !3547
  %bone159 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %132, i32 0, i32 7, !dbg !3548
  %133 = load %struct.EditBone*, %struct.EditBone** %bone159, align 8, !dbg !3548
  store %struct.EditBone* %133, %struct.EditBone** %link130, align 8, !dbg !3549
  br label %if.end160, !dbg !3550

if.end160:                                        ; preds = %if.then158, %lor.lhs.false153
  br label %if.end161, !dbg !3551

if.end161:                                        ; preds = %if.end160, %land.lhs.true144, %for.body141
  br label %for.inc162, !dbg !3552

for.inc162:                                       ; preds = %if.end161
  %134 = load %struct.RigEdge*, %struct.RigEdge** %edge136, align 8, !dbg !3553
  %next163 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %134, i32 0, i32 0, !dbg !3554
  %135 = load %struct.RigEdge*, %struct.RigEdge** %next163, align 8, !dbg !3554
  store %struct.RigEdge* %135, %struct.RigEdge** %edge136, align 8, !dbg !3555
  br label %for.cond139, !dbg !3556, !llvm.loop !3557

for.end164:                                       ; preds = %for.cond139
  br label %for.inc165, !dbg !3559

for.inc165:                                       ; preds = %for.end164
  %136 = load %struct.RigArc*, %struct.RigArc** %arc128, align 8, !dbg !3560
  %next166 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %136, i32 0, i32 0, !dbg !3561
  %137 = load i8*, i8** %next166, align 8, !dbg !3561
  %138 = bitcast i8* %137 to %struct.RigArc*, !dbg !3560
  store %struct.RigArc* %138, %struct.RigArc** %arc128, align 8, !dbg !3562
  br label %for.cond133, !dbg !3563, !llvm.loop !3564

for.end167:                                       ; preds = %for.cond133
  %139 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3566
  %140 = load %struct.EditBone*, %struct.EditBone** %link130, align 8, !dbg !3567
  %call168 = call i32 @RIG_parentControl(%struct.RigControl* %139, %struct.EditBone* %140), !dbg !3568
  store i32 %call168, i32* %found, align 4, !dbg !3569
  br label %if.end169, !dbg !3570

if.end169:                                        ; preds = %for.end167, %if.end124
  br label %for.inc170, !dbg !3571

for.inc170:                                       ; preds = %if.end169
  %141 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3572
  %next171 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %141, i32 0, i32 0, !dbg !3573
  %142 = load %struct.RigControl*, %struct.RigControl** %next171, align 8, !dbg !3573
  store %struct.RigControl* %142, %struct.RigControl** %ctrl, align 8, !dbg !3574
  br label %for.cond, !dbg !3575, !llvm.loop !3576

for.end172:                                       ; preds = %for.cond
  br label %while.cond, !dbg !3578

while.cond:                                       ; preds = %for.end301, %for.end172
  %143 = load i8, i8* %changed, align 1, !dbg !3579
  %tobool173 = icmp ne i8 %143, 0, !dbg !3578
  br i1 %tobool173, label %while.body, label %while.end, !dbg !3578

while.body:                                       ; preds = %while.cond
  store i8 0, i8* %changed, align 1, !dbg !3580
  %144 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3582
  %controls174 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %144, i32 0, i32 8, !dbg !3584
  %first175 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls174, i32 0, i32 0, !dbg !3585
  %145 = load i8*, i8** %first175, align 8, !dbg !3585
  %146 = bitcast i8* %145 to %struct.RigControl*, !dbg !3582
  store %struct.RigControl* %146, %struct.RigControl** %ctrl, align 8, !dbg !3586
  br label %for.cond176, !dbg !3587

for.cond176:                                      ; preds = %for.inc299, %while.body
  %147 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3588
  %tobool177 = icmp ne %struct.RigControl* %147, null, !dbg !3590
  br i1 %tobool177, label %for.body178, label %for.end301, !dbg !3590

for.body178:                                      ; preds = %for.cond176
  %148 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3591
  %link179 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %148, i32 0, i32 5, !dbg !3594
  %149 = load %struct.EditBone*, %struct.EditBone** %link179, align 8, !dbg !3594
  %cmp180 = icmp eq %struct.EditBone* %149, null, !dbg !3595
  br i1 %cmp180, label %if.then182, label %if.end298, !dbg !3596

if.then182:                                       ; preds = %for.body178
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan183, metadata !3597, metadata !DIExpression()), !dbg !3599
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con184, metadata !3600, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl_parent, metadata !3602, metadata !DIExpression()), !dbg !3603
  store %struct.RigControl* null, %struct.RigControl** %ctrl_parent, align 8, !dbg !3603
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl_child, metadata !3604, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.declare(metadata i32* %found185, metadata !3606, metadata !DIExpression()), !dbg !3607
  store i32 0, i32* %found185, align 4, !dbg !3607
  %150 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3608
  %bone186 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %150, i32 0, i32 4, !dbg !3610
  %151 = load %struct.EditBone*, %struct.EditBone** %bone186, align 8, !dbg !3610
  %parent187 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %151, i32 0, i32 3, !dbg !3611
  %152 = load %struct.EditBone*, %struct.EditBone** %parent187, align 8, !dbg !3611
  %tobool188 = icmp ne %struct.EditBone* %152, null, !dbg !3608
  br i1 %tobool188, label %if.then189, label %if.end195, !dbg !3612

if.then189:                                       ; preds = %if.then182
  %153 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3613
  %controls_map = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %153, i32 0, i32 15, !dbg !3615
  %154 = load %struct.GHash*, %struct.GHash** %controls_map, align 8, !dbg !3615
  %155 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3616
  %bone190 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %155, i32 0, i32 4, !dbg !3617
  %156 = load %struct.EditBone*, %struct.EditBone** %bone190, align 8, !dbg !3617
  %parent191 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %156, i32 0, i32 3, !dbg !3618
  %157 = load %struct.EditBone*, %struct.EditBone** %parent191, align 8, !dbg !3618
  %name192 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %157, i32 0, i32 5, !dbg !3619
  %arraydecay193 = getelementptr inbounds [64 x i8], [64 x i8]* %name192, i64 0, i64 0, !dbg !3616
  %call194 = call i8* @BLI_ghash_lookup(%struct.GHash* %154, i8* %arraydecay193), !dbg !3620
  %158 = bitcast i8* %call194 to %struct.RigControl*, !dbg !3620
  store %struct.RigControl* %158, %struct.RigControl** %ctrl_parent, align 8, !dbg !3621
  br label %if.end195, !dbg !3622

if.end195:                                        ; preds = %if.then189, %if.then182
  %159 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3623
  %ob196 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %159, i32 0, i32 16, !dbg !3625
  %160 = load %struct.Object*, %struct.Object** %ob196, align 8, !dbg !3625
  %pose197 = getelementptr inbounds %struct.Object, %struct.Object* %160, i32 0, i32 18, !dbg !3626
  %161 = load %struct.bPose*, %struct.bPose** %pose197, align 8, !dbg !3626
  %chanbase198 = getelementptr inbounds %struct.bPose, %struct.bPose* %161, i32 0, i32 0, !dbg !3627
  %first199 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase198, i32 0, i32 0, !dbg !3628
  %162 = load i8*, i8** %first199, align 8, !dbg !3628
  %163 = bitcast i8* %162 to %struct.bPoseChannel*, !dbg !3623
  store %struct.bPoseChannel* %163, %struct.bPoseChannel** %pchan183, align 8, !dbg !3629
  br label %for.cond200, !dbg !3630

for.cond200:                                      ; preds = %for.inc263, %if.end195
  %164 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan183, align 8, !dbg !3631
  %tobool201 = icmp ne %struct.bPoseChannel* %164, null, !dbg !3633
  br i1 %tobool201, label %for.body202, label %for.end265, !dbg !3633

for.body202:                                      ; preds = %for.cond200
  %165 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan183, align 8, !dbg !3634
  %constraints203 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %165, i32 0, i32 3, !dbg !3637
  %first204 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints203, i32 0, i32 0, !dbg !3638
  %166 = load i8*, i8** %first204, align 8, !dbg !3638
  %167 = bitcast i8* %166 to %struct.bConstraint*, !dbg !3634
  store %struct.bConstraint* %167, %struct.bConstraint** %con184, align 8, !dbg !3639
  br label %for.cond205, !dbg !3640

for.cond205:                                      ; preds = %for.inc260, %for.body202
  %168 = load %struct.bConstraint*, %struct.bConstraint** %con184, align 8, !dbg !3641
  %tobool206 = icmp ne %struct.bConstraint* %168, null, !dbg !3643
  br i1 %tobool206, label %for.body207, label %for.end262, !dbg !3643

for.body207:                                      ; preds = %for.cond205
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti208, metadata !3644, metadata !DIExpression()), !dbg !3646
  %169 = load %struct.bConstraint*, %struct.bConstraint** %con184, align 8, !dbg !3647
  %call209 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %169), !dbg !3648
  store %struct.bConstraintTypeInfo* %call209, %struct.bConstraintTypeInfo** %cti208, align 8, !dbg !3646
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets210, metadata !3649, metadata !DIExpression()), !dbg !3650
  %170 = bitcast %struct.ListBase* %targets210 to i8*, !dbg !3650
  call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 16, i1 false), !dbg !3650
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct211, metadata !3651, metadata !DIExpression()), !dbg !3652
  %171 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti208, align 8, !dbg !3653
  %tobool212 = icmp ne %struct.bConstraintTypeInfo* %171, null, !dbg !3653
  br i1 %tobool212, label %land.lhs.true213, label %if.end259, !dbg !3655

land.lhs.true213:                                 ; preds = %for.body207
  %172 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti208, align 8, !dbg !3656
  %get_constraint_targets214 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %172, i32 0, i32 8, !dbg !3657
  %173 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets214, align 8, !dbg !3657
  %tobool215 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %173, null, !dbg !3656
  br i1 %tobool215, label %if.then216, label %if.end259, !dbg !3658

if.then216:                                       ; preds = %land.lhs.true213
  %174 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti208, align 8, !dbg !3659
  %get_constraint_targets217 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %174, i32 0, i32 8, !dbg !3661
  %175 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets217, align 8, !dbg !3661
  %176 = load %struct.bConstraint*, %struct.bConstraint** %con184, align 8, !dbg !3662
  %call218 = call i32 %175(%struct.bConstraint* %176, %struct.ListBase* %targets210), !dbg !3659
  %first219 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets210, i32 0, i32 0, !dbg !3663
  %177 = load i8*, i8** %first219, align 8, !dbg !3663
  %178 = bitcast i8* %177 to %struct.bConstraintTarget*, !dbg !3665
  store %struct.bConstraintTarget* %178, %struct.bConstraintTarget** %ct211, align 8, !dbg !3666
  br label %for.cond220, !dbg !3667

for.cond220:                                      ; preds = %for.inc251, %if.then216
  %179 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct211, align 8, !dbg !3668
  %tobool221 = icmp ne %struct.bConstraintTarget* %179, null, !dbg !3670
  br i1 %tobool221, label %for.body222, label %for.end253, !dbg !3670

for.body222:                                      ; preds = %for.cond220
  %180 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct211, align 8, !dbg !3671
  %tar223 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %180, i32 0, i32 2, !dbg !3674
  %181 = load %struct.Object*, %struct.Object** %tar223, align 8, !dbg !3674
  %182 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3675
  %ob224 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %182, i32 0, i32 16, !dbg !3676
  %183 = load %struct.Object*, %struct.Object** %ob224, align 8, !dbg !3676
  %cmp225 = icmp eq %struct.Object* %181, %183, !dbg !3677
  br i1 %cmp225, label %land.lhs.true227, label %if.end250, !dbg !3678

land.lhs.true227:                                 ; preds = %for.body222
  %184 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct211, align 8, !dbg !3679
  %subtarget228 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %184, i32 0, i32 3, !dbg !3680
  %arraydecay229 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget228, i64 0, i64 0, !dbg !3679
  %185 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3681
  %bone230 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %185, i32 0, i32 4, !dbg !3682
  %186 = load %struct.EditBone*, %struct.EditBone** %bone230, align 8, !dbg !3682
  %name231 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %186, i32 0, i32 5, !dbg !3683
  %arraydecay232 = getelementptr inbounds [64 x i8], [64 x i8]* %name231, i64 0, i64 0, !dbg !3681
  %call233 = call i32 @strcmp(i8* %arraydecay229, i8* %arraydecay232) #6, !dbg !3684
  %cmp234 = icmp eq i32 %call233, 0, !dbg !3685
  br i1 %cmp234, label %if.then236, label %if.end250, !dbg !3686

if.then236:                                       ; preds = %land.lhs.true227
  call void @llvm.dbg.declare(metadata %struct.RigControl** %link237, metadata !3687, metadata !DIExpression()), !dbg !3689
  %187 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3690
  %controls_map238 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %187, i32 0, i32 15, !dbg !3691
  %188 = load %struct.GHash*, %struct.GHash** %controls_map238, align 8, !dbg !3691
  %189 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan183, align 8, !dbg !3692
  %name239 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %189, i32 0, i32 4, !dbg !3693
  %arraydecay240 = getelementptr inbounds [64 x i8], [64 x i8]* %name239, i64 0, i64 0, !dbg !3692
  %call241 = call i8* @BLI_ghash_lookup(%struct.GHash* %188, i8* %arraydecay240), !dbg !3694
  %190 = bitcast i8* %call241 to %struct.RigControl*, !dbg !3694
  store %struct.RigControl* %190, %struct.RigControl** %link237, align 8, !dbg !3689
  %191 = load %struct.RigControl*, %struct.RigControl** %link237, align 8, !dbg !3695
  %tobool242 = icmp ne %struct.RigControl* %191, null, !dbg !3695
  br i1 %tobool242, label %land.lhs.true243, label %if.end249, !dbg !3697

land.lhs.true243:                                 ; preds = %if.then236
  %192 = load %struct.RigControl*, %struct.RigControl** %link237, align 8, !dbg !3698
  %link244 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %192, i32 0, i32 5, !dbg !3699
  %193 = load %struct.EditBone*, %struct.EditBone** %link244, align 8, !dbg !3699
  %tobool245 = icmp ne %struct.EditBone* %193, null, !dbg !3698
  br i1 %tobool245, label %if.then246, label %if.end249, !dbg !3700

if.then246:                                       ; preds = %land.lhs.true243
  %194 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3701
  %195 = load %struct.RigControl*, %struct.RigControl** %link237, align 8, !dbg !3703
  %bone247 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %195, i32 0, i32 4, !dbg !3704
  %196 = load %struct.EditBone*, %struct.EditBone** %bone247, align 8, !dbg !3704
  %call248 = call i32 @RIG_parentControl(%struct.RigControl* %194, %struct.EditBone* %196), !dbg !3705
  store i32 1, i32* %found185, align 4, !dbg !3706
  br label %for.end253, !dbg !3707

if.end249:                                        ; preds = %land.lhs.true243, %if.then236
  br label %if.end250, !dbg !3708

if.end250:                                        ; preds = %if.end249, %land.lhs.true227, %for.body222
  br label %for.inc251, !dbg !3709

for.inc251:                                       ; preds = %if.end250
  %197 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct211, align 8, !dbg !3710
  %next252 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %197, i32 0, i32 0, !dbg !3711
  %198 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next252, align 8, !dbg !3711
  store %struct.bConstraintTarget* %198, %struct.bConstraintTarget** %ct211, align 8, !dbg !3712
  br label %for.cond220, !dbg !3713, !llvm.loop !3714

for.end253:                                       ; preds = %if.then246, %for.cond220
  %199 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti208, align 8, !dbg !3716
  %flush_constraint_targets254 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %199, i32 0, i32 9, !dbg !3718
  %200 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets254, align 8, !dbg !3718
  %tobool255 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %200, null, !dbg !3716
  br i1 %tobool255, label %if.then256, label %if.end258, !dbg !3719

if.then256:                                       ; preds = %for.end253
  %201 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti208, align 8, !dbg !3720
  %flush_constraint_targets257 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %201, i32 0, i32 9, !dbg !3721
  %202 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets257, align 8, !dbg !3721
  %203 = load %struct.bConstraint*, %struct.bConstraint** %con184, align 8, !dbg !3722
  call void %202(%struct.bConstraint* %203, %struct.ListBase* %targets210, i8 zeroext 0), !dbg !3720
  br label %if.end258, !dbg !3720

if.end258:                                        ; preds = %if.then256, %for.end253
  br label %if.end259, !dbg !3723

if.end259:                                        ; preds = %if.end258, %land.lhs.true213, %for.body207
  br label %for.inc260, !dbg !3724

for.inc260:                                       ; preds = %if.end259
  %204 = load %struct.bConstraint*, %struct.bConstraint** %con184, align 8, !dbg !3725
  %next261 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %204, i32 0, i32 0, !dbg !3726
  %205 = load %struct.bConstraint*, %struct.bConstraint** %next261, align 8, !dbg !3726
  store %struct.bConstraint* %205, %struct.bConstraint** %con184, align 8, !dbg !3727
  br label %for.cond205, !dbg !3728, !llvm.loop !3729

for.end262:                                       ; preds = %for.cond205
  br label %for.inc263, !dbg !3731

for.inc263:                                       ; preds = %for.end262
  %206 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan183, align 8, !dbg !3732
  %next264 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %206, i32 0, i32 0, !dbg !3733
  %207 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next264, align 8, !dbg !3733
  store %struct.bPoseChannel* %207, %struct.bPoseChannel** %pchan183, align 8, !dbg !3734
  br label %for.cond200, !dbg !3735, !llvm.loop !3736

for.end265:                                       ; preds = %for.cond200
  %208 = load i32, i32* %found185, align 4, !dbg !3738
  %cmp266 = icmp eq i32 %208, 0, !dbg !3740
  br i1 %cmp266, label %if.then268, label %if.end297, !dbg !3741

if.then268:                                       ; preds = %for.end265
  %209 = load %struct.RigControl*, %struct.RigControl** %ctrl_parent, align 8, !dbg !3742
  %tobool269 = icmp ne %struct.RigControl* %209, null, !dbg !3742
  br i1 %tobool269, label %land.lhs.true270, label %if.else, !dbg !3745

land.lhs.true270:                                 ; preds = %if.then268
  %210 = load %struct.RigControl*, %struct.RigControl** %ctrl_parent, align 8, !dbg !3746
  %link271 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %210, i32 0, i32 5, !dbg !3747
  %211 = load %struct.EditBone*, %struct.EditBone** %link271, align 8, !dbg !3747
  %tobool272 = icmp ne %struct.EditBone* %211, null, !dbg !3746
  br i1 %tobool272, label %if.then273, label %if.else, !dbg !3748

if.then273:                                       ; preds = %land.lhs.true270
  %212 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3749
  %213 = load %struct.RigControl*, %struct.RigControl** %ctrl_parent, align 8, !dbg !3751
  %bone274 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %213, i32 0, i32 4, !dbg !3752
  %214 = load %struct.EditBone*, %struct.EditBone** %bone274, align 8, !dbg !3752
  %call275 = call i32 @RIG_parentControl(%struct.RigControl* %212, %struct.EditBone* %214), !dbg !3753
  store i8 1, i8* %changed, align 1, !dbg !3754
  br label %if.end296, !dbg !3755

if.else:                                          ; preds = %land.lhs.true270, %if.then268
  %215 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3756
  %controls276 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %215, i32 0, i32 8, !dbg !3759
  %first277 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls276, i32 0, i32 0, !dbg !3760
  %216 = load i8*, i8** %first277, align 8, !dbg !3760
  %217 = bitcast i8* %216 to %struct.RigControl*, !dbg !3756
  store %struct.RigControl* %217, %struct.RigControl** %ctrl_child, align 8, !dbg !3761
  br label %for.cond278, !dbg !3762

for.cond278:                                      ; preds = %for.inc293, %if.else
  %218 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !3763
  %tobool279 = icmp ne %struct.RigControl* %218, null, !dbg !3765
  br i1 %tobool279, label %for.body280, label %for.end295, !dbg !3765

for.body280:                                      ; preds = %for.cond278
  %219 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !3766
  %link281 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %219, i32 0, i32 5, !dbg !3769
  %220 = load %struct.EditBone*, %struct.EditBone** %link281, align 8, !dbg !3769
  %tobool282 = icmp ne %struct.EditBone* %220, null, !dbg !3766
  br i1 %tobool282, label %land.lhs.true283, label %if.end292, !dbg !3770

land.lhs.true283:                                 ; preds = %for.body280
  %221 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !3771
  %bone284 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %221, i32 0, i32 4, !dbg !3772
  %222 = load %struct.EditBone*, %struct.EditBone** %bone284, align 8, !dbg !3772
  %parent285 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %222, i32 0, i32 3, !dbg !3773
  %223 = load %struct.EditBone*, %struct.EditBone** %parent285, align 8, !dbg !3773
  %224 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3774
  %bone286 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %224, i32 0, i32 4, !dbg !3775
  %225 = load %struct.EditBone*, %struct.EditBone** %bone286, align 8, !dbg !3775
  %cmp287 = icmp eq %struct.EditBone* %223, %225, !dbg !3776
  br i1 %cmp287, label %if.then289, label %if.end292, !dbg !3777

if.then289:                                       ; preds = %land.lhs.true283
  %226 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3778
  %227 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !3780
  %bone290 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %227, i32 0, i32 4, !dbg !3781
  %228 = load %struct.EditBone*, %struct.EditBone** %bone290, align 8, !dbg !3781
  %call291 = call i32 @RIG_parentControl(%struct.RigControl* %226, %struct.EditBone* %228), !dbg !3782
  store i8 1, i8* %changed, align 1, !dbg !3783
  br label %for.end295, !dbg !3784

if.end292:                                        ; preds = %land.lhs.true283, %for.body280
  br label %for.inc293, !dbg !3785

for.inc293:                                       ; preds = %if.end292
  %229 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !3786
  %next294 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %229, i32 0, i32 0, !dbg !3787
  %230 = load %struct.RigControl*, %struct.RigControl** %next294, align 8, !dbg !3787
  store %struct.RigControl* %230, %struct.RigControl** %ctrl_child, align 8, !dbg !3788
  br label %for.cond278, !dbg !3789, !llvm.loop !3790

for.end295:                                       ; preds = %if.then289, %for.cond278
  br label %if.end296

if.end296:                                        ; preds = %for.end295, %if.then273
  br label %if.end297, !dbg !3792

if.end297:                                        ; preds = %if.end296, %for.end265
  br label %if.end298, !dbg !3793

if.end298:                                        ; preds = %if.end297, %for.body178
  br label %for.inc299, !dbg !3794

for.inc299:                                       ; preds = %if.end298
  %231 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3795
  %next300 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %231, i32 0, i32 0, !dbg !3796
  %232 = load %struct.RigControl*, %struct.RigControl** %next300, align 8, !dbg !3796
  store %struct.RigControl* %232, %struct.RigControl** %ctrl, align 8, !dbg !3797
  br label %for.cond176, !dbg !3798, !llvm.loop !3799

for.end301:                                       ; preds = %for.cond176
  br label %while.cond, !dbg !3578, !llvm.loop !3801

while.end:                                        ; preds = %while.cond
  %233 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3803
  %controls302 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %233, i32 0, i32 8, !dbg !3805
  %first303 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls302, i32 0, i32 0, !dbg !3806
  %234 = load i8*, i8** %first303, align 8, !dbg !3806
  %235 = bitcast i8* %234 to %struct.RigControl*, !dbg !3803
  store %struct.RigControl* %235, %struct.RigControl** %ctrl, align 8, !dbg !3807
  br label %for.cond304, !dbg !3808

for.cond304:                                      ; preds = %for.inc354, %while.end
  %236 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3809
  %tobool305 = icmp ne %struct.RigControl* %236, null, !dbg !3811
  br i1 %tobool305, label %for.body306, label %for.end356, !dbg !3811

for.body306:                                      ; preds = %for.cond304
  %237 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3812
  %flag = getelementptr inbounds %struct.RigControl, %struct.RigControl* %237, i32 0, i32 10, !dbg !3815
  %238 = load i32, i32* %flag, align 8, !dbg !3815
  %and = and i32 %238, 16, !dbg !3816
  %cmp307 = icmp eq i32 %and, 0, !dbg !3817
  br i1 %cmp307, label %if.then309, label %if.end353, !dbg !3818

if.then309:                                       ; preds = %for.body306
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %ghi, metadata !3819, metadata !DIExpression()), !dbg !3829
  %239 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !3830
  %bones_map310 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %239, i32 0, i32 14, !dbg !3831
  %240 = load %struct.GHash*, %struct.GHash** %bones_map310, align 8, !dbg !3831
  call void @BLI_ghashIterator_init(%struct.GHashIterator* %ghi, %struct.GHash* %240), !dbg !3832
  br label %for.cond311, !dbg !3833

for.cond311:                                      ; preds = %for.inc346, %if.then309
  %call312 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi), !dbg !3834
  %tobool313 = icmp ne i8 %call312, 0, !dbg !3837
  %lnot = xor i1 %tobool313, true, !dbg !3837
  br i1 %lnot, label %for.body314, label %for.end347, !dbg !3838

for.body314:                                      ; preds = %for.cond311
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone315, metadata !3839, metadata !DIExpression()), !dbg !3841
  %call316 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi), !dbg !3842
  %241 = bitcast i8* %call316 to %struct.EditBone*, !dbg !3843
  store %struct.EditBone* %241, %struct.EditBone** %bone315, align 8, !dbg !3841
  %242 = load %struct.EditBone*, %struct.EditBone** %bone315, align 8, !dbg !3844
  %parent317 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %242, i32 0, i32 3, !dbg !3846
  %243 = load %struct.EditBone*, %struct.EditBone** %parent317, align 8, !dbg !3846
  %244 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3847
  %bone318 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %244, i32 0, i32 4, !dbg !3848
  %245 = load %struct.EditBone*, %struct.EditBone** %bone318, align 8, !dbg !3848
  %cmp319 = icmp ne %struct.EditBone* %243, %245, !dbg !3849
  br i1 %cmp319, label %if.then321, label %if.end345, !dbg !3850

if.then321:                                       ; preds = %for.body314
  %246 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3851
  %bone322 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %246, i32 0, i32 4, !dbg !3854
  %247 = load %struct.EditBone*, %struct.EditBone** %bone322, align 8, !dbg !3854
  %tail323 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %247, i32 0, i32 8, !dbg !3855
  %arraydecay324 = getelementptr inbounds [3 x float], [3 x float]* %tail323, i64 0, i64 0, !dbg !3851
  %248 = load %struct.EditBone*, %struct.EditBone** %bone315, align 8, !dbg !3856
  %head325 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %248, i32 0, i32 7, !dbg !3857
  %arraydecay326 = getelementptr inbounds [3 x float], [3 x float]* %head325, i64 0, i64 0, !dbg !3856
  %call327 = call float @len_v3v3(float* %arraydecay324, float* %arraydecay326), !dbg !3858
  %cmp328 = fcmp olt float %call327, 0x3F847AE140000000, !dbg !3859
  br i1 %cmp328, label %if.then330, label %if.else331, !dbg !3860

if.then330:                                       ; preds = %if.then321
  %249 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3861
  %tail_mode = getelementptr inbounds %struct.RigControl, %struct.RigControl* %249, i32 0, i32 11, !dbg !3863
  store i32 2, i32* %tail_mode, align 4, !dbg !3864
  %250 = load %struct.EditBone*, %struct.EditBone** %bone315, align 8, !dbg !3865
  %251 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3866
  %link_tail = getelementptr inbounds %struct.RigControl, %struct.RigControl* %251, i32 0, i32 6, !dbg !3867
  store %struct.EditBone* %250, %struct.EditBone** %link_tail, align 8, !dbg !3868
  br label %for.end347, !dbg !3869

if.else331:                                       ; preds = %if.then321
  %252 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3870
  %bone332 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %252, i32 0, i32 4, !dbg !3872
  %253 = load %struct.EditBone*, %struct.EditBone** %bone332, align 8, !dbg !3872
  %tail333 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %253, i32 0, i32 8, !dbg !3873
  %arraydecay334 = getelementptr inbounds [3 x float], [3 x float]* %tail333, i64 0, i64 0, !dbg !3870
  %254 = load %struct.EditBone*, %struct.EditBone** %bone315, align 8, !dbg !3874
  %tail335 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %254, i32 0, i32 8, !dbg !3875
  %arraydecay336 = getelementptr inbounds [3 x float], [3 x float]* %tail335, i64 0, i64 0, !dbg !3874
  %call337 = call float @len_v3v3(float* %arraydecay334, float* %arraydecay336), !dbg !3876
  %cmp338 = fcmp olt float %call337, 0x3F847AE140000000, !dbg !3877
  br i1 %cmp338, label %if.then340, label %if.end343, !dbg !3878

if.then340:                                       ; preds = %if.else331
  %255 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3879
  %tail_mode341 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %255, i32 0, i32 11, !dbg !3881
  store i32 1, i32* %tail_mode341, align 4, !dbg !3882
  %256 = load %struct.EditBone*, %struct.EditBone** %bone315, align 8, !dbg !3883
  %257 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3884
  %link_tail342 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %257, i32 0, i32 6, !dbg !3885
  store %struct.EditBone* %256, %struct.EditBone** %link_tail342, align 8, !dbg !3886
  br label %for.end347, !dbg !3887

if.end343:                                        ; preds = %if.else331
  br label %if.end344

if.end344:                                        ; preds = %if.end343
  br label %if.end345, !dbg !3888

if.end345:                                        ; preds = %if.end344, %for.body314
  br label %for.inc346, !dbg !3889

for.inc346:                                       ; preds = %if.end345
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %ghi), !dbg !3890
  br label %for.cond311, !dbg !3891, !llvm.loop !3892

for.end347:                                       ; preds = %if.then340, %if.then330, %for.cond311
  %258 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3894
  %tail_mode348 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %258, i32 0, i32 11, !dbg !3896
  %259 = load i32, i32* %tail_mode348, align 4, !dbg !3896
  %cmp349 = icmp eq i32 %259, 0, !dbg !3897
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !3898

if.then351:                                       ; preds = %for.end347
  br label %if.end352, !dbg !3899

if.end352:                                        ; preds = %if.then351, %for.end347
  br label %if.end353, !dbg !3901

if.end353:                                        ; preds = %if.end352, %for.body306
  br label %for.inc354, !dbg !3902

for.inc354:                                       ; preds = %if.end353
  %260 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !3903
  %next355 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %260, i32 0, i32 0, !dbg !3904
  %261 = load %struct.RigControl*, %struct.RigControl** %next355, align 8, !dbg !3904
  store %struct.RigControl* %261, %struct.RigControl** %ctrl, align 8, !dbg !3905
  br label %for.cond304, !dbg !3906, !llvm.loop !3907

for.end356:                                       ; preds = %for.cond304
  ret void, !dbg !3909
}

declare dso_local zeroext i8 @BLI_isGraphCyclic(%struct.BGraph*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @exec_retargetArctoArc(%struct.TaskPool* %UNUSED_pool, i8* %taskdata, i32 %UNUSED_threadid) #0 !dbg !3910 {
entry:
  %UNUSED_pool.addr = alloca %struct.TaskPool*, align 8
  %taskdata.addr = alloca i8*, align 8
  %UNUSED_threadid.addr = alloca i32, align 4
  %p = alloca %struct.RetargetParam*, align 8
  %rigg = alloca %struct.RigGraph*, align 8
  %iarc = alloca %struct.RigArc*, align 8
  %C = alloca %struct.bContext*, align 8
  %inode_start = alloca %struct.RigNode*, align 8
  %earc = alloca %struct.ReebArc*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  %mode = alloca i32, align 4
  store %struct.TaskPool* %UNUSED_pool, %struct.TaskPool** %UNUSED_pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TaskPool** %UNUSED_pool.addr, metadata !3913, metadata !DIExpression()), !dbg !3914
  store i8* %taskdata, i8** %taskdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %taskdata.addr, metadata !3915, metadata !DIExpression()), !dbg !3916
  store i32 %UNUSED_threadid, i32* %UNUSED_threadid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_threadid.addr, metadata !3917, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.declare(metadata %struct.RetargetParam** %p, metadata !3919, metadata !DIExpression()), !dbg !3920
  %0 = load i8*, i8** %taskdata.addr, align 8, !dbg !3921
  %1 = bitcast i8* %0 to %struct.RetargetParam*, !dbg !3922
  store %struct.RetargetParam* %1, %struct.RetargetParam** %p, align 8, !dbg !3920
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg, metadata !3923, metadata !DIExpression()), !dbg !3924
  %2 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !3925
  %rigg1 = getelementptr inbounds %struct.RetargetParam, %struct.RetargetParam* %2, i32 0, i32 0, !dbg !3926
  %3 = load %struct.RigGraph*, %struct.RigGraph** %rigg1, align 8, !dbg !3926
  store %struct.RigGraph* %3, %struct.RigGraph** %rigg, align 8, !dbg !3924
  call void @llvm.dbg.declare(metadata %struct.RigArc** %iarc, metadata !3927, metadata !DIExpression()), !dbg !3928
  %4 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !3929
  %iarc2 = getelementptr inbounds %struct.RetargetParam, %struct.RetargetParam* %4, i32 0, i32 1, !dbg !3930
  %5 = load %struct.RigArc*, %struct.RigArc** %iarc2, align 8, !dbg !3930
  store %struct.RigArc* %5, %struct.RigArc** %iarc, align 8, !dbg !3928
  call void @llvm.dbg.declare(metadata %struct.bContext** %C, metadata !3931, metadata !DIExpression()), !dbg !3932
  %6 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !3933
  %context = getelementptr inbounds %struct.RetargetParam, %struct.RetargetParam* %6, i32 0, i32 3, !dbg !3934
  %7 = load %struct.bContext*, %struct.bContext** %context, align 8, !dbg !3934
  store %struct.bContext* %7, %struct.bContext** %C, align 8, !dbg !3932
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode_start, metadata !3935, metadata !DIExpression()), !dbg !3936
  %8 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !3937
  %inode_start3 = getelementptr inbounds %struct.RetargetParam, %struct.RetargetParam* %8, i32 0, i32 2, !dbg !3938
  %9 = load %struct.RigNode*, %struct.RigNode** %inode_start3, align 8, !dbg !3938
  store %struct.RigNode* %9, %struct.RigNode** %inode_start, align 8, !dbg !3936
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc, metadata !3939, metadata !DIExpression()), !dbg !3940
  %10 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !3941
  %link_mesh = getelementptr inbounds %struct.RigArc, %struct.RigArc* %10, i32 0, i32 11, !dbg !3942
  %11 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh, align 8, !dbg !3942
  store %struct.ReebArc* %11, %struct.ReebArc** %earc, align 8, !dbg !3940
  %12 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !3943
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %12, i32 0, i32 9, !dbg !3945
  %call = call i32 @BLI_countlist(%struct.ListBase* %edges), !dbg !3946
  %cmp = icmp eq i32 %call, 1, !dbg !3947
  br i1 %cmp, label %if.then, label %if.else21, !dbg !3948

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !3949, metadata !DIExpression()), !dbg !3951
  %13 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !3952
  %edges4 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %13, i32 0, i32 9, !dbg !3953
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges4, i32 0, i32 0, !dbg !3954
  %14 = load i8*, i8** %first, align 8, !dbg !3954
  %15 = bitcast i8* %14 to %struct.RigEdge*, !dbg !3952
  store %struct.RigEdge* %15, %struct.RigEdge** %edge, align 8, !dbg !3951
  %16 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !3955
  %17 = load %struct.RigNode*, %struct.RigNode** %inode_start, align 8, !dbg !3957
  %call5 = call i32 @testFlipArc(%struct.RigArc* %16, %struct.RigNode* %17), !dbg !3958
  %tobool = icmp ne i32 %call5, 0, !dbg !3958
  br i1 %tobool, label %if.then6, label %if.else, !dbg !3959

if.then6:                                         ; preds = %if.then
  %18 = load %struct.bContext*, %struct.bContext** %C, align 8, !dbg !3960
  %19 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !3962
  %20 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3963
  %21 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !3964
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %21, i32 0, i32 3, !dbg !3965
  %22 = load %struct.ReebNode*, %struct.ReebNode** %tail, align 8, !dbg !3965
  %p7 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %22, i32 0, i32 2, !dbg !3966
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p7, i64 0, i64 0, !dbg !3964
  %23 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !3967
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %23, i32 0, i32 2, !dbg !3968
  %24 = load %struct.ReebNode*, %struct.ReebNode** %head, align 8, !dbg !3968
  %p8 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %24, i32 0, i32 2, !dbg !3969
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %p8, i64 0, i64 0, !dbg !3967
  %25 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !3970
  %head10 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %25, i32 0, i32 2, !dbg !3971
  %26 = load %struct.ReebNode*, %struct.ReebNode** %head10, align 8, !dbg !3971
  %no = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %26, i32 0, i32 10, !dbg !3972
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !3970
  call void @repositionBone(%struct.bContext* %18, %struct.RigGraph* %19, %struct.RigEdge* %20, float* %arraydecay, float* %arraydecay9, float* %arraydecay11), !dbg !3973
  br label %if.end, !dbg !3974

if.else:                                          ; preds = %if.then
  %27 = load %struct.bContext*, %struct.bContext** %C, align 8, !dbg !3975
  %28 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !3977
  %29 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !3978
  %30 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !3979
  %head12 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %30, i32 0, i32 2, !dbg !3980
  %31 = load %struct.ReebNode*, %struct.ReebNode** %head12, align 8, !dbg !3980
  %p13 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %31, i32 0, i32 2, !dbg !3981
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %p13, i64 0, i64 0, !dbg !3979
  %32 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !3982
  %tail15 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %32, i32 0, i32 3, !dbg !3983
  %33 = load %struct.ReebNode*, %struct.ReebNode** %tail15, align 8, !dbg !3983
  %p16 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %33, i32 0, i32 2, !dbg !3984
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %p16, i64 0, i64 0, !dbg !3982
  %34 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !3985
  %tail18 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %34, i32 0, i32 3, !dbg !3986
  %35 = load %struct.ReebNode*, %struct.ReebNode** %tail18, align 8, !dbg !3986
  %no19 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %35, i32 0, i32 10, !dbg !3987
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %no19, i64 0, i64 0, !dbg !3985
  call void @repositionBone(%struct.bContext* %27, %struct.RigGraph* %28, %struct.RigEdge* %29, float* %arraydecay14, float* %arraydecay17, float* %arraydecay20), !dbg !3988
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end27, !dbg !3989

if.else21:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !3990, metadata !DIExpression()), !dbg !3993
  %36 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !3994
  %call22 = call i32 @detectArcRetargetMode(%struct.RigArc* %36), !dbg !3995
  store i32 %call22, i32* %mode, align 4, !dbg !3993
  %37 = load i32, i32* %mode, align 4, !dbg !3996
  %cmp23 = icmp eq i32 %37, 1, !dbg !3998
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !3999

if.then24:                                        ; preds = %if.else21
  %38 = load %struct.bContext*, %struct.bContext** %C, align 8, !dbg !4000
  %39 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !4002
  %40 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !4003
  %41 = load %struct.RigNode*, %struct.RigNode** %inode_start, align 8, !dbg !4004
  call void @retargetArctoArcAggresive(%struct.bContext* %38, %struct.RigGraph* %39, %struct.RigArc* %40, %struct.RigNode* %41), !dbg !4005
  br label %if.end26, !dbg !4006

if.else25:                                        ; preds = %if.else21
  %42 = load %struct.bContext*, %struct.bContext** %C, align 8, !dbg !4007
  %43 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !4009
  %44 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !4010
  %45 = load %struct.RigNode*, %struct.RigNode** %inode_start, align 8, !dbg !4011
  call void @retargetArctoArcLength(%struct.bContext* %42, %struct.RigGraph* %43, %struct.RigArc* %44, %struct.RigNode* %45), !dbg !4012
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  ret void, !dbg !4013
}

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @testFlipArc(%struct.RigArc* %iarc, %struct.RigNode* %inode_start) #0 !dbg !4014 {
entry:
  %retval = alloca i32, align 4
  %iarc.addr = alloca %struct.RigArc*, align 8
  %inode_start.addr = alloca %struct.RigNode*, align 8
  %earc = alloca %struct.ReebArc*, align 8
  %enode_start = alloca %struct.ReebNode*, align 8
  store %struct.RigArc* %iarc, %struct.RigArc** %iarc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %iarc.addr, metadata !4017, metadata !DIExpression()), !dbg !4018
  store %struct.RigNode* %inode_start, %struct.RigNode** %inode_start.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode_start.addr, metadata !4019, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc, metadata !4021, metadata !DIExpression()), !dbg !4022
  %0 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4023
  %link_mesh = getelementptr inbounds %struct.RigArc, %struct.RigArc* %0, i32 0, i32 11, !dbg !4024
  %1 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh, align 8, !dbg !4024
  store %struct.ReebArc* %1, %struct.ReebArc** %earc, align 8, !dbg !4022
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %enode_start, metadata !4025, metadata !DIExpression()), !dbg !4026
  %2 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4027
  %3 = load %struct.RigNode*, %struct.RigNode** %inode_start.addr, align 8, !dbg !4028
  %link_mesh1 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %3, i32 0, i32 10, !dbg !4029
  %4 = load %struct.ReebNode*, %struct.ReebNode** %link_mesh1, align 8, !dbg !4029
  %call = call %struct.ReebNode* @BIF_NodeFromIndex(%struct.ReebArc* %2, %struct.ReebNode* %4), !dbg !4030
  store %struct.ReebNode* %call, %struct.ReebNode** %enode_start, align 8, !dbg !4026
  %5 = load %struct.ReebNode*, %struct.ReebNode** %enode_start, align 8, !dbg !4031
  %6 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4033
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %6, i32 0, i32 2, !dbg !4034
  %7 = load %struct.ReebNode*, %struct.ReebNode** %head, align 8, !dbg !4034
  %cmp = icmp eq %struct.ReebNode* %5, %7, !dbg !4035
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4036

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.RigNode*, %struct.RigNode** %inode_start.addr, align 8, !dbg !4037
  %9 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4038
  %head2 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %9, i32 0, i32 2, !dbg !4039
  %10 = load %struct.RigNode*, %struct.RigNode** %head2, align 8, !dbg !4039
  %cmp3 = icmp eq %struct.RigNode* %8, %10, !dbg !4040
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !4041

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %11 = load %struct.ReebNode*, %struct.ReebNode** %enode_start, align 8, !dbg !4042
  %12 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4043
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %12, i32 0, i32 3, !dbg !4044
  %13 = load %struct.ReebNode*, %struct.ReebNode** %tail, align 8, !dbg !4044
  %cmp4 = icmp eq %struct.ReebNode* %11, %13, !dbg !4045
  br i1 %cmp4, label %land.lhs.true5, label %if.else, !dbg !4046

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %14 = load %struct.RigNode*, %struct.RigNode** %inode_start.addr, align 8, !dbg !4047
  %15 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4048
  %tail6 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %15, i32 0, i32 3, !dbg !4049
  %16 = load %struct.RigNode*, %struct.RigNode** %tail6, align 8, !dbg !4049
  %cmp7 = icmp eq %struct.RigNode* %14, %16, !dbg !4050
  br i1 %cmp7, label %if.then, label %if.else, !dbg !4051

if.then:                                          ; preds = %land.lhs.true5, %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4052
  br label %return, !dbg !4052

if.else:                                          ; preds = %land.lhs.true5, %lor.lhs.false
  store i32 1, i32* %retval, align 4, !dbg !4054
  br label %return, !dbg !4054

return:                                           ; preds = %if.else, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !4056
  ret i32 %17, !dbg !4056
}

; Function Attrs: noinline nounwind uwtable
define internal void @repositionBone(%struct.bContext* %C, %struct.RigGraph* %rigg, %struct.RigEdge* %edge, float* %vec0, float* %vec1, float* %up_axis) #0 !dbg !4057 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %edge.addr = alloca %struct.RigEdge*, align 8
  %vec0.addr = alloca float*, align 8
  %vec1.addr = alloca float*, align 8
  %up_axis.addr = alloca float*, align 8
  %scene = alloca %struct.Scene*, align 8
  %bone = alloca %struct.EditBone*, align 8
  %ctrl = alloca %struct.RigControl*, align 8
  %qrot = alloca [4 x float], align 16
  %resize = alloca float, align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %l1 = alloca float, align 4
  %l2 = alloca float, align 4
  %qroll = alloca [4 x float], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4060, metadata !DIExpression()), !dbg !4061
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !4062, metadata !DIExpression()), !dbg !4063
  store %struct.RigEdge* %edge, %struct.RigEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge.addr, metadata !4064, metadata !DIExpression()), !dbg !4065
  store float* %vec0, float** %vec0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec0.addr, metadata !4066, metadata !DIExpression()), !dbg !4067
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !4068, metadata !DIExpression()), !dbg !4069
  store float* %up_axis, float** %up_axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %up_axis.addr, metadata !4070, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4072, metadata !DIExpression()), !dbg !4073
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4074
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !4075
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !4073
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone, metadata !4076, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl, metadata !4078, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.declare(metadata [4 x float]* %qrot, metadata !4080, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.declare(metadata float* %resize, metadata !4082, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !4084, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !4086, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.declare(metadata float* %l1, metadata !4088, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.declare(metadata float* %l2, metadata !4090, metadata !DIExpression()), !dbg !4091
  %1 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !4092
  %bone1 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %1, i32 0, i32 7, !dbg !4093
  %2 = load %struct.EditBone*, %struct.EditBone** %bone1, align 8, !dbg !4093
  store %struct.EditBone* %2, %struct.EditBone** %bone, align 8, !dbg !4094
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !4095
  %3 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !4096
  %tail = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %3, i32 0, i32 3, !dbg !4097
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !4096
  %4 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !4098
  %head = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %4, i32 0, i32 2, !dbg !4099
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !4098
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay2, float* %arraydecay3), !dbg !4100
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !4101
  %5 = load float*, float** %vec1.addr, align 8, !dbg !4102
  %6 = load float*, float** %vec0.addr, align 8, !dbg !4103
  call void @sub_v3_v3v3(float* %arraydecay4, float* %5, float* %6), !dbg !4104
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !4105
  %call6 = call float @normalize_v3(float* %arraydecay5), !dbg !4106
  store float %call6, float* %l1, align 4, !dbg !4107
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !4108
  %call8 = call float @normalize_v3(float* %arraydecay7), !dbg !4109
  store float %call8, float* %l2, align 4, !dbg !4110
  %7 = load float, float* %l2, align 4, !dbg !4111
  %8 = load float, float* %l1, align 4, !dbg !4112
  %div = fdiv float %7, %8, !dbg !4113
  store float %div, float* %resize, align 4, !dbg !4114
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %qrot, i64 0, i64 0, !dbg !4115
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !4116
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !4117
  call void @rotation_between_vecs_to_quat(float* %arraydecay9, float* %arraydecay10, float* %arraydecay11), !dbg !4118
  %9 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4119
  %head12 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %9, i32 0, i32 7, !dbg !4120
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %head12, i64 0, i64 0, !dbg !4119
  %10 = load float*, float** %vec0.addr, align 8, !dbg !4121
  call void @copy_v3_v3(float* %arraydecay13, float* %10), !dbg !4122
  %11 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4123
  %tail14 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %11, i32 0, i32 8, !dbg !4124
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %tail14, i64 0, i64 0, !dbg !4123
  %12 = load float*, float** %vec1.addr, align 8, !dbg !4125
  call void @copy_v3_v3(float* %arraydecay15, float* %12), !dbg !4126
  %13 = load float*, float** %up_axis.addr, align 8, !dbg !4127
  %call16 = call zeroext i8 @is_zero_v3(float* %13), !dbg !4129
  %tobool = icmp ne i8 %call16, 0, !dbg !4129
  br i1 %tobool, label %if.else40, label %if.then, !dbg !4130

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x float]* %qroll, metadata !4131, metadata !DIExpression()), !dbg !4133
  %14 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4134
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 20, !dbg !4136
  %15 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !4136
  %skgen_retarget_roll = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %15, i32 0, i32 46, !dbg !4137
  %16 = load i8, i8* %skgen_retarget_roll, align 4, !dbg !4137
  %conv = zext i8 %16 to i32, !dbg !4134
  %cmp = icmp eq i32 %conv, 1, !dbg !4138
  br i1 %cmp, label %if.then18, label %if.else, !dbg !4139

if.then18:                                        ; preds = %if.then
  %17 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4140
  %18 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !4142
  %up_axis19 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %18, i32 0, i32 8, !dbg !4143
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %up_axis19, i64 0, i64 0, !dbg !4142
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %qrot, i64 0, i64 0, !dbg !4144
  %arraydecay22 = getelementptr inbounds [4 x float], [4 x float]* %qroll, i64 0, i64 0, !dbg !4145
  %19 = load float*, float** %up_axis.addr, align 8, !dbg !4146
  %call23 = call float @rollBoneByQuatAligned(%struct.EditBone* %17, float* %arraydecay20, float* %arraydecay21, float* %arraydecay22, float* %19), !dbg !4147
  %20 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4148
  %roll = getelementptr inbounds %struct.EditBone, %struct.EditBone* %20, i32 0, i32 6, !dbg !4149
  store float %call23, float* %roll, align 8, !dbg !4150
  br label %if.end36, !dbg !4151

if.else:                                          ; preds = %if.then
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4152
  %toolsettings24 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 20, !dbg !4154
  %22 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings24, align 8, !dbg !4154
  %skgen_retarget_roll25 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %22, i32 0, i32 46, !dbg !4155
  %23 = load i8, i8* %skgen_retarget_roll25, align 4, !dbg !4155
  %conv26 = zext i8 %23 to i32, !dbg !4152
  %cmp27 = icmp eq i32 %conv26, 2, !dbg !4156
  br i1 %cmp27, label %if.then29, label %if.else34, !dbg !4157

if.then29:                                        ; preds = %if.else
  %24 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !4158
  %25 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !4160
  %prev = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %25, i32 0, i32 1, !dbg !4161
  %26 = load %struct.RigEdge*, %struct.RigEdge** %prev, align 8, !dbg !4161
  %arraydecay30 = getelementptr inbounds [4 x float], [4 x float]* %qrot, i64 0, i64 0, !dbg !4162
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %qroll, i64 0, i64 0, !dbg !4163
  %27 = load float*, float** %up_axis.addr, align 8, !dbg !4164
  %call32 = call float @rollBoneByQuatJoint(%struct.RigEdge* %24, %struct.RigEdge* %26, float* %arraydecay30, float* %arraydecay31, float* %27), !dbg !4165
  %28 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4166
  %roll33 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %28, i32 0, i32 6, !dbg !4167
  store float %call32, float* %roll33, align 8, !dbg !4168
  br label %if.end, !dbg !4169

if.else34:                                        ; preds = %if.else
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %qroll, i64 0, i64 0, !dbg !4170
  call void @unit_qt(float* %arraydecay35), !dbg !4172
  br label %if.end

if.end:                                           ; preds = %if.else34, %if.then29
  br label %if.end36

if.end36:                                         ; preds = %if.end, %if.then18
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %qrot, i64 0, i64 0, !dbg !4173
  %arraydecay38 = getelementptr inbounds [4 x float], [4 x float]* %qroll, i64 0, i64 0, !dbg !4174
  %arraydecay39 = getelementptr inbounds [4 x float], [4 x float]* %qrot, i64 0, i64 0, !dbg !4175
  call void @mul_qt_qtqt(float* %arraydecay37, float* %arraydecay38, float* %arraydecay39), !dbg !4176
  br label %if.end46, !dbg !4177

if.else40:                                        ; preds = %entry
  %29 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4178
  %30 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !4180
  %up_axis41 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %30, i32 0, i32 8, !dbg !4181
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %up_axis41, i64 0, i64 0, !dbg !4180
  %arraydecay43 = getelementptr inbounds [4 x float], [4 x float]* %qrot, i64 0, i64 0, !dbg !4182
  %call44 = call float @rollBoneByQuat(%struct.EditBone* %29, float* %arraydecay42, float* %arraydecay43), !dbg !4183
  %31 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4184
  %roll45 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %31, i32 0, i32 6, !dbg !4185
  store float %call44, float* %roll45, align 8, !dbg !4186
  br label %if.end46

if.end46:                                         ; preds = %if.else40, %if.end36
  %32 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !4187
  %controls = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %32, i32 0, i32 8, !dbg !4189
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls, i32 0, i32 0, !dbg !4190
  %33 = load i8*, i8** %first, align 8, !dbg !4190
  %34 = bitcast i8* %33 to %struct.RigControl*, !dbg !4187
  store %struct.RigControl* %34, %struct.RigControl** %ctrl, align 8, !dbg !4191
  br label %for.cond, !dbg !4192

for.cond:                                         ; preds = %for.inc, %if.end46
  %35 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !4193
  %tobool47 = icmp ne %struct.RigControl* %35, null, !dbg !4195
  br i1 %tobool47, label %for.body, label %for.end, !dbg !4195

for.body:                                         ; preds = %for.cond
  %36 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !4196
  %link = getelementptr inbounds %struct.RigControl, %struct.RigControl* %36, i32 0, i32 5, !dbg !4199
  %37 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !4199
  %38 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4200
  %cmp48 = icmp eq %struct.EditBone* %37, %38, !dbg !4201
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !4202

if.then50:                                        ; preds = %for.body
  %39 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !4203
  %40 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !4205
  %41 = load float*, float** %vec0.addr, align 8, !dbg !4206
  %42 = load float*, float** %vec1.addr, align 8, !dbg !4207
  %arraydecay51 = getelementptr inbounds [4 x float], [4 x float]* %qrot, i64 0, i64 0, !dbg !4208
  %43 = load float, float* %resize, align 4, !dbg !4209
  call void @repositionControl(%struct.RigGraph* %39, %struct.RigControl* %40, float* %41, float* %42, float* %arraydecay51, float %43), !dbg !4210
  br label %if.end52, !dbg !4211

if.end52:                                         ; preds = %if.then50, %for.body
  %44 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !4212
  %link_tail = getelementptr inbounds %struct.RigControl, %struct.RigControl* %44, i32 0, i32 6, !dbg !4214
  %45 = load %struct.EditBone*, %struct.EditBone** %link_tail, align 8, !dbg !4214
  %46 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4215
  %cmp53 = icmp eq %struct.EditBone* %45, %46, !dbg !4216
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !4217

if.then55:                                        ; preds = %if.end52
  %47 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !4218
  %48 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !4220
  call void @repositionTailControl(%struct.RigGraph* %47, %struct.RigControl* %48), !dbg !4221
  br label %if.end56, !dbg !4222

if.end56:                                         ; preds = %if.then55, %if.end52
  br label %for.inc, !dbg !4223

for.inc:                                          ; preds = %if.end56
  %49 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !4224
  %next = getelementptr inbounds %struct.RigControl, %struct.RigControl* %49, i32 0, i32 0, !dbg !4225
  %50 = load %struct.RigControl*, %struct.RigControl** %next, align 8, !dbg !4225
  store %struct.RigControl* %50, %struct.RigControl** %ctrl, align 8, !dbg !4226
  br label %for.cond, !dbg !4227, !llvm.loop !4228

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4230
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @detectArcRetargetMode(%struct.RigArc* %iarc) #0 !dbg !4231 {
entry:
  %iarc.addr = alloca %struct.RigArc*, align 8
  %mode = alloca i32, align 4
  %earc = alloca %struct.ReebArc*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  %large_angle = alloca i32, align 4
  %avg_angle = alloca float, align 4
  %nb_edges = alloca i32, align 4
  store %struct.RigArc* %iarc, %struct.RigArc** %iarc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %iarc.addr, metadata !4234, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !4236, metadata !DIExpression()), !dbg !4237
  store i32 1, i32* %mode, align 4, !dbg !4237
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc, metadata !4238, metadata !DIExpression()), !dbg !4239
  %0 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4240
  %link_mesh = getelementptr inbounds %struct.RigArc, %struct.RigArc* %0, i32 0, i32 11, !dbg !4241
  %1 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh, align 8, !dbg !4241
  store %struct.ReebArc* %1, %struct.ReebArc** %earc, align 8, !dbg !4239
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !4242, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.declare(metadata i32* %large_angle, metadata !4244, metadata !DIExpression()), !dbg !4245
  store i32 0, i32* %large_angle, align 4, !dbg !4245
  call void @llvm.dbg.declare(metadata float* %avg_angle, metadata !4246, metadata !DIExpression()), !dbg !4247
  store float 0.000000e+00, float* %avg_angle, align 4, !dbg !4247
  call void @llvm.dbg.declare(metadata i32* %nb_edges, metadata !4248, metadata !DIExpression()), !dbg !4249
  store i32 0, i32* %nb_edges, align 4, !dbg !4249
  %2 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4250
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %2, i32 0, i32 9, !dbg !4252
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !4253
  %3 = load i8*, i8** %first, align 8, !dbg !4253
  %4 = bitcast i8* %3 to %struct.RigEdge*, !dbg !4250
  store %struct.RigEdge* %4, %struct.RigEdge** %edge, align 8, !dbg !4254
  br label %for.cond, !dbg !4255

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4256
  %tobool = icmp ne %struct.RigEdge* %5, null, !dbg !4258
  br i1 %tobool, label %for.body, label %for.end, !dbg !4258

for.body:                                         ; preds = %for.cond
  %6 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4259
  %angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %6, i32 0, i32 5, !dbg !4261
  %7 = load float, float* %angle, align 4, !dbg !4261
  %8 = load float, float* %avg_angle, align 4, !dbg !4262
  %add = fadd float %8, %7, !dbg !4262
  store float %add, float* %avg_angle, align 4, !dbg !4262
  %9 = load i32, i32* %nb_edges, align 4, !dbg !4263
  %inc = add nsw i32 %9, 1, !dbg !4263
  store i32 %inc, i32* %nb_edges, align 4, !dbg !4263
  br label %for.inc, !dbg !4264

for.inc:                                          ; preds = %for.body
  %10 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4265
  %next = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %10, i32 0, i32 0, !dbg !4266
  %11 = load %struct.RigEdge*, %struct.RigEdge** %next, align 8, !dbg !4266
  store %struct.RigEdge* %11, %struct.RigEdge** %edge, align 8, !dbg !4267
  br label %for.cond, !dbg !4268, !llvm.loop !4269

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* %nb_edges, align 4, !dbg !4271
  %sub = sub nsw i32 %12, 1, !dbg !4272
  %conv = sitofp i32 %sub to float, !dbg !4271
  %13 = load float, float* %avg_angle, align 4, !dbg !4273
  %div = fdiv float %13, %conv, !dbg !4273
  store float %div, float* %avg_angle, align 4, !dbg !4273
  %14 = load i32, i32* %nb_edges, align 4, !dbg !4274
  %cmp = icmp sgt i32 %14, 2, !dbg !4276
  br i1 %cmp, label %if.then, label %if.else, !dbg !4277

if.then:                                          ; preds = %for.end
  %15 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4278
  %edges2 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %15, i32 0, i32 9, !dbg !4281
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges2, i32 0, i32 0, !dbg !4282
  %16 = load i8*, i8** %first3, align 8, !dbg !4282
  %17 = bitcast i8* %16 to %struct.RigEdge*, !dbg !4278
  store %struct.RigEdge* %17, %struct.RigEdge** %edge, align 8, !dbg !4283
  br label %for.cond4, !dbg !4284

for.cond4:                                        ; preds = %for.inc12, %if.then
  %18 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4285
  %tobool5 = icmp ne %struct.RigEdge* %18, null, !dbg !4287
  br i1 %tobool5, label %for.body6, label %for.end14, !dbg !4287

for.body6:                                        ; preds = %for.cond4
  %19 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4288
  %angle7 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %19, i32 0, i32 5, !dbg !4291
  %20 = load float, float* %angle7, align 4, !dbg !4291
  %21 = load float, float* %avg_angle, align 4, !dbg !4292
  %sub8 = fsub float %20, %21, !dbg !4293
  %22 = call float @llvm.fabs.f32(float %sub8), !dbg !4294
  %cmp9 = fcmp ogt float %22, 0x3FE0C15240000000, !dbg !4295
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !4296

if.then11:                                        ; preds = %for.body6
  store i32 1, i32* %large_angle, align 4, !dbg !4297
  br label %if.end, !dbg !4299

if.end:                                           ; preds = %if.then11, %for.body6
  br label %for.inc12, !dbg !4300

for.inc12:                                        ; preds = %if.end
  %23 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4301
  %next13 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %23, i32 0, i32 0, !dbg !4302
  %24 = load %struct.RigEdge*, %struct.RigEdge** %next13, align 8, !dbg !4302
  store %struct.RigEdge* %24, %struct.RigEdge** %edge, align 8, !dbg !4303
  br label %for.cond4, !dbg !4304, !llvm.loop !4305

for.end14:                                        ; preds = %for.cond4
  br label %if.end21, !dbg !4307

if.else:                                          ; preds = %for.end
  %25 = load i32, i32* %nb_edges, align 4, !dbg !4308
  %cmp15 = icmp eq i32 %25, 2, !dbg !4310
  br i1 %cmp15, label %land.lhs.true, label %if.end20, !dbg !4311

land.lhs.true:                                    ; preds = %if.else
  %26 = load float, float* %avg_angle, align 4, !dbg !4312
  %cmp17 = fcmp ogt float %26, 0.000000e+00, !dbg !4313
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4314

if.then19:                                        ; preds = %land.lhs.true
  store i32 1, i32* %large_angle, align 4, !dbg !4315
  br label %if.end20, !dbg !4317

if.end20:                                         ; preds = %if.then19, %land.lhs.true, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %for.end14
  %27 = load i32, i32* %large_angle, align 4, !dbg !4318
  %cmp22 = icmp eq i32 %27, 0, !dbg !4320
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !4321

if.then24:                                        ; preds = %if.end21
  store i32 0, i32* %mode, align 4, !dbg !4322
  br label %if.end25, !dbg !4324

if.end25:                                         ; preds = %if.then24, %if.end21
  %28 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4325
  %bcount = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %28, i32 0, i32 10, !dbg !4327
  %29 = load i32, i32* %bcount, align 8, !dbg !4327
  %30 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4328
  %count = getelementptr inbounds %struct.RigArc, %struct.RigArc* %30, i32 0, i32 10, !dbg !4329
  %31 = load i32, i32* %count, align 8, !dbg !4329
  %sub26 = sub nsw i32 %31, 1, !dbg !4330
  %cmp27 = icmp sle i32 %29, %sub26, !dbg !4331
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !4332

if.then29:                                        ; preds = %if.end25
  store i32 0, i32* %mode, align 4, !dbg !4333
  br label %if.end30, !dbg !4335

if.end30:                                         ; preds = %if.then29, %if.end25
  %32 = load i32, i32* %mode, align 4, !dbg !4336
  ret i32 %32, !dbg !4337
}

; Function Attrs: noinline nounwind uwtable
define internal void @retargetArctoArcAggresive(%struct.bContext* %C, %struct.RigGraph* %rigg, %struct.RigArc* %iarc, %struct.RigNode* %inode_start) #0 !dbg !4338 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %iarc.addr = alloca %struct.RigArc*, align 8
  %inode_start.addr = alloca %struct.RigNode*, align 8
  %arc_iter = alloca %struct.ReebArcIterator, align 8
  %iter = alloca %struct.BArcIterator*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  %node_start = alloca %struct.ReebNode*, align 8
  %node_end = alloca %struct.ReebNode*, align 8
  %earc = alloca %struct.ReebArc*, align 8
  %angle_weight = alloca float, align 4
  %length_weight = alloca float, align 4
  %distance_weight = alloca float, align 4
  %vec0 = alloca float*, align 8
  %vec1 = alloca float*, align 8
  %best_positions = alloca i32*, align 8
  %nb_edges = alloca i32, align 4
  %nb_joints = alloca i32, align 4
  %method = alloca i32, align 4
  %i = alloca i32, align 4
  %nb_positions = alloca i32, align 4
  %nb_memo_nodes = alloca i32, align 4
  %table = alloca %struct.MemoNode*, align 8
  %positions_cache = alloca float**, align 8
  %bucket = alloca %struct.EmbedBucket*, align 8
  %no = alloca float*, align 8
  %bucket62 = alloca %struct.EmbedBucket*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4341, metadata !DIExpression()), !dbg !4342
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !4343, metadata !DIExpression()), !dbg !4344
  store %struct.RigArc* %iarc, %struct.RigArc** %iarc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %iarc.addr, metadata !4345, metadata !DIExpression()), !dbg !4346
  store %struct.RigNode* %inode_start, %struct.RigNode** %inode_start.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode_start.addr, metadata !4347, metadata !DIExpression()), !dbg !4348
  call void @llvm.dbg.declare(metadata %struct.ReebArcIterator* %arc_iter, metadata !4349, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter, metadata !4370, metadata !DIExpression()), !dbg !4371
  %0 = bitcast %struct.ReebArcIterator* %arc_iter to %struct.BArcIterator*, !dbg !4372
  store %struct.BArcIterator* %0, %struct.BArcIterator** %iter, align 8, !dbg !4371
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !4373, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %node_start, metadata !4375, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %node_end, metadata !4377, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc, metadata !4379, metadata !DIExpression()), !dbg !4380
  %1 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4381
  %link_mesh = getelementptr inbounds %struct.RigArc, %struct.RigArc* %1, i32 0, i32 11, !dbg !4382
  %2 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh, align 8, !dbg !4382
  store %struct.ReebArc* %2, %struct.ReebArc** %earc, align 8, !dbg !4380
  call void @llvm.dbg.declare(metadata float* %angle_weight, metadata !4383, metadata !DIExpression()), !dbg !4384
  store float 1.000000e+00, float* %angle_weight, align 4, !dbg !4384
  call void @llvm.dbg.declare(metadata float* %length_weight, metadata !4385, metadata !DIExpression()), !dbg !4386
  store float 1.000000e+00, float* %length_weight, align 4, !dbg !4386
  call void @llvm.dbg.declare(metadata float* %distance_weight, metadata !4387, metadata !DIExpression()), !dbg !4388
  store float 1.000000e+00, float* %distance_weight, align 4, !dbg !4388
  call void @llvm.dbg.declare(metadata float** %vec0, metadata !4389, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.declare(metadata float** %vec1, metadata !4391, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.declare(metadata i32** %best_positions, metadata !4393, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.declare(metadata i32* %nb_edges, metadata !4396, metadata !DIExpression()), !dbg !4397
  %3 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4398
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %3, i32 0, i32 9, !dbg !4399
  %call = call i32 @BLI_countlist(%struct.ListBase* %edges), !dbg !4400
  store i32 %call, i32* %nb_edges, align 4, !dbg !4397
  call void @llvm.dbg.declare(metadata i32* %nb_joints, metadata !4401, metadata !DIExpression()), !dbg !4402
  %4 = load i32, i32* %nb_edges, align 4, !dbg !4403
  %sub = sub nsw i32 %4, 1, !dbg !4404
  store i32 %sub, i32* %nb_joints, align 4, !dbg !4402
  call void @llvm.dbg.declare(metadata i32* %method, metadata !4405, metadata !DIExpression()), !dbg !4407
  store i32 1, i32* %method, align 4, !dbg !4407
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4408, metadata !DIExpression()), !dbg !4409
  %5 = load i32, i32* %nb_joints, align 4, !dbg !4410
  %6 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4412
  %bcount = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %6, i32 0, i32 10, !dbg !4413
  %7 = load i32, i32* %bcount, align 8, !dbg !4413
  %cmp = icmp sgt i32 %5, %7, !dbg !4414
  br i1 %cmp, label %if.then, label %if.end, !dbg !4415

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0)), !dbg !4416
  br label %return, !dbg !4418

if.end:                                           ; preds = %entry
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4419
  %9 = load i32, i32* %nb_joints, align 4, !dbg !4420
  %conv = sext i32 %9 to i64, !dbg !4420
  %mul = mul i64 4, %conv, !dbg !4421
  %call2 = call i8* %8(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0)), !dbg !4419
  %10 = bitcast i8* %call2 to i32*, !dbg !4419
  store i32* %10, i32** %best_positions, align 8, !dbg !4422
  %11 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4423
  %12 = load %struct.RigNode*, %struct.RigNode** %inode_start.addr, align 8, !dbg !4425
  %call3 = call i32 @testFlipArc(%struct.RigArc* %11, %struct.RigNode* %12), !dbg !4426
  %tobool = icmp ne i32 %call3, 0, !dbg !4426
  br i1 %tobool, label %if.then4, label %if.else, !dbg !4427

if.then4:                                         ; preds = %if.end
  %13 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4428
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %13, i32 0, i32 3, !dbg !4430
  %14 = load %struct.ReebNode*, %struct.ReebNode** %tail, align 8, !dbg !4430
  store %struct.ReebNode* %14, %struct.ReebNode** %node_start, align 8, !dbg !4431
  %15 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4432
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %15, i32 0, i32 2, !dbg !4433
  %16 = load %struct.ReebNode*, %struct.ReebNode** %head, align 8, !dbg !4433
  store %struct.ReebNode* %16, %struct.ReebNode** %node_end, align 8, !dbg !4434
  br label %if.end7, !dbg !4435

if.else:                                          ; preds = %if.end
  %17 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4436
  %head5 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %17, i32 0, i32 2, !dbg !4438
  %18 = load %struct.ReebNode*, %struct.ReebNode** %head5, align 8, !dbg !4438
  store %struct.ReebNode* %18, %struct.ReebNode** %node_start, align 8, !dbg !4439
  %19 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4440
  %tail6 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %19, i32 0, i32 3, !dbg !4441
  %20 = load %struct.ReebNode*, %struct.ReebNode** %tail6, align 8, !dbg !4441
  store %struct.ReebNode* %20, %struct.ReebNode** %node_end, align 8, !dbg !4442
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  %21 = load i32, i32* %nb_joints, align 4, !dbg !4443
  %22 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4445
  %bcount8 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %22, i32 0, i32 10, !dbg !4446
  %23 = load i32, i32* %bcount8, align 8, !dbg !4446
  %cmp9 = icmp eq i32 %21, %23, !dbg !4447
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !4448

if.then11:                                        ; preds = %if.end7
  store i32 0, i32* %i, align 4, !dbg !4449
  br label %for.cond, !dbg !4452

for.cond:                                         ; preds = %for.inc, %if.then11
  %24 = load i32, i32* %i, align 4, !dbg !4453
  %25 = load i32, i32* %nb_joints, align 4, !dbg !4455
  %cmp12 = icmp slt i32 %24, %25, !dbg !4456
  br i1 %cmp12, label %for.body, label %for.end, !dbg !4457

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %i, align 4, !dbg !4458
  %add = add nsw i32 %26, 1, !dbg !4460
  %27 = load i32*, i32** %best_positions, align 8, !dbg !4461
  %28 = load i32, i32* %i, align 4, !dbg !4462
  %idxprom = sext i32 %28 to i64, !dbg !4461
  %arrayidx = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !4461
  store i32 %add, i32* %arrayidx, align 4, !dbg !4463
  br label %for.inc, !dbg !4464

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !4465
  %inc = add nsw i32 %29, 1, !dbg !4465
  store i32 %inc, i32* %i, align 4, !dbg !4465
  br label %for.cond, !dbg !4466, !llvm.loop !4467

for.end:                                          ; preds = %for.cond
  br label %if.end14, !dbg !4469

if.end14:                                         ; preds = %for.end, %if.end7
  %30 = load i32, i32* %method, align 4, !dbg !4470
  %cmp15 = icmp eq i32 %30, 1, !dbg !4472
  br i1 %cmp15, label %if.then17, label %if.end51, !dbg !4473

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i32* %nb_positions, metadata !4474, metadata !DIExpression()), !dbg !4476
  %31 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4477
  %bcount18 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %31, i32 0, i32 10, !dbg !4478
  %32 = load i32, i32* %bcount18, align 8, !dbg !4478
  store i32 %32, i32* %nb_positions, align 4, !dbg !4476
  call void @llvm.dbg.declare(metadata i32* %nb_memo_nodes, metadata !4479, metadata !DIExpression()), !dbg !4480
  %33 = load i32, i32* %nb_positions, align 4, !dbg !4481
  %34 = load i32, i32* %nb_positions, align 4, !dbg !4482
  %mul19 = mul nsw i32 %33, %34, !dbg !4483
  %35 = load i32, i32* %nb_joints, align 4, !dbg !4484
  %add20 = add nsw i32 %35, 1, !dbg !4485
  %mul21 = mul nsw i32 %mul19, %add20, !dbg !4486
  store i32 %mul21, i32* %nb_memo_nodes, align 4, !dbg !4480
  call void @llvm.dbg.declare(metadata %struct.MemoNode** %table, metadata !4487, metadata !DIExpression()), !dbg !4494
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4495
  %37 = load i32, i32* %nb_memo_nodes, align 4, !dbg !4496
  %conv22 = sext i32 %37 to i64, !dbg !4496
  %mul23 = mul i64 %conv22, 8, !dbg !4497
  %call24 = call i8* %36(i64 %mul23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0)), !dbg !4495
  %38 = bitcast i8* %call24 to %struct.MemoNode*, !dbg !4495
  store %struct.MemoNode* %38, %struct.MemoNode** %table, align 8, !dbg !4494
  call void @llvm.dbg.declare(metadata float*** %positions_cache, metadata !4498, metadata !DIExpression()), !dbg !4500
  %39 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4501
  %40 = load i32, i32* %nb_positions, align 4, !dbg !4502
  %add25 = add nsw i32 %40, 2, !dbg !4503
  %conv26 = sext i32 %add25 to i64, !dbg !4504
  %mul27 = mul i64 8, %conv26, !dbg !4505
  %call28 = call i8* %39(i64 %mul27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0)), !dbg !4501
  %41 = bitcast i8* %call28 to float**, !dbg !4501
  store float** %41, float*** %positions_cache, align 8, !dbg !4500
  %42 = load %struct.ReebNode*, %struct.ReebNode** %node_start, align 8, !dbg !4506
  %p = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %42, i32 0, i32 2, !dbg !4507
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !4506
  %43 = load float**, float*** %positions_cache, align 8, !dbg !4508
  %arrayidx29 = getelementptr inbounds float*, float** %43, i64 0, !dbg !4508
  store float* %arraydecay, float** %arrayidx29, align 8, !dbg !4509
  %44 = load %struct.ReebNode*, %struct.ReebNode** %node_end, align 8, !dbg !4510
  %p30 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %44, i32 0, i32 2, !dbg !4511
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %p30, i64 0, i64 0, !dbg !4510
  %45 = load float**, float*** %positions_cache, align 8, !dbg !4512
  %46 = load i32, i32* %nb_positions, align 4, !dbg !4513
  %add32 = add nsw i32 %46, 1, !dbg !4514
  %idxprom33 = sext i32 %add32 to i64, !dbg !4512
  %arrayidx34 = getelementptr inbounds float*, float** %45, i64 %idxprom33, !dbg !4512
  store float* %arraydecay31, float** %arrayidx34, align 8, !dbg !4515
  %47 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4516
  %48 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4517
  %49 = load %struct.ReebNode*, %struct.ReebNode** %node_start, align 8, !dbg !4518
  call void @initArcIterator(%struct.BArcIterator* %47, %struct.ReebArc* %48, %struct.ReebNode* %49), !dbg !4519
  store i32 1, i32* %i, align 4, !dbg !4520
  br label %for.cond35, !dbg !4522

for.cond35:                                       ; preds = %for.inc44, %if.then17
  %50 = load i32, i32* %i, align 4, !dbg !4523
  %51 = load i32, i32* %nb_positions, align 4, !dbg !4525
  %cmp36 = icmp sle i32 %50, %51, !dbg !4526
  br i1 %cmp36, label %for.body38, label %for.end46, !dbg !4527

for.body38:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata %struct.EmbedBucket** %bucket, metadata !4528, metadata !DIExpression()), !dbg !4532
  %52 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4533
  %53 = bitcast %struct.BArcIterator* %52 to i8*, !dbg !4533
  %54 = load i32, i32* %i, align 4, !dbg !4534
  %call39 = call i8* @IT_peek(i8* %53, i32 %54), !dbg !4535
  %55 = bitcast i8* %call39 to %struct.EmbedBucket*, !dbg !4535
  store %struct.EmbedBucket* %55, %struct.EmbedBucket** %bucket, align 8, !dbg !4532
  %56 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !4536
  %p40 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %56, i32 0, i32 2, !dbg !4537
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %p40, i64 0, i64 0, !dbg !4536
  %57 = load float**, float*** %positions_cache, align 8, !dbg !4538
  %58 = load i32, i32* %i, align 4, !dbg !4539
  %idxprom42 = sext i32 %58 to i64, !dbg !4538
  %arrayidx43 = getelementptr inbounds float*, float** %57, i64 %idxprom42, !dbg !4538
  store float* %arraydecay41, float** %arrayidx43, align 8, !dbg !4540
  br label %for.inc44, !dbg !4541

for.inc44:                                        ; preds = %for.body38
  %59 = load i32, i32* %i, align 4, !dbg !4542
  %inc45 = add nsw i32 %59, 1, !dbg !4542
  store i32 %inc45, i32* %i, align 4, !dbg !4542
  br label %for.cond35, !dbg !4543, !llvm.loop !4544

for.end46:                                        ; preds = %for.cond35
  %60 = load %struct.MemoNode*, %struct.MemoNode** %table, align 8, !dbg !4546
  %61 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4547
  %62 = load float**, float*** %positions_cache, align 8, !dbg !4548
  %63 = load i32, i32* %nb_joints, align 4, !dbg !4549
  %64 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4550
  %bcount47 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %64, i32 0, i32 10, !dbg !4551
  %65 = load i32, i32* %bcount47, align 8, !dbg !4551
  %66 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4552
  %edges48 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %66, i32 0, i32 9, !dbg !4553
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges48, i32 0, i32 0, !dbg !4554
  %67 = load i8*, i8** %first, align 8, !dbg !4554
  %68 = bitcast i8* %67 to %struct.RigEdge*, !dbg !4552
  %69 = load i32, i32* %nb_joints, align 4, !dbg !4555
  %70 = load float, float* %angle_weight, align 4, !dbg !4556
  %71 = load float, float* %length_weight, align 4, !dbg !4557
  %72 = load float, float* %distance_weight, align 4, !dbg !4558
  %call49 = call %struct.MemoNode* @solveJoints(%struct.MemoNode* %60, %struct.BArcIterator* %61, float** %62, i32 %63, i32 %65, i32 0, i32 0, %struct.RigEdge* %68, i32 %69, float %70, float %71, float %72), !dbg !4559
  %73 = load i32*, i32** %best_positions, align 8, !dbg !4560
  %74 = load %struct.MemoNode*, %struct.MemoNode** %table, align 8, !dbg !4561
  %75 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4562
  %bcount50 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %75, i32 0, i32 10, !dbg !4563
  %76 = load i32, i32* %bcount50, align 8, !dbg !4563
  %77 = load i32, i32* %nb_joints, align 4, !dbg !4564
  call void @copyMemoPositions(i32* %73, %struct.MemoNode* %74, i32 %76, i32 %77), !dbg !4565
  %78 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4566
  %79 = load %struct.MemoNode*, %struct.MemoNode** %table, align 8, !dbg !4567
  %80 = bitcast %struct.MemoNode* %79 to i8*, !dbg !4567
  call void %78(i8* %80), !dbg !4566
  %81 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4568
  %82 = load float**, float*** %positions_cache, align 8, !dbg !4569
  %83 = bitcast float** %82 to i8*, !dbg !4569
  call void %81(i8* %83), !dbg !4568
  br label %if.end51, !dbg !4570

if.end51:                                         ; preds = %for.end46, %if.end14
  %84 = load %struct.ReebNode*, %struct.ReebNode** %node_start, align 8, !dbg !4571
  %p52 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %84, i32 0, i32 2, !dbg !4572
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %p52, i64 0, i64 0, !dbg !4571
  store float* %arraydecay53, float** %vec0, align 8, !dbg !4573
  %85 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4574
  %86 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4575
  %87 = load %struct.ReebNode*, %struct.ReebNode** %node_start, align 8, !dbg !4576
  call void @initArcIterator(%struct.BArcIterator* %85, %struct.ReebArc* %86, %struct.ReebNode* %87), !dbg !4577
  %88 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4578
  %edges54 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %88, i32 0, i32 9, !dbg !4580
  %first55 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges54, i32 0, i32 0, !dbg !4581
  %89 = load i8*, i8** %first55, align 8, !dbg !4581
  %90 = bitcast i8* %89 to %struct.RigEdge*, !dbg !4578
  store %struct.RigEdge* %90, %struct.RigEdge** %edge, align 8, !dbg !4582
  store i32 0, i32* %i, align 4, !dbg !4583
  br label %for.cond56, !dbg !4584

for.cond56:                                       ; preds = %for.inc79, %if.end51
  %91 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4585
  %tobool57 = icmp ne %struct.RigEdge* %91, null, !dbg !4587
  br i1 %tobool57, label %for.body58, label %for.end81, !dbg !4587

for.body58:                                       ; preds = %for.cond56
  call void @llvm.dbg.declare(metadata float** %no, metadata !4588, metadata !DIExpression()), !dbg !4590
  store float* null, float** %no, align 8, !dbg !4590
  %92 = load i32, i32* %i, align 4, !dbg !4591
  %93 = load i32, i32* %nb_joints, align 4, !dbg !4593
  %cmp59 = icmp slt i32 %92, %93, !dbg !4594
  br i1 %cmp59, label %if.then61, label %if.else70, !dbg !4595

if.then61:                                        ; preds = %for.body58
  call void @llvm.dbg.declare(metadata %struct.EmbedBucket** %bucket62, metadata !4596, metadata !DIExpression()), !dbg !4598
  %94 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4599
  %95 = bitcast %struct.BArcIterator* %94 to i8*, !dbg !4599
  %96 = load i32*, i32** %best_positions, align 8, !dbg !4600
  %97 = load i32, i32* %i, align 4, !dbg !4601
  %idxprom63 = sext i32 %97 to i64, !dbg !4600
  %arrayidx64 = getelementptr inbounds i32, i32* %96, i64 %idxprom63, !dbg !4600
  %98 = load i32, i32* %arrayidx64, align 4, !dbg !4600
  %call65 = call i8* @IT_peek(i8* %95, i32 %98), !dbg !4602
  %99 = bitcast i8* %call65 to %struct.EmbedBucket*, !dbg !4602
  store %struct.EmbedBucket* %99, %struct.EmbedBucket** %bucket62, align 8, !dbg !4598
  %100 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket62, align 8, !dbg !4603
  %p66 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %100, i32 0, i32 2, !dbg !4604
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %p66, i64 0, i64 0, !dbg !4603
  store float* %arraydecay67, float** %vec1, align 8, !dbg !4605
  %101 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket62, align 8, !dbg !4606
  %no68 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %101, i32 0, i32 3, !dbg !4607
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %no68, i64 0, i64 0, !dbg !4606
  store float* %arraydecay69, float** %no, align 8, !dbg !4608
  br label %if.end75, !dbg !4609

if.else70:                                        ; preds = %for.body58
  %102 = load %struct.ReebNode*, %struct.ReebNode** %node_end, align 8, !dbg !4610
  %p71 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %102, i32 0, i32 2, !dbg !4612
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %p71, i64 0, i64 0, !dbg !4610
  store float* %arraydecay72, float** %vec1, align 8, !dbg !4613
  %103 = load %struct.ReebNode*, %struct.ReebNode** %node_end, align 8, !dbg !4614
  %no73 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %103, i32 0, i32 10, !dbg !4615
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %no73, i64 0, i64 0, !dbg !4614
  store float* %arraydecay74, float** %no, align 8, !dbg !4616
  br label %if.end75

if.end75:                                         ; preds = %if.else70, %if.then61
  %104 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4617
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %104, i32 0, i32 7, !dbg !4619
  %105 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4619
  %tobool76 = icmp ne %struct.EditBone* %105, null, !dbg !4617
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !4620

if.then77:                                        ; preds = %if.end75
  %106 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4621
  %107 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !4623
  %108 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4624
  %109 = load float*, float** %vec0, align 8, !dbg !4625
  %110 = load float*, float** %vec1, align 8, !dbg !4626
  %111 = load float*, float** %no, align 8, !dbg !4627
  call void @repositionBone(%struct.bContext* %106, %struct.RigGraph* %107, %struct.RigEdge* %108, float* %109, float* %110, float* %111), !dbg !4628
  br label %if.end78, !dbg !4629

if.end78:                                         ; preds = %if.then77, %if.end75
  %112 = load float*, float** %vec1, align 8, !dbg !4630
  store float* %112, float** %vec0, align 8, !dbg !4631
  br label %for.inc79, !dbg !4632

for.inc79:                                        ; preds = %if.end78
  %113 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4633
  %next = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %113, i32 0, i32 0, !dbg !4634
  %114 = load %struct.RigEdge*, %struct.RigEdge** %next, align 8, !dbg !4634
  store %struct.RigEdge* %114, %struct.RigEdge** %edge, align 8, !dbg !4635
  %115 = load i32, i32* %i, align 4, !dbg !4636
  %inc80 = add nsw i32 %115, 1, !dbg !4636
  store i32 %inc80, i32* %i, align 4, !dbg !4636
  br label %for.cond56, !dbg !4637, !llvm.loop !4638

for.end81:                                        ; preds = %for.cond56
  %116 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4640
  %117 = load i32*, i32** %best_positions, align 8, !dbg !4641
  %118 = bitcast i32* %117 to i8*, !dbg !4641
  call void %116(i8* %118), !dbg !4640
  br label %return, !dbg !4642

return:                                           ; preds = %for.end81, %if.then
  ret void, !dbg !4642
}

; Function Attrs: noinline nounwind uwtable
define internal void @retargetArctoArcLength(%struct.bContext* %C, %struct.RigGraph* %rigg, %struct.RigArc* %iarc, %struct.RigNode* %inode_start) #0 !dbg !4643 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %iarc.addr = alloca %struct.RigArc*, align 8
  %inode_start.addr = alloca %struct.RigNode*, align 8
  %arc_iter = alloca %struct.ReebArcIterator, align 8
  %iter = alloca %struct.BArcIterator*, align 8
  %earc = alloca %struct.ReebArc*, align 8
  %node_start = alloca %struct.ReebNode*, align 8
  %node_end = alloca %struct.ReebNode*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  %bucket = alloca %struct.EmbedBucket*, align 8
  %embedding_length = alloca float, align 4
  %vec0 = alloca float*, align 8
  %vec1 = alloca float*, align 8
  %previous_vec = alloca float*, align 8
  %new_bone_length = alloca float, align 4
  %no = alloca float*, align 8
  %length19 = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4644, metadata !DIExpression()), !dbg !4645
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  store %struct.RigArc* %iarc, %struct.RigArc** %iarc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %iarc.addr, metadata !4648, metadata !DIExpression()), !dbg !4649
  store %struct.RigNode* %inode_start, %struct.RigNode** %inode_start.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode_start.addr, metadata !4650, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.declare(metadata %struct.ReebArcIterator* %arc_iter, metadata !4652, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter, metadata !4654, metadata !DIExpression()), !dbg !4655
  %0 = bitcast %struct.ReebArcIterator* %arc_iter to %struct.BArcIterator*, !dbg !4656
  store %struct.BArcIterator* %0, %struct.BArcIterator** %iter, align 8, !dbg !4655
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc, metadata !4657, metadata !DIExpression()), !dbg !4658
  %1 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4659
  %link_mesh = getelementptr inbounds %struct.RigArc, %struct.RigArc* %1, i32 0, i32 11, !dbg !4660
  %2 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh, align 8, !dbg !4660
  store %struct.ReebArc* %2, %struct.ReebArc** %earc, align 8, !dbg !4658
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %node_start, metadata !4661, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %node_end, metadata !4663, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !4665, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.declare(metadata %struct.EmbedBucket** %bucket, metadata !4667, metadata !DIExpression()), !dbg !4668
  store %struct.EmbedBucket* null, %struct.EmbedBucket** %bucket, align 8, !dbg !4668
  call void @llvm.dbg.declare(metadata float* %embedding_length, metadata !4669, metadata !DIExpression()), !dbg !4670
  store float 0.000000e+00, float* %embedding_length, align 4, !dbg !4670
  call void @llvm.dbg.declare(metadata float** %vec0, metadata !4671, metadata !DIExpression()), !dbg !4672
  store float* null, float** %vec0, align 8, !dbg !4672
  call void @llvm.dbg.declare(metadata float** %vec1, metadata !4673, metadata !DIExpression()), !dbg !4674
  store float* null, float** %vec1, align 8, !dbg !4674
  call void @llvm.dbg.declare(metadata float** %previous_vec, metadata !4675, metadata !DIExpression()), !dbg !4676
  store float* null, float** %previous_vec, align 8, !dbg !4676
  %3 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4677
  %4 = load %struct.RigNode*, %struct.RigNode** %inode_start.addr, align 8, !dbg !4679
  %call = call i32 @testFlipArc(%struct.RigArc* %3, %struct.RigNode* %4), !dbg !4680
  %tobool = icmp ne i32 %call, 0, !dbg !4680
  br i1 %tobool, label %if.then, label %if.else, !dbg !4681

if.then:                                          ; preds = %entry
  %5 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4682
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %5, i32 0, i32 3, !dbg !4684
  %6 = load %struct.ReebNode*, %struct.ReebNode** %tail, align 8, !dbg !4684
  store %struct.ReebNode* %6, %struct.ReebNode** %node_start, align 8, !dbg !4685
  %7 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4686
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %7, i32 0, i32 2, !dbg !4687
  %8 = load %struct.ReebNode*, %struct.ReebNode** %head, align 8, !dbg !4687
  store %struct.ReebNode* %8, %struct.ReebNode** %node_end, align 8, !dbg !4688
  br label %if.end, !dbg !4689

if.else:                                          ; preds = %entry
  %9 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4690
  %head1 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %9, i32 0, i32 2, !dbg !4692
  %10 = load %struct.ReebNode*, %struct.ReebNode** %head1, align 8, !dbg !4692
  store %struct.ReebNode* %10, %struct.ReebNode** %node_start, align 8, !dbg !4693
  %11 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4694
  %tail2 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %11, i32 0, i32 3, !dbg !4695
  %12 = load %struct.ReebNode*, %struct.ReebNode** %tail2, align 8, !dbg !4695
  store %struct.ReebNode* %12, %struct.ReebNode** %node_end, align 8, !dbg !4696
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4697
  %14 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4698
  %15 = load %struct.ReebNode*, %struct.ReebNode** %node_start, align 8, !dbg !4699
  call void @initArcIterator(%struct.BArcIterator* %13, %struct.ReebArc* %14, %struct.ReebNode* %15), !dbg !4700
  %16 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4701
  %17 = bitcast %struct.BArcIterator* %16 to i8*, !dbg !4701
  %call3 = call i8* @IT_next(i8* %17), !dbg !4702
  %18 = bitcast i8* %call3 to %struct.EmbedBucket*, !dbg !4702
  store %struct.EmbedBucket* %18, %struct.EmbedBucket** %bucket, align 8, !dbg !4703
  %19 = load %struct.ReebNode*, %struct.ReebNode** %node_start, align 8, !dbg !4704
  %p = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %19, i32 0, i32 2, !dbg !4705
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !4704
  store float* %arraydecay, float** %vec0, align 8, !dbg !4706
  br label %while.cond, !dbg !4707

while.cond:                                       ; preds = %while.body, %if.end
  %20 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !4708
  %cmp = icmp ne %struct.EmbedBucket* %20, null, !dbg !4709
  br i1 %cmp, label %while.body, label %while.end, !dbg !4707

while.body:                                       ; preds = %while.cond
  %21 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !4710
  %p4 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %21, i32 0, i32 2, !dbg !4712
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %p4, i64 0, i64 0, !dbg !4710
  store float* %arraydecay5, float** %vec1, align 8, !dbg !4713
  %22 = load float*, float** %vec0, align 8, !dbg !4714
  %23 = load float*, float** %vec1, align 8, !dbg !4715
  %call6 = call float @len_v3v3(float* %22, float* %23), !dbg !4716
  %24 = load float, float* %embedding_length, align 4, !dbg !4717
  %add = fadd float %24, %call6, !dbg !4717
  store float %add, float* %embedding_length, align 4, !dbg !4717
  %25 = load float*, float** %vec1, align 8, !dbg !4718
  store float* %25, float** %vec0, align 8, !dbg !4719
  %26 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4720
  %27 = bitcast %struct.BArcIterator* %26 to i8*, !dbg !4720
  %call7 = call i8* @IT_next(i8* %27), !dbg !4721
  %28 = bitcast i8* %call7 to %struct.EmbedBucket*, !dbg !4721
  store %struct.EmbedBucket* %28, %struct.EmbedBucket** %bucket, align 8, !dbg !4722
  br label %while.cond, !dbg !4707, !llvm.loop !4723

while.end:                                        ; preds = %while.cond
  %29 = load %struct.ReebNode*, %struct.ReebNode** %node_end, align 8, !dbg !4725
  %p8 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %29, i32 0, i32 2, !dbg !4726
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %p8, i64 0, i64 0, !dbg !4725
  %30 = load float*, float** %vec1, align 8, !dbg !4727
  %call10 = call float @len_v3v3(float* %arraydecay9, float* %30), !dbg !4728
  %31 = load float, float* %embedding_length, align 4, !dbg !4729
  %add11 = fadd float %31, %call10, !dbg !4729
  store float %add11, float* %embedding_length, align 4, !dbg !4729
  %32 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4730
  %33 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !4731
  %34 = load %struct.ReebNode*, %struct.ReebNode** %node_start, align 8, !dbg !4732
  call void @initArcIterator(%struct.BArcIterator* %32, %struct.ReebArc* %33, %struct.ReebNode* %34), !dbg !4733
  %35 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4734
  %36 = bitcast %struct.BArcIterator* %35 to i8*, !dbg !4734
  %call12 = call i8* @IT_next(i8* %36), !dbg !4735
  %37 = bitcast i8* %call12 to %struct.EmbedBucket*, !dbg !4735
  store %struct.EmbedBucket* %37, %struct.EmbedBucket** %bucket, align 8, !dbg !4736
  %38 = load %struct.ReebNode*, %struct.ReebNode** %node_start, align 8, !dbg !4737
  %p13 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %38, i32 0, i32 2, !dbg !4738
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %p13, i64 0, i64 0, !dbg !4737
  store float* %arraydecay14, float** %vec0, align 8, !dbg !4739
  %39 = load float*, float** %vec0, align 8, !dbg !4740
  store float* %39, float** %previous_vec, align 8, !dbg !4741
  %40 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !4742
  %p15 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %40, i32 0, i32 2, !dbg !4743
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %p15, i64 0, i64 0, !dbg !4742
  store float* %arraydecay16, float** %vec1, align 8, !dbg !4744
  %41 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4745
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %41, i32 0, i32 9, !dbg !4747
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !4748
  %42 = load i8*, i8** %first, align 8, !dbg !4748
  %43 = bitcast i8* %42 to %struct.RigEdge*, !dbg !4745
  store %struct.RigEdge* %43, %struct.RigEdge** %edge, align 8, !dbg !4749
  br label %for.cond, !dbg !4750

for.cond:                                         ; preds = %for.inc, %while.end
  %44 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4751
  %tobool17 = icmp ne %struct.RigEdge* %44, null, !dbg !4753
  br i1 %tobool17, label %for.body, label %for.end, !dbg !4753

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %new_bone_length, metadata !4754, metadata !DIExpression()), !dbg !4756
  %45 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4757
  %length = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %45, i32 0, i32 4, !dbg !4758
  %46 = load float, float* %length, align 8, !dbg !4758
  %47 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !4759
  %length18 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %47, i32 0, i32 5, !dbg !4760
  %48 = load float, float* %length18, align 4, !dbg !4760
  %div = fdiv float %46, %48, !dbg !4761
  %49 = load float, float* %embedding_length, align 4, !dbg !4762
  %mul = fmul float %div, %49, !dbg !4763
  store float %mul, float* %new_bone_length, align 4, !dbg !4756
  call void @llvm.dbg.declare(metadata float** %no, metadata !4764, metadata !DIExpression()), !dbg !4765
  store float* null, float** %no, align 8, !dbg !4765
  call void @llvm.dbg.declare(metadata float* %length19, metadata !4766, metadata !DIExpression()), !dbg !4767
  store float 0.000000e+00, float* %length19, align 4, !dbg !4767
  br label %while.cond20, !dbg !4768

while.cond20:                                     ; preds = %while.body23, %for.body
  %50 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !4769
  %tobool21 = icmp ne %struct.EmbedBucket* %50, null, !dbg !4769
  br i1 %tobool21, label %land.rhs, label %land.end, !dbg !4770

land.rhs:                                         ; preds = %while.cond20
  %51 = load float, float* %new_bone_length, align 4, !dbg !4771
  %52 = load float, float* %length19, align 4, !dbg !4772
  %cmp22 = fcmp ogt float %51, %52, !dbg !4773
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond20
  %53 = phi i1 [ false, %while.cond20 ], [ %cmp22, %land.rhs ], !dbg !4774
  br i1 %53, label %while.body23, label %while.end31, !dbg !4768

while.body23:                                     ; preds = %land.end
  %54 = load float*, float** %previous_vec, align 8, !dbg !4775
  %55 = load float*, float** %vec1, align 8, !dbg !4777
  %call24 = call float @len_v3v3(float* %54, float* %55), !dbg !4778
  %56 = load float, float* %length19, align 4, !dbg !4779
  %add25 = fadd float %56, %call24, !dbg !4779
  store float %add25, float* %length19, align 4, !dbg !4779
  %57 = load %struct.BArcIterator*, %struct.BArcIterator** %iter, align 8, !dbg !4780
  %58 = bitcast %struct.BArcIterator* %57 to i8*, !dbg !4780
  %call26 = call i8* @IT_next(i8* %58), !dbg !4781
  %59 = bitcast i8* %call26 to %struct.EmbedBucket*, !dbg !4781
  store %struct.EmbedBucket* %59, %struct.EmbedBucket** %bucket, align 8, !dbg !4782
  %60 = load float*, float** %vec1, align 8, !dbg !4783
  store float* %60, float** %previous_vec, align 8, !dbg !4784
  %61 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !4785
  %p27 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %61, i32 0, i32 2, !dbg !4786
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %p27, i64 0, i64 0, !dbg !4785
  store float* %arraydecay28, float** %vec1, align 8, !dbg !4787
  %62 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !4788
  %no29 = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %62, i32 0, i32 3, !dbg !4789
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %no29, i64 0, i64 0, !dbg !4788
  store float* %arraydecay30, float** %no, align 8, !dbg !4790
  br label %while.cond20, !dbg !4768, !llvm.loop !4791

while.end31:                                      ; preds = %land.end
  %63 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !4793
  %cmp32 = icmp eq %struct.EmbedBucket* %63, null, !dbg !4795
  br i1 %cmp32, label %if.then33, label %if.end38, !dbg !4796

if.then33:                                        ; preds = %while.end31
  %64 = load %struct.ReebNode*, %struct.ReebNode** %node_end, align 8, !dbg !4797
  %p34 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %64, i32 0, i32 2, !dbg !4799
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %p34, i64 0, i64 0, !dbg !4797
  store float* %arraydecay35, float** %vec1, align 8, !dbg !4800
  %65 = load %struct.ReebNode*, %struct.ReebNode** %node_end, align 8, !dbg !4801
  %no36 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %65, i32 0, i32 10, !dbg !4802
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %no36, i64 0, i64 0, !dbg !4801
  store float* %arraydecay37, float** %no, align 8, !dbg !4803
  br label %if.end38, !dbg !4804

if.end38:                                         ; preds = %if.then33, %while.end31
  %66 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4805
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %66, i32 0, i32 7, !dbg !4807
  %67 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4807
  %tobool39 = icmp ne %struct.EditBone* %67, null, !dbg !4805
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !4808

if.then40:                                        ; preds = %if.end38
  %68 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4809
  %69 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !4811
  %70 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4812
  %71 = load float*, float** %vec0, align 8, !dbg !4813
  %72 = load float*, float** %vec1, align 8, !dbg !4814
  %73 = load float*, float** %no, align 8, !dbg !4815
  call void @repositionBone(%struct.bContext* %68, %struct.RigGraph* %69, %struct.RigEdge* %70, float* %71, float* %72, float* %73), !dbg !4816
  br label %if.end41, !dbg !4817

if.end41:                                         ; preds = %if.then40, %if.end38
  %74 = load float*, float** %vec1, align 8, !dbg !4818
  store float* %74, float** %vec0, align 8, !dbg !4819
  %75 = load float*, float** %vec1, align 8, !dbg !4820
  store float* %75, float** %previous_vec, align 8, !dbg !4821
  br label %for.inc, !dbg !4822

for.inc:                                          ; preds = %if.end41
  %76 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !4823
  %next = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %76, i32 0, i32 0, !dbg !4824
  %77 = load %struct.RigEdge*, %struct.RigEdge** %next, align 8, !dbg !4824
  store %struct.RigEdge* %77, %struct.RigEdge** %edge, align 8, !dbg !4825
  br label %for.cond, !dbg !4826, !llvm.loop !4827

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4829
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RIG_nameBone(%struct.RigGraph* %rg, i32 %arc_index, i32 %bone_index) #0 !dbg !4830 {
entry:
  %retval = alloca i8*, align 8
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc_index.addr = alloca i32, align 4
  %bone_index.addr = alloca i32, align 4
  %arc = alloca %struct.RigArc*, align 8
  %iedge = alloca %struct.RigEdge*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !4833, metadata !DIExpression()), !dbg !4834
  store i32 %arc_index, i32* %arc_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arc_index.addr, metadata !4835, metadata !DIExpression()), !dbg !4836
  store i32 %bone_index, i32* %bone_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bone_index.addr, metadata !4837, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !4839, metadata !DIExpression()), !dbg !4840
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !4841
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 0, !dbg !4842
  %1 = load i32, i32* %arc_index.addr, align 4, !dbg !4843
  %call = call i8* @BLI_findlink(%struct.ListBase* %arcs, i32 %1), !dbg !4844
  %2 = bitcast i8* %call to %struct.RigArc*, !dbg !4844
  store %struct.RigArc* %2, %struct.RigArc** %arc, align 8, !dbg !4840
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %iedge, metadata !4845, metadata !DIExpression()), !dbg !4846
  %3 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !4847
  %cmp = icmp eq %struct.RigArc* %3, null, !dbg !4849
  br i1 %cmp, label %if.then, label %if.end, !dbg !4850

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i8** %retval, align 8, !dbg !4851
  br label %return, !dbg !4851

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bone_index.addr, align 4, !dbg !4853
  %5 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !4855
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %5, i32 0, i32 9, !dbg !4856
  %call1 = call i32 @BLI_countlist(%struct.ListBase* %edges), !dbg !4857
  %cmp2 = icmp eq i32 %4, %call1, !dbg !4858
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4859

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8** %retval, align 8, !dbg !4860
  br label %return, !dbg !4860

if.end4:                                          ; preds = %if.end
  %6 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !4862
  %edges5 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %6, i32 0, i32 9, !dbg !4863
  %7 = load i32, i32* %bone_index.addr, align 4, !dbg !4864
  %call6 = call i8* @BLI_findlink(%struct.ListBase* %edges5, i32 %7), !dbg !4865
  %8 = bitcast i8* %call6 to %struct.RigEdge*, !dbg !4865
  store %struct.RigEdge* %8, %struct.RigEdge** %iedge, align 8, !dbg !4866
  %9 = load %struct.RigEdge*, %struct.RigEdge** %iedge, align 8, !dbg !4867
  %cmp7 = icmp eq %struct.RigEdge* %9, null, !dbg !4869
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4870

if.then8:                                         ; preds = %if.end4
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %retval, align 8, !dbg !4871
  br label %return, !dbg !4871

if.end9:                                          ; preds = %if.end4
  %10 = load %struct.RigEdge*, %struct.RigEdge** %iedge, align 8, !dbg !4873
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %10, i32 0, i32 7, !dbg !4875
  %11 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !4875
  %cmp10 = icmp eq %struct.EditBone* %11, null, !dbg !4876
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4877

if.then11:                                        ; preds = %if.end9
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i8** %retval, align 8, !dbg !4878
  br label %return, !dbg !4878

if.end12:                                         ; preds = %if.end9
  %12 = load %struct.RigEdge*, %struct.RigEdge** %iedge, align 8, !dbg !4880
  %bone13 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %12, i32 0, i32 7, !dbg !4881
  %13 = load %struct.EditBone*, %struct.EditBone** %bone13, align 8, !dbg !4881
  %name = getelementptr inbounds %struct.EditBone, %struct.EditBone* %13, i32 0, i32 5, !dbg !4882
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4880
  store i8* %arraydecay, i8** %retval, align 8, !dbg !4883
  br label %return, !dbg !4883

return:                                           ; preds = %if.end12, %if.then11, %if.then8, %if.then3, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !4884
  ret i8* %14, !dbg !4884
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RIG_nbJoints(%struct.RigGraph* %rg) #0 !dbg !4885 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc = alloca %struct.RigArc*, align 8
  %total = alloca i32, align 4
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !4890, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.declare(metadata i32* %total, metadata !4892, metadata !DIExpression()), !dbg !4893
  store i32 0, i32* %total, align 4, !dbg !4893
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !4894
  %nodes = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 1, !dbg !4895
  %call = call i32 @BLI_countlist(%struct.ListBase* %nodes), !dbg !4896
  %1 = load i32, i32* %total, align 4, !dbg !4897
  %add = add nsw i32 %1, %call, !dbg !4897
  store i32 %add, i32* %total, align 4, !dbg !4897
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !4898
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %2, i32 0, i32 0, !dbg !4900
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs, i32 0, i32 0, !dbg !4901
  %3 = load i8*, i8** %first, align 8, !dbg !4901
  %4 = bitcast i8* %3 to %struct.RigArc*, !dbg !4898
  store %struct.RigArc* %4, %struct.RigArc** %arc, align 8, !dbg !4902
  br label %for.cond, !dbg !4903

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !4904
  %tobool = icmp ne %struct.RigArc* %5, null, !dbg !4906
  br i1 %tobool, label %for.body, label %for.end, !dbg !4906

for.body:                                         ; preds = %for.cond
  %6 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !4907
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %6, i32 0, i32 9, !dbg !4909
  %call1 = call i32 @BLI_countlist(%struct.ListBase* %edges), !dbg !4910
  %sub = sub nsw i32 %call1, 1, !dbg !4911
  %7 = load i32, i32* %total, align 4, !dbg !4912
  %add2 = add nsw i32 %7, %sub, !dbg !4912
  store i32 %add2, i32* %total, align 4, !dbg !4912
  br label %for.inc, !dbg !4913

for.inc:                                          ; preds = %for.body
  %8 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !4914
  %next = getelementptr inbounds %struct.RigArc, %struct.RigArc* %8, i32 0, i32 0, !dbg !4915
  %9 = load i8*, i8** %next, align 8, !dbg !4915
  %10 = bitcast i8* %9 to %struct.RigArc*, !dbg !4914
  store %struct.RigArc* %10, %struct.RigArc** %arc, align 8, !dbg !4916
  br label %for.cond, !dbg !4917, !llvm.loop !4918

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %total, align 4, !dbg !4920
  ret i32 %11, !dbg !4921
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_retargetArmature(%struct.bContext* %C) #0 !dbg !4922 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reebg = alloca %struct.ReebGraph*, align 8
  %start_time = alloca double, align 8
  %end_time = alloca double, align 8
  %gstart_time = alloca double, align 8
  %gend_time = alloca double, align 8
  %reeb_time = alloca double, align 8
  %rig_time = alloca double, align 8
  %retarget_time = alloca double, align 8
  %total_time = alloca double, align 8
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %rigg = alloca %struct.RigGraph*, align 8
  %arm = alloca %struct.bArmature*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4925, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.declare(metadata %struct.ReebGraph** %reebg, metadata !4927, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.declare(metadata double* %start_time, metadata !4929, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.declare(metadata double* %end_time, metadata !4932, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.declare(metadata double* %gstart_time, metadata !4934, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.declare(metadata double* %gend_time, metadata !4936, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.declare(metadata double* %reeb_time, metadata !4938, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.declare(metadata double* %rig_time, metadata !4940, metadata !DIExpression()), !dbg !4941
  store double 0.000000e+00, double* %rig_time, align 8, !dbg !4941
  call void @llvm.dbg.declare(metadata double* %retarget_time, metadata !4942, metadata !DIExpression()), !dbg !4943
  store double 0.000000e+00, double* %retarget_time, align 8, !dbg !4943
  call void @llvm.dbg.declare(metadata double* %total_time, metadata !4944, metadata !DIExpression()), !dbg !4945
  %call = call double @PIL_check_seconds_timer(), !dbg !4946
  store double %call, double* %start_time, align 8, !dbg !4947
  store double %call, double* %gstart_time, align 8, !dbg !4948
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4949
  %call1 = call %struct.ReebGraph* @BIF_ReebGraphMultiFromEditMesh(%struct.bContext* %0), !dbg !4950
  store %struct.ReebGraph* %call1, %struct.ReebGraph** %reebg, align 8, !dbg !4951
  %call2 = call double @PIL_check_seconds_timer(), !dbg !4952
  store double %call2, double* %end_time, align 8, !dbg !4953
  %1 = load double, double* %end_time, align 8, !dbg !4954
  %2 = load double, double* %start_time, align 8, !dbg !4955
  %sub = fsub double %1, %2, !dbg !4956
  store double %sub, double* %reeb_time, align 8, !dbg !4957
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i64 0, i64 0)), !dbg !4958
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !4959, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !4962, metadata !DIExpression()), !dbg !4961
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4961
  %call4 = call i32 @CTX_data_selected_editable_bases(%struct.bContext* %3, %struct.ListBase* %ctx_data_list), !dbg !4961
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !4982
  %4 = load i8*, i8** %first, align 8, !dbg !4982
  %5 = bitcast i8* %4 to %struct.CollectionPointerLink*, !dbg !4982
  store %struct.CollectionPointerLink* %5, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !4982
  br label %for.cond, !dbg !4982

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !4984
  %tobool = icmp ne %struct.CollectionPointerLink* %6, null, !dbg !4982
  br i1 %tobool, label %for.body, label %for.end, !dbg !4982

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !4986, metadata !DIExpression()), !dbg !4990
  %7 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !4990
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %7, i32 0, i32 2, !dbg !4990
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !4990
  %8 = load i8*, i8** %data, align 8, !dbg !4990
  %9 = bitcast i8* %8 to %struct.Base*, !dbg !4990
  store %struct.Base* %9, %struct.Base** %base, align 8, !dbg !4990
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4991, metadata !DIExpression()), !dbg !4993
  %10 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !4994
  %object = getelementptr inbounds %struct.Base, %struct.Base* %10, i32 0, i32 7, !dbg !4995
  %11 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !4995
  store %struct.Object* %11, %struct.Object** %ob, align 8, !dbg !4993
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4996
  %type = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !4998
  %13 = load i16, i16* %type, align 8, !dbg !4998
  %conv = sext i16 %13 to i32, !dbg !4996
  %cmp = icmp eq i32 %conv, 25, !dbg !4999
  br i1 %cmp, label %if.then, label %if.end, !dbg !5000

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg, metadata !5001, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !5004, metadata !DIExpression()), !dbg !5005
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5006
  %data6 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 19, !dbg !5007
  %15 = load i8*, i8** %data6, align 8, !dbg !5007
  %16 = bitcast i8* %15 to %struct.bArmature*, !dbg !5006
  store %struct.bArmature* %16, %struct.bArmature** %arm, align 8, !dbg !5008
  %call7 = call double @PIL_check_seconds_timer(), !dbg !5009
  store double %call7, double* %start_time, align 8, !dbg !5010
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5011
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5012
  %19 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5013
  %call8 = call %struct.RigGraph* @RIG_graphFromArmature(%struct.bContext* %17, %struct.Object* %18, %struct.bArmature* %19), !dbg !5014
  store %struct.RigGraph* %call8, %struct.RigGraph** %rigg, align 8, !dbg !5015
  %call9 = call double @PIL_check_seconds_timer(), !dbg !5016
  store double %call9, double* %end_time, align 8, !dbg !5017
  %20 = load double, double* %end_time, align 8, !dbg !5018
  %21 = load double, double* %start_time, align 8, !dbg !5019
  %sub10 = fsub double %20, %21, !dbg !5020
  store double %sub10, double* %rig_time, align 8, !dbg !5021
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0)), !dbg !5022
  %22 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg, align 8, !dbg !5023
  %23 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !5024
  %link_mesh = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %23, i32 0, i32 11, !dbg !5025
  store %struct.ReebGraph* %22, %struct.ReebGraph** %link_mesh, align 8, !dbg !5026
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5027
  %id = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 0, !dbg !5028
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !5029
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5027
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay), !dbg !5030
  %call13 = call double @PIL_check_seconds_timer(), !dbg !5031
  store double %call13, double* %start_time, align 8, !dbg !5032
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5033
  %26 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !5034
  call void @retargetGraphs(%struct.bContext* %25, %struct.RigGraph* %26), !dbg !5035
  %call14 = call double @PIL_check_seconds_timer(), !dbg !5036
  store double %call14, double* %end_time, align 8, !dbg !5037
  %27 = load double, double* %end_time, align 8, !dbg !5038
  %28 = load double, double* %start_time, align 8, !dbg !5039
  %sub15 = fsub double %27, %28, !dbg !5040
  store double %sub15, double* %retarget_time, align 8, !dbg !5041
  call void @BIF_freeRetarget(), !dbg !5042
  %29 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !5043
  store %struct.RigGraph* %29, %struct.RigGraph** @GLOBAL_RIGG, align 8, !dbg !5044
  br label %for.end, !dbg !5045

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5046

for.inc:                                          ; preds = %if.end
  %30 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !4984
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %30, i32 0, i32 0, !dbg !4984
  %31 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !4984
  store %struct.CollectionPointerLink* %31, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !4984
  br label %for.cond, !dbg !4984, !llvm.loop !5047

for.end:                                          ; preds = %if.then, %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !5049
  %call16 = call double @PIL_check_seconds_timer(), !dbg !5050
  store double %call16, double* %gend_time, align 8, !dbg !5051
  %32 = load double, double* %gend_time, align 8, !dbg !5052
  %33 = load double, double* %gstart_time, align 8, !dbg !5053
  %sub17 = fsub double %32, %33, !dbg !5054
  store double %sub17, double* %total_time, align 8, !dbg !5055
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0)), !dbg !5056
  %34 = load double, double* %total_time, align 8, !dbg !5057
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0), double %34), !dbg !5058
  %35 = load double, double* %reeb_time, align 8, !dbg !5059
  %36 = load double, double* %reeb_time, align 8, !dbg !5060
  %37 = load double, double* %total_time, align 8, !dbg !5061
  %div = fdiv double %36, %37, !dbg !5062
  %mul = fmul double %div, 1.000000e+02, !dbg !5063
  %call20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), double %35, double %mul), !dbg !5064
  %38 = load double, double* %rig_time, align 8, !dbg !5065
  %39 = load double, double* %rig_time, align 8, !dbg !5066
  %40 = load double, double* %total_time, align 8, !dbg !5067
  %div21 = fdiv double %39, %40, !dbg !5068
  %mul22 = fmul double %div21, 1.000000e+02, !dbg !5069
  %call23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0), double %38, double %mul22), !dbg !5070
  %41 = load double, double* %retarget_time, align 8, !dbg !5071
  %42 = load double, double* %retarget_time, align 8, !dbg !5072
  %43 = load double, double* %total_time, align 8, !dbg !5073
  %div24 = fdiv double %42, %43, !dbg !5074
  %mul25 = fmul double %div24, 1.000000e+02, !dbg !5075
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0), double %41, double %mul25), !dbg !5076
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0)), !dbg !5077
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5078
  call void @ED_undo_push(%struct.bContext* %44, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0)), !dbg !5079
  ret void, !dbg !5080
}

declare dso_local double @PIL_check_seconds_timer() #2

declare dso_local %struct.ReebGraph* @BIF_ReebGraphMultiFromEditMesh(%struct.bContext*) #2

declare dso_local i32 @CTX_data_selected_editable_bases(%struct.bContext*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @retargetGraphs(%struct.bContext* %C, %struct.RigGraph* %rigg) #0 !dbg !5081 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %reebg = alloca %struct.ReebGraph*, align 8
  %inode = alloca %struct.RigNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5084, metadata !DIExpression()), !dbg !5085
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !5086, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !5088, metadata !DIExpression()), !dbg !5089
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5090
  %ob = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 16, !dbg !5091
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5091
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !5092
  %2 = load i8*, i8** %data, align 8, !dbg !5092
  %3 = bitcast i8* %2 to %struct.bArmature*, !dbg !5090
  store %struct.bArmature* %3, %struct.bArmature** %arm, align 8, !dbg !5089
  call void @llvm.dbg.declare(metadata %struct.ReebGraph** %reebg, metadata !5093, metadata !DIExpression()), !dbg !5094
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5095
  %link_mesh = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %4, i32 0, i32 11, !dbg !5096
  %5 = load %struct.ReebGraph*, %struct.ReebGraph** %link_mesh, align 8, !dbg !5096
  store %struct.ReebGraph* %5, %struct.ReebGraph** %reebg, align 8, !dbg !5094
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode, metadata !5097, metadata !DIExpression()), !dbg !5098
  %6 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg, align 8, !dbg !5099
  call void @BIF_flagMultiArcs(%struct.ReebGraph* %6, i32 0), !dbg !5100
  %7 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5101
  %head = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %7, i32 0, i32 10, !dbg !5102
  %8 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !5102
  store %struct.RigNode* %8, %struct.RigNode** %inode, align 8, !dbg !5103
  %9 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5104
  %10 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg, align 8, !dbg !5105
  %11 = load %struct.RigNode*, %struct.RigNode** %inode, align 8, !dbg !5106
  call void @matchMultiResolutionStartingNode(%struct.RigGraph* %9, %struct.ReebGraph* %10, %struct.RigNode* %11), !dbg !5107
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5108
  %13 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5109
  %14 = load %struct.RigNode*, %struct.RigNode** %inode, align 8, !dbg !5110
  call void @retargetSubgraph(%struct.bContext* %12, %struct.RigGraph* %13, %struct.RigArc* null, %struct.RigNode* %14), !dbg !5111
  %15 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5112
  call void @finishRetarget(%struct.RigGraph* %15), !dbg !5113
  %16 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5114
  %editbones = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %16, i32 0, i32 9, !dbg !5115
  %17 = load %struct.ListBase*, %struct.ListBase** %editbones, align 8, !dbg !5115
  %18 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5116
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %18, i32 0, i32 4, !dbg !5117
  store %struct.ListBase* %17, %struct.ListBase** %edbo, align 8, !dbg !5118
  %19 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5119
  call void @ED_armature_from_edit(%struct.bArmature* %19), !dbg !5120
  ret void, !dbg !5121
}

; Function Attrs: noinline nounwind uwtable
define internal void @BIF_freeRetarget() #0 !dbg !5122 {
entry:
  %0 = load %struct.RigGraph*, %struct.RigGraph** @GLOBAL_RIGG, align 8, !dbg !5125
  %tobool = icmp ne %struct.RigGraph* %0, null, !dbg !5125
  br i1 %tobool, label %if.then, label %if.end, !dbg !5127

if.then:                                          ; preds = %entry
  %1 = load %struct.RigGraph*, %struct.RigGraph** @GLOBAL_RIGG, align 8, !dbg !5128
  %2 = bitcast %struct.RigGraph* %1 to %struct.BGraph*, !dbg !5130
  call void @RIG_freeRigGraph(%struct.BGraph* %2), !dbg !5131
  store %struct.RigGraph* null, %struct.RigGraph** @GLOBAL_RIGG, align 8, !dbg !5132
  br label %if.end, !dbg !5133

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5134
}

declare dso_local void @ED_undo_push(%struct.bContext*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_retargetArc(%struct.bContext* %C, %struct.ReebArc* %earc, %struct.RigGraph* %template_rigg) #0 !dbg !5135 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %earc.addr = alloca %struct.ReebArc*, align 8
  %template_rigg.addr = alloca %struct.RigGraph*, align 8
  %obedit = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %armedit = alloca %struct.bArmature*, align 8
  %ob = alloca %struct.Object*, align 8
  %rigg = alloca %struct.RigGraph*, align 8
  %iarc = alloca %struct.RigArc*, align 8
  %side_string = alloca i8*, align 8
  %num_string = alloca i8*, align 8
  %free_template = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5138, metadata !DIExpression()), !dbg !5139
  store %struct.ReebArc* %earc, %struct.ReebArc** %earc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc.addr, metadata !5140, metadata !DIExpression()), !dbg !5141
  store %struct.RigGraph* %template_rigg, %struct.RigGraph** %template_rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %template_rigg.addr, metadata !5142, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5144, metadata !DIExpression()), !dbg !5145
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5146
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5147
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5145
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5148, metadata !DIExpression()), !dbg !5149
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5150
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !5151
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !5149
  call void @llvm.dbg.declare(metadata %struct.bArmature** %armedit, metadata !5152, metadata !DIExpression()), !dbg !5153
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5154
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !5155
  %3 = load i8*, i8** %data, align 8, !dbg !5155
  %4 = bitcast i8* %3 to %struct.bArmature*, !dbg !5154
  store %struct.bArmature* %4, %struct.bArmature** %armedit, align 8, !dbg !5153
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5156, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg, metadata !5158, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.declare(metadata %struct.RigArc** %iarc, metadata !5160, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.declare(metadata i8** %side_string, metadata !5162, metadata !DIExpression()), !dbg !5163
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5164
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 20, !dbg !5165
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !5165
  %skgen_side_string = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %6, i32 0, i32 47, !dbg !5166
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %skgen_side_string, i64 0, i64 0, !dbg !5164
  store i8* %arraydecay, i8** %side_string, align 8, !dbg !5163
  call void @llvm.dbg.declare(metadata i8** %num_string, metadata !5167, metadata !DIExpression()), !dbg !5168
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5169
  %toolsettings2 = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 20, !dbg !5170
  %8 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings2, align 8, !dbg !5170
  %skgen_num_string = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %8, i32 0, i32 48, !dbg !5171
  %arraydecay3 = getelementptr inbounds [8 x i8], [8 x i8]* %skgen_num_string, i64 0, i64 0, !dbg !5169
  store i8* %arraydecay3, i8** %num_string, align 8, !dbg !5168
  call void @llvm.dbg.declare(metadata i32* %free_template, metadata !5172, metadata !DIExpression()), !dbg !5173
  store i32 0, i32* %free_template, align 4, !dbg !5173
  %9 = load %struct.RigGraph*, %struct.RigGraph** %template_rigg.addr, align 8, !dbg !5174
  %tobool = icmp ne %struct.RigGraph* %9, null, !dbg !5174
  br i1 %tobool, label %if.then, label %if.else, !dbg !5176

if.then:                                          ; preds = %entry
  %10 = load %struct.RigGraph*, %struct.RigGraph** %template_rigg.addr, align 8, !dbg !5177
  %ob4 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %10, i32 0, i32 16, !dbg !5179
  %11 = load %struct.Object*, %struct.Object** %ob4, align 8, !dbg !5179
  store %struct.Object* %11, %struct.Object** %ob, align 8, !dbg !5180
  br label %if.end, !dbg !5181

if.else:                                          ; preds = %entry
  store i32 1, i32* %free_template, align 4, !dbg !5182
  %12 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5184
  store %struct.Object* %12, %struct.Object** %ob, align 8, !dbg !5185
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5186
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5187
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5188
  %data5 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 19, !dbg !5189
  %16 = load i8*, i8** %data5, align 8, !dbg !5189
  %17 = bitcast i8* %16 to %struct.bArmature*, !dbg !5188
  %call6 = call %struct.RigGraph* @armatureSelectedToGraph(%struct.bContext* %13, %struct.Object* %14, %struct.bArmature* %17), !dbg !5190
  store %struct.RigGraph* %call6, %struct.RigGraph** %template_rigg.addr, align 8, !dbg !5191
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.RigGraph*, %struct.RigGraph** %template_rigg.addr, align 8, !dbg !5192
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %18, i32 0, i32 0, !dbg !5194
  %call7 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %arcs), !dbg !5195
  %tobool8 = icmp ne i8 %call7, 0, !dbg !5195
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5196

if.then9:                                         ; preds = %if.end
  br label %return, !dbg !5197

if.end10:                                         ; preds = %if.end
  %19 = load %struct.RigGraph*, %struct.RigGraph** %template_rigg.addr, align 8, !dbg !5199
  %20 = load %struct.bArmature*, %struct.bArmature** %armedit, align 8, !dbg !5200
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %20, i32 0, i32 4, !dbg !5201
  %21 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !5201
  %22 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5202
  %23 = load i8*, i8** %side_string, align 8, !dbg !5203
  %24 = load i8*, i8** %num_string, align 8, !dbg !5204
  %call11 = call %struct.RigGraph* @cloneRigGraph(%struct.RigGraph* %19, %struct.ListBase* %21, %struct.Object* %22, i8* %23, i8* %24), !dbg !5205
  store %struct.RigGraph* %call11, %struct.RigGraph** %rigg, align 8, !dbg !5206
  %25 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !5207
  %arcs12 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %25, i32 0, i32 0, !dbg !5208
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs12, i32 0, i32 0, !dbg !5209
  %26 = load i8*, i8** %first, align 8, !dbg !5209
  %27 = bitcast i8* %26 to %struct.RigArc*, !dbg !5207
  store %struct.RigArc* %27, %struct.RigArc** %iarc, align 8, !dbg !5210
  %28 = load %struct.ReebArc*, %struct.ReebArc** %earc.addr, align 8, !dbg !5211
  %29 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !5212
  %link_mesh = getelementptr inbounds %struct.RigArc, %struct.RigArc* %29, i32 0, i32 11, !dbg !5213
  store %struct.ReebArc* %28, %struct.ReebArc** %link_mesh, align 8, !dbg !5214
  %30 = load %struct.ReebArc*, %struct.ReebArc** %earc.addr, align 8, !dbg !5215
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %30, i32 0, i32 2, !dbg !5216
  %31 = load %struct.ReebNode*, %struct.ReebNode** %head, align 8, !dbg !5216
  %32 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !5217
  %head13 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %32, i32 0, i32 2, !dbg !5218
  %33 = load %struct.RigNode*, %struct.RigNode** %head13, align 8, !dbg !5218
  %link_mesh14 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %33, i32 0, i32 10, !dbg !5219
  store %struct.ReebNode* %31, %struct.ReebNode** %link_mesh14, align 8, !dbg !5220
  %34 = load %struct.ReebArc*, %struct.ReebArc** %earc.addr, align 8, !dbg !5221
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %34, i32 0, i32 3, !dbg !5222
  %35 = load %struct.ReebNode*, %struct.ReebNode** %tail, align 8, !dbg !5222
  %36 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !5223
  %tail15 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %36, i32 0, i32 3, !dbg !5224
  %37 = load %struct.RigNode*, %struct.RigNode** %tail15, align 8, !dbg !5224
  %link_mesh16 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %37, i32 0, i32 10, !dbg !5225
  store %struct.ReebNode* %35, %struct.ReebNode** %link_mesh16, align 8, !dbg !5226
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5227
  %39 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !5228
  %40 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !5229
  %41 = load %struct.RigArc*, %struct.RigArc** %iarc, align 8, !dbg !5230
  %head17 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %41, i32 0, i32 2, !dbg !5231
  %42 = load %struct.RigNode*, %struct.RigNode** %head17, align 8, !dbg !5231
  call void @retargetArctoArc(%struct.bContext* %38, %struct.RigGraph* %39, %struct.RigArc* %40, %struct.RigNode* %42), !dbg !5232
  %43 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !5233
  call void @finishRetarget(%struct.RigGraph* %43), !dbg !5234
  %44 = load i32, i32* %free_template, align 4, !dbg !5235
  %tobool18 = icmp ne i32 %44, 0, !dbg !5235
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5237

if.then19:                                        ; preds = %if.end10
  %45 = load %struct.RigGraph*, %struct.RigGraph** %template_rigg.addr, align 8, !dbg !5238
  %46 = bitcast %struct.RigGraph* %45 to %struct.BGraph*, !dbg !5240
  call void @RIG_freeRigGraph(%struct.BGraph* %46), !dbg !5241
  br label %if.end20, !dbg !5242

if.end20:                                         ; preds = %if.then19, %if.end10
  %47 = load %struct.RigGraph*, %struct.RigGraph** %rigg, align 8, !dbg !5243
  %48 = bitcast %struct.RigGraph* %47 to %struct.BGraph*, !dbg !5244
  call void @RIG_freeRigGraph(%struct.BGraph* %48), !dbg !5245
  %49 = load %struct.bArmature*, %struct.bArmature** %armedit, align 8, !dbg !5246
  call void @ED_armature_validate_active(%struct.bArmature* %49), !dbg !5247
  br label %return, !dbg !5248

return:                                           ; preds = %if.end20, %if.then9
  ret void, !dbg !5248
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigGraph* @armatureSelectedToGraph(%struct.bContext* %C, %struct.Object* %ob, %struct.bArmature* %arm) #0 !dbg !5249 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %arm.addr = alloca %struct.bArmature*, align 8
  %obedit = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ebone = alloca %struct.EditBone*, align 8
  %rg = alloca %struct.RigGraph*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5252, metadata !DIExpression()), !dbg !5253
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  store %struct.bArmature* %arm, %struct.bArmature** %arm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm.addr, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5258, metadata !DIExpression()), !dbg !5259
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5260
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5261
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5259
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5262, metadata !DIExpression()), !dbg !5263
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5264
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !5265
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !5263
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone, metadata !5266, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg, metadata !5268, metadata !DIExpression()), !dbg !5269
  %call2 = call %struct.RigGraph* @newRigGraph(), !dbg !5270
  store %struct.RigGraph* %call2, %struct.RigGraph** %rg, align 8, !dbg !5271
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5272
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5274
  %cmp = icmp eq %struct.Object* %2, %3, !dbg !5275
  br i1 %cmp, label %if.then, label %if.else, !dbg !5276

if.then:                                          ; preds = %entry
  %4 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !5277
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %4, i32 0, i32 4, !dbg !5279
  %5 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !5279
  %6 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5280
  %editbones = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %6, i32 0, i32 9, !dbg !5281
  store %struct.ListBase* %5, %struct.ListBase** %editbones, align 8, !dbg !5282
  br label %if.end, !dbg !5283

if.else:                                          ; preds = %entry
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5284
  %call3 = call i8* %7(i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)), !dbg !5284
  %8 = bitcast i8* %call3 to %struct.ListBase*, !dbg !5284
  %9 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5286
  %editbones4 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %9, i32 0, i32 9, !dbg !5287
  store %struct.ListBase* %8, %struct.ListBase** %editbones4, align 8, !dbg !5288
  %10 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5289
  %editbones5 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %10, i32 0, i32 9, !dbg !5290
  %11 = load %struct.ListBase*, %struct.ListBase** %editbones5, align 8, !dbg !5290
  %12 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !5291
  %bonebase = getelementptr inbounds %struct.bArmature, %struct.bArmature* %12, i32 0, i32 2, !dbg !5292
  %call6 = call %struct.EditBone* @make_boneList(%struct.ListBase* %11, %struct.ListBase* %bonebase, %struct.EditBone* null, %struct.Bone* null), !dbg !5293
  %13 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5294
  %flag = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %13, i32 0, i32 7, !dbg !5295
  %14 = load i32, i32* %flag, align 8, !dbg !5296
  %or = or i32 %14, 1, !dbg !5296
  store i32 %or, i32* %flag, align 8, !dbg !5296
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5297
  %16 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5298
  %ob7 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %16, i32 0, i32 16, !dbg !5299
  store %struct.Object* %15, %struct.Object** %ob7, align 8, !dbg !5300
  %17 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5301
  %editbones8 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %17, i32 0, i32 9, !dbg !5303
  %18 = load %struct.ListBase*, %struct.ListBase** %editbones8, align 8, !dbg !5303
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %18, i32 0, i32 0, !dbg !5304
  %19 = load i8*, i8** %first, align 8, !dbg !5304
  %20 = bitcast i8* %19 to %struct.EditBone*, !dbg !5301
  store %struct.EditBone* %20, %struct.EditBone** %ebone, align 8, !dbg !5305
  br label %for.cond, !dbg !5306

for.cond:                                         ; preds = %for.inc, %if.end
  %21 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !5307
  %tobool = icmp ne %struct.EditBone* %21, null, !dbg !5309
  br i1 %tobool, label %for.body, label %for.end, !dbg !5309

for.body:                                         ; preds = %for.cond
  %22 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !5310
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %22, i32 0, i32 3, !dbg !5313
  %23 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !5313
  %cmp9 = icmp eq %struct.EditBone* %23, null, !dbg !5314
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !5315

if.then10:                                        ; preds = %for.body
  %24 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5316
  %25 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5318
  %editbones11 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %25, i32 0, i32 9, !dbg !5319
  %26 = load %struct.ListBase*, %struct.ListBase** %editbones11, align 8, !dbg !5319
  %27 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !5320
  call void @RIG_arcFromBoneChain(%struct.RigGraph* %24, %struct.ListBase* %26, %struct.EditBone* %27, %struct.RigNode* null, i8 zeroext 1), !dbg !5321
  br label %if.end12, !dbg !5322

if.end12:                                         ; preds = %if.then10, %for.body
  br label %for.inc, !dbg !5323

for.inc:                                          ; preds = %if.end12
  %28 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !5324
  %next = getelementptr inbounds %struct.EditBone, %struct.EditBone* %28, i32 0, i32 0, !dbg !5325
  %29 = load %struct.EditBone*, %struct.EditBone** %next, align 8, !dbg !5325
  store %struct.EditBone* %29, %struct.EditBone** %ebone, align 8, !dbg !5326
  br label %for.cond, !dbg !5327, !llvm.loop !5328

for.end:                                          ; preds = %for.cond
  %30 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5330
  %31 = bitcast %struct.RigGraph* %30 to %struct.BGraph*, !dbg !5331
  call void @BLI_removeDoubleNodes(%struct.BGraph* %31, float 0x3F50624DE0000000), !dbg !5332
  %32 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5333
  call void @RIG_removeNormalNodes(%struct.RigGraph* %32), !dbg !5334
  %33 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5335
  call void @RIG_removeUneededOffsets(%struct.RigGraph* %33), !dbg !5336
  %34 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5337
  %35 = bitcast %struct.RigGraph* %34 to %struct.BGraph*, !dbg !5338
  call void @BLI_buildAdjacencyList(%struct.BGraph* %35), !dbg !5339
  %36 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5340
  call void @RIG_findHead(%struct.RigGraph* %36), !dbg !5341
  %37 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5342
  %38 = bitcast %struct.RigGraph* %37 to %struct.BGraph*, !dbg !5343
  %39 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5344
  %head = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %39, i32 0, i32 10, !dbg !5345
  %40 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !5345
  %41 = bitcast %struct.RigNode* %40 to %struct.BNode*, !dbg !5346
  %42 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5347
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 20, !dbg !5348
  %43 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !5348
  %skgen_symmetry_limit = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %43, i32 0, i32 32, !dbg !5349
  %44 = load float, float* %skgen_symmetry_limit, align 8, !dbg !5349
  call void @BLI_markdownSymmetry(%struct.BGraph* %38, %struct.BNode* %41, float %44), !dbg !5350
  %45 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5351
  call void @RIG_reconnectControlBones(%struct.RigGraph* %45), !dbg !5352
  %46 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5353
  %47 = bitcast %struct.RigGraph* %46 to %struct.BGraph*, !dbg !5355
  %call13 = call zeroext i8 @BLI_isGraphCyclic(%struct.BGraph* %47), !dbg !5356
  %tobool14 = icmp ne i8 %call13, 0, !dbg !5356
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !5357

if.then15:                                        ; preds = %for.end
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)), !dbg !5358
  br label %if.end17, !dbg !5360

if.end17:                                         ; preds = %if.then15, %for.end
  %48 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5361
  ret %struct.RigGraph* %48, !dbg !5362
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !5363 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5369, metadata !DIExpression()), !dbg !5370
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5371
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5372
  %1 = load i8*, i8** %first, align 8, !dbg !5372
  %cmp = icmp eq i8* %1, null, !dbg !5373
  %conv = zext i1 %cmp to i32, !dbg !5373
  %conv1 = trunc i32 %conv to i8, !dbg !5374
  ret i8 %conv1, !dbg !5375
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigGraph* @cloneRigGraph(%struct.RigGraph* %src, %struct.ListBase* %editbones, %struct.Object* %ob, i8* %side_string, i8* %num_string) #0 !dbg !5376 {
entry:
  %src.addr = alloca %struct.RigGraph*, align 8
  %editbones.addr = alloca %struct.ListBase*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %side_string.addr = alloca i8*, align 8
  %num_string.addr = alloca i8*, align 8
  %ptr_hash = alloca %struct.GHash*, align 8
  %node = alloca %struct.RigNode*, align 8
  %arc = alloca %struct.RigArc*, align 8
  %ctrl = alloca %struct.RigControl*, align 8
  %rg = alloca %struct.RigGraph*, align 8
  %cloned_node = alloca %struct.RigNode*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  %bone34 = alloca %struct.EditBone*, align 8
  %bone63 = alloca %struct.EditBone*, align 8
  store %struct.RigGraph* %src, %struct.RigGraph** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %src.addr, metadata !5379, metadata !DIExpression()), !dbg !5380
  store %struct.ListBase* %editbones, %struct.ListBase** %editbones.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editbones.addr, metadata !5381, metadata !DIExpression()), !dbg !5382
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5383, metadata !DIExpression()), !dbg !5384
  store i8* %side_string, i8** %side_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %side_string.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  store i8* %num_string, i8** %num_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %num_string.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  call void @llvm.dbg.declare(metadata %struct.GHash** %ptr_hash, metadata !5389, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.declare(metadata %struct.RigNode** %node, metadata !5391, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !5393, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl, metadata !5395, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg, metadata !5397, metadata !DIExpression()), !dbg !5398
  %call = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0)), !dbg !5399
  store %struct.GHash* %call, %struct.GHash** %ptr_hash, align 8, !dbg !5400
  %call1 = call %struct.RigGraph* @newRigGraph(), !dbg !5401
  store %struct.RigGraph* %call1, %struct.RigGraph** %rg, align 8, !dbg !5402
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5403
  %1 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5404
  %ob2 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %1, i32 0, i32 16, !dbg !5405
  store %struct.Object* %0, %struct.Object** %ob2, align 8, !dbg !5406
  %2 = load %struct.ListBase*, %struct.ListBase** %editbones.addr, align 8, !dbg !5407
  %3 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5408
  %editbones3 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %3, i32 0, i32 9, !dbg !5409
  store %struct.ListBase* %2, %struct.ListBase** %editbones3, align 8, !dbg !5410
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5411
  %editbones4 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %4, i32 0, i32 9, !dbg !5412
  %5 = load %struct.ListBase*, %struct.ListBase** %editbones4, align 8, !dbg !5412
  call void @preEditBoneDuplicate(%struct.ListBase* %5), !dbg !5413
  %6 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5414
  %editbones5 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %6, i32 0, i32 9, !dbg !5415
  %7 = load %struct.ListBase*, %struct.ListBase** %editbones5, align 8, !dbg !5415
  call void @preEditBoneDuplicate(%struct.ListBase* %7), !dbg !5416
  %8 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5417
  %nodes = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %8, i32 0, i32 1, !dbg !5419
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !5420
  %9 = load i8*, i8** %first, align 8, !dbg !5420
  %10 = bitcast i8* %9 to %struct.RigNode*, !dbg !5417
  store %struct.RigNode* %10, %struct.RigNode** %node, align 8, !dbg !5421
  br label %for.cond, !dbg !5422

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5423
  %tobool = icmp ne %struct.RigNode* %11, null, !dbg !5425
  br i1 %tobool, label %for.body, label %for.end, !dbg !5425

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.RigNode** %cloned_node, metadata !5426, metadata !DIExpression()), !dbg !5428
  %12 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5429
  %13 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5430
  %p = getelementptr inbounds %struct.RigNode, %struct.RigNode* %13, i32 0, i32 2, !dbg !5431
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !5430
  %call6 = call %struct.RigNode* @newRigNode(%struct.RigGraph* %12, float* %arraydecay), !dbg !5432
  store %struct.RigNode* %call6, %struct.RigNode** %cloned_node, align 8, !dbg !5428
  %14 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5433
  %15 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5434
  %16 = bitcast %struct.RigNode* %15 to i8*, !dbg !5434
  %17 = load %struct.RigNode*, %struct.RigNode** %cloned_node, align 8, !dbg !5435
  %18 = bitcast %struct.RigNode* %17 to i8*, !dbg !5435
  call void @BLI_ghash_insert(%struct.GHash* %14, i8* %16, i8* %18), !dbg !5436
  br label %for.inc, !dbg !5437

for.inc:                                          ; preds = %for.body
  %19 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5438
  %next = getelementptr inbounds %struct.RigNode, %struct.RigNode* %19, i32 0, i32 0, !dbg !5439
  %20 = load i8*, i8** %next, align 8, !dbg !5439
  %21 = bitcast i8* %20 to %struct.RigNode*, !dbg !5438
  store %struct.RigNode* %21, %struct.RigNode** %node, align 8, !dbg !5440
  br label %for.cond, !dbg !5441, !llvm.loop !5442

for.end:                                          ; preds = %for.cond
  %22 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5444
  %23 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5445
  %head = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %23, i32 0, i32 10, !dbg !5446
  %24 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !5446
  %25 = bitcast %struct.RigNode* %24 to i8*, !dbg !5445
  %call7 = call i8* @BLI_ghash_lookup(%struct.GHash* %22, i8* %25), !dbg !5447
  %26 = bitcast i8* %call7 to %struct.RigNode*, !dbg !5447
  %27 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5448
  %head8 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %27, i32 0, i32 10, !dbg !5449
  store %struct.RigNode* %26, %struct.RigNode** %head8, align 8, !dbg !5450
  %28 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5451
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %28, i32 0, i32 0, !dbg !5453
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs, i32 0, i32 0, !dbg !5454
  %29 = load i8*, i8** %first9, align 8, !dbg !5454
  %30 = bitcast i8* %29 to %struct.RigArc*, !dbg !5451
  store %struct.RigArc* %30, %struct.RigArc** %arc, align 8, !dbg !5455
  br label %for.cond10, !dbg !5456

for.cond10:                                       ; preds = %for.inc14, %for.end
  %31 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5457
  %tobool11 = icmp ne %struct.RigArc* %31, null, !dbg !5459
  br i1 %tobool11, label %for.body12, label %for.end16, !dbg !5459

for.body12:                                       ; preds = %for.cond10
  %32 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5460
  %33 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5462
  %34 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5463
  %35 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5464
  %36 = load i8*, i8** %side_string.addr, align 8, !dbg !5465
  %37 = load i8*, i8** %num_string.addr, align 8, !dbg !5466
  %call13 = call %struct.RigArc* @cloneArc(%struct.RigGraph* %32, %struct.RigGraph* %33, %struct.RigArc* %34, %struct.GHash* %35, i8* %36, i8* %37), !dbg !5467
  br label %for.inc14, !dbg !5468

for.inc14:                                        ; preds = %for.body12
  %38 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5469
  %next15 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %38, i32 0, i32 0, !dbg !5470
  %39 = load i8*, i8** %next15, align 8, !dbg !5470
  %40 = bitcast i8* %39 to %struct.RigArc*, !dbg !5469
  store %struct.RigArc* %40, %struct.RigArc** %arc, align 8, !dbg !5471
  br label %for.cond10, !dbg !5472, !llvm.loop !5473

for.end16:                                        ; preds = %for.cond10
  %41 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5475
  %controls = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %41, i32 0, i32 8, !dbg !5477
  %first17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls, i32 0, i32 0, !dbg !5478
  %42 = load i8*, i8** %first17, align 8, !dbg !5478
  %43 = bitcast i8* %42 to %struct.RigControl*, !dbg !5475
  store %struct.RigControl* %43, %struct.RigControl** %ctrl, align 8, !dbg !5479
  br label %for.cond18, !dbg !5480

for.cond18:                                       ; preds = %for.inc22, %for.end16
  %44 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5481
  %tobool19 = icmp ne %struct.RigControl* %44, null, !dbg !5483
  br i1 %tobool19, label %for.body20, label %for.end24, !dbg !5483

for.body20:                                       ; preds = %for.cond18
  %45 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5484
  %46 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5486
  %47 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5487
  %48 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5488
  %49 = load i8*, i8** %side_string.addr, align 8, !dbg !5489
  %50 = load i8*, i8** %num_string.addr, align 8, !dbg !5490
  %call21 = call %struct.RigControl* @cloneControl(%struct.RigGraph* %45, %struct.RigGraph* %46, %struct.RigControl* %47, %struct.GHash* %48, i8* %49, i8* %50), !dbg !5491
  br label %for.inc22, !dbg !5492

for.inc22:                                        ; preds = %for.body20
  %51 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5493
  %next23 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %51, i32 0, i32 0, !dbg !5494
  %52 = load %struct.RigControl*, %struct.RigControl** %next23, align 8, !dbg !5494
  store %struct.RigControl* %52, %struct.RigControl** %ctrl, align 8, !dbg !5495
  br label %for.cond18, !dbg !5496, !llvm.loop !5497

for.end24:                                        ; preds = %for.cond18
  %53 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5499
  %arcs25 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %53, i32 0, i32 0, !dbg !5501
  %first26 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs25, i32 0, i32 0, !dbg !5502
  %54 = load i8*, i8** %first26, align 8, !dbg !5502
  %55 = bitcast i8* %54 to %struct.RigArc*, !dbg !5499
  store %struct.RigArc* %55, %struct.RigArc** %arc, align 8, !dbg !5503
  br label %for.cond27, !dbg !5504

for.cond27:                                       ; preds = %for.inc55, %for.end24
  %56 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5505
  %tobool28 = icmp ne %struct.RigArc* %56, null, !dbg !5507
  br i1 %tobool28, label %for.body29, label %for.end57, !dbg !5507

for.body29:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !5508, metadata !DIExpression()), !dbg !5510
  %57 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5511
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %57, i32 0, i32 9, !dbg !5513
  %first30 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !5514
  %58 = load i8*, i8** %first30, align 8, !dbg !5514
  %59 = bitcast i8* %58 to %struct.RigEdge*, !dbg !5511
  store %struct.RigEdge* %59, %struct.RigEdge** %edge, align 8, !dbg !5515
  br label %for.cond31, !dbg !5516

for.cond31:                                       ; preds = %for.inc52, %for.body29
  %60 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5517
  %tobool32 = icmp ne %struct.RigEdge* %60, null, !dbg !5519
  br i1 %tobool32, label %for.body33, label %for.end54, !dbg !5519

for.body33:                                       ; preds = %for.cond31
  %61 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5520
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %61, i32 0, i32 7, !dbg !5523
  %62 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5523
  %cmp = icmp ne %struct.EditBone* %62, null, !dbg !5524
  br i1 %cmp, label %if.then, label %if.end51, !dbg !5525

if.then:                                          ; preds = %for.body33
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone34, metadata !5526, metadata !DIExpression()), !dbg !5528
  %63 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5529
  %bone35 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %63, i32 0, i32 7, !dbg !5530
  %64 = load %struct.EditBone*, %struct.EditBone** %bone35, align 8, !dbg !5530
  %65 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5531
  %editbones36 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %65, i32 0, i32 9, !dbg !5532
  %66 = load %struct.ListBase*, %struct.ListBase** %editbones36, align 8, !dbg !5532
  %67 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5533
  %ob37 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %67, i32 0, i32 16, !dbg !5534
  %68 = load %struct.Object*, %struct.Object** %ob37, align 8, !dbg !5534
  %69 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5535
  %ob38 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %69, i32 0, i32 16, !dbg !5536
  %70 = load %struct.Object*, %struct.Object** %ob38, align 8, !dbg !5536
  call void @updateDuplicateSubtargetObjects(%struct.EditBone* %64, %struct.ListBase* %66, %struct.Object* %68, %struct.Object* %70), !dbg !5537
  %71 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5538
  %bone39 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %71, i32 0, i32 7, !dbg !5540
  %72 = load %struct.EditBone*, %struct.EditBone** %bone39, align 8, !dbg !5540
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %72, i32 0, i32 3, !dbg !5541
  %73 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !5541
  %tobool40 = icmp ne %struct.EditBone* %73, null, !dbg !5538
  br i1 %tobool40, label %if.then41, label %if.end50, !dbg !5542

if.then41:                                        ; preds = %if.then
  %74 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5543
  %75 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5545
  %bone42 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %75, i32 0, i32 7, !dbg !5546
  %76 = load %struct.EditBone*, %struct.EditBone** %bone42, align 8, !dbg !5546
  %parent43 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %76, i32 0, i32 3, !dbg !5547
  %77 = load %struct.EditBone*, %struct.EditBone** %parent43, align 8, !dbg !5547
  %78 = bitcast %struct.EditBone* %77 to i8*, !dbg !5545
  %call44 = call i8* @BLI_ghash_lookup(%struct.GHash* %74, i8* %78), !dbg !5548
  %79 = bitcast i8* %call44 to %struct.EditBone*, !dbg !5548
  store %struct.EditBone* %79, %struct.EditBone** %bone34, align 8, !dbg !5549
  %80 = load %struct.EditBone*, %struct.EditBone** %bone34, align 8, !dbg !5550
  %cmp45 = icmp ne %struct.EditBone* %80, null, !dbg !5552
  br i1 %cmp45, label %if.then46, label %if.else, !dbg !5553

if.then46:                                        ; preds = %if.then41
  %81 = load %struct.EditBone*, %struct.EditBone** %bone34, align 8, !dbg !5554
  %82 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5556
  %bone47 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %82, i32 0, i32 7, !dbg !5557
  %83 = load %struct.EditBone*, %struct.EditBone** %bone47, align 8, !dbg !5557
  %parent48 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %83, i32 0, i32 3, !dbg !5558
  store %struct.EditBone* %81, %struct.EditBone** %parent48, align 8, !dbg !5559
  br label %if.end, !dbg !5560

if.else:                                          ; preds = %if.then41
  %84 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5561
  %bone49 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %84, i32 0, i32 7, !dbg !5563
  %85 = load %struct.EditBone*, %struct.EditBone** %bone49, align 8, !dbg !5563
  %flag = getelementptr inbounds %struct.EditBone, %struct.EditBone* %85, i32 0, i32 9, !dbg !5564
  %86 = load i32, i32* %flag, align 4, !dbg !5565
  %and = and i32 %86, -17, !dbg !5565
  store i32 %and, i32* %flag, align 4, !dbg !5565
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then46
  br label %if.end50, !dbg !5566

if.end50:                                         ; preds = %if.end, %if.then
  br label %if.end51, !dbg !5567

if.end51:                                         ; preds = %if.end50, %for.body33
  br label %for.inc52, !dbg !5568

for.inc52:                                        ; preds = %if.end51
  %87 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5569
  %next53 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %87, i32 0, i32 0, !dbg !5570
  %88 = load %struct.RigEdge*, %struct.RigEdge** %next53, align 8, !dbg !5570
  store %struct.RigEdge* %88, %struct.RigEdge** %edge, align 8, !dbg !5571
  br label %for.cond31, !dbg !5572, !llvm.loop !5573

for.end54:                                        ; preds = %for.cond31
  br label %for.inc55, !dbg !5575

for.inc55:                                        ; preds = %for.end54
  %89 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5576
  %next56 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %89, i32 0, i32 0, !dbg !5577
  %90 = load i8*, i8** %next56, align 8, !dbg !5577
  %91 = bitcast i8* %90 to %struct.RigArc*, !dbg !5576
  store %struct.RigArc* %91, %struct.RigArc** %arc, align 8, !dbg !5578
  br label %for.cond27, !dbg !5579, !llvm.loop !5580

for.end57:                                        ; preds = %for.cond27
  %92 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5582
  %controls58 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %92, i32 0, i32 8, !dbg !5584
  %first59 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls58, i32 0, i32 0, !dbg !5585
  %93 = load i8*, i8** %first59, align 8, !dbg !5585
  %94 = bitcast i8* %93 to %struct.RigControl*, !dbg !5582
  store %struct.RigControl* %94, %struct.RigControl** %ctrl, align 8, !dbg !5586
  br label %for.cond60, !dbg !5587

for.cond60:                                       ; preds = %for.inc89, %for.end57
  %95 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5588
  %tobool61 = icmp ne %struct.RigControl* %95, null, !dbg !5590
  br i1 %tobool61, label %for.body62, label %for.end91, !dbg !5590

for.body62:                                       ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone63, metadata !5591, metadata !DIExpression()), !dbg !5593
  %96 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5594
  %bone64 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %96, i32 0, i32 4, !dbg !5595
  %97 = load %struct.EditBone*, %struct.EditBone** %bone64, align 8, !dbg !5595
  %98 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5596
  %editbones65 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %98, i32 0, i32 9, !dbg !5597
  %99 = load %struct.ListBase*, %struct.ListBase** %editbones65, align 8, !dbg !5597
  %100 = load %struct.RigGraph*, %struct.RigGraph** %src.addr, align 8, !dbg !5598
  %ob66 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %100, i32 0, i32 16, !dbg !5599
  %101 = load %struct.Object*, %struct.Object** %ob66, align 8, !dbg !5599
  %102 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5600
  %ob67 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %102, i32 0, i32 16, !dbg !5601
  %103 = load %struct.Object*, %struct.Object** %ob67, align 8, !dbg !5601
  call void @updateDuplicateSubtargetObjects(%struct.EditBone* %97, %struct.ListBase* %99, %struct.Object* %101, %struct.Object* %103), !dbg !5602
  %104 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5603
  %bone68 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %104, i32 0, i32 4, !dbg !5605
  %105 = load %struct.EditBone*, %struct.EditBone** %bone68, align 8, !dbg !5605
  %parent69 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %105, i32 0, i32 3, !dbg !5606
  %106 = load %struct.EditBone*, %struct.EditBone** %parent69, align 8, !dbg !5606
  %tobool70 = icmp ne %struct.EditBone* %106, null, !dbg !5603
  br i1 %tobool70, label %if.then71, label %if.end84, !dbg !5607

if.then71:                                        ; preds = %for.body62
  %107 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5608
  %108 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5610
  %bone72 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %108, i32 0, i32 4, !dbg !5611
  %109 = load %struct.EditBone*, %struct.EditBone** %bone72, align 8, !dbg !5611
  %parent73 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %109, i32 0, i32 3, !dbg !5612
  %110 = load %struct.EditBone*, %struct.EditBone** %parent73, align 8, !dbg !5612
  %111 = bitcast %struct.EditBone* %110 to i8*, !dbg !5610
  %call74 = call i8* @BLI_ghash_lookup(%struct.GHash* %107, i8* %111), !dbg !5613
  %112 = bitcast i8* %call74 to %struct.EditBone*, !dbg !5613
  store %struct.EditBone* %112, %struct.EditBone** %bone63, align 8, !dbg !5614
  %113 = load %struct.EditBone*, %struct.EditBone** %bone63, align 8, !dbg !5615
  %cmp75 = icmp ne %struct.EditBone* %113, null, !dbg !5617
  br i1 %cmp75, label %if.then76, label %if.else79, !dbg !5618

if.then76:                                        ; preds = %if.then71
  %114 = load %struct.EditBone*, %struct.EditBone** %bone63, align 8, !dbg !5619
  %115 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5621
  %bone77 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %115, i32 0, i32 4, !dbg !5622
  %116 = load %struct.EditBone*, %struct.EditBone** %bone77, align 8, !dbg !5622
  %parent78 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %116, i32 0, i32 3, !dbg !5623
  store %struct.EditBone* %114, %struct.EditBone** %parent78, align 8, !dbg !5624
  br label %if.end83, !dbg !5625

if.else79:                                        ; preds = %if.then71
  %117 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5626
  %bone80 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %117, i32 0, i32 4, !dbg !5628
  %118 = load %struct.EditBone*, %struct.EditBone** %bone80, align 8, !dbg !5628
  %flag81 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %118, i32 0, i32 9, !dbg !5629
  %119 = load i32, i32* %flag81, align 4, !dbg !5630
  %and82 = and i32 %119, -17, !dbg !5630
  store i32 %and82, i32* %flag81, align 4, !dbg !5630
  br label %if.end83

if.end83:                                         ; preds = %if.else79, %if.then76
  br label %if.end84, !dbg !5631

if.end84:                                         ; preds = %if.end83, %for.body62
  %120 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5632
  %121 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5633
  %link = getelementptr inbounds %struct.RigControl, %struct.RigControl* %121, i32 0, i32 5, !dbg !5634
  %122 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !5634
  %123 = bitcast %struct.EditBone* %122 to i8*, !dbg !5633
  %call85 = call i8* @BLI_ghash_lookup(%struct.GHash* %120, i8* %123), !dbg !5635
  %124 = bitcast i8* %call85 to %struct.EditBone*, !dbg !5635
  %125 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5636
  %link86 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %125, i32 0, i32 5, !dbg !5637
  store %struct.EditBone* %124, %struct.EditBone** %link86, align 8, !dbg !5638
  %126 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5639
  %127 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5640
  %link_tail = getelementptr inbounds %struct.RigControl, %struct.RigControl* %127, i32 0, i32 6, !dbg !5641
  %128 = load %struct.EditBone*, %struct.EditBone** %link_tail, align 8, !dbg !5641
  %129 = bitcast %struct.EditBone* %128 to i8*, !dbg !5640
  %call87 = call i8* @BLI_ghash_lookup(%struct.GHash* %126, i8* %129), !dbg !5642
  %130 = bitcast i8* %call87 to %struct.EditBone*, !dbg !5642
  %131 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5643
  %link_tail88 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %131, i32 0, i32 6, !dbg !5644
  store %struct.EditBone* %130, %struct.EditBone** %link_tail88, align 8, !dbg !5645
  br label %for.inc89, !dbg !5646

for.inc89:                                        ; preds = %if.end84
  %132 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5647
  %next90 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %132, i32 0, i32 0, !dbg !5648
  %133 = load %struct.RigControl*, %struct.RigControl** %next90, align 8, !dbg !5648
  store %struct.RigControl* %133, %struct.RigControl** %ctrl, align 8, !dbg !5649
  br label %for.cond60, !dbg !5650, !llvm.loop !5651

for.end91:                                        ; preds = %for.cond60
  %134 = load %struct.GHash*, %struct.GHash** %ptr_hash, align 8, !dbg !5653
  call void @BLI_ghash_free(%struct.GHash* %134, void (i8*)* null, void (i8*)* null), !dbg !5654
  %135 = load %struct.RigGraph*, %struct.RigGraph** %rg, align 8, !dbg !5655
  ret %struct.RigGraph* %135, !dbg !5656
}

; Function Attrs: noinline nounwind uwtable
define internal void @retargetArctoArc(%struct.bContext* %C, %struct.RigGraph* %rigg, %struct.RigArc* %iarc, %struct.RigNode* %inode_start) #0 !dbg !5657 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %iarc.addr = alloca %struct.RigArc*, align 8
  %inode_start.addr = alloca %struct.RigNode*, align 8
  %p = alloca %struct.RetargetParam*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  store %struct.RigArc* %iarc, %struct.RigArc** %iarc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %iarc.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  store %struct.RigNode* %inode_start, %struct.RigNode** %inode_start.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode_start.addr, metadata !5664, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.declare(metadata %struct.RetargetParam** %p, metadata !5666, metadata !DIExpression()), !dbg !5667
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5668
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0)), !dbg !5668
  %1 = bitcast i8* %call to %struct.RetargetParam*, !dbg !5668
  store %struct.RetargetParam* %1, %struct.RetargetParam** %p, align 8, !dbg !5667
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5669
  %3 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !5670
  %rigg1 = getelementptr inbounds %struct.RetargetParam, %struct.RetargetParam* %3, i32 0, i32 0, !dbg !5671
  store %struct.RigGraph* %2, %struct.RigGraph** %rigg1, align 8, !dbg !5672
  %4 = load %struct.RigArc*, %struct.RigArc** %iarc.addr, align 8, !dbg !5673
  %5 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !5674
  %iarc2 = getelementptr inbounds %struct.RetargetParam, %struct.RetargetParam* %5, i32 0, i32 1, !dbg !5675
  store %struct.RigArc* %4, %struct.RigArc** %iarc2, align 8, !dbg !5676
  %6 = load %struct.RigNode*, %struct.RigNode** %inode_start.addr, align 8, !dbg !5677
  %7 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !5678
  %inode_start3 = getelementptr inbounds %struct.RetargetParam, %struct.RetargetParam* %7, i32 0, i32 2, !dbg !5679
  store %struct.RigNode* %6, %struct.RigNode** %inode_start3, align 8, !dbg !5680
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5681
  %9 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !5682
  %context = getelementptr inbounds %struct.RetargetParam, %struct.RetargetParam* %9, i32 0, i32 3, !dbg !5683
  store %struct.bContext* %8, %struct.bContext** %context, align 8, !dbg !5684
  %10 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5685
  %task_pool = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %10, i32 0, i32 13, !dbg !5686
  %11 = load %struct.TaskPool*, %struct.TaskPool** %task_pool, align 8, !dbg !5686
  %12 = load %struct.RetargetParam*, %struct.RetargetParam** %p, align 8, !dbg !5687
  %13 = bitcast %struct.RetargetParam* %12 to i8*, !dbg !5687
  call void @BLI_task_pool_push(%struct.TaskPool* %11, void (%struct.TaskPool*, i8*, i32)* @exec_retargetArctoArc, i8* %13, i8 zeroext 1, i32 1), !dbg !5688
  ret void, !dbg !5689
}

; Function Attrs: noinline nounwind uwtable
define internal void @finishRetarget(%struct.RigGraph* %rigg) #0 !dbg !5690 {
entry:
  %rigg.addr = alloca %struct.RigGraph*, align 8
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !5691, metadata !DIExpression()), !dbg !5692
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5693
  %task_pool = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 13, !dbg !5694
  %1 = load %struct.TaskPool*, %struct.TaskPool** %task_pool, align 8, !dbg !5694
  call void @BLI_task_pool_work_and_wait(%struct.TaskPool* %1), !dbg !5695
  ret void, !dbg !5696
}

declare dso_local void @ED_armature_validate_active(%struct.bArmature*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BIF_adjustRetarget(%struct.bContext* %C) #0 !dbg !5697 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5698, metadata !DIExpression()), !dbg !5699
  %0 = load %struct.RigGraph*, %struct.RigGraph** @GLOBAL_RIGG, align 8, !dbg !5700
  %tobool = icmp ne %struct.RigGraph* %0, null, !dbg !5700
  br i1 %tobool, label %if.then, label %if.end, !dbg !5702

if.then:                                          ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5703
  %2 = load %struct.RigGraph*, %struct.RigGraph** @GLOBAL_RIGG, align 8, !dbg !5705
  call void @adjustGraphs(%struct.bContext* %1, %struct.RigGraph* %2), !dbg !5706
  br label %if.end, !dbg !5707

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5708
}

; Function Attrs: noinline nounwind uwtable
define internal void @adjustGraphs(%struct.bContext* %C, %struct.RigGraph* %rigg) #0 !dbg !5709 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %arc = alloca %struct.RigArc*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5710, metadata !DIExpression()), !dbg !5711
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !5712, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !5714, metadata !DIExpression()), !dbg !5715
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5716
  %ob = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %0, i32 0, i32 16, !dbg !5717
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5717
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !5718
  %2 = load i8*, i8** %data, align 8, !dbg !5718
  %3 = bitcast i8* %2 to %struct.bArmature*, !dbg !5716
  store %struct.bArmature* %3, %struct.bArmature** %arm, align 8, !dbg !5715
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !5719, metadata !DIExpression()), !dbg !5720
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5721
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %4, i32 0, i32 0, !dbg !5723
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arcs, i32 0, i32 0, !dbg !5724
  %5 = load i8*, i8** %first, align 8, !dbg !5724
  %6 = bitcast i8* %5 to %struct.RigArc*, !dbg !5721
  store %struct.RigArc* %6, %struct.RigArc** %arc, align 8, !dbg !5725
  br label %for.cond, !dbg !5726

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5727
  %tobool = icmp ne %struct.RigArc* %7, null, !dbg !5729
  br i1 %tobool, label %for.body, label %for.end, !dbg !5729

for.body:                                         ; preds = %for.cond
  %8 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5730
  %link_mesh = getelementptr inbounds %struct.RigArc, %struct.RigArc* %8, i32 0, i32 11, !dbg !5733
  %9 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh, align 8, !dbg !5733
  %tobool1 = icmp ne %struct.ReebArc* %9, null, !dbg !5730
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5734

if.then:                                          ; preds = %for.body
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5735
  %11 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5737
  %12 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5738
  %13 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5739
  %head = getelementptr inbounds %struct.RigArc, %struct.RigArc* %13, i32 0, i32 2, !dbg !5740
  %14 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !5740
  call void @retargetArctoArc(%struct.bContext* %10, %struct.RigGraph* %11, %struct.RigArc* %12, %struct.RigNode* %14), !dbg !5741
  br label %if.end, !dbg !5742

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5743

for.inc:                                          ; preds = %if.end
  %15 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5744
  %next = getelementptr inbounds %struct.RigArc, %struct.RigArc* %15, i32 0, i32 0, !dbg !5745
  %16 = load i8*, i8** %next, align 8, !dbg !5745
  %17 = bitcast i8* %16 to %struct.RigArc*, !dbg !5744
  store %struct.RigArc* %17, %struct.RigArc** %arc, align 8, !dbg !5746
  br label %for.cond, !dbg !5747, !llvm.loop !5748

for.end:                                          ; preds = %for.cond
  %18 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5750
  call void @finishRetarget(%struct.RigGraph* %18), !dbg !5751
  %19 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !5752
  %editbones = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %19, i32 0, i32 9, !dbg !5753
  %20 = load %struct.ListBase*, %struct.ListBase** %editbones, align 8, !dbg !5753
  %21 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5754
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %21, i32 0, i32 4, !dbg !5755
  store %struct.ListBase* %20, %struct.ListBase** %edbo, align 8, !dbg !5756
  %22 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !5757
  call void @ED_armature_from_edit(%struct.bArmature* %22), !dbg !5758
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5759
  call void @ED_undo_push(%struct.bContext* %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0)), !dbg !5760
  ret void, !dbg !5761
}

declare dso_local void @print_v3(i8*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_printCtrl(%struct.RigControl* %ctrl, i8* %indent) #0 !dbg !5762 {
entry:
  %ctrl.addr = alloca %struct.RigControl*, align 8
  %indent.addr = alloca i8*, align 8
  %text = alloca [128 x i8], align 16
  store %struct.RigControl* %ctrl, %struct.RigControl** %ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl.addr, metadata !5765, metadata !DIExpression()), !dbg !5766
  store i8* %indent, i8** %indent.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %indent.addr, metadata !5767, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.declare(metadata [128 x i8]* %text, metadata !5769, metadata !DIExpression()), !dbg !5770
  %0 = load i8*, i8** %indent.addr, align 8, !dbg !5771
  %1 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !5772
  %bone = getelementptr inbounds %struct.RigControl, %struct.RigControl* %1, i32 0, i32 4, !dbg !5773
  %2 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !5773
  %name = getelementptr inbounds %struct.EditBone, %struct.EditBone* %2, i32 0, i32 5, !dbg !5774
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5772
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i8* %0, i8* %arraydecay), !dbg !5775
  %3 = load i8*, i8** %indent.addr, align 8, !dbg !5776
  %4 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !5777
  %link = getelementptr inbounds %struct.RigControl, %struct.RigControl* %4, i32 0, i32 5, !dbg !5778
  %5 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !5778
  %tobool = icmp ne %struct.EditBone* %5, null, !dbg !5777
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5777

cond.true:                                        ; preds = %entry
  %6 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !5779
  %link1 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %6, i32 0, i32 5, !dbg !5780
  %7 = load %struct.EditBone*, %struct.EditBone** %link1, align 8, !dbg !5780
  %name2 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %7, i32 0, i32 5, !dbg !5781
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %name2, i64 0, i64 0, !dbg !5779
  br label %cond.end, !dbg !5777

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5777

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay3, %cond.true ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), %cond.false ], !dbg !5777
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i8* %3, i8* %cond), !dbg !5782
  %arraydecay5 = getelementptr inbounds [128 x i8], [128 x i8]* %text, i64 0, i64 0, !dbg !5783
  %8 = load i8*, i8** %indent.addr, align 8, !dbg !5784
  %call6 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay5, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i8* %8), !dbg !5785
  %arraydecay7 = getelementptr inbounds [128 x i8], [128 x i8]* %text, i64 0, i64 0, !dbg !5786
  %9 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !5787
  %offset = getelementptr inbounds %struct.RigControl, %struct.RigControl* %9, i32 0, i32 8, !dbg !5788
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !5787
  call void @print_v3(i8* %arraydecay7, float* %arraydecay8), !dbg !5789
  %10 = load i8*, i8** %indent.addr, align 8, !dbg !5790
  %11 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !5791
  %flag = getelementptr inbounds %struct.RigControl, %struct.RigControl* %11, i32 0, i32 10, !dbg !5792
  %12 = load i32, i32* %flag, align 8, !dbg !5792
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0), i8* %10, i32 %12), !dbg !5793
  ret void, !dbg !5794
}

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local %struct.GHash* @BLI_ghash_str_new(i8*) #2

declare dso_local %struct.TaskScheduler* @BLI_task_scheduler_create(i32) #2

declare dso_local %struct.TaskPool* @BLI_task_pool_create(%struct.TaskScheduler*, i8*) #2

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigArc* @newRigArc(%struct.RigGraph* %rg) #0 !dbg !5795 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc = alloca %struct.RigArc*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !5798, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !5800, metadata !DIExpression()), !dbg !5801
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5802
  %call = call i8* %0(i64 88, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0)), !dbg !5802
  %1 = bitcast i8* %call to %struct.RigArc*, !dbg !5802
  store %struct.RigArc* %1, %struct.RigArc** %arc, align 8, !dbg !5803
  %2 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5804
  %count = getelementptr inbounds %struct.RigArc, %struct.RigArc* %2, i32 0, i32 10, !dbg !5805
  store i32 0, i32* %count, align 8, !dbg !5806
  %3 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !5807
  %arcs = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %3, i32 0, i32 0, !dbg !5808
  %4 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5809
  %5 = bitcast %struct.RigArc* %4 to i8*, !dbg !5809
  call void @BLI_addtail(%struct.ListBase* %arcs, i8* %5), !dbg !5810
  %6 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !5811
  ret %struct.RigArc* %6, !dbg !5812
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigNode* @newRigNodeHead(%struct.RigGraph* %rg, %struct.RigArc* %arc, float* %p) #0 !dbg !5813 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc.addr = alloca %struct.RigArc*, align 8
  %p.addr = alloca float*, align 8
  %node = alloca %struct.RigNode*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !5816, metadata !DIExpression()), !dbg !5817
  store %struct.RigArc* %arc, %struct.RigArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc.addr, metadata !5818, metadata !DIExpression()), !dbg !5819
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5820, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.declare(metadata %struct.RigNode** %node, metadata !5822, metadata !DIExpression()), !dbg !5823
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5824
  %call = call i8* %0(i64 80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0)), !dbg !5824
  %1 = bitcast i8* %call to %struct.RigNode*, !dbg !5824
  store %struct.RigNode* %1, %struct.RigNode** %node, align 8, !dbg !5825
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !5826
  %nodes = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %2, i32 0, i32 1, !dbg !5827
  %3 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5828
  %4 = bitcast %struct.RigNode* %3 to i8*, !dbg !5828
  call void @BLI_addtail(%struct.ListBase* %nodes, i8* %4), !dbg !5829
  %5 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5830
  %p1 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %5, i32 0, i32 2, !dbg !5831
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !5830
  %6 = load float*, float** %p.addr, align 8, !dbg !5832
  call void @copy_v3_v3(float* %arraydecay, float* %6), !dbg !5833
  %7 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5834
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %7, i32 0, i32 4, !dbg !5835
  store i32 1, i32* %degree, align 8, !dbg !5836
  %8 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5837
  %arcs = getelementptr inbounds %struct.RigNode, %struct.RigNode* %8, i32 0, i32 5, !dbg !5838
  store %struct.BArc** null, %struct.BArc*** %arcs, align 8, !dbg !5839
  %9 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5840
  %10 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !5841
  %head = getelementptr inbounds %struct.RigArc, %struct.RigArc* %10, i32 0, i32 2, !dbg !5842
  store %struct.RigNode* %9, %struct.RigNode** %head, align 8, !dbg !5843
  %11 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5844
  ret %struct.RigNode* %11, !dbg !5845
}

; Function Attrs: noinline nounwind uwtable
define internal void @addRigNodeHead(%struct.RigGraph* %UNUSED_rg, %struct.RigArc* %arc, %struct.RigNode* %node) #0 !dbg !5846 {
entry:
  %UNUSED_rg.addr = alloca %struct.RigGraph*, align 8
  %arc.addr = alloca %struct.RigArc*, align 8
  %node.addr = alloca %struct.RigNode*, align 8
  store %struct.RigGraph* %UNUSED_rg, %struct.RigGraph** %UNUSED_rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %UNUSED_rg.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  store %struct.RigArc* %arc, %struct.RigArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc.addr, metadata !5851, metadata !DIExpression()), !dbg !5852
  store %struct.RigNode* %node, %struct.RigNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %node.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  %0 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !5855
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %0, i32 0, i32 4, !dbg !5856
  %1 = load i32, i32* %degree, align 8, !dbg !5857
  %inc = add nsw i32 %1, 1, !dbg !5857
  store i32 %inc, i32* %degree, align 8, !dbg !5857
  %2 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !5858
  %3 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !5859
  %head = getelementptr inbounds %struct.RigArc, %struct.RigArc* %3, i32 0, i32 2, !dbg !5860
  store %struct.RigNode* %2, %struct.RigNode** %head, align 8, !dbg !5861
  ret void, !dbg !5862
}

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_addEdgeToArc(%struct.RigArc* %arc, float* %tail, %struct.EditBone* %bone) #0 !dbg !5863 {
entry:
  %arc.addr = alloca %struct.RigArc*, align 8
  %tail.addr = alloca float*, align 8
  %bone.addr = alloca %struct.EditBone*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  store %struct.RigArc* %arc, %struct.RigArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc.addr, metadata !5866, metadata !DIExpression()), !dbg !5867
  store float* %tail, float** %tail.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tail.addr, metadata !5868, metadata !DIExpression()), !dbg !5869
  store %struct.EditBone* %bone, %struct.EditBone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone.addr, metadata !5870, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !5872, metadata !DIExpression()), !dbg !5873
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5874
  %call = call i8* %0(i64 80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)), !dbg !5874
  %1 = bitcast i8* %call to %struct.RigEdge*, !dbg !5874
  store %struct.RigEdge* %1, %struct.RigEdge** %edge, align 8, !dbg !5875
  %2 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5876
  %tail1 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %2, i32 0, i32 3, !dbg !5877
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tail1, i64 0, i64 0, !dbg !5876
  %3 = load float*, float** %tail.addr, align 8, !dbg !5878
  call void @copy_v3_v3(float* %arraydecay, float* %3), !dbg !5879
  %4 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5880
  %5 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5881
  %bone2 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %5, i32 0, i32 7, !dbg !5882
  store %struct.EditBone* %4, %struct.EditBone** %bone2, align 8, !dbg !5883
  %6 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5884
  %tobool = icmp ne %struct.EditBone* %6, null, !dbg !5884
  br i1 %tobool, label %if.then, label %if.end, !dbg !5886

if.then:                                          ; preds = %entry
  %7 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5887
  %8 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5889
  %roll = getelementptr inbounds %struct.EditBone, %struct.EditBone* %8, i32 0, i32 6, !dbg !5890
  %9 = load float, float* %roll, align 8, !dbg !5890
  %10 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5891
  %up_axis = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %10, i32 0, i32 8, !dbg !5892
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %up_axis, i64 0, i64 0, !dbg !5891
  call void @getEditBoneRollUpAxis(%struct.EditBone* %7, float %9, float* %arraydecay3), !dbg !5893
  br label %if.end, !dbg !5894

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !5895
  %12 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !5896
  call void @RIG_appendEdgeToArc(%struct.RigArc* %11, %struct.RigEdge* %12), !dbg !5897
  ret void, !dbg !5898
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_addControlBone(%struct.RigGraph* %rg, %struct.EditBone* %bone) #0 !dbg !5899 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %bone.addr = alloca %struct.EditBone*, align 8
  %ctrl = alloca %struct.RigControl*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !5902, metadata !DIExpression()), !dbg !5903
  store %struct.EditBone* %bone, %struct.EditBone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone.addr, metadata !5904, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !5908
  %call = call %struct.RigControl* @newRigControl(%struct.RigGraph* %0), !dbg !5909
  store %struct.RigControl* %call, %struct.RigControl** %ctrl, align 8, !dbg !5907
  %1 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5910
  %2 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5911
  %bone1 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %2, i32 0, i32 4, !dbg !5912
  store %struct.EditBone* %1, %struct.EditBone** %bone1, align 8, !dbg !5913
  %3 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5914
  %head = getelementptr inbounds %struct.RigControl, %struct.RigControl* %3, i32 0, i32 2, !dbg !5915
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !5914
  %4 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5916
  %head2 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %4, i32 0, i32 7, !dbg !5917
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %head2, i64 0, i64 0, !dbg !5916
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !5918
  %5 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5919
  %tail = getelementptr inbounds %struct.RigControl, %struct.RigControl* %5, i32 0, i32 3, !dbg !5920
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !5919
  %6 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5921
  %tail5 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %6, i32 0, i32 8, !dbg !5922
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %tail5, i64 0, i64 0, !dbg !5921
  call void @copy_v3_v3(float* %arraydecay4, float* %arraydecay6), !dbg !5923
  %7 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5924
  %8 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5925
  %roll = getelementptr inbounds %struct.EditBone, %struct.EditBone* %8, i32 0, i32 6, !dbg !5926
  %9 = load float, float* %roll, align 8, !dbg !5926
  %10 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5927
  %up_axis = getelementptr inbounds %struct.RigControl, %struct.RigControl* %10, i32 0, i32 7, !dbg !5928
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %up_axis, i64 0, i64 0, !dbg !5927
  call void @getEditBoneRollUpAxis(%struct.EditBone* %7, float %9, float* %arraydecay7), !dbg !5929
  %11 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5930
  %tail_mode = getelementptr inbounds %struct.RigControl, %struct.RigControl* %11, i32 0, i32 11, !dbg !5931
  store i32 0, i32* %tail_mode, align 4, !dbg !5932
  %12 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !5933
  %controls_map = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %12, i32 0, i32 15, !dbg !5934
  %13 = load %struct.GHash*, %struct.GHash** %controls_map, align 8, !dbg !5934
  %14 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !5935
  %name = getelementptr inbounds %struct.EditBone, %struct.EditBone* %14, i32 0, i32 5, !dbg !5936
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5935
  %15 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !5937
  %16 = bitcast %struct.RigControl* %15 to i8*, !dbg !5937
  call void @BLI_ghash_insert(%struct.GHash* %13, i8* %arraydecay8, i8* %16), !dbg !5938
  ret void, !dbg !5939
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @countEditBoneChildren(%struct.ListBase* %list, %struct.EditBone* %parent) #0 !dbg !5940 {
entry:
  %list.addr = alloca %struct.ListBase*, align 8
  %parent.addr = alloca %struct.EditBone*, align 8
  %ebone = alloca %struct.EditBone*, align 8
  %count = alloca i32, align 4
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5943, metadata !DIExpression()), !dbg !5944
  store %struct.EditBone* %parent, %struct.EditBone** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %parent.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone, metadata !5947, metadata !DIExpression()), !dbg !5948
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5949, metadata !DIExpression()), !dbg !5950
  store i32 0, i32* %count, align 4, !dbg !5950
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5951
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5953
  %1 = load i8*, i8** %first, align 8, !dbg !5953
  %2 = bitcast i8* %1 to %struct.EditBone*, !dbg !5951
  store %struct.EditBone* %2, %struct.EditBone** %ebone, align 8, !dbg !5954
  br label %for.cond, !dbg !5955

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !5956
  %tobool = icmp ne %struct.EditBone* %3, null, !dbg !5958
  br i1 %tobool, label %for.body, label %for.end, !dbg !5958

for.body:                                         ; preds = %for.cond
  %4 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !5959
  %parent1 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %4, i32 0, i32 3, !dbg !5962
  %5 = load %struct.EditBone*, %struct.EditBone** %parent1, align 8, !dbg !5962
  %6 = load %struct.EditBone*, %struct.EditBone** %parent.addr, align 8, !dbg !5963
  %cmp = icmp eq %struct.EditBone* %5, %6, !dbg !5964
  br i1 %cmp, label %if.then, label %if.end, !dbg !5965

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %count, align 4, !dbg !5966
  %inc = add nsw i32 %7, 1, !dbg !5966
  store i32 %inc, i32* %count, align 4, !dbg !5966
  br label %if.end, !dbg !5968

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5969

for.inc:                                          ; preds = %if.end
  %8 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !5970
  %next = getelementptr inbounds %struct.EditBone, %struct.EditBone* %8, i32 0, i32 0, !dbg !5971
  %9 = load %struct.EditBone*, %struct.EditBone** %next, align 8, !dbg !5971
  store %struct.EditBone* %9, %struct.EditBone** %ebone, align 8, !dbg !5972
  br label %for.cond, !dbg !5973, !llvm.loop !5974

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %count, align 4, !dbg !5976
  ret i32 %10, !dbg !5977
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigNode* @newRigNodeTail(%struct.RigGraph* %rg, %struct.RigArc* %arc, float* %p) #0 !dbg !5978 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %arc.addr = alloca %struct.RigArc*, align 8
  %p.addr = alloca float*, align 8
  %node = alloca %struct.RigNode*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !5979, metadata !DIExpression()), !dbg !5980
  store %struct.RigArc* %arc, %struct.RigArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc.addr, metadata !5981, metadata !DIExpression()), !dbg !5982
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5983, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.declare(metadata %struct.RigNode** %node, metadata !5985, metadata !DIExpression()), !dbg !5986
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !5987
  %1 = load float*, float** %p.addr, align 8, !dbg !5988
  %call = call %struct.RigNode* @newRigNode(%struct.RigGraph* %0, float* %1), !dbg !5989
  store %struct.RigNode* %call, %struct.RigNode** %node, align 8, !dbg !5986
  %2 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5990
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %2, i32 0, i32 4, !dbg !5991
  store i32 1, i32* %degree, align 8, !dbg !5992
  %3 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5993
  %4 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !5994
  %tail = getelementptr inbounds %struct.RigArc, %struct.RigArc* %4, i32 0, i32 3, !dbg !5995
  store %struct.RigNode* %3, %struct.RigNode** %tail, align 8, !dbg !5996
  %5 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !5997
  ret %struct.RigNode* %5, !dbg !5998
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigNode* @newRigNode(%struct.RigGraph* %rg, float* %p) #0 !dbg !5999 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %p.addr = alloca float*, align 8
  %node = alloca %struct.RigNode*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !6002, metadata !DIExpression()), !dbg !6003
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata %struct.RigNode** %node, metadata !6006, metadata !DIExpression()), !dbg !6007
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6008
  %call = call i8* %0(i64 80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0)), !dbg !6008
  %1 = bitcast i8* %call to %struct.RigNode*, !dbg !6008
  store %struct.RigNode* %1, %struct.RigNode** %node, align 8, !dbg !6009
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !6010
  %nodes = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %2, i32 0, i32 1, !dbg !6011
  %3 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !6012
  %4 = bitcast %struct.RigNode* %3 to i8*, !dbg !6012
  call void @BLI_addtail(%struct.ListBase* %nodes, i8* %4), !dbg !6013
  %5 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !6014
  %p1 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %5, i32 0, i32 2, !dbg !6015
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !6014
  %6 = load float*, float** %p.addr, align 8, !dbg !6016
  call void @copy_v3_v3(float* %arraydecay, float* %6), !dbg !6017
  %7 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !6018
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %7, i32 0, i32 4, !dbg !6019
  store i32 0, i32* %degree, align 8, !dbg !6020
  %8 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !6021
  %arcs = getelementptr inbounds %struct.RigNode, %struct.RigNode* %8, i32 0, i32 5, !dbg !6022
  store %struct.BArc** null, %struct.BArc*** %arcs, align 8, !dbg !6023
  %9 = load %struct.RigNode*, %struct.RigNode** %node, align 8, !dbg !6024
  ret %struct.RigNode* %9, !dbg !6025
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.EditBone* @nextEditBoneChild(%struct.ListBase* %list, %struct.EditBone* %parent, i32 %n) #0 !dbg !6026 {
entry:
  %retval = alloca %struct.EditBone*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %parent.addr = alloca %struct.EditBone*, align 8
  %n.addr = alloca i32, align 4
  %ebone = alloca %struct.EditBone*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !6029, metadata !DIExpression()), !dbg !6030
  store %struct.EditBone* %parent, %struct.EditBone** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %parent.addr, metadata !6031, metadata !DIExpression()), !dbg !6032
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6033, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.declare(metadata %struct.EditBone** %ebone, metadata !6035, metadata !DIExpression()), !dbg !6036
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !6037
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !6039
  %1 = load i8*, i8** %first, align 8, !dbg !6039
  %2 = bitcast i8* %1 to %struct.EditBone*, !dbg !6037
  store %struct.EditBone* %2, %struct.EditBone** %ebone, align 8, !dbg !6040
  br label %for.cond, !dbg !6041

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !6042
  %tobool = icmp ne %struct.EditBone* %3, null, !dbg !6044
  br i1 %tobool, label %for.body, label %for.end, !dbg !6044

for.body:                                         ; preds = %for.cond
  %4 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !6045
  %parent1 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %4, i32 0, i32 3, !dbg !6048
  %5 = load %struct.EditBone*, %struct.EditBone** %parent1, align 8, !dbg !6048
  %6 = load %struct.EditBone*, %struct.EditBone** %parent.addr, align 8, !dbg !6049
  %cmp = icmp eq %struct.EditBone* %5, %6, !dbg !6050
  br i1 %cmp, label %if.then, label %if.end4, !dbg !6051

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %n.addr, align 4, !dbg !6052
  %cmp2 = icmp eq i32 %7, 0, !dbg !6055
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !6056

if.then3:                                         ; preds = %if.then
  %8 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !6057
  store %struct.EditBone* %8, %struct.EditBone** %retval, align 8, !dbg !6059
  br label %return, !dbg !6059

if.end:                                           ; preds = %if.then
  %9 = load i32, i32* %n.addr, align 4, !dbg !6060
  %dec = add nsw i32 %9, -1, !dbg !6060
  store i32 %dec, i32* %n.addr, align 4, !dbg !6060
  br label %if.end4, !dbg !6061

if.end4:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6062

for.inc:                                          ; preds = %if.end4
  %10 = load %struct.EditBone*, %struct.EditBone** %ebone, align 8, !dbg !6063
  %next = getelementptr inbounds %struct.EditBone, %struct.EditBone* %10, i32 0, i32 0, !dbg !6064
  %11 = load %struct.EditBone*, %struct.EditBone** %next, align 8, !dbg !6064
  store %struct.EditBone* %11, %struct.EditBone** %ebone, align 8, !dbg !6065
  br label %for.cond, !dbg !6066, !llvm.loop !6067

for.end:                                          ; preds = %for.cond
  store %struct.EditBone* null, %struct.EditBone** %retval, align 8, !dbg !6069
  br label %return, !dbg !6069

return:                                           ; preds = %for.end, %if.then3
  %12 = load %struct.EditBone*, %struct.EditBone** %retval, align 8, !dbg !6070
  ret %struct.EditBone* %12, !dbg !6070
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @getEditBoneRollUpAxis(%struct.EditBone* %bone, float %roll, float* %up_axis) #0 !dbg !6071 {
entry:
  %bone.addr = alloca %struct.EditBone*, align 8
  %roll.addr = alloca float, align 4
  %up_axis.addr = alloca float*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %nor = alloca [3 x float], align 4
  store %struct.EditBone* %bone, %struct.EditBone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone.addr, metadata !6074, metadata !DIExpression()), !dbg !6075
  store float %roll, float* %roll.addr, align 4
  call void @llvm.dbg.declare(metadata float* %roll.addr, metadata !6076, metadata !DIExpression()), !dbg !6077
  store float* %up_axis, float** %up_axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %up_axis.addr, metadata !6078, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !6080, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !6082, metadata !DIExpression()), !dbg !6083
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6084
  %0 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !6085
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %0, i32 0, i32 8, !dbg !6086
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6085
  %1 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !6087
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %1, i32 0, i32 7, !dbg !6088
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6087
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !6089
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6090
  %2 = load float, float* %roll.addr, align 4, !dbg !6091
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !6092
  call void @vec_roll_to_mat3(float* %arraydecay3, float %2, [3 x float]* %arraydecay4), !dbg !6093
  %3 = load float*, float** %up_axis.addr, align 8, !dbg !6094
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 2, !dbg !6095
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6095
  call void @copy_v3_v3(float* %3, float* %arraydecay5), !dbg !6096
  ret void, !dbg !6097
}

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_appendEdgeToArc(%struct.RigArc* %arc, %struct.RigEdge* %edge) #0 !dbg !6098 {
entry:
  %arc.addr = alloca %struct.RigArc*, align 8
  %edge.addr = alloca %struct.RigEdge*, align 8
  %last_edge = alloca %struct.RigEdge*, align 8
  store %struct.RigArc* %arc, %struct.RigArc** %arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc.addr, metadata !6101, metadata !DIExpression()), !dbg !6102
  store %struct.RigEdge* %edge, %struct.RigEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  %0 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !6105
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %0, i32 0, i32 9, !dbg !6106
  %1 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6107
  %2 = bitcast %struct.RigEdge* %1 to i8*, !dbg !6107
  call void @BLI_addtail(%struct.ListBase* %edges, i8* %2), !dbg !6108
  %3 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6109
  %prev = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %3, i32 0, i32 1, !dbg !6111
  %4 = load %struct.RigEdge*, %struct.RigEdge** %prev, align 8, !dbg !6111
  %cmp = icmp eq %struct.RigEdge* %4, null, !dbg !6112
  br i1 %cmp, label %if.then, label %if.else, !dbg !6113

if.then:                                          ; preds = %entry
  %5 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6114
  %head = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %5, i32 0, i32 2, !dbg !6116
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6114
  %6 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !6117
  %head1 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %6, i32 0, i32 2, !dbg !6118
  %7 = load %struct.RigNode*, %struct.RigNode** %head1, align 8, !dbg !6118
  %p = getelementptr inbounds %struct.RigNode, %struct.RigNode* %7, i32 0, i32 2, !dbg !6119
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6117
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !6120
  br label %if.end, !dbg !6121

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %last_edge, metadata !6122, metadata !DIExpression()), !dbg !6124
  %8 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6125
  %prev3 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %8, i32 0, i32 1, !dbg !6126
  %9 = load %struct.RigEdge*, %struct.RigEdge** %prev3, align 8, !dbg !6126
  store %struct.RigEdge* %9, %struct.RigEdge** %last_edge, align 8, !dbg !6124
  %10 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6127
  %head4 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %10, i32 0, i32 2, !dbg !6128
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %head4, i64 0, i64 0, !dbg !6127
  %11 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !6129
  %tail = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %11, i32 0, i32 3, !dbg !6130
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6129
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay6), !dbg !6131
  %12 = load %struct.RigEdge*, %struct.RigEdge** %last_edge, align 8, !dbg !6132
  %13 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6133
  call void @RIG_calculateEdgeAngles(%struct.RigEdge* %12, %struct.RigEdge* %13), !dbg !6134
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6135
  %head7 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %14, i32 0, i32 2, !dbg !6136
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %head7, i64 0, i64 0, !dbg !6135
  %15 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6137
  %tail9 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %15, i32 0, i32 3, !dbg !6138
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %tail9, i64 0, i64 0, !dbg !6137
  %call = call float @len_v3v3(float* %arraydecay8, float* %arraydecay10), !dbg !6139
  %16 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6140
  %length = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %16, i32 0, i32 4, !dbg !6141
  store float %call, float* %length, align 8, !dbg !6142
  %17 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6143
  %length11 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %17, i32 0, i32 4, !dbg !6144
  %18 = load float, float* %length11, align 8, !dbg !6144
  %19 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !6145
  %length12 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %19, i32 0, i32 5, !dbg !6146
  %20 = load float, float* %length12, align 4, !dbg !6147
  %add = fadd float %20, %18, !dbg !6147
  store float %add, float* %length12, align 4, !dbg !6147
  %21 = load %struct.RigArc*, %struct.RigArc** %arc.addr, align 8, !dbg !6148
  %count = getelementptr inbounds %struct.RigArc, %struct.RigArc* %21, i32 0, i32 10, !dbg !6149
  %22 = load i32, i32* %count, align 8, !dbg !6150
  %add13 = add nsw i32 %22, 1, !dbg !6150
  store i32 %add13, i32* %count, align 8, !dbg !6150
  ret void, !dbg !6151
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6152 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6155, metadata !DIExpression()), !dbg !6156
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6157, metadata !DIExpression()), !dbg !6158
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6159, metadata !DIExpression()), !dbg !6160
  %0 = load float*, float** %a.addr, align 8, !dbg !6161
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6161
  %1 = load float, float* %arrayidx, align 4, !dbg !6161
  %2 = load float*, float** %b.addr, align 8, !dbg !6162
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6162
  %3 = load float, float* %arrayidx1, align 4, !dbg !6162
  %sub = fsub float %1, %3, !dbg !6163
  %4 = load float*, float** %r.addr, align 8, !dbg !6164
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6164
  store float %sub, float* %arrayidx2, align 4, !dbg !6165
  %5 = load float*, float** %a.addr, align 8, !dbg !6166
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6166
  %6 = load float, float* %arrayidx3, align 4, !dbg !6166
  %7 = load float*, float** %b.addr, align 8, !dbg !6167
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6167
  %8 = load float, float* %arrayidx4, align 4, !dbg !6167
  %sub5 = fsub float %6, %8, !dbg !6168
  %9 = load float*, float** %r.addr, align 8, !dbg !6169
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6169
  store float %sub5, float* %arrayidx6, align 4, !dbg !6170
  %10 = load float*, float** %a.addr, align 8, !dbg !6171
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !6171
  %11 = load float, float* %arrayidx7, align 4, !dbg !6171
  %12 = load float*, float** %b.addr, align 8, !dbg !6172
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !6172
  %13 = load float, float* %arrayidx8, align 4, !dbg !6172
  %sub9 = fsub float %11, %13, !dbg !6173
  %14 = load float*, float** %r.addr, align 8, !dbg !6174
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !6174
  store float %sub9, float* %arrayidx10, align 4, !dbg !6175
  ret void, !dbg !6176
}

declare dso_local void @vec_roll_to_mat3(float*, float, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_calculateEdgeAngles(%struct.RigEdge* %edge_first, %struct.RigEdge* %edge_second) #0 !dbg !6177 {
entry:
  %edge_first.addr = alloca %struct.RigEdge*, align 8
  %edge_second.addr = alloca %struct.RigEdge*, align 8
  %vec_first = alloca [3 x float], align 4
  %vec_second = alloca [3 x float], align 4
  %normal = alloca [3 x float], align 4
  store %struct.RigEdge* %edge_first, %struct.RigEdge** %edge_first.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge_first.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  store %struct.RigEdge* %edge_second, %struct.RigEdge** %edge_second.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge_second.addr, metadata !6182, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_first, metadata !6184, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_second, metadata !6186, metadata !DIExpression()), !dbg !6187
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !6188
  %0 = load %struct.RigEdge*, %struct.RigEdge** %edge_first.addr, align 8, !dbg !6189
  %tail = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %0, i32 0, i32 3, !dbg !6190
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6189
  %1 = load %struct.RigEdge*, %struct.RigEdge** %edge_first.addr, align 8, !dbg !6191
  %head = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %1, i32 0, i32 2, !dbg !6192
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6191
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !6193
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !6194
  %2 = load %struct.RigEdge*, %struct.RigEdge** %edge_second.addr, align 8, !dbg !6195
  %tail4 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %2, i32 0, i32 3, !dbg !6196
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %tail4, i64 0, i64 0, !dbg !6195
  %3 = load %struct.RigEdge*, %struct.RigEdge** %edge_second.addr, align 8, !dbg !6197
  %head6 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %3, i32 0, i32 2, !dbg !6198
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %head6, i64 0, i64 0, !dbg !6197
  call void @sub_v3_v3v3(float* %arraydecay3, float* %arraydecay5, float* %arraydecay7), !dbg !6199
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !6200
  %call = call float @normalize_v3(float* %arraydecay8), !dbg !6201
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !6202
  %call10 = call float @normalize_v3(float* %arraydecay9), !dbg !6203
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !6204
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !6205
  %call13 = call float @angle_normalized_v3v3(float* %arraydecay11, float* %arraydecay12), !dbg !6206
  %4 = load %struct.RigEdge*, %struct.RigEdge** %edge_first.addr, align 8, !dbg !6207
  %angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %4, i32 0, i32 5, !dbg !6208
  store float %call13, float* %angle, align 4, !dbg !6209
  %5 = load %struct.RigEdge*, %struct.RigEdge** %edge_second.addr, align 8, !dbg !6210
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %5, i32 0, i32 7, !dbg !6212
  %6 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !6212
  %cmp = icmp ne %struct.EditBone* %6, null, !dbg !6213
  br i1 %cmp, label %if.then, label %if.end, !dbg !6214

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !6215, metadata !DIExpression()), !dbg !6217
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !6218
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !6219
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !6220
  call void @cross_v3_v3v3(float* %arraydecay14, float* %arraydecay15, float* %arraydecay16), !dbg !6221
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !6222
  %call18 = call float @normalize_v3(float* %arraydecay17), !dbg !6223
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !6224
  %7 = load %struct.RigEdge*, %struct.RigEdge** %edge_second.addr, align 8, !dbg !6225
  %up_axis = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %7, i32 0, i32 8, !dbg !6226
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %up_axis, i64 0, i64 0, !dbg !6225
  %call21 = call float @angle_normalized_v3v3(float* %arraydecay19, float* %arraydecay20), !dbg !6227
  %8 = load %struct.RigEdge*, %struct.RigEdge** %edge_second.addr, align 8, !dbg !6228
  %up_angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %8, i32 0, i32 6, !dbg !6229
  store float %call21, float* %up_angle, align 8, !dbg !6230
  br label %if.end, !dbg !6231

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6232
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !6233 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6236, metadata !DIExpression()), !dbg !6237
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6238, metadata !DIExpression()), !dbg !6239
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !6240, metadata !DIExpression()), !dbg !6241
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6242
  %0 = load float*, float** %b.addr, align 8, !dbg !6243
  %1 = load float*, float** %a.addr, align 8, !dbg !6244
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !6245
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6246
  %call = call float @len_v3(float* %arraydecay1), !dbg !6247
  ret float %call, !dbg !6248
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !6249 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !6252, metadata !DIExpression()), !dbg !6253
  %0 = load float*, float** %n.addr, align 8, !dbg !6254
  %1 = load float*, float** %n.addr, align 8, !dbg !6255
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !6256
  ret float %call, !dbg !6257
}

declare dso_local float @angle_normalized_v3v3(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6258 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  %0 = load float*, float** %a.addr, align 8, !dbg !6265
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !6265
  %1 = load float, float* %arrayidx, align 4, !dbg !6265
  %2 = load float*, float** %b.addr, align 8, !dbg !6266
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !6266
  %3 = load float, float* %arrayidx1, align 4, !dbg !6266
  %mul = fmul float %1, %3, !dbg !6267
  %4 = load float*, float** %a.addr, align 8, !dbg !6268
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !6268
  %5 = load float, float* %arrayidx2, align 4, !dbg !6268
  %6 = load float*, float** %b.addr, align 8, !dbg !6269
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6269
  %7 = load float, float* %arrayidx3, align 4, !dbg !6269
  %mul4 = fmul float %5, %7, !dbg !6270
  %sub = fsub float %mul, %mul4, !dbg !6271
  %8 = load float*, float** %r.addr, align 8, !dbg !6272
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !6272
  store float %sub, float* %arrayidx5, align 4, !dbg !6273
  %9 = load float*, float** %a.addr, align 8, !dbg !6274
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !6274
  %10 = load float, float* %arrayidx6, align 4, !dbg !6274
  %11 = load float*, float** %b.addr, align 8, !dbg !6275
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !6275
  %12 = load float, float* %arrayidx7, align 4, !dbg !6275
  %mul8 = fmul float %10, %12, !dbg !6276
  %13 = load float*, float** %a.addr, align 8, !dbg !6277
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !6277
  %14 = load float, float* %arrayidx9, align 4, !dbg !6277
  %15 = load float*, float** %b.addr, align 8, !dbg !6278
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !6278
  %16 = load float, float* %arrayidx10, align 4, !dbg !6278
  %mul11 = fmul float %14, %16, !dbg !6279
  %sub12 = fsub float %mul8, %mul11, !dbg !6280
  %17 = load float*, float** %r.addr, align 8, !dbg !6281
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !6281
  store float %sub12, float* %arrayidx13, align 4, !dbg !6282
  %18 = load float*, float** %a.addr, align 8, !dbg !6283
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !6283
  %19 = load float, float* %arrayidx14, align 4, !dbg !6283
  %20 = load float*, float** %b.addr, align 8, !dbg !6284
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !6284
  %21 = load float, float* %arrayidx15, align 4, !dbg !6284
  %mul16 = fmul float %19, %21, !dbg !6285
  %22 = load float*, float** %a.addr, align 8, !dbg !6286
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !6286
  %23 = load float, float* %arrayidx17, align 4, !dbg !6286
  %24 = load float*, float** %b.addr, align 8, !dbg !6287
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !6287
  %25 = load float, float* %arrayidx18, align 4, !dbg !6287
  %mul19 = fmul float %23, %25, !dbg !6288
  %sub20 = fsub float %mul16, %mul19, !dbg !6289
  %26 = load float*, float** %r.addr, align 8, !dbg !6290
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !6290
  store float %sub20, float* %arrayidx21, align 4, !dbg !6291
  ret void, !dbg !6292
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !6293 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6298, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.declare(metadata float* %d, metadata !6300, metadata !DIExpression()), !dbg !6301
  %0 = load float*, float** %a.addr, align 8, !dbg !6302
  %1 = load float*, float** %a.addr, align 8, !dbg !6303
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !6304
  store float %call, float* %d, align 4, !dbg !6301
  %2 = load float, float* %d, align 4, !dbg !6305
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !6307
  br i1 %cmp, label %if.then, label %if.else, !dbg !6308

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !6309
  %call1 = call float @sqrtf(float %3) #7, !dbg !6311
  store float %call1, float* %d, align 4, !dbg !6312
  %4 = load float*, float** %r.addr, align 8, !dbg !6313
  %5 = load float*, float** %a.addr, align 8, !dbg !6314
  %6 = load float, float* %d, align 4, !dbg !6315
  %div = fdiv float 1.000000e+00, %6, !dbg !6316
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !6317
  br label %if.end, !dbg !6318

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !6319
  call void @zero_v3(float* %7), !dbg !6321
  store float 0.000000e+00, float* %d, align 4, !dbg !6322
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !6323
  ret float %8, !dbg !6324
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !6325 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6326, metadata !DIExpression()), !dbg !6327
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6328, metadata !DIExpression()), !dbg !6329
  %0 = load float*, float** %a.addr, align 8, !dbg !6330
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6330
  %1 = load float, float* %arrayidx, align 4, !dbg !6330
  %2 = load float*, float** %b.addr, align 8, !dbg !6331
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6331
  %3 = load float, float* %arrayidx1, align 4, !dbg !6331
  %mul = fmul float %1, %3, !dbg !6332
  %4 = load float*, float** %a.addr, align 8, !dbg !6333
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6333
  %5 = load float, float* %arrayidx2, align 4, !dbg !6333
  %6 = load float*, float** %b.addr, align 8, !dbg !6334
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6334
  %7 = load float, float* %arrayidx3, align 4, !dbg !6334
  %mul4 = fmul float %5, %7, !dbg !6335
  %add = fadd float %mul, %mul4, !dbg !6336
  %8 = load float*, float** %a.addr, align 8, !dbg !6337
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6337
  %9 = load float, float* %arrayidx5, align 4, !dbg !6337
  %10 = load float*, float** %b.addr, align 8, !dbg !6338
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6338
  %11 = load float, float* %arrayidx6, align 4, !dbg !6338
  %mul7 = fmul float %9, %11, !dbg !6339
  %add8 = fadd float %add, %mul7, !dbg !6340
  ret float %add8, !dbg !6341
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !6342 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6345, metadata !DIExpression()), !dbg !6346
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6347, metadata !DIExpression()), !dbg !6348
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6349, metadata !DIExpression()), !dbg !6350
  %0 = load float*, float** %a.addr, align 8, !dbg !6351
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6351
  %1 = load float, float* %arrayidx, align 4, !dbg !6351
  %2 = load float, float* %f.addr, align 4, !dbg !6352
  %mul = fmul float %1, %2, !dbg !6353
  %3 = load float*, float** %r.addr, align 8, !dbg !6354
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !6354
  store float %mul, float* %arrayidx1, align 4, !dbg !6355
  %4 = load float*, float** %a.addr, align 8, !dbg !6356
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6356
  %5 = load float, float* %arrayidx2, align 4, !dbg !6356
  %6 = load float, float* %f.addr, align 4, !dbg !6357
  %mul3 = fmul float %5, %6, !dbg !6358
  %7 = load float*, float** %r.addr, align 8, !dbg !6359
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6359
  store float %mul3, float* %arrayidx4, align 4, !dbg !6360
  %8 = load float*, float** %a.addr, align 8, !dbg !6361
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6361
  %9 = load float, float* %arrayidx5, align 4, !dbg !6361
  %10 = load float, float* %f.addr, align 4, !dbg !6362
  %mul6 = fmul float %9, %10, !dbg !6363
  %11 = load float*, float** %r.addr, align 8, !dbg !6364
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !6364
  store float %mul6, float* %arrayidx7, align 4, !dbg !6365
  ret void, !dbg !6366
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !6367 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6370, metadata !DIExpression()), !dbg !6371
  %0 = load float*, float** %r.addr, align 8, !dbg !6372
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6372
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6373
  %1 = load float*, float** %r.addr, align 8, !dbg !6374
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6374
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6375
  %2 = load float*, float** %r.addr, align 8, !dbg !6376
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6376
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6377
  ret void, !dbg !6378
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !6379 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6382, metadata !DIExpression()), !dbg !6383
  %0 = load float*, float** %a.addr, align 8, !dbg !6384
  %1 = load float*, float** %a.addr, align 8, !dbg !6385
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !6386
  %call1 = call float @sqrtf(float %call) #7, !dbg !6387
  ret float %call1, !dbg !6388
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigControl* @newRigControl(%struct.RigGraph* %rg) #0 !dbg !6389 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %ctrl = alloca %struct.RigControl*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !6392, metadata !DIExpression()), !dbg !6393
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl, metadata !6394, metadata !DIExpression()), !dbg !6395
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6396
  %call = call i8* %0(i64 112, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0)), !dbg !6396
  %1 = bitcast i8* %call to %struct.RigControl*, !dbg !6396
  store %struct.RigControl* %1, %struct.RigControl** %ctrl, align 8, !dbg !6397
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !6398
  %controls = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %2, i32 0, i32 8, !dbg !6399
  %3 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !6400
  %4 = bitcast %struct.RigControl* %3 to i8*, !dbg !6400
  call void @BLI_addtail(%struct.ListBase* %controls, i8* %4), !dbg !6401
  %5 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !6402
  ret %struct.RigControl* %5, !dbg !6403
}

; Function Attrs: noinline nounwind uwtable
define internal void @RIG_joinArcs(%struct.RigGraph* %rg, %struct.RigNode* %node, %struct.RigArc* %joined_arc1, %struct.RigArc* %joined_arc2) #0 !dbg !6404 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %node.addr = alloca %struct.RigNode*, align 8
  %joined_arc1.addr = alloca %struct.RigArc*, align 8
  %joined_arc2.addr = alloca %struct.RigArc*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  %next_edge = alloca %struct.RigEdge*, align 8
  %tmp = alloca %struct.RigArc*, align 8
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !6407, metadata !DIExpression()), !dbg !6408
  store %struct.RigNode* %node, %struct.RigNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %node.addr, metadata !6409, metadata !DIExpression()), !dbg !6410
  store %struct.RigArc* %joined_arc1, %struct.RigArc** %joined_arc1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %joined_arc1.addr, metadata !6411, metadata !DIExpression()), !dbg !6412
  store %struct.RigArc* %joined_arc2, %struct.RigArc** %joined_arc2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %joined_arc2.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !6415, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %next_edge, metadata !6417, metadata !DIExpression()), !dbg !6418
  %0 = load %struct.RigArc*, %struct.RigArc** %joined_arc1.addr, align 8, !dbg !6419
  %head = getelementptr inbounds %struct.RigArc, %struct.RigArc* %0, i32 0, i32 2, !dbg !6421
  %1 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !6421
  %2 = load %struct.RigArc*, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6422
  %head1 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %2, i32 0, i32 2, !dbg !6423
  %3 = load %struct.RigNode*, %struct.RigNode** %head1, align 8, !dbg !6423
  %cmp = icmp eq %struct.RigNode* %1, %3, !dbg !6424
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6425

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.RigArc*, %struct.RigArc** %joined_arc1.addr, align 8, !dbg !6426
  %tail = getelementptr inbounds %struct.RigArc, %struct.RigArc* %4, i32 0, i32 3, !dbg !6427
  %5 = load %struct.RigNode*, %struct.RigNode** %tail, align 8, !dbg !6427
  %6 = load %struct.RigArc*, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6428
  %tail2 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %6, i32 0, i32 3, !dbg !6429
  %7 = load %struct.RigNode*, %struct.RigNode** %tail2, align 8, !dbg !6429
  %cmp3 = icmp eq %struct.RigNode* %5, %7, !dbg !6430
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6431

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6432

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.RigArc*, %struct.RigArc** %joined_arc1.addr, align 8, !dbg !6434
  %head4 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %8, i32 0, i32 2, !dbg !6436
  %9 = load %struct.RigNode*, %struct.RigNode** %head4, align 8, !dbg !6436
  %10 = load %struct.RigArc*, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6437
  %tail5 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %10, i32 0, i32 3, !dbg !6438
  %11 = load %struct.RigNode*, %struct.RigNode** %tail5, align 8, !dbg !6438
  %cmp6 = icmp eq %struct.RigNode* %9, %11, !dbg !6439
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6440

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.RigArc** %tmp, metadata !6441, metadata !DIExpression()), !dbg !6443
  %12 = load %struct.RigArc*, %struct.RigArc** %joined_arc1.addr, align 8, !dbg !6444
  store %struct.RigArc* %12, %struct.RigArc** %tmp, align 8, !dbg !6443
  %13 = load %struct.RigArc*, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6445
  store %struct.RigArc* %13, %struct.RigArc** %joined_arc1.addr, align 8, !dbg !6446
  %14 = load %struct.RigArc*, %struct.RigArc** %tmp, align 8, !dbg !6447
  store %struct.RigArc* %14, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6448
  br label %if.end8, !dbg !6449

if.end8:                                          ; preds = %if.then7, %if.end
  %15 = load %struct.RigArc*, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6450
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %15, i32 0, i32 9, !dbg !6452
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !6453
  %16 = load i8*, i8** %first, align 8, !dbg !6453
  %17 = bitcast i8* %16 to %struct.RigEdge*, !dbg !6450
  store %struct.RigEdge* %17, %struct.RigEdge** %edge, align 8, !dbg !6454
  br label %for.cond, !dbg !6455

for.cond:                                         ; preds = %for.inc, %if.end8
  %18 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !6456
  %tobool = icmp ne %struct.RigEdge* %18, null, !dbg !6458
  br i1 %tobool, label %for.body, label %for.end, !dbg !6458

for.body:                                         ; preds = %for.cond
  %19 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !6459
  %next = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %19, i32 0, i32 0, !dbg !6461
  %20 = load %struct.RigEdge*, %struct.RigEdge** %next, align 8, !dbg !6461
  store %struct.RigEdge* %20, %struct.RigEdge** %next_edge, align 8, !dbg !6462
  %21 = load %struct.RigArc*, %struct.RigArc** %joined_arc1.addr, align 8, !dbg !6463
  %22 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !6464
  call void @RIG_appendEdgeToArc(%struct.RigArc* %21, %struct.RigEdge* %22), !dbg !6465
  br label %for.inc, !dbg !6466

for.inc:                                          ; preds = %for.body
  %23 = load %struct.RigEdge*, %struct.RigEdge** %next_edge, align 8, !dbg !6467
  store %struct.RigEdge* %23, %struct.RigEdge** %edge, align 8, !dbg !6468
  br label %for.cond, !dbg !6469, !llvm.loop !6470

for.end:                                          ; preds = %for.cond
  %24 = load %struct.RigArc*, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6472
  %tail9 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %24, i32 0, i32 3, !dbg !6473
  %25 = load %struct.RigNode*, %struct.RigNode** %tail9, align 8, !dbg !6473
  %26 = load %struct.RigArc*, %struct.RigArc** %joined_arc1.addr, align 8, !dbg !6474
  %tail10 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %26, i32 0, i32 3, !dbg !6475
  store %struct.RigNode* %25, %struct.RigNode** %tail10, align 8, !dbg !6476
  %27 = load %struct.RigArc*, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6477
  %edges11 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %27, i32 0, i32 9, !dbg !6478
  call void @BLI_listbase_clear(%struct.ListBase* %edges11), !dbg !6479
  %28 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !6480
  %29 = bitcast %struct.RigGraph* %28 to %struct.BGraph*, !dbg !6481
  %30 = load %struct.RigArc*, %struct.RigArc** %joined_arc2.addr, align 8, !dbg !6482
  %31 = bitcast %struct.RigArc* %30 to %struct.BArc*, !dbg !6483
  call void @BLI_removeArc(%struct.BGraph* %29, %struct.BArc* %31), !dbg !6484
  %32 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !6485
  %33 = bitcast %struct.RigGraph* %32 to %struct.BGraph*, !dbg !6486
  %34 = load %struct.RigNode*, %struct.RigNode** %node.addr, align 8, !dbg !6487
  %35 = bitcast %struct.RigNode* %34 to %struct.BNode*, !dbg !6488
  call void @BLI_removeNode(%struct.BGraph* %33, %struct.BNode* %35), !dbg !6489
  br label %return, !dbg !6490

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !6490
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !6491 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !6494, metadata !DIExpression()), !dbg !6495
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !6496
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !6497
  store i8* null, i8** %last, align 8, !dbg !6498
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !6499
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !6500
  store i8* null, i8** %first, align 8, !dbg !6501
  ret void, !dbg !6502
}

declare dso_local void @BLI_removeArc(%struct.BGraph*, %struct.BArc*) #2

declare dso_local void @BLI_removeNode(%struct.BGraph*, %struct.BNode*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local %struct.BNode* @BLI_FindNodeByPosition(%struct.BGraph*, float*, float) #2

declare dso_local void @BLI_replaceNodeInArc(%struct.BGraph*, %struct.BArc*, %struct.BNode*, %struct.BNode*) #2

declare dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

declare dso_local zeroext i8 @BLI_ghash_haskey(%struct.GHash*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @RIG_parentControl(%struct.RigControl* %ctrl, %struct.EditBone* %link) #0 !dbg !6503 {
entry:
  %retval = alloca i32, align 4
  %ctrl.addr = alloca %struct.RigControl*, align 8
  %link.addr = alloca %struct.EditBone*, align 8
  %offset = alloca [3 x float], align 4
  %flag = alloca i32, align 4
  %vbone = alloca [3 x float], align 4
  %vparent = alloca [3 x float], align 4
  %nor = alloca [3 x float], align 4
  %len = alloca float, align 4
  %bone43 = alloca %struct.EditBone*, align 8
  store %struct.RigControl* %ctrl, %struct.RigControl** %ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  store %struct.EditBone* %link, %struct.EditBone** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %link.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  %0 = load %struct.EditBone*, %struct.EditBone** %link.addr, align 8, !dbg !6510
  %tobool = icmp ne %struct.EditBone* %0, null, !dbg !6510
  br i1 %tobool, label %if.then, label %if.end58, !dbg !6512

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %offset, metadata !6513, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !6516, metadata !DIExpression()), !dbg !6517
  store i32 0, i32* %flag, align 4, !dbg !6517
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !6518
  %1 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6519
  %bone = getelementptr inbounds %struct.RigControl, %struct.RigControl* %1, i32 0, i32 4, !dbg !6520
  %2 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !6520
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %2, i32 0, i32 7, !dbg !6521
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6519
  %3 = load %struct.EditBone*, %struct.EditBone** %link.addr, align 8, !dbg !6522
  %head2 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %3, i32 0, i32 7, !dbg !6523
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %head2, i64 0, i64 0, !dbg !6522
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay3), !dbg !6524
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !6525
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !6527
  %call = call float @dot_v3v3(float* %arraydecay4, float* %arraydecay5), !dbg !6528
  %cmp = fcmp olt float %call, 0x3F1A36E2E0000000, !dbg !6529
  br i1 %cmp, label %if.then6, label %if.end33, !dbg !6530

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [3 x float]* %vbone, metadata !6531, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.declare(metadata [3 x float]* %vparent, metadata !6534, metadata !DIExpression()), !dbg !6535
  %4 = load i32, i32* %flag, align 4, !dbg !6536
  %or = or i32 %4, 8, !dbg !6536
  store i32 %or, i32* %flag, align 4, !dbg !6536
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %vbone, i64 0, i64 0, !dbg !6537
  %5 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6538
  %bone8 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %5, i32 0, i32 4, !dbg !6539
  %6 = load %struct.EditBone*, %struct.EditBone** %bone8, align 8, !dbg !6539
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %6, i32 0, i32 8, !dbg !6540
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6538
  %7 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6541
  %bone10 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %7, i32 0, i32 4, !dbg !6542
  %8 = load %struct.EditBone*, %struct.EditBone** %bone10, align 8, !dbg !6542
  %head11 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %8, i32 0, i32 7, !dbg !6543
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %head11, i64 0, i64 0, !dbg !6541
  call void @sub_v3_v3v3(float* %arraydecay7, float* %arraydecay9, float* %arraydecay12), !dbg !6544
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %vparent, i64 0, i64 0, !dbg !6545
  %9 = load %struct.EditBone*, %struct.EditBone** %link.addr, align 8, !dbg !6546
  %tail14 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %9, i32 0, i32 8, !dbg !6547
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %tail14, i64 0, i64 0, !dbg !6546
  %10 = load %struct.EditBone*, %struct.EditBone** %link.addr, align 8, !dbg !6548
  %head16 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %10, i32 0, i32 7, !dbg !6549
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %head16, i64 0, i64 0, !dbg !6548
  call void @sub_v3_v3v3(float* %arraydecay13, float* %arraydecay15, float* %arraydecay17), !dbg !6550
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vbone, i64 0, i64 0, !dbg !6551
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %vparent, i64 0, i64 0, !dbg !6553
  %call20 = call float @dot_v3v3(float* %arraydecay18, float* %arraydecay19), !dbg !6554
  %cmp21 = fcmp ogt float %call20, 0.000000e+00, !dbg !6555
  br i1 %cmp21, label %if.then22, label %if.end32, !dbg !6556

if.then22:                                        ; preds = %if.then6
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !6557, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.declare(metadata float* %len, metadata !6560, metadata !DIExpression()), !dbg !6561
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6562
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vbone, i64 0, i64 0, !dbg !6563
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %vparent, i64 0, i64 0, !dbg !6564
  call void @cross_v3_v3v3(float* %arraydecay23, float* %arraydecay24, float* %arraydecay25), !dbg !6565
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6566
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6567
  %call28 = call float @dot_v3v3(float* %arraydecay26, float* %arraydecay27), !dbg !6568
  store float %call28, float* %len, align 4, !dbg !6569
  %11 = load float, float* %len, align 4, !dbg !6570
  %cmp29 = fcmp olt float %11, 0x3F1A36E2E0000000, !dbg !6572
  br i1 %cmp29, label %if.then30, label %if.end, !dbg !6573

if.then30:                                        ; preds = %if.then22
  %12 = load i32, i32* %flag, align 4, !dbg !6574
  %or31 = or i32 %12, 16, !dbg !6574
  store i32 %or31, i32* %flag, align 4, !dbg !6574
  br label %if.end, !dbg !6576

if.end:                                           ; preds = %if.then30, %if.then22
  br label %if.end32, !dbg !6577

if.end32:                                         ; preds = %if.end, %if.then6
  br label %if.end33, !dbg !6578

if.end33:                                         ; preds = %if.end32, %if.then
  %13 = load i32, i32* %flag, align 4, !dbg !6579
  %14 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6581
  %flag34 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %14, i32 0, i32 10, !dbg !6582
  %15 = load i32, i32* %flag34, align 8, !dbg !6582
  %cmp35 = icmp slt i32 %13, %15, !dbg !6583
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !6584

if.then36:                                        ; preds = %if.end33
  store i32 0, i32* %retval, align 4, !dbg !6585
  br label %return, !dbg !6585

if.end37:                                         ; preds = %if.end33
  %16 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6587
  %link38 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %16, i32 0, i32 5, !dbg !6589
  %17 = load %struct.EditBone*, %struct.EditBone** %link38, align 8, !dbg !6589
  %tobool39 = icmp ne %struct.EditBone* %17, null, !dbg !6587
  br i1 %tobool39, label %land.lhs.true, label %if.end52, !dbg !6590

land.lhs.true:                                    ; preds = %if.end37
  %18 = load i32, i32* %flag, align 4, !dbg !6591
  %19 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6592
  %flag40 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %19, i32 0, i32 10, !dbg !6593
  %20 = load i32, i32* %flag40, align 8, !dbg !6593
  %cmp41 = icmp eq i32 %18, %20, !dbg !6594
  br i1 %cmp41, label %if.then42, label %if.end52, !dbg !6595

if.then42:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone43, metadata !6596, metadata !DIExpression()), !dbg !6598
  store %struct.EditBone* null, %struct.EditBone** %bone43, align 8, !dbg !6598
  %21 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6599
  %link44 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %21, i32 0, i32 5, !dbg !6601
  %22 = load %struct.EditBone*, %struct.EditBone** %link44, align 8, !dbg !6601
  store %struct.EditBone* %22, %struct.EditBone** %bone43, align 8, !dbg !6602
  br label %for.cond, !dbg !6603

for.cond:                                         ; preds = %for.inc, %if.then42
  %23 = load %struct.EditBone*, %struct.EditBone** %bone43, align 8, !dbg !6604
  %tobool45 = icmp ne %struct.EditBone* %23, null, !dbg !6606
  br i1 %tobool45, label %for.body, label %for.end, !dbg !6606

for.body:                                         ; preds = %for.cond
  %24 = load %struct.EditBone*, %struct.EditBone** %bone43, align 8, !dbg !6607
  %25 = load %struct.EditBone*, %struct.EditBone** %link.addr, align 8, !dbg !6610
  %cmp46 = icmp eq %struct.EditBone* %24, %25, !dbg !6611
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !6612

if.then47:                                        ; preds = %for.body
  br label %for.end, !dbg !6613

if.end48:                                         ; preds = %for.body
  br label %for.inc, !dbg !6615

for.inc:                                          ; preds = %if.end48
  %26 = load %struct.EditBone*, %struct.EditBone** %bone43, align 8, !dbg !6616
  %parent = getelementptr inbounds %struct.EditBone, %struct.EditBone* %26, i32 0, i32 3, !dbg !6617
  %27 = load %struct.EditBone*, %struct.EditBone** %parent, align 8, !dbg !6617
  store %struct.EditBone* %27, %struct.EditBone** %bone43, align 8, !dbg !6618
  br label %for.cond, !dbg !6619, !llvm.loop !6620

for.end:                                          ; preds = %if.then47, %for.cond
  %28 = load %struct.EditBone*, %struct.EditBone** %bone43, align 8, !dbg !6622
  %cmp49 = icmp eq %struct.EditBone* %28, null, !dbg !6624
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !6625

if.then50:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !6626
  br label %return, !dbg !6626

if.end51:                                         ; preds = %for.end
  br label %if.end52, !dbg !6628

if.end52:                                         ; preds = %if.end51, %land.lhs.true, %if.end37
  %29 = load %struct.EditBone*, %struct.EditBone** %link.addr, align 8, !dbg !6629
  %30 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6630
  %link53 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %30, i32 0, i32 5, !dbg !6631
  store %struct.EditBone* %29, %struct.EditBone** %link53, align 8, !dbg !6632
  %31 = load i32, i32* %flag, align 4, !dbg !6633
  %32 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6634
  %flag54 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %32, i32 0, i32 10, !dbg !6635
  store i32 %31, i32* %flag54, align 8, !dbg !6636
  %33 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6637
  %offset55 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %33, i32 0, i32 8, !dbg !6638
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %offset55, i64 0, i64 0, !dbg !6637
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !6639
  call void @copy_v3_v3(float* %arraydecay56, float* %arraydecay57), !dbg !6640
  store i32 1, i32* %retval, align 4, !dbg !6641
  br label %return, !dbg !6641

if.end58:                                         ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6642
  br label %return, !dbg !6642

return:                                           ; preds = %if.end58, %if.end52, %if.then50, %if.then36
  %34 = load i32, i32* %retval, align 4, !dbg !6643
  ret i32 %34, !dbg !6643
}

declare dso_local void @BLI_ghashIterator_init(%struct.GHashIterator*, %struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !6644 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !6648, metadata !DIExpression()), !dbg !6649
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !6650
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !6651
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !6651
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !6652
  %lnot = xor i1 %tobool, true, !dbg !6652
  %lnot.ext = zext i1 %lnot to i32, !dbg !6652
  %conv = trunc i32 %lnot.ext to i8, !dbg !6652
  ret i8 %conv, !dbg !6653
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi) #0 !dbg !6654 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !6657, metadata !DIExpression()), !dbg !6658
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !6659
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !6660
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !6660
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !6661
  %val = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 2, !dbg !6661
  %3 = load i8*, i8** %val, align 8, !dbg !6661
  ret i8* %3, !dbg !6662
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

declare dso_local %struct.ReebNode* @BIF_NodeFromIndex(%struct.ReebArc*, %struct.ReebNode*) #2

declare dso_local void @rotation_between_vecs_to_quat(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_zero_v3(float* %v) #0 !dbg !6663 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !6666, metadata !DIExpression()), !dbg !6667
  %0 = load float*, float** %v.addr, align 8, !dbg !6668
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6668
  %1 = load float, float* %arrayidx, align 4, !dbg !6668
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !6669
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !6670

land.lhs.true:                                    ; preds = %entry
  %2 = load float*, float** %v.addr, align 8, !dbg !6671
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !6671
  %3 = load float, float* %arrayidx1, align 4, !dbg !6671
  %cmp2 = fcmp oeq float %3, 0.000000e+00, !dbg !6672
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6673

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load float*, float** %v.addr, align 8, !dbg !6674
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !6674
  %5 = load float, float* %arrayidx3, align 4, !dbg !6674
  %cmp4 = fcmp oeq float %5, 0.000000e+00, !dbg !6675
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !6676
  %land.ext = zext i1 %6 to i32, !dbg !6673
  %conv = trunc i32 %land.ext to i8, !dbg !6677
  ret i8 %conv, !dbg !6678
}

; Function Attrs: noinline nounwind uwtable
define internal float @rollBoneByQuatAligned(%struct.EditBone* %bone, float* %old_up_axis, float* %qrot, float* %qroll, float* %aligned_axis) #0 !dbg !6679 {
entry:
  %retval = alloca float, align 4
  %bone.addr = alloca %struct.EditBone*, align 8
  %old_up_axis.addr = alloca float*, align 8
  %qrot.addr = alloca float*, align 8
  %qroll.addr = alloca float*, align 8
  %aligned_axis.addr = alloca float*, align 8
  %nor = alloca [3 x float], align 4
  %new_up_axis = alloca [3 x float], align 4
  %x_axis = alloca [3 x float], align 4
  %z_axis = alloca [3 x float], align 4
  store %struct.EditBone* %bone, %struct.EditBone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditBone** %bone.addr, metadata !6682, metadata !DIExpression()), !dbg !6683
  store float* %old_up_axis, float** %old_up_axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %old_up_axis.addr, metadata !6684, metadata !DIExpression()), !dbg !6685
  store float* %qrot, float** %qrot.addr, align 8
  call void @llvm.dbg.declare(metadata float** %qrot.addr, metadata !6686, metadata !DIExpression()), !dbg !6687
  store float* %qroll, float** %qroll.addr, align 8
  call void @llvm.dbg.declare(metadata float** %qroll.addr, metadata !6688, metadata !DIExpression()), !dbg !6689
  store float* %aligned_axis, float** %aligned_axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %aligned_axis.addr, metadata !6690, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !6692, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata [3 x float]* %new_up_axis, metadata !6694, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.declare(metadata [3 x float]* %x_axis, metadata !6696, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.declare(metadata [3 x float]* %z_axis, metadata !6698, metadata !DIExpression()), !dbg !6699
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6700
  %0 = load float*, float** %old_up_axis.addr, align 8, !dbg !6701
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !6702
  %1 = load float*, float** %qrot.addr, align 8, !dbg !6703
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6704
  call void @mul_qt_v3(float* %1, float* %arraydecay1), !dbg !6705
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6706
  %2 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !6707
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %2, i32 0, i32 8, !dbg !6708
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6707
  %3 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !6709
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %3, i32 0, i32 7, !dbg !6710
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6709
  call void @sub_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !6711
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %x_axis, i64 0, i64 0, !dbg !6712
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6713
  %4 = load float*, float** %aligned_axis.addr, align 8, !dbg !6714
  call void @cross_v3_v3v3(float* %arraydecay5, float* %arraydecay6, float* %4), !dbg !6715
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %z_axis, i64 0, i64 0, !dbg !6716
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %x_axis, i64 0, i64 0, !dbg !6717
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !6718
  call void @cross_v3_v3v3(float* %arraydecay7, float* %arraydecay8, float* %arraydecay9), !dbg !6719
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6720
  %call = call float @normalize_v3(float* %arraydecay10), !dbg !6721
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %x_axis, i64 0, i64 0, !dbg !6722
  %call12 = call float @normalize_v3(float* %arraydecay11), !dbg !6723
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %z_axis, i64 0, i64 0, !dbg !6724
  %call14 = call float @normalize_v3(float* %arraydecay13), !dbg !6725
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6726
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %x_axis, i64 0, i64 0, !dbg !6728
  %call17 = call float @dot_v3v3(float* %arraydecay15, float* %arraydecay16), !dbg !6729
  %cmp = fcmp olt float %call17, 0.000000e+00, !dbg !6730
  br i1 %cmp, label %if.then, label %if.end, !dbg !6731

if.then:                                          ; preds = %entry
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %x_axis, i64 0, i64 0, !dbg !6732
  call void @negate_v3(float* %arraydecay18), !dbg !6734
  br label %if.end, !dbg !6735

if.end:                                           ; preds = %if.then, %entry
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6736
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %z_axis, i64 0, i64 0, !dbg !6738
  %call21 = call float @dot_v3v3(float* %arraydecay19, float* %arraydecay20), !dbg !6739
  %cmp22 = fcmp olt float %call21, 0.000000e+00, !dbg !6740
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !6741

if.then23:                                        ; preds = %if.end
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %z_axis, i64 0, i64 0, !dbg !6742
  call void @negate_v3(float* %arraydecay24), !dbg !6744
  br label %if.end25, !dbg !6745

if.end25:                                         ; preds = %if.then23, %if.end
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %x_axis, i64 0, i64 0, !dbg !6746
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6748
  %call28 = call float @angle_normalized_v3v3(float* %arraydecay26, float* %arraydecay27), !dbg !6749
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %z_axis, i64 0, i64 0, !dbg !6750
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6751
  %call31 = call float @angle_normalized_v3v3(float* %arraydecay29, float* %arraydecay30), !dbg !6752
  %cmp32 = fcmp olt float %call28, %call31, !dbg !6753
  br i1 %cmp32, label %if.then33, label %if.else, !dbg !6754

if.then33:                                        ; preds = %if.end25
  %5 = load float*, float** %qroll.addr, align 8, !dbg !6755
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6757
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %x_axis, i64 0, i64 0, !dbg !6758
  call void @rotation_between_vecs_to_quat(float* %5, float* %arraydecay34, float* %arraydecay35), !dbg !6759
  %6 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !6760
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %x_axis, i64 0, i64 0, !dbg !6761
  %call37 = call float @ED_rollBoneToVector(%struct.EditBone* %6, float* %arraydecay36, i8 zeroext 0), !dbg !6762
  store float %call37, float* %retval, align 4, !dbg !6763
  br label %return, !dbg !6763

if.else:                                          ; preds = %if.end25
  %7 = load float*, float** %qroll.addr, align 8, !dbg !6764
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6766
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %z_axis, i64 0, i64 0, !dbg !6767
  call void @rotation_between_vecs_to_quat(float* %7, float* %arraydecay38, float* %arraydecay39), !dbg !6768
  %8 = load %struct.EditBone*, %struct.EditBone** %bone.addr, align 8, !dbg !6769
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %z_axis, i64 0, i64 0, !dbg !6770
  %call41 = call float @ED_rollBoneToVector(%struct.EditBone* %8, float* %arraydecay40, i8 zeroext 0), !dbg !6771
  store float %call41, float* %retval, align 4, !dbg !6772
  br label %return, !dbg !6772

return:                                           ; preds = %if.else, %if.then33
  %9 = load float, float* %retval, align 4, !dbg !6773
  ret float %9, !dbg !6773
}

; Function Attrs: noinline nounwind uwtable
define internal float @rollBoneByQuatJoint(%struct.RigEdge* %edge, %struct.RigEdge* %previous, float* %qrot, float* %qroll, float* %up_axis) #0 !dbg !6774 {
entry:
  %retval = alloca float, align 4
  %edge.addr = alloca %struct.RigEdge*, align 8
  %previous.addr = alloca %struct.RigEdge*, align 8
  %qrot.addr = alloca float*, align 8
  %qroll.addr = alloca float*, align 8
  %up_axis.addr = alloca float*, align 8
  %new_up_axis = alloca [3 x float], align 4
  %vec_first = alloca [3 x float], align 4
  %vec_second = alloca [3 x float], align 4
  %normal = alloca [3 x float], align 4
  store %struct.RigEdge* %edge, %struct.RigEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge.addr, metadata !6777, metadata !DIExpression()), !dbg !6778
  store %struct.RigEdge* %previous, %struct.RigEdge** %previous.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %previous.addr, metadata !6779, metadata !DIExpression()), !dbg !6780
  store float* %qrot, float** %qrot.addr, align 8
  call void @llvm.dbg.declare(metadata float** %qrot.addr, metadata !6781, metadata !DIExpression()), !dbg !6782
  store float* %qroll, float** %qroll.addr, align 8
  call void @llvm.dbg.declare(metadata float** %qroll.addr, metadata !6783, metadata !DIExpression()), !dbg !6784
  store float* %up_axis, float** %up_axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %up_axis.addr, metadata !6785, metadata !DIExpression()), !dbg !6786
  %0 = load %struct.RigEdge*, %struct.RigEdge** %previous.addr, align 8, !dbg !6787
  %cmp = icmp eq %struct.RigEdge* %0, null, !dbg !6789
  br i1 %cmp, label %if.then, label %if.else, !dbg !6790

if.then:                                          ; preds = %entry
  %1 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6791
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %1, i32 0, i32 7, !dbg !6793
  %2 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !6793
  %3 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6794
  %up_axis1 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %3, i32 0, i32 8, !dbg !6795
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %up_axis1, i64 0, i64 0, !dbg !6794
  %4 = load float*, float** %qrot.addr, align 8, !dbg !6796
  %5 = load float*, float** %qroll.addr, align 8, !dbg !6797
  %6 = load float*, float** %up_axis.addr, align 8, !dbg !6798
  %call = call float @rollBoneByQuatAligned(%struct.EditBone* %2, float* %arraydecay, float* %4, float* %5, float* %6), !dbg !6799
  store float %call, float* %retval, align 4, !dbg !6800
  br label %return, !dbg !6800

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %new_up_axis, metadata !6801, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_first, metadata !6804, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_second, metadata !6806, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !6808, metadata !DIExpression()), !dbg !6809
  %7 = load %struct.RigEdge*, %struct.RigEdge** %previous.addr, align 8, !dbg !6810
  %bone2 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %7, i32 0, i32 7, !dbg !6812
  %8 = load %struct.EditBone*, %struct.EditBone** %bone2, align 8, !dbg !6812
  %tobool = icmp ne %struct.EditBone* %8, null, !dbg !6810
  br i1 %tobool, label %if.then3, label %if.else9, !dbg !6813

if.then3:                                         ; preds = %if.else
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !6814
  %9 = load %struct.RigEdge*, %struct.RigEdge** %previous.addr, align 8, !dbg !6816
  %bone5 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %9, i32 0, i32 7, !dbg !6817
  %10 = load %struct.EditBone*, %struct.EditBone** %bone5, align 8, !dbg !6817
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %10, i32 0, i32 8, !dbg !6818
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6816
  %11 = load %struct.RigEdge*, %struct.RigEdge** %previous.addr, align 8, !dbg !6819
  %bone7 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %11, i32 0, i32 7, !dbg !6820
  %12 = load %struct.EditBone*, %struct.EditBone** %bone7, align 8, !dbg !6820
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %12, i32 0, i32 7, !dbg !6821
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6819
  call void @sub_v3_v3v3(float* %arraydecay4, float* %arraydecay6, float* %arraydecay8), !dbg !6822
  br label %if.end26, !dbg !6823

if.else9:                                         ; preds = %if.else
  %13 = load %struct.RigEdge*, %struct.RigEdge** %previous.addr, align 8, !dbg !6824
  %prev = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %13, i32 0, i32 1, !dbg !6826
  %14 = load %struct.RigEdge*, %struct.RigEdge** %prev, align 8, !dbg !6826
  %bone10 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %14, i32 0, i32 7, !dbg !6827
  %15 = load %struct.EditBone*, %struct.EditBone** %bone10, align 8, !dbg !6827
  %tobool11 = icmp ne %struct.EditBone* %15, null, !dbg !6824
  br i1 %tobool11, label %if.then12, label %if.else21, !dbg !6828

if.then12:                                        ; preds = %if.else9
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !6829
  %16 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6831
  %bone14 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %16, i32 0, i32 7, !dbg !6832
  %17 = load %struct.EditBone*, %struct.EditBone** %bone14, align 8, !dbg !6832
  %head15 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %17, i32 0, i32 7, !dbg !6833
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %head15, i64 0, i64 0, !dbg !6831
  %18 = load %struct.RigEdge*, %struct.RigEdge** %previous.addr, align 8, !dbg !6834
  %prev17 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %18, i32 0, i32 1, !dbg !6835
  %19 = load %struct.RigEdge*, %struct.RigEdge** %prev17, align 8, !dbg !6835
  %bone18 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %19, i32 0, i32 7, !dbg !6836
  %20 = load %struct.EditBone*, %struct.EditBone** %bone18, align 8, !dbg !6836
  %tail19 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %20, i32 0, i32 8, !dbg !6837
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %tail19, i64 0, i64 0, !dbg !6834
  call void @sub_v3_v3v3(float* %arraydecay13, float* %arraydecay16, float* %arraydecay20), !dbg !6838
  br label %if.end, !dbg !6839

if.else21:                                        ; preds = %if.else9
  %21 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6840
  %bone22 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %21, i32 0, i32 7, !dbg !6842
  %22 = load %struct.EditBone*, %struct.EditBone** %bone22, align 8, !dbg !6842
  %23 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6843
  %up_axis23 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %23, i32 0, i32 8, !dbg !6844
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %up_axis23, i64 0, i64 0, !dbg !6843
  %24 = load float*, float** %qrot.addr, align 8, !dbg !6845
  %25 = load float*, float** %qroll.addr, align 8, !dbg !6846
  %26 = load float*, float** %up_axis.addr, align 8, !dbg !6847
  %call25 = call float @rollBoneByQuatAligned(%struct.EditBone* %22, float* %arraydecay24, float* %24, float* %25, float* %26), !dbg !6848
  store float %call25, float* %retval, align 4, !dbg !6849
  br label %return, !dbg !6849

if.end:                                           ; preds = %if.then12
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then3
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !6850
  %27 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6851
  %bone28 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %27, i32 0, i32 7, !dbg !6852
  %28 = load %struct.EditBone*, %struct.EditBone** %bone28, align 8, !dbg !6852
  %tail29 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %28, i32 0, i32 8, !dbg !6853
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %tail29, i64 0, i64 0, !dbg !6851
  %29 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6854
  %bone31 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %29, i32 0, i32 7, !dbg !6855
  %30 = load %struct.EditBone*, %struct.EditBone** %bone31, align 8, !dbg !6855
  %head32 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %30, i32 0, i32 7, !dbg !6856
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %head32, i64 0, i64 0, !dbg !6854
  call void @sub_v3_v3v3(float* %arraydecay27, float* %arraydecay30, float* %arraydecay33), !dbg !6857
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !6858
  %call35 = call float @normalize_v3(float* %arraydecay34), !dbg !6859
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !6860
  %call37 = call float @normalize_v3(float* %arraydecay36), !dbg !6861
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !6862
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !6863
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !6864
  call void @cross_v3_v3v3(float* %arraydecay38, float* %arraydecay39, float* %arraydecay40), !dbg !6865
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !6866
  %call42 = call float @normalize_v3(float* %arraydecay41), !dbg !6867
  %31 = load float*, float** %qroll.addr, align 8, !dbg !6868
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !6869
  %32 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6870
  %up_angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %32, i32 0, i32 6, !dbg !6871
  %33 = load float, float* %up_angle, align 8, !dbg !6871
  call void @axis_angle_to_quat(float* %31, float* %arraydecay43, float %33), !dbg !6872
  %34 = load float*, float** %qroll.addr, align 8, !dbg !6873
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !6874
  call void @mul_qt_v3(float* %34, float* %arraydecay44), !dbg !6875
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6876
  %35 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6877
  %up_axis46 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %35, i32 0, i32 8, !dbg !6878
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %up_axis46, i64 0, i64 0, !dbg !6877
  call void @copy_v3_v3(float* %arraydecay45, float* %arraydecay47), !dbg !6879
  %36 = load float*, float** %qrot.addr, align 8, !dbg !6880
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6881
  call void @mul_qt_v3(float* %36, float* %arraydecay48), !dbg !6882
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6883
  %call50 = call float @normalize_v3(float* %arraydecay49), !dbg !6884
  %37 = load float*, float** %qroll.addr, align 8, !dbg !6885
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %new_up_axis, i64 0, i64 0, !dbg !6886
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !6887
  call void @rotation_between_vecs_to_quat(float* %37, float* %arraydecay51, float* %arraydecay52), !dbg !6888
  %38 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !6889
  %bone53 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %38, i32 0, i32 7, !dbg !6890
  %39 = load %struct.EditBone*, %struct.EditBone** %bone53, align 8, !dbg !6890
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !6891
  %call55 = call float @ED_rollBoneToVector(%struct.EditBone* %39, float* %arraydecay54, i8 zeroext 0), !dbg !6892
  store float %call55, float* %retval, align 4, !dbg !6893
  br label %return, !dbg !6893

return:                                           ; preds = %if.end26, %if.else21, %if.then
  %40 = load float, float* %retval, align 4, !dbg !6894
  ret float %40, !dbg !6894
}

declare dso_local void @unit_qt(float*) #2

declare dso_local void @mul_qt_qtqt(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @repositionControl(%struct.RigGraph* %rigg, %struct.RigControl* %ctrl, float* %head, float* %UNUSED_tail, float* %qrot, float %resize) #0 !dbg !6895 {
entry:
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %ctrl.addr = alloca %struct.RigControl*, align 8
  %head.addr = alloca float*, align 8
  %UNUSED_tail.addr = alloca float*, align 8
  %qrot.addr = alloca float*, align 8
  %resize.addr = alloca float, align 4
  %parent_offset = alloca [3 x float], align 4
  %tail_offset = alloca [3 x float], align 4
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  store %struct.RigControl* %ctrl, %struct.RigControl** %ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store float* %head, float** %head.addr, align 8
  call void @llvm.dbg.declare(metadata float** %head.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  store float* %UNUSED_tail, float** %UNUSED_tail.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_tail.addr, metadata !6904, metadata !DIExpression()), !dbg !6905
  store float* %qrot, float** %qrot.addr, align 8
  call void @llvm.dbg.declare(metadata float** %qrot.addr, metadata !6906, metadata !DIExpression()), !dbg !6907
  store float %resize, float* %resize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %resize.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.declare(metadata [3 x float]* %parent_offset, metadata !6910, metadata !DIExpression()), !dbg !6911
  call void @llvm.dbg.declare(metadata [3 x float]* %tail_offset, metadata !6912, metadata !DIExpression()), !dbg !6913
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %parent_offset, i64 0, i64 0, !dbg !6914
  %0 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6915
  %offset = getelementptr inbounds %struct.RigControl, %struct.RigControl* %0, i32 0, i32 8, !dbg !6916
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !6915
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !6917
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %parent_offset, i64 0, i64 0, !dbg !6918
  %1 = load float, float* %resize.addr, align 4, !dbg !6919
  call void @mul_v3_fl(float* %arraydecay2, float %1), !dbg !6920
  %2 = load float*, float** %qrot.addr, align 8, !dbg !6921
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %parent_offset, i64 0, i64 0, !dbg !6922
  call void @mul_qt_v3(float* %2, float* %arraydecay3), !dbg !6923
  %3 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6924
  %bone = getelementptr inbounds %struct.RigControl, %struct.RigControl* %3, i32 0, i32 4, !dbg !6925
  %4 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !6925
  %head4 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %4, i32 0, i32 7, !dbg !6926
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %head4, i64 0, i64 0, !dbg !6924
  %5 = load float*, float** %head.addr, align 8, !dbg !6927
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %parent_offset, i64 0, i64 0, !dbg !6928
  call void @add_v3_v3v3(float* %arraydecay5, float* %5, float* %arraydecay6), !dbg !6929
  %6 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6930
  %flag = getelementptr inbounds %struct.RigControl, %struct.RigControl* %6, i32 0, i32 10, !dbg !6931
  %7 = load i32, i32* %flag, align 8, !dbg !6932
  %or = or i32 %7, 1, !dbg !6932
  store i32 %or, i32* %flag, align 8, !dbg !6932
  %8 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6933
  %qrot7 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %8, i32 0, i32 9, !dbg !6934
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %qrot7, i64 0, i64 0, !dbg !6933
  %9 = load float*, float** %qrot.addr, align 8, !dbg !6935
  call void @copy_qt_qt(float* %arraydecay8, float* %9), !dbg !6936
  %10 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6937
  %tail_mode = getelementptr inbounds %struct.RigControl, %struct.RigControl* %10, i32 0, i32 11, !dbg !6939
  %11 = load i32, i32* %tail_mode, align 4, !dbg !6939
  %cmp = icmp eq i32 %11, 0, !dbg !6940
  br i1 %cmp, label %if.then, label %if.end, !dbg !6941

if.then:                                          ; preds = %entry
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %tail_offset, i64 0, i64 0, !dbg !6942
  %12 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6944
  %tail = getelementptr inbounds %struct.RigControl, %struct.RigControl* %12, i32 0, i32 3, !dbg !6945
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6944
  %13 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6946
  %head11 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %13, i32 0, i32 2, !dbg !6947
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %head11, i64 0, i64 0, !dbg !6946
  call void @sub_v3_v3v3(float* %arraydecay9, float* %arraydecay10, float* %arraydecay12), !dbg !6948
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %tail_offset, i64 0, i64 0, !dbg !6949
  %14 = load float, float* %resize.addr, align 4, !dbg !6950
  call void @mul_v3_fl(float* %arraydecay13, float %14), !dbg !6951
  %15 = load float*, float** %qrot.addr, align 8, !dbg !6952
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %tail_offset, i64 0, i64 0, !dbg !6953
  call void @mul_qt_v3(float* %15, float* %arraydecay14), !dbg !6954
  %16 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6955
  %bone15 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %16, i32 0, i32 4, !dbg !6956
  %17 = load %struct.EditBone*, %struct.EditBone** %bone15, align 8, !dbg !6956
  %tail16 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %17, i32 0, i32 8, !dbg !6957
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %tail16, i64 0, i64 0, !dbg !6955
  %18 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6958
  %bone18 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %18, i32 0, i32 4, !dbg !6959
  %19 = load %struct.EditBone*, %struct.EditBone** %bone18, align 8, !dbg !6959
  %head19 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %19, i32 0, i32 7, !dbg !6960
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %head19, i64 0, i64 0, !dbg !6958
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %tail_offset, i64 0, i64 0, !dbg !6961
  call void @add_v3_v3v3(float* %arraydecay17, float* %arraydecay20, float* %arraydecay21), !dbg !6962
  %20 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6963
  %flag22 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %20, i32 0, i32 10, !dbg !6964
  %21 = load i32, i32* %flag22, align 8, !dbg !6965
  %or23 = or i32 %21, 2, !dbg !6965
  store i32 %or23, i32* %flag22, align 8, !dbg !6965
  br label %if.end, !dbg !6966

if.end:                                           ; preds = %if.then, %entry
  %22 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !6967
  %23 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6968
  %24 = load float, float* %resize.addr, align 4, !dbg !6969
  call void @finalizeControl(%struct.RigGraph* %22, %struct.RigControl* %23, float %24), !dbg !6970
  ret void, !dbg !6971
}

; Function Attrs: noinline nounwind uwtable
define internal void @repositionTailControl(%struct.RigGraph* %rigg, %struct.RigControl* %ctrl) #0 !dbg !6972 {
entry:
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %ctrl.addr = alloca %struct.RigControl*, align 8
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !6975, metadata !DIExpression()), !dbg !6976
  store %struct.RigControl* %ctrl, %struct.RigControl** %ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl.addr, metadata !6977, metadata !DIExpression()), !dbg !6978
  %0 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6979
  %flag = getelementptr inbounds %struct.RigControl, %struct.RigControl* %0, i32 0, i32 10, !dbg !6980
  %1 = load i32, i32* %flag, align 8, !dbg !6981
  %or = or i32 %1, 2, !dbg !6981
  store i32 %or, i32* %flag, align 8, !dbg !6981
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !6982
  %3 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !6983
  call void @finalizeControl(%struct.RigGraph* %2, %struct.RigControl* %3, float 1.000000e+00), !dbg !6984
  ret void, !dbg !6985
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !6986 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6987, metadata !DIExpression()), !dbg !6988
  %0 = load float*, float** %r.addr, align 8, !dbg !6989
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6989
  %1 = load float, float* %arrayidx, align 4, !dbg !6989
  %fneg = fneg float %1, !dbg !6990
  %2 = load float*, float** %r.addr, align 8, !dbg !6991
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6991
  store float %fneg, float* %arrayidx1, align 4, !dbg !6992
  %3 = load float*, float** %r.addr, align 8, !dbg !6993
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6993
  %4 = load float, float* %arrayidx2, align 4, !dbg !6993
  %fneg3 = fneg float %4, !dbg !6994
  %5 = load float*, float** %r.addr, align 8, !dbg !6995
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !6995
  store float %fneg3, float* %arrayidx4, align 4, !dbg !6996
  %6 = load float*, float** %r.addr, align 8, !dbg !6997
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !6997
  %7 = load float, float* %arrayidx5, align 4, !dbg !6997
  %fneg6 = fneg float %7, !dbg !6998
  %8 = load float*, float** %r.addr, align 8, !dbg !6999
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !6999
  store float %fneg6, float* %arrayidx7, align 4, !dbg !7000
  ret void, !dbg !7001
}

declare dso_local void @axis_angle_to_quat(float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !7002 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7005, metadata !DIExpression()), !dbg !7006
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7007, metadata !DIExpression()), !dbg !7008
  %0 = load float, float* %f.addr, align 4, !dbg !7009
  %1 = load float*, float** %r.addr, align 8, !dbg !7010
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7010
  %2 = load float, float* %arrayidx, align 4, !dbg !7011
  %mul = fmul float %2, %0, !dbg !7011
  store float %mul, float* %arrayidx, align 4, !dbg !7011
  %3 = load float, float* %f.addr, align 4, !dbg !7012
  %4 = load float*, float** %r.addr, align 8, !dbg !7013
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !7013
  %5 = load float, float* %arrayidx1, align 4, !dbg !7014
  %mul2 = fmul float %5, %3, !dbg !7014
  store float %mul2, float* %arrayidx1, align 4, !dbg !7014
  %6 = load float, float* %f.addr, align 4, !dbg !7015
  %7 = load float*, float** %r.addr, align 8, !dbg !7016
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !7016
  %8 = load float, float* %arrayidx3, align 4, !dbg !7017
  %mul4 = fmul float %8, %6, !dbg !7017
  store float %mul4, float* %arrayidx3, align 4, !dbg !7017
  ret void, !dbg !7018
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !7019 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7022, metadata !DIExpression()), !dbg !7023
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7024, metadata !DIExpression()), !dbg !7025
  %0 = load float*, float** %a.addr, align 8, !dbg !7026
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7026
  %1 = load float, float* %arrayidx, align 4, !dbg !7026
  %2 = load float*, float** %b.addr, align 8, !dbg !7027
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7027
  %3 = load float, float* %arrayidx1, align 4, !dbg !7027
  %add = fadd float %1, %3, !dbg !7028
  %4 = load float*, float** %r.addr, align 8, !dbg !7029
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7029
  store float %add, float* %arrayidx2, align 4, !dbg !7030
  %5 = load float*, float** %a.addr, align 8, !dbg !7031
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7031
  %6 = load float, float* %arrayidx3, align 4, !dbg !7031
  %7 = load float*, float** %b.addr, align 8, !dbg !7032
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7032
  %8 = load float, float* %arrayidx4, align 4, !dbg !7032
  %add5 = fadd float %6, %8, !dbg !7033
  %9 = load float*, float** %r.addr, align 8, !dbg !7034
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7034
  store float %add5, float* %arrayidx6, align 4, !dbg !7035
  %10 = load float*, float** %a.addr, align 8, !dbg !7036
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !7036
  %11 = load float, float* %arrayidx7, align 4, !dbg !7036
  %12 = load float*, float** %b.addr, align 8, !dbg !7037
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !7037
  %13 = load float, float* %arrayidx8, align 4, !dbg !7037
  %add9 = fadd float %11, %13, !dbg !7038
  %14 = load float*, float** %r.addr, align 8, !dbg !7039
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !7039
  store float %add9, float* %arrayidx10, align 4, !dbg !7040
  ret void, !dbg !7041
}

declare dso_local void @copy_qt_qt(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @finalizeControl(%struct.RigGraph* %rigg, %struct.RigControl* %ctrl, float %resize) #0 !dbg !7042 {
entry:
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %ctrl.addr = alloca %struct.RigControl*, align 8
  %resize.addr = alloca float, align 4
  %ctrl_child = alloca %struct.RigControl*, align 8
  %tail_vec = alloca float*, align 8
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %qtail = alloca [4 x float], align 16
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !7045, metadata !DIExpression()), !dbg !7046
  store %struct.RigControl* %ctrl, %struct.RigControl** %ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl.addr, metadata !7047, metadata !DIExpression()), !dbg !7048
  store float %resize, float* %resize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %resize.addr, metadata !7049, metadata !DIExpression()), !dbg !7050
  %0 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7051
  %flag = getelementptr inbounds %struct.RigControl, %struct.RigControl* %0, i32 0, i32 10, !dbg !7053
  %1 = load i32, i32* %flag, align 8, !dbg !7053
  %and = and i32 %1, 3, !dbg !7054
  %cmp = icmp eq i32 %and, 3, !dbg !7055
  br i1 %cmp, label %if.then, label %if.end62, !dbg !7056

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl_child, metadata !7057, metadata !DIExpression()), !dbg !7059
  %2 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7060
  %tail_mode = getelementptr inbounds %struct.RigControl, %struct.RigControl* %2, i32 0, i32 11, !dbg !7062
  %3 = load i32, i32* %tail_mode, align 4, !dbg !7062
  %cmp1 = icmp ne i32 %3, 0, !dbg !7063
  br i1 %cmp1, label %if.then2, label %if.end38, !dbg !7064

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata float** %tail_vec, metadata !7065, metadata !DIExpression()), !dbg !7067
  store float* null, float** %tail_vec, align 8, !dbg !7067
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !7068, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata [4 x float]* %qtail, metadata !7072, metadata !DIExpression()), !dbg !7073
  %4 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7074
  %tail_mode3 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %4, i32 0, i32 11, !dbg !7076
  %5 = load i32, i32* %tail_mode3, align 4, !dbg !7076
  %cmp4 = icmp eq i32 %5, 1, !dbg !7077
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !7078

if.then5:                                         ; preds = %if.then2
  %6 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7079
  %link_tail = getelementptr inbounds %struct.RigControl, %struct.RigControl* %6, i32 0, i32 6, !dbg !7081
  %7 = load %struct.EditBone*, %struct.EditBone** %link_tail, align 8, !dbg !7081
  %tail = getelementptr inbounds %struct.EditBone, %struct.EditBone* %7, i32 0, i32 8, !dbg !7082
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !7079
  store float* %arraydecay, float** %tail_vec, align 8, !dbg !7083
  br label %if.end11, !dbg !7084

if.else:                                          ; preds = %if.then2
  %8 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7085
  %tail_mode6 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %8, i32 0, i32 11, !dbg !7087
  %9 = load i32, i32* %tail_mode6, align 4, !dbg !7087
  %cmp7 = icmp eq i32 %9, 2, !dbg !7088
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !7089

if.then8:                                         ; preds = %if.else
  %10 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7090
  %link_tail9 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %10, i32 0, i32 6, !dbg !7092
  %11 = load %struct.EditBone*, %struct.EditBone** %link_tail9, align 8, !dbg !7092
  %head = getelementptr inbounds %struct.EditBone, %struct.EditBone* %11, i32 0, i32 7, !dbg !7093
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !7090
  store float* %arraydecay10, float** %tail_vec, align 8, !dbg !7094
  br label %if.end, !dbg !7095

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then5
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7096
  %12 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7097
  %bone = getelementptr inbounds %struct.RigControl, %struct.RigControl* %12, i32 0, i32 4, !dbg !7098
  %13 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !7098
  %tail13 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %13, i32 0, i32 8, !dbg !7099
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %tail13, i64 0, i64 0, !dbg !7097
  %14 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7100
  %bone15 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %14, i32 0, i32 4, !dbg !7101
  %15 = load %struct.EditBone*, %struct.EditBone** %bone15, align 8, !dbg !7101
  %head16 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %15, i32 0, i32 7, !dbg !7102
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %head16, i64 0, i64 0, !dbg !7100
  call void @sub_v3_v3v3(float* %arraydecay12, float* %arraydecay14, float* %arraydecay17), !dbg !7103
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7104
  %16 = load float*, float** %tail_vec, align 8, !dbg !7105
  %17 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7106
  %bone19 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %17, i32 0, i32 4, !dbg !7107
  %18 = load %struct.EditBone*, %struct.EditBone** %bone19, align 8, !dbg !7107
  %head20 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %18, i32 0, i32 7, !dbg !7108
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %head20, i64 0, i64 0, !dbg !7106
  call void @sub_v3_v3v3(float* %arraydecay18, float* %16, float* %arraydecay21), !dbg !7109
  %19 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7110
  %bone22 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %19, i32 0, i32 4, !dbg !7111
  %20 = load %struct.EditBone*, %struct.EditBone** %bone22, align 8, !dbg !7111
  %tail23 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %20, i32 0, i32 8, !dbg !7112
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %tail23, i64 0, i64 0, !dbg !7110
  %21 = load float*, float** %tail_vec, align 8, !dbg !7113
  call void @copy_v3_v3(float* %arraydecay24, float* %21), !dbg !7114
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %qtail, i64 0, i64 0, !dbg !7115
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7116
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7117
  call void @rotation_between_vecs_to_quat(float* %arraydecay25, float* %arraydecay26, float* %arraydecay27), !dbg !7118
  %22 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7119
  %qrot = getelementptr inbounds %struct.RigControl, %struct.RigControl* %22, i32 0, i32 9, !dbg !7120
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %qrot, i64 0, i64 0, !dbg !7119
  %arraydecay29 = getelementptr inbounds [4 x float], [4 x float]* %qtail, i64 0, i64 0, !dbg !7121
  %23 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7122
  %qrot30 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %23, i32 0, i32 9, !dbg !7123
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %qrot30, i64 0, i64 0, !dbg !7122
  call void @mul_qt_qtqt(float* %arraydecay28, float* %arraydecay29, float* %arraydecay31), !dbg !7124
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7125
  %call = call float @len_v3(float* %arraydecay32), !dbg !7126
  %24 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7127
  %head33 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %24, i32 0, i32 2, !dbg !7128
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %head33, i64 0, i64 0, !dbg !7127
  %25 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7129
  %tail35 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %25, i32 0, i32 3, !dbg !7130
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %tail35, i64 0, i64 0, !dbg !7129
  %call37 = call float @len_v3v3(float* %arraydecay34, float* %arraydecay36), !dbg !7131
  %div = fdiv float %call, %call37, !dbg !7132
  store float %div, float* %resize.addr, align 4, !dbg !7133
  br label %if.end38, !dbg !7134

if.end38:                                         ; preds = %if.end11, %if.then
  %26 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7135
  %bone39 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %26, i32 0, i32 4, !dbg !7136
  %27 = load %struct.EditBone*, %struct.EditBone** %bone39, align 8, !dbg !7136
  %28 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7137
  %up_axis = getelementptr inbounds %struct.RigControl, %struct.RigControl* %28, i32 0, i32 7, !dbg !7138
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %up_axis, i64 0, i64 0, !dbg !7137
  %29 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7139
  %qrot41 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %29, i32 0, i32 9, !dbg !7140
  %arraydecay42 = getelementptr inbounds [4 x float], [4 x float]* %qrot41, i64 0, i64 0, !dbg !7139
  %call43 = call float @rollBoneByQuat(%struct.EditBone* %27, float* %arraydecay40, float* %arraydecay42), !dbg !7141
  %30 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7142
  %bone44 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %30, i32 0, i32 4, !dbg !7143
  %31 = load %struct.EditBone*, %struct.EditBone** %bone44, align 8, !dbg !7143
  %roll = getelementptr inbounds %struct.EditBone, %struct.EditBone* %31, i32 0, i32 6, !dbg !7144
  store float %call43, float* %roll, align 8, !dbg !7145
  %32 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7146
  %controls = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %32, i32 0, i32 8, !dbg !7148
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %controls, i32 0, i32 0, !dbg !7149
  %33 = load i8*, i8** %first, align 8, !dbg !7149
  %34 = bitcast i8* %33 to %struct.RigControl*, !dbg !7146
  store %struct.RigControl* %34, %struct.RigControl** %ctrl_child, align 8, !dbg !7150
  br label %for.cond, !dbg !7151

for.cond:                                         ; preds = %for.inc, %if.end38
  %35 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !7152
  %tobool = icmp ne %struct.RigControl* %35, null, !dbg !7154
  br i1 %tobool, label %for.body, label %for.end, !dbg !7154

for.body:                                         ; preds = %for.cond
  %36 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !7155
  %link = getelementptr inbounds %struct.RigControl, %struct.RigControl* %36, i32 0, i32 5, !dbg !7158
  %37 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !7158
  %38 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7159
  %bone45 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %38, i32 0, i32 4, !dbg !7160
  %39 = load %struct.EditBone*, %struct.EditBone** %bone45, align 8, !dbg !7160
  %cmp46 = icmp eq %struct.EditBone* %37, %39, !dbg !7161
  br i1 %cmp46, label %if.then47, label %if.end56, !dbg !7162

if.then47:                                        ; preds = %for.body
  %40 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7163
  %41 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !7165
  %42 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7166
  %bone48 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %42, i32 0, i32 4, !dbg !7167
  %43 = load %struct.EditBone*, %struct.EditBone** %bone48, align 8, !dbg !7167
  %head49 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %43, i32 0, i32 7, !dbg !7168
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %head49, i64 0, i64 0, !dbg !7166
  %44 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7169
  %bone51 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %44, i32 0, i32 4, !dbg !7170
  %45 = load %struct.EditBone*, %struct.EditBone** %bone51, align 8, !dbg !7170
  %tail52 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %45, i32 0, i32 8, !dbg !7171
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %tail52, i64 0, i64 0, !dbg !7169
  %46 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7172
  %qrot54 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %46, i32 0, i32 9, !dbg !7173
  %arraydecay55 = getelementptr inbounds [4 x float], [4 x float]* %qrot54, i64 0, i64 0, !dbg !7172
  %47 = load float, float* %resize.addr, align 4, !dbg !7174
  call void @repositionControl(%struct.RigGraph* %40, %struct.RigControl* %41, float* %arraydecay50, float* %arraydecay53, float* %arraydecay55, float %47), !dbg !7175
  br label %if.end56, !dbg !7176

if.end56:                                         ; preds = %if.then47, %for.body
  %48 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !7177
  %link_tail57 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %48, i32 0, i32 6, !dbg !7179
  %49 = load %struct.EditBone*, %struct.EditBone** %link_tail57, align 8, !dbg !7179
  %50 = load %struct.RigControl*, %struct.RigControl** %ctrl.addr, align 8, !dbg !7180
  %bone58 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %50, i32 0, i32 4, !dbg !7181
  %51 = load %struct.EditBone*, %struct.EditBone** %bone58, align 8, !dbg !7181
  %cmp59 = icmp eq %struct.EditBone* %49, %51, !dbg !7182
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !7183

if.then60:                                        ; preds = %if.end56
  %52 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7184
  %53 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !7186
  call void @repositionTailControl(%struct.RigGraph* %52, %struct.RigControl* %53), !dbg !7187
  br label %if.end61, !dbg !7188

if.end61:                                         ; preds = %if.then60, %if.end56
  br label %for.inc, !dbg !7189

for.inc:                                          ; preds = %if.end61
  %54 = load %struct.RigControl*, %struct.RigControl** %ctrl_child, align 8, !dbg !7190
  %next = getelementptr inbounds %struct.RigControl, %struct.RigControl* %54, i32 0, i32 0, !dbg !7191
  %55 = load %struct.RigControl*, %struct.RigControl** %next, align 8, !dbg !7191
  store %struct.RigControl* %55, %struct.RigControl** %ctrl_child, align 8, !dbg !7192
  br label %for.cond, !dbg !7193, !llvm.loop !7194

for.end:                                          ; preds = %for.cond
  br label %if.end62, !dbg !7196

if.end62:                                         ; preds = %for.end, %entry
  ret void, !dbg !7197
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local void @initArcIterator(%struct.BArcIterator*, %struct.ReebArc*, %struct.ReebNode*) #2

declare dso_local i8* @IT_peek(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.MemoNode* @solveJoints(%struct.MemoNode* %table, %struct.BArcIterator* %iter, float** %vec_cache, i32 %nb_joints, i32 %nb_positions, i32 %previous, i32 %current, %struct.RigEdge* %edge, i32 %joints_left, float %angle_weight, float %length_weight, float %distance_weight) #0 !dbg !7198 {
entry:
  %retval = alloca %struct.MemoNode*, align 8
  %table.addr = alloca %struct.MemoNode*, align 8
  %iter.addr = alloca %struct.BArcIterator*, align 8
  %vec_cache.addr = alloca float**, align 8
  %nb_joints.addr = alloca i32, align 4
  %nb_positions.addr = alloca i32, align 4
  %previous.addr = alloca i32, align 4
  %current.addr = alloca i32, align 4
  %edge.addr = alloca %struct.RigEdge*, align 8
  %joints_left.addr = alloca i32, align 4
  %angle_weight.addr = alloca float, align 4
  %length_weight.addr = alloca float, align 4
  %distance_weight.addr = alloca float, align 4
  %node = alloca %struct.MemoNode*, align 8
  %index = alloca i32, align 4
  %vec0 = alloca float*, align 8
  %vec1 = alloca float*, align 8
  %vec2 = alloca float*, align 8
  %min_node = alloca %struct.MemoNode*, align 8
  %vec010 = alloca float*, align 8
  %vec113 = alloca float*, align 8
  %min_weight = alloca float, align 4
  %min_next = alloca i32, align 4
  %next = alloca i32, align 4
  %next_node = alloca %struct.MemoNode*, align 8
  %vec219 = alloca float*, align 8
  %weight22 = alloca float, align 4
  store %struct.MemoNode* %table, %struct.MemoNode** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemoNode** %table.addr, metadata !7201, metadata !DIExpression()), !dbg !7202
  store %struct.BArcIterator* %iter, %struct.BArcIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter.addr, metadata !7203, metadata !DIExpression()), !dbg !7204
  store float** %vec_cache, float*** %vec_cache.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %vec_cache.addr, metadata !7205, metadata !DIExpression()), !dbg !7206
  store i32 %nb_joints, i32* %nb_joints.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_joints.addr, metadata !7207, metadata !DIExpression()), !dbg !7208
  store i32 %nb_positions, i32* %nb_positions.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_positions.addr, metadata !7209, metadata !DIExpression()), !dbg !7210
  store i32 %previous, i32* %previous.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %previous.addr, metadata !7211, metadata !DIExpression()), !dbg !7212
  store i32 %current, i32* %current.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %current.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  store %struct.RigEdge* %edge, %struct.RigEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  store i32 %joints_left, i32* %joints_left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %joints_left.addr, metadata !7217, metadata !DIExpression()), !dbg !7218
  store float %angle_weight, float* %angle_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle_weight.addr, metadata !7219, metadata !DIExpression()), !dbg !7220
  store float %length_weight, float* %length_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length_weight.addr, metadata !7221, metadata !DIExpression()), !dbg !7222
  store float %distance_weight, float* %distance_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distance_weight.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.declare(metadata %struct.MemoNode** %node, metadata !7225, metadata !DIExpression()), !dbg !7226
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7227, metadata !DIExpression()), !dbg !7228
  %0 = load i32, i32* %nb_positions.addr, align 4, !dbg !7229
  %1 = load i32, i32* %previous.addr, align 4, !dbg !7230
  %2 = load i32, i32* %current.addr, align 4, !dbg !7231
  %3 = load i32, i32* %joints_left.addr, align 4, !dbg !7232
  %call = call i32 @indexMemoNode(i32 %0, i32 %1, i32 %2, i32 %3), !dbg !7233
  store i32 %call, i32* %index, align 4, !dbg !7228
  %4 = load %struct.MemoNode*, %struct.MemoNode** %table.addr, align 8, !dbg !7234
  %5 = load i32, i32* %index, align 4, !dbg !7235
  %idx.ext = sext i32 %5 to i64, !dbg !7236
  %add.ptr = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %4, i64 %idx.ext, !dbg !7236
  store %struct.MemoNode* %add.ptr, %struct.MemoNode** %node, align 8, !dbg !7237
  %6 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7238
  %weight = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %6, i32 0, i32 0, !dbg !7240
  %7 = load float, float* %weight, align 4, !dbg !7240
  %cmp = fcmp une float %7, 0.000000e+00, !dbg !7241
  br i1 %cmp, label %if.then, label %if.else, !dbg !7242

if.then:                                          ; preds = %entry
  %8 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7243
  store %struct.MemoNode* %8, %struct.MemoNode** %retval, align 8, !dbg !7245
  br label %return, !dbg !7245

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %joints_left.addr, align 4, !dbg !7246
  %cmp1 = icmp eq i32 %9, 0, !dbg !7248
  br i1 %cmp1, label %if.then2, label %if.else9, !dbg !7249

if.then2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata float** %vec0, metadata !7250, metadata !DIExpression()), !dbg !7252
  %10 = load float**, float*** %vec_cache.addr, align 8, !dbg !7253
  %11 = load i32, i32* %previous.addr, align 4, !dbg !7254
  %idxprom = sext i32 %11 to i64, !dbg !7253
  %arrayidx = getelementptr inbounds float*, float** %10, i64 %idxprom, !dbg !7253
  %12 = load float*, float** %arrayidx, align 8, !dbg !7253
  store float* %12, float** %vec0, align 8, !dbg !7252
  call void @llvm.dbg.declare(metadata float** %vec1, metadata !7255, metadata !DIExpression()), !dbg !7256
  %13 = load float**, float*** %vec_cache.addr, align 8, !dbg !7257
  %14 = load i32, i32* %current.addr, align 4, !dbg !7258
  %idxprom3 = sext i32 %14 to i64, !dbg !7257
  %arrayidx4 = getelementptr inbounds float*, float** %13, i64 %idxprom3, !dbg !7257
  %15 = load float*, float** %arrayidx4, align 8, !dbg !7257
  store float* %15, float** %vec1, align 8, !dbg !7256
  call void @llvm.dbg.declare(metadata float** %vec2, metadata !7259, metadata !DIExpression()), !dbg !7260
  %16 = load float**, float*** %vec_cache.addr, align 8, !dbg !7261
  %17 = load i32, i32* %nb_positions.addr, align 4, !dbg !7262
  %add = add nsw i32 %17, 1, !dbg !7263
  %idxprom5 = sext i32 %add to i64, !dbg !7261
  %arrayidx6 = getelementptr inbounds float*, float** %16, i64 %idxprom5, !dbg !7261
  %18 = load float*, float** %arrayidx6, align 8, !dbg !7261
  store float* %18, float** %vec2, align 8, !dbg !7260
  %19 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !7264
  %20 = load float**, float*** %vec_cache.addr, align 8, !dbg !7265
  %21 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !7266
  %22 = load float*, float** %vec0, align 8, !dbg !7267
  %23 = load float*, float** %vec1, align 8, !dbg !7268
  %24 = load float*, float** %vec2, align 8, !dbg !7269
  %25 = load i32, i32* %current.addr, align 4, !dbg !7270
  %26 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !7271
  %length = getelementptr inbounds %struct.BArcIterator, %struct.BArcIterator* %26, i32 0, i32 10, !dbg !7272
  %27 = load i32, i32* %length, align 4, !dbg !7272
  %28 = load float, float* %angle_weight.addr, align 4, !dbg !7273
  %29 = load float, float* %length_weight.addr, align 4, !dbg !7274
  %30 = load float, float* %distance_weight.addr, align 4, !dbg !7275
  %call7 = call float @calcCostAngleLengthDistance(%struct.BArcIterator* %19, float** %20, %struct.RigEdge* %21, float* %22, float* %23, float* %24, i32 %25, i32 %27, float %28, float %29, float %30), !dbg !7276
  %31 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7277
  %weight8 = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %31, i32 0, i32 0, !dbg !7278
  store float %call7, float* %weight8, align 4, !dbg !7279
  %32 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7280
  store %struct.MemoNode* %32, %struct.MemoNode** %retval, align 8, !dbg !7281
  br label %return, !dbg !7281

if.else9:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.MemoNode** %min_node, metadata !7282, metadata !DIExpression()), !dbg !7284
  store %struct.MemoNode* null, %struct.MemoNode** %min_node, align 8, !dbg !7284
  call void @llvm.dbg.declare(metadata float** %vec010, metadata !7285, metadata !DIExpression()), !dbg !7286
  %33 = load float**, float*** %vec_cache.addr, align 8, !dbg !7287
  %34 = load i32, i32* %previous.addr, align 4, !dbg !7288
  %idxprom11 = sext i32 %34 to i64, !dbg !7287
  %arrayidx12 = getelementptr inbounds float*, float** %33, i64 %idxprom11, !dbg !7287
  %35 = load float*, float** %arrayidx12, align 8, !dbg !7287
  store float* %35, float** %vec010, align 8, !dbg !7286
  call void @llvm.dbg.declare(metadata float** %vec113, metadata !7289, metadata !DIExpression()), !dbg !7290
  %36 = load float**, float*** %vec_cache.addr, align 8, !dbg !7291
  %37 = load i32, i32* %current.addr, align 4, !dbg !7292
  %idxprom14 = sext i32 %37 to i64, !dbg !7291
  %arrayidx15 = getelementptr inbounds float*, float** %36, i64 %idxprom14, !dbg !7291
  %38 = load float*, float** %arrayidx15, align 8, !dbg !7291
  store float* %38, float** %vec113, align 8, !dbg !7290
  call void @llvm.dbg.declare(metadata float* %min_weight, metadata !7293, metadata !DIExpression()), !dbg !7294
  store float 0.000000e+00, float* %min_weight, align 4, !dbg !7294
  call void @llvm.dbg.declare(metadata i32* %min_next, metadata !7295, metadata !DIExpression()), !dbg !7296
  store i32 0, i32* %min_next, align 4, !dbg !7296
  call void @llvm.dbg.declare(metadata i32* %next, metadata !7297, metadata !DIExpression()), !dbg !7298
  %39 = load i32, i32* %current.addr, align 4, !dbg !7299
  %add16 = add nsw i32 %39, 1, !dbg !7301
  store i32 %add16, i32* %next, align 4, !dbg !7302
  br label %for.cond, !dbg !7303

for.cond:                                         ; preds = %for.inc, %if.else9
  %40 = load i32, i32* %next, align 4, !dbg !7304
  %41 = load i32, i32* %nb_positions.addr, align 4, !dbg !7306
  %42 = load i32, i32* %joints_left.addr, align 4, !dbg !7307
  %sub = sub nsw i32 %42, 1, !dbg !7308
  %sub17 = sub nsw i32 %41, %sub, !dbg !7309
  %cmp18 = icmp sle i32 %40, %sub17, !dbg !7310
  br i1 %cmp18, label %for.body, label %for.end, !dbg !7311

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MemoNode** %next_node, metadata !7312, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.declare(metadata float** %vec219, metadata !7315, metadata !DIExpression()), !dbg !7316
  %43 = load float**, float*** %vec_cache.addr, align 8, !dbg !7317
  %44 = load i32, i32* %next, align 4, !dbg !7318
  %idxprom20 = sext i32 %44 to i64, !dbg !7317
  %arrayidx21 = getelementptr inbounds float*, float** %43, i64 %idxprom20, !dbg !7317
  %45 = load float*, float** %arrayidx21, align 8, !dbg !7317
  store float* %45, float** %vec219, align 8, !dbg !7316
  call void @llvm.dbg.declare(metadata float* %weight22, metadata !7319, metadata !DIExpression()), !dbg !7320
  store float 0.000000e+00, float* %weight22, align 4, !dbg !7320
  %46 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !7321
  %47 = load float**, float*** %vec_cache.addr, align 8, !dbg !7322
  %48 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !7323
  %49 = load float*, float** %vec010, align 8, !dbg !7324
  %50 = load float*, float** %vec113, align 8, !dbg !7325
  %51 = load float*, float** %vec219, align 8, !dbg !7326
  %52 = load i32, i32* %current.addr, align 4, !dbg !7327
  %53 = load i32, i32* %next, align 4, !dbg !7328
  %54 = load float, float* %angle_weight.addr, align 4, !dbg !7329
  %55 = load float, float* %length_weight.addr, align 4, !dbg !7330
  %56 = load float, float* %distance_weight.addr, align 4, !dbg !7331
  %call23 = call float @calcCostAngleLengthDistance(%struct.BArcIterator* %46, float** %47, %struct.RigEdge* %48, float* %49, float* %50, float* %51, i32 %52, i32 %53, float %54, float %55, float %56), !dbg !7332
  store float %call23, float* %weight22, align 4, !dbg !7333
  %57 = load float, float* %weight22, align 4, !dbg !7334
  %cmp24 = fcmp oge float %57, 0x47EFFFFFE0000000, !dbg !7336
  br i1 %cmp24, label %if.then25, label %if.end, !dbg !7337

if.then25:                                        ; preds = %for.body
  br label %for.inc, !dbg !7338

if.end:                                           ; preds = %for.body
  %58 = load %struct.MemoNode*, %struct.MemoNode** %table.addr, align 8, !dbg !7340
  %59 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !7341
  %60 = load float**, float*** %vec_cache.addr, align 8, !dbg !7342
  %61 = load i32, i32* %nb_joints.addr, align 4, !dbg !7343
  %62 = load i32, i32* %nb_positions.addr, align 4, !dbg !7344
  %63 = load i32, i32* %current.addr, align 4, !dbg !7345
  %64 = load i32, i32* %next, align 4, !dbg !7346
  %65 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !7347
  %next26 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %65, i32 0, i32 0, !dbg !7348
  %66 = load %struct.RigEdge*, %struct.RigEdge** %next26, align 8, !dbg !7348
  %67 = load i32, i32* %joints_left.addr, align 4, !dbg !7349
  %sub27 = sub nsw i32 %67, 1, !dbg !7350
  %68 = load float, float* %angle_weight.addr, align 4, !dbg !7351
  %69 = load float, float* %length_weight.addr, align 4, !dbg !7352
  %70 = load float, float* %distance_weight.addr, align 4, !dbg !7353
  %call28 = call %struct.MemoNode* @solveJoints(%struct.MemoNode* %58, %struct.BArcIterator* %59, float** %60, i32 %61, i32 %62, i32 %63, i32 %64, %struct.RigEdge* %66, i32 %sub27, float %68, float %69, float %70), !dbg !7354
  store %struct.MemoNode* %call28, %struct.MemoNode** %next_node, align 8, !dbg !7355
  %71 = load %struct.MemoNode*, %struct.MemoNode** %next_node, align 8, !dbg !7356
  %weight29 = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %71, i32 0, i32 0, !dbg !7357
  %72 = load float, float* %weight29, align 4, !dbg !7357
  %73 = load float, float* %weight22, align 4, !dbg !7358
  %add30 = fadd float %73, %72, !dbg !7358
  store float %add30, float* %weight22, align 4, !dbg !7358
  %74 = load %struct.MemoNode*, %struct.MemoNode** %min_node, align 8, !dbg !7359
  %cmp31 = icmp eq %struct.MemoNode* %74, null, !dbg !7361
  br i1 %cmp31, label %if.then33, label %lor.lhs.false, !dbg !7362

lor.lhs.false:                                    ; preds = %if.end
  %75 = load float, float* %weight22, align 4, !dbg !7363
  %76 = load float, float* %min_weight, align 4, !dbg !7364
  %cmp32 = fcmp olt float %75, %76, !dbg !7365
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !7366

if.then33:                                        ; preds = %lor.lhs.false, %if.end
  %77 = load float, float* %weight22, align 4, !dbg !7367
  store float %77, float* %min_weight, align 4, !dbg !7369
  %78 = load %struct.MemoNode*, %struct.MemoNode** %next_node, align 8, !dbg !7370
  store %struct.MemoNode* %78, %struct.MemoNode** %min_node, align 8, !dbg !7371
  %79 = load i32, i32* %next, align 4, !dbg !7372
  store i32 %79, i32* %min_next, align 4, !dbg !7373
  br label %if.end34, !dbg !7374

if.end34:                                         ; preds = %if.then33, %lor.lhs.false
  br label %for.inc, !dbg !7375

for.inc:                                          ; preds = %if.end34, %if.then25
  %80 = load i32, i32* %next, align 4, !dbg !7376
  %inc = add nsw i32 %80, 1, !dbg !7376
  store i32 %inc, i32* %next, align 4, !dbg !7376
  br label %for.cond, !dbg !7377, !llvm.loop !7378

for.end:                                          ; preds = %for.cond
  %81 = load %struct.MemoNode*, %struct.MemoNode** %min_node, align 8, !dbg !7380
  %tobool = icmp ne %struct.MemoNode* %81, null, !dbg !7380
  br i1 %tobool, label %if.then35, label %if.else38, !dbg !7382

if.then35:                                        ; preds = %for.end
  %82 = load float, float* %min_weight, align 4, !dbg !7383
  %83 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7385
  %weight36 = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %83, i32 0, i32 0, !dbg !7386
  store float %82, float* %weight36, align 4, !dbg !7387
  %84 = load i32, i32* %min_next, align 4, !dbg !7388
  %85 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7389
  %next37 = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %85, i32 0, i32 1, !dbg !7390
  store i32 %84, i32* %next37, align 4, !dbg !7391
  %86 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7392
  store %struct.MemoNode* %86, %struct.MemoNode** %retval, align 8, !dbg !7393
  br label %return, !dbg !7393

if.else38:                                        ; preds = %for.end
  %87 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7394
  %weight39 = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %87, i32 0, i32 0, !dbg !7396
  store float 0x47EFFFFFE0000000, float* %weight39, align 4, !dbg !7397
  %88 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7398
  store %struct.MemoNode* %88, %struct.MemoNode** %retval, align 8, !dbg !7399
  br label %return, !dbg !7399

return:                                           ; preds = %if.else38, %if.then35, %if.then2, %if.then
  %89 = load %struct.MemoNode*, %struct.MemoNode** %retval, align 8, !dbg !7400
  ret %struct.MemoNode* %89, !dbg !7400
}

; Function Attrs: noinline nounwind uwtable
define internal void @copyMemoPositions(i32* %positions, %struct.MemoNode* %table, i32 %nb_positions, i32 %joints_left) #0 !dbg !7401 {
entry:
  %positions.addr = alloca i32*, align 8
  %table.addr = alloca %struct.MemoNode*, align 8
  %nb_positions.addr = alloca i32, align 4
  %joints_left.addr = alloca i32, align 4
  %previous = alloca i32, align 4
  %current = alloca i32, align 4
  %i = alloca i32, align 4
  %node = alloca %struct.MemoNode*, align 8
  store i32* %positions, i32** %positions.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %positions.addr, metadata !7404, metadata !DIExpression()), !dbg !7405
  store %struct.MemoNode* %table, %struct.MemoNode** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MemoNode** %table.addr, metadata !7406, metadata !DIExpression()), !dbg !7407
  store i32 %nb_positions, i32* %nb_positions.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_positions.addr, metadata !7408, metadata !DIExpression()), !dbg !7409
  store i32 %joints_left, i32* %joints_left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %joints_left.addr, metadata !7410, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.declare(metadata i32* %previous, metadata !7412, metadata !DIExpression()), !dbg !7413
  store i32 0, i32* %previous, align 4, !dbg !7413
  call void @llvm.dbg.declare(metadata i32* %current, metadata !7414, metadata !DIExpression()), !dbg !7415
  store i32 0, i32* %current, align 4, !dbg !7415
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7416, metadata !DIExpression()), !dbg !7417
  store i32 0, i32* %i, align 4, !dbg !7417
  store i32 0, i32* %i, align 4, !dbg !7418
  br label %for.cond, !dbg !7420

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %joints_left.addr, align 4, !dbg !7421
  %cmp = icmp sgt i32 %0, 0, !dbg !7423
  br i1 %cmp, label %for.body, label %for.end, !dbg !7424

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MemoNode** %node, metadata !7425, metadata !DIExpression()), !dbg !7427
  %1 = load %struct.MemoNode*, %struct.MemoNode** %table.addr, align 8, !dbg !7428
  %2 = load i32, i32* %nb_positions.addr, align 4, !dbg !7429
  %3 = load i32, i32* %previous, align 4, !dbg !7430
  %4 = load i32, i32* %current, align 4, !dbg !7431
  %5 = load i32, i32* %joints_left.addr, align 4, !dbg !7432
  %call = call i32 @indexMemoNode(i32 %2, i32 %3, i32 %4, i32 %5), !dbg !7433
  %idx.ext = sext i32 %call to i64, !dbg !7434
  %add.ptr = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %1, i64 %idx.ext, !dbg !7434
  store %struct.MemoNode* %add.ptr, %struct.MemoNode** %node, align 8, !dbg !7435
  %6 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7436
  %next = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %6, i32 0, i32 1, !dbg !7437
  %7 = load i32, i32* %next, align 4, !dbg !7437
  %8 = load i32*, i32** %positions.addr, align 8, !dbg !7438
  %9 = load i32, i32* %i, align 4, !dbg !7439
  %idxprom = sext i32 %9 to i64, !dbg !7438
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !7438
  store i32 %7, i32* %arrayidx, align 4, !dbg !7440
  %10 = load i32, i32* %current, align 4, !dbg !7441
  store i32 %10, i32* %previous, align 4, !dbg !7442
  %11 = load %struct.MemoNode*, %struct.MemoNode** %node, align 8, !dbg !7443
  %next1 = getelementptr inbounds %struct.MemoNode, %struct.MemoNode* %11, i32 0, i32 1, !dbg !7444
  %12 = load i32, i32* %next1, align 4, !dbg !7444
  store i32 %12, i32* %current, align 4, !dbg !7445
  br label %for.inc, !dbg !7446

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %joints_left.addr, align 4, !dbg !7447
  %dec = add nsw i32 %13, -1, !dbg !7447
  store i32 %dec, i32* %joints_left.addr, align 4, !dbg !7447
  %14 = load i32, i32* %i, align 4, !dbg !7448
  %inc = add nsw i32 %14, 1, !dbg !7448
  store i32 %inc, i32* %i, align 4, !dbg !7448
  br label %for.cond, !dbg !7449, !llvm.loop !7450

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7452
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @indexMemoNode(i32 %nb_positions, i32 %previous, i32 %current, i32 %joints_left) #0 !dbg !7453 {
entry:
  %nb_positions.addr = alloca i32, align 4
  %previous.addr = alloca i32, align 4
  %current.addr = alloca i32, align 4
  %joints_left.addr = alloca i32, align 4
  store i32 %nb_positions, i32* %nb_positions.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_positions.addr, metadata !7456, metadata !DIExpression()), !dbg !7457
  store i32 %previous, i32* %previous.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %previous.addr, metadata !7458, metadata !DIExpression()), !dbg !7459
  store i32 %current, i32* %current.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %current.addr, metadata !7460, metadata !DIExpression()), !dbg !7461
  store i32 %joints_left, i32* %joints_left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %joints_left.addr, metadata !7462, metadata !DIExpression()), !dbg !7463
  %0 = load i32, i32* %joints_left.addr, align 4, !dbg !7464
  %1 = load i32, i32* %nb_positions.addr, align 4, !dbg !7465
  %mul = mul nsw i32 %0, %1, !dbg !7466
  %2 = load i32, i32* %nb_positions.addr, align 4, !dbg !7467
  %mul1 = mul nsw i32 %mul, %2, !dbg !7468
  %3 = load i32, i32* %current.addr, align 4, !dbg !7469
  %4 = load i32, i32* %nb_positions.addr, align 4, !dbg !7470
  %mul2 = mul nsw i32 %3, %4, !dbg !7471
  %add = add nsw i32 %mul1, %mul2, !dbg !7472
  %5 = load i32, i32* %previous.addr, align 4, !dbg !7473
  %add3 = add nsw i32 %add, %5, !dbg !7474
  ret i32 %add3, !dbg !7475
}

; Function Attrs: noinline nounwind uwtable
define internal float @calcCostAngleLengthDistance(%struct.BArcIterator* %iter, float** %UNUSED_vec_cache, %struct.RigEdge* %edge, float* %vec0, float* %vec1, float* %vec2, i32 %i1, i32 %i2, float %angle_weight, float %length_weight, float %distance_weight) #0 !dbg !7476 {
entry:
  %iter.addr = alloca %struct.BArcIterator*, align 8
  %UNUSED_vec_cache.addr = alloca float**, align 8
  %edge.addr = alloca %struct.RigEdge*, align 8
  %vec0.addr = alloca float*, align 8
  %vec1.addr = alloca float*, align 8
  %vec2.addr = alloca float*, align 8
  %i1.addr = alloca i32, align 4
  %i2.addr = alloca i32, align 4
  %angle_weight.addr = alloca float, align 4
  %length_weight.addr = alloca float, align 4
  %distance_weight.addr = alloca float, align 4
  %vec_second = alloca [3 x float], align 4
  %vec_first = alloca [3 x float], align 4
  %length2 = alloca float, align 4
  %new_cost = alloca float, align 4
  store %struct.BArcIterator* %iter, %struct.BArcIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter.addr, metadata !7479, metadata !DIExpression()), !dbg !7480
  store float** %UNUSED_vec_cache, float*** %UNUSED_vec_cache.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %UNUSED_vec_cache.addr, metadata !7481, metadata !DIExpression()), !dbg !7482
  store %struct.RigEdge* %edge, %struct.RigEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge.addr, metadata !7483, metadata !DIExpression()), !dbg !7484
  store float* %vec0, float** %vec0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec0.addr, metadata !7485, metadata !DIExpression()), !dbg !7486
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !7487, metadata !DIExpression()), !dbg !7488
  store float* %vec2, float** %vec2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec2.addr, metadata !7489, metadata !DIExpression()), !dbg !7490
  store i32 %i1, i32* %i1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i1.addr, metadata !7491, metadata !DIExpression()), !dbg !7492
  store i32 %i2, i32* %i2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i2.addr, metadata !7493, metadata !DIExpression()), !dbg !7494
  store float %angle_weight, float* %angle_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle_weight.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store float %length_weight, float* %length_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length_weight.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  store float %distance_weight, float* %distance_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distance_weight.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_second, metadata !7501, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_first, metadata !7503, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.declare(metadata float* %length2, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.declare(metadata float* %new_cost, metadata !7507, metadata !DIExpression()), !dbg !7508
  store float 0.000000e+00, float* %new_cost, align 4, !dbg !7508
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !7509
  %0 = load float*, float** %vec2.addr, align 8, !dbg !7510
  %1 = load float*, float** %vec1.addr, align 8, !dbg !7511
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !7512
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !7513
  %call = call float @normalize_v3(float* %arraydecay1), !dbg !7514
  store float %call, float* %length2, align 4, !dbg !7515
  %2 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !7516
  %prev = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %2, i32 0, i32 1, !dbg !7518
  %3 = load %struct.RigEdge*, %struct.RigEdge** %prev, align 8, !dbg !7518
  %tobool = icmp ne %struct.RigEdge* %3, null, !dbg !7516
  br i1 %tobool, label %if.then, label %if.end, !dbg !7519

if.then:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !7520
  %4 = load float*, float** %vec1.addr, align 8, !dbg !7522
  %5 = load float*, float** %vec0.addr, align 8, !dbg !7523
  call void @sub_v3_v3v3(float* %arraydecay2, float* %4, float* %5), !dbg !7524
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !7525
  %call4 = call float @normalize_v3(float* %arraydecay3), !dbg !7526
  %6 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !7527
  %prev5 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %6, i32 0, i32 1, !dbg !7528
  %7 = load %struct.RigEdge*, %struct.RigEdge** %prev5, align 8, !dbg !7528
  %angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %7, i32 0, i32 5, !dbg !7529
  %8 = load float, float* %angle, align 4, !dbg !7529
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vec_first, i64 0, i64 0, !dbg !7530
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %vec_second, i64 0, i64 0, !dbg !7531
  %9 = load float, float* %angle_weight.addr, align 4, !dbg !7532
  %call8 = call float @costAngle(float %8, float* %arraydecay6, float* %arraydecay7, float %9), !dbg !7533
  %10 = load float, float* %new_cost, align 4, !dbg !7534
  %add = fadd float %10, %call8, !dbg !7534
  store float %add, float* %new_cost, align 4, !dbg !7534
  br label %if.end, !dbg !7535

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.RigEdge*, %struct.RigEdge** %edge.addr, align 8, !dbg !7536
  %length = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %11, i32 0, i32 4, !dbg !7537
  %12 = load float, float* %length, align 8, !dbg !7537
  %13 = load float, float* %length2, align 4, !dbg !7538
  %14 = load float, float* %length_weight.addr, align 4, !dbg !7539
  %call9 = call float @costLength(float %12, float %13, float %14), !dbg !7540
  %15 = load float, float* %new_cost, align 4, !dbg !7541
  %add10 = fadd float %15, %call9, !dbg !7541
  store float %add10, float* %new_cost, align 4, !dbg !7541
  %16 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !7542
  %17 = load float*, float** %vec1.addr, align 8, !dbg !7543
  %18 = load float*, float** %vec2.addr, align 8, !dbg !7544
  %19 = load i32, i32* %i1.addr, align 4, !dbg !7545
  %20 = load i32, i32* %i2.addr, align 4, !dbg !7546
  %21 = load float, float* %distance_weight.addr, align 4, !dbg !7547
  %call11 = call float @costDistance(%struct.BArcIterator* %16, float* %17, float* %18, i32 %19, i32 %20, float %21), !dbg !7548
  %22 = load float, float* %new_cost, align 4, !dbg !7549
  %add12 = fadd float %22, %call11, !dbg !7549
  store float %add12, float* %new_cost, align 4, !dbg !7549
  %23 = load float, float* %new_cost, align 4, !dbg !7550
  ret float %23, !dbg !7551
}

; Function Attrs: noinline nounwind uwtable
define internal float @costAngle(float %original_angle, float* %vec_first, float* %vec_second, float %angle_weight) #0 !dbg !7552 {
entry:
  %retval = alloca float, align 4
  %original_angle.addr = alloca float, align 4
  %vec_first.addr = alloca float*, align 8
  %vec_second.addr = alloca float*, align 8
  %angle_weight.addr = alloca float, align 4
  %current_angle = alloca float, align 4
  store float %original_angle, float* %original_angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %original_angle.addr, metadata !7555, metadata !DIExpression()), !dbg !7556
  store float* %vec_first, float** %vec_first.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec_first.addr, metadata !7557, metadata !DIExpression()), !dbg !7558
  store float* %vec_second, float** %vec_second.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec_second.addr, metadata !7559, metadata !DIExpression()), !dbg !7560
  store float %angle_weight, float* %angle_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %angle_weight.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  %0 = load float, float* %angle_weight.addr, align 4, !dbg !7563
  %cmp = fcmp ogt float %0, 0.000000e+00, !dbg !7565
  br i1 %cmp, label %if.then, label %if.else7, !dbg !7566

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %current_angle, metadata !7567, metadata !DIExpression()), !dbg !7569
  %1 = load float*, float** %vec_first.addr, align 8, !dbg !7570
  %call = call zeroext i8 @is_zero_v3(float* %1), !dbg !7572
  %tobool = icmp ne i8 %call, 0, !dbg !7572
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !7573

land.lhs.true:                                    ; preds = %if.then
  %2 = load float*, float** %vec_second.addr, align 8, !dbg !7574
  %call1 = call zeroext i8 @is_zero_v3(float* %2), !dbg !7575
  %tobool2 = icmp ne i8 %call1, 0, !dbg !7575
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !7576

if.then3:                                         ; preds = %land.lhs.true
  %3 = load float*, float** %vec_first.addr, align 8, !dbg !7577
  %4 = load float*, float** %vec_second.addr, align 8, !dbg !7579
  %call4 = call float @dot_v3v3(float* %3, float* %4), !dbg !7580
  %call5 = call float @saacos(float %call4), !dbg !7581
  store float %call5, float* %current_angle, align 4, !dbg !7582
  %5 = load float, float* %angle_weight.addr, align 4, !dbg !7583
  %6 = load float, float* %current_angle, align 4, !dbg !7584
  %7 = load float, float* %original_angle.addr, align 4, !dbg !7585
  %sub = fsub float %6, %7, !dbg !7586
  %8 = call float @llvm.fabs.f32(float %sub), !dbg !7587
  %mul = fmul float %5, %8, !dbg !7588
  store float %mul, float* %retval, align 4, !dbg !7589
  br label %return, !dbg !7589

if.else:                                          ; preds = %land.lhs.true, %if.then
  %9 = load float, float* %angle_weight.addr, align 4, !dbg !7590
  %mul6 = fmul float %9, 0x400921FB60000000, !dbg !7592
  store float %mul6, float* %retval, align 4, !dbg !7593
  br label %return, !dbg !7593

if.else7:                                         ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !7594
  br label %return, !dbg !7594

return:                                           ; preds = %if.else7, %if.else, %if.then3
  %10 = load float, float* %retval, align 4, !dbg !7596
  ret float %10, !dbg !7596
}

; Function Attrs: noinline nounwind uwtable
define internal float @costLength(float %original_length, float %current_length, float %length_weight) #0 !dbg !7597 {
entry:
  %retval = alloca float, align 4
  %original_length.addr = alloca float, align 4
  %current_length.addr = alloca float, align 4
  %length_weight.addr = alloca float, align 4
  %length_ratio = alloca float, align 4
  store float %original_length, float* %original_length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %original_length.addr, metadata !7600, metadata !DIExpression()), !dbg !7601
  store float %current_length, float* %current_length.addr, align 4
  call void @llvm.dbg.declare(metadata float* %current_length.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  store float %length_weight, float* %length_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %length_weight.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  %0 = load float, float* %current_length.addr, align 4, !dbg !7606
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !7608
  br i1 %cmp, label %if.then, label %if.else, !dbg !7609

if.then:                                          ; preds = %entry
  store float 0x47EFFFFFE0000000, float* %retval, align 4, !dbg !7610
  br label %return, !dbg !7610

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %length_ratio, metadata !7612, metadata !DIExpression()), !dbg !7614
  %1 = load float, float* %current_length.addr, align 4, !dbg !7615
  %2 = load float, float* %original_length.addr, align 4, !dbg !7616
  %sub = fsub float %1, %2, !dbg !7617
  %3 = load float, float* %original_length.addr, align 4, !dbg !7618
  %div = fdiv float %sub, %3, !dbg !7619
  %4 = call float @llvm.fabs.f32(float %div), !dbg !7620
  store float %4, float* %length_ratio, align 4, !dbg !7614
  %5 = load float, float* %length_weight.addr, align 4, !dbg !7621
  %6 = load float, float* %length_ratio, align 4, !dbg !7622
  %mul = fmul float %5, %6, !dbg !7623
  %7 = load float, float* %length_ratio, align 4, !dbg !7624
  %mul1 = fmul float %mul, %7, !dbg !7625
  store float %mul1, float* %retval, align 4, !dbg !7626
  br label %return, !dbg !7626

return:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %retval, align 4, !dbg !7627
  ret float %8, !dbg !7627
}

; Function Attrs: noinline nounwind uwtable
define internal float @costDistance(%struct.BArcIterator* %iter, float* %vec0, float* %vec1, i32 %i0, i32 %i1, float %distance_weight) #0 !dbg !7628 {
entry:
  %retval = alloca float, align 4
  %iter.addr = alloca %struct.BArcIterator*, align 8
  %vec0.addr = alloca float*, align 8
  %vec1.addr = alloca float*, align 8
  %i0.addr = alloca i32, align 4
  %i1.addr = alloca i32, align 4
  %distance_weight.addr = alloca float, align 4
  %bucket = alloca %struct.EmbedBucket*, align 8
  %max_dist = alloca float, align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %c = alloca [3 x float], align 4
  %v1_inpf = alloca float, align 4
  %j = alloca i32, align 4
  %dist = alloca float, align 4
  store %struct.BArcIterator* %iter, %struct.BArcIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BArcIterator** %iter.addr, metadata !7631, metadata !DIExpression()), !dbg !7632
  store float* %vec0, float** %vec0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec0.addr, metadata !7633, metadata !DIExpression()), !dbg !7634
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !7635, metadata !DIExpression()), !dbg !7636
  store i32 %i0, i32* %i0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i0.addr, metadata !7637, metadata !DIExpression()), !dbg !7638
  store i32 %i1, i32* %i1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i1.addr, metadata !7639, metadata !DIExpression()), !dbg !7640
  store float %distance_weight, float* %distance_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distance_weight.addr, metadata !7641, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.declare(metadata %struct.EmbedBucket** %bucket, metadata !7643, metadata !DIExpression()), !dbg !7644
  store %struct.EmbedBucket* null, %struct.EmbedBucket** %bucket, align 8, !dbg !7644
  call void @llvm.dbg.declare(metadata float* %max_dist, metadata !7645, metadata !DIExpression()), !dbg !7646
  store float 0.000000e+00, float* %max_dist, align 4, !dbg !7646
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !7647, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !7649, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.declare(metadata [3 x float]* %c, metadata !7651, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.declare(metadata float* %v1_inpf, metadata !7653, metadata !DIExpression()), !dbg !7654
  %0 = load float, float* %distance_weight.addr, align 4, !dbg !7655
  %cmp = fcmp ogt float %0, 0.000000e+00, !dbg !7657
  br i1 %cmp, label %if.then, label %if.else16, !dbg !7658

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7659
  %1 = load float*, float** %vec0.addr, align 8, !dbg !7661
  %2 = load float*, float** %vec1.addr, align 8, !dbg !7662
  call void @sub_v3_v3v3(float* %arraydecay, float* %1, float* %2), !dbg !7663
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7664
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7665
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !7666
  store float %call, float* %v1_inpf, align 4, !dbg !7667
  %3 = load float, float* %v1_inpf, align 4, !dbg !7668
  %cmp3 = fcmp ogt float %3, 0.000000e+00, !dbg !7670
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !7671

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7672, metadata !DIExpression()), !dbg !7674
  %4 = load i32, i32* %i0.addr, align 4, !dbg !7675
  %add = add nsw i32 %4, 1, !dbg !7677
  store i32 %add, i32* %j, align 4, !dbg !7678
  br label %for.cond, !dbg !7679

for.cond:                                         ; preds = %for.inc, %if.then4
  %5 = load i32, i32* %j, align 4, !dbg !7680
  %6 = load i32, i32* %i1.addr, align 4, !dbg !7682
  %sub = sub nsw i32 %6, 1, !dbg !7683
  %cmp5 = icmp slt i32 %5, %sub, !dbg !7684
  br i1 %cmp5, label %for.body, label %for.end, !dbg !7685

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %dist, metadata !7686, metadata !DIExpression()), !dbg !7688
  %7 = load %struct.BArcIterator*, %struct.BArcIterator** %iter.addr, align 8, !dbg !7689
  %8 = bitcast %struct.BArcIterator* %7 to i8*, !dbg !7689
  %9 = load i32, i32* %j, align 4, !dbg !7690
  %call6 = call i8* @IT_peek(i8* %8, i32 %9), !dbg !7691
  %10 = bitcast i8* %call6 to %struct.EmbedBucket*, !dbg !7691
  store %struct.EmbedBucket* %10, %struct.EmbedBucket** %bucket, align 8, !dbg !7692
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7693
  %11 = load %struct.EmbedBucket*, %struct.EmbedBucket** %bucket, align 8, !dbg !7694
  %p = getelementptr inbounds %struct.EmbedBucket, %struct.EmbedBucket* %11, i32 0, i32 2, !dbg !7695
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7694
  %12 = load float*, float** %vec1.addr, align 8, !dbg !7696
  call void @sub_v3_v3v3(float* %arraydecay7, float* %arraydecay8, float* %12), !dbg !7697
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !7698
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7699
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7700
  call void @cross_v3_v3v3(float* %arraydecay9, float* %arraydecay10, float* %arraydecay11), !dbg !7701
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !7702
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !7703
  %call14 = call float @dot_v3v3(float* %arraydecay12, float* %arraydecay13), !dbg !7704
  %13 = load float, float* %v1_inpf, align 4, !dbg !7705
  %div = fdiv float %call14, %13, !dbg !7706
  store float %div, float* %dist, align 4, !dbg !7707
  %14 = load float, float* %dist, align 4, !dbg !7708
  %15 = load float, float* %max_dist, align 4, !dbg !7709
  %cmp15 = fcmp ogt float %14, %15, !dbg !7710
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !7708

cond.true:                                        ; preds = %for.body
  %16 = load float, float* %dist, align 4, !dbg !7711
  br label %cond.end, !dbg !7708

cond.false:                                       ; preds = %for.body
  %17 = load float, float* %max_dist, align 4, !dbg !7712
  br label %cond.end, !dbg !7708

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %16, %cond.true ], [ %17, %cond.false ], !dbg !7708
  store float %cond, float* %max_dist, align 4, !dbg !7713
  br label %for.inc, !dbg !7714

for.inc:                                          ; preds = %cond.end
  %18 = load i32, i32* %j, align 4, !dbg !7715
  %inc = add nsw i32 %18, 1, !dbg !7715
  store i32 %inc, i32* %j, align 4, !dbg !7715
  br label %for.cond, !dbg !7716, !llvm.loop !7717

for.end:                                          ; preds = %for.cond
  %19 = load float, float* %distance_weight.addr, align 4, !dbg !7719
  %20 = load float, float* %max_dist, align 4, !dbg !7720
  %mul = fmul float %19, %20, !dbg !7721
  store float %mul, float* %retval, align 4, !dbg !7722
  br label %return, !dbg !7722

if.else:                                          ; preds = %if.then
  store float 0x47EFFFFFE0000000, float* %retval, align 4, !dbg !7723
  br label %return, !dbg !7723

if.else16:                                        ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !7725
  br label %return, !dbg !7725

return:                                           ; preds = %if.else16, %if.else, %for.end
  %21 = load float, float* %retval, align 4, !dbg !7727
  ret float %21, !dbg !7727
}

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !7728 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !7732, metadata !DIExpression()), !dbg !7733
  %0 = load float, float* %fac.addr, align 4, !dbg !7734
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !7734
  br i1 %cmp, label %if.then, label %if.else, !dbg !7736

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !7737
  br label %return, !dbg !7737

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !7738
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !7738
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !7740

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !7741
  br label %return, !dbg !7741

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !7742
  %call = call float @acosf(float %2) #7, !dbg !7743
  store float %call, float* %retval, align 4, !dbg !7744
  br label %return, !dbg !7744

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !7745
  ret float %3, !dbg !7745
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #4

declare dso_local i8* @IT_next(i8*) #2

declare dso_local void @BIF_flagMultiArcs(%struct.ReebGraph*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @matchMultiResolutionStartingNode(%struct.RigGraph* %rigg, %struct.ReebGraph* %reebg, %struct.RigNode* %inode) #0 !dbg !7746 {
entry:
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %reebg.addr = alloca %struct.ReebGraph*, align 8
  %inode.addr = alloca %struct.RigNode*, align 8
  %enode = alloca %struct.ReebNode*, align 8
  %ishape = alloca i32, align 4
  %eshape = alloca i32, align 4
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !7749, metadata !DIExpression()), !dbg !7750
  store %struct.ReebGraph* %reebg, %struct.ReebGraph** %reebg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReebGraph** %reebg.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  store %struct.RigNode* %inode, %struct.RigNode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode.addr, metadata !7753, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %enode, metadata !7755, metadata !DIExpression()), !dbg !7756
  call void @llvm.dbg.declare(metadata i32* %ishape, metadata !7757, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.declare(metadata i32* %eshape, metadata !7759, metadata !DIExpression()), !dbg !7760
  %0 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg.addr, align 8, !dbg !7761
  %nodes = getelementptr inbounds %struct.ReebGraph, %struct.ReebGraph* %0, i32 0, i32 1, !dbg !7762
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !7763
  %1 = load i8*, i8** %first, align 8, !dbg !7763
  %2 = bitcast i8* %1 to %struct.ReebNode*, !dbg !7761
  store %struct.ReebNode* %2, %struct.ReebNode** %enode, align 8, !dbg !7764
  %3 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7765
  %4 = bitcast %struct.RigGraph* %3 to %struct.BGraph*, !dbg !7766
  %5 = load %struct.RigNode*, %struct.RigNode** %inode.addr, align 8, !dbg !7767
  %6 = bitcast %struct.RigNode* %5 to %struct.BNode*, !dbg !7768
  %call = call i32 @BLI_subtreeShape(%struct.BGraph* %4, %struct.BNode* %6, %struct.BArc* null, i32 0), !dbg !7769
  %rem = srem i32 %call, 100, !dbg !7770
  store i32 %rem, i32* %ishape, align 4, !dbg !7771
  %7 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7772
  %link_mesh = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %7, i32 0, i32 11, !dbg !7773
  %8 = load %struct.ReebGraph*, %struct.ReebGraph** %link_mesh, align 8, !dbg !7773
  %9 = bitcast %struct.ReebGraph* %8 to %struct.BGraph*, !dbg !7774
  %10 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7775
  %11 = bitcast %struct.ReebNode* %10 to %struct.BNode*, !dbg !7776
  %call1 = call i32 @BLI_subtreeShape(%struct.BGraph* %9, %struct.BNode* %11, %struct.BArc* null, i32 0), !dbg !7777
  %rem2 = srem i32 %call1, 100, !dbg !7778
  store i32 %rem2, i32* %eshape, align 4, !dbg !7779
  br label %while.cond, !dbg !7780

while.cond:                                       ; preds = %while.body, %entry
  %12 = load i32, i32* %ishape, align 4, !dbg !7781
  %13 = load i32, i32* %eshape, align 4, !dbg !7782
  %cmp = icmp ne i32 %12, %13, !dbg !7783
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7784

land.rhs:                                         ; preds = %while.cond
  %14 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg.addr, align 8, !dbg !7785
  %link_up = getelementptr inbounds %struct.ReebGraph, %struct.ReebGraph* %14, i32 0, i32 11, !dbg !7786
  %15 = load %struct.ReebGraph*, %struct.ReebGraph** %link_up, align 8, !dbg !7786
  %tobool = icmp ne %struct.ReebGraph* %15, null, !dbg !7784
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !7787
  br i1 %16, label %while.body, label %while.end, !dbg !7780

while.body:                                       ; preds = %land.end
  %17 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg.addr, align 8, !dbg !7788
  %link_up3 = getelementptr inbounds %struct.ReebGraph, %struct.ReebGraph* %17, i32 0, i32 11, !dbg !7790
  %18 = load %struct.ReebGraph*, %struct.ReebGraph** %link_up3, align 8, !dbg !7790
  store %struct.ReebGraph* %18, %struct.ReebGraph** %reebg.addr, align 8, !dbg !7791
  %19 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg.addr, align 8, !dbg !7792
  %nodes4 = getelementptr inbounds %struct.ReebGraph, %struct.ReebGraph* %19, i32 0, i32 1, !dbg !7793
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes4, i32 0, i32 0, !dbg !7794
  %20 = load i8*, i8** %first5, align 8, !dbg !7794
  %21 = bitcast i8* %20 to %struct.ReebNode*, !dbg !7792
  store %struct.ReebNode* %21, %struct.ReebNode** %enode, align 8, !dbg !7795
  %22 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg.addr, align 8, !dbg !7796
  %23 = bitcast %struct.ReebGraph* %22 to %struct.BGraph*, !dbg !7797
  %24 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7798
  %25 = bitcast %struct.ReebNode* %24 to %struct.BNode*, !dbg !7799
  %call6 = call i32 @BLI_subtreeShape(%struct.BGraph* %23, %struct.BNode* %25, %struct.BArc* null, i32 0), !dbg !7800
  %rem7 = srem i32 %call6, 100, !dbg !7801
  store i32 %rem7, i32* %eshape, align 4, !dbg !7802
  br label %while.cond, !dbg !7780, !llvm.loop !7803

while.end:                                        ; preds = %land.end
  %26 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7805
  %27 = load %struct.RigNode*, %struct.RigNode** %inode.addr, align 8, !dbg !7806
  %link_mesh8 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %27, i32 0, i32 10, !dbg !7807
  store %struct.ReebNode* %26, %struct.ReebNode** %link_mesh8, align 8, !dbg !7808
  ret void, !dbg !7809
}

; Function Attrs: noinline nounwind uwtable
define internal void @retargetSubgraph(%struct.bContext* %C, %struct.RigGraph* %rigg, %struct.RigArc* %start_arc, %struct.RigNode* %start_node) #0 !dbg !7810 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %start_arc.addr = alloca %struct.RigArc*, align 8
  %start_node.addr = alloca %struct.RigNode*, align 8
  %inode = alloca %struct.RigNode*, align 8
  %i = alloca i32, align 4
  %enode = alloca %struct.ReebNode*, align 8
  %earc = alloca %struct.ReebArc*, align 8
  %next_iarc = alloca %struct.RigArc*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7811, metadata !DIExpression()), !dbg !7812
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !7813, metadata !DIExpression()), !dbg !7814
  store %struct.RigArc* %start_arc, %struct.RigArc** %start_arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %start_arc.addr, metadata !7815, metadata !DIExpression()), !dbg !7816
  store %struct.RigNode* %start_node, %struct.RigNode** %start_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %start_node.addr, metadata !7817, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode, metadata !7819, metadata !DIExpression()), !dbg !7820
  %0 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !7821
  store %struct.RigNode* %0, %struct.RigNode** %inode, align 8, !dbg !7820
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7822, metadata !DIExpression()), !dbg !7823
  %1 = load %struct.RigArc*, %struct.RigArc** %start_arc.addr, align 8, !dbg !7824
  %tobool = icmp ne %struct.RigArc* %1, null, !dbg !7824
  br i1 %tobool, label %if.then, label %if.end, !dbg !7826

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %enode, metadata !7827, metadata !DIExpression()), !dbg !7829
  %2 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !7830
  %link_mesh = getelementptr inbounds %struct.RigNode, %struct.RigNode* %2, i32 0, i32 10, !dbg !7831
  %3 = load %struct.ReebNode*, %struct.ReebNode** %link_mesh, align 8, !dbg !7831
  store %struct.ReebNode* %3, %struct.ReebNode** %enode, align 8, !dbg !7829
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc, metadata !7832, metadata !DIExpression()), !dbg !7833
  %4 = load %struct.RigArc*, %struct.RigArc** %start_arc.addr, align 8, !dbg !7834
  %link_mesh1 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %4, i32 0, i32 11, !dbg !7835
  %5 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh1, align 8, !dbg !7835
  store %struct.ReebArc* %5, %struct.ReebArc** %earc, align 8, !dbg !7833
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7836
  %7 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7837
  %8 = load %struct.RigArc*, %struct.RigArc** %start_arc.addr, align 8, !dbg !7838
  %9 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !7839
  call void @retargetArctoArc(%struct.bContext* %6, %struct.RigGraph* %7, %struct.RigArc* %8, %struct.RigNode* %9), !dbg !7840
  %10 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !7841
  %11 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7842
  %call = call %struct.ReebNode* @BIF_otherNodeFromIndex(%struct.ReebArc* %10, %struct.ReebNode* %11), !dbg !7843
  store %struct.ReebNode* %call, %struct.ReebNode** %enode, align 8, !dbg !7844
  %12 = load %struct.RigArc*, %struct.RigArc** %start_arc.addr, align 8, !dbg !7845
  %13 = bitcast %struct.RigArc* %12 to %struct.BArc*, !dbg !7846
  %14 = load %struct.RigNode*, %struct.RigNode** %inode, align 8, !dbg !7847
  %15 = bitcast %struct.RigNode* %14 to %struct.BNode*, !dbg !7848
  %call2 = call %struct.BNode* @BLI_otherNode(%struct.BArc* %13, %struct.BNode* %15), !dbg !7849
  %16 = bitcast %struct.BNode* %call2 to %struct.RigNode*, !dbg !7850
  store %struct.RigNode* %16, %struct.RigNode** %inode, align 8, !dbg !7851
  %17 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7852
  %18 = load %struct.RigNode*, %struct.RigNode** %inode, align 8, !dbg !7853
  %19 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7854
  call void @matchMultiResolutionNode(%struct.RigGraph* %17, %struct.RigNode* %18, %struct.ReebNode* %19), !dbg !7855
  br label %if.end, !dbg !7856

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !7857
  br label %for.cond, !dbg !7859

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load i32, i32* %i, align 4, !dbg !7860
  %21 = load %struct.RigNode*, %struct.RigNode** %inode, align 8, !dbg !7862
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %21, i32 0, i32 4, !dbg !7863
  %22 = load i32, i32* %degree, align 8, !dbg !7863
  %cmp = icmp slt i32 %20, %22, !dbg !7864
  br i1 %cmp, label %for.body, label %for.end, !dbg !7865

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.RigArc** %next_iarc, metadata !7866, metadata !DIExpression()), !dbg !7868
  %23 = load %struct.RigNode*, %struct.RigNode** %inode, align 8, !dbg !7869
  %arcs = getelementptr inbounds %struct.RigNode, %struct.RigNode* %23, i32 0, i32 5, !dbg !7870
  %24 = load %struct.BArc**, %struct.BArc*** %arcs, align 8, !dbg !7870
  %25 = load i32, i32* %i, align 4, !dbg !7871
  %idxprom = sext i32 %25 to i64, !dbg !7869
  %arrayidx = getelementptr inbounds %struct.BArc*, %struct.BArc** %24, i64 %idxprom, !dbg !7869
  %26 = load %struct.BArc*, %struct.BArc** %arrayidx, align 8, !dbg !7869
  %27 = bitcast %struct.BArc* %26 to %struct.RigArc*, !dbg !7872
  store %struct.RigArc* %27, %struct.RigArc** %next_iarc, align 8, !dbg !7868
  %28 = load %struct.RigArc*, %struct.RigArc** %next_iarc, align 8, !dbg !7873
  %29 = load %struct.RigArc*, %struct.RigArc** %start_arc.addr, align 8, !dbg !7875
  %cmp3 = icmp ne %struct.RigArc* %28, %29, !dbg !7876
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !7877

if.then4:                                         ; preds = %for.body
  %30 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7878
  %31 = load %struct.RigArc*, %struct.RigArc** %start_arc.addr, align 8, !dbg !7880
  %32 = load %struct.RigNode*, %struct.RigNode** %inode, align 8, !dbg !7881
  %33 = load %struct.RigArc*, %struct.RigArc** %next_iarc, align 8, !dbg !7882
  call void @findCorrespondingArc(%struct.RigGraph* %30, %struct.RigArc* %31, %struct.RigNode* %32, %struct.RigArc* %33, i32 1), !dbg !7883
  %34 = load %struct.RigArc*, %struct.RigArc** %next_iarc, align 8, !dbg !7884
  %link_mesh5 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %34, i32 0, i32 11, !dbg !7886
  %35 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh5, align 8, !dbg !7886
  %tobool6 = icmp ne %struct.ReebArc* %35, null, !dbg !7884
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7887

if.then7:                                         ; preds = %if.then4
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7888
  %37 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7890
  %38 = load %struct.RigArc*, %struct.RigArc** %next_iarc, align 8, !dbg !7891
  %39 = load %struct.RigNode*, %struct.RigNode** %inode, align 8, !dbg !7892
  call void @retargetSubgraph(%struct.bContext* %36, %struct.RigGraph* %37, %struct.RigArc* %38, %struct.RigNode* %39), !dbg !7893
  br label %if.end8, !dbg !7894

if.end8:                                          ; preds = %if.then7, %if.then4
  br label %if.end9, !dbg !7895

if.end9:                                          ; preds = %if.end8, %for.body
  br label %for.inc, !dbg !7896

for.inc:                                          ; preds = %if.end9
  %40 = load i32, i32* %i, align 4, !dbg !7897
  %inc = add nsw i32 %40, 1, !dbg !7897
  store i32 %inc, i32* %i, align 4, !dbg !7897
  br label %for.cond, !dbg !7898, !llvm.loop !7899

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7901
}

declare dso_local void @ED_armature_from_edit(%struct.bArmature*) #2

declare dso_local i32 @BLI_subtreeShape(%struct.BGraph*, %struct.BNode*, %struct.BArc*, i32) #2

declare dso_local %struct.ReebNode* @BIF_otherNodeFromIndex(%struct.ReebArc*, %struct.ReebNode*) #2

declare dso_local %struct.BNode* @BLI_otherNode(%struct.BArc*, %struct.BNode*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @matchMultiResolutionNode(%struct.RigGraph* %rigg, %struct.RigNode* %inode, %struct.ReebNode* %top_node) #0 !dbg !7902 {
entry:
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %inode.addr = alloca %struct.RigNode*, align 8
  %top_node.addr = alloca %struct.ReebNode*, align 8
  %enode = alloca %struct.ReebNode*, align 8
  %reebg = alloca %struct.ReebGraph*, align 8
  %ishape = alloca i32, align 4
  %eshape = alloca i32, align 4
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !7905, metadata !DIExpression()), !dbg !7906
  store %struct.RigNode* %inode, %struct.RigNode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %inode.addr, metadata !7907, metadata !DIExpression()), !dbg !7908
  store %struct.ReebNode* %top_node, %struct.ReebNode** %top_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %top_node.addr, metadata !7909, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %enode, metadata !7911, metadata !DIExpression()), !dbg !7912
  %0 = load %struct.ReebNode*, %struct.ReebNode** %top_node.addr, align 8, !dbg !7913
  store %struct.ReebNode* %0, %struct.ReebNode** %enode, align 8, !dbg !7912
  call void @llvm.dbg.declare(metadata %struct.ReebGraph** %reebg, metadata !7914, metadata !DIExpression()), !dbg !7915
  %1 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7916
  %link_mesh = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %1, i32 0, i32 11, !dbg !7917
  %2 = load %struct.ReebGraph*, %struct.ReebGraph** %link_mesh, align 8, !dbg !7917
  %3 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7918
  %call = call %struct.ReebGraph* @BIF_graphForMultiNode(%struct.ReebGraph* %2, %struct.ReebNode* %3), !dbg !7919
  store %struct.ReebGraph* %call, %struct.ReebGraph** %reebg, align 8, !dbg !7915
  call void @llvm.dbg.declare(metadata i32* %ishape, metadata !7920, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.declare(metadata i32* %eshape, metadata !7922, metadata !DIExpression()), !dbg !7923
  %4 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7924
  %5 = bitcast %struct.RigGraph* %4 to %struct.BGraph*, !dbg !7925
  %6 = load %struct.RigNode*, %struct.RigNode** %inode.addr, align 8, !dbg !7926
  %7 = bitcast %struct.RigNode* %6 to %struct.BNode*, !dbg !7927
  %call1 = call i32 @BLI_subtreeShape(%struct.BGraph* %5, %struct.BNode* %7, %struct.BArc* null, i32 0), !dbg !7928
  %rem = srem i32 %call1, 100, !dbg !7929
  store i32 %rem, i32* %ishape, align 4, !dbg !7930
  %8 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg, align 8, !dbg !7931
  %9 = bitcast %struct.ReebGraph* %8 to %struct.BGraph*, !dbg !7932
  %10 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7933
  %11 = bitcast %struct.ReebNode* %10 to %struct.BNode*, !dbg !7934
  %call2 = call i32 @BLI_subtreeShape(%struct.BGraph* %9, %struct.BNode* %11, %struct.BArc* null, i32 0), !dbg !7935
  %rem3 = srem i32 %call2, 100, !dbg !7936
  store i32 %rem3, i32* %eshape, align 4, !dbg !7937
  %12 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7938
  %13 = load %struct.RigNode*, %struct.RigNode** %inode.addr, align 8, !dbg !7939
  %link_mesh4 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %13, i32 0, i32 10, !dbg !7940
  store %struct.ReebNode* %12, %struct.ReebNode** %link_mesh4, align 8, !dbg !7941
  br label %while.cond, !dbg !7942

while.cond:                                       ; preds = %while.body, %entry
  %14 = load i32, i32* %ishape, align 4, !dbg !7943
  %15 = load i32, i32* %eshape, align 4, !dbg !7944
  %cmp = icmp eq i32 %14, %15, !dbg !7945
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7946

land.rhs:                                         ; preds = %while.cond
  %16 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7947
  %link_down = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %16, i32 0, i32 14, !dbg !7948
  %17 = load %struct.ReebNode*, %struct.ReebNode** %link_down, align 8, !dbg !7948
  %tobool = icmp ne %struct.ReebNode* %17, null, !dbg !7946
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !7949
  br i1 %18, label %while.body, label %while.end, !dbg !7942

while.body:                                       ; preds = %land.end
  %19 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7950
  %20 = load %struct.RigNode*, %struct.RigNode** %inode.addr, align 8, !dbg !7952
  %link_mesh5 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %20, i32 0, i32 10, !dbg !7953
  store %struct.ReebNode* %19, %struct.ReebNode** %link_mesh5, align 8, !dbg !7954
  %21 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7955
  %link_down6 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %21, i32 0, i32 14, !dbg !7956
  %22 = load %struct.ReebNode*, %struct.ReebNode** %link_down6, align 8, !dbg !7956
  store %struct.ReebNode* %22, %struct.ReebNode** %enode, align 8, !dbg !7957
  %23 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !7958
  %link_mesh7 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %23, i32 0, i32 11, !dbg !7959
  %24 = load %struct.ReebGraph*, %struct.ReebGraph** %link_mesh7, align 8, !dbg !7959
  %25 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7960
  %call8 = call %struct.ReebGraph* @BIF_graphForMultiNode(%struct.ReebGraph* %24, %struct.ReebNode* %25), !dbg !7961
  store %struct.ReebGraph* %call8, %struct.ReebGraph** %reebg, align 8, !dbg !7962
  %26 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg, align 8, !dbg !7963
  %27 = bitcast %struct.ReebGraph* %26 to %struct.BGraph*, !dbg !7964
  %28 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !7965
  %29 = bitcast %struct.ReebNode* %28 to %struct.BNode*, !dbg !7966
  %call9 = call i32 @BLI_subtreeShape(%struct.BGraph* %27, %struct.BNode* %29, %struct.BArc* null, i32 0), !dbg !7967
  %rem10 = srem i32 %call9, 100, !dbg !7968
  store i32 %rem10, i32* %eshape, align 4, !dbg !7969
  br label %while.cond, !dbg !7942, !llvm.loop !7970

while.end:                                        ; preds = %land.end
  ret void, !dbg !7972
}

; Function Attrs: noinline nounwind uwtable
define internal void @findCorrespondingArc(%struct.RigGraph* %rigg, %struct.RigArc* %start_arc, %struct.RigNode* %start_node, %struct.RigArc* %next_iarc, i32 %root) #0 !dbg !7973 {
entry:
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %start_arc.addr = alloca %struct.RigArc*, align 8
  %start_node.addr = alloca %struct.RigNode*, align 8
  %next_iarc.addr = alloca %struct.RigArc*, align 8
  %root.addr = alloca i32, align 4
  %enode = alloca %struct.ReebNode*, align 8
  %next_earc = alloca %struct.ReebArc*, align 8
  %symmetry_level = alloca i32, align 4
  %symmetry_group = alloca i32, align 4
  %symmetry_flag = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  store %struct.RigArc* %start_arc, %struct.RigArc** %start_arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %start_arc.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  store %struct.RigNode* %start_node, %struct.RigNode** %start_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %start_node.addr, metadata !7980, metadata !DIExpression()), !dbg !7981
  store %struct.RigArc* %next_iarc, %struct.RigArc** %next_iarc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %next_iarc.addr, metadata !7982, metadata !DIExpression()), !dbg !7983
  store i32 %root, i32* %root.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %root.addr, metadata !7984, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %enode, metadata !7986, metadata !DIExpression()), !dbg !7987
  %0 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !7988
  %link_mesh = getelementptr inbounds %struct.RigNode, %struct.RigNode* %0, i32 0, i32 10, !dbg !7989
  %1 = load %struct.ReebNode*, %struct.ReebNode** %link_mesh, align 8, !dbg !7989
  store %struct.ReebNode* %1, %struct.ReebNode** %enode, align 8, !dbg !7987
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %next_earc, metadata !7990, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.declare(metadata i32* %symmetry_level, metadata !7992, metadata !DIExpression()), !dbg !7993
  %2 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !7994
  %symmetry_level1 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %2, i32 0, i32 6, !dbg !7995
  %3 = load i32, i32* %symmetry_level1, align 8, !dbg !7995
  store i32 %3, i32* %symmetry_level, align 4, !dbg !7993
  call void @llvm.dbg.declare(metadata i32* %symmetry_group, metadata !7996, metadata !DIExpression()), !dbg !7997
  %4 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !7998
  %symmetry_group2 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %4, i32 0, i32 7, !dbg !7999
  %5 = load i32, i32* %symmetry_group2, align 4, !dbg !7999
  store i32 %5, i32* %symmetry_group, align 4, !dbg !7997
  call void @llvm.dbg.declare(metadata i32* %symmetry_flag, metadata !8000, metadata !DIExpression()), !dbg !8001
  %6 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8002
  %symmetry_flag3 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %6, i32 0, i32 8, !dbg !8003
  %7 = load i32, i32* %symmetry_flag3, align 8, !dbg !8003
  store i32 %7, i32* %symmetry_flag, align 4, !dbg !8001
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8004, metadata !DIExpression()), !dbg !8005
  %8 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8006
  %link_mesh4 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %8, i32 0, i32 11, !dbg !8007
  store %struct.ReebArc* null, %struct.ReebArc** %link_mesh4, align 8, !dbg !8008
  store i32 0, i32* %i, align 4, !dbg !8009
  br label %for.cond, !dbg !8011

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !8012
  %10 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8014
  %degree = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %10, i32 0, i32 4, !dbg !8015
  %11 = load i32, i32* %degree, align 8, !dbg !8015
  %cmp = icmp slt i32 %9, %11, !dbg !8016
  br i1 %cmp, label %for.body, label %for.end, !dbg !8017

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8018
  %arcs = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %12, i32 0, i32 5, !dbg !8020
  %13 = load %struct.ReebArc**, %struct.ReebArc*** %arcs, align 8, !dbg !8020
  %14 = load i32, i32* %i, align 4, !dbg !8021
  %idxprom = sext i32 %14 to i64, !dbg !8018
  %arrayidx = getelementptr inbounds %struct.ReebArc*, %struct.ReebArc** %13, i64 %idxprom, !dbg !8018
  %15 = load %struct.ReebArc*, %struct.ReebArc** %arrayidx, align 8, !dbg !8018
  store %struct.ReebArc* %15, %struct.ReebArc** %next_earc, align 8, !dbg !8022
  %16 = load %struct.ReebArc*, %struct.ReebArc** %next_earc, align 8, !dbg !8023
  %flag = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %16, i32 0, i32 4, !dbg !8025
  %17 = load i32, i32* %flag, align 8, !dbg !8025
  %cmp5 = icmp eq i32 %17, 0, !dbg !8026
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !8027

land.lhs.true:                                    ; preds = %for.body
  %18 = load %struct.ReebArc*, %struct.ReebArc** %next_earc, align 8, !dbg !8028
  %symmetry_flag6 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %18, i32 0, i32 8, !dbg !8029
  %19 = load i32, i32* %symmetry_flag6, align 8, !dbg !8029
  %20 = load i32, i32* %symmetry_flag, align 4, !dbg !8030
  %cmp7 = icmp eq i32 %19, %20, !dbg !8031
  br i1 %cmp7, label %land.lhs.true8, label %if.end, !dbg !8032

land.lhs.true8:                                   ; preds = %land.lhs.true
  %21 = load %struct.ReebArc*, %struct.ReebArc** %next_earc, align 8, !dbg !8033
  %symmetry_group9 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %21, i32 0, i32 7, !dbg !8034
  %22 = load i32, i32* %symmetry_group9, align 4, !dbg !8034
  %23 = load i32, i32* %symmetry_group, align 4, !dbg !8035
  %cmp10 = icmp eq i32 %22, %23, !dbg !8036
  br i1 %cmp10, label %land.lhs.true11, label %if.end, !dbg !8037

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %24 = load %struct.ReebArc*, %struct.ReebArc** %next_earc, align 8, !dbg !8038
  %symmetry_level12 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %24, i32 0, i32 6, !dbg !8039
  %25 = load i32, i32* %symmetry_level12, align 8, !dbg !8039
  %26 = load i32, i32* %symmetry_level, align 4, !dbg !8040
  %cmp13 = icmp eq i32 %25, %26, !dbg !8041
  br i1 %cmp13, label %if.then, label %if.end, !dbg !8042

if.then:                                          ; preds = %land.lhs.true11
  %27 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !8043
  %28 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !8045
  %29 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8046
  %30 = load %struct.ReebArc*, %struct.ReebArc** %next_earc, align 8, !dbg !8047
  call void @matchMultiResolutionArc(%struct.RigGraph* %27, %struct.RigNode* %28, %struct.RigArc* %29, %struct.ReebArc* %30), !dbg !8048
  br label %for.end, !dbg !8049

if.end:                                           ; preds = %land.lhs.true11, %land.lhs.true8, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8050

for.inc:                                          ; preds = %if.end
  %31 = load i32, i32* %i, align 4, !dbg !8051
  %inc = add nsw i32 %31, 1, !dbg !8051
  store i32 %inc, i32* %i, align 4, !dbg !8051
  br label %for.cond, !dbg !8052, !llvm.loop !8053

for.end:                                          ; preds = %if.then, %for.cond
  %32 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8055
  %link_mesh14 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %32, i32 0, i32 11, !dbg !8057
  %33 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh14, align 8, !dbg !8057
  %cmp15 = icmp eq %struct.ReebArc* %33, null, !dbg !8058
  br i1 %cmp15, label %if.then16, label %if.end21, !dbg !8059

if.then16:                                        ; preds = %for.end
  %34 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8060
  %link_up = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %34, i32 0, i32 15, !dbg !8063
  %35 = load %struct.ReebNode*, %struct.ReebNode** %link_up, align 8, !dbg !8063
  %tobool = icmp ne %struct.ReebNode* %35, null, !dbg !8060
  br i1 %tobool, label %if.then17, label %if.end20, !dbg !8064

if.then17:                                        ; preds = %if.then16
  %36 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8065
  %link_up18 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %36, i32 0, i32 15, !dbg !8067
  %37 = load %struct.ReebNode*, %struct.ReebNode** %link_up18, align 8, !dbg !8067
  %38 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !8068
  %link_mesh19 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %38, i32 0, i32 10, !dbg !8069
  store %struct.ReebNode* %37, %struct.ReebNode** %link_mesh19, align 8, !dbg !8070
  %39 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !8071
  %40 = load %struct.RigArc*, %struct.RigArc** %start_arc.addr, align 8, !dbg !8072
  %41 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !8073
  %42 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8074
  call void @findCorrespondingArc(%struct.RigGraph* %39, %struct.RigArc* %40, %struct.RigNode* %41, %struct.RigArc* %42, i32 0), !dbg !8075
  br label %if.end20, !dbg !8076

if.end20:                                         ; preds = %if.then17, %if.then16
  br label %if.end21, !dbg !8077

if.end21:                                         ; preds = %if.end20, %for.end
  %43 = load i32, i32* %root.addr, align 4, !dbg !8078
  %tobool22 = icmp ne i32 %43, 0, !dbg !8078
  br i1 %tobool22, label %land.lhs.true23, label %if.end45, !dbg !8080

land.lhs.true23:                                  ; preds = %if.end21
  %44 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8081
  %link_mesh24 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %44, i32 0, i32 11, !dbg !8082
  %45 = load %struct.ReebArc*, %struct.ReebArc** %link_mesh24, align 8, !dbg !8082
  %cmp25 = icmp eq %struct.ReebArc* %45, null, !dbg !8083
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !8084

if.then26:                                        ; preds = %land.lhs.true23
  %46 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8085
  %47 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !8087
  %link_mesh27 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %47, i32 0, i32 10, !dbg !8088
  store %struct.ReebNode* %46, %struct.ReebNode** %link_mesh27, align 8, !dbg !8089
  store i32 0, i32* %i, align 4, !dbg !8090
  br label %for.cond28, !dbg !8092

for.cond28:                                       ; preds = %for.inc42, %if.then26
  %48 = load i32, i32* %i, align 4, !dbg !8093
  %49 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8095
  %degree29 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %49, i32 0, i32 4, !dbg !8096
  %50 = load i32, i32* %degree29, align 8, !dbg !8096
  %cmp30 = icmp slt i32 %48, %50, !dbg !8097
  br i1 %cmp30, label %for.body31, label %for.end44, !dbg !8098

for.body31:                                       ; preds = %for.cond28
  %51 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8099
  %arcs32 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %51, i32 0, i32 5, !dbg !8101
  %52 = load %struct.ReebArc**, %struct.ReebArc*** %arcs32, align 8, !dbg !8101
  %53 = load i32, i32* %i, align 4, !dbg !8102
  %idxprom33 = sext i32 %53 to i64, !dbg !8099
  %arrayidx34 = getelementptr inbounds %struct.ReebArc*, %struct.ReebArc** %52, i64 %idxprom33, !dbg !8099
  %54 = load %struct.ReebArc*, %struct.ReebArc** %arrayidx34, align 8, !dbg !8099
  store %struct.ReebArc* %54, %struct.ReebArc** %next_earc, align 8, !dbg !8103
  %55 = load %struct.ReebArc*, %struct.ReebArc** %next_earc, align 8, !dbg !8104
  %flag35 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %55, i32 0, i32 4, !dbg !8106
  %56 = load i32, i32* %flag35, align 8, !dbg !8106
  %cmp36 = icmp eq i32 %56, 0, !dbg !8107
  br i1 %cmp36, label %land.lhs.true37, label %if.end41, !dbg !8108

land.lhs.true37:                                  ; preds = %for.body31
  %57 = load %struct.ReebArc*, %struct.ReebArc** %next_earc, align 8, !dbg !8109
  %symmetry_level38 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %57, i32 0, i32 6, !dbg !8110
  %58 = load i32, i32* %symmetry_level38, align 8, !dbg !8110
  %59 = load i32, i32* %symmetry_level, align 4, !dbg !8111
  %cmp39 = icmp eq i32 %58, %59, !dbg !8112
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !8113

if.then40:                                        ; preds = %land.lhs.true37
  %60 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !8114
  %61 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !8116
  %62 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8117
  %63 = load %struct.ReebArc*, %struct.ReebArc** %next_earc, align 8, !dbg !8118
  call void @matchMultiResolutionArc(%struct.RigGraph* %60, %struct.RigNode* %61, %struct.RigArc* %62, %struct.ReebArc* %63), !dbg !8119
  br label %for.end44, !dbg !8120

if.end41:                                         ; preds = %land.lhs.true37, %for.body31
  br label %for.inc42, !dbg !8121

for.inc42:                                        ; preds = %if.end41
  %64 = load i32, i32* %i, align 4, !dbg !8122
  %inc43 = add nsw i32 %64, 1, !dbg !8122
  store i32 %inc43, i32* %i, align 4, !dbg !8122
  br label %for.cond28, !dbg !8123, !llvm.loop !8124

for.end44:                                        ; preds = %if.then40, %for.cond28
  br label %if.end45, !dbg !8126

if.end45:                                         ; preds = %for.end44, %land.lhs.true23, %if.end21
  ret void, !dbg !8127
}

declare dso_local %struct.ReebGraph* @BIF_graphForMultiNode(%struct.ReebGraph*, %struct.ReebNode*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @matchMultiResolutionArc(%struct.RigGraph* %rigg, %struct.RigNode* %start_node, %struct.RigArc* %next_iarc, %struct.ReebArc* %next_earc) #0 !dbg !8128 {
entry:
  %rigg.addr = alloca %struct.RigGraph*, align 8
  %start_node.addr = alloca %struct.RigNode*, align 8
  %next_iarc.addr = alloca %struct.RigArc*, align 8
  %next_earc.addr = alloca %struct.ReebArc*, align 8
  %enode = alloca %struct.ReebNode*, align 8
  %reebg = alloca %struct.ReebGraph*, align 8
  %ishape = alloca i32, align 4
  %eshape = alloca i32, align 4
  store %struct.RigGraph* %rigg, %struct.RigGraph** %rigg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rigg.addr, metadata !8131, metadata !DIExpression()), !dbg !8132
  store %struct.RigNode* %start_node, %struct.RigNode** %start_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigNode** %start_node.addr, metadata !8133, metadata !DIExpression()), !dbg !8134
  store %struct.RigArc* %next_iarc, %struct.RigArc** %next_iarc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %next_iarc.addr, metadata !8135, metadata !DIExpression()), !dbg !8136
  store %struct.ReebArc* %next_earc, %struct.ReebArc** %next_earc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %next_earc.addr, metadata !8137, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %enode, metadata !8139, metadata !DIExpression()), !dbg !8140
  %0 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8141
  %head = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %0, i32 0, i32 2, !dbg !8142
  %1 = load %struct.ReebNode*, %struct.ReebNode** %head, align 8, !dbg !8142
  store %struct.ReebNode* %1, %struct.ReebNode** %enode, align 8, !dbg !8140
  call void @llvm.dbg.declare(metadata %struct.ReebGraph** %reebg, metadata !8143, metadata !DIExpression()), !dbg !8144
  %2 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !8145
  %link_mesh = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %2, i32 0, i32 11, !dbg !8146
  %3 = load %struct.ReebGraph*, %struct.ReebGraph** %link_mesh, align 8, !dbg !8146
  %4 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8147
  %call = call %struct.ReebGraph* @BIF_graphForMultiNode(%struct.ReebGraph* %3, %struct.ReebNode* %4), !dbg !8148
  store %struct.ReebGraph* %call, %struct.ReebGraph** %reebg, align 8, !dbg !8144
  call void @llvm.dbg.declare(metadata i32* %ishape, metadata !8149, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.declare(metadata i32* %eshape, metadata !8151, metadata !DIExpression()), !dbg !8152
  %5 = load %struct.RigGraph*, %struct.RigGraph** %rigg.addr, align 8, !dbg !8153
  %6 = bitcast %struct.RigGraph* %5 to %struct.BGraph*, !dbg !8154
  %7 = load %struct.RigNode*, %struct.RigNode** %start_node.addr, align 8, !dbg !8155
  %8 = bitcast %struct.RigNode* %7 to %struct.BNode*, !dbg !8156
  %9 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8157
  %10 = bitcast %struct.RigArc* %9 to %struct.BArc*, !dbg !8158
  %call1 = call i32 @BLI_subtreeShape(%struct.BGraph* %6, %struct.BNode* %8, %struct.BArc* %10, i32 1), !dbg !8159
  %rem = srem i32 %call1, 100, !dbg !8160
  store i32 %rem, i32* %ishape, align 4, !dbg !8161
  %11 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg, align 8, !dbg !8162
  %12 = bitcast %struct.ReebGraph* %11 to %struct.BGraph*, !dbg !8163
  %13 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8164
  %14 = bitcast %struct.ReebNode* %13 to %struct.BNode*, !dbg !8165
  %15 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8166
  %16 = bitcast %struct.ReebArc* %15 to %struct.BArc*, !dbg !8167
  %call2 = call i32 @BLI_subtreeShape(%struct.BGraph* %12, %struct.BNode* %14, %struct.BArc* %16, i32 1), !dbg !8168
  %rem3 = srem i32 %call2, 100, !dbg !8169
  store i32 %rem3, i32* %eshape, align 4, !dbg !8170
  br label %while.cond, !dbg !8171

while.cond:                                       ; preds = %while.body, %entry
  %17 = load i32, i32* %ishape, align 4, !dbg !8172
  %18 = load i32, i32* %eshape, align 4, !dbg !8173
  %cmp = icmp ne i32 %17, %18, !dbg !8174
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8175

land.rhs:                                         ; preds = %while.cond
  %19 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8176
  %link_up = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %19, i32 0, i32 14, !dbg !8177
  %20 = load %struct.ReebArc*, %struct.ReebArc** %link_up, align 8, !dbg !8177
  %tobool = icmp ne %struct.ReebArc* %20, null, !dbg !8175
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %21 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !8178
  br i1 %21, label %while.body, label %while.end, !dbg !8171

while.body:                                       ; preds = %land.end
  %22 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8179
  %flag = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %22, i32 0, i32 4, !dbg !8181
  store i32 1, i32* %flag, align 8, !dbg !8182
  %23 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8183
  %link_up4 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %23, i32 0, i32 14, !dbg !8184
  %24 = load %struct.ReebArc*, %struct.ReebArc** %link_up4, align 8, !dbg !8184
  store %struct.ReebArc* %24, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8185
  %25 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg, align 8, !dbg !8186
  %link_up5 = getelementptr inbounds %struct.ReebGraph, %struct.ReebGraph* %25, i32 0, i32 11, !dbg !8187
  %26 = load %struct.ReebGraph*, %struct.ReebGraph** %link_up5, align 8, !dbg !8187
  store %struct.ReebGraph* %26, %struct.ReebGraph** %reebg, align 8, !dbg !8188
  %27 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8189
  %head6 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %27, i32 0, i32 2, !dbg !8190
  %28 = load %struct.ReebNode*, %struct.ReebNode** %head6, align 8, !dbg !8190
  store %struct.ReebNode* %28, %struct.ReebNode** %enode, align 8, !dbg !8191
  %29 = load %struct.ReebGraph*, %struct.ReebGraph** %reebg, align 8, !dbg !8192
  %30 = bitcast %struct.ReebGraph* %29 to %struct.BGraph*, !dbg !8193
  %31 = load %struct.ReebNode*, %struct.ReebNode** %enode, align 8, !dbg !8194
  %32 = bitcast %struct.ReebNode* %31 to %struct.BNode*, !dbg !8195
  %33 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8196
  %34 = bitcast %struct.ReebArc* %33 to %struct.BArc*, !dbg !8197
  %call7 = call i32 @BLI_subtreeShape(%struct.BGraph* %30, %struct.BNode* %32, %struct.BArc* %34, i32 1), !dbg !8198
  %rem8 = srem i32 %call7, 100, !dbg !8199
  store i32 %rem8, i32* %eshape, align 4, !dbg !8200
  br label %while.cond, !dbg !8171, !llvm.loop !8201

while.end:                                        ; preds = %land.end
  %35 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8203
  %flag9 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %35, i32 0, i32 4, !dbg !8204
  store i32 2, i32* %flag9, align 8, !dbg !8205
  %36 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8206
  %37 = load %struct.RigArc*, %struct.RigArc** %next_iarc.addr, align 8, !dbg !8207
  %link_mesh10 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %37, i32 0, i32 11, !dbg !8208
  store %struct.ReebArc* %36, %struct.ReebArc** %link_mesh10, align 8, !dbg !8209
  %38 = load %struct.ReebArc*, %struct.ReebArc** %next_earc.addr, align 8, !dbg !8210
  call void @markMultiResolutionArc(%struct.ReebArc* %38), !dbg !8211
  ret void, !dbg !8212
}

; Function Attrs: noinline nounwind uwtable
define internal void @markMultiResolutionArc(%struct.ReebArc* %start_earc) #0 !dbg !8213 {
entry:
  %start_earc.addr = alloca %struct.ReebArc*, align 8
  %earc = alloca %struct.ReebArc*, align 8
  store %struct.ReebArc* %start_earc, %struct.ReebArc** %start_earc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %start_earc.addr, metadata !8216, metadata !DIExpression()), !dbg !8217
  %0 = load %struct.ReebArc*, %struct.ReebArc** %start_earc.addr, align 8, !dbg !8218
  %link_up = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %0, i32 0, i32 14, !dbg !8220
  %1 = load %struct.ReebArc*, %struct.ReebArc** %link_up, align 8, !dbg !8220
  %tobool = icmp ne %struct.ReebArc* %1, null, !dbg !8218
  br i1 %tobool, label %if.then, label %if.end9, !dbg !8221

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc, metadata !8222, metadata !DIExpression()), !dbg !8224
  %2 = load %struct.ReebArc*, %struct.ReebArc** %start_earc.addr, align 8, !dbg !8225
  %link_up1 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %2, i32 0, i32 14, !dbg !8227
  %3 = load %struct.ReebArc*, %struct.ReebArc** %link_up1, align 8, !dbg !8227
  store %struct.ReebArc* %3, %struct.ReebArc** %earc, align 8, !dbg !8228
  br label %for.cond, !dbg !8229

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8230
  %tobool2 = icmp ne %struct.ReebArc* %4, null, !dbg !8232
  br i1 %tobool2, label %for.body, label %for.end, !dbg !8232

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8233
  %flag = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %5, i32 0, i32 4, !dbg !8235
  store i32 1, i32* %flag, align 8, !dbg !8236
  %6 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8237
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %6, i32 0, i32 3, !dbg !8239
  %7 = load %struct.ReebNode*, %struct.ReebNode** %tail, align 8, !dbg !8239
  %index = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %7, i32 0, i32 11, !dbg !8240
  %8 = load i32, i32* %index, align 4, !dbg !8240
  %9 = load %struct.ReebArc*, %struct.ReebArc** %start_earc.addr, align 8, !dbg !8241
  %tail3 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %9, i32 0, i32 3, !dbg !8242
  %10 = load %struct.ReebNode*, %struct.ReebNode** %tail3, align 8, !dbg !8242
  %index4 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %10, i32 0, i32 11, !dbg !8243
  %11 = load i32, i32* %index4, align 4, !dbg !8243
  %cmp = icmp ne i32 %8, %11, !dbg !8244
  br i1 %cmp, label %if.then5, label %if.end, !dbg !8245

if.then5:                                         ; preds = %for.body
  %12 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8246
  %tail6 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %12, i32 0, i32 3, !dbg !8248
  %13 = load %struct.ReebNode*, %struct.ReebNode** %tail6, align 8, !dbg !8248
  %14 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8249
  %tail7 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %14, i32 0, i32 3, !dbg !8250
  %15 = load %struct.ReebNode*, %struct.ReebNode** %tail7, align 8, !dbg !8250
  call void @markMultiResolutionChildArc(%struct.ReebNode* %13, %struct.ReebNode* %15), !dbg !8251
  br label %if.end, !dbg !8252

if.end:                                           ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !8253

for.inc:                                          ; preds = %if.end
  %16 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8254
  %link_up8 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %16, i32 0, i32 14, !dbg !8255
  %17 = load %struct.ReebArc*, %struct.ReebArc** %link_up8, align 8, !dbg !8255
  store %struct.ReebArc* %17, %struct.ReebArc** %earc, align 8, !dbg !8256
  br label %for.cond, !dbg !8257, !llvm.loop !8258

for.end:                                          ; preds = %for.cond
  br label %if.end9, !dbg !8260

if.end9:                                          ; preds = %for.end, %entry
  ret void, !dbg !8261
}

; Function Attrs: noinline nounwind uwtable
define internal void @markMultiResolutionChildArc(%struct.ReebNode* %end_enode, %struct.ReebNode* %enode) #0 !dbg !8262 {
entry:
  %end_enode.addr = alloca %struct.ReebNode*, align 8
  %enode.addr = alloca %struct.ReebNode*, align 8
  %i = alloca i32, align 4
  %earc = alloca %struct.ReebArc*, align 8
  store %struct.ReebNode* %end_enode, %struct.ReebNode** %end_enode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %end_enode.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  store %struct.ReebNode* %enode, %struct.ReebNode** %enode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReebNode** %enode.addr, metadata !8267, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8269, metadata !DIExpression()), !dbg !8270
  store i32 0, i32* %i, align 4, !dbg !8271
  br label %for.cond, !dbg !8273

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8274
  %1 = load %struct.ReebNode*, %struct.ReebNode** %enode.addr, align 8, !dbg !8276
  %degree = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %1, i32 0, i32 4, !dbg !8277
  %2 = load i32, i32* %degree, align 8, !dbg !8277
  %cmp = icmp slt i32 %0, %2, !dbg !8278
  br i1 %cmp, label %for.body, label %for.end, !dbg !8279

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ReebArc** %earc, metadata !8280, metadata !DIExpression()), !dbg !8282
  %3 = load %struct.ReebNode*, %struct.ReebNode** %enode.addr, align 8, !dbg !8283
  %arcs = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %3, i32 0, i32 5, !dbg !8284
  %4 = load %struct.ReebArc**, %struct.ReebArc*** %arcs, align 8, !dbg !8284
  %5 = load i32, i32* %i, align 4, !dbg !8285
  %idxprom = sext i32 %5 to i64, !dbg !8283
  %arrayidx = getelementptr inbounds %struct.ReebArc*, %struct.ReebArc** %4, i64 %idxprom, !dbg !8283
  %6 = load %struct.ReebArc*, %struct.ReebArc** %arrayidx, align 8, !dbg !8283
  store %struct.ReebArc* %6, %struct.ReebArc** %earc, align 8, !dbg !8282
  %7 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8286
  %flag = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %7, i32 0, i32 4, !dbg !8288
  %8 = load i32, i32* %flag, align 8, !dbg !8288
  %cmp1 = icmp eq i32 %8, 0, !dbg !8289
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !8290

if.then:                                          ; preds = %for.body
  %9 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8291
  %flag2 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %9, i32 0, i32 4, !dbg !8293
  store i32 1, i32* %flag2, align 8, !dbg !8294
  %10 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8295
  %tail = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %10, i32 0, i32 3, !dbg !8297
  %11 = load %struct.ReebNode*, %struct.ReebNode** %tail, align 8, !dbg !8297
  %degree3 = getelementptr inbounds %struct.ReebNode, %struct.ReebNode* %11, i32 0, i32 4, !dbg !8298
  %12 = load i32, i32* %degree3, align 8, !dbg !8298
  %cmp4 = icmp sgt i32 %12, 1, !dbg !8299
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !8300

land.lhs.true:                                    ; preds = %if.then
  %13 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8301
  %tail5 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %13, i32 0, i32 3, !dbg !8302
  %14 = load %struct.ReebNode*, %struct.ReebNode** %tail5, align 8, !dbg !8302
  %15 = load %struct.ReebNode*, %struct.ReebNode** %end_enode.addr, align 8, !dbg !8303
  %cmp6 = icmp ne %struct.ReebNode* %14, %15, !dbg !8304
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !8305

if.then7:                                         ; preds = %land.lhs.true
  %16 = load %struct.ReebNode*, %struct.ReebNode** %end_enode.addr, align 8, !dbg !8306
  %17 = load %struct.ReebArc*, %struct.ReebArc** %earc, align 8, !dbg !8308
  %tail8 = getelementptr inbounds %struct.ReebArc, %struct.ReebArc* %17, i32 0, i32 3, !dbg !8309
  %18 = load %struct.ReebNode*, %struct.ReebNode** %tail8, align 8, !dbg !8309
  call void @markMultiResolutionChildArc(%struct.ReebNode* %16, %struct.ReebNode* %18), !dbg !8310
  br label %if.end, !dbg !8311

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %for.end, !dbg !8312

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !8313

for.inc:                                          ; preds = %if.end9
  %19 = load i32, i32* %i, align 4, !dbg !8314
  %inc = add nsw i32 %19, 1, !dbg !8314
  store i32 %inc, i32* %i, align 4, !dbg !8314
  br label %for.cond, !dbg !8315, !llvm.loop !8316

for.end:                                          ; preds = %if.end, %for.cond
  ret void, !dbg !8318
}

declare dso_local %struct.GHash* @BLI_ghash_ptr_new(i8*) #2

declare dso_local void @preEditBoneDuplicate(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigArc* @cloneArc(%struct.RigGraph* %rg, %struct.RigGraph* %src_rg, %struct.RigArc* %src_arc, %struct.GHash* %ptr_hash, i8* %side_string, i8* %num_string) #0 !dbg !8319 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %src_rg.addr = alloca %struct.RigGraph*, align 8
  %src_arc.addr = alloca %struct.RigArc*, align 8
  %ptr_hash.addr = alloca %struct.GHash*, align 8
  %side_string.addr = alloca i8*, align 8
  %num_string.addr = alloca i8*, align 8
  %src_edge = alloca %struct.RigEdge*, align 8
  %arc = alloca %struct.RigArc*, align 8
  %edge = alloca %struct.RigEdge*, align 8
  %name = alloca [64 x i8], align 16
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !8322, metadata !DIExpression()), !dbg !8323
  store %struct.RigGraph* %src_rg, %struct.RigGraph** %src_rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %src_rg.addr, metadata !8324, metadata !DIExpression()), !dbg !8325
  store %struct.RigArc* %src_arc, %struct.RigArc** %src_arc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigArc** %src_arc.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  store %struct.GHash* %ptr_hash, %struct.GHash** %ptr_hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHash** %ptr_hash.addr, metadata !8328, metadata !DIExpression()), !dbg !8329
  store i8* %side_string, i8** %side_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %side_string.addr, metadata !8330, metadata !DIExpression()), !dbg !8331
  store i8* %num_string, i8** %num_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %num_string.addr, metadata !8332, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %src_edge, metadata !8334, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.declare(metadata %struct.RigArc** %arc, metadata !8336, metadata !DIExpression()), !dbg !8337
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !8338
  %call = call %struct.RigArc* @newRigArc(%struct.RigGraph* %0), !dbg !8339
  store %struct.RigArc* %call, %struct.RigArc** %arc, align 8, !dbg !8340
  %1 = load %struct.GHash*, %struct.GHash** %ptr_hash.addr, align 8, !dbg !8341
  %2 = load %struct.RigArc*, %struct.RigArc** %src_arc.addr, align 8, !dbg !8342
  %head = getelementptr inbounds %struct.RigArc, %struct.RigArc* %2, i32 0, i32 2, !dbg !8343
  %3 = load %struct.RigNode*, %struct.RigNode** %head, align 8, !dbg !8343
  %4 = bitcast %struct.RigNode* %3 to i8*, !dbg !8342
  %call1 = call i8* @BLI_ghash_lookup(%struct.GHash* %1, i8* %4), !dbg !8344
  %5 = bitcast i8* %call1 to %struct.RigNode*, !dbg !8344
  %6 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !8345
  %head2 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %6, i32 0, i32 2, !dbg !8346
  store %struct.RigNode* %5, %struct.RigNode** %head2, align 8, !dbg !8347
  %7 = load %struct.GHash*, %struct.GHash** %ptr_hash.addr, align 8, !dbg !8348
  %8 = load %struct.RigArc*, %struct.RigArc** %src_arc.addr, align 8, !dbg !8349
  %tail = getelementptr inbounds %struct.RigArc, %struct.RigArc* %8, i32 0, i32 3, !dbg !8350
  %9 = load %struct.RigNode*, %struct.RigNode** %tail, align 8, !dbg !8350
  %10 = bitcast %struct.RigNode* %9 to i8*, !dbg !8349
  %call3 = call i8* @BLI_ghash_lookup(%struct.GHash* %7, i8* %10), !dbg !8351
  %11 = bitcast i8* %call3 to %struct.RigNode*, !dbg !8351
  %12 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !8352
  %tail4 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %12, i32 0, i32 3, !dbg !8353
  store %struct.RigNode* %11, %struct.RigNode** %tail4, align 8, !dbg !8354
  %13 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !8355
  %head5 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %13, i32 0, i32 2, !dbg !8356
  %14 = load %struct.RigNode*, %struct.RigNode** %head5, align 8, !dbg !8356
  %degree = getelementptr inbounds %struct.RigNode, %struct.RigNode* %14, i32 0, i32 4, !dbg !8357
  %15 = load i32, i32* %degree, align 8, !dbg !8358
  %inc = add nsw i32 %15, 1, !dbg !8358
  store i32 %inc, i32* %degree, align 8, !dbg !8358
  %16 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !8359
  %tail6 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %16, i32 0, i32 3, !dbg !8360
  %17 = load %struct.RigNode*, %struct.RigNode** %tail6, align 8, !dbg !8360
  %degree7 = getelementptr inbounds %struct.RigNode, %struct.RigNode* %17, i32 0, i32 4, !dbg !8361
  %18 = load i32, i32* %degree7, align 8, !dbg !8362
  %inc8 = add nsw i32 %18, 1, !dbg !8362
  store i32 %inc8, i32* %degree7, align 8, !dbg !8362
  %19 = load %struct.RigArc*, %struct.RigArc** %src_arc.addr, align 8, !dbg !8363
  %length = getelementptr inbounds %struct.RigArc, %struct.RigArc* %19, i32 0, i32 5, !dbg !8364
  %20 = load float, float* %length, align 4, !dbg !8364
  %21 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !8365
  %length9 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %21, i32 0, i32 5, !dbg !8366
  store float %20, float* %length9, align 4, !dbg !8367
  %22 = load %struct.RigArc*, %struct.RigArc** %src_arc.addr, align 8, !dbg !8368
  %count = getelementptr inbounds %struct.RigArc, %struct.RigArc* %22, i32 0, i32 10, !dbg !8369
  %23 = load i32, i32* %count, align 8, !dbg !8369
  %24 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !8370
  %count10 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %24, i32 0, i32 10, !dbg !8371
  store i32 %23, i32* %count10, align 8, !dbg !8372
  %25 = load %struct.RigArc*, %struct.RigArc** %src_arc.addr, align 8, !dbg !8373
  %edges = getelementptr inbounds %struct.RigArc, %struct.RigArc* %25, i32 0, i32 9, !dbg !8375
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !8376
  %26 = load i8*, i8** %first, align 8, !dbg !8376
  %27 = bitcast i8* %26 to %struct.RigEdge*, !dbg !8373
  store %struct.RigEdge* %27, %struct.RigEdge** %src_edge, align 8, !dbg !8377
  br label %for.cond, !dbg !8378

for.cond:                                         ; preds = %for.inc, %entry
  %28 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8379
  %tobool = icmp ne %struct.RigEdge* %28, null, !dbg !8381
  br i1 %tobool, label %for.body, label %for.end, !dbg !8381

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.RigEdge** %edge, metadata !8382, metadata !DIExpression()), !dbg !8384
  %29 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8385
  %call11 = call i8* %29(i64 80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)), !dbg !8385
  %30 = bitcast i8* %call11 to %struct.RigEdge*, !dbg !8385
  store %struct.RigEdge* %30, %struct.RigEdge** %edge, align 8, !dbg !8386
  %31 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8387
  %head12 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %31, i32 0, i32 2, !dbg !8388
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %head12, i64 0, i64 0, !dbg !8387
  %32 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8389
  %head13 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %32, i32 0, i32 2, !dbg !8390
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %head13, i64 0, i64 0, !dbg !8389
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay14), !dbg !8391
  %33 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8392
  %tail15 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %33, i32 0, i32 3, !dbg !8393
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %tail15, i64 0, i64 0, !dbg !8392
  %34 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8394
  %tail17 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %34, i32 0, i32 3, !dbg !8395
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %tail17, i64 0, i64 0, !dbg !8394
  call void @copy_v3_v3(float* %arraydecay16, float* %arraydecay18), !dbg !8396
  %35 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8397
  %up_axis = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %35, i32 0, i32 8, !dbg !8398
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %up_axis, i64 0, i64 0, !dbg !8397
  %36 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8399
  %up_axis20 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %36, i32 0, i32 8, !dbg !8400
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %up_axis20, i64 0, i64 0, !dbg !8399
  call void @copy_v3_v3(float* %arraydecay19, float* %arraydecay21), !dbg !8401
  %37 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8402
  %length22 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %37, i32 0, i32 4, !dbg !8403
  %38 = load float, float* %length22, align 8, !dbg !8403
  %39 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8404
  %length23 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %39, i32 0, i32 4, !dbg !8405
  store float %38, float* %length23, align 8, !dbg !8406
  %40 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8407
  %angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %40, i32 0, i32 5, !dbg !8408
  %41 = load float, float* %angle, align 4, !dbg !8408
  %42 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8409
  %angle24 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %42, i32 0, i32 5, !dbg !8410
  store float %41, float* %angle24, align 4, !dbg !8411
  %43 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8412
  %up_angle = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %43, i32 0, i32 6, !dbg !8413
  %44 = load float, float* %up_angle, align 8, !dbg !8413
  %45 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8414
  %up_angle25 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %45, i32 0, i32 6, !dbg !8415
  store float %44, float* %up_angle25, align 8, !dbg !8416
  %46 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8417
  %bone = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %46, i32 0, i32 7, !dbg !8419
  %47 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !8419
  %cmp = icmp ne %struct.EditBone* %47, null, !dbg !8420
  br i1 %cmp, label %if.then, label %if.end, !dbg !8421

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [64 x i8]* %name, metadata !8422, metadata !DIExpression()), !dbg !8424
  %arraydecay26 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !8425
  %48 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8426
  %bone27 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %48, i32 0, i32 7, !dbg !8427
  %49 = load %struct.EditBone*, %struct.EditBone** %bone27, align 8, !dbg !8427
  %name28 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %49, i32 0, i32 5, !dbg !8428
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %name28, i64 0, i64 0, !dbg !8426
  %50 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !8429
  %editbones = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %50, i32 0, i32 9, !dbg !8430
  %51 = load %struct.ListBase*, %struct.ListBase** %editbones, align 8, !dbg !8430
  %52 = load i8*, i8** %side_string.addr, align 8, !dbg !8431
  %53 = load i8*, i8** %num_string.addr, align 8, !dbg !8432
  call void @renameTemplateBone(i8* %arraydecay26, i8* %arraydecay29, %struct.ListBase* %51, i8* %52, i8* %53), !dbg !8433
  %54 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8434
  %bone30 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %54, i32 0, i32 7, !dbg !8435
  %55 = load %struct.EditBone*, %struct.EditBone** %bone30, align 8, !dbg !8435
  %arraydecay31 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !8436
  %56 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !8437
  %editbones32 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %56, i32 0, i32 9, !dbg !8438
  %57 = load %struct.ListBase*, %struct.ListBase** %editbones32, align 8, !dbg !8438
  %58 = load %struct.RigGraph*, %struct.RigGraph** %src_rg.addr, align 8, !dbg !8439
  %ob = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %58, i32 0, i32 16, !dbg !8440
  %59 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8440
  %60 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !8441
  %ob33 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %60, i32 0, i32 16, !dbg !8442
  %61 = load %struct.Object*, %struct.Object** %ob33, align 8, !dbg !8442
  %call34 = call %struct.EditBone* @duplicateEditBoneObjects(%struct.EditBone* %55, i8* %arraydecay31, %struct.ListBase* %57, %struct.Object* %59, %struct.Object* %61), !dbg !8443
  %62 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8444
  %bone35 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %62, i32 0, i32 7, !dbg !8445
  store %struct.EditBone* %call34, %struct.EditBone** %bone35, align 8, !dbg !8446
  %63 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8447
  %bone36 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %63, i32 0, i32 7, !dbg !8448
  %64 = load %struct.EditBone*, %struct.EditBone** %bone36, align 8, !dbg !8448
  %flag = getelementptr inbounds %struct.EditBone, %struct.EditBone* %64, i32 0, i32 9, !dbg !8449
  %65 = load i32, i32* %flag, align 4, !dbg !8450
  %and = and i32 %65, -8, !dbg !8450
  store i32 %and, i32* %flag, align 4, !dbg !8450
  %66 = load %struct.GHash*, %struct.GHash** %ptr_hash.addr, align 8, !dbg !8451
  %67 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8452
  %bone37 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %67, i32 0, i32 7, !dbg !8453
  %68 = load %struct.EditBone*, %struct.EditBone** %bone37, align 8, !dbg !8453
  %69 = bitcast %struct.EditBone* %68 to i8*, !dbg !8452
  %70 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8454
  %bone38 = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %70, i32 0, i32 7, !dbg !8455
  %71 = load %struct.EditBone*, %struct.EditBone** %bone38, align 8, !dbg !8455
  %72 = bitcast %struct.EditBone* %71 to i8*, !dbg !8454
  call void @BLI_ghash_insert(%struct.GHash* %66, i8* %69, i8* %72), !dbg !8456
  br label %if.end, !dbg !8457

if.end:                                           ; preds = %if.then, %for.body
  %73 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !8458
  %edges39 = getelementptr inbounds %struct.RigArc, %struct.RigArc* %73, i32 0, i32 9, !dbg !8459
  %74 = load %struct.RigEdge*, %struct.RigEdge** %edge, align 8, !dbg !8460
  %75 = bitcast %struct.RigEdge* %74 to i8*, !dbg !8460
  call void @BLI_addtail(%struct.ListBase* %edges39, i8* %75), !dbg !8461
  br label %for.inc, !dbg !8462

for.inc:                                          ; preds = %if.end
  %76 = load %struct.RigEdge*, %struct.RigEdge** %src_edge, align 8, !dbg !8463
  %next = getelementptr inbounds %struct.RigEdge, %struct.RigEdge* %76, i32 0, i32 0, !dbg !8464
  %77 = load %struct.RigEdge*, %struct.RigEdge** %next, align 8, !dbg !8464
  store %struct.RigEdge* %77, %struct.RigEdge** %src_edge, align 8, !dbg !8465
  br label %for.cond, !dbg !8466, !llvm.loop !8467

for.end:                                          ; preds = %for.cond
  %78 = load %struct.RigArc*, %struct.RigArc** %arc, align 8, !dbg !8469
  ret %struct.RigArc* %78, !dbg !8470
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RigControl* @cloneControl(%struct.RigGraph* %rg, %struct.RigGraph* %src_rg, %struct.RigControl* %src_ctrl, %struct.GHash* %ptr_hash, i8* %side_string, i8* %num_string) #0 !dbg !8471 {
entry:
  %rg.addr = alloca %struct.RigGraph*, align 8
  %src_rg.addr = alloca %struct.RigGraph*, align 8
  %src_ctrl.addr = alloca %struct.RigControl*, align 8
  %ptr_hash.addr = alloca %struct.GHash*, align 8
  %side_string.addr = alloca i8*, align 8
  %num_string.addr = alloca i8*, align 8
  %ctrl = alloca %struct.RigControl*, align 8
  %name = alloca [64 x i8], align 16
  store %struct.RigGraph* %rg, %struct.RigGraph** %rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %rg.addr, metadata !8474, metadata !DIExpression()), !dbg !8475
  store %struct.RigGraph* %src_rg, %struct.RigGraph** %src_rg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigGraph** %src_rg.addr, metadata !8476, metadata !DIExpression()), !dbg !8477
  store %struct.RigControl* %src_ctrl, %struct.RigControl** %src_ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigControl** %src_ctrl.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  store %struct.GHash* %ptr_hash, %struct.GHash** %ptr_hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHash** %ptr_hash.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  store i8* %side_string, i8** %side_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %side_string.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  store i8* %num_string, i8** %num_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %num_string.addr, metadata !8484, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.declare(metadata %struct.RigControl** %ctrl, metadata !8486, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.declare(metadata [64 x i8]* %name, metadata !8488, metadata !DIExpression()), !dbg !8489
  %0 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !8490
  %call = call %struct.RigControl* @newRigControl(%struct.RigGraph* %0), !dbg !8491
  store %struct.RigControl* %call, %struct.RigControl** %ctrl, align 8, !dbg !8492
  %1 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8493
  %head = getelementptr inbounds %struct.RigControl, %struct.RigControl* %1, i32 0, i32 2, !dbg !8494
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !8493
  %2 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8495
  %head1 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %2, i32 0, i32 2, !dbg !8496
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %head1, i64 0, i64 0, !dbg !8495
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !8497
  %3 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8498
  %tail = getelementptr inbounds %struct.RigControl, %struct.RigControl* %3, i32 0, i32 3, !dbg !8499
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !8498
  %4 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8500
  %tail4 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %4, i32 0, i32 3, !dbg !8501
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %tail4, i64 0, i64 0, !dbg !8500
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay5), !dbg !8502
  %5 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8503
  %up_axis = getelementptr inbounds %struct.RigControl, %struct.RigControl* %5, i32 0, i32 7, !dbg !8504
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %up_axis, i64 0, i64 0, !dbg !8503
  %6 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8505
  %up_axis7 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %6, i32 0, i32 7, !dbg !8506
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %up_axis7, i64 0, i64 0, !dbg !8505
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay8), !dbg !8507
  %7 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8508
  %offset = getelementptr inbounds %struct.RigControl, %struct.RigControl* %7, i32 0, i32 8, !dbg !8509
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !8508
  %8 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8510
  %offset10 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %8, i32 0, i32 8, !dbg !8511
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %offset10, i64 0, i64 0, !dbg !8510
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay11), !dbg !8512
  %9 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8513
  %tail_mode = getelementptr inbounds %struct.RigControl, %struct.RigControl* %9, i32 0, i32 11, !dbg !8514
  %10 = load i32, i32* %tail_mode, align 4, !dbg !8514
  %11 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8515
  %tail_mode12 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %11, i32 0, i32 11, !dbg !8516
  store i32 %10, i32* %tail_mode12, align 4, !dbg !8517
  %12 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8518
  %flag = getelementptr inbounds %struct.RigControl, %struct.RigControl* %12, i32 0, i32 10, !dbg !8519
  %13 = load i32, i32* %flag, align 8, !dbg !8519
  %14 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8520
  %flag13 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %14, i32 0, i32 10, !dbg !8521
  store i32 %13, i32* %flag13, align 8, !dbg !8522
  %arraydecay14 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !8523
  %15 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8524
  %bone = getelementptr inbounds %struct.RigControl, %struct.RigControl* %15, i32 0, i32 4, !dbg !8525
  %16 = load %struct.EditBone*, %struct.EditBone** %bone, align 8, !dbg !8525
  %name15 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %16, i32 0, i32 5, !dbg !8526
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %name15, i64 0, i64 0, !dbg !8524
  %17 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !8527
  %editbones = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %17, i32 0, i32 9, !dbg !8528
  %18 = load %struct.ListBase*, %struct.ListBase** %editbones, align 8, !dbg !8528
  %19 = load i8*, i8** %side_string.addr, align 8, !dbg !8529
  %20 = load i8*, i8** %num_string.addr, align 8, !dbg !8530
  call void @renameTemplateBone(i8* %arraydecay14, i8* %arraydecay16, %struct.ListBase* %18, i8* %19, i8* %20), !dbg !8531
  %21 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8532
  %bone17 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %21, i32 0, i32 4, !dbg !8533
  %22 = load %struct.EditBone*, %struct.EditBone** %bone17, align 8, !dbg !8533
  %arraydecay18 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !8534
  %23 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !8535
  %editbones19 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %23, i32 0, i32 9, !dbg !8536
  %24 = load %struct.ListBase*, %struct.ListBase** %editbones19, align 8, !dbg !8536
  %25 = load %struct.RigGraph*, %struct.RigGraph** %src_rg.addr, align 8, !dbg !8537
  %ob = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %25, i32 0, i32 16, !dbg !8538
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8538
  %27 = load %struct.RigGraph*, %struct.RigGraph** %rg.addr, align 8, !dbg !8539
  %ob20 = getelementptr inbounds %struct.RigGraph, %struct.RigGraph* %27, i32 0, i32 16, !dbg !8540
  %28 = load %struct.Object*, %struct.Object** %ob20, align 8, !dbg !8540
  %call21 = call %struct.EditBone* @duplicateEditBoneObjects(%struct.EditBone* %22, i8* %arraydecay18, %struct.ListBase* %24, %struct.Object* %26, %struct.Object* %28), !dbg !8541
  %29 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8542
  %bone22 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %29, i32 0, i32 4, !dbg !8543
  store %struct.EditBone* %call21, %struct.EditBone** %bone22, align 8, !dbg !8544
  %30 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8545
  %bone23 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %30, i32 0, i32 4, !dbg !8546
  %31 = load %struct.EditBone*, %struct.EditBone** %bone23, align 8, !dbg !8546
  %flag24 = getelementptr inbounds %struct.EditBone, %struct.EditBone* %31, i32 0, i32 9, !dbg !8547
  %32 = load i32, i32* %flag24, align 4, !dbg !8548
  %and = and i32 %32, -8, !dbg !8548
  store i32 %and, i32* %flag24, align 4, !dbg !8548
  %33 = load %struct.GHash*, %struct.GHash** %ptr_hash.addr, align 8, !dbg !8549
  %34 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8550
  %bone25 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %34, i32 0, i32 4, !dbg !8551
  %35 = load %struct.EditBone*, %struct.EditBone** %bone25, align 8, !dbg !8551
  %36 = bitcast %struct.EditBone* %35 to i8*, !dbg !8550
  %37 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8552
  %bone26 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %37, i32 0, i32 4, !dbg !8553
  %38 = load %struct.EditBone*, %struct.EditBone** %bone26, align 8, !dbg !8553
  %39 = bitcast %struct.EditBone* %38 to i8*, !dbg !8552
  call void @BLI_ghash_insert(%struct.GHash* %33, i8* %36, i8* %39), !dbg !8554
  %40 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8555
  %link = getelementptr inbounds %struct.RigControl, %struct.RigControl* %40, i32 0, i32 5, !dbg !8556
  %41 = load %struct.EditBone*, %struct.EditBone** %link, align 8, !dbg !8556
  %42 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8557
  %link27 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %42, i32 0, i32 5, !dbg !8558
  store %struct.EditBone* %41, %struct.EditBone** %link27, align 8, !dbg !8559
  %43 = load %struct.RigControl*, %struct.RigControl** %src_ctrl.addr, align 8, !dbg !8560
  %link_tail = getelementptr inbounds %struct.RigControl, %struct.RigControl* %43, i32 0, i32 6, !dbg !8561
  %44 = load %struct.EditBone*, %struct.EditBone** %link_tail, align 8, !dbg !8561
  %45 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8562
  %link_tail28 = getelementptr inbounds %struct.RigControl, %struct.RigControl* %45, i32 0, i32 6, !dbg !8563
  store %struct.EditBone* %44, %struct.EditBone** %link_tail28, align 8, !dbg !8564
  %46 = load %struct.RigControl*, %struct.RigControl** %ctrl, align 8, !dbg !8565
  ret %struct.RigControl* %46, !dbg !8566
}

declare dso_local void @updateDuplicateSubtargetObjects(%struct.EditBone*, %struct.ListBase*, %struct.Object*, %struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @renameTemplateBone(i8* %name, i8* %template_name, %struct.ListBase* %editbones, i8* %side_string, i8* %num_string) #0 !dbg !8567 {
entry:
  %name.addr = alloca i8*, align 8
  %template_name.addr = alloca i8*, align 8
  %editbones.addr = alloca %struct.ListBase*, align 8
  %side_string.addr = alloca i8*, align 8
  %num_string.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  store i8* %template_name, i8** %template_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %template_name.addr, metadata !8572, metadata !DIExpression()), !dbg !8573
  store %struct.ListBase* %editbones, %struct.ListBase** %editbones.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editbones.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  store i8* %side_string, i8** %side_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %side_string.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  store i8* %num_string, i8** %num_string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %num_string.addr, metadata !8578, metadata !DIExpression()), !dbg !8579
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8580, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8582, metadata !DIExpression()), !dbg !8583
  store i32 0, i32* %i, align 4, !dbg !8584
  store i32 0, i32* %j, align 4, !dbg !8586
  br label %for.cond, !dbg !8587

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8588
  %cmp = icmp slt i32 %0, 63, !dbg !8590
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8591

land.lhs.true:                                    ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !8592
  %cmp1 = icmp slt i32 %1, 63, !dbg !8593
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !8594

land.rhs:                                         ; preds = %land.lhs.true
  %2 = load i8*, i8** %template_name.addr, align 8, !dbg !8595
  %3 = load i32, i32* %i, align 4, !dbg !8596
  %idxprom = sext i32 %3 to i64, !dbg !8595
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !8595
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8595
  %conv = zext i8 %4 to i32, !dbg !8595
  %cmp2 = icmp ne i32 %conv, 0, !dbg !8597
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %cmp2, %land.rhs ], !dbg !8598
  br i1 %5, label %for.body, label %for.end, !dbg !8599

for.body:                                         ; preds = %land.end
  %6 = load i8*, i8** %template_name.addr, align 8, !dbg !8600
  %7 = load i32, i32* %i, align 4, !dbg !8603
  %idxprom4 = sext i32 %7 to i64, !dbg !8600
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i64 %idxprom4, !dbg !8600
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !8600
  %conv6 = zext i8 %8 to i32, !dbg !8600
  %cmp7 = icmp eq i32 %conv6, 38, !dbg !8604
  br i1 %cmp7, label %if.then, label %if.else52, !dbg !8605

if.then:                                          ; preds = %for.body
  %9 = load i8*, i8** %template_name.addr, align 8, !dbg !8606
  %10 = load i32, i32* %i, align 4, !dbg !8609
  %add = add nsw i32 %10, 1, !dbg !8610
  %idxprom9 = sext i32 %add to i64, !dbg !8606
  %arrayidx10 = getelementptr inbounds i8, i8* %9, i64 %idxprom9, !dbg !8606
  %11 = load i8, i8* %arrayidx10, align 1, !dbg !8606
  %conv11 = zext i8 %11 to i32, !dbg !8606
  %cmp12 = icmp eq i32 %conv11, 83, !dbg !8611
  br i1 %cmp12, label %if.then20, label %lor.lhs.false, !dbg !8612

lor.lhs.false:                                    ; preds = %if.then
  %12 = load i8*, i8** %template_name.addr, align 8, !dbg !8613
  %13 = load i32, i32* %i, align 4, !dbg !8614
  %add14 = add nsw i32 %13, 1, !dbg !8615
  %idxprom15 = sext i32 %add14 to i64, !dbg !8613
  %arrayidx16 = getelementptr inbounds i8, i8* %12, i64 %idxprom15, !dbg !8613
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !8613
  %conv17 = zext i8 %14 to i32, !dbg !8613
  %cmp18 = icmp eq i32 %conv17, 115, !dbg !8616
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !8617

if.then20:                                        ; preds = %lor.lhs.false, %if.then
  %15 = load i8*, i8** %name.addr, align 8, !dbg !8618
  %16 = load i32, i32* %j, align 4, !dbg !8620
  %idx.ext = sext i32 %16 to i64, !dbg !8621
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !8621
  %17 = load i8*, i8** %side_string.addr, align 8, !dbg !8622
  %call = call i64 @BLI_strncpy_rlen(i8* %add.ptr, i8* %17, i64 64), !dbg !8623
  %18 = load i32, i32* %j, align 4, !dbg !8624
  %conv21 = sext i32 %18 to i64, !dbg !8624
  %add22 = add i64 %conv21, %call, !dbg !8624
  %conv23 = trunc i64 %add22 to i32, !dbg !8624
  store i32 %conv23, i32* %j, align 4, !dbg !8624
  %19 = load i32, i32* %i, align 4, !dbg !8625
  %inc = add nsw i32 %19, 1, !dbg !8625
  store i32 %inc, i32* %i, align 4, !dbg !8625
  br label %if.end51, !dbg !8626

if.else:                                          ; preds = %lor.lhs.false
  %20 = load i8*, i8** %template_name.addr, align 8, !dbg !8627
  %21 = load i32, i32* %i, align 4, !dbg !8629
  %add24 = add nsw i32 %21, 1, !dbg !8630
  %idxprom25 = sext i32 %add24 to i64, !dbg !8627
  %arrayidx26 = getelementptr inbounds i8, i8* %20, i64 %idxprom25, !dbg !8627
  %22 = load i8, i8* %arrayidx26, align 1, !dbg !8627
  %conv27 = zext i8 %22 to i32, !dbg !8627
  %cmp28 = icmp eq i32 %conv27, 78, !dbg !8631
  br i1 %cmp28, label %if.then37, label %lor.lhs.false30, !dbg !8632

lor.lhs.false30:                                  ; preds = %if.else
  %23 = load i8*, i8** %template_name.addr, align 8, !dbg !8633
  %24 = load i32, i32* %i, align 4, !dbg !8634
  %add31 = add nsw i32 %24, 1, !dbg !8635
  %idxprom32 = sext i32 %add31 to i64, !dbg !8633
  %arrayidx33 = getelementptr inbounds i8, i8* %23, i64 %idxprom32, !dbg !8633
  %25 = load i8, i8* %arrayidx33, align 1, !dbg !8633
  %conv34 = zext i8 %25 to i32, !dbg !8633
  %cmp35 = icmp eq i32 %conv34, 110, !dbg !8636
  br i1 %cmp35, label %if.then37, label %if.else45, !dbg !8637

if.then37:                                        ; preds = %lor.lhs.false30, %if.else
  %26 = load i8*, i8** %name.addr, align 8, !dbg !8638
  %27 = load i32, i32* %j, align 4, !dbg !8640
  %idx.ext38 = sext i32 %27 to i64, !dbg !8641
  %add.ptr39 = getelementptr inbounds i8, i8* %26, i64 %idx.ext38, !dbg !8641
  %28 = load i8*, i8** %num_string.addr, align 8, !dbg !8642
  %call40 = call i64 @BLI_strncpy_rlen(i8* %add.ptr39, i8* %28, i64 64), !dbg !8643
  %29 = load i32, i32* %j, align 4, !dbg !8644
  %conv41 = sext i32 %29 to i64, !dbg !8644
  %add42 = add i64 %conv41, %call40, !dbg !8644
  %conv43 = trunc i64 %add42 to i32, !dbg !8644
  store i32 %conv43, i32* %j, align 4, !dbg !8644
  %30 = load i32, i32* %i, align 4, !dbg !8645
  %inc44 = add nsw i32 %30, 1, !dbg !8645
  store i32 %inc44, i32* %i, align 4, !dbg !8645
  br label %if.end, !dbg !8646

if.else45:                                        ; preds = %lor.lhs.false30
  %31 = load i8*, i8** %template_name.addr, align 8, !dbg !8647
  %32 = load i32, i32* %i, align 4, !dbg !8649
  %idxprom46 = sext i32 %32 to i64, !dbg !8647
  %arrayidx47 = getelementptr inbounds i8, i8* %31, i64 %idxprom46, !dbg !8647
  %33 = load i8, i8* %arrayidx47, align 1, !dbg !8647
  %34 = load i8*, i8** %name.addr, align 8, !dbg !8650
  %35 = load i32, i32* %j, align 4, !dbg !8651
  %idxprom48 = sext i32 %35 to i64, !dbg !8650
  %arrayidx49 = getelementptr inbounds i8, i8* %34, i64 %idxprom48, !dbg !8650
  store i8 %33, i8* %arrayidx49, align 1, !dbg !8652
  %36 = load i32, i32* %j, align 4, !dbg !8653
  %inc50 = add nsw i32 %36, 1, !dbg !8653
  store i32 %inc50, i32* %j, align 4, !dbg !8653
  br label %if.end

if.end:                                           ; preds = %if.else45, %if.then37
  br label %if.end51

if.end51:                                         ; preds = %if.end, %if.then20
  br label %if.end58, !dbg !8654

if.else52:                                        ; preds = %for.body
  %37 = load i8*, i8** %template_name.addr, align 8, !dbg !8655
  %38 = load i32, i32* %i, align 4, !dbg !8657
  %idxprom53 = sext i32 %38 to i64, !dbg !8655
  %arrayidx54 = getelementptr inbounds i8, i8* %37, i64 %idxprom53, !dbg !8655
  %39 = load i8, i8* %arrayidx54, align 1, !dbg !8655
  %40 = load i8*, i8** %name.addr, align 8, !dbg !8658
  %41 = load i32, i32* %j, align 4, !dbg !8659
  %idxprom55 = sext i32 %41 to i64, !dbg !8658
  %arrayidx56 = getelementptr inbounds i8, i8* %40, i64 %idxprom55, !dbg !8658
  store i8 %39, i8* %arrayidx56, align 1, !dbg !8660
  %42 = load i32, i32* %j, align 4, !dbg !8661
  %inc57 = add nsw i32 %42, 1, !dbg !8661
  store i32 %inc57, i32* %j, align 4, !dbg !8661
  br label %if.end58

if.end58:                                         ; preds = %if.else52, %if.end51
  br label %for.inc, !dbg !8662

for.inc:                                          ; preds = %if.end58
  %43 = load i32, i32* %i, align 4, !dbg !8663
  %inc59 = add nsw i32 %43, 1, !dbg !8663
  store i32 %inc59, i32* %i, align 4, !dbg !8663
  br label %for.cond, !dbg !8664, !llvm.loop !8665

for.end:                                          ; preds = %land.end
  %44 = load i8*, i8** %name.addr, align 8, !dbg !8667
  %45 = load i32, i32* %j, align 4, !dbg !8668
  %idxprom60 = sext i32 %45 to i64, !dbg !8667
  %arrayidx61 = getelementptr inbounds i8, i8* %44, i64 %idxprom60, !dbg !8667
  store i8 0, i8* %arrayidx61, align 1, !dbg !8669
  %46 = load %struct.ListBase*, %struct.ListBase** %editbones.addr, align 8, !dbg !8670
  %47 = load i8*, i8** %name.addr, align 8, !dbg !8671
  call void @unique_editbone_name(%struct.ListBase* %46, i8* %47, %struct.EditBone* null), !dbg !8672
  ret void, !dbg !8673
}

declare dso_local %struct.EditBone* @duplicateEditBoneObjects(%struct.EditBone*, i8*, %struct.ListBase*, %struct.Object*, %struct.Object*) #2

declare dso_local i64 @BLI_strncpy_rlen(i8*, i8*, i64) #2

declare dso_local void @unique_editbone_name(%struct.ListBase*, i8*, %struct.EditBone*) #2

declare dso_local void @BLI_task_pool_push(%struct.TaskPool*, void (%struct.TaskPool*, i8*, i32)*, i8*, i8 zeroext, i32) #2

declare dso_local void @BLI_task_pool_work_and_wait(%struct.TaskPool*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1584, !1585, !1586}
!llvm.ident = !{!1587}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "GLOBAL_RIGG", scope: !2, file: !3, line: 81, type: !108, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !107, globals: !1583, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/armature/editarmature_retarget.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !10, !24, !30, !35, !61, !94, !98, !103}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 65, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9}
!8 = !DIEnumerator(name: "RETARGET_LENGTH", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "RETARGET_AGGRESSIVE", value: 1, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 339, baseType: !6, size: 32, elements: !12)
!11 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!13 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!18 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!23 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !25, line: 139, baseType: !6, size: 32, elements: !26)
!25 = !DIFile(filename: "blender/source/blender/editors/armature/BIF_retarget.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TL_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TL_TAIL", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TL_HEAD", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 46, baseType: !6, size: 32, elements: !32)
!31 = !DIFile(filename: "blender/source/blender/blenlib/BLI_task.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!32 = !{!33, !34}
!33 = !DIEnumerator(name: "TASK_SCHEDULER_AUTO_THREADS", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "TASK_SCHEDULER_SINGLE_THREAD", value: 1, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBone_Flag", file: !36, line: 187, baseType: !6, size: 32, elements: !37)
!36 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60}
!38 = !DIEnumerator(name: "BONE_SELECTED", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "BONE_ROOTSEL", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "BONE_TIPSEL", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "BONE_TRANSFORM", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "BONE_CONNECTED", value: 16, isUnsigned: true)
!43 = !DIEnumerator(name: "BONE_HIDDEN_P", value: 64, isUnsigned: true)
!44 = !DIEnumerator(name: "BONE_DONE", value: 128, isUnsigned: true)
!45 = !DIEnumerator(name: "BONE_DRAW_ACTIVE", value: 256, isUnsigned: true)
!46 = !DIEnumerator(name: "BONE_HINGE", value: 512, isUnsigned: true)
!47 = !DIEnumerator(name: "BONE_HIDDEN_A", value: 1024, isUnsigned: true)
!48 = !DIEnumerator(name: "BONE_MULT_VG_ENV", value: 2048, isUnsigned: true)
!49 = !DIEnumerator(name: "BONE_NO_DEFORM", value: 4096, isUnsigned: true)
!50 = !DIEnumerator(name: "BONE_UNKEYED", value: 8192, isUnsigned: true)
!51 = !DIEnumerator(name: "BONE_HINGE_CHILD_TRANSFORM", value: 16384, isUnsigned: true)
!52 = !DIEnumerator(name: "BONE_NO_SCALE", value: 32768, isUnsigned: true)
!53 = !DIEnumerator(name: "BONE_HIDDEN_PG", value: 65536, isUnsigned: true)
!54 = !DIEnumerator(name: "BONE_DRAWWIRE", value: 131072, isUnsigned: true)
!55 = !DIEnumerator(name: "BONE_NO_CYCLICOFFSET", value: 262144, isUnsigned: true)
!56 = !DIEnumerator(name: "BONE_EDITMODE_LOCKED", value: 524288, isUnsigned: true)
!57 = !DIEnumerator(name: "BONE_TRANSFORM_CHILD", value: 1048576, isUnsigned: true)
!58 = !DIEnumerator(name: "BONE_UNSELECTABLE", value: 2097152, isUnsigned: true)
!59 = !DIEnumerator(name: "BONE_NO_LOCAL_LOCATION", value: 4194304, isUnsigned: true)
!60 = !DIEnumerator(name: "BONE_RELATIVE_PARENTING", value: 8388608, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !62, line: 461, baseType: !6, size: 32, elements: !63)
!62 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!63 = !{!64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93}
!64 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!69 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!70 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!71 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!72 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!73 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!74 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!75 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!76 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!77 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!78 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!79 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!80 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!81 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!82 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!83 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!84 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!85 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!86 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!87 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!88 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!89 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!90 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!91 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!92 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!93 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 70, baseType: !6, size: 32, elements: !95)
!95 = !{!96, !97}
!96 = !DIEnumerator(name: "METHOD_BRUTE_FORCE", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "METHOD_MEMOIZE", value: 1, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 75, baseType: !6, size: 32, elements: !99)
!99 = !{!100, !101, !102}
!100 = !DIEnumerator(name: "ARC_FREE", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "ARC_TAKEN", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "ARC_USED", value: 2, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TaskPriority", file: !31, line: 70, baseType: !6, size: 32, elements: !104)
!104 = !{!105, !106}
!105 = !DIEnumerator(name: "TASK_PRIORITY_LOW", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "TASK_PRIORITY_HIGH", value: 1, isUnsigned: true)
!107 = !{!108, !1401, !1403, !122, !1405, !118, !1498, !1509, !1515, !1540, !1542, !1544, !1550, !198, !1531}
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigGraph", file: !25, line: 79, baseType: !110)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigGraph", file: !25, line: 51, size: 1280, elements: !111)
!111 = !{!112, !120, !121, !123, !159, !164, !174, !179, !180, !181, !183, !249, !269, !274, !278, !282, !283}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !110, file: !25, line: 52, baseType: !113, size: 128)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !114, line: 71, baseType: !115)
!114 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !114, line: 69, size: 128, elements: !116)
!116 = !{!117, !119}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !115, file: !114, line: 70, baseType: !118, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !115, file: !114, line: 70, baseType: !118, size: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !110, file: !25, line: 53, baseType: !113, size: 128, offset: 128)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !110, file: !25, line: 55, baseType: !122, size: 32, offset: 256)
!122 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "free_arc", scope: !110, file: !25, line: 57, baseType: !124, size: 64, offset: 320)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreeArc", file: !125, line: 40, baseType: !126)
!125 = !DIFile(filename: "blender/source/blender/blenlib/BLI_graph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!127 = !DISubroutineType(types: !128)
!128 = !{null, !129}
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BArc", file: !125, line: 79, size: 448, elements: !131)
!131 = !{!132, !133, !134, !153, !154, !155, !156, !157, !158}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !130, file: !125, line: 80, baseType: !118, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !130, file: !125, line: 80, baseType: !118, size: 64, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !130, file: !125, line: 81, baseType: !135, size: 64, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BNode", file: !125, line: 64, size: 576, elements: !137)
!137 = !{!138, !139, !140, !144, !146, !147, !149, !150, !151, !152}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !136, file: !125, line: 65, baseType: !118, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !136, file: !125, line: 65, baseType: !118, size: 64, offset: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !136, file: !125, line: 66, baseType: !141, size: 96, offset: 128)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 96, elements: !142)
!142 = !{!143}
!143 = !DISubrange(count: 3)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !136, file: !125, line: 67, baseType: !145, size: 32, offset: 224)
!145 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "degree", scope: !136, file: !125, line: 69, baseType: !145, size: 32, offset: 256)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !136, file: !125, line: 70, baseType: !148, size: 64, offset: 320)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "subgraph_index", scope: !136, file: !125, line: 72, baseType: !145, size: 32, offset: 384)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !136, file: !125, line: 74, baseType: !145, size: 32, offset: 416)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !136, file: !125, line: 75, baseType: !145, size: 32, offset: 448)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_axis", scope: !136, file: !125, line: 76, baseType: !141, size: 96, offset: 480)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !130, file: !125, line: 81, baseType: !135, size: 64, offset: 192)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !130, file: !125, line: 82, baseType: !145, size: 32, offset: 256)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !130, file: !125, line: 84, baseType: !122, size: 32, offset: 288)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !130, file: !125, line: 86, baseType: !145, size: 32, offset: 320)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_group", scope: !130, file: !125, line: 87, baseType: !145, size: 32, offset: 352)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !130, file: !125, line: 88, baseType: !145, size: 32, offset: 384)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !110, file: !25, line: 58, baseType: !160, size: 64, offset: 384)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreeNode", file: !125, line: 41, baseType: !161)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DISubroutineType(types: !163)
!163 = !{null, !135}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symmetry", scope: !110, file: !25, line: 59, baseType: !165, size: 64, offset: 448)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "RadialSymmetry", file: !125, line: 42, baseType: !166)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = !DISubroutineType(types: !168)
!168 = !{null, !135, !169, !145}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadialArc", file: !125, line: 126, size: 192, elements: !171)
!171 = !{!172, !173}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "arc", scope: !170, file: !125, line: 127, baseType: !129, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !170, file: !125, line: 128, baseType: !141, size: 96, offset: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "axial_symmetry", scope: !110, file: !25, line: 60, baseType: !175, size: 64, offset: 512)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "AxialSymmetry", file: !125, line: 43, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = !DISubroutineType(types: !178)
!178 = !{null, !135, !135, !135, !129, !129}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !110, file: !25, line: 63, baseType: !145, size: 32, offset: 576)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "controls", scope: !110, file: !25, line: 65, baseType: !113, size: 128, offset: 640)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "editbones", scope: !110, file: !25, line: 66, baseType: !182, size: 64, offset: 768)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !110, file: !25, line: 68, baseType: !184, size: 64, offset: 832)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigNode", file: !25, line: 81, size: 640, elements: !186)
!186 = !{!187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !185, file: !25, line: 82, baseType: !118, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !185, file: !25, line: 82, baseType: !118, size: 64, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !185, file: !25, line: 83, baseType: !141, size: 96, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !185, file: !25, line: 84, baseType: !145, size: 32, offset: 224)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "degree", scope: !185, file: !25, line: 86, baseType: !145, size: 32, offset: 256)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !185, file: !25, line: 87, baseType: !148, size: 64, offset: 320)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "subgraph_index", scope: !185, file: !25, line: 89, baseType: !145, size: 32, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !185, file: !25, line: 91, baseType: !145, size: 32, offset: 416)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !185, file: !25, line: 92, baseType: !145, size: 32, offset: 448)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_axis", scope: !185, file: !25, line: 93, baseType: !141, size: 96, offset: 480)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "link_mesh", scope: !185, file: !25, line: 96, baseType: !198, size: 64, offset: 576)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReebNode", file: !200, line: 91, baseType: !201)
!200 = !DIFile(filename: "blender/source/blender/editors/armature/reeb.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReebNode", file: !200, line: 69, size: 896, elements: !202)
!202 = !{!203, !204, !205, !206, !207, !208, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !201, file: !200, line: 70, baseType: !118, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !201, file: !200, line: 70, baseType: !118, size: 64, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !201, file: !200, line: 71, baseType: !141, size: 96, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !201, file: !200, line: 72, baseType: !145, size: 32, offset: 224)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "degree", scope: !201, file: !200, line: 74, baseType: !145, size: 32, offset: 256)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !201, file: !200, line: 75, baseType: !209, size: 64, offset: 320)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReebArc", file: !200, line: 101, size: 896, elements: !212)
!212 = !{!213, !214, !215, !217, !218, !219, !220, !221, !222, !223, !224, !225, !233, !237, !238}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !211, file: !200, line: 102, baseType: !118, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !211, file: !200, line: 102, baseType: !118, size: 64, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !211, file: !200, line: 103, baseType: !216, size: 64, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !211, file: !200, line: 103, baseType: !216, size: 64, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !211, file: !200, line: 104, baseType: !145, size: 32, offset: 256)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !211, file: !200, line: 106, baseType: !122, size: 32, offset: 288)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !211, file: !200, line: 108, baseType: !145, size: 32, offset: 320)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_group", scope: !211, file: !200, line: 109, baseType: !145, size: 32, offset: 352)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !211, file: !200, line: 110, baseType: !145, size: 32, offset: 384)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !211, file: !200, line: 113, baseType: !113, size: 128, offset: 448)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "bcount", scope: !211, file: !200, line: 114, baseType: !145, size: 32, offset: 576)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !211, file: !200, line: 115, baseType: !226, size: 64, offset: 640)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EmbedBucket", file: !200, line: 62, size: 256, elements: !228)
!228 = !{!229, !230, !231, !232}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !227, file: !200, line: 63, baseType: !122, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "nv", scope: !227, file: !200, line: 64, baseType: !145, size: 32, offset: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !227, file: !200, line: 65, baseType: !141, size: 96, offset: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !227, file: !200, line: 66, baseType: !141, size: 96, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !211, file: !200, line: 117, baseType: !234, size: 64, offset: 704)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !236, line: 47, flags: DIFlagFwdDecl)
!236 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!237 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !211, file: !200, line: 118, baseType: !122, size: 32, offset: 768)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !211, file: !200, line: 119, baseType: !210, size: 64, offset: 832)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "subgraph_index", scope: !201, file: !200, line: 77, baseType: !145, size: 32, offset: 384)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !201, file: !200, line: 79, baseType: !145, size: 32, offset: 416)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !201, file: !200, line: 80, baseType: !145, size: 32, offset: 448)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_axis", scope: !201, file: !200, line: 81, baseType: !141, size: 96, offset: 480)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !201, file: !200, line: 84, baseType: !141, size: 96, offset: 576)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !201, file: !200, line: 86, baseType: !145, size: 32, offset: 672)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !201, file: !200, line: 87, baseType: !122, size: 32, offset: 704)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "multi_level", scope: !201, file: !200, line: 88, baseType: !145, size: 32, offset: 736)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "link_down", scope: !201, file: !200, line: 89, baseType: !216, size: 64, offset: 768)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !201, file: !200, line: 90, baseType: !216, size: 64, offset: 832)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "link_mesh", scope: !110, file: !25, line: 69, baseType: !250, size: 64, offset: 896)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReebGraph", file: !200, line: 60, baseType: !252)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReebGraph", file: !200, line: 43, size: 832, elements: !253)
!253 = !{!254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !266, !267}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !252, file: !200, line: 44, baseType: !113, size: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !252, file: !200, line: 45, baseType: !113, size: 128, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !252, file: !200, line: 47, baseType: !122, size: 32, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "free_arc", scope: !252, file: !200, line: 49, baseType: !124, size: 64, offset: 320)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !252, file: !200, line: 50, baseType: !160, size: 64, offset: 384)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symmetry", scope: !252, file: !200, line: 51, baseType: !165, size: 64, offset: 448)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "axial_symmetry", scope: !252, file: !200, line: 52, baseType: !175, size: 64, offset: 512)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !252, file: !200, line: 55, baseType: !145, size: 32, offset: 576)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "totnodes", scope: !252, file: !200, line: 56, baseType: !145, size: 32, offset: 608)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "emap", scope: !252, file: !200, line: 57, baseType: !264, size: 64, offset: 640)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHash", file: !200, line: 38, flags: DIFlagFwdDecl)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "multi_level", scope: !252, file: !200, line: 58, baseType: !145, size: 32, offset: 704)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !252, file: !200, line: 59, baseType: !268, size: 64, offset: 768)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "task_scheduler", scope: !110, file: !25, line: 72, baseType: !270, size: 64, offset: 960)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskScheduler", file: !31, line: 44, baseType: !272)
!272 = !DICompositeType(tag: DW_TAG_structure_type, name: "TaskScheduler", file: !273, line: 57, flags: DIFlagFwdDecl)
!273 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "task_pool", scope: !110, file: !25, line: 73, baseType: !275, size: 64, offset: 1024)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskPool", file: !31, line: 75, baseType: !277)
!277 = !DICompositeType(tag: DW_TAG_structure_type, name: "TaskPool", file: !31, line: 75, flags: DIFlagFwdDecl)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "bones_map", scope: !110, file: !25, line: 75, baseType: !279, size: 64, offset: 1088)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !281, line: 48, baseType: !235)
!281 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!282 = !DIDerivedType(tag: DW_TAG_member, name: "controls_map", scope: !110, file: !25, line: 76, baseType: !279, size: 64, offset: 1152)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !110, file: !25, line: 78, baseType: !284, size: 64, offset: 1216)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !11, line: 115, size: 11392, elements: !286)
!286 = !{!287, !351, !354, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !371, !381, !394, !395, !434, !435, !439, !440, !456, !457, !458, !459, !460, !461, !462, !466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !482, !483, !484, !485, !486, !487, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !547, !548, !549, !550, !551, !552, !553, !554, !555, !558, !561, !565, !566, !567, !568, !569, !572, !575, !578, !579, !585, !586, !587, !588, !589, !590, !591, !594, !597, !601, !1389, !1390}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !285, file: !11, line: 116, baseType: !288, size: 960)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !289, line: 130, baseType: !290)
!289 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !289, line: 117, size: 960, elements: !291)
!291 = !{!292, !293, !294, !296, !316, !320, !322, !323, !324, !325}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !290, file: !289, line: 118, baseType: !118, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !290, file: !289, line: 118, baseType: !118, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !290, file: !289, line: 119, baseType: !295, size: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !290, file: !289, line: 120, baseType: !297, size: 64, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !289, line: 136, size: 17600, elements: !299)
!299 = !{!300, !301, !303, !306, !311, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !298, file: !289, line: 137, baseType: !288, size: 960)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !298, file: !289, line: 138, baseType: !302, size: 64, offset: 960)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !298, file: !289, line: 139, baseType: !304, size: 64, offset: 1024)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !289, line: 43, flags: DIFlagFwdDecl)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !298, file: !289, line: 140, baseType: !307, size: 8192, offset: 1088)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 8192, elements: !309)
!308 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!309 = !{!310}
!310 = !DISubrange(count: 1024)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !298, file: !289, line: 141, baseType: !307, size: 8192, offset: 9280)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !298, file: !289, line: 148, baseType: !297, size: 64, offset: 17472)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !298, file: !289, line: 150, baseType: !314, size: 64, offset: 17536)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !289, line: 45, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !289, line: 121, baseType: !317, size: 528, offset: 256)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 528, elements: !318)
!318 = !{!319}
!319 = !DISubrange(count: 66)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !290, file: !289, line: 126, baseType: !321, size: 16, offset: 784)
!321 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !290, file: !289, line: 127, baseType: !145, size: 32, offset: 800)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !290, file: !289, line: 128, baseType: !145, size: 32, offset: 832)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !290, file: !289, line: 128, baseType: !145, size: 32, offset: 864)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !290, file: !289, line: 129, baseType: !326, size: 64, offset: 896)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !289, line: 75, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !289, line: 62, size: 1024, elements: !329)
!329 = !{!330, !332, !333, !334, !335, !336, !340, !341, !349, !350}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !328, file: !289, line: 63, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !328, file: !289, line: 63, baseType: !331, size: 64, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !328, file: !289, line: 64, baseType: !308, size: 8, offset: 128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !328, file: !289, line: 64, baseType: !308, size: 8, offset: 136)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !328, file: !289, line: 65, baseType: !321, size: 16, offset: 144)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !328, file: !289, line: 66, baseType: !337, size: 512, offset: 160)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 512, elements: !338)
!338 = !{!339}
!339 = !DISubrange(count: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !328, file: !289, line: 67, baseType: !145, size: 32, offset: 672)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !328, file: !289, line: 69, baseType: !342, size: 256, offset: 704)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !289, line: 60, baseType: !343)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !289, line: 48, size: 256, elements: !344)
!344 = !{!345, !346, !347, !348}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !343, file: !289, line: 49, baseType: !118, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !343, file: !289, line: 58, baseType: !113, size: 128, offset: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !343, file: !289, line: 59, baseType: !145, size: 32, offset: 192)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !343, file: !289, line: 59, baseType: !145, size: 32, offset: 224)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !328, file: !289, line: 70, baseType: !145, size: 32, offset: 960)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !328, file: !289, line: 74, baseType: !145, size: 32, offset: 992)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !285, file: !11, line: 117, baseType: !352, size: 64, offset: 960)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !36, line: 37, flags: DIFlagFwdDecl)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !285, file: !11, line: 119, baseType: !355, size: 64, offset: 1024)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !11, line: 57, flags: DIFlagFwdDecl)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !285, file: !11, line: 121, baseType: !321, size: 16, offset: 1088)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !285, file: !11, line: 121, baseType: !321, size: 16, offset: 1104)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !285, file: !11, line: 122, baseType: !145, size: 32, offset: 1120)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !285, file: !11, line: 122, baseType: !145, size: 32, offset: 1152)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !285, file: !11, line: 122, baseType: !145, size: 32, offset: 1184)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !285, file: !11, line: 123, baseType: !337, size: 512, offset: 1216)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !285, file: !11, line: 124, baseType: !284, size: 64, offset: 1728)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !285, file: !11, line: 124, baseType: !284, size: 64, offset: 1792)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !285, file: !11, line: 127, baseType: !284, size: 64, offset: 1856)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !285, file: !11, line: 127, baseType: !284, size: 64, offset: 1920)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !285, file: !11, line: 127, baseType: !284, size: 64, offset: 1984)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !285, file: !11, line: 128, baseType: !369, size: 64, offset: 2048)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !62, line: 42, flags: DIFlagFwdDecl)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !285, file: !11, line: 130, baseType: !372, size: 64, offset: 2112)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !11, line: 97, size: 832, elements: !374)
!374 = !{!375, !379, !380}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !373, file: !11, line: 98, baseType: !376, size: 768)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 768, elements: !377)
!377 = !{!378, !143}
!378 = !DISubrange(count: 8)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !373, file: !11, line: 99, baseType: !145, size: 32, offset: 768)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !373, file: !11, line: 99, baseType: !145, size: 32, offset: 800)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !285, file: !11, line: 131, baseType: !382, size: 64, offset: 2176)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !236, line: 486, size: 1600, elements: !384)
!384 = !{!385, !386, !387, !388, !389, !390, !391, !392, !393}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !383, file: !236, line: 487, baseType: !288, size: 960)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !383, file: !236, line: 489, baseType: !113, size: 128, offset: 960)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !383, file: !236, line: 490, baseType: !113, size: 128, offset: 1088)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !383, file: !236, line: 491, baseType: !113, size: 128, offset: 1216)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !383, file: !236, line: 492, baseType: !113, size: 128, offset: 1344)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !383, file: !236, line: 494, baseType: !145, size: 32, offset: 1472)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !383, file: !236, line: 495, baseType: !145, size: 32, offset: 1504)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !383, file: !236, line: 497, baseType: !145, size: 32, offset: 1536)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !383, file: !236, line: 498, baseType: !145, size: 32, offset: 1568)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !285, file: !11, line: 132, baseType: !382, size: 64, offset: 2240)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !285, file: !11, line: 133, baseType: !396, size: 64, offset: 2304)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !236, line: 334, size: 1728, elements: !398)
!398 = !{!399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !433}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !397, file: !236, line: 335, baseType: !113, size: 128)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !397, file: !236, line: 336, baseType: !234, size: 64, offset: 128)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !397, file: !236, line: 338, baseType: !321, size: 16, offset: 192)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !397, file: !236, line: 338, baseType: !321, size: 16, offset: 208)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !397, file: !236, line: 339, baseType: !6, size: 32, offset: 224)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !397, file: !236, line: 340, baseType: !145, size: 32, offset: 256)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !397, file: !236, line: 342, baseType: !122, size: 32, offset: 288)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !397, file: !236, line: 343, baseType: !141, size: 96, offset: 320)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !397, file: !236, line: 344, baseType: !141, size: 96, offset: 416)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !397, file: !236, line: 347, baseType: !113, size: 128, offset: 512)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !397, file: !236, line: 349, baseType: !145, size: 32, offset: 640)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !397, file: !236, line: 350, baseType: !145, size: 32, offset: 672)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !397, file: !236, line: 351, baseType: !118, size: 64, offset: 704)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !397, file: !236, line: 352, baseType: !118, size: 64, offset: 768)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !397, file: !236, line: 354, baseType: !414, size: 384, offset: 832)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !236, line: 116, baseType: !415)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !236, line: 94, size: 384, elements: !416)
!416 = !{!417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !415, file: !236, line: 96, baseType: !145, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !415, file: !236, line: 96, baseType: !145, size: 32, offset: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !415, file: !236, line: 97, baseType: !145, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !415, file: !236, line: 97, baseType: !145, size: 32, offset: 96)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !415, file: !236, line: 99, baseType: !321, size: 16, offset: 128)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !415, file: !236, line: 100, baseType: !321, size: 16, offset: 144)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !415, file: !236, line: 102, baseType: !321, size: 16, offset: 160)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !415, file: !236, line: 105, baseType: !321, size: 16, offset: 176)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !415, file: !236, line: 108, baseType: !321, size: 16, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !415, file: !236, line: 109, baseType: !321, size: 16, offset: 208)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !415, file: !236, line: 111, baseType: !321, size: 16, offset: 224)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !415, file: !236, line: 112, baseType: !321, size: 16, offset: 240)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !415, file: !236, line: 114, baseType: !145, size: 32, offset: 256)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !415, file: !236, line: 114, baseType: !145, size: 32, offset: 288)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !415, file: !236, line: 115, baseType: !145, size: 32, offset: 320)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !415, file: !236, line: 115, baseType: !145, size: 32, offset: 352)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !397, file: !236, line: 355, baseType: !337, size: 512, offset: 1216)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !285, file: !11, line: 134, baseType: !118, size: 64, offset: 2368)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !285, file: !11, line: 136, baseType: !436, size: 64, offset: 2432)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !438, line: 61, flags: DIFlagFwdDecl)
!438 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!439 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !285, file: !11, line: 138, baseType: !414, size: 384, offset: 2496)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !285, file: !11, line: 139, baseType: !441, size: 64, offset: 2880)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !236, line: 80, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !236, line: 72, size: 192, elements: !444)
!444 = !{!445, !452, !453, !454, !455}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !443, file: !236, line: 73, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !236, line: 59, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !236, line: 56, size: 128, elements: !449)
!449 = !{!450, !451}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !448, file: !236, line: 57, baseType: !141, size: 96)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !448, file: !236, line: 58, baseType: !145, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !443, file: !236, line: 74, baseType: !145, size: 32, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !443, file: !236, line: 76, baseType: !145, size: 32, offset: 96)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !443, file: !236, line: 77, baseType: !145, size: 32, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !443, file: !236, line: 79, baseType: !145, size: 32, offset: 160)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !285, file: !11, line: 141, baseType: !113, size: 128, offset: 2944)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !285, file: !11, line: 142, baseType: !113, size: 128, offset: 3072)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !285, file: !11, line: 143, baseType: !113, size: 128, offset: 3200)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !285, file: !11, line: 144, baseType: !113, size: 128, offset: 3328)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !285, file: !11, line: 146, baseType: !145, size: 32, offset: 3456)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !285, file: !11, line: 147, baseType: !145, size: 32, offset: 3488)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !285, file: !11, line: 150, baseType: !463, size: 64, offset: 3520)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !438, line: 179, flags: DIFlagFwdDecl)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !285, file: !11, line: 151, baseType: !467, size: 64, offset: 3584)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !285, file: !11, line: 152, baseType: !145, size: 32, offset: 3648)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !285, file: !11, line: 153, baseType: !145, size: 32, offset: 3680)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !285, file: !11, line: 156, baseType: !141, size: 96, offset: 3712)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !285, file: !11, line: 156, baseType: !141, size: 96, offset: 3808)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !285, file: !11, line: 156, baseType: !141, size: 96, offset: 3904)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !285, file: !11, line: 157, baseType: !141, size: 96, offset: 4000)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !285, file: !11, line: 158, baseType: !141, size: 96, offset: 4096)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !285, file: !11, line: 159, baseType: !141, size: 96, offset: 4192)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !285, file: !11, line: 160, baseType: !141, size: 96, offset: 4288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !285, file: !11, line: 160, baseType: !141, size: 96, offset: 4384)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !285, file: !11, line: 161, baseType: !479, size: 128, offset: 4480)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 128, elements: !480)
!480 = !{!481}
!481 = !DISubrange(count: 4)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !285, file: !11, line: 161, baseType: !479, size: 128, offset: 4608)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !285, file: !11, line: 162, baseType: !141, size: 96, offset: 4736)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !285, file: !11, line: 162, baseType: !141, size: 96, offset: 4832)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !285, file: !11, line: 163, baseType: !122, size: 32, offset: 4928)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !285, file: !11, line: 163, baseType: !122, size: 32, offset: 4960)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !285, file: !11, line: 164, baseType: !488, size: 512, offset: 4992)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 512, elements: !489)
!489 = !{!481, !481}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !285, file: !11, line: 165, baseType: !488, size: 512, offset: 5504)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !285, file: !11, line: 166, baseType: !488, size: 512, offset: 6016)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !285, file: !11, line: 167, baseType: !488, size: 512, offset: 6528)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !285, file: !11, line: 176, baseType: !488, size: 512, offset: 7040)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !285, file: !11, line: 178, baseType: !6, size: 32, offset: 7552)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !285, file: !11, line: 180, baseType: !321, size: 16, offset: 7584)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !285, file: !11, line: 181, baseType: !321, size: 16, offset: 7600)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !285, file: !11, line: 183, baseType: !321, size: 16, offset: 7616)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !285, file: !11, line: 183, baseType: !321, size: 16, offset: 7632)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !285, file: !11, line: 184, baseType: !321, size: 16, offset: 7648)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !285, file: !11, line: 184, baseType: !321, size: 16, offset: 7664)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !285, file: !11, line: 185, baseType: !321, size: 16, offset: 7680)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !285, file: !11, line: 186, baseType: !321, size: 16, offset: 7696)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !285, file: !11, line: 187, baseType: !321, size: 16, offset: 7712)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !285, file: !11, line: 188, baseType: !308, size: 8, offset: 7728)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !285, file: !11, line: 189, baseType: !308, size: 8, offset: 7736)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !285, file: !11, line: 192, baseType: !145, size: 32, offset: 7744)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !285, file: !11, line: 192, baseType: !145, size: 32, offset: 7776)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !285, file: !11, line: 192, baseType: !145, size: 32, offset: 7808)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !285, file: !11, line: 192, baseType: !145, size: 32, offset: 7840)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !285, file: !11, line: 194, baseType: !145, size: 32, offset: 7872)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !285, file: !11, line: 202, baseType: !122, size: 32, offset: 7904)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !285, file: !11, line: 202, baseType: !122, size: 32, offset: 7936)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !285, file: !11, line: 202, baseType: !122, size: 32, offset: 7968)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !285, file: !11, line: 211, baseType: !122, size: 32, offset: 8000)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !285, file: !11, line: 212, baseType: !122, size: 32, offset: 8032)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !285, file: !11, line: 213, baseType: !122, size: 32, offset: 8064)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !285, file: !11, line: 214, baseType: !122, size: 32, offset: 8096)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !285, file: !11, line: 215, baseType: !122, size: 32, offset: 8128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !285, file: !11, line: 216, baseType: !122, size: 32, offset: 8160)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !285, file: !11, line: 219, baseType: !122, size: 32, offset: 8192)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !285, file: !11, line: 220, baseType: !122, size: 32, offset: 8224)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !285, file: !11, line: 221, baseType: !122, size: 32, offset: 8256)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !285, file: !11, line: 224, baseType: !524, size: 16, offset: 8288)
!524 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !285, file: !11, line: 224, baseType: !524, size: 16, offset: 8304)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !285, file: !11, line: 226, baseType: !321, size: 16, offset: 8320)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !285, file: !11, line: 228, baseType: !308, size: 8, offset: 8336)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !285, file: !11, line: 229, baseType: !308, size: 8, offset: 8344)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !285, file: !11, line: 231, baseType: !321, size: 16, offset: 8352)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !285, file: !11, line: 232, baseType: !308, size: 8, offset: 8368)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !285, file: !11, line: 233, baseType: !308, size: 8, offset: 8376)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !285, file: !11, line: 234, baseType: !122, size: 32, offset: 8384)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !285, file: !11, line: 235, baseType: !122, size: 32, offset: 8416)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !285, file: !11, line: 237, baseType: !113, size: 128, offset: 8448)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !285, file: !11, line: 238, baseType: !113, size: 128, offset: 8576)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !285, file: !11, line: 239, baseType: !113, size: 128, offset: 8704)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !285, file: !11, line: 240, baseType: !113, size: 128, offset: 8832)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !285, file: !11, line: 242, baseType: !122, size: 32, offset: 8960)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !285, file: !11, line: 244, baseType: !321, size: 16, offset: 8992)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !285, file: !11, line: 245, baseType: !524, size: 16, offset: 9008)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !285, file: !11, line: 246, baseType: !479, size: 128, offset: 9024)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !285, file: !11, line: 248, baseType: !145, size: 32, offset: 9152)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !285, file: !11, line: 249, baseType: !145, size: 32, offset: 9184)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !285, file: !11, line: 251, baseType: !545, size: 64, offset: 9216)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !11, line: 251, flags: DIFlagFwdDecl)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !285, file: !11, line: 253, baseType: !308, size: 8, offset: 9280)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !285, file: !11, line: 254, baseType: !308, size: 8, offset: 9288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !285, file: !11, line: 255, baseType: !321, size: 16, offset: 9296)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !285, file: !11, line: 256, baseType: !141, size: 96, offset: 9312)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !285, file: !11, line: 258, baseType: !113, size: 128, offset: 9408)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !285, file: !11, line: 259, baseType: !113, size: 128, offset: 9536)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !285, file: !11, line: 260, baseType: !113, size: 128, offset: 9664)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !285, file: !11, line: 261, baseType: !113, size: 128, offset: 9792)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !285, file: !11, line: 263, baseType: !556, size: 64, offset: 9920)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !11, line: 52, flags: DIFlagFwdDecl)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !285, file: !11, line: 264, baseType: !559, size: 64, offset: 9984)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !11, line: 53, flags: DIFlagFwdDecl)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !285, file: !11, line: 265, baseType: !562, size: 64, offset: 10048)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !564, line: 43, flags: DIFlagFwdDecl)
!564 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!565 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !285, file: !11, line: 267, baseType: !308, size: 8, offset: 10112)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !285, file: !11, line: 268, baseType: !308, size: 8, offset: 10120)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !285, file: !11, line: 269, baseType: !321, size: 16, offset: 10128)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !285, file: !11, line: 270, baseType: !122, size: 32, offset: 10144)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !285, file: !11, line: 272, baseType: !570, size: 64, offset: 10176)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !11, line: 54, flags: DIFlagFwdDecl)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !285, file: !11, line: 275, baseType: !573, size: 64, offset: 10240)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !11, line: 275, flags: DIFlagFwdDecl)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !285, file: !11, line: 277, baseType: !576, size: 64, offset: 10304)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !11, line: 56, flags: DIFlagFwdDecl)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !285, file: !11, line: 277, baseType: !576, size: 64, offset: 10368)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !285, file: !11, line: 278, baseType: !580, size: 64, offset: 10432)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !581, line: 27, baseType: !582)
!581 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !583, line: 45, baseType: !584)
!583 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!584 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !285, file: !11, line: 279, baseType: !580, size: 64, offset: 10496)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !285, file: !11, line: 280, baseType: !6, size: 32, offset: 10560)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !285, file: !11, line: 281, baseType: !6, size: 32, offset: 10592)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !285, file: !11, line: 283, baseType: !113, size: 128, offset: 10624)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !285, file: !11, line: 284, baseType: !113, size: 128, offset: 10752)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !285, file: !11, line: 285, baseType: !182, size: 64, offset: 10880)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !285, file: !11, line: 287, baseType: !592, size: 64, offset: 10944)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !11, line: 59, flags: DIFlagFwdDecl)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !285, file: !11, line: 288, baseType: !595, size: 64, offset: 11008)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !11, line: 288, flags: DIFlagFwdDecl)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !285, file: !11, line: 290, baseType: !598, size: 64, offset: 11072)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 64, elements: !599)
!599 = !{!600}
!600 = !DISubrange(count: 2)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !285, file: !11, line: 291, baseType: !602, size: 64, offset: 11136)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !604, line: 65, baseType: !605)
!604 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !604, line: 50, size: 320, elements: !606)
!606 = !{!607, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !605, file: !604, line: 51, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !438, line: 1216, size: 39680, elements: !610)
!610 = !{!611, !612, !613, !614, !617, !618, !619, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !645, !648, !651, !947, !950, !1249, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1271, !1272, !1273, !1274, !1275, !1283, !1350, !1357, !1358, !1365, !1368, !1369, !1370, !1371, !1372, !1373}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !609, file: !438, line: 1217, baseType: !288, size: 960)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !609, file: !438, line: 1218, baseType: !352, size: 64, offset: 960)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !609, file: !438, line: 1220, baseType: !284, size: 64, offset: 1024)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !609, file: !438, line: 1221, baseType: !615, size: 64, offset: 1088)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !438, line: 52, flags: DIFlagFwdDecl)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !609, file: !438, line: 1223, baseType: !608, size: 64, offset: 1152)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !609, file: !438, line: 1225, baseType: !113, size: 128, offset: 1216)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !609, file: !438, line: 1226, baseType: !620, size: 64, offset: 1344)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !438, line: 69, size: 320, elements: !622)
!622 = !{!623, !624, !625, !626, !627, !628, !629, !630}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !621, file: !438, line: 70, baseType: !620, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !621, file: !438, line: 70, baseType: !620, size: 64, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !621, file: !438, line: 71, baseType: !6, size: 32, offset: 128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !621, file: !438, line: 71, baseType: !6, size: 32, offset: 160)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !621, file: !438, line: 72, baseType: !145, size: 32, offset: 192)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !621, file: !438, line: 73, baseType: !321, size: 16, offset: 224)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !621, file: !438, line: 73, baseType: !321, size: 16, offset: 240)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !621, file: !438, line: 74, baseType: !284, size: 64, offset: 256)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !609, file: !438, line: 1227, baseType: !284, size: 64, offset: 1408)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !609, file: !438, line: 1229, baseType: !141, size: 96, offset: 1472)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !609, file: !438, line: 1230, baseType: !141, size: 96, offset: 1568)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !609, file: !438, line: 1231, baseType: !141, size: 96, offset: 1664)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !609, file: !438, line: 1231, baseType: !141, size: 96, offset: 1760)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !609, file: !438, line: 1233, baseType: !6, size: 32, offset: 1856)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !609, file: !438, line: 1234, baseType: !145, size: 32, offset: 1888)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !609, file: !438, line: 1235, baseType: !6, size: 32, offset: 1920)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !609, file: !438, line: 1237, baseType: !321, size: 16, offset: 1952)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !609, file: !438, line: 1239, baseType: !308, size: 8, offset: 1968)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !609, file: !438, line: 1240, baseType: !642, size: 8, offset: 1976)
!642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 8, elements: !643)
!643 = !{!644}
!644 = !DISubrange(count: 1)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !609, file: !438, line: 1242, baseType: !646, size: 64, offset: 1984)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !438, line: 57, flags: DIFlagFwdDecl)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !609, file: !438, line: 1244, baseType: !649, size: 64, offset: 2048)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !438, line: 59, flags: DIFlagFwdDecl)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !609, file: !438, line: 1246, baseType: !652, size: 64, offset: 2112)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !438, line: 1067, size: 5184, elements: !654)
!654 = !{!655, !686, !687, !702, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !724, !819, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !868, !869, !870, !871, !872, !873, !874, !875, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !930}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !653, file: !438, line: 1068, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !438, line: 934, baseType: !658)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !438, line: 925, size: 576, elements: !659)
!659 = !{!660, !677, !678, !679, !680, !682, !685}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !658, file: !438, line: 926, baseType: !661, size: 320)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !438, line: 830, baseType: !662)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !438, line: 813, size: 320, elements: !663)
!663 = !{!664, !667, !670, !671, !674, !675, !676}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !662, file: !438, line: 814, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !438, line: 51, flags: DIFlagFwdDecl)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !662, file: !438, line: 815, baseType: !668, size: 64, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !438, line: 815, flags: DIFlagFwdDecl)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !662, file: !438, line: 818, baseType: !118, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !662, file: !438, line: 819, baseType: !672, size: 32, offset: 192)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !673, size: 32, elements: !480)
!673 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !662, file: !438, line: 822, baseType: !145, size: 32, offset: 224)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !662, file: !438, line: 826, baseType: !145, size: 32, offset: 256)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !662, file: !438, line: 829, baseType: !145, size: 32, offset: 288)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !658, file: !438, line: 928, baseType: !321, size: 16, offset: 320)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !658, file: !438, line: 928, baseType: !321, size: 16, offset: 336)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !658, file: !438, line: 929, baseType: !145, size: 32, offset: 352)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !658, file: !438, line: 930, baseType: !681, size: 64, offset: 384)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !658, file: !438, line: 931, baseType: !683, size: 64, offset: 448)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !438, line: 931, flags: DIFlagFwdDecl)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !658, file: !438, line: 933, baseType: !118, size: 64, offset: 512)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !653, file: !438, line: 1069, baseType: !656, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !653, file: !438, line: 1070, baseType: !688, size: 64, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !438, line: 916, baseType: !690)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !438, line: 891, size: 704, elements: !691)
!691 = !{!692, !693, !694, !696, !697, !698, !699, !700, !701}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !690, file: !438, line: 892, baseType: !661, size: 320)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !690, file: !438, line: 896, baseType: !145, size: 32, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !690, file: !438, line: 900, baseType: !695, size: 96, offset: 352)
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 96, elements: !142)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !690, file: !438, line: 903, baseType: !122, size: 32, offset: 448)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !690, file: !438, line: 906, baseType: !145, size: 32, offset: 480)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !690, file: !438, line: 909, baseType: !122, size: 32, offset: 512)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !690, file: !438, line: 912, baseType: !122, size: 32, offset: 544)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !690, file: !438, line: 914, baseType: !284, size: 64, offset: 576)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !690, file: !438, line: 915, baseType: !118, size: 64, offset: 640)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !653, file: !438, line: 1071, baseType: !703, size: 64, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !438, line: 920, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !438, line: 918, size: 320, elements: !706)
!706 = !{!707}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !705, file: !438, line: 919, baseType: !661, size: 320)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !653, file: !438, line: 1075, baseType: !122, size: 32, offset: 256)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !653, file: !438, line: 1077, baseType: !122, size: 32, offset: 288)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !653, file: !438, line: 1078, baseType: !122, size: 32, offset: 320)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !653, file: !438, line: 1079, baseType: !321, size: 16, offset: 352)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !653, file: !438, line: 1082, baseType: !321, size: 16, offset: 368)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !653, file: !438, line: 1085, baseType: !308, size: 8, offset: 384)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !653, file: !438, line: 1086, baseType: !308, size: 8, offset: 392)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !653, file: !438, line: 1087, baseType: !308, size: 8, offset: 400)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !653, file: !438, line: 1088, baseType: !308, size: 8, offset: 408)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !653, file: !438, line: 1090, baseType: !122, size: 32, offset: 416)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !653, file: !438, line: 1093, baseType: !321, size: 16, offset: 448)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !653, file: !438, line: 1096, baseType: !308, size: 8, offset: 464)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !653, file: !438, line: 1098, baseType: !721, size: 40, offset: 472)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 40, elements: !722)
!722 = !{!723}
!723 = !DISubrange(count: 5)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !653, file: !438, line: 1101, baseType: !725, size: 832, offset: 512)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !438, line: 836, size: 832, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !734, !735, !736, !815, !816, !817, !818}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !725, file: !438, line: 837, baseType: !661, size: 320)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !725, file: !438, line: 839, baseType: !321, size: 16, offset: 320)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !725, file: !438, line: 839, baseType: !321, size: 16, offset: 336)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !725, file: !438, line: 842, baseType: !321, size: 16, offset: 352)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !725, file: !438, line: 842, baseType: !321, size: 16, offset: 368)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !725, file: !438, line: 843, baseType: !733, size: 32, offset: 384)
!733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 32, elements: !599)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !725, file: !438, line: 845, baseType: !145, size: 32, offset: 416)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !725, file: !438, line: 847, baseType: !118, size: 64, offset: 448)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !725, file: !438, line: 848, baseType: !737, size: 64, offset: 512)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !604, line: 77, size: 15424, elements: !739)
!739 = !{!740, !741, !742, !745, !748, !751, !754, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !804, !805, !809}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !738, file: !604, line: 78, baseType: !288, size: 960)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !738, file: !604, line: 80, baseType: !307, size: 8192, offset: 960)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !738, file: !604, line: 82, baseType: !743, size: 64, offset: 9152)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !604, line: 43, flags: DIFlagFwdDecl)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !738, file: !604, line: 83, baseType: !746, size: 64, offset: 9216)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !289, line: 46, flags: DIFlagFwdDecl)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !738, file: !604, line: 86, baseType: !749, size: 64, offset: 9280)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !604, line: 41, flags: DIFlagFwdDecl)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !738, file: !604, line: 87, baseType: !752, size: 64, offset: 9344)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !604, line: 44, flags: DIFlagFwdDecl)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !738, file: !604, line: 89, baseType: !755, size: 512, offset: 9408)
!755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 512, elements: !756)
!756 = !{!378}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !738, file: !604, line: 90, baseType: !321, size: 16, offset: 9920)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !738, file: !604, line: 90, baseType: !321, size: 16, offset: 9936)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !738, file: !604, line: 92, baseType: !321, size: 16, offset: 9952)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !738, file: !604, line: 92, baseType: !321, size: 16, offset: 9968)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !738, file: !604, line: 93, baseType: !321, size: 16, offset: 9984)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !738, file: !604, line: 93, baseType: !321, size: 16, offset: 10000)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !738, file: !604, line: 94, baseType: !145, size: 32, offset: 10016)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !738, file: !604, line: 97, baseType: !321, size: 16, offset: 10048)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !738, file: !604, line: 97, baseType: !321, size: 16, offset: 10064)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !738, file: !604, line: 98, baseType: !321, size: 16, offset: 10080)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !738, file: !604, line: 98, baseType: !321, size: 16, offset: 10096)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !738, file: !604, line: 99, baseType: !321, size: 16, offset: 10112)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !738, file: !604, line: 99, baseType: !321, size: 16, offset: 10128)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !738, file: !604, line: 100, baseType: !6, size: 32, offset: 10144)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !738, file: !604, line: 101, baseType: !681, size: 64, offset: 10176)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !738, file: !604, line: 103, baseType: !314, size: 64, offset: 10240)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !738, file: !604, line: 104, baseType: !774, size: 64, offset: 10304)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !289, line: 159, size: 448, elements: !776)
!776 = !{!777, !779, !780, !781, !782, !784}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !775, file: !289, line: 161, baseType: !778, size: 64)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !599)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !775, file: !289, line: 162, baseType: !778, size: 64, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !775, file: !289, line: 163, baseType: !733, size: 32, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !775, file: !289, line: 164, baseType: !733, size: 32, offset: 160)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !775, file: !289, line: 165, baseType: !783, size: 128, offset: 192)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !681, size: 128, elements: !599)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !775, file: !289, line: 166, baseType: !785, size: 128, offset: 320)
!785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !746, size: 128, elements: !599)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !738, file: !604, line: 107, baseType: !122, size: 32, offset: 10368)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !738, file: !604, line: 108, baseType: !145, size: 32, offset: 10400)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !738, file: !604, line: 109, baseType: !321, size: 16, offset: 10432)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !738, file: !604, line: 110, baseType: !321, size: 16, offset: 10448)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !738, file: !604, line: 113, baseType: !145, size: 32, offset: 10464)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !738, file: !604, line: 113, baseType: !145, size: 32, offset: 10496)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !738, file: !604, line: 114, baseType: !308, size: 8, offset: 10528)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !738, file: !604, line: 114, baseType: !308, size: 8, offset: 10536)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !738, file: !604, line: 115, baseType: !321, size: 16, offset: 10544)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !738, file: !604, line: 116, baseType: !479, size: 128, offset: 10560)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !738, file: !604, line: 119, baseType: !122, size: 32, offset: 10688)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !738, file: !604, line: 119, baseType: !122, size: 32, offset: 10720)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !738, file: !604, line: 122, baseType: !799, size: 512, offset: 10752)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !800, line: 182, baseType: !801)
!800 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !800, line: 180, size: 512, elements: !802)
!802 = !{!803}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !801, file: !800, line: 181, baseType: !337, size: 512)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !738, file: !604, line: 123, baseType: !308, size: 8, offset: 11264)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !738, file: !604, line: 125, baseType: !806, size: 56, offset: 11272)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 56, elements: !807)
!807 = !{!808}
!808 = !DISubrange(count: 7)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !738, file: !604, line: 126, baseType: !810, size: 4096, offset: 11328)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 4096, elements: !756)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !604, line: 69, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !604, line: 67, size: 512, elements: !813)
!813 = !{!814}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !812, file: !604, line: 68, baseType: !337, size: 512)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !725, file: !438, line: 849, baseType: !737, size: 64, offset: 576)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !725, file: !438, line: 850, baseType: !737, size: 64, offset: 640)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !725, file: !438, line: 851, baseType: !141, size: 96, offset: 704)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !725, file: !438, line: 852, baseType: !122, size: 32, offset: 800)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !653, file: !438, line: 1104, baseType: !820, size: 1344, offset: 1344)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !438, line: 867, size: 1344, elements: !821)
!821 = !{!822, !823, !824, !825, !826, !837, !838, !839, !840, !841, !842, !843, !844, !845}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !820, file: !438, line: 868, baseType: !321, size: 16)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !820, file: !438, line: 869, baseType: !321, size: 16, offset: 16)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !820, file: !438, line: 870, baseType: !321, size: 16, offset: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !820, file: !438, line: 871, baseType: !321, size: 16, offset: 48)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !820, file: !438, line: 873, baseType: !827, size: 896, offset: 64)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 896, elements: !807)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !438, line: 864, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !438, line: 859, size: 128, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !829, file: !438, line: 860, baseType: !321, size: 16)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !829, file: !438, line: 861, baseType: !321, size: 16, offset: 16)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !829, file: !438, line: 861, baseType: !321, size: 16, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !829, file: !438, line: 861, baseType: !321, size: 16, offset: 48)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !829, file: !438, line: 862, baseType: !145, size: 32, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !829, file: !438, line: 863, baseType: !122, size: 32, offset: 96)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !820, file: !438, line: 874, baseType: !118, size: 64, offset: 960)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !820, file: !438, line: 876, baseType: !122, size: 32, offset: 1024)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !820, file: !438, line: 876, baseType: !122, size: 32, offset: 1056)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !820, file: !438, line: 878, baseType: !145, size: 32, offset: 1088)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !820, file: !438, line: 879, baseType: !145, size: 32, offset: 1120)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !820, file: !438, line: 881, baseType: !145, size: 32, offset: 1152)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !820, file: !438, line: 881, baseType: !145, size: 32, offset: 1184)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !820, file: !438, line: 883, baseType: !608, size: 64, offset: 1216)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !820, file: !438, line: 884, baseType: !284, size: 64, offset: 1280)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !653, file: !438, line: 1107, baseType: !122, size: 32, offset: 2688)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !653, file: !438, line: 1110, baseType: !122, size: 32, offset: 2720)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !653, file: !438, line: 1113, baseType: !321, size: 16, offset: 2752)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !653, file: !438, line: 1113, baseType: !321, size: 16, offset: 2768)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !653, file: !438, line: 1116, baseType: !308, size: 8, offset: 2784)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !653, file: !438, line: 1117, baseType: !642, size: 8, offset: 2792)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !653, file: !438, line: 1120, baseType: !321, size: 16, offset: 2800)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !653, file: !438, line: 1121, baseType: !122, size: 32, offset: 2816)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !653, file: !438, line: 1122, baseType: !122, size: 32, offset: 2848)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !653, file: !438, line: 1123, baseType: !122, size: 32, offset: 2880)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !653, file: !438, line: 1124, baseType: !122, size: 32, offset: 2912)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !653, file: !438, line: 1125, baseType: !122, size: 32, offset: 2944)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !653, file: !438, line: 1126, baseType: !122, size: 32, offset: 2976)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !653, file: !438, line: 1127, baseType: !122, size: 32, offset: 3008)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !653, file: !438, line: 1128, baseType: !122, size: 32, offset: 3040)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !653, file: !438, line: 1129, baseType: !122, size: 32, offset: 3072)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !653, file: !438, line: 1130, baseType: !122, size: 32, offset: 3104)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !653, file: !438, line: 1131, baseType: !321, size: 16, offset: 3136)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !653, file: !438, line: 1132, baseType: !308, size: 8, offset: 3152)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !653, file: !438, line: 1133, baseType: !308, size: 8, offset: 3160)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !653, file: !438, line: 1134, baseType: !867, size: 24, offset: 3168)
!867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 24, elements: !142)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !653, file: !438, line: 1135, baseType: !308, size: 8, offset: 3192)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !653, file: !438, line: 1138, baseType: !284, size: 64, offset: 3200)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !653, file: !438, line: 1139, baseType: !308, size: 8, offset: 3264)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !653, file: !438, line: 1140, baseType: !308, size: 8, offset: 3272)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !653, file: !438, line: 1141, baseType: !308, size: 8, offset: 3280)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !653, file: !438, line: 1142, baseType: !308, size: 8, offset: 3288)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !653, file: !438, line: 1143, baseType: !308, size: 8, offset: 3296)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !653, file: !438, line: 1144, baseType: !876, size: 64, offset: 3304)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 64, elements: !756)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !653, file: !438, line: 1145, baseType: !876, size: 64, offset: 3368)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !653, file: !438, line: 1148, baseType: !308, size: 8, offset: 3432)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !653, file: !438, line: 1149, baseType: !308, size: 8, offset: 3440)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !653, file: !438, line: 1152, baseType: !308, size: 8, offset: 3448)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !653, file: !438, line: 1152, baseType: !308, size: 8, offset: 3456)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !653, file: !438, line: 1153, baseType: !308, size: 8, offset: 3464)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !653, file: !438, line: 1154, baseType: !321, size: 16, offset: 3472)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !653, file: !438, line: 1154, baseType: !321, size: 16, offset: 3488)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !653, file: !438, line: 1155, baseType: !321, size: 16, offset: 3504)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !653, file: !438, line: 1155, baseType: !321, size: 16, offset: 3520)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !653, file: !438, line: 1156, baseType: !308, size: 8, offset: 3536)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !653, file: !438, line: 1157, baseType: !308, size: 8, offset: 3544)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !653, file: !438, line: 1159, baseType: !308, size: 8, offset: 3552)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !653, file: !438, line: 1160, baseType: !308, size: 8, offset: 3560)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !653, file: !438, line: 1161, baseType: !308, size: 8, offset: 3568)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !653, file: !438, line: 1162, baseType: !308, size: 8, offset: 3576)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !653, file: !438, line: 1165, baseType: !145, size: 32, offset: 3584)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !653, file: !438, line: 1166, baseType: !145, size: 32, offset: 3616)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !653, file: !438, line: 1167, baseType: !145, size: 32, offset: 3648)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !653, file: !438, line: 1168, baseType: !145, size: 32, offset: 3680)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !653, file: !438, line: 1171, baseType: !321, size: 16, offset: 3712)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !653, file: !438, line: 1171, baseType: !321, size: 16, offset: 3728)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !653, file: !438, line: 1172, baseType: !145, size: 32, offset: 3744)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !653, file: !438, line: 1173, baseType: !122, size: 32, offset: 3776)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !653, file: !438, line: 1174, baseType: !122, size: 32, offset: 3808)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !653, file: !438, line: 1177, baseType: !903, size: 1024, offset: 3840)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !438, line: 963, size: 1024, elements: !904)
!904 = !{!905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !928, !929}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !903, file: !438, line: 965, baseType: !145, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !903, file: !438, line: 968, baseType: !122, size: 32, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !903, file: !438, line: 971, baseType: !122, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !903, file: !438, line: 974, baseType: !122, size: 32, offset: 96)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !903, file: !438, line: 977, baseType: !141, size: 96, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !903, file: !438, line: 979, baseType: !141, size: 96, offset: 224)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !903, file: !438, line: 982, baseType: !145, size: 32, offset: 320)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !903, file: !438, line: 987, baseType: !598, size: 64, offset: 352)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !903, file: !438, line: 989, baseType: !122, size: 32, offset: 416)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !903, file: !438, line: 994, baseType: !145, size: 32, offset: 448)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !903, file: !438, line: 995, baseType: !145, size: 32, offset: 480)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !903, file: !438, line: 997, baseType: !308, size: 8, offset: 512)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !903, file: !438, line: 998, baseType: !806, size: 56, offset: 520)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !903, file: !438, line: 1000, baseType: !122, size: 32, offset: 576)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !903, file: !438, line: 1003, baseType: !598, size: 64, offset: 608)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !903, file: !438, line: 1006, baseType: !145, size: 32, offset: 672)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !903, file: !438, line: 1009, baseType: !122, size: 32, offset: 704)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !903, file: !438, line: 1012, baseType: !598, size: 64, offset: 736)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !903, file: !438, line: 1015, baseType: !598, size: 64, offset: 800)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !903, file: !438, line: 1018, baseType: !145, size: 32, offset: 864)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !903, file: !438, line: 1019, baseType: !926, size: 64, offset: 896)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !438, line: 63, flags: DIFlagFwdDecl)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !903, file: !438, line: 1023, baseType: !122, size: 32, offset: 960)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !903, file: !438, line: 1024, baseType: !145, size: 32, offset: 992)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !653, file: !438, line: 1179, baseType: !931, size: 320, offset: 4864)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !438, line: 1043, size: 320, elements: !932)
!932 = !{!933, !934, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !931, file: !438, line: 1044, baseType: !308, size: 8)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !931, file: !438, line: 1045, baseType: !935, size: 16, offset: 8)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 16, elements: !599)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !931, file: !438, line: 1048, baseType: !308, size: 8, offset: 24)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !931, file: !438, line: 1049, baseType: !122, size: 32, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !931, file: !438, line: 1049, baseType: !122, size: 32, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !931, file: !438, line: 1052, baseType: !122, size: 32, offset: 96)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !931, file: !438, line: 1052, baseType: !122, size: 32, offset: 128)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !931, file: !438, line: 1053, baseType: !308, size: 8, offset: 160)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !931, file: !438, line: 1054, baseType: !867, size: 24, offset: 168)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !931, file: !438, line: 1057, baseType: !122, size: 32, offset: 192)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !931, file: !438, line: 1057, baseType: !122, size: 32, offset: 224)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !931, file: !438, line: 1060, baseType: !122, size: 32, offset: 256)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !931, file: !438, line: 1060, baseType: !122, size: 32, offset: 288)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !609, file: !438, line: 1247, baseType: !948, size: 64, offset: 2176)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !438, line: 60, flags: DIFlagFwdDecl)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !609, file: !438, line: 1251, baseType: !951, size: 31872, offset: 2240)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !438, line: 403, size: 31872, elements: !952)
!952 = !{!953, !1036, !1056, !1065, !1085, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1225, !1226, !1227, !1231, !1247, !1248}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !951, file: !438, line: 404, baseType: !954, size: 1984)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !438, line: 259, size: 1984, elements: !955)
!955 = !{!956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !973, !1031}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !954, file: !438, line: 260, baseType: !308, size: 8)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !954, file: !438, line: 263, baseType: !308, size: 8, offset: 8)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !954, file: !438, line: 266, baseType: !308, size: 8, offset: 16)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !954, file: !438, line: 267, baseType: !308, size: 8, offset: 24)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !954, file: !438, line: 269, baseType: !308, size: 8, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !954, file: !438, line: 270, baseType: !308, size: 8, offset: 40)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !954, file: !438, line: 276, baseType: !308, size: 8, offset: 48)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !954, file: !438, line: 279, baseType: !308, size: 8, offset: 56)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !954, file: !438, line: 280, baseType: !321, size: 16, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !954, file: !438, line: 280, baseType: !321, size: 16, offset: 80)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !954, file: !438, line: 281, baseType: !122, size: 32, offset: 96)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !954, file: !438, line: 284, baseType: !308, size: 8, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !954, file: !438, line: 285, baseType: !308, size: 8, offset: 136)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !954, file: !438, line: 287, baseType: !970, size: 48, offset: 144)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 48, elements: !971)
!971 = !{!972}
!972 = !DISubrange(count: 6)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !954, file: !438, line: 290, baseType: !974, size: 1280, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !800, line: 174, baseType: !975)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !800, line: 166, size: 1280, elements: !976)
!976 = !{!977, !978, !979, !980, !981, !982, !983, !1030}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !975, file: !800, line: 167, baseType: !145, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !975, file: !800, line: 167, baseType: !145, size: 32, offset: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !975, file: !800, line: 168, baseType: !337, size: 512, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !975, file: !800, line: 169, baseType: !337, size: 512, offset: 576)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !975, file: !800, line: 170, baseType: !122, size: 32, offset: 1088)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !975, file: !800, line: 171, baseType: !122, size: 32, offset: 1120)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !975, file: !800, line: 172, baseType: !984, size: 64, offset: 1152)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !800, line: 72, size: 3072, elements: !986)
!986 = !{!987, !988, !989, !990, !991, !1000, !1001, !1026, !1027, !1028, !1029}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !985, file: !800, line: 73, baseType: !145, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !985, file: !800, line: 73, baseType: !145, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !985, file: !800, line: 74, baseType: !145, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !985, file: !800, line: 75, baseType: !145, size: 32, offset: 96)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !985, file: !800, line: 77, baseType: !992, size: 128, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !993, line: 95, baseType: !994)
!993 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !993, line: 92, size: 128, elements: !995)
!995 = !{!996, !997, !998, !999}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !994, file: !993, line: 93, baseType: !122, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !994, file: !993, line: 93, baseType: !122, size: 32, offset: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !994, file: !993, line: 94, baseType: !122, size: 32, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !994, file: !993, line: 94, baseType: !122, size: 32, offset: 96)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !985, file: !800, line: 77, baseType: !992, size: 128, offset: 256)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !985, file: !800, line: 79, baseType: !1002, size: 2304, offset: 384)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1003, size: 2304, elements: !480)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !800, line: 67, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !800, line: 55, size: 576, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1022, !1023, !1024, !1025}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1004, file: !800, line: 56, baseType: !321, size: 16)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1004, file: !800, line: 56, baseType: !321, size: 16, offset: 16)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1004, file: !800, line: 58, baseType: !122, size: 32, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1004, file: !800, line: 59, baseType: !122, size: 32, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1004, file: !800, line: 59, baseType: !122, size: 32, offset: 96)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1004, file: !800, line: 60, baseType: !598, size: 64, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1004, file: !800, line: 60, baseType: !598, size: 64, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1004, file: !800, line: 61, baseType: !1014, size: 64, offset: 256)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !800, line: 47, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !800, line: 44, size: 96, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1016, file: !800, line: 45, baseType: !122, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1016, file: !800, line: 45, baseType: !122, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1016, file: !800, line: 46, baseType: !321, size: 16, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1016, file: !800, line: 46, baseType: !321, size: 16, offset: 80)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1004, file: !800, line: 62, baseType: !1014, size: 64, offset: 320)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1004, file: !800, line: 64, baseType: !1014, size: 64, offset: 384)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1004, file: !800, line: 65, baseType: !598, size: 64, offset: 448)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1004, file: !800, line: 66, baseType: !598, size: 64, offset: 512)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !985, file: !800, line: 80, baseType: !141, size: 96, offset: 2688)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !985, file: !800, line: 80, baseType: !141, size: 96, offset: 2784)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !985, file: !800, line: 81, baseType: !141, size: 96, offset: 2880)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !985, file: !800, line: 83, baseType: !141, size: 96, offset: 2976)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !975, file: !800, line: 173, baseType: !118, size: 64, offset: 1216)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !954, file: !438, line: 291, baseType: !1032, size: 512, offset: 1472)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !800, line: 178, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !800, line: 176, size: 512, elements: !1034)
!1034 = !{!1035}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1033, file: !800, line: 177, baseType: !337, size: 512)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !951, file: !438, line: 406, baseType: !1037, size: 64, offset: 1984)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !438, line: 80, size: 1472, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1038, file: !438, line: 81, baseType: !118, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1038, file: !438, line: 82, baseType: !118, size: 64, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1038, file: !438, line: 83, baseType: !6, size: 32, offset: 128)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1038, file: !438, line: 84, baseType: !6, size: 32, offset: 160)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1038, file: !438, line: 86, baseType: !6, size: 32, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1038, file: !438, line: 87, baseType: !6, size: 32, offset: 224)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1038, file: !438, line: 88, baseType: !6, size: 32, offset: 256)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1038, file: !438, line: 89, baseType: !6, size: 32, offset: 288)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1038, file: !438, line: 90, baseType: !6, size: 32, offset: 320)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1038, file: !438, line: 91, baseType: !6, size: 32, offset: 352)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1038, file: !438, line: 92, baseType: !6, size: 32, offset: 384)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1038, file: !438, line: 93, baseType: !6, size: 32, offset: 416)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1038, file: !438, line: 95, baseType: !1053, size: 1024, offset: 448)
!1053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 1024, elements: !1054)
!1054 = !{!1055}
!1055 = !DISubrange(count: 128)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !951, file: !438, line: 407, baseType: !1057, size: 64, offset: 2048)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !438, line: 98, size: 1216, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063, !1064}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1058, file: !438, line: 100, baseType: !118, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1058, file: !438, line: 101, baseType: !118, size: 64, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1058, file: !438, line: 103, baseType: !6, size: 32, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1058, file: !438, line: 104, baseType: !6, size: 32, offset: 160)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1058, file: !438, line: 106, baseType: !1053, size: 1024, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !951, file: !438, line: 408, baseType: !1066, size: 512, offset: 2112)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !438, line: 109, size: 512, elements: !1067)
!1067 = !{!1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1066, file: !438, line: 111, baseType: !145, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1066, file: !438, line: 112, baseType: !145, size: 32, offset: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1066, file: !438, line: 115, baseType: !145, size: 32, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1066, file: !438, line: 116, baseType: !145, size: 32, offset: 96)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1066, file: !438, line: 117, baseType: !145, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1066, file: !438, line: 118, baseType: !145, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1066, file: !438, line: 119, baseType: !145, size: 32, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1066, file: !438, line: 120, baseType: !145, size: 32, offset: 224)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1066, file: !438, line: 121, baseType: !145, size: 32, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1066, file: !438, line: 122, baseType: !145, size: 32, offset: 288)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1066, file: !438, line: 125, baseType: !145, size: 32, offset: 320)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1066, file: !438, line: 126, baseType: !145, size: 32, offset: 352)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1066, file: !438, line: 127, baseType: !321, size: 16, offset: 384)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1066, file: !438, line: 128, baseType: !321, size: 16, offset: 400)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1066, file: !438, line: 129, baseType: !145, size: 32, offset: 416)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1066, file: !438, line: 130, baseType: !145, size: 32, offset: 448)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1066, file: !438, line: 131, baseType: !145, size: 32, offset: 480)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !951, file: !438, line: 409, baseType: !1086, size: 576, offset: 2624)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !438, line: 134, size: 576, elements: !1087)
!1087 = !{!1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1086, file: !438, line: 135, baseType: !145, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1086, file: !438, line: 136, baseType: !145, size: 32, offset: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1086, file: !438, line: 137, baseType: !145, size: 32, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1086, file: !438, line: 138, baseType: !145, size: 32, offset: 96)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1086, file: !438, line: 139, baseType: !145, size: 32, offset: 128)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1086, file: !438, line: 140, baseType: !145, size: 32, offset: 160)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1086, file: !438, line: 141, baseType: !145, size: 32, offset: 192)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1086, file: !438, line: 142, baseType: !145, size: 32, offset: 224)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1086, file: !438, line: 143, baseType: !122, size: 32, offset: 256)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1086, file: !438, line: 144, baseType: !145, size: 32, offset: 288)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1086, file: !438, line: 145, baseType: !145, size: 32, offset: 320)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1086, file: !438, line: 147, baseType: !145, size: 32, offset: 352)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1086, file: !438, line: 148, baseType: !145, size: 32, offset: 384)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1086, file: !438, line: 149, baseType: !145, size: 32, offset: 416)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1086, file: !438, line: 150, baseType: !145, size: 32, offset: 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1086, file: !438, line: 151, baseType: !145, size: 32, offset: 480)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1086, file: !438, line: 152, baseType: !326, size: 64, offset: 512)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !951, file: !438, line: 411, baseType: !145, size: 32, offset: 3200)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !951, file: !438, line: 411, baseType: !145, size: 32, offset: 3232)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !951, file: !438, line: 411, baseType: !145, size: 32, offset: 3264)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !951, file: !438, line: 412, baseType: !122, size: 32, offset: 3296)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !951, file: !438, line: 413, baseType: !145, size: 32, offset: 3328)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !951, file: !438, line: 413, baseType: !145, size: 32, offset: 3360)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !951, file: !438, line: 415, baseType: !145, size: 32, offset: 3392)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !951, file: !438, line: 415, baseType: !145, size: 32, offset: 3424)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !951, file: !438, line: 416, baseType: !321, size: 16, offset: 3456)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !951, file: !438, line: 416, baseType: !321, size: 16, offset: 3472)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !951, file: !438, line: 418, baseType: !122, size: 32, offset: 3488)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !951, file: !438, line: 418, baseType: !122, size: 32, offset: 3520)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !951, file: !438, line: 421, baseType: !122, size: 32, offset: 3552)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !951, file: !438, line: 421, baseType: !122, size: 32, offset: 3584)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !951, file: !438, line: 421, baseType: !122, size: 32, offset: 3616)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !951, file: !438, line: 425, baseType: !321, size: 16, offset: 3648)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !951, file: !438, line: 425, baseType: !321, size: 16, offset: 3664)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !951, file: !438, line: 425, baseType: !321, size: 16, offset: 3680)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !951, file: !438, line: 426, baseType: !321, size: 16, offset: 3696)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !951, file: !438, line: 428, baseType: !321, size: 16, offset: 3712)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !951, file: !438, line: 428, baseType: !321, size: 16, offset: 3728)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !951, file: !438, line: 431, baseType: !145, size: 32, offset: 3744)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !951, file: !438, line: 433, baseType: !321, size: 16, offset: 3776)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !951, file: !438, line: 435, baseType: !321, size: 16, offset: 3792)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !951, file: !438, line: 437, baseType: !321, size: 16, offset: 3808)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !951, file: !438, line: 439, baseType: !321, size: 16, offset: 3824)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !951, file: !438, line: 441, baseType: !321, size: 16, offset: 3840)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !951, file: !438, line: 443, baseType: !321, size: 16, offset: 3856)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !951, file: !438, line: 449, baseType: !145, size: 32, offset: 3872)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !951, file: !438, line: 453, baseType: !145, size: 32, offset: 3904)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !951, file: !438, line: 458, baseType: !321, size: 16, offset: 3936)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !951, file: !438, line: 462, baseType: !321, size: 16, offset: 3952)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !951, file: !438, line: 467, baseType: !145, size: 32, offset: 3968)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !951, file: !438, line: 467, baseType: !145, size: 32, offset: 4000)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !951, file: !438, line: 469, baseType: !321, size: 16, offset: 4032)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !951, file: !438, line: 469, baseType: !321, size: 16, offset: 4048)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !951, file: !438, line: 469, baseType: !321, size: 16, offset: 4064)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !951, file: !438, line: 469, baseType: !321, size: 16, offset: 4080)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !951, file: !438, line: 474, baseType: !321, size: 16, offset: 4096)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !951, file: !438, line: 475, baseType: !308, size: 8, offset: 4112)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !951, file: !438, line: 476, baseType: !308, size: 8, offset: 4120)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !951, file: !438, line: 481, baseType: !145, size: 32, offset: 4128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !951, file: !438, line: 486, baseType: !145, size: 32, offset: 4160)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !951, file: !438, line: 491, baseType: !145, size: 32, offset: 4192)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !951, file: !438, line: 496, baseType: !321, size: 16, offset: 4224)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !951, file: !438, line: 498, baseType: !321, size: 16, offset: 4240)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !951, file: !438, line: 501, baseType: !321, size: 16, offset: 4256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !951, file: !438, line: 502, baseType: !321, size: 16, offset: 4272)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !951, file: !438, line: 508, baseType: !321, size: 16, offset: 4288)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !951, file: !438, line: 513, baseType: !321, size: 16, offset: 4304)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !951, file: !438, line: 515, baseType: !321, size: 16, offset: 4320)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !951, file: !438, line: 515, baseType: !321, size: 16, offset: 4336)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !951, file: !438, line: 519, baseType: !992, size: 128, offset: 4352)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !951, file: !438, line: 519, baseType: !992, size: 128, offset: 4480)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !951, file: !438, line: 520, baseType: !1160, size: 128, offset: 4608)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !993, line: 89, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !993, line: 86, size: 128, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1161, file: !993, line: 87, baseType: !145, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1161, file: !993, line: 87, baseType: !145, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1161, file: !993, line: 88, baseType: !145, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1161, file: !993, line: 88, baseType: !145, size: 32, offset: 96)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !951, file: !438, line: 523, baseType: !113, size: 128, offset: 4736)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !951, file: !438, line: 524, baseType: !321, size: 16, offset: 4864)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !951, file: !438, line: 527, baseType: !321, size: 16, offset: 4880)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !951, file: !438, line: 532, baseType: !122, size: 32, offset: 4896)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !951, file: !438, line: 532, baseType: !122, size: 32, offset: 4928)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !951, file: !438, line: 534, baseType: !122, size: 32, offset: 4960)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !951, file: !438, line: 538, baseType: !122, size: 32, offset: 4992)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !951, file: !438, line: 542, baseType: !145, size: 32, offset: 5024)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !951, file: !438, line: 545, baseType: !122, size: 32, offset: 5056)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !951, file: !438, line: 545, baseType: !122, size: 32, offset: 5088)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !951, file: !438, line: 545, baseType: !122, size: 32, offset: 5120)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !951, file: !438, line: 548, baseType: !122, size: 32, offset: 5152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !951, file: !438, line: 551, baseType: !321, size: 16, offset: 5184)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !951, file: !438, line: 551, baseType: !321, size: 16, offset: 5200)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !951, file: !438, line: 551, baseType: !321, size: 16, offset: 5216)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !951, file: !438, line: 551, baseType: !321, size: 16, offset: 5232)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !951, file: !438, line: 552, baseType: !321, size: 16, offset: 5248)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !951, file: !438, line: 552, baseType: !321, size: 16, offset: 5264)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !951, file: !438, line: 553, baseType: !122, size: 32, offset: 5280)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !951, file: !438, line: 553, baseType: !122, size: 32, offset: 5312)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !951, file: !438, line: 554, baseType: !321, size: 16, offset: 5344)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !951, file: !438, line: 554, baseType: !321, size: 16, offset: 5360)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !951, file: !438, line: 555, baseType: !122, size: 32, offset: 5376)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !951, file: !438, line: 555, baseType: !122, size: 32, offset: 5408)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !951, file: !438, line: 558, baseType: !307, size: 8192, offset: 5440)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !951, file: !438, line: 561, baseType: !145, size: 32, offset: 13632)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !951, file: !438, line: 562, baseType: !321, size: 16, offset: 13664)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !951, file: !438, line: 562, baseType: !321, size: 16, offset: 13680)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !951, file: !438, line: 565, baseType: !1196, size: 6144, offset: 13696)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 6144, elements: !1197)
!1197 = !{!1198}
!1198 = !DISubrange(count: 768)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !951, file: !438, line: 568, baseType: !479, size: 128, offset: 19840)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !951, file: !438, line: 569, baseType: !479, size: 128, offset: 19968)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !951, file: !438, line: 572, baseType: !308, size: 8, offset: 20096)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !951, file: !438, line: 573, baseType: !308, size: 8, offset: 20104)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !951, file: !438, line: 574, baseType: !308, size: 8, offset: 20112)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !951, file: !438, line: 575, baseType: !721, size: 40, offset: 20120)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !951, file: !438, line: 578, baseType: !145, size: 32, offset: 20160)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !951, file: !438, line: 579, baseType: !321, size: 16, offset: 20192)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !951, file: !438, line: 580, baseType: !321, size: 16, offset: 20208)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !951, file: !438, line: 581, baseType: !122, size: 32, offset: 20224)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !951, file: !438, line: 582, baseType: !122, size: 32, offset: 20256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !951, file: !438, line: 585, baseType: !321, size: 16, offset: 20288)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !951, file: !438, line: 585, baseType: !321, size: 16, offset: 20304)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !951, file: !438, line: 586, baseType: !122, size: 32, offset: 20320)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !951, file: !438, line: 589, baseType: !321, size: 16, offset: 20352)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !951, file: !438, line: 589, baseType: !321, size: 16, offset: 20368)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !951, file: !438, line: 590, baseType: !145, size: 32, offset: 20384)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !951, file: !438, line: 593, baseType: !321, size: 16, offset: 20416)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !951, file: !438, line: 593, baseType: !321, size: 16, offset: 20432)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !951, file: !438, line: 594, baseType: !321, size: 16, offset: 20448)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !951, file: !438, line: 594, baseType: !321, size: 16, offset: 20464)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !951, file: !438, line: 595, baseType: !122, size: 32, offset: 20480)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !951, file: !438, line: 596, baseType: !122, size: 32, offset: 20512)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !951, file: !438, line: 597, baseType: !1223, size: 64, offset: 20544)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !62, line: 41, flags: DIFlagFwdDecl)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !951, file: !438, line: 600, baseType: !145, size: 32, offset: 20608)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !951, file: !438, line: 601, baseType: !122, size: 32, offset: 20640)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !951, file: !438, line: 604, baseType: !1228, size: 256, offset: 20672)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 256, elements: !1229)
!1229 = !{!1230}
!1230 = !DISubrange(count: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !951, file: !438, line: 607, baseType: !1232, size: 10880, offset: 20928)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !438, line: 364, size: 10880, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1232, file: !438, line: 365, baseType: !954, size: 1984)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1232, file: !438, line: 367, baseType: !307, size: 8192, offset: 1984)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1232, file: !438, line: 369, baseType: !321, size: 16, offset: 10176)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1232, file: !438, line: 369, baseType: !321, size: 16, offset: 10192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1232, file: !438, line: 370, baseType: !321, size: 16, offset: 10208)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1232, file: !438, line: 370, baseType: !321, size: 16, offset: 10224)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1232, file: !438, line: 372, baseType: !122, size: 32, offset: 10240)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1232, file: !438, line: 373, baseType: !122, size: 32, offset: 10272)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1232, file: !438, line: 375, baseType: !867, size: 24, offset: 10304)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1232, file: !438, line: 376, baseType: !308, size: 8, offset: 10328)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1232, file: !438, line: 378, baseType: !308, size: 8, offset: 10336)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1232, file: !438, line: 379, baseType: !867, size: 24, offset: 10344)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1232, file: !438, line: 381, baseType: !337, size: 512, offset: 10368)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !951, file: !438, line: 609, baseType: !145, size: 32, offset: 31808)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !951, file: !438, line: 610, baseType: !145, size: 32, offset: 31840)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !609, file: !438, line: 1252, baseType: !1250, size: 256, offset: 34112)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !438, line: 158, size: 256, elements: !1251)
!1251 = !{!1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1250, file: !438, line: 159, baseType: !145, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1250, file: !438, line: 160, baseType: !122, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1250, file: !438, line: 161, baseType: !122, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1250, file: !438, line: 162, baseType: !122, size: 32, offset: 96)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1250, file: !438, line: 163, baseType: !145, size: 32, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1250, file: !438, line: 164, baseType: !321, size: 16, offset: 160)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1250, file: !438, line: 165, baseType: !321, size: 16, offset: 176)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1250, file: !438, line: 166, baseType: !122, size: 32, offset: 192)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1250, file: !438, line: 167, baseType: !122, size: 32, offset: 224)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !609, file: !438, line: 1254, baseType: !113, size: 128, offset: 34368)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !609, file: !438, line: 1255, baseType: !113, size: 128, offset: 34496)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !609, file: !438, line: 1257, baseType: !118, size: 64, offset: 34624)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !609, file: !438, line: 1258, baseType: !118, size: 64, offset: 34688)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !609, file: !438, line: 1259, baseType: !118, size: 64, offset: 34752)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !609, file: !438, line: 1260, baseType: !118, size: 64, offset: 34816)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !609, file: !438, line: 1262, baseType: !118, size: 64, offset: 34880)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !609, file: !438, line: 1265, baseType: !1269, size: 64, offset: 34944)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !438, line: 1265, flags: DIFlagFwdDecl)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !609, file: !438, line: 1266, baseType: !321, size: 16, offset: 35008)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !609, file: !438, line: 1267, baseType: !321, size: 16, offset: 35024)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !609, file: !438, line: 1270, baseType: !145, size: 32, offset: 35040)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !609, file: !438, line: 1271, baseType: !113, size: 128, offset: 35072)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !609, file: !438, line: 1274, baseType: !1276, size: 128, offset: 35200)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !438, line: 650, size: 128, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1282}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1276, file: !438, line: 651, baseType: !141, size: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1276, file: !438, line: 652, baseType: !308, size: 8, offset: 96)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1276, file: !438, line: 652, baseType: !308, size: 8, offset: 104)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1276, file: !438, line: 652, baseType: !308, size: 8, offset: 112)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1276, file: !438, line: 652, baseType: !308, size: 8, offset: 120)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !609, file: !438, line: 1275, baseType: !1284, size: 1472, offset: 35328)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !438, line: 676, size: 1472, elements: !1285)
!1285 = !{!1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1298, !1308, !1309, !1310, !1311, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1284, file: !438, line: 679, baseType: !1276, size: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1284, file: !438, line: 680, baseType: !321, size: 16, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1284, file: !438, line: 680, baseType: !321, size: 16, offset: 144)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1284, file: !438, line: 680, baseType: !321, size: 16, offset: 160)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1284, file: !438, line: 680, baseType: !321, size: 16, offset: 176)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1284, file: !438, line: 681, baseType: !321, size: 16, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1284, file: !438, line: 681, baseType: !321, size: 16, offset: 208)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1284, file: !438, line: 681, baseType: !321, size: 16, offset: 224)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1284, file: !438, line: 681, baseType: !321, size: 16, offset: 240)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1284, file: !438, line: 682, baseType: !321, size: 16, offset: 256)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1284, file: !438, line: 682, baseType: !1297, size: 48, offset: 272)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 48, elements: !142)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1284, file: !438, line: 685, baseType: !1299, size: 192, offset: 320)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !438, line: 633, size: 192, elements: !1300)
!1300 = !{!1301, !1302, !1303, !1304, !1305, !1306, !1307}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1299, file: !438, line: 634, baseType: !321, size: 16)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1299, file: !438, line: 634, baseType: !321, size: 16, offset: 16)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1299, file: !438, line: 635, baseType: !321, size: 16, offset: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1299, file: !438, line: 635, baseType: !321, size: 16, offset: 48)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1299, file: !438, line: 636, baseType: !122, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1299, file: !438, line: 636, baseType: !122, size: 32, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1299, file: !438, line: 637, baseType: !1223, size: 64, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1284, file: !438, line: 686, baseType: !321, size: 16, offset: 512)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1284, file: !438, line: 686, baseType: !321, size: 16, offset: 528)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1284, file: !438, line: 687, baseType: !122, size: 32, offset: 544)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1284, file: !438, line: 688, baseType: !1312, size: 448, offset: 576)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !438, line: 674, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !438, line: 659, size: 448, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1313, file: !438, line: 660, baseType: !122, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1313, file: !438, line: 661, baseType: !122, size: 32, offset: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1313, file: !438, line: 662, baseType: !122, size: 32, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1313, file: !438, line: 663, baseType: !122, size: 32, offset: 96)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1313, file: !438, line: 664, baseType: !122, size: 32, offset: 128)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1313, file: !438, line: 665, baseType: !122, size: 32, offset: 160)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1313, file: !438, line: 666, baseType: !122, size: 32, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1313, file: !438, line: 667, baseType: !122, size: 32, offset: 224)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1313, file: !438, line: 668, baseType: !122, size: 32, offset: 256)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1313, file: !438, line: 669, baseType: !122, size: 32, offset: 288)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1313, file: !438, line: 670, baseType: !145, size: 32, offset: 320)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1313, file: !438, line: 671, baseType: !122, size: 32, offset: 352)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1313, file: !438, line: 672, baseType: !122, size: 32, offset: 384)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1313, file: !438, line: 673, baseType: !321, size: 16, offset: 416)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1313, file: !438, line: 673, baseType: !321, size: 16, offset: 432)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1284, file: !438, line: 692, baseType: !122, size: 32, offset: 1024)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1284, file: !438, line: 697, baseType: !122, size: 32, offset: 1056)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1284, file: !438, line: 703, baseType: !145, size: 32, offset: 1088)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1284, file: !438, line: 704, baseType: !321, size: 16, offset: 1120)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1284, file: !438, line: 704, baseType: !321, size: 16, offset: 1136)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1284, file: !438, line: 705, baseType: !321, size: 16, offset: 1152)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1284, file: !438, line: 706, baseType: !321, size: 16, offset: 1168)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1284, file: !438, line: 707, baseType: !321, size: 16, offset: 1184)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1284, file: !438, line: 708, baseType: !321, size: 16, offset: 1200)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1284, file: !438, line: 709, baseType: !321, size: 16, offset: 1216)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1284, file: !438, line: 709, baseType: !321, size: 16, offset: 1232)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1284, file: !438, line: 709, baseType: !321, size: 16, offset: 1248)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1284, file: !438, line: 709, baseType: !321, size: 16, offset: 1264)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1284, file: !438, line: 710, baseType: !321, size: 16, offset: 1280)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1284, file: !438, line: 711, baseType: !321, size: 16, offset: 1296)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1284, file: !438, line: 712, baseType: !122, size: 32, offset: 1312)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1284, file: !438, line: 713, baseType: !122, size: 32, offset: 1344)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1284, file: !438, line: 713, baseType: !122, size: 32, offset: 1376)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1284, file: !438, line: 713, baseType: !122, size: 32, offset: 1408)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1284, file: !438, line: 713, baseType: !122, size: 32, offset: 1440)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !609, file: !438, line: 1278, baseType: !1351, size: 64, offset: 36800)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !438, line: 1197, size: 64, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1351, file: !438, line: 1199, baseType: !122, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1351, file: !438, line: 1200, baseType: !308, size: 8, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1351, file: !438, line: 1201, baseType: !308, size: 8, offset: 40)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1351, file: !438, line: 1202, baseType: !321, size: 16, offset: 48)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !609, file: !438, line: 1281, baseType: !436, size: 64, offset: 36864)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !609, file: !438, line: 1284, baseType: !1359, size: 192, offset: 36928)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !438, line: 1208, size: 192, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1359, file: !438, line: 1209, baseType: !141, size: 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1359, file: !438, line: 1210, baseType: !145, size: 32, offset: 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1359, file: !438, line: 1210, baseType: !145, size: 32, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1359, file: !438, line: 1210, baseType: !145, size: 32, offset: 160)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !609, file: !438, line: 1287, baseType: !1366, size: 64, offset: 37120)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !62, line: 431, flags: DIFlagFwdDecl)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !609, file: !438, line: 1289, baseType: !580, size: 64, offset: 37184)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !609, file: !438, line: 1290, baseType: !580, size: 64, offset: 37248)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !609, file: !438, line: 1293, baseType: !974, size: 1280, offset: 37312)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !609, file: !438, line: 1294, baseType: !1032, size: 512, offset: 38592)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !609, file: !438, line: 1295, baseType: !799, size: 512, offset: 39104)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !609, file: !438, line: 1298, baseType: !1374, size: 64, offset: 39616)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !438, line: 1298, flags: DIFlagFwdDecl)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !605, file: !604, line: 53, baseType: !145, size: 32, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !605, file: !604, line: 54, baseType: !145, size: 32, offset: 96)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !605, file: !604, line: 55, baseType: !145, size: 32, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !605, file: !604, line: 55, baseType: !145, size: 32, offset: 160)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !605, file: !604, line: 56, baseType: !308, size: 8, offset: 192)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !605, file: !604, line: 56, baseType: !308, size: 8, offset: 200)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !605, file: !604, line: 57, baseType: !308, size: 8, offset: 208)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !605, file: !604, line: 57, baseType: !308, size: 8, offset: 216)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !605, file: !604, line: 59, baseType: !321, size: 16, offset: 224)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !605, file: !604, line: 59, baseType: !321, size: 16, offset: 240)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !605, file: !604, line: 59, baseType: !321, size: 16, offset: 256)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !605, file: !604, line: 61, baseType: !321, size: 16, offset: 272)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !605, file: !604, line: 63, baseType: !145, size: 32, offset: 288)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !285, file: !11, line: 293, baseType: !113, size: 128, offset: 11200)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !285, file: !11, line: 294, baseType: !1391, size: 64, offset: 11328)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !11, line: 113, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !11, line: 108, size: 256, elements: !1394)
!1394 = !{!1395, !1397, !1398, !1399, !1400}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1393, file: !11, line: 109, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1393, file: !11, line: 109, baseType: !1396, size: 64, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1393, file: !11, line: 110, baseType: !284, size: 64, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1393, file: !11, line: 111, baseType: !145, size: 32, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1393, file: !11, line: 112, baseType: !122, size: 32, offset: 224)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "BNode", file: !125, line: 77, baseType: !136)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigNode", file: !25, line: 97, baseType: !185)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !36, line: 114, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !36, line: 78, size: 2048, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412, !1413, !1414, !1451, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1407, file: !36, line: 79, baseType: !288, size: 960)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1407, file: !36, line: 80, baseType: !352, size: 64, offset: 960)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !1407, file: !36, line: 82, baseType: !113, size: 128, offset: 1024)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !1407, file: !36, line: 83, baseType: !113, size: 128, offset: 1152)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !1407, file: !36, line: 84, baseType: !182, size: 64, offset: 1280)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !1407, file: !36, line: 92, baseType: !1415, size: 64, offset: 1344)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !36, line: 76, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !36, line: 48, size: 2624, elements: !1418)
!1418 = !{!1419, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1417, file: !36, line: 49, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1417, file: !36, line: 49, baseType: !1420, size: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1417, file: !36, line: 50, baseType: !326, size: 64, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1417, file: !36, line: 51, baseType: !1420, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !1417, file: !36, line: 52, baseType: !113, size: 128, offset: 256)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1417, file: !36, line: 53, baseType: !337, size: 512, offset: 384)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !1417, file: !36, line: 55, baseType: !122, size: 32, offset: 896)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1417, file: !36, line: 56, baseType: !141, size: 96, offset: 928)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1417, file: !36, line: 57, baseType: !141, size: 96, offset: 1024)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !1417, file: !36, line: 58, baseType: !1430, size: 288, offset: 1120)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 288, elements: !1431)
!1431 = !{!143, !143}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1417, file: !36, line: 60, baseType: !145, size: 32, offset: 1408)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !1417, file: !36, line: 62, baseType: !141, size: 96, offset: 1440)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !1417, file: !36, line: 63, baseType: !141, size: 96, offset: 1536)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !1417, file: !36, line: 64, baseType: !488, size: 512, offset: 1632)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !1417, file: !36, line: 65, baseType: !122, size: 32, offset: 2144)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1417, file: !36, line: 67, baseType: !122, size: 32, offset: 2176)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1417, file: !36, line: 67, baseType: !122, size: 32, offset: 2208)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !1417, file: !36, line: 68, baseType: !122, size: 32, offset: 2240)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1417, file: !36, line: 68, baseType: !122, size: 32, offset: 2272)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !1417, file: !36, line: 68, baseType: !122, size: 32, offset: 2304)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !1417, file: !36, line: 69, baseType: !122, size: 32, offset: 2336)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !1417, file: !36, line: 69, baseType: !122, size: 32, offset: 2368)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !1417, file: !36, line: 70, baseType: !122, size: 32, offset: 2400)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !1417, file: !36, line: 70, baseType: !122, size: 32, offset: 2432)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1417, file: !36, line: 72, baseType: !141, size: 96, offset: 2464)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1417, file: !36, line: 73, baseType: !145, size: 32, offset: 2560)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !1417, file: !36, line: 74, baseType: !321, size: 16, offset: 2592)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1417, file: !36, line: 75, baseType: !1450, size: 16, offset: 2608)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 16, elements: !643)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !1407, file: !36, line: 93, baseType: !1452, size: 64, offset: 1408)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !1454, line: 56, size: 1472, elements: !1455)
!1454 = !DIFile(filename: "blender/source/blender/editors/include/ED_armature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1453, file: !1454, line: 57, baseType: !1452, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1453, file: !1454, line: 57, baseType: !1452, size: 64, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1453, file: !1454, line: 58, baseType: !331, size: 64, offset: 128)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1453, file: !1454, line: 59, baseType: !1452, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1453, file: !1454, line: 62, baseType: !118, size: 64, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1453, file: !1454, line: 64, baseType: !337, size: 512, offset: 320)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !1453, file: !1454, line: 65, baseType: !122, size: 32, offset: 832)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1453, file: !1454, line: 70, baseType: !141, size: 96, offset: 864)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1453, file: !1454, line: 71, baseType: !141, size: 96, offset: 960)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1453, file: !1454, line: 75, baseType: !145, size: 32, offset: 1056)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1453, file: !1454, line: 76, baseType: !145, size: 32, offset: 1088)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1453, file: !1454, line: 78, baseType: !122, size: 32, offset: 1120)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1453, file: !1454, line: 78, baseType: !122, size: 32, offset: 1152)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !1453, file: !1454, line: 79, baseType: !122, size: 32, offset: 1184)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1453, file: !1454, line: 79, baseType: !122, size: 32, offset: 1216)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !1453, file: !1454, line: 79, baseType: !122, size: 32, offset: 1248)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !1453, file: !1454, line: 80, baseType: !122, size: 32, offset: 1280)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !1453, file: !1454, line: 80, baseType: !122, size: 32, offset: 1312)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !1453, file: !1454, line: 81, baseType: !122, size: 32, offset: 1344)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !1453, file: !1454, line: 81, baseType: !122, size: 32, offset: 1376)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "oldlength", scope: !1453, file: !1454, line: 83, baseType: !122, size: 32, offset: 1408)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !1453, file: !1454, line: 85, baseType: !321, size: 16, offset: 1440)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !1407, file: !36, line: 95, baseType: !118, size: 64, offset: 1472)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1407, file: !36, line: 97, baseType: !145, size: 32, offset: 1536)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !1407, file: !36, line: 98, baseType: !145, size: 32, offset: 1568)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !1407, file: !36, line: 99, baseType: !145, size: 32, offset: 1600)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1407, file: !36, line: 100, baseType: !145, size: 32, offset: 1632)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !1407, file: !36, line: 101, baseType: !321, size: 16, offset: 1664)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !1407, file: !36, line: 102, baseType: !321, size: 16, offset: 1680)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !1407, file: !36, line: 104, baseType: !6, size: 32, offset: 1696)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1407, file: !36, line: 105, baseType: !6, size: 32, offset: 1728)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !1407, file: !36, line: 105, baseType: !6, size: 32, offset: 1760)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !1407, file: !36, line: 108, baseType: !321, size: 16, offset: 1792)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !1407, file: !36, line: 108, baseType: !321, size: 16, offset: 1808)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !1407, file: !36, line: 109, baseType: !321, size: 16, offset: 1824)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !1407, file: !36, line: 109, baseType: !321, size: 16, offset: 1840)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !1407, file: !36, line: 110, baseType: !145, size: 32, offset: 1856)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !1407, file: !36, line: 110, baseType: !145, size: 32, offset: 1888)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !1407, file: !36, line: 111, baseType: !145, size: 32, offset: 1920)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !1407, file: !36, line: 111, baseType: !145, size: 32, offset: 1952)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !1407, file: !36, line: 112, baseType: !145, size: 32, offset: 1984)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !1407, file: !36, line: 112, baseType: !145, size: 32, offset: 2016)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "BGraph", file: !125, line: 62, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGraph", file: !125, line: 51, size: 576, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "arcs", scope: !1500, file: !125, line: 52, baseType: !113, size: 128)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1500, file: !125, line: 53, baseType: !113, size: 128, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1500, file: !125, line: 55, baseType: !122, size: 32, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "free_arc", scope: !1500, file: !125, line: 58, baseType: !124, size: 64, offset: 320)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1500, file: !125, line: 59, baseType: !160, size: 64, offset: 384)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symmetry", scope: !1500, file: !125, line: 60, baseType: !165, size: 64, offset: 448)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "axial_symmetry", scope: !1500, file: !125, line: 61, baseType: !175, size: 64, offset: 512)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "RetargetParam", file: !3, line: 63, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RetargetParam", file: !3, line: 58, size: 256, elements: !1512)
!1512 = !{!1513, !1514, !1533, !1534}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "rigg", scope: !1511, file: !3, line: 59, baseType: !108, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "iarc", scope: !1511, file: !3, line: 60, baseType: !1515, size: 64, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigArc", file: !25, line: 114, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigArc", file: !25, line: 99, size: 704, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1517, file: !25, line: 100, baseType: !118, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1517, file: !25, line: 100, baseType: !118, size: 64, offset: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1517, file: !25, line: 101, baseType: !1403, size: 64, offset: 128)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1517, file: !25, line: 101, baseType: !1403, size: 64, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1517, file: !25, line: 102, baseType: !145, size: 32, offset: 256)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1517, file: !25, line: 104, baseType: !122, size: 32, offset: 288)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_level", scope: !1517, file: !25, line: 106, baseType: !145, size: 32, offset: 320)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_group", scope: !1517, file: !25, line: 107, baseType: !145, size: 32, offset: 352)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flag", scope: !1517, file: !25, line: 108, baseType: !145, size: 32, offset: 384)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !1517, file: !25, line: 111, baseType: !113, size: 128, offset: 448)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1517, file: !25, line: 112, baseType: !145, size: 32, offset: 576)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "link_mesh", scope: !1517, file: !25, line: 113, baseType: !1531, size: 64, offset: 640)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReebArc", file: !200, line: 120, baseType: !211)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "inode_start", scope: !1511, file: !3, line: 61, baseType: !1403, size: 64, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1511, file: !3, line: 62, baseType: !1535, size: 64, offset: 192)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1537, line: 69, baseType: !1538)
!1537 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !1539, line: 44, flags: DIFlagFwdDecl)
!1539 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "BArc", file: !125, line: 89, baseType: !130)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditBone", file: !1454, line: 86, baseType: !1453)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !281, line: 94, size: 192, elements: !1546)
!1546 = !{!1547, !1548, !1549}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1545, file: !281, line: 94, baseType: !118, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1545, file: !281, line: 94, baseType: !118, size: 64, offset: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1545, file: !281, line: 94, baseType: !118, size: 64, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "BArcIterator", file: !125, line: 123, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BArcIterator", file: !125, line: 109, size: 704, elements: !1553)
!1553 = !{!1554, !1559, !1561, !1566, !1568, !1570, !1572, !1577, !1579, !1580, !1581, !1582}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1552, file: !125, line: 110, baseType: !1555, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "HeadFct", file: !125, line: 101, baseType: !1556)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!118, !118}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1552, file: !125, line: 111, baseType: !1560, size: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "TailFct", file: !125, line: 102, baseType: !1556)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !1552, file: !125, line: 112, baseType: !1562, size: 64, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "PeekFct", file: !125, line: 103, baseType: !1563)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!118, !118, !145}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1552, file: !125, line: 113, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "NextFct", file: !125, line: 104, baseType: !1556)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "nextN", scope: !1552, file: !125, line: 114, baseType: !1569, size: 64, offset: 256)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "NextNFct", file: !125, line: 105, baseType: !1563)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1552, file: !125, line: 115, baseType: !1571, size: 64, offset: 320)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviousFct", file: !125, line: 106, baseType: !1556)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !1552, file: !125, line: 116, baseType: !1573, size: 64, offset: 384)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "StoppedFct", file: !125, line: 107, baseType: !1574)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!145, !118}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1552, file: !125, line: 118, baseType: !1578, size: 64, offset: 448)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1552, file: !125, line: 118, baseType: !1578, size: 64, offset: 512)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1552, file: !125, line: 119, baseType: !122, size: 32, offset: 576)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1552, file: !125, line: 121, baseType: !145, size: 32, offset: 608)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1552, file: !125, line: 122, baseType: !145, size: 32, offset: 640)
!1583 = !{!0}
!1584 = !{i32 7, !"Dwarf Version", i32 4}
!1585 = !{i32 2, !"Debug Info Version", i32 3}
!1586 = !{i32 1, !"wchar_size", i32 4}
!1587 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1588 = distinct !DISubprogram(name: "rollBoneByQuat", scope: !3, file: !3, line: 214, type: !1589, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!122, !1542, !1578, !1578}
!1591 = !{}
!1592 = !DILocalVariable(name: "bone", arg: 1, scope: !1588, file: !3, line: 214, type: !1542)
!1593 = !DILocation(line: 214, column: 32, scope: !1588)
!1594 = !DILocalVariable(name: "old_up_axis", arg: 2, scope: !1588, file: !3, line: 214, type: !1578)
!1595 = !DILocation(line: 214, column: 44, scope: !1588)
!1596 = !DILocalVariable(name: "qrot", arg: 3, scope: !1588, file: !3, line: 214, type: !1578)
!1597 = !DILocation(line: 214, column: 66, scope: !1588)
!1598 = !DILocalVariable(name: "new_up_axis", scope: !1588, file: !3, line: 216, type: !141)
!1599 = !DILocation(line: 216, column: 8, scope: !1588)
!1600 = !DILocation(line: 218, column: 13, scope: !1588)
!1601 = !DILocation(line: 218, column: 26, scope: !1588)
!1602 = !DILocation(line: 218, column: 2, scope: !1588)
!1603 = !DILocation(line: 219, column: 12, scope: !1588)
!1604 = !DILocation(line: 219, column: 18, scope: !1588)
!1605 = !DILocation(line: 219, column: 2, scope: !1588)
!1606 = !DILocation(line: 221, column: 29, scope: !1588)
!1607 = !DILocation(line: 221, column: 35, scope: !1588)
!1608 = !DILocation(line: 221, column: 9, scope: !1588)
!1609 = !DILocation(line: 221, column: 2, scope: !1588)
!1610 = distinct !DISubprogram(name: "copy_v3_v3", scope: !1611, file: !1611, line: 64, type: !1612, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1611 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1612 = !DISubroutineType(types: !1613)
!1613 = !{null, !1578, !1614}
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!1616 = !DILocalVariable(name: "r", arg: 1, scope: !1610, file: !1611, line: 64, type: !1578)
!1617 = !DILocation(line: 64, column: 31, scope: !1610)
!1618 = !DILocalVariable(name: "a", arg: 2, scope: !1610, file: !1611, line: 64, type: !1614)
!1619 = !DILocation(line: 64, column: 49, scope: !1610)
!1620 = !DILocation(line: 66, column: 9, scope: !1610)
!1621 = !DILocation(line: 66, column: 2, scope: !1610)
!1622 = !DILocation(line: 66, column: 7, scope: !1610)
!1623 = !DILocation(line: 67, column: 9, scope: !1610)
!1624 = !DILocation(line: 67, column: 2, scope: !1610)
!1625 = !DILocation(line: 67, column: 7, scope: !1610)
!1626 = !DILocation(line: 68, column: 9, scope: !1610)
!1627 = !DILocation(line: 68, column: 2, scope: !1610)
!1628 = !DILocation(line: 68, column: 7, scope: !1610)
!1629 = !DILocation(line: 69, column: 1, scope: !1610)
!1630 = distinct !DISubprogram(name: "RIG_freeRigGraph", scope: !3, file: !3, line: 231, type: !1631, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{null, !1498}
!1633 = !DILocalVariable(name: "rg", arg: 1, scope: !1630, file: !3, line: 231, type: !1498)
!1634 = !DILocation(line: 231, column: 31, scope: !1630)
!1635 = !DILocalVariable(name: "rigg", scope: !1630, file: !3, line: 233, type: !108)
!1636 = !DILocation(line: 233, column: 12, scope: !1630)
!1637 = !DILocation(line: 233, column: 31, scope: !1630)
!1638 = !DILocation(line: 233, column: 19, scope: !1630)
!1639 = !DILocalVariable(name: "node", scope: !1630, file: !3, line: 234, type: !1401)
!1640 = !DILocation(line: 234, column: 9, scope: !1630)
!1641 = !DILocalVariable(name: "arc", scope: !1630, file: !3, line: 235, type: !1540)
!1642 = !DILocation(line: 235, column: 8, scope: !1630)
!1643 = !DILocation(line: 237, column: 21, scope: !1630)
!1644 = !DILocation(line: 237, column: 27, scope: !1630)
!1645 = !DILocation(line: 237, column: 2, scope: !1630)
!1646 = !DILocation(line: 238, column: 26, scope: !1630)
!1647 = !DILocation(line: 238, column: 32, scope: !1630)
!1648 = !DILocation(line: 238, column: 2, scope: !1630)
!1649 = !DILocation(line: 240, column: 6, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1630, file: !3, line: 240, column: 6)
!1651 = !DILocation(line: 240, column: 12, scope: !1650)
!1652 = !DILocation(line: 240, column: 6, scope: !1630)
!1653 = !DILocation(line: 241, column: 18, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1650, file: !3, line: 240, column: 23)
!1655 = !DILocation(line: 241, column: 24, scope: !1654)
!1656 = !DILocation(line: 241, column: 3, scope: !1654)
!1657 = !DILocation(line: 242, column: 2, scope: !1654)
!1658 = !DILocation(line: 244, column: 13, scope: !1659)
!1659 = distinct !DILexicalBlock(scope: !1630, file: !3, line: 244, column: 2)
!1660 = !DILocation(line: 244, column: 17, scope: !1659)
!1661 = !DILocation(line: 244, column: 22, scope: !1659)
!1662 = !DILocation(line: 244, column: 11, scope: !1659)
!1663 = !DILocation(line: 244, column: 7, scope: !1659)
!1664 = !DILocation(line: 244, column: 29, scope: !1665)
!1665 = distinct !DILexicalBlock(scope: !1659, file: !3, line: 244, column: 2)
!1666 = !DILocation(line: 244, column: 2, scope: !1659)
!1667 = !DILocation(line: 245, column: 18, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1665, file: !3, line: 244, column: 51)
!1669 = !DILocation(line: 245, column: 3, scope: !1668)
!1670 = !DILocation(line: 246, column: 2, scope: !1668)
!1671 = !DILocation(line: 244, column: 40, scope: !1665)
!1672 = !DILocation(line: 244, column: 45, scope: !1665)
!1673 = !DILocation(line: 244, column: 38, scope: !1665)
!1674 = !DILocation(line: 244, column: 2, scope: !1665)
!1675 = distinct !{!1675, !1666, !1676}
!1676 = !DILocation(line: 246, column: 2, scope: !1659)
!1677 = !DILocation(line: 247, column: 17, scope: !1630)
!1678 = !DILocation(line: 247, column: 21, scope: !1630)
!1679 = !DILocation(line: 247, column: 2, scope: !1630)
!1680 = !DILocation(line: 249, column: 14, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1630, file: !3, line: 249, column: 2)
!1682 = !DILocation(line: 249, column: 18, scope: !1681)
!1683 = !DILocation(line: 249, column: 24, scope: !1681)
!1684 = !DILocation(line: 249, column: 12, scope: !1681)
!1685 = !DILocation(line: 249, column: 7, scope: !1681)
!1686 = !DILocation(line: 249, column: 31, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !1681, file: !3, line: 249, column: 2)
!1688 = !DILocation(line: 249, column: 2, scope: !1681)
!1689 = !DILocation(line: 250, column: 16, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1687, file: !3, line: 249, column: 56)
!1691 = !DILocation(line: 250, column: 29, scope: !1690)
!1692 = !DILocation(line: 250, column: 3, scope: !1690)
!1693 = !DILocation(line: 251, column: 2, scope: !1690)
!1694 = !DILocation(line: 249, column: 44, scope: !1687)
!1695 = !DILocation(line: 249, column: 50, scope: !1687)
!1696 = !DILocation(line: 249, column: 42, scope: !1687)
!1697 = !DILocation(line: 249, column: 2, scope: !1687)
!1698 = distinct !{!1698, !1688, !1699}
!1699 = !DILocation(line: 251, column: 2, scope: !1681)
!1700 = !DILocation(line: 252, column: 17, scope: !1630)
!1701 = !DILocation(line: 252, column: 21, scope: !1630)
!1702 = !DILocation(line: 252, column: 2, scope: !1630)
!1703 = !DILocation(line: 254, column: 17, scope: !1630)
!1704 = !DILocation(line: 254, column: 23, scope: !1630)
!1705 = !DILocation(line: 254, column: 2, scope: !1630)
!1706 = !DILocation(line: 256, column: 17, scope: !1630)
!1707 = !DILocation(line: 256, column: 23, scope: !1630)
!1708 = !DILocation(line: 256, column: 2, scope: !1630)
!1709 = !DILocation(line: 257, column: 17, scope: !1630)
!1710 = !DILocation(line: 257, column: 23, scope: !1630)
!1711 = !DILocation(line: 257, column: 2, scope: !1630)
!1712 = !DILocation(line: 259, column: 6, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1630, file: !3, line: 259, column: 6)
!1714 = !DILocation(line: 259, column: 12, scope: !1713)
!1715 = !DILocation(line: 259, column: 17, scope: !1713)
!1716 = !DILocation(line: 259, column: 6, scope: !1630)
!1717 = !DILocation(line: 260, column: 17, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1713, file: !3, line: 259, column: 38)
!1719 = !DILocation(line: 260, column: 23, scope: !1718)
!1720 = !DILocation(line: 260, column: 3, scope: !1718)
!1721 = !DILocation(line: 261, column: 3, scope: !1718)
!1722 = !DILocation(line: 261, column: 13, scope: !1718)
!1723 = !DILocation(line: 261, column: 19, scope: !1718)
!1724 = !DILocation(line: 262, column: 2, scope: !1718)
!1725 = !DILocation(line: 264, column: 2, scope: !1630)
!1726 = !DILocation(line: 264, column: 12, scope: !1630)
!1727 = !DILocation(line: 265, column: 1, scope: !1630)
!1728 = distinct !DISubprogram(name: "RIG_freeRigArc", scope: !3, file: !3, line: 226, type: !1729, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{null, !1540}
!1731 = !DILocalVariable(name: "arc", arg: 1, scope: !1728, file: !3, line: 226, type: !1540)
!1732 = !DILocation(line: 226, column: 34, scope: !1728)
!1733 = !DILocation(line: 228, column: 28, scope: !1728)
!1734 = !DILocation(line: 228, column: 34, scope: !1728)
!1735 = !DILocation(line: 228, column: 2, scope: !1728)
!1736 = !DILocation(line: 229, column: 1, scope: !1728)
!1737 = distinct !DISubprogram(name: "RIG_printArcBones", scope: !3, file: !3, line: 1248, type: !1738, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{null, !1515}
!1740 = !DILocalVariable(name: "arc", arg: 1, scope: !1737, file: !3, line: 1248, type: !1515)
!1741 = !DILocation(line: 1248, column: 32, scope: !1737)
!1742 = !DILocalVariable(name: "edge", scope: !1737, file: !3, line: 1250, type: !1743)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigEdge", file: !25, line: 124, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigEdge", file: !25, line: 116, size: 640, elements: !1746)
!1746 = !{!1747, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1745, file: !25, line: 117, baseType: !1748, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1745, file: !25, line: 117, baseType: !1748, size: 64, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1745, file: !25, line: 118, baseType: !141, size: 96, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1745, file: !25, line: 118, baseType: !141, size: 96, offset: 224)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1745, file: !25, line: 119, baseType: !122, size: 32, offset: 320)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1745, file: !25, line: 120, baseType: !122, size: 32, offset: 352)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "up_angle", scope: !1745, file: !25, line: 121, baseType: !122, size: 32, offset: 384)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !1745, file: !25, line: 122, baseType: !1452, size: 64, offset: 448)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "up_axis", scope: !1745, file: !25, line: 123, baseType: !141, size: 96, offset: 512)
!1757 = !DILocation(line: 1250, column: 11, scope: !1737)
!1758 = !DILocation(line: 1252, column: 14, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 1252, column: 2)
!1760 = !DILocation(line: 1252, column: 19, scope: !1759)
!1761 = !DILocation(line: 1252, column: 25, scope: !1759)
!1762 = !DILocation(line: 1252, column: 12, scope: !1759)
!1763 = !DILocation(line: 1252, column: 7, scope: !1759)
!1764 = !DILocation(line: 1252, column: 32, scope: !1765)
!1765 = distinct !DILexicalBlock(scope: !1759, file: !3, line: 1252, column: 2)
!1766 = !DILocation(line: 1252, column: 2, scope: !1759)
!1767 = !DILocation(line: 1253, column: 7, scope: !1768)
!1768 = distinct !DILexicalBlock(scope: !1769, file: !3, line: 1253, column: 7)
!1769 = distinct !DILexicalBlock(scope: !1765, file: !3, line: 1252, column: 57)
!1770 = !DILocation(line: 1253, column: 13, scope: !1768)
!1771 = !DILocation(line: 1253, column: 7, scope: !1769)
!1772 = !DILocation(line: 1254, column: 18, scope: !1768)
!1773 = !DILocation(line: 1254, column: 24, scope: !1768)
!1774 = !DILocation(line: 1254, column: 30, scope: !1768)
!1775 = !DILocation(line: 1254, column: 4, scope: !1768)
!1776 = !DILocation(line: 1256, column: 4, scope: !1768)
!1777 = !DILocation(line: 1257, column: 2, scope: !1769)
!1778 = !DILocation(line: 1252, column: 45, scope: !1765)
!1779 = !DILocation(line: 1252, column: 51, scope: !1765)
!1780 = !DILocation(line: 1252, column: 43, scope: !1765)
!1781 = !DILocation(line: 1252, column: 2, scope: !1765)
!1782 = distinct !{!1782, !1766, !1783}
!1783 = !DILocation(line: 1257, column: 2, scope: !1759)
!1784 = !DILocation(line: 1258, column: 2, scope: !1737)
!1785 = !DILocation(line: 1259, column: 1, scope: !1737)
!1786 = distinct !DISubprogram(name: "RIG_printArc", scope: !3, file: !3, line: 1295, type: !1787, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{null, !108, !1515}
!1789 = !DILocalVariable(name: "rg", arg: 1, scope: !1786, file: !3, line: 1295, type: !108)
!1790 = !DILocation(line: 1295, column: 29, scope: !1786)
!1791 = !DILocalVariable(name: "arc", arg: 2, scope: !1786, file: !3, line: 1295, type: !1515)
!1792 = !DILocation(line: 1295, column: 41, scope: !1786)
!1793 = !DILocalVariable(name: "edge", scope: !1786, file: !3, line: 1297, type: !1743)
!1794 = !DILocation(line: 1297, column: 11, scope: !1786)
!1795 = !DILocation(line: 1299, column: 27, scope: !1786)
!1796 = !DILocation(line: 1299, column: 32, scope: !1786)
!1797 = !DILocation(line: 1299, column: 2, scope: !1786)
!1798 = !DILocation(line: 1301, column: 14, scope: !1799)
!1799 = distinct !DILexicalBlock(scope: !1786, file: !3, line: 1301, column: 2)
!1800 = !DILocation(line: 1301, column: 19, scope: !1799)
!1801 = !DILocation(line: 1301, column: 25, scope: !1799)
!1802 = !DILocation(line: 1301, column: 12, scope: !1799)
!1803 = !DILocation(line: 1301, column: 7, scope: !1799)
!1804 = !DILocation(line: 1301, column: 32, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1799, file: !3, line: 1301, column: 2)
!1806 = !DILocation(line: 1301, column: 2, scope: !1799)
!1807 = !DILocation(line: 1302, column: 48, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1805, file: !3, line: 1301, column: 57)
!1809 = !DILocation(line: 1302, column: 54, scope: !1808)
!1810 = !DILocation(line: 1302, column: 63, scope: !1808)
!1811 = !DILocation(line: 1302, column: 69, scope: !1808)
!1812 = !DILocation(line: 1302, column: 78, scope: !1808)
!1813 = !DILocation(line: 1302, column: 84, scope: !1808)
!1814 = !DILocation(line: 1302, column: 3, scope: !1808)
!1815 = !DILocation(line: 1303, column: 29, scope: !1808)
!1816 = !DILocation(line: 1303, column: 35, scope: !1808)
!1817 = !DILocation(line: 1303, column: 3, scope: !1808)
!1818 = !DILocation(line: 1304, column: 28, scope: !1808)
!1819 = !DILocation(line: 1304, column: 34, scope: !1808)
!1820 = !DILocation(line: 1304, column: 40, scope: !1808)
!1821 = !DILocation(line: 1304, column: 3, scope: !1808)
!1822 = !DILocation(line: 1305, column: 7, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1808, file: !3, line: 1305, column: 7)
!1824 = !DILocation(line: 1305, column: 13, scope: !1823)
!1825 = !DILocation(line: 1305, column: 7, scope: !1808)
!1826 = !DILocation(line: 1306, column: 23, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1823, file: !3, line: 1305, column: 19)
!1828 = !DILocation(line: 1306, column: 29, scope: !1827)
!1829 = !DILocation(line: 1306, column: 35, scope: !1827)
!1830 = !DILocation(line: 1306, column: 4, scope: !1827)
!1831 = !DILocation(line: 1307, column: 24, scope: !1827)
!1832 = !DILocation(line: 1307, column: 28, scope: !1827)
!1833 = !DILocation(line: 1307, column: 34, scope: !1827)
!1834 = !DILocation(line: 1307, column: 4, scope: !1827)
!1835 = !DILocation(line: 1308, column: 3, scope: !1827)
!1836 = !DILocation(line: 1309, column: 2, scope: !1808)
!1837 = !DILocation(line: 1301, column: 45, scope: !1805)
!1838 = !DILocation(line: 1301, column: 51, scope: !1805)
!1839 = !DILocation(line: 1301, column: 43, scope: !1805)
!1840 = !DILocation(line: 1301, column: 2, scope: !1805)
!1841 = distinct !{!1841, !1806, !1842}
!1842 = !DILocation(line: 1309, column: 2, scope: !1799)
!1843 = !DILocation(line: 1310, column: 51, scope: !1786)
!1844 = !DILocation(line: 1310, column: 56, scope: !1786)
!1845 = !DILocation(line: 1310, column: 72, scope: !1786)
!1846 = !DILocation(line: 1310, column: 77, scope: !1786)
!1847 = !DILocation(line: 1310, column: 92, scope: !1786)
!1848 = !DILocation(line: 1310, column: 97, scope: !1786)
!1849 = !DILocation(line: 1310, column: 2, scope: !1786)
!1850 = !DILocation(line: 1312, column: 27, scope: !1786)
!1851 = !DILocation(line: 1312, column: 32, scope: !1786)
!1852 = !DILocation(line: 1312, column: 2, scope: !1786)
!1853 = !DILocation(line: 1313, column: 1, scope: !1786)
!1854 = distinct !DISubprogram(name: "RIG_printNode", scope: !3, file: !3, line: 1234, type: !1855, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{null, !1403, !1857}
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !308)
!1859 = !DILocalVariable(name: "node", arg: 1, scope: !1854, file: !3, line: 1234, type: !1403)
!1860 = !DILocation(line: 1234, column: 36, scope: !1854)
!1861 = !DILocalVariable(name: "name", arg: 2, scope: !1854, file: !3, line: 1234, type: !1857)
!1862 = !DILocation(line: 1234, column: 53, scope: !1854)
!1863 = !DILocation(line: 1236, column: 45, scope: !1854)
!1864 = !DILocation(line: 1236, column: 59, scope: !1854)
!1865 = !DILocation(line: 1236, column: 51, scope: !1854)
!1866 = !DILocation(line: 1236, column: 65, scope: !1854)
!1867 = !DILocation(line: 1236, column: 71, scope: !1854)
!1868 = !DILocation(line: 1236, column: 79, scope: !1854)
!1869 = !DILocation(line: 1236, column: 85, scope: !1854)
!1870 = !DILocation(line: 1236, column: 91, scope: !1854)
!1871 = !DILocation(line: 1236, column: 97, scope: !1854)
!1872 = !DILocation(line: 1236, column: 103, scope: !1854)
!1873 = !DILocation(line: 1236, column: 109, scope: !1854)
!1874 = !DILocation(line: 1236, column: 2, scope: !1854)
!1875 = !DILocation(line: 1238, column: 6, scope: !1876)
!1876 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 1238, column: 6)
!1877 = !DILocation(line: 1238, column: 12, scope: !1876)
!1878 = !DILocation(line: 1238, column: 26, scope: !1876)
!1879 = !DILocation(line: 1238, column: 6, scope: !1854)
!1880 = !DILocation(line: 1239, column: 7, scope: !1881)
!1881 = distinct !DILexicalBlock(scope: !1882, file: !3, line: 1239, column: 7)
!1882 = distinct !DILexicalBlock(scope: !1876, file: !3, line: 1238, column: 45)
!1883 = !DILocation(line: 1239, column: 13, scope: !1881)
!1884 = !DILocation(line: 1239, column: 27, scope: !1881)
!1885 = !DILocation(line: 1239, column: 7, scope: !1882)
!1886 = !DILocation(line: 1240, column: 4, scope: !1881)
!1887 = !DILocation(line: 1241, column: 12, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1881, file: !3, line: 1241, column: 12)
!1889 = !DILocation(line: 1241, column: 18, scope: !1888)
!1890 = !DILocation(line: 1241, column: 32, scope: !1888)
!1891 = !DILocation(line: 1241, column: 12, scope: !1881)
!1892 = !DILocation(line: 1242, column: 4, scope: !1888)
!1893 = !DILocation(line: 1244, column: 29, scope: !1882)
!1894 = !DILocation(line: 1244, column: 35, scope: !1882)
!1895 = !DILocation(line: 1244, column: 3, scope: !1882)
!1896 = !DILocation(line: 1245, column: 2, scope: !1882)
!1897 = !DILocation(line: 1246, column: 1, scope: !1854)
!1898 = distinct !DISubprogram(name: "RIG_printLinkedCtrl", scope: !3, file: !3, line: 1274, type: !1899, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1899 = !DISubroutineType(types: !1900)
!1900 = !{null, !108, !1542, !145}
!1901 = !DILocalVariable(name: "rg", arg: 1, scope: !1898, file: !3, line: 1274, type: !108)
!1902 = !DILocation(line: 1274, column: 43, scope: !1898)
!1903 = !DILocalVariable(name: "bone", arg: 2, scope: !1898, file: !3, line: 1274, type: !1542)
!1904 = !DILocation(line: 1274, column: 57, scope: !1898)
!1905 = !DILocalVariable(name: "tabs", arg: 3, scope: !1898, file: !3, line: 1274, type: !145)
!1906 = !DILocation(line: 1274, column: 67, scope: !1898)
!1907 = !DILocalVariable(name: "ctrl", scope: !1898, file: !3, line: 1276, type: !1908)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigControl", file: !25, line: 156, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigControl", file: !25, line: 145, size: 896, elements: !1911)
!1911 = !{!1912, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1910, file: !25, line: 146, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1910, file: !25, line: 146, baseType: !1913, size: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1910, file: !25, line: 147, baseType: !141, size: 96, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1910, file: !25, line: 147, baseType: !141, size: 96, offset: 224)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !1910, file: !25, line: 148, baseType: !1452, size: 64, offset: 320)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1910, file: !25, line: 149, baseType: !1452, size: 64, offset: 384)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "link_tail", scope: !1910, file: !25, line: 150, baseType: !1452, size: 64, offset: 448)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "up_axis", scope: !1910, file: !25, line: 151, baseType: !141, size: 96, offset: 512)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1910, file: !25, line: 152, baseType: !141, size: 96, offset: 608)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "qrot", scope: !1910, file: !25, line: 153, baseType: !479, size: 128, offset: 704)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1910, file: !25, line: 154, baseType: !145, size: 32, offset: 832)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "tail_mode", scope: !1910, file: !25, line: 155, baseType: !1925, size: 32, offset: 864)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkTailMode", file: !25, line: 143, baseType: !24)
!1926 = !DILocation(line: 1276, column: 14, scope: !1898)
!1927 = !DILocalVariable(name: "indent", scope: !1898, file: !3, line: 1277, type: !337)
!1928 = !DILocation(line: 1277, column: 7, scope: !1898)
!1929 = !DILocalVariable(name: "s", scope: !1898, file: !3, line: 1278, type: !467)
!1930 = !DILocation(line: 1278, column: 8, scope: !1898)
!1931 = !DILocation(line: 1278, column: 12, scope: !1898)
!1932 = !DILocalVariable(name: "i", scope: !1898, file: !3, line: 1279, type: !145)
!1933 = !DILocation(line: 1279, column: 6, scope: !1898)
!1934 = !DILocation(line: 1281, column: 9, scope: !1935)
!1935 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 1281, column: 2)
!1936 = !DILocation(line: 1281, column: 7, scope: !1935)
!1937 = !DILocation(line: 1281, column: 14, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1935, file: !3, line: 1281, column: 2)
!1939 = !DILocation(line: 1281, column: 18, scope: !1938)
!1940 = !DILocation(line: 1281, column: 16, scope: !1938)
!1941 = !DILocation(line: 1281, column: 2, scope: !1935)
!1942 = !DILocation(line: 1282, column: 3, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1938, file: !3, line: 1281, column: 29)
!1944 = !DILocation(line: 1282, column: 8, scope: !1943)
!1945 = !DILocation(line: 1283, column: 4, scope: !1943)
!1946 = !DILocation(line: 1284, column: 2, scope: !1943)
!1947 = !DILocation(line: 1281, column: 25, scope: !1938)
!1948 = !DILocation(line: 1281, column: 2, scope: !1938)
!1949 = distinct !{!1949, !1941, !1950}
!1950 = !DILocation(line: 1284, column: 2, scope: !1935)
!1951 = !DILocation(line: 1285, column: 2, scope: !1898)
!1952 = !DILocation(line: 1285, column: 7, scope: !1898)
!1953 = !DILocation(line: 1287, column: 14, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1898, file: !3, line: 1287, column: 2)
!1955 = !DILocation(line: 1287, column: 18, scope: !1954)
!1956 = !DILocation(line: 1287, column: 27, scope: !1954)
!1957 = !DILocation(line: 1287, column: 12, scope: !1954)
!1958 = !DILocation(line: 1287, column: 7, scope: !1954)
!1959 = !DILocation(line: 1287, column: 34, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 1287, column: 2)
!1961 = !DILocation(line: 1287, column: 2, scope: !1954)
!1962 = !DILocation(line: 1288, column: 7, scope: !1963)
!1963 = distinct !DILexicalBlock(scope: !1964, file: !3, line: 1288, column: 7)
!1964 = distinct !DILexicalBlock(scope: !1960, file: !3, line: 1287, column: 59)
!1965 = !DILocation(line: 1288, column: 13, scope: !1963)
!1966 = !DILocation(line: 1288, column: 21, scope: !1963)
!1967 = !DILocation(line: 1288, column: 18, scope: !1963)
!1968 = !DILocation(line: 1288, column: 7, scope: !1964)
!1969 = !DILocation(line: 1289, column: 18, scope: !1970)
!1970 = distinct !DILexicalBlock(scope: !1963, file: !3, line: 1288, column: 27)
!1971 = !DILocation(line: 1289, column: 24, scope: !1970)
!1972 = !DILocation(line: 1289, column: 4, scope: !1970)
!1973 = !DILocation(line: 1290, column: 24, scope: !1970)
!1974 = !DILocation(line: 1290, column: 28, scope: !1970)
!1975 = !DILocation(line: 1290, column: 34, scope: !1970)
!1976 = !DILocation(line: 1290, column: 40, scope: !1970)
!1977 = !DILocation(line: 1290, column: 45, scope: !1970)
!1978 = !DILocation(line: 1290, column: 4, scope: !1970)
!1979 = !DILocation(line: 1291, column: 3, scope: !1970)
!1980 = !DILocation(line: 1292, column: 2, scope: !1964)
!1981 = !DILocation(line: 1287, column: 47, scope: !1960)
!1982 = !DILocation(line: 1287, column: 53, scope: !1960)
!1983 = !DILocation(line: 1287, column: 45, scope: !1960)
!1984 = !DILocation(line: 1287, column: 2, scope: !1960)
!1985 = distinct !{!1985, !1961, !1986}
!1986 = !DILocation(line: 1292, column: 2, scope: !1954)
!1987 = !DILocation(line: 1293, column: 1, scope: !1898)
!1988 = distinct !DISubprogram(name: "RIG_printGraph", scope: !3, file: !3, line: 1315, type: !1989, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{null, !108}
!1991 = !DILocalVariable(name: "rg", arg: 1, scope: !1988, file: !3, line: 1315, type: !108)
!1992 = !DILocation(line: 1315, column: 31, scope: !1988)
!1993 = !DILocalVariable(name: "arc", scope: !1988, file: !3, line: 1317, type: !1515)
!1994 = !DILocation(line: 1317, column: 10, scope: !1988)
!1995 = !DILocation(line: 1319, column: 2, scope: !1988)
!1996 = !DILocation(line: 1320, column: 13, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1988, file: !3, line: 1320, column: 2)
!1998 = !DILocation(line: 1320, column: 17, scope: !1997)
!1999 = !DILocation(line: 1320, column: 22, scope: !1997)
!2000 = !DILocation(line: 1320, column: 11, scope: !1997)
!2001 = !DILocation(line: 1320, column: 7, scope: !1997)
!2002 = !DILocation(line: 1320, column: 29, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 1320, column: 2)
!2004 = !DILocation(line: 1320, column: 2, scope: !1997)
!2005 = !DILocation(line: 1321, column: 16, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 1320, column: 51)
!2007 = !DILocation(line: 1321, column: 20, scope: !2006)
!2008 = !DILocation(line: 1321, column: 3, scope: !2006)
!2009 = !DILocation(line: 1322, column: 3, scope: !2006)
!2010 = !DILocation(line: 1323, column: 2, scope: !2006)
!2011 = !DILocation(line: 1320, column: 40, scope: !2003)
!2012 = !DILocation(line: 1320, column: 45, scope: !2003)
!2013 = !DILocation(line: 1320, column: 38, scope: !2003)
!2014 = !DILocation(line: 1320, column: 2, scope: !2003)
!2015 = distinct !{!2015, !2004, !2016}
!2016 = !DILocation(line: 1323, column: 2, scope: !1997)
!2017 = !DILocation(line: 1325, column: 6, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !1988, file: !3, line: 1325, column: 6)
!2019 = !DILocation(line: 1325, column: 10, scope: !2018)
!2020 = !DILocation(line: 1325, column: 6, scope: !1988)
!2021 = !DILocation(line: 1326, column: 17, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !2018, file: !3, line: 1325, column: 16)
!2023 = !DILocation(line: 1326, column: 21, scope: !2022)
!2024 = !DILocation(line: 1326, column: 3, scope: !2022)
!2025 = !DILocation(line: 1327, column: 2, scope: !2022)
!2026 = !DILocation(line: 1329, column: 3, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2018, file: !3, line: 1328, column: 7)
!2028 = !DILocation(line: 1331, column: 1, scope: !1988)
!2029 = distinct !DISubprogram(name: "RIG_graphFromArmature", scope: !3, file: !3, line: 1335, type: !2030, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!108, !2032, !2034, !1405}
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !11, line: 295, baseType: !285)
!2036 = !DILocalVariable(name: "C", arg: 1, scope: !2029, file: !3, line: 1335, type: !2032)
!2037 = !DILocation(line: 1335, column: 49, scope: !2029)
!2038 = !DILocalVariable(name: "ob", arg: 2, scope: !2029, file: !3, line: 1335, type: !2034)
!2039 = !DILocation(line: 1335, column: 60, scope: !2029)
!2040 = !DILocalVariable(name: "arm", arg: 3, scope: !2029, file: !3, line: 1335, type: !1405)
!2041 = !DILocation(line: 1335, column: 75, scope: !2029)
!2042 = !DILocalVariable(name: "obedit", scope: !2029, file: !3, line: 1337, type: !2034)
!2043 = !DILocation(line: 1337, column: 10, scope: !2029)
!2044 = !DILocation(line: 1337, column: 40, scope: !2029)
!2045 = !DILocation(line: 1337, column: 19, scope: !2029)
!2046 = !DILocalVariable(name: "scene", scope: !2029, file: !3, line: 1338, type: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !438, line: 1299, baseType: !609)
!2049 = !DILocation(line: 1338, column: 9, scope: !2029)
!2050 = !DILocation(line: 1338, column: 32, scope: !2029)
!2051 = !DILocation(line: 1338, column: 17, scope: !2029)
!2052 = !DILocalVariable(name: "ebone", scope: !2029, file: !3, line: 1339, type: !1542)
!2053 = !DILocation(line: 1339, column: 12, scope: !2029)
!2054 = !DILocalVariable(name: "rg", scope: !2029, file: !3, line: 1340, type: !108)
!2055 = !DILocation(line: 1340, column: 12, scope: !2029)
!2056 = !DILocation(line: 1342, column: 7, scope: !2029)
!2057 = !DILocation(line: 1342, column: 5, scope: !2029)
!2058 = !DILocation(line: 1344, column: 6, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2029, file: !3, line: 1344, column: 6)
!2060 = !DILocation(line: 1344, column: 16, scope: !2059)
!2061 = !DILocation(line: 1344, column: 13, scope: !2059)
!2062 = !DILocation(line: 1344, column: 6, scope: !2029)
!2063 = !DILocation(line: 1345, column: 33, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !2059, file: !3, line: 1344, column: 20)
!2065 = !DILocation(line: 1345, column: 41, scope: !2064)
!2066 = !DILocation(line: 1345, column: 20, scope: !2064)
!2067 = !DILocation(line: 1345, column: 48, scope: !2064)
!2068 = !DILocation(line: 1345, column: 3, scope: !2064)
!2069 = !DILocation(line: 1345, column: 7, scope: !2064)
!2070 = !DILocation(line: 1345, column: 17, scope: !2064)
!2071 = !DILocation(line: 1346, column: 2, scope: !2064)
!2072 = !DILocation(line: 1348, column: 19, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2059, file: !3, line: 1347, column: 7)
!2074 = !DILocation(line: 1348, column: 3, scope: !2073)
!2075 = !DILocation(line: 1348, column: 7, scope: !2073)
!2076 = !DILocation(line: 1348, column: 17, scope: !2073)
!2077 = !DILocation(line: 1349, column: 17, scope: !2073)
!2078 = !DILocation(line: 1349, column: 21, scope: !2073)
!2079 = !DILocation(line: 1349, column: 33, scope: !2073)
!2080 = !DILocation(line: 1349, column: 38, scope: !2073)
!2081 = !DILocation(line: 1349, column: 3, scope: !2073)
!2082 = !DILocation(line: 1350, column: 3, scope: !2073)
!2083 = !DILocation(line: 1350, column: 7, scope: !2073)
!2084 = !DILocation(line: 1350, column: 12, scope: !2073)
!2085 = !DILocation(line: 1353, column: 11, scope: !2029)
!2086 = !DILocation(line: 1353, column: 2, scope: !2029)
!2087 = !DILocation(line: 1353, column: 6, scope: !2029)
!2088 = !DILocation(line: 1353, column: 9, scope: !2029)
!2089 = !DILocation(line: 1356, column: 15, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !2029, file: !3, line: 1356, column: 2)
!2091 = !DILocation(line: 1356, column: 19, scope: !2090)
!2092 = !DILocation(line: 1356, column: 30, scope: !2090)
!2093 = !DILocation(line: 1356, column: 13, scope: !2090)
!2094 = !DILocation(line: 1356, column: 7, scope: !2090)
!2095 = !DILocation(line: 1356, column: 37, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2090, file: !3, line: 1356, column: 2)
!2097 = !DILocation(line: 1356, column: 2, scope: !2090)
!2098 = !DILocation(line: 1357, column: 7, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !2100, file: !3, line: 1357, column: 7)
!2100 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 1356, column: 65)
!2101 = !DILocation(line: 1357, column: 14, scope: !2099)
!2102 = !DILocation(line: 1357, column: 21, scope: !2099)
!2103 = !DILocation(line: 1357, column: 7, scope: !2100)
!2104 = !DILocation(line: 1358, column: 25, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2099, file: !3, line: 1357, column: 30)
!2106 = !DILocation(line: 1358, column: 29, scope: !2105)
!2107 = !DILocation(line: 1358, column: 33, scope: !2105)
!2108 = !DILocation(line: 1358, column: 44, scope: !2105)
!2109 = !DILocation(line: 1358, column: 4, scope: !2105)
!2110 = !DILocation(line: 1359, column: 3, scope: !2105)
!2111 = !DILocation(line: 1360, column: 2, scope: !2100)
!2112 = !DILocation(line: 1356, column: 52, scope: !2096)
!2113 = !DILocation(line: 1356, column: 59, scope: !2096)
!2114 = !DILocation(line: 1356, column: 50, scope: !2096)
!2115 = !DILocation(line: 1356, column: 2, scope: !2096)
!2116 = distinct !{!2116, !2097, !2117}
!2117 = !DILocation(line: 1360, column: 2, scope: !2090)
!2118 = !DILocation(line: 1362, column: 34, scope: !2029)
!2119 = !DILocation(line: 1362, column: 24, scope: !2029)
!2120 = !DILocation(line: 1362, column: 2, scope: !2029)
!2121 = !DILocation(line: 1364, column: 24, scope: !2029)
!2122 = !DILocation(line: 1364, column: 2, scope: !2029)
!2123 = !DILocation(line: 1366, column: 27, scope: !2029)
!2124 = !DILocation(line: 1366, column: 2, scope: !2029)
!2125 = !DILocation(line: 1368, column: 35, scope: !2029)
!2126 = !DILocation(line: 1368, column: 25, scope: !2029)
!2127 = !DILocation(line: 1368, column: 2, scope: !2029)
!2128 = !DILocation(line: 1370, column: 15, scope: !2029)
!2129 = !DILocation(line: 1370, column: 2, scope: !2029)
!2130 = !DILocation(line: 1372, column: 33, scope: !2029)
!2131 = !DILocation(line: 1372, column: 23, scope: !2029)
!2132 = !DILocation(line: 1372, column: 46, scope: !2029)
!2133 = !DILocation(line: 1372, column: 50, scope: !2029)
!2134 = !DILocation(line: 1372, column: 37, scope: !2029)
!2135 = !DILocation(line: 1372, column: 56, scope: !2029)
!2136 = !DILocation(line: 1372, column: 63, scope: !2029)
!2137 = !DILocation(line: 1372, column: 77, scope: !2029)
!2138 = !DILocation(line: 1372, column: 2, scope: !2029)
!2139 = !DILocation(line: 1374, column: 28, scope: !2029)
!2140 = !DILocation(line: 1374, column: 2, scope: !2029)
!2141 = !DILocation(line: 1376, column: 34, scope: !2142)
!2142 = distinct !DILexicalBlock(scope: !2029, file: !3, line: 1376, column: 6)
!2143 = !DILocation(line: 1376, column: 24, scope: !2142)
!2144 = !DILocation(line: 1376, column: 6, scope: !2142)
!2145 = !DILocation(line: 1376, column: 6, scope: !2029)
!2146 = !DILocation(line: 1377, column: 3, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2142, file: !3, line: 1376, column: 39)
!2148 = !DILocation(line: 1378, column: 2, scope: !2147)
!2149 = !DILocation(line: 1380, column: 9, scope: !2029)
!2150 = !DILocation(line: 1380, column: 2, scope: !2029)
!2151 = distinct !DISubprogram(name: "newRigGraph", scope: !3, file: !3, line: 269, type: !2152, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!108}
!2154 = !DILocalVariable(name: "rg", scope: !2151, file: !3, line: 271, type: !108)
!2155 = !DILocation(line: 271, column: 12, scope: !2151)
!2156 = !DILocalVariable(name: "totthread", scope: !2151, file: !3, line: 272, type: !145)
!2157 = !DILocation(line: 272, column: 6, scope: !2151)
!2158 = !DILocation(line: 274, column: 7, scope: !2151)
!2159 = !DILocation(line: 274, column: 5, scope: !2151)
!2160 = !DILocation(line: 276, column: 2, scope: !2151)
!2161 = !DILocation(line: 276, column: 6, scope: !2151)
!2162 = !DILocation(line: 276, column: 11, scope: !2151)
!2163 = !DILocation(line: 278, column: 18, scope: !2151)
!2164 = !DILocation(line: 278, column: 2, scope: !2151)
!2165 = !DILocation(line: 278, column: 6, scope: !2151)
!2166 = !DILocation(line: 278, column: 16, scope: !2151)
!2167 = !DILocation(line: 279, column: 21, scope: !2151)
!2168 = !DILocation(line: 279, column: 2, scope: !2151)
!2169 = !DILocation(line: 279, column: 6, scope: !2151)
!2170 = !DILocation(line: 279, column: 19, scope: !2151)
!2171 = !DILocation(line: 281, column: 2, scope: !2151)
!2172 = !DILocation(line: 281, column: 6, scope: !2151)
!2173 = !DILocation(line: 281, column: 15, scope: !2151)
!2174 = !DILocation(line: 282, column: 2, scope: !2151)
!2175 = !DILocation(line: 282, column: 6, scope: !2151)
!2176 = !DILocation(line: 282, column: 16, scope: !2151)
!2177 = !DILocation(line: 285, column: 12, scope: !2151)
!2178 = !DILocation(line: 290, column: 49, scope: !2151)
!2179 = !DILocation(line: 290, column: 23, scope: !2151)
!2180 = !DILocation(line: 290, column: 2, scope: !2151)
!2181 = !DILocation(line: 290, column: 6, scope: !2151)
!2182 = !DILocation(line: 290, column: 21, scope: !2151)
!2183 = !DILocation(line: 291, column: 39, scope: !2151)
!2184 = !DILocation(line: 291, column: 43, scope: !2151)
!2185 = !DILocation(line: 291, column: 18, scope: !2151)
!2186 = !DILocation(line: 291, column: 2, scope: !2151)
!2187 = !DILocation(line: 291, column: 6, scope: !2151)
!2188 = !DILocation(line: 291, column: 16, scope: !2151)
!2189 = !DILocation(line: 293, column: 9, scope: !2151)
!2190 = !DILocation(line: 293, column: 2, scope: !2151)
!2191 = distinct !DISubprogram(name: "RIG_arcFromBoneChain", scope: !3, file: !3, line: 1131, type: !2192, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{null, !108, !182, !1542, !1403, !673}
!2194 = !DILocalVariable(name: "rg", arg: 1, scope: !2191, file: !3, line: 1131, type: !108)
!2195 = !DILocation(line: 1131, column: 44, scope: !2191)
!2196 = !DILocalVariable(name: "list", arg: 2, scope: !2191, file: !3, line: 1131, type: !182)
!2197 = !DILocation(line: 1131, column: 58, scope: !2191)
!2198 = !DILocalVariable(name: "root_bone", arg: 3, scope: !2191, file: !3, line: 1131, type: !1542)
!2199 = !DILocation(line: 1131, column: 74, scope: !2191)
!2200 = !DILocalVariable(name: "starting_node", arg: 4, scope: !2191, file: !3, line: 1131, type: !1403)
!2201 = !DILocation(line: 1131, column: 94, scope: !2191)
!2202 = !DILocalVariable(name: "selected", arg: 5, scope: !2191, file: !3, line: 1131, type: !673)
!2203 = !DILocation(line: 1131, column: 114, scope: !2191)
!2204 = !DILocalVariable(name: "bone", scope: !2191, file: !3, line: 1133, type: !1542)
!2205 = !DILocation(line: 1133, column: 12, scope: !2191)
!2206 = !DILocalVariable(name: "last_bone", scope: !2191, file: !3, line: 1133, type: !1542)
!2207 = !DILocation(line: 1133, column: 19, scope: !2191)
!2208 = !DILocation(line: 1133, column: 31, scope: !2191)
!2209 = !DILocalVariable(name: "arc", scope: !2191, file: !3, line: 1134, type: !1515)
!2210 = !DILocation(line: 1134, column: 10, scope: !2191)
!2211 = !DILocalVariable(name: "contain_head", scope: !2191, file: !3, line: 1135, type: !145)
!2212 = !DILocation(line: 1135, column: 6, scope: !2191)
!2213 = !DILocation(line: 1137, column: 14, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 1137, column: 2)
!2215 = !DILocation(line: 1137, column: 12, scope: !2214)
!2216 = !DILocation(line: 1137, column: 7, scope: !2214)
!2217 = !DILocation(line: 1137, column: 25, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2214, file: !3, line: 1137, column: 2)
!2219 = !DILocation(line: 1137, column: 2, scope: !2214)
!2220 = !DILocalVariable(name: "nb_children", scope: !2221, file: !3, line: 1138, type: !145)
!2221 = distinct !DILexicalBlock(scope: !2218, file: !3, line: 1137, column: 72)
!2222 = !DILocation(line: 1138, column: 7, scope: !2221)
!2223 = !DILocation(line: 1140, column: 7, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 1140, column: 7)
!2225 = !DILocation(line: 1140, column: 16, scope: !2224)
!2226 = !DILocation(line: 1140, column: 21, scope: !2224)
!2227 = !DILocation(line: 1140, column: 25, scope: !2224)
!2228 = !DILocation(line: 1140, column: 31, scope: !2224)
!2229 = !DILocation(line: 1140, column: 36, scope: !2224)
!2230 = !DILocation(line: 1140, column: 7, scope: !2221)
!2231 = !DILocation(line: 1141, column: 9, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2233, file: !3, line: 1141, column: 8)
!2233 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 1140, column: 54)
!2234 = !DILocation(line: 1141, column: 15, scope: !2232)
!2235 = !DILocation(line: 1141, column: 20, scope: !2232)
!2236 = !DILocation(line: 1141, column: 38, scope: !2232)
!2237 = !DILocation(line: 1141, column: 8, scope: !2233)
!2238 = !DILocation(line: 1142, column: 22, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2232, file: !3, line: 1141, column: 44)
!2240 = !DILocation(line: 1142, column: 26, scope: !2239)
!2241 = !DILocation(line: 1142, column: 37, scope: !2239)
!2242 = !DILocation(line: 1142, column: 43, scope: !2239)
!2243 = !DILocation(line: 1142, column: 49, scope: !2239)
!2244 = !DILocation(line: 1142, column: 5, scope: !2239)
!2245 = !DILocation(line: 1144, column: 9, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 1144, column: 9)
!2247 = !DILocation(line: 1144, column: 13, scope: !2246)
!2248 = !DILocation(line: 1144, column: 9, scope: !2239)
!2249 = !DILocation(line: 1145, column: 22, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2246, file: !3, line: 1144, column: 22)
!2251 = !DILocation(line: 1145, column: 12, scope: !2250)
!2252 = !DILocation(line: 1145, column: 10, scope: !2250)
!2253 = !DILocation(line: 1147, column: 10, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2250, file: !3, line: 1147, column: 10)
!2255 = !DILocation(line: 1147, column: 24, scope: !2254)
!2256 = !DILocation(line: 1147, column: 10, scope: !2250)
!2257 = !DILocation(line: 1148, column: 38, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2254, file: !3, line: 1147, column: 33)
!2259 = !DILocation(line: 1148, column: 42, scope: !2258)
!2260 = !DILocation(line: 1148, column: 47, scope: !2258)
!2261 = !DILocation(line: 1148, column: 58, scope: !2258)
!2262 = !DILocation(line: 1148, column: 23, scope: !2258)
!2263 = !DILocation(line: 1148, column: 21, scope: !2258)
!2264 = !DILocation(line: 1149, column: 6, scope: !2258)
!2265 = !DILocation(line: 1151, column: 22, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2254, file: !3, line: 1150, column: 11)
!2267 = !DILocation(line: 1151, column: 26, scope: !2266)
!2268 = !DILocation(line: 1151, column: 31, scope: !2266)
!2269 = !DILocation(line: 1151, column: 7, scope: !2266)
!2270 = !DILocation(line: 1153, column: 5, scope: !2250)
!2271 = !DILocation(line: 1155, column: 9, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 1155, column: 9)
!2273 = !DILocation(line: 1155, column: 15, scope: !2272)
!2274 = !DILocation(line: 1155, column: 22, scope: !2272)
!2275 = !DILocation(line: 1155, column: 26, scope: !2272)
!2276 = !DILocation(line: 1155, column: 32, scope: !2272)
!2277 = !DILocation(line: 1155, column: 37, scope: !2272)
!2278 = !DILocation(line: 1155, column: 55, scope: !2272)
!2279 = !DILocation(line: 1155, column: 9, scope: !2239)
!2280 = !DILocation(line: 1156, column: 23, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 1155, column: 61)
!2282 = !DILocation(line: 1156, column: 28, scope: !2281)
!2283 = !DILocation(line: 1156, column: 34, scope: !2281)
!2284 = !DILocation(line: 1156, column: 6, scope: !2281)
!2285 = !DILocation(line: 1157, column: 5, scope: !2281)
!2286 = !DILocation(line: 1159, column: 22, scope: !2239)
!2287 = !DILocation(line: 1159, column: 27, scope: !2239)
!2288 = !DILocation(line: 1159, column: 33, scope: !2239)
!2289 = !DILocation(line: 1159, column: 39, scope: !2239)
!2290 = !DILocation(line: 1159, column: 5, scope: !2239)
!2291 = !DILocation(line: 1161, column: 17, scope: !2239)
!2292 = !DILocation(line: 1161, column: 15, scope: !2239)
!2293 = !DILocation(line: 1163, column: 16, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 1163, column: 9)
!2295 = !DILocation(line: 1163, column: 22, scope: !2294)
!2296 = !DILocation(line: 1163, column: 9, scope: !2294)
!2297 = !DILocation(line: 1163, column: 36, scope: !2294)
!2298 = !DILocation(line: 1163, column: 9, scope: !2239)
!2299 = !DILocation(line: 1164, column: 19, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2294, file: !3, line: 1163, column: 42)
!2301 = !DILocation(line: 1165, column: 5, scope: !2300)
!2302 = !DILocation(line: 1166, column: 4, scope: !2239)
!2303 = !DILocation(line: 1167, column: 14, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2232, file: !3, line: 1167, column: 13)
!2305 = !DILocation(line: 1167, column: 20, scope: !2304)
!2306 = !DILocation(line: 1167, column: 25, scope: !2304)
!2307 = !DILocation(line: 1167, column: 49, scope: !2304)
!2308 = !DILocation(line: 1167, column: 13, scope: !2232)
!2309 = !DILocation(line: 1168, column: 24, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2304, file: !3, line: 1167, column: 55)
!2311 = !DILocation(line: 1168, column: 28, scope: !2310)
!2312 = !DILocation(line: 1168, column: 5, scope: !2310)
!2313 = !DILocation(line: 1169, column: 4, scope: !2310)
!2314 = !DILocation(line: 1170, column: 3, scope: !2233)
!2315 = !DILocation(line: 1172, column: 39, scope: !2221)
!2316 = !DILocation(line: 1172, column: 45, scope: !2221)
!2317 = !DILocation(line: 1172, column: 17, scope: !2221)
!2318 = !DILocation(line: 1172, column: 15, scope: !2221)
!2319 = !DILocation(line: 1173, column: 7, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2221, file: !3, line: 1173, column: 7)
!2321 = !DILocation(line: 1173, column: 19, scope: !2320)
!2322 = !DILocation(line: 1173, column: 7, scope: !2221)
!2323 = !DILocalVariable(name: "end_node", scope: !2324, file: !3, line: 1174, type: !1403)
!2324 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 1173, column: 24)
!2325 = !DILocation(line: 1174, column: 13, scope: !2324)
!2326 = !DILocalVariable(name: "i", scope: !2324, file: !3, line: 1175, type: !145)
!2327 = !DILocation(line: 1175, column: 8, scope: !2324)
!2328 = !DILocation(line: 1177, column: 8, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1177, column: 8)
!2330 = !DILocation(line: 1177, column: 12, scope: !2329)
!2331 = !DILocation(line: 1177, column: 8, scope: !2324)
!2332 = !DILocation(line: 1178, column: 31, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1177, column: 21)
!2334 = !DILocation(line: 1178, column: 35, scope: !2333)
!2335 = !DILocation(line: 1178, column: 40, scope: !2333)
!2336 = !DILocation(line: 1178, column: 46, scope: !2333)
!2337 = !DILocation(line: 1178, column: 16, scope: !2333)
!2338 = !DILocation(line: 1178, column: 14, scope: !2333)
!2339 = !DILocation(line: 1179, column: 4, scope: !2333)
!2340 = !DILocation(line: 1181, column: 27, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1180, column: 9)
!2342 = !DILocation(line: 1181, column: 31, scope: !2341)
!2343 = !DILocation(line: 1181, column: 37, scope: !2341)
!2344 = !DILocation(line: 1181, column: 16, scope: !2341)
!2345 = !DILocation(line: 1181, column: 14, scope: !2341)
!2346 = !DILocation(line: 1184, column: 11, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 1184, column: 4)
!2348 = !DILocation(line: 1184, column: 9, scope: !2347)
!2349 = !DILocation(line: 1184, column: 16, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2347, file: !3, line: 1184, column: 4)
!2351 = !DILocation(line: 1184, column: 20, scope: !2350)
!2352 = !DILocation(line: 1184, column: 18, scope: !2350)
!2353 = !DILocation(line: 1184, column: 4, scope: !2347)
!2354 = !DILocation(line: 1185, column: 35, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2350, file: !3, line: 1184, column: 38)
!2356 = !DILocation(line: 1185, column: 41, scope: !2355)
!2357 = !DILocation(line: 1185, column: 47, scope: !2355)
!2358 = !DILocation(line: 1185, column: 17, scope: !2355)
!2359 = !DILocation(line: 1185, column: 15, scope: !2355)
!2360 = !DILocation(line: 1186, column: 26, scope: !2355)
!2361 = !DILocation(line: 1186, column: 30, scope: !2355)
!2362 = !DILocation(line: 1186, column: 36, scope: !2355)
!2363 = !DILocation(line: 1186, column: 47, scope: !2355)
!2364 = !DILocation(line: 1186, column: 57, scope: !2355)
!2365 = !DILocation(line: 1186, column: 5, scope: !2355)
!2366 = !DILocation(line: 1187, column: 4, scope: !2355)
!2367 = !DILocation(line: 1184, column: 34, scope: !2350)
!2368 = !DILocation(line: 1184, column: 4, scope: !2350)
!2369 = distinct !{!2369, !2353, !2370}
!2370 = !DILocation(line: 1187, column: 4, scope: !2347)
!2371 = !DILocation(line: 1190, column: 4, scope: !2324)
!2372 = !DILocation(line: 1192, column: 2, scope: !2221)
!2373 = !DILocation(line: 1137, column: 56, scope: !2218)
!2374 = !DILocation(line: 1137, column: 62, scope: !2218)
!2375 = !DILocation(line: 1137, column: 38, scope: !2218)
!2376 = !DILocation(line: 1137, column: 36, scope: !2218)
!2377 = !DILocation(line: 1137, column: 2, scope: !2218)
!2378 = distinct !{!2378, !2219, !2379}
!2379 = !DILocation(line: 1192, column: 2, scope: !2214)
!2380 = !DILocation(line: 1195, column: 6, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 1195, column: 6)
!2382 = !DILocation(line: 1195, column: 10, scope: !2381)
!2383 = !DILocation(line: 1195, column: 18, scope: !2381)
!2384 = !DILocation(line: 1195, column: 21, scope: !2381)
!2385 = !DILocation(line: 1195, column: 26, scope: !2381)
!2386 = !DILocation(line: 1195, column: 6, scope: !2191)
!2387 = !DILocation(line: 1196, column: 18, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 1195, column: 35)
!2389 = !DILocation(line: 1196, column: 22, scope: !2388)
!2390 = !DILocation(line: 1196, column: 27, scope: !2388)
!2391 = !DILocation(line: 1196, column: 38, scope: !2388)
!2392 = !DILocation(line: 1196, column: 3, scope: !2388)
!2393 = !DILocation(line: 1197, column: 2, scope: !2388)
!2394 = !DILocation(line: 1199, column: 6, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 1199, column: 6)
!2396 = !DILocation(line: 1199, column: 6, scope: !2191)
!2397 = !DILocation(line: 1200, column: 14, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 1199, column: 20)
!2399 = !DILocation(line: 1200, column: 19, scope: !2398)
!2400 = !DILocation(line: 1200, column: 3, scope: !2398)
!2401 = !DILocation(line: 1200, column: 7, scope: !2398)
!2402 = !DILocation(line: 1200, column: 12, scope: !2398)
!2403 = !DILocation(line: 1201, column: 2, scope: !2398)
!2404 = !DILocation(line: 1202, column: 1, scope: !2191)
!2405 = distinct !DISubprogram(name: "RIG_removeNormalNodes", scope: !3, file: !3, line: 953, type: !1989, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!2406 = !DILocalVariable(name: "rg", arg: 1, scope: !2405, file: !3, line: 953, type: !108)
!2407 = !DILocation(line: 953, column: 45, scope: !2405)
!2408 = !DILocalVariable(name: "node", scope: !2405, file: !3, line: 955, type: !1403)
!2409 = !DILocation(line: 955, column: 11, scope: !2405)
!2410 = !DILocalVariable(name: "next_node", scope: !2405, file: !3, line: 955, type: !1403)
!2411 = !DILocation(line: 955, column: 18, scope: !2405)
!2412 = !DILocation(line: 957, column: 14, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 957, column: 2)
!2414 = !DILocation(line: 957, column: 18, scope: !2413)
!2415 = !DILocation(line: 957, column: 24, scope: !2413)
!2416 = !DILocation(line: 957, column: 12, scope: !2413)
!2417 = !DILocation(line: 957, column: 7, scope: !2413)
!2418 = !DILocation(line: 957, column: 31, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2413, file: !3, line: 957, column: 2)
!2420 = !DILocation(line: 957, column: 2, scope: !2413)
!2421 = !DILocation(line: 958, column: 15, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2419, file: !3, line: 957, column: 55)
!2423 = !DILocation(line: 958, column: 21, scope: !2422)
!2424 = !DILocation(line: 958, column: 13, scope: !2422)
!2425 = !DILocation(line: 960, column: 7, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 960, column: 7)
!2427 = !DILocation(line: 960, column: 13, scope: !2426)
!2428 = !DILocation(line: 960, column: 20, scope: !2426)
!2429 = !DILocation(line: 960, column: 7, scope: !2422)
!2430 = !DILocalVariable(name: "arc", scope: !2431, file: !3, line: 961, type: !1515)
!2431 = distinct !DILexicalBlock(scope: !2426, file: !3, line: 960, column: 26)
!2432 = !DILocation(line: 961, column: 12, scope: !2431)
!2433 = !DILocalVariable(name: "joined_arc1", scope: !2431, file: !3, line: 961, type: !1515)
!2434 = !DILocation(line: 961, column: 18, scope: !2431)
!2435 = !DILocalVariable(name: "joined_arc2", scope: !2431, file: !3, line: 961, type: !1515)
!2436 = !DILocation(line: 961, column: 39, scope: !2431)
!2437 = !DILocation(line: 963, column: 15, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2431, file: !3, line: 963, column: 4)
!2439 = !DILocation(line: 963, column: 19, scope: !2438)
!2440 = !DILocation(line: 963, column: 24, scope: !2438)
!2441 = !DILocation(line: 963, column: 13, scope: !2438)
!2442 = !DILocation(line: 963, column: 9, scope: !2438)
!2443 = !DILocation(line: 963, column: 31, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2438, file: !3, line: 963, column: 4)
!2445 = !DILocation(line: 963, column: 4, scope: !2438)
!2446 = !DILocation(line: 964, column: 9, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 964, column: 9)
!2448 = distinct !DILexicalBlock(scope: !2444, file: !3, line: 963, column: 53)
!2449 = !DILocation(line: 964, column: 14, scope: !2447)
!2450 = !DILocation(line: 964, column: 22, scope: !2447)
!2451 = !DILocation(line: 964, column: 19, scope: !2447)
!2452 = !DILocation(line: 964, column: 27, scope: !2447)
!2453 = !DILocation(line: 964, column: 30, scope: !2447)
!2454 = !DILocation(line: 964, column: 35, scope: !2447)
!2455 = !DILocation(line: 964, column: 43, scope: !2447)
!2456 = !DILocation(line: 964, column: 40, scope: !2447)
!2457 = !DILocation(line: 964, column: 9, scope: !2448)
!2458 = !DILocation(line: 965, column: 10, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2460, file: !3, line: 965, column: 10)
!2460 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 964, column: 49)
!2461 = !DILocation(line: 965, column: 22, scope: !2459)
!2462 = !DILocation(line: 965, column: 10, scope: !2460)
!2463 = !DILocation(line: 966, column: 21, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 965, column: 31)
!2465 = !DILocation(line: 966, column: 19, scope: !2464)
!2466 = !DILocation(line: 967, column: 6, scope: !2464)
!2467 = !DILocation(line: 969, column: 21, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 968, column: 11)
!2469 = !DILocation(line: 969, column: 19, scope: !2468)
!2470 = !DILocation(line: 970, column: 7, scope: !2468)
!2471 = !DILocation(line: 972, column: 5, scope: !2460)
!2472 = !DILocation(line: 973, column: 4, scope: !2448)
!2473 = !DILocation(line: 963, column: 42, scope: !2444)
!2474 = !DILocation(line: 963, column: 47, scope: !2444)
!2475 = !DILocation(line: 963, column: 40, scope: !2444)
!2476 = !DILocation(line: 963, column: 4, scope: !2444)
!2477 = distinct !{!2477, !2445, !2478}
!2478 = !DILocation(line: 973, column: 4, scope: !2438)
!2479 = !DILocation(line: 975, column: 17, scope: !2431)
!2480 = !DILocation(line: 975, column: 21, scope: !2431)
!2481 = !DILocation(line: 975, column: 27, scope: !2431)
!2482 = !DILocation(line: 975, column: 40, scope: !2431)
!2483 = !DILocation(line: 975, column: 4, scope: !2431)
!2484 = !DILocation(line: 976, column: 3, scope: !2431)
!2485 = !DILocation(line: 977, column: 2, scope: !2422)
!2486 = !DILocation(line: 957, column: 44, scope: !2419)
!2487 = !DILocation(line: 957, column: 42, scope: !2419)
!2488 = !DILocation(line: 957, column: 2, scope: !2419)
!2489 = distinct !{!2489, !2420, !2490}
!2490 = !DILocation(line: 977, column: 2, scope: !2413)
!2491 = !DILocation(line: 978, column: 1, scope: !2405)
!2492 = distinct !DISubprogram(name: "RIG_removeUneededOffsets", scope: !3, file: !3, line: 980, type: !1989, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!2493 = !DILocalVariable(name: "rg", arg: 1, scope: !2492, file: !3, line: 980, type: !108)
!2494 = !DILocation(line: 980, column: 48, scope: !2492)
!2495 = !DILocalVariable(name: "arc", scope: !2492, file: !3, line: 982, type: !1515)
!2496 = !DILocation(line: 982, column: 10, scope: !2492)
!2497 = !DILocation(line: 984, column: 13, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 984, column: 2)
!2499 = !DILocation(line: 984, column: 17, scope: !2498)
!2500 = !DILocation(line: 984, column: 22, scope: !2498)
!2501 = !DILocation(line: 984, column: 11, scope: !2498)
!2502 = !DILocation(line: 984, column: 7, scope: !2498)
!2503 = !DILocation(line: 984, column: 29, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 984, column: 2)
!2505 = !DILocation(line: 984, column: 2, scope: !2498)
!2506 = !DILocalVariable(name: "first_edge", scope: !2507, file: !3, line: 985, type: !1743)
!2507 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 984, column: 51)
!2508 = !DILocation(line: 985, column: 12, scope: !2507)
!2509 = !DILocalVariable(name: "last_edge", scope: !2507, file: !3, line: 985, type: !1743)
!2510 = !DILocation(line: 985, column: 25, scope: !2507)
!2511 = !DILocation(line: 987, column: 16, scope: !2507)
!2512 = !DILocation(line: 987, column: 21, scope: !2507)
!2513 = !DILocation(line: 987, column: 27, scope: !2507)
!2514 = !DILocation(line: 987, column: 14, scope: !2507)
!2515 = !DILocation(line: 988, column: 15, scope: !2507)
!2516 = !DILocation(line: 988, column: 20, scope: !2507)
!2517 = !DILocation(line: 988, column: 26, scope: !2507)
!2518 = !DILocation(line: 988, column: 13, scope: !2507)
!2519 = !DILocation(line: 990, column: 7, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 990, column: 7)
!2521 = !DILocation(line: 990, column: 19, scope: !2520)
!2522 = !DILocation(line: 990, column: 24, scope: !2520)
!2523 = !DILocation(line: 990, column: 7, scope: !2507)
!2524 = !DILocation(line: 991, column: 8, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2526, file: !3, line: 991, column: 8)
!2526 = distinct !DILexicalBlock(scope: !2520, file: !3, line: 990, column: 33)
!2527 = !DILocation(line: 991, column: 20, scope: !2525)
!2528 = !DILocation(line: 991, column: 25, scope: !2525)
!2529 = !DILocation(line: 991, column: 33, scope: !2525)
!2530 = !DILocation(line: 991, column: 45, scope: !2525)
!2531 = !DILocation(line: 991, column: 57, scope: !2525)
!2532 = !DILocation(line: 991, column: 63, scope: !2525)
!2533 = !DILocation(line: 991, column: 68, scope: !2525)
!2534 = !DILocation(line: 991, column: 74, scope: !2525)
!2535 = !DILocation(line: 991, column: 36, scope: !2525)
!2536 = !DILocation(line: 991, column: 77, scope: !2525)
!2537 = !DILocation(line: 991, column: 8, scope: !2526)
!2538 = !DILocation(line: 992, column: 18, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2525, file: !3, line: 991, column: 88)
!2540 = !DILocation(line: 992, column: 23, scope: !2539)
!2541 = !DILocation(line: 992, column: 30, scope: !2539)
!2542 = !DILocation(line: 992, column: 5, scope: !2539)
!2543 = !DILocation(line: 993, column: 5, scope: !2539)
!2544 = !DILocation(line: 993, column: 15, scope: !2539)
!2545 = !DILocation(line: 994, column: 4, scope: !2539)
!2546 = !DILocation(line: 995, column: 13, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2525, file: !3, line: 995, column: 13)
!2548 = !DILocation(line: 995, column: 18, scope: !2547)
!2549 = !DILocation(line: 995, column: 24, scope: !2547)
!2550 = !DILocation(line: 995, column: 31, scope: !2547)
!2551 = !DILocation(line: 995, column: 13, scope: !2525)
!2552 = !DILocalVariable(name: "new_node", scope: !2553, file: !3, line: 996, type: !1403)
!2553 = distinct !DILexicalBlock(scope: !2547, file: !3, line: 995, column: 37)
!2554 = !DILocation(line: 996, column: 14, scope: !2553)
!2555 = !DILocation(line: 996, column: 69, scope: !2553)
!2556 = !DILocation(line: 996, column: 59, scope: !2553)
!2557 = !DILocation(line: 996, column: 73, scope: !2553)
!2558 = !DILocation(line: 996, column: 85, scope: !2553)
!2559 = !DILocation(line: 996, column: 36, scope: !2553)
!2560 = !DILocation(line: 996, column: 25, scope: !2553)
!2561 = !DILocation(line: 998, column: 9, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2553, file: !3, line: 998, column: 9)
!2563 = !DILocation(line: 998, column: 9, scope: !2553)
!2564 = !DILocation(line: 999, column: 19, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 998, column: 19)
!2566 = !DILocation(line: 999, column: 24, scope: !2565)
!2567 = !DILocation(line: 999, column: 31, scope: !2565)
!2568 = !DILocation(line: 999, column: 6, scope: !2565)
!2569 = !DILocation(line: 1000, column: 6, scope: !2565)
!2570 = !DILocation(line: 1000, column: 16, scope: !2565)
!2571 = !DILocation(line: 1001, column: 37, scope: !2565)
!2572 = !DILocation(line: 1001, column: 27, scope: !2565)
!2573 = !DILocation(line: 1001, column: 49, scope: !2565)
!2574 = !DILocation(line: 1001, column: 41, scope: !2565)
!2575 = !DILocation(line: 1001, column: 63, scope: !2565)
!2576 = !DILocation(line: 1001, column: 54, scope: !2565)
!2577 = !DILocation(line: 1001, column: 82, scope: !2565)
!2578 = !DILocation(line: 1001, column: 87, scope: !2565)
!2579 = !DILocation(line: 1001, column: 73, scope: !2565)
!2580 = !DILocation(line: 1001, column: 6, scope: !2565)
!2581 = !DILocation(line: 1002, column: 5, scope: !2565)
!2582 = !DILocalVariable(name: "next_edge", scope: !2583, file: !3, line: 1004, type: !1743)
!2583 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 1003, column: 10)
!2584 = !DILocation(line: 1004, column: 15, scope: !2583)
!2585 = !DILocation(line: 1004, column: 27, scope: !2583)
!2586 = !DILocation(line: 1004, column: 39, scope: !2583)
!2587 = !DILocation(line: 1006, column: 10, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2583, file: !3, line: 1006, column: 10)
!2589 = !DILocation(line: 1006, column: 10, scope: !2583)
!2590 = !DILocation(line: 1007, column: 20, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2588, file: !3, line: 1006, column: 21)
!2592 = !DILocation(line: 1007, column: 25, scope: !2591)
!2593 = !DILocation(line: 1007, column: 32, scope: !2591)
!2594 = !DILocation(line: 1007, column: 7, scope: !2591)
!2595 = !DILocation(line: 1008, column: 7, scope: !2591)
!2596 = !DILocation(line: 1008, column: 17, scope: !2591)
!2597 = !DILocation(line: 1010, column: 18, scope: !2591)
!2598 = !DILocation(line: 1010, column: 23, scope: !2591)
!2599 = !DILocation(line: 1010, column: 29, scope: !2591)
!2600 = !DILocation(line: 1010, column: 32, scope: !2591)
!2601 = !DILocation(line: 1010, column: 43, scope: !2591)
!2602 = !DILocation(line: 1010, column: 7, scope: !2591)
!2603 = !DILocation(line: 1011, column: 6, scope: !2591)
!2604 = !DILocation(line: 1013, column: 4, scope: !2553)
!2605 = !DILocalVariable(name: "other_arc", scope: !2606, file: !3, line: 1016, type: !1515)
!2606 = distinct !DILexicalBlock(scope: !2547, file: !3, line: 1014, column: 9)
!2607 = !DILocation(line: 1016, column: 13, scope: !2606)
!2608 = !DILocation(line: 1017, column: 22, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2606, file: !3, line: 1017, column: 5)
!2610 = !DILocation(line: 1017, column: 26, scope: !2609)
!2611 = !DILocation(line: 1017, column: 31, scope: !2609)
!2612 = !DILocation(line: 1017, column: 20, scope: !2609)
!2613 = !DILocation(line: 1017, column: 10, scope: !2609)
!2614 = !DILocation(line: 1017, column: 38, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 1017, column: 5)
!2616 = !DILocation(line: 1017, column: 5, scope: !2609)
!2617 = !DILocation(line: 1018, column: 10, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 1018, column: 10)
!2619 = distinct !DILexicalBlock(scope: !2615, file: !3, line: 1017, column: 78)
!2620 = !DILocation(line: 1018, column: 23, scope: !2618)
!2621 = !DILocation(line: 1018, column: 20, scope: !2618)
!2622 = !DILocation(line: 1018, column: 10, scope: !2619)
!2623 = !DILocalVariable(name: "test_edge", scope: !2624, file: !3, line: 1019, type: !1743)
!2624 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 1018, column: 28)
!2625 = !DILocation(line: 1019, column: 16, scope: !2624)
!2626 = !DILocation(line: 1020, column: 11, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2624, file: !3, line: 1020, column: 11)
!2628 = !DILocation(line: 1020, column: 22, scope: !2627)
!2629 = !DILocation(line: 1020, column: 30, scope: !2627)
!2630 = !DILocation(line: 1020, column: 35, scope: !2627)
!2631 = !DILocation(line: 1020, column: 27, scope: !2627)
!2632 = !DILocation(line: 1020, column: 11, scope: !2624)
!2633 = !DILocation(line: 1021, column: 20, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 1020, column: 41)
!2635 = !DILocation(line: 1021, column: 31, scope: !2634)
!2636 = !DILocation(line: 1021, column: 37, scope: !2634)
!2637 = !DILocation(line: 1021, column: 18, scope: !2634)
!2638 = !DILocation(line: 1023, column: 12, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 1023, column: 12)
!2640 = !DILocation(line: 1023, column: 23, scope: !2639)
!2641 = !DILocation(line: 1023, column: 28, scope: !2639)
!2642 = !DILocation(line: 1023, column: 12, scope: !2634)
!2643 = !DILocation(line: 1024, column: 9, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2639, file: !3, line: 1023, column: 37)
!2645 = !DILocation(line: 1026, column: 7, scope: !2634)
!2646 = !DILocation(line: 1027, column: 16, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 1027, column: 16)
!2648 = !DILocation(line: 1027, column: 27, scope: !2647)
!2649 = !DILocation(line: 1027, column: 35, scope: !2647)
!2650 = !DILocation(line: 1027, column: 40, scope: !2647)
!2651 = !DILocation(line: 1027, column: 32, scope: !2647)
!2652 = !DILocation(line: 1027, column: 16, scope: !2627)
!2653 = !DILocation(line: 1028, column: 20, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 1027, column: 46)
!2655 = !DILocation(line: 1028, column: 31, scope: !2654)
!2656 = !DILocation(line: 1028, column: 37, scope: !2654)
!2657 = !DILocation(line: 1028, column: 18, scope: !2654)
!2658 = !DILocation(line: 1030, column: 12, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2654, file: !3, line: 1030, column: 12)
!2660 = !DILocation(line: 1030, column: 23, scope: !2659)
!2661 = !DILocation(line: 1030, column: 28, scope: !2659)
!2662 = !DILocation(line: 1030, column: 12, scope: !2654)
!2663 = !DILocation(line: 1031, column: 9, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 1030, column: 37)
!2665 = !DILocation(line: 1033, column: 7, scope: !2654)
!2666 = !DILocation(line: 1034, column: 6, scope: !2624)
!2667 = !DILocation(line: 1035, column: 5, scope: !2619)
!2668 = !DILocation(line: 1017, column: 61, scope: !2615)
!2669 = !DILocation(line: 1017, column: 72, scope: !2615)
!2670 = !DILocation(line: 1017, column: 59, scope: !2615)
!2671 = !DILocation(line: 1017, column: 5, scope: !2615)
!2672 = distinct !{!2672, !2616, !2673}
!2673 = !DILocation(line: 1035, column: 5, scope: !2609)
!2674 = !DILocation(line: 1037, column: 9, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2606, file: !3, line: 1037, column: 9)
!2676 = !DILocation(line: 1037, column: 19, scope: !2675)
!2677 = !DILocation(line: 1037, column: 9, scope: !2606)
!2678 = !DILocalVariable(name: "new_node", scope: !2679, file: !3, line: 1038, type: !1403)
!2679 = distinct !DILexicalBlock(scope: !2675, file: !3, line: 1037, column: 28)
!2680 = !DILocation(line: 1038, column: 15, scope: !2679)
!2681 = !DILocation(line: 1038, column: 70, scope: !2679)
!2682 = !DILocation(line: 1038, column: 60, scope: !2679)
!2683 = !DILocation(line: 1038, column: 74, scope: !2679)
!2684 = !DILocation(line: 1038, column: 86, scope: !2679)
!2685 = !DILocation(line: 1038, column: 37, scope: !2679)
!2686 = !DILocation(line: 1038, column: 26, scope: !2679)
!2687 = !DILocation(line: 1040, column: 10, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 1040, column: 10)
!2689 = !DILocation(line: 1040, column: 10, scope: !2679)
!2690 = !DILocation(line: 1042, column: 24, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 1042, column: 7)
!2692 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 1040, column: 20)
!2693 = !DILocation(line: 1042, column: 28, scope: !2691)
!2694 = !DILocation(line: 1042, column: 33, scope: !2691)
!2695 = !DILocation(line: 1042, column: 22, scope: !2691)
!2696 = !DILocation(line: 1042, column: 12, scope: !2691)
!2697 = !DILocation(line: 1042, column: 40, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1042, column: 7)
!2699 = !DILocation(line: 1042, column: 7, scope: !2691)
!2700 = !DILocation(line: 1043, column: 12, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1043, column: 12)
!2702 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 1042, column: 80)
!2703 = !DILocation(line: 1043, column: 25, scope: !2701)
!2704 = !DILocation(line: 1043, column: 22, scope: !2701)
!2705 = !DILocation(line: 1043, column: 12, scope: !2702)
!2706 = !DILocalVariable(name: "test_edge", scope: !2707, file: !3, line: 1044, type: !1743)
!2707 = distinct !DILexicalBlock(scope: !2701, file: !3, line: 1043, column: 30)
!2708 = !DILocation(line: 1044, column: 18, scope: !2707)
!2709 = !DILocation(line: 1045, column: 13, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2707, file: !3, line: 1045, column: 13)
!2711 = !DILocation(line: 1045, column: 24, scope: !2710)
!2712 = !DILocation(line: 1045, column: 32, scope: !2710)
!2713 = !DILocation(line: 1045, column: 37, scope: !2710)
!2714 = !DILocation(line: 1045, column: 29, scope: !2710)
!2715 = !DILocation(line: 1045, column: 13, scope: !2707)
!2716 = !DILocation(line: 1046, column: 41, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2710, file: !3, line: 1045, column: 43)
!2718 = !DILocation(line: 1046, column: 31, scope: !2717)
!2719 = !DILocation(line: 1046, column: 53, scope: !2717)
!2720 = !DILocation(line: 1046, column: 45, scope: !2717)
!2721 = !DILocation(line: 1046, column: 73, scope: !2717)
!2722 = !DILocation(line: 1046, column: 64, scope: !2717)
!2723 = !DILocation(line: 1046, column: 92, scope: !2717)
!2724 = !DILocation(line: 1046, column: 103, scope: !2717)
!2725 = !DILocation(line: 1046, column: 83, scope: !2717)
!2726 = !DILocation(line: 1046, column: 10, scope: !2717)
!2727 = !DILocation(line: 1047, column: 22, scope: !2717)
!2728 = !DILocation(line: 1047, column: 33, scope: !2717)
!2729 = !DILocation(line: 1047, column: 39, scope: !2717)
!2730 = !DILocation(line: 1047, column: 20, scope: !2717)
!2731 = !DILocation(line: 1048, column: 23, scope: !2717)
!2732 = !DILocation(line: 1048, column: 34, scope: !2717)
!2733 = !DILocation(line: 1048, column: 41, scope: !2717)
!2734 = !DILocation(line: 1048, column: 10, scope: !2717)
!2735 = !DILocation(line: 1049, column: 10, scope: !2717)
!2736 = !DILocation(line: 1049, column: 20, scope: !2717)
!2737 = !DILocation(line: 1050, column: 9, scope: !2717)
!2738 = !DILocation(line: 1051, column: 18, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2710, file: !3, line: 1051, column: 18)
!2740 = !DILocation(line: 1051, column: 29, scope: !2739)
!2741 = !DILocation(line: 1051, column: 37, scope: !2739)
!2742 = !DILocation(line: 1051, column: 42, scope: !2739)
!2743 = !DILocation(line: 1051, column: 34, scope: !2739)
!2744 = !DILocation(line: 1051, column: 18, scope: !2710)
!2745 = !DILocation(line: 1052, column: 41, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2739, file: !3, line: 1051, column: 48)
!2747 = !DILocation(line: 1052, column: 31, scope: !2746)
!2748 = !DILocation(line: 1052, column: 53, scope: !2746)
!2749 = !DILocation(line: 1052, column: 45, scope: !2746)
!2750 = !DILocation(line: 1052, column: 73, scope: !2746)
!2751 = !DILocation(line: 1052, column: 64, scope: !2746)
!2752 = !DILocation(line: 1052, column: 92, scope: !2746)
!2753 = !DILocation(line: 1052, column: 103, scope: !2746)
!2754 = !DILocation(line: 1052, column: 83, scope: !2746)
!2755 = !DILocation(line: 1052, column: 10, scope: !2746)
!2756 = !DILocation(line: 1053, column: 22, scope: !2746)
!2757 = !DILocation(line: 1053, column: 33, scope: !2746)
!2758 = !DILocation(line: 1053, column: 39, scope: !2746)
!2759 = !DILocation(line: 1053, column: 20, scope: !2746)
!2760 = !DILocation(line: 1054, column: 23, scope: !2746)
!2761 = !DILocation(line: 1054, column: 34, scope: !2746)
!2762 = !DILocation(line: 1054, column: 41, scope: !2746)
!2763 = !DILocation(line: 1054, column: 10, scope: !2746)
!2764 = !DILocation(line: 1055, column: 10, scope: !2746)
!2765 = !DILocation(line: 1055, column: 20, scope: !2746)
!2766 = !DILocation(line: 1056, column: 9, scope: !2746)
!2767 = !DILocation(line: 1057, column: 8, scope: !2707)
!2768 = !DILocation(line: 1058, column: 7, scope: !2702)
!2769 = !DILocation(line: 1042, column: 63, scope: !2698)
!2770 = !DILocation(line: 1042, column: 74, scope: !2698)
!2771 = !DILocation(line: 1042, column: 61, scope: !2698)
!2772 = !DILocation(line: 1042, column: 7, scope: !2698)
!2773 = distinct !{!2773, !2699, !2774}
!2774 = !DILocation(line: 1058, column: 7, scope: !2691)
!2775 = !DILocation(line: 1060, column: 20, scope: !2692)
!2776 = !DILocation(line: 1060, column: 25, scope: !2692)
!2777 = !DILocation(line: 1060, column: 32, scope: !2692)
!2778 = !DILocation(line: 1060, column: 7, scope: !2692)
!2779 = !DILocation(line: 1061, column: 7, scope: !2692)
!2780 = !DILocation(line: 1061, column: 17, scope: !2692)
!2781 = !DILocation(line: 1062, column: 38, scope: !2692)
!2782 = !DILocation(line: 1062, column: 28, scope: !2692)
!2783 = !DILocation(line: 1062, column: 50, scope: !2692)
!2784 = !DILocation(line: 1062, column: 42, scope: !2692)
!2785 = !DILocation(line: 1062, column: 64, scope: !2692)
!2786 = !DILocation(line: 1062, column: 55, scope: !2692)
!2787 = !DILocation(line: 1062, column: 83, scope: !2692)
!2788 = !DILocation(line: 1062, column: 88, scope: !2692)
!2789 = !DILocation(line: 1062, column: 74, scope: !2692)
!2790 = !DILocation(line: 1062, column: 7, scope: !2692)
!2791 = !DILocation(line: 1063, column: 6, scope: !2692)
!2792 = !DILocalVariable(name: "next_edge", scope: !2793, file: !3, line: 1065, type: !1743)
!2793 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 1064, column: 11)
!2794 = !DILocation(line: 1065, column: 16, scope: !2793)
!2795 = !DILocation(line: 1065, column: 28, scope: !2793)
!2796 = !DILocation(line: 1065, column: 40, scope: !2793)
!2797 = !DILocation(line: 1067, column: 11, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 1067, column: 11)
!2799 = !DILocation(line: 1067, column: 11, scope: !2793)
!2800 = !DILocation(line: 1068, column: 21, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 1067, column: 22)
!2802 = !DILocation(line: 1068, column: 26, scope: !2801)
!2803 = !DILocation(line: 1068, column: 33, scope: !2801)
!2804 = !DILocation(line: 1068, column: 8, scope: !2801)
!2805 = !DILocation(line: 1069, column: 8, scope: !2801)
!2806 = !DILocation(line: 1069, column: 18, scope: !2801)
!2807 = !DILocation(line: 1071, column: 19, scope: !2801)
!2808 = !DILocation(line: 1071, column: 24, scope: !2801)
!2809 = !DILocation(line: 1071, column: 30, scope: !2801)
!2810 = !DILocation(line: 1071, column: 33, scope: !2801)
!2811 = !DILocation(line: 1071, column: 44, scope: !2801)
!2812 = !DILocation(line: 1071, column: 8, scope: !2801)
!2813 = !DILocation(line: 1074, column: 25, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1074, column: 8)
!2815 = !DILocation(line: 1074, column: 29, scope: !2814)
!2816 = !DILocation(line: 1074, column: 34, scope: !2814)
!2817 = !DILocation(line: 1074, column: 23, scope: !2814)
!2818 = !DILocation(line: 1074, column: 13, scope: !2814)
!2819 = !DILocation(line: 1074, column: 41, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2814, file: !3, line: 1074, column: 8)
!2821 = !DILocation(line: 1074, column: 8, scope: !2814)
!2822 = !DILocation(line: 1075, column: 13, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2824, file: !3, line: 1075, column: 13)
!2824 = distinct !DILexicalBlock(scope: !2820, file: !3, line: 1074, column: 81)
!2825 = !DILocation(line: 1075, column: 26, scope: !2823)
!2826 = !DILocation(line: 1075, column: 23, scope: !2823)
!2827 = !DILocation(line: 1075, column: 13, scope: !2824)
!2828 = !DILocalVariable(name: "test_edge", scope: !2829, file: !3, line: 1076, type: !1743)
!2829 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 1075, column: 31)
!2830 = !DILocation(line: 1076, column: 19, scope: !2829)
!2831 = !DILocation(line: 1077, column: 14, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 1077, column: 14)
!2833 = !DILocation(line: 1077, column: 25, scope: !2832)
!2834 = !DILocation(line: 1077, column: 33, scope: !2832)
!2835 = !DILocation(line: 1077, column: 38, scope: !2832)
!2836 = !DILocation(line: 1077, column: 30, scope: !2832)
!2837 = !DILocation(line: 1077, column: 14, scope: !2829)
!2838 = !DILocation(line: 1078, column: 23, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 1077, column: 44)
!2840 = !DILocation(line: 1078, column: 34, scope: !2839)
!2841 = !DILocation(line: 1078, column: 40, scope: !2839)
!2842 = !DILocation(line: 1078, column: 21, scope: !2839)
!2843 = !DILocation(line: 1079, column: 24, scope: !2839)
!2844 = !DILocation(line: 1079, column: 35, scope: !2839)
!2845 = !DILocation(line: 1079, column: 42, scope: !2839)
!2846 = !DILocation(line: 1079, column: 11, scope: !2839)
!2847 = !DILocation(line: 1080, column: 11, scope: !2839)
!2848 = !DILocation(line: 1080, column: 21, scope: !2839)
!2849 = !DILocation(line: 1081, column: 10, scope: !2839)
!2850 = !DILocation(line: 1082, column: 19, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 1082, column: 19)
!2852 = !DILocation(line: 1082, column: 30, scope: !2851)
!2853 = !DILocation(line: 1082, column: 38, scope: !2851)
!2854 = !DILocation(line: 1082, column: 43, scope: !2851)
!2855 = !DILocation(line: 1082, column: 35, scope: !2851)
!2856 = !DILocation(line: 1082, column: 19, scope: !2832)
!2857 = !DILocation(line: 1083, column: 23, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2851, file: !3, line: 1082, column: 49)
!2859 = !DILocation(line: 1083, column: 34, scope: !2858)
!2860 = !DILocation(line: 1083, column: 40, scope: !2858)
!2861 = !DILocation(line: 1083, column: 21, scope: !2858)
!2862 = !DILocation(line: 1084, column: 24, scope: !2858)
!2863 = !DILocation(line: 1084, column: 35, scope: !2858)
!2864 = !DILocation(line: 1084, column: 42, scope: !2858)
!2865 = !DILocation(line: 1084, column: 11, scope: !2858)
!2866 = !DILocation(line: 1085, column: 11, scope: !2858)
!2867 = !DILocation(line: 1085, column: 21, scope: !2858)
!2868 = !DILocation(line: 1086, column: 10, scope: !2858)
!2869 = !DILocation(line: 1087, column: 9, scope: !2829)
!2870 = !DILocation(line: 1088, column: 8, scope: !2824)
!2871 = !DILocation(line: 1074, column: 64, scope: !2820)
!2872 = !DILocation(line: 1074, column: 75, scope: !2820)
!2873 = !DILocation(line: 1074, column: 62, scope: !2820)
!2874 = !DILocation(line: 1074, column: 8, scope: !2820)
!2875 = distinct !{!2875, !2821, !2876}
!2876 = !DILocation(line: 1088, column: 8, scope: !2814)
!2877 = !DILocation(line: 1089, column: 7, scope: !2801)
!2878 = !DILocation(line: 1091, column: 5, scope: !2679)
!2879 = !DILocation(line: 1093, column: 3, scope: !2526)
!2880 = !DILocation(line: 1095, column: 7, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 1095, column: 7)
!2882 = !DILocation(line: 1095, column: 18, scope: !2881)
!2883 = !DILocation(line: 1095, column: 23, scope: !2881)
!2884 = !DILocation(line: 1095, column: 7, scope: !2507)
!2885 = !DILocation(line: 1096, column: 17, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 1096, column: 8)
!2887 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 1095, column: 32)
!2888 = !DILocation(line: 1096, column: 28, scope: !2886)
!2889 = !DILocation(line: 1096, column: 34, scope: !2886)
!2890 = !DILocation(line: 1096, column: 39, scope: !2886)
!2891 = !DILocation(line: 1096, column: 45, scope: !2886)
!2892 = !DILocation(line: 1096, column: 8, scope: !2886)
!2893 = !DILocation(line: 1096, column: 48, scope: !2886)
!2894 = !DILocation(line: 1096, column: 8, scope: !2887)
!2895 = !DILocation(line: 1097, column: 18, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 1096, column: 59)
!2897 = !DILocation(line: 1097, column: 23, scope: !2896)
!2898 = !DILocation(line: 1097, column: 30, scope: !2896)
!2899 = !DILocation(line: 1097, column: 5, scope: !2896)
!2900 = !DILocation(line: 1098, column: 5, scope: !2896)
!2901 = !DILocation(line: 1098, column: 15, scope: !2896)
!2902 = !DILocation(line: 1099, column: 4, scope: !2896)
!2903 = !DILocation(line: 1100, column: 13, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 1100, column: 13)
!2905 = !DILocation(line: 1100, column: 18, scope: !2904)
!2906 = !DILocation(line: 1100, column: 24, scope: !2904)
!2907 = !DILocation(line: 1100, column: 31, scope: !2904)
!2908 = !DILocation(line: 1100, column: 13, scope: !2886)
!2909 = !DILocalVariable(name: "new_node", scope: !2910, file: !3, line: 1101, type: !1403)
!2910 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 1100, column: 37)
!2911 = !DILocation(line: 1101, column: 14, scope: !2910)
!2912 = !DILocation(line: 1101, column: 69, scope: !2910)
!2913 = !DILocation(line: 1101, column: 59, scope: !2910)
!2914 = !DILocation(line: 1101, column: 73, scope: !2910)
!2915 = !DILocation(line: 1101, column: 84, scope: !2910)
!2916 = !DILocation(line: 1101, column: 36, scope: !2910)
!2917 = !DILocation(line: 1101, column: 25, scope: !2910)
!2918 = !DILocation(line: 1103, column: 9, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 1103, column: 9)
!2920 = !DILocation(line: 1103, column: 9, scope: !2910)
!2921 = !DILocalVariable(name: "previous_edge", scope: !2922, file: !3, line: 1104, type: !1743)
!2922 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 1103, column: 19)
!2923 = !DILocation(line: 1104, column: 15, scope: !2922)
!2924 = !DILocation(line: 1104, column: 31, scope: !2922)
!2925 = !DILocation(line: 1104, column: 42, scope: !2922)
!2926 = !DILocation(line: 1106, column: 19, scope: !2922)
!2927 = !DILocation(line: 1106, column: 24, scope: !2922)
!2928 = !DILocation(line: 1106, column: 31, scope: !2922)
!2929 = !DILocation(line: 1106, column: 6, scope: !2922)
!2930 = !DILocation(line: 1107, column: 6, scope: !2922)
!2931 = !DILocation(line: 1107, column: 16, scope: !2922)
!2932 = !DILocation(line: 1108, column: 37, scope: !2922)
!2933 = !DILocation(line: 1108, column: 27, scope: !2922)
!2934 = !DILocation(line: 1108, column: 49, scope: !2922)
!2935 = !DILocation(line: 1108, column: 41, scope: !2922)
!2936 = !DILocation(line: 1108, column: 63, scope: !2922)
!2937 = !DILocation(line: 1108, column: 54, scope: !2922)
!2938 = !DILocation(line: 1108, column: 82, scope: !2922)
!2939 = !DILocation(line: 1108, column: 87, scope: !2922)
!2940 = !DILocation(line: 1108, column: 73, scope: !2922)
!2941 = !DILocation(line: 1108, column: 6, scope: !2922)
!2942 = !DILocation(line: 1111, column: 10, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 1111, column: 10)
!2944 = !DILocation(line: 1111, column: 10, scope: !2922)
!2945 = !DILocation(line: 1112, column: 7, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1111, column: 25)
!2947 = !DILocation(line: 1112, column: 22, scope: !2946)
!2948 = !DILocation(line: 1112, column: 28, scope: !2946)
!2949 = !DILocation(line: 1113, column: 6, scope: !2946)
!2950 = !DILocation(line: 1114, column: 5, scope: !2922)
!2951 = !DILocalVariable(name: "previous_edge", scope: !2952, file: !3, line: 1116, type: !1743)
!2952 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 1115, column: 10)
!2953 = !DILocation(line: 1116, column: 15, scope: !2952)
!2954 = !DILocation(line: 1116, column: 31, scope: !2952)
!2955 = !DILocation(line: 1116, column: 42, scope: !2952)
!2956 = !DILocation(line: 1118, column: 10, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 1118, column: 10)
!2958 = !DILocation(line: 1118, column: 10, scope: !2952)
!2959 = !DILocation(line: 1119, column: 20, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 1118, column: 25)
!2961 = !DILocation(line: 1119, column: 25, scope: !2960)
!2962 = !DILocation(line: 1119, column: 32, scope: !2960)
!2963 = !DILocation(line: 1119, column: 7, scope: !2960)
!2964 = !DILocation(line: 1120, column: 7, scope: !2960)
!2965 = !DILocation(line: 1120, column: 17, scope: !2960)
!2966 = !DILocation(line: 1122, column: 18, scope: !2960)
!2967 = !DILocation(line: 1122, column: 23, scope: !2960)
!2968 = !DILocation(line: 1122, column: 29, scope: !2960)
!2969 = !DILocation(line: 1122, column: 32, scope: !2960)
!2970 = !DILocation(line: 1122, column: 47, scope: !2960)
!2971 = !DILocation(line: 1122, column: 7, scope: !2960)
!2972 = !DILocation(line: 1123, column: 7, scope: !2960)
!2973 = !DILocation(line: 1123, column: 22, scope: !2960)
!2974 = !DILocation(line: 1123, column: 28, scope: !2960)
!2975 = !DILocation(line: 1124, column: 6, scope: !2960)
!2976 = !DILocation(line: 1126, column: 4, scope: !2910)
!2977 = !DILocation(line: 1127, column: 3, scope: !2887)
!2978 = !DILocation(line: 1128, column: 2, scope: !2507)
!2979 = !DILocation(line: 984, column: 40, scope: !2504)
!2980 = !DILocation(line: 984, column: 45, scope: !2504)
!2981 = !DILocation(line: 984, column: 38, scope: !2504)
!2982 = !DILocation(line: 984, column: 2, scope: !2504)
!2983 = distinct !{!2983, !2505, !2984}
!2984 = !DILocation(line: 1128, column: 2, scope: !2498)
!2985 = !DILocation(line: 1129, column: 1, scope: !2492)
!2986 = distinct !DISubprogram(name: "RIG_findHead", scope: !3, file: !3, line: 1205, type: !1989, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!2987 = !DILocalVariable(name: "rg", arg: 1, scope: !2986, file: !3, line: 1205, type: !108)
!2988 = !DILocation(line: 1205, column: 36, scope: !2986)
!2989 = !DILocation(line: 1207, column: 6, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2986, file: !3, line: 1207, column: 6)
!2991 = !DILocation(line: 1207, column: 10, scope: !2990)
!2992 = !DILocation(line: 1207, column: 15, scope: !2990)
!2993 = !DILocation(line: 1207, column: 6, scope: !2986)
!2994 = !DILocation(line: 1208, column: 22, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1208, column: 7)
!2996 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 1207, column: 24)
!2997 = !DILocation(line: 1208, column: 26, scope: !2995)
!2998 = !DILocation(line: 1208, column: 7, scope: !2995)
!2999 = !DILocation(line: 1208, column: 32, scope: !2995)
!3000 = !DILocation(line: 1208, column: 7, scope: !2996)
!3001 = !DILocalVariable(name: "arc", scope: !3002, file: !3, line: 1209, type: !1515)
!3002 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 1208, column: 38)
!3003 = !DILocation(line: 1209, column: 12, scope: !3002)
!3004 = !DILocation(line: 1209, column: 18, scope: !3002)
!3005 = !DILocation(line: 1209, column: 22, scope: !3002)
!3006 = !DILocation(line: 1209, column: 27, scope: !3002)
!3007 = !DILocation(line: 1211, column: 26, scope: !3002)
!3008 = !DILocation(line: 1211, column: 31, scope: !3002)
!3009 = !DILocation(line: 1211, column: 4, scope: !3002)
!3010 = !DILocation(line: 1211, column: 8, scope: !3002)
!3011 = !DILocation(line: 1211, column: 13, scope: !3002)
!3012 = !DILocation(line: 1212, column: 3, scope: !3002)
!3013 = !DILocalVariable(name: "arc", scope: !3014, file: !3, line: 1214, type: !1515)
!3014 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 1213, column: 8)
!3015 = !DILocation(line: 1214, column: 12, scope: !3014)
!3016 = !DILocation(line: 1216, column: 15, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 1216, column: 4)
!3018 = !DILocation(line: 1216, column: 19, scope: !3017)
!3019 = !DILocation(line: 1216, column: 24, scope: !3017)
!3020 = !DILocation(line: 1216, column: 13, scope: !3017)
!3021 = !DILocation(line: 1216, column: 9, scope: !3017)
!3022 = !DILocation(line: 1216, column: 31, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 1216, column: 4)
!3024 = !DILocation(line: 1216, column: 4, scope: !3017)
!3025 = !DILocalVariable(name: "edge", scope: !3026, file: !3, line: 1217, type: !1743)
!3026 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 1216, column: 53)
!3027 = !DILocation(line: 1217, column: 14, scope: !3026)
!3028 = !DILocation(line: 1217, column: 21, scope: !3026)
!3029 = !DILocation(line: 1217, column: 26, scope: !3026)
!3030 = !DILocation(line: 1217, column: 32, scope: !3026)
!3031 = !DILocation(line: 1219, column: 9, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 1219, column: 9)
!3033 = !DILocation(line: 1219, column: 15, scope: !3032)
!3034 = !DILocation(line: 1219, column: 21, scope: !3032)
!3035 = !DILocation(line: 1219, column: 26, scope: !3032)
!3036 = !DILocation(line: 1219, column: 9, scope: !3026)
!3037 = !DILocation(line: 1220, column: 17, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 1219, column: 59)
!3039 = !DILocation(line: 1220, column: 22, scope: !3038)
!3040 = !DILocation(line: 1220, column: 6, scope: !3038)
!3041 = !DILocation(line: 1220, column: 10, scope: !3038)
!3042 = !DILocation(line: 1220, column: 15, scope: !3038)
!3043 = !DILocation(line: 1221, column: 6, scope: !3038)
!3044 = !DILocation(line: 1223, column: 4, scope: !3026)
!3045 = !DILocation(line: 1216, column: 42, scope: !3023)
!3046 = !DILocation(line: 1216, column: 47, scope: !3023)
!3047 = !DILocation(line: 1216, column: 40, scope: !3023)
!3048 = !DILocation(line: 1216, column: 4, scope: !3023)
!3049 = distinct !{!3049, !3024, !3050}
!3050 = !DILocation(line: 1223, column: 4, scope: !3017)
!3051 = !DILocation(line: 1226, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1226, column: 7)
!3053 = !DILocation(line: 1226, column: 11, scope: !3052)
!3054 = !DILocation(line: 1226, column: 16, scope: !3052)
!3055 = !DILocation(line: 1226, column: 7, scope: !2996)
!3056 = !DILocation(line: 1227, column: 15, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 1226, column: 25)
!3058 = !DILocation(line: 1227, column: 19, scope: !3057)
!3059 = !DILocation(line: 1227, column: 25, scope: !3057)
!3060 = !DILocation(line: 1227, column: 4, scope: !3057)
!3061 = !DILocation(line: 1227, column: 8, scope: !3057)
!3062 = !DILocation(line: 1227, column: 13, scope: !3057)
!3063 = !DILocation(line: 1228, column: 3, scope: !3057)
!3064 = !DILocation(line: 1229, column: 2, scope: !2996)
!3065 = !DILocation(line: 1230, column: 1, scope: !2986)
!3066 = distinct !DISubprogram(name: "RIG_reconnectControlBones", scope: !3, file: !3, line: 696, type: !1989, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!3067 = !DILocalVariable(name: "rg", arg: 1, scope: !3066, file: !3, line: 696, type: !108)
!3068 = !DILocation(line: 696, column: 49, scope: !3066)
!3069 = !DILocalVariable(name: "ctrl", scope: !3066, file: !3, line: 698, type: !1908)
!3070 = !DILocation(line: 698, column: 14, scope: !3066)
!3071 = !DILocalVariable(name: "changed", scope: !3066, file: !3, line: 699, type: !673)
!3072 = !DILocation(line: 699, column: 7, scope: !3066)
!3073 = !DILocation(line: 702, column: 14, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 702, column: 2)
!3075 = !DILocation(line: 702, column: 18, scope: !3074)
!3076 = !DILocation(line: 702, column: 27, scope: !3074)
!3077 = !DILocation(line: 702, column: 12, scope: !3074)
!3078 = !DILocation(line: 702, column: 7, scope: !3074)
!3079 = !DILocation(line: 702, column: 34, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 702, column: 2)
!3081 = !DILocation(line: 702, column: 2, scope: !3074)
!3082 = !DILocalVariable(name: "pchan", scope: !3083, file: !3, line: 703, type: !3084)
!3083 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 702, column: 59)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !236, line: 243, baseType: !3086)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !236, line: 187, size: 4352, elements: !3087)
!3087 = !{!3088, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3086, file: !236, line: 188, baseType: !3089, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3086, file: !236, line: 188, baseType: !3089, size: 64, offset: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3086, file: !236, line: 190, baseType: !326, size: 64, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !3086, file: !236, line: 192, baseType: !113, size: 128, offset: 192)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3086, file: !236, line: 193, baseType: !337, size: 512, offset: 320)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3086, file: !236, line: 195, baseType: !321, size: 16, offset: 832)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !3086, file: !236, line: 196, baseType: !321, size: 16, offset: 848)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !3086, file: !236, line: 197, baseType: !321, size: 16, offset: 864)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !3086, file: !236, line: 198, baseType: !321, size: 16, offset: 880)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !3086, file: !236, line: 199, baseType: !308, size: 8, offset: 896)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !3086, file: !236, line: 200, baseType: !308, size: 8, offset: 904)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !3086, file: !236, line: 201, baseType: !970, size: 48, offset: 912)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !3086, file: !236, line: 203, baseType: !1420, size: 64, offset: 960)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3086, file: !236, line: 204, baseType: !3089, size: 64, offset: 1024)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3086, file: !236, line: 205, baseType: !3089, size: 64, offset: 1088)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !3086, file: !236, line: 207, baseType: !115, size: 128, offset: 1152)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !3086, file: !236, line: 208, baseType: !115, size: 128, offset: 1280)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !3086, file: !236, line: 210, baseType: !441, size: 64, offset: 1408)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3086, file: !236, line: 211, baseType: !284, size: 64, offset: 1472)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !3086, file: !236, line: 212, baseType: !3089, size: 64, offset: 1536)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3086, file: !236, line: 217, baseType: !141, size: 96, offset: 1600)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3086, file: !236, line: 218, baseType: !141, size: 96, offset: 1696)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !3086, file: !236, line: 221, baseType: !141, size: 96, offset: 1792)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !3086, file: !236, line: 222, baseType: !479, size: 128, offset: 1888)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !3086, file: !236, line: 223, baseType: !141, size: 96, offset: 2016)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !3086, file: !236, line: 223, baseType: !122, size: 32, offset: 2112)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !3086, file: !236, line: 224, baseType: !321, size: 16, offset: 2144)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3086, file: !236, line: 225, baseType: !321, size: 16, offset: 2160)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !3086, file: !236, line: 227, baseType: !488, size: 512, offset: 2176)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !3086, file: !236, line: 228, baseType: !488, size: 512, offset: 2688)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !3086, file: !236, line: 230, baseType: !488, size: 512, offset: 3200)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !3086, file: !236, line: 233, baseType: !141, size: 96, offset: 3712)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !3086, file: !236, line: 234, baseType: !141, size: 96, offset: 3808)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !3086, file: !236, line: 236, baseType: !141, size: 96, offset: 3904)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !3086, file: !236, line: 236, baseType: !141, size: 96, offset: 4000)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !3086, file: !236, line: 237, baseType: !141, size: 96, offset: 4096)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !3086, file: !236, line: 238, baseType: !122, size: 32, offset: 4192)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !3086, file: !236, line: 239, baseType: !122, size: 32, offset: 4224)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !3086, file: !236, line: 240, baseType: !122, size: 32, offset: 4256)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3086, file: !236, line: 242, baseType: !118, size: 64, offset: 4288)
!3129 = !DILocation(line: 703, column: 17, scope: !3083)
!3130 = !DILocalVariable(name: "con", scope: !3083, file: !3, line: 704, type: !3131)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !62, line: 76, baseType: !3133)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !62, line: 54, size: 960, elements: !3134)
!3134 = !{!3135, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3133, file: !62, line: 55, baseType: !3136, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3133, file: !62, line: 55, baseType: !3136, size: 64, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3133, file: !62, line: 57, baseType: !118, size: 64, offset: 128)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3133, file: !62, line: 58, baseType: !321, size: 16, offset: 192)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3133, file: !62, line: 59, baseType: !321, size: 16, offset: 208)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !3133, file: !62, line: 61, baseType: !308, size: 8, offset: 224)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !3133, file: !62, line: 62, baseType: !308, size: 8, offset: 232)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3133, file: !62, line: 64, baseType: !337, size: 512, offset: 240)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3133, file: !62, line: 66, baseType: !321, size: 16, offset: 752)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !3133, file: !62, line: 68, baseType: !122, size: 32, offset: 768)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !3133, file: !62, line: 69, baseType: !122, size: 32, offset: 800)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3133, file: !62, line: 71, baseType: !369, size: 64, offset: 832)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !3133, file: !62, line: 74, baseType: !122, size: 32, offset: 896)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !3133, file: !62, line: 75, baseType: !122, size: 32, offset: 928)
!3150 = !DILocation(line: 704, column: 16, scope: !3083)
!3151 = !DILocalVariable(name: "found", scope: !3083, file: !3, line: 705, type: !145)
!3152 = !DILocation(line: 705, column: 7, scope: !3083)
!3153 = !DILocation(line: 708, column: 16, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 708, column: 3)
!3155 = !DILocation(line: 708, column: 20, scope: !3154)
!3156 = !DILocation(line: 708, column: 24, scope: !3154)
!3157 = !DILocation(line: 708, column: 30, scope: !3154)
!3158 = !DILocation(line: 708, column: 39, scope: !3154)
!3159 = !DILocation(line: 708, column: 14, scope: !3154)
!3160 = !DILocation(line: 708, column: 8, scope: !3154)
!3161 = !DILocation(line: 708, column: 46, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 708, column: 3)
!3163 = !DILocation(line: 708, column: 3, scope: !3154)
!3164 = !DILocation(line: 709, column: 15, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 709, column: 4)
!3166 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 708, column: 74)
!3167 = !DILocation(line: 709, column: 22, scope: !3165)
!3168 = !DILocation(line: 709, column: 34, scope: !3165)
!3169 = !DILocation(line: 709, column: 13, scope: !3165)
!3170 = !DILocation(line: 709, column: 9, scope: !3165)
!3171 = !DILocation(line: 709, column: 41, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 709, column: 4)
!3173 = !DILocation(line: 709, column: 4, scope: !3165)
!3174 = !DILocalVariable(name: "cti", scope: !3175, file: !3, line: 710, type: !3176)
!3175 = distinct !DILexicalBlock(scope: !3172, file: !3, line: 709, column: 63)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !3178, line: 108, baseType: !3179)
!3178 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !3178, line: 80, size: 1088, elements: !3180)
!3180 = !{!3181, !3182, !3183, !3184, !3185, !3189, !3198, !3202, !3206, !3211, !3215, !3241}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3179, file: !3178, line: 82, baseType: !321, size: 16)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3179, file: !3178, line: 83, baseType: !321, size: 16, offset: 16)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3179, file: !3178, line: 84, baseType: !1228, size: 256, offset: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !3179, file: !3178, line: 85, baseType: !1228, size: 256, offset: 288)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !3179, file: !3178, line: 89, baseType: !3186, size: 64, offset: 576)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{null, !3136}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !3179, file: !3178, line: 91, baseType: !3190, size: 64, offset: 640)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{null, !3136, !3193, !118}
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !3178, line: 65, baseType: !3194)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{null, !3136, !3197, !673, !118}
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !3179, file: !3178, line: 93, baseType: !3199, size: 64, offset: 704)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{null, !3136, !3136}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !3179, file: !3178, line: 95, baseType: !3203, size: 64, offset: 768)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{null, !118}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !3179, file: !3178, line: 99, baseType: !3207, size: 64, offset: 832)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!145, !3136, !3210}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !3179, file: !3178, line: 101, baseType: !3212, size: 64, offset: 896)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{null, !3136, !3210, !673}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !3179, file: !3178, line: 105, baseType: !3216, size: 64, offset: 960)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{null, !3136, !3219, !3229, !122}
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !3178, line: 50, size: 1280, elements: !3221)
!3221 = !{!3222, !3223, !3224, !3225, !3226, !3227, !3228}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3220, file: !3178, line: 51, baseType: !608, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3220, file: !3178, line: 52, baseType: !284, size: 64, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !3220, file: !3178, line: 53, baseType: !3089, size: 64, offset: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !3220, file: !3178, line: 55, baseType: !488, size: 512, offset: 192)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !3220, file: !3178, line: 56, baseType: !488, size: 512, offset: 704)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3220, file: !3178, line: 58, baseType: !321, size: 16, offset: 1216)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !3220, file: !3178, line: 59, baseType: !321, size: 16, offset: 1232)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !62, line: 85, size: 1280, elements: !3231)
!3231 = !{!3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3230, file: !62, line: 86, baseType: !3229, size: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3230, file: !62, line: 86, baseType: !3229, size: 64, offset: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !3230, file: !62, line: 88, baseType: !284, size: 64, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !3230, file: !62, line: 89, baseType: !337, size: 512, offset: 192)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !3230, file: !62, line: 91, baseType: !488, size: 512, offset: 704)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !3230, file: !62, line: 93, baseType: !321, size: 16, offset: 1216)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3230, file: !62, line: 94, baseType: !321, size: 16, offset: 1232)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3230, file: !62, line: 95, baseType: !321, size: 16, offset: 1248)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !3230, file: !62, line: 96, baseType: !321, size: 16, offset: 1264)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !3179, file: !3178, line: 107, baseType: !3242, size: 64, offset: 1024)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{null, !3136, !3219, !3210}
!3245 = !DILocation(line: 710, column: 26, scope: !3175)
!3246 = !DILocation(line: 710, column: 60, scope: !3175)
!3247 = !DILocation(line: 710, column: 32, scope: !3175)
!3248 = !DILocalVariable(name: "targets", scope: !3175, file: !3, line: 711, type: !113)
!3249 = !DILocation(line: 711, column: 14, scope: !3175)
!3250 = !DILocalVariable(name: "ct", scope: !3175, file: !3, line: 712, type: !3251)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTarget", file: !62, line: 97, baseType: !3230)
!3253 = !DILocation(line: 712, column: 24, scope: !3175)
!3254 = !DILocation(line: 715, column: 9, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 715, column: 9)
!3256 = !DILocation(line: 715, column: 13, scope: !3255)
!3257 = !DILocation(line: 715, column: 16, scope: !3255)
!3258 = !DILocation(line: 715, column: 21, scope: !3255)
!3259 = !DILocation(line: 715, column: 9, scope: !3175)
!3260 = !DILocalVariable(name: "target_index", scope: !3261, file: !3, line: 716, type: !145)
!3261 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 715, column: 45)
!3262 = !DILocation(line: 716, column: 10, scope: !3261)
!3263 = !DILocation(line: 718, column: 6, scope: !3261)
!3264 = !DILocation(line: 718, column: 11, scope: !3261)
!3265 = !DILocation(line: 718, column: 34, scope: !3261)
!3266 = !DILocation(line: 720, column: 24, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 720, column: 6)
!3268 = !DILocation(line: 720, column: 42, scope: !3267)
!3269 = !DILocation(line: 720, column: 34, scope: !3267)
!3270 = !DILocation(line: 720, column: 32, scope: !3267)
!3271 = !DILocation(line: 720, column: 11, scope: !3267)
!3272 = !DILocation(line: 720, column: 49, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 720, column: 6)
!3274 = !DILocation(line: 720, column: 6, scope: !3267)
!3275 = !DILocation(line: 721, column: 12, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 721, column: 11)
!3277 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 720, column: 84)
!3278 = !DILocation(line: 721, column: 16, scope: !3276)
!3279 = !DILocation(line: 721, column: 23, scope: !3276)
!3280 = !DILocation(line: 721, column: 27, scope: !3276)
!3281 = !DILocation(line: 721, column: 20, scope: !3276)
!3282 = !DILocation(line: 721, column: 31, scope: !3276)
!3283 = !DILocation(line: 721, column: 41, scope: !3276)
!3284 = !DILocation(line: 721, column: 45, scope: !3276)
!3285 = !DILocation(line: 721, column: 56, scope: !3276)
!3286 = !DILocation(line: 721, column: 62, scope: !3276)
!3287 = !DILocation(line: 721, column: 68, scope: !3276)
!3288 = !DILocation(line: 721, column: 34, scope: !3276)
!3289 = !DILocation(line: 721, column: 74, scope: !3276)
!3290 = !DILocation(line: 721, column: 11, scope: !3277)
!3291 = !DILocalVariable(name: "link", scope: !3292, file: !3, line: 723, type: !1542)
!3292 = distinct !DILexicalBlock(scope: !3276, file: !3, line: 721, column: 80)
!3293 = !DILocation(line: 723, column: 18, scope: !3292)
!3294 = !DILocation(line: 723, column: 42, scope: !3292)
!3295 = !DILocation(line: 723, column: 46, scope: !3292)
!3296 = !DILocation(line: 723, column: 57, scope: !3292)
!3297 = !DILocation(line: 723, column: 64, scope: !3292)
!3298 = !DILocation(line: 723, column: 25, scope: !3292)
!3299 = !DILocation(line: 726, column: 12, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 726, column: 12)
!3301 = !DILocation(line: 726, column: 17, scope: !3300)
!3302 = !DILocation(line: 726, column: 12, scope: !3292)
!3303 = !DILocation(line: 728, column: 13, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 728, column: 13)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 726, column: 26)
!3306 = !DILocation(line: 728, column: 18, scope: !3304)
!3307 = !DILocation(line: 728, column: 23, scope: !3304)
!3308 = !DILocation(line: 728, column: 52, scope: !3304)
!3309 = !DILocation(line: 728, column: 55, scope: !3304)
!3310 = !DILocation(line: 728, column: 68, scope: !3304)
!3311 = !DILocation(line: 728, column: 13, scope: !3305)
!3312 = !DILocation(line: 729, column: 14, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 729, column: 14)
!3314 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 728, column: 74)
!3315 = !DILocation(line: 729, column: 20, scope: !3313)
!3316 = !DILocation(line: 729, column: 27, scope: !3313)
!3317 = !DILocation(line: 729, column: 47, scope: !3313)
!3318 = !DILocation(line: 729, column: 51, scope: !3313)
!3319 = !DILocation(line: 729, column: 62, scope: !3313)
!3320 = !DILocation(line: 729, column: 68, scope: !3313)
!3321 = !DILocation(line: 729, column: 76, scope: !3313)
!3322 = !DILocation(line: 729, column: 30, scope: !3313)
!3323 = !DILocation(line: 729, column: 14, scope: !3314)
!3324 = !DILocation(line: 730, column: 18, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 729, column: 83)
!3326 = !DILocation(line: 730, column: 24, scope: !3325)
!3327 = !DILocation(line: 730, column: 16, scope: !3325)
!3328 = !DILocation(line: 731, column: 10, scope: !3325)
!3329 = !DILocation(line: 732, column: 9, scope: !3314)
!3330 = !DILocation(line: 734, column: 35, scope: !3305)
!3331 = !DILocation(line: 734, column: 41, scope: !3305)
!3332 = !DILocation(line: 734, column: 17, scope: !3305)
!3333 = !DILocation(line: 734, column: 15, scope: !3305)
!3334 = !DILocation(line: 735, column: 8, scope: !3305)
!3335 = !DILocation(line: 736, column: 7, scope: !3292)
!3336 = !DILocation(line: 737, column: 6, scope: !3277)
!3337 = !DILocation(line: 720, column: 65, scope: !3273)
!3338 = !DILocation(line: 720, column: 74, scope: !3273)
!3339 = !DILocation(line: 720, column: 78, scope: !3273)
!3340 = !DILocation(line: 720, column: 72, scope: !3273)
!3341 = !DILocation(line: 720, column: 6, scope: !3273)
!3342 = distinct !{!3342, !3274, !3343}
!3343 = !DILocation(line: 737, column: 6, scope: !3267)
!3344 = !DILocation(line: 739, column: 10, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 739, column: 10)
!3346 = !DILocation(line: 739, column: 15, scope: !3345)
!3347 = !DILocation(line: 739, column: 10, scope: !3261)
!3348 = !DILocation(line: 740, column: 7, scope: !3345)
!3349 = !DILocation(line: 740, column: 12, scope: !3345)
!3350 = !DILocation(line: 740, column: 37, scope: !3345)
!3351 = !DILocation(line: 741, column: 5, scope: !3261)
!3352 = !DILocation(line: 742, column: 4, scope: !3175)
!3353 = !DILocation(line: 709, column: 52, scope: !3172)
!3354 = !DILocation(line: 709, column: 57, scope: !3172)
!3355 = !DILocation(line: 709, column: 50, scope: !3172)
!3356 = !DILocation(line: 709, column: 4, scope: !3172)
!3357 = distinct !{!3357, !3173, !3358}
!3358 = !DILocation(line: 742, column: 4, scope: !3165)
!3359 = !DILocation(line: 743, column: 3, scope: !3166)
!3360 = !DILocation(line: 708, column: 61, scope: !3162)
!3361 = !DILocation(line: 708, column: 68, scope: !3162)
!3362 = !DILocation(line: 708, column: 59, scope: !3162)
!3363 = !DILocation(line: 708, column: 3, scope: !3162)
!3364 = distinct !{!3364, !3163, !3365}
!3365 = !DILocation(line: 743, column: 3, scope: !3154)
!3366 = !DILocation(line: 746, column: 7, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 746, column: 7)
!3368 = !DILocation(line: 746, column: 13, scope: !3367)
!3369 = !DILocation(line: 746, column: 7, scope: !3083)
!3370 = !DILocation(line: 747, column: 8, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 747, column: 8)
!3372 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 746, column: 19)
!3373 = !DILocation(line: 747, column: 14, scope: !3371)
!3374 = !DILocation(line: 747, column: 20, scope: !3371)
!3375 = !DILocation(line: 747, column: 8, scope: !3372)
!3376 = !DILocalVariable(name: "link", scope: !3377, file: !3, line: 751, type: !1542)
!3377 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 747, column: 28)
!3378 = !DILocation(line: 751, column: 15, scope: !3377)
!3379 = !DILocation(line: 751, column: 39, scope: !3377)
!3380 = !DILocation(line: 751, column: 43, scope: !3377)
!3381 = !DILocation(line: 751, column: 54, scope: !3377)
!3382 = !DILocation(line: 751, column: 60, scope: !3377)
!3383 = !DILocation(line: 751, column: 66, scope: !3377)
!3384 = !DILocation(line: 751, column: 74, scope: !3377)
!3385 = !DILocation(line: 751, column: 22, scope: !3377)
!3386 = !DILocation(line: 753, column: 31, scope: !3377)
!3387 = !DILocation(line: 753, column: 37, scope: !3377)
!3388 = !DILocation(line: 753, column: 13, scope: !3377)
!3389 = !DILocation(line: 753, column: 11, scope: !3377)
!3390 = !DILocation(line: 754, column: 4, scope: !3377)
!3391 = !DILocalVariable(name: "arc", scope: !3392, file: !3, line: 758, type: !1515)
!3392 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 757, column: 4)
!3393 = !DILocation(line: 758, column: 13, scope: !3392)
!3394 = !DILocalVariable(name: "best_arc", scope: !3392, file: !3, line: 759, type: !1515)
!3395 = !DILocation(line: 759, column: 13, scope: !3392)
!3396 = !DILocalVariable(name: "link", scope: !3392, file: !3, line: 760, type: !1542)
!3397 = !DILocation(line: 760, column: 15, scope: !3392)
!3398 = !DILocation(line: 762, column: 16, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 762, column: 5)
!3400 = !DILocation(line: 762, column: 20, scope: !3399)
!3401 = !DILocation(line: 762, column: 25, scope: !3399)
!3402 = !DILocation(line: 762, column: 14, scope: !3399)
!3403 = !DILocation(line: 762, column: 10, scope: !3399)
!3404 = !DILocation(line: 762, column: 32, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 762, column: 5)
!3406 = !DILocation(line: 762, column: 5, scope: !3399)
!3407 = !DILocalVariable(name: "edge", scope: !3408, file: !3, line: 763, type: !1743)
!3408 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 762, column: 54)
!3409 = !DILocation(line: 763, column: 15, scope: !3408)
!3410 = !DILocation(line: 764, column: 18, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 764, column: 6)
!3412 = !DILocation(line: 764, column: 23, scope: !3411)
!3413 = !DILocation(line: 764, column: 29, scope: !3411)
!3414 = !DILocation(line: 764, column: 16, scope: !3411)
!3415 = !DILocation(line: 764, column: 11, scope: !3411)
!3416 = !DILocation(line: 764, column: 36, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 764, column: 6)
!3418 = !DILocation(line: 764, column: 6, scope: !3411)
!3419 = !DILocation(line: 765, column: 11, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 765, column: 11)
!3421 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 764, column: 61)
!3422 = !DILocation(line: 765, column: 17, scope: !3420)
!3423 = !DILocation(line: 765, column: 11, scope: !3421)
!3424 = !DILocalVariable(name: "fit", scope: !3425, file: !3, line: 766, type: !145)
!3425 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 765, column: 23)
!3426 = !DILocation(line: 766, column: 12, scope: !3425)
!3427 = !DILocation(line: 768, column: 23, scope: !3425)
!3428 = !DILocation(line: 768, column: 29, scope: !3425)
!3429 = !DILocation(line: 768, column: 35, scope: !3425)
!3430 = !DILocation(line: 768, column: 41, scope: !3425)
!3431 = !DILocation(line: 768, column: 47, scope: !3425)
!3432 = !DILocation(line: 768, column: 53, scope: !3425)
!3433 = !DILocation(line: 768, column: 14, scope: !3425)
!3434 = !DILocation(line: 768, column: 59, scope: !3425)
!3435 = !DILocation(line: 768, column: 12, scope: !3425)
!3436 = !DILocation(line: 769, column: 14, scope: !3425)
!3437 = !DILocation(line: 769, column: 18, scope: !3425)
!3438 = !DILocation(line: 769, column: 30, scope: !3425)
!3439 = !DILocation(line: 769, column: 36, scope: !3425)
!3440 = !DILocation(line: 769, column: 42, scope: !3425)
!3441 = !DILocation(line: 769, column: 48, scope: !3425)
!3442 = !DILocation(line: 769, column: 54, scope: !3425)
!3443 = !DILocation(line: 769, column: 60, scope: !3425)
!3444 = !DILocation(line: 769, column: 21, scope: !3425)
!3445 = !DILocation(line: 769, column: 66, scope: !3425)
!3446 = !DILocation(line: 769, column: 12, scope: !3425)
!3447 = !DILocation(line: 771, column: 12, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 771, column: 12)
!3449 = !DILocation(line: 771, column: 12, scope: !3425)
!3450 = !DILocation(line: 774, column: 13, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 774, column: 13)
!3452 = distinct !DILexicalBlock(scope: !3448, file: !3, line: 771, column: 17)
!3453 = !DILocation(line: 774, column: 22, scope: !3451)
!3454 = !DILocation(line: 774, column: 30, scope: !3451)
!3455 = !DILocation(line: 774, column: 33, scope: !3451)
!3456 = !DILocation(line: 774, column: 38, scope: !3451)
!3457 = !DILocation(line: 774, column: 55, scope: !3451)
!3458 = !DILocation(line: 774, column: 65, scope: !3451)
!3459 = !DILocation(line: 774, column: 53, scope: !3451)
!3460 = !DILocation(line: 774, column: 13, scope: !3452)
!3461 = !DILocation(line: 775, column: 21, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 774, column: 81)
!3463 = !DILocation(line: 775, column: 19, scope: !3462)
!3464 = !DILocation(line: 776, column: 17, scope: !3462)
!3465 = !DILocation(line: 776, column: 23, scope: !3462)
!3466 = !DILocation(line: 776, column: 15, scope: !3462)
!3467 = !DILocation(line: 777, column: 9, scope: !3462)
!3468 = !DILocation(line: 778, column: 8, scope: !3452)
!3469 = !DILocation(line: 779, column: 7, scope: !3425)
!3470 = !DILocation(line: 780, column: 6, scope: !3421)
!3471 = !DILocation(line: 764, column: 49, scope: !3417)
!3472 = !DILocation(line: 764, column: 55, scope: !3417)
!3473 = !DILocation(line: 764, column: 47, scope: !3417)
!3474 = !DILocation(line: 764, column: 6, scope: !3417)
!3475 = distinct !{!3475, !3418, !3476}
!3476 = !DILocation(line: 780, column: 6, scope: !3411)
!3477 = !DILocation(line: 781, column: 5, scope: !3408)
!3478 = !DILocation(line: 762, column: 43, scope: !3405)
!3479 = !DILocation(line: 762, column: 48, scope: !3405)
!3480 = !DILocation(line: 762, column: 41, scope: !3405)
!3481 = !DILocation(line: 762, column: 5, scope: !3405)
!3482 = distinct !{!3482, !3406, !3483}
!3483 = !DILocation(line: 781, column: 5, scope: !3399)
!3484 = !DILocation(line: 783, column: 31, scope: !3392)
!3485 = !DILocation(line: 783, column: 37, scope: !3392)
!3486 = !DILocation(line: 783, column: 13, scope: !3392)
!3487 = !DILocation(line: 783, column: 11, scope: !3392)
!3488 = !DILocation(line: 785, column: 3, scope: !3372)
!3489 = !DILocation(line: 788, column: 7, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 788, column: 7)
!3491 = !DILocation(line: 788, column: 13, scope: !3490)
!3492 = !DILocation(line: 788, column: 7, scope: !3083)
!3493 = !DILocalVariable(name: "arc", scope: !3494, file: !3, line: 789, type: !1515)
!3494 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 788, column: 19)
!3495 = !DILocation(line: 789, column: 12, scope: !3494)
!3496 = !DILocalVariable(name: "best_arc", scope: !3494, file: !3, line: 790, type: !1515)
!3497 = !DILocation(line: 790, column: 12, scope: !3494)
!3498 = !DILocalVariable(name: "link", scope: !3494, file: !3, line: 791, type: !1542)
!3499 = !DILocation(line: 791, column: 14, scope: !3494)
!3500 = !DILocation(line: 793, column: 15, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 793, column: 4)
!3502 = !DILocation(line: 793, column: 19, scope: !3501)
!3503 = !DILocation(line: 793, column: 24, scope: !3501)
!3504 = !DILocation(line: 793, column: 13, scope: !3501)
!3505 = !DILocation(line: 793, column: 9, scope: !3501)
!3506 = !DILocation(line: 793, column: 31, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 793, column: 4)
!3508 = !DILocation(line: 793, column: 4, scope: !3501)
!3509 = !DILocalVariable(name: "edge", scope: !3510, file: !3, line: 794, type: !1743)
!3510 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 793, column: 53)
!3511 = !DILocation(line: 794, column: 14, scope: !3510)
!3512 = !DILocation(line: 795, column: 17, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3510, file: !3, line: 795, column: 5)
!3514 = !DILocation(line: 795, column: 22, scope: !3513)
!3515 = !DILocation(line: 795, column: 28, scope: !3513)
!3516 = !DILocation(line: 795, column: 15, scope: !3513)
!3517 = !DILocation(line: 795, column: 10, scope: !3513)
!3518 = !DILocation(line: 795, column: 35, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 795, column: 5)
!3520 = !DILocation(line: 795, column: 5, scope: !3513)
!3521 = !DILocation(line: 796, column: 10, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 796, column: 10)
!3523 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 795, column: 60)
!3524 = !DILocation(line: 796, column: 16, scope: !3522)
!3525 = !DILocation(line: 796, column: 21, scope: !3522)
!3526 = !DILocation(line: 796, column: 24, scope: !3522)
!3527 = !DILocation(line: 796, column: 30, scope: !3522)
!3528 = !DILocation(line: 796, column: 36, scope: !3522)
!3529 = !DILocation(line: 796, column: 46, scope: !3522)
!3530 = !DILocation(line: 796, column: 52, scope: !3522)
!3531 = !DILocation(line: 796, column: 43, scope: !3522)
!3532 = !DILocation(line: 796, column: 10, scope: !3523)
!3533 = !DILocation(line: 799, column: 11, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 799, column: 11)
!3535 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 796, column: 58)
!3536 = !DILocation(line: 799, column: 20, scope: !3534)
!3537 = !DILocation(line: 799, column: 28, scope: !3534)
!3538 = !DILocation(line: 799, column: 31, scope: !3534)
!3539 = !DILocation(line: 799, column: 36, scope: !3534)
!3540 = !DILocation(line: 799, column: 53, scope: !3534)
!3541 = !DILocation(line: 799, column: 63, scope: !3534)
!3542 = !DILocation(line: 799, column: 51, scope: !3534)
!3543 = !DILocation(line: 799, column: 11, scope: !3535)
!3544 = !DILocation(line: 800, column: 19, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 799, column: 79)
!3546 = !DILocation(line: 800, column: 17, scope: !3545)
!3547 = !DILocation(line: 801, column: 15, scope: !3545)
!3548 = !DILocation(line: 801, column: 21, scope: !3545)
!3549 = !DILocation(line: 801, column: 13, scope: !3545)
!3550 = !DILocation(line: 802, column: 7, scope: !3545)
!3551 = !DILocation(line: 803, column: 6, scope: !3535)
!3552 = !DILocation(line: 804, column: 5, scope: !3523)
!3553 = !DILocation(line: 795, column: 48, scope: !3519)
!3554 = !DILocation(line: 795, column: 54, scope: !3519)
!3555 = !DILocation(line: 795, column: 46, scope: !3519)
!3556 = !DILocation(line: 795, column: 5, scope: !3519)
!3557 = distinct !{!3557, !3520, !3558}
!3558 = !DILocation(line: 804, column: 5, scope: !3513)
!3559 = !DILocation(line: 805, column: 4, scope: !3510)
!3560 = !DILocation(line: 793, column: 42, scope: !3507)
!3561 = !DILocation(line: 793, column: 47, scope: !3507)
!3562 = !DILocation(line: 793, column: 40, scope: !3507)
!3563 = !DILocation(line: 793, column: 4, scope: !3507)
!3564 = distinct !{!3564, !3508, !3565}
!3565 = !DILocation(line: 805, column: 4, scope: !3501)
!3566 = !DILocation(line: 807, column: 30, scope: !3494)
!3567 = !DILocation(line: 807, column: 36, scope: !3494)
!3568 = !DILocation(line: 807, column: 12, scope: !3494)
!3569 = !DILocation(line: 807, column: 10, scope: !3494)
!3570 = !DILocation(line: 808, column: 3, scope: !3494)
!3571 = !DILocation(line: 810, column: 2, scope: !3083)
!3572 = !DILocation(line: 702, column: 47, scope: !3080)
!3573 = !DILocation(line: 702, column: 53, scope: !3080)
!3574 = !DILocation(line: 702, column: 45, scope: !3080)
!3575 = !DILocation(line: 702, column: 2, scope: !3080)
!3576 = distinct !{!3576, !3081, !3577}
!3577 = !DILocation(line: 810, column: 2, scope: !3074)
!3578 = !DILocation(line: 814, column: 2, scope: !3066)
!3579 = !DILocation(line: 814, column: 9, scope: !3066)
!3580 = !DILocation(line: 815, column: 11, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 814, column: 18)
!3582 = !DILocation(line: 817, column: 15, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 817, column: 3)
!3584 = !DILocation(line: 817, column: 19, scope: !3583)
!3585 = !DILocation(line: 817, column: 28, scope: !3583)
!3586 = !DILocation(line: 817, column: 13, scope: !3583)
!3587 = !DILocation(line: 817, column: 8, scope: !3583)
!3588 = !DILocation(line: 817, column: 35, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 817, column: 3)
!3590 = !DILocation(line: 817, column: 3, scope: !3583)
!3591 = !DILocation(line: 819, column: 8, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 819, column: 8)
!3593 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 817, column: 60)
!3594 = !DILocation(line: 819, column: 14, scope: !3592)
!3595 = !DILocation(line: 819, column: 19, scope: !3592)
!3596 = !DILocation(line: 819, column: 8, scope: !3593)
!3597 = !DILocalVariable(name: "pchan", scope: !3598, file: !3, line: 820, type: !3084)
!3598 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 819, column: 28)
!3599 = !DILocation(line: 820, column: 19, scope: !3598)
!3600 = !DILocalVariable(name: "con", scope: !3598, file: !3, line: 821, type: !3131)
!3601 = !DILocation(line: 821, column: 18, scope: !3598)
!3602 = !DILocalVariable(name: "ctrl_parent", scope: !3598, file: !3, line: 822, type: !1908)
!3603 = !DILocation(line: 822, column: 17, scope: !3598)
!3604 = !DILocalVariable(name: "ctrl_child", scope: !3598, file: !3, line: 823, type: !1908)
!3605 = !DILocation(line: 823, column: 17, scope: !3598)
!3606 = !DILocalVariable(name: "found", scope: !3598, file: !3, line: 824, type: !145)
!3607 = !DILocation(line: 824, column: 9, scope: !3598)
!3608 = !DILocation(line: 826, column: 9, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 826, column: 9)
!3610 = !DILocation(line: 826, column: 15, scope: !3609)
!3611 = !DILocation(line: 826, column: 21, scope: !3609)
!3612 = !DILocation(line: 826, column: 9, scope: !3598)
!3613 = !DILocation(line: 827, column: 37, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 826, column: 29)
!3615 = !DILocation(line: 827, column: 41, scope: !3614)
!3616 = !DILocation(line: 827, column: 55, scope: !3614)
!3617 = !DILocation(line: 827, column: 61, scope: !3614)
!3618 = !DILocation(line: 827, column: 67, scope: !3614)
!3619 = !DILocation(line: 827, column: 75, scope: !3614)
!3620 = !DILocation(line: 827, column: 20, scope: !3614)
!3621 = !DILocation(line: 827, column: 18, scope: !3614)
!3622 = !DILocation(line: 828, column: 5, scope: !3614)
!3623 = !DILocation(line: 833, column: 18, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 833, column: 5)
!3625 = !DILocation(line: 833, column: 22, scope: !3624)
!3626 = !DILocation(line: 833, column: 26, scope: !3624)
!3627 = !DILocation(line: 833, column: 32, scope: !3624)
!3628 = !DILocation(line: 833, column: 41, scope: !3624)
!3629 = !DILocation(line: 833, column: 16, scope: !3624)
!3630 = !DILocation(line: 833, column: 10, scope: !3624)
!3631 = !DILocation(line: 833, column: 48, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 833, column: 5)
!3633 = !DILocation(line: 833, column: 5, scope: !3624)
!3634 = !DILocation(line: 834, column: 17, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 834, column: 6)
!3636 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 833, column: 76)
!3637 = !DILocation(line: 834, column: 24, scope: !3635)
!3638 = !DILocation(line: 834, column: 36, scope: !3635)
!3639 = !DILocation(line: 834, column: 15, scope: !3635)
!3640 = !DILocation(line: 834, column: 11, scope: !3635)
!3641 = !DILocation(line: 834, column: 43, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3635, file: !3, line: 834, column: 6)
!3643 = !DILocation(line: 834, column: 6, scope: !3635)
!3644 = !DILocalVariable(name: "cti", scope: !3645, file: !3, line: 835, type: !3176)
!3645 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 834, column: 65)
!3646 = !DILocation(line: 835, column: 28, scope: !3645)
!3647 = !DILocation(line: 835, column: 62, scope: !3645)
!3648 = !DILocation(line: 835, column: 34, scope: !3645)
!3649 = !DILocalVariable(name: "targets", scope: !3645, file: !3, line: 836, type: !113)
!3650 = !DILocation(line: 836, column: 16, scope: !3645)
!3651 = !DILocalVariable(name: "ct", scope: !3645, file: !3, line: 837, type: !3251)
!3652 = !DILocation(line: 837, column: 26, scope: !3645)
!3653 = !DILocation(line: 840, column: 11, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 840, column: 11)
!3655 = !DILocation(line: 840, column: 15, scope: !3654)
!3656 = !DILocation(line: 840, column: 18, scope: !3654)
!3657 = !DILocation(line: 840, column: 23, scope: !3654)
!3658 = !DILocation(line: 840, column: 11, scope: !3645)
!3659 = !DILocation(line: 841, column: 8, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 840, column: 47)
!3661 = !DILocation(line: 841, column: 13, scope: !3660)
!3662 = !DILocation(line: 841, column: 36, scope: !3660)
!3663 = !DILocation(line: 843, column: 26, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 843, column: 8)
!3665 = !DILocation(line: 843, column: 18, scope: !3664)
!3666 = !DILocation(line: 843, column: 16, scope: !3664)
!3667 = !DILocation(line: 843, column: 13, scope: !3664)
!3668 = !DILocation(line: 843, column: 33, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 843, column: 8)
!3670 = !DILocation(line: 843, column: 8, scope: !3664)
!3671 = !DILocation(line: 844, column: 14, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 844, column: 13)
!3673 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 843, column: 52)
!3674 = !DILocation(line: 844, column: 18, scope: !3672)
!3675 = !DILocation(line: 844, column: 25, scope: !3672)
!3676 = !DILocation(line: 844, column: 29, scope: !3672)
!3677 = !DILocation(line: 844, column: 22, scope: !3672)
!3678 = !DILocation(line: 844, column: 33, scope: !3672)
!3679 = !DILocation(line: 844, column: 43, scope: !3672)
!3680 = !DILocation(line: 844, column: 47, scope: !3672)
!3681 = !DILocation(line: 844, column: 58, scope: !3672)
!3682 = !DILocation(line: 844, column: 64, scope: !3672)
!3683 = !DILocation(line: 844, column: 70, scope: !3672)
!3684 = !DILocation(line: 844, column: 36, scope: !3672)
!3685 = !DILocation(line: 844, column: 76, scope: !3672)
!3686 = !DILocation(line: 844, column: 13, scope: !3673)
!3687 = !DILocalVariable(name: "link", scope: !3688, file: !3, line: 846, type: !1908)
!3688 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 844, column: 82)
!3689 = !DILocation(line: 846, column: 22, scope: !3688)
!3690 = !DILocation(line: 846, column: 46, scope: !3688)
!3691 = !DILocation(line: 846, column: 50, scope: !3688)
!3692 = !DILocation(line: 846, column: 64, scope: !3688)
!3693 = !DILocation(line: 846, column: 71, scope: !3688)
!3694 = !DILocation(line: 846, column: 29, scope: !3688)
!3695 = !DILocation(line: 849, column: 14, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 849, column: 14)
!3697 = !DILocation(line: 849, column: 19, scope: !3696)
!3698 = !DILocation(line: 849, column: 22, scope: !3696)
!3699 = !DILocation(line: 849, column: 28, scope: !3696)
!3700 = !DILocation(line: 849, column: 14, scope: !3688)
!3701 = !DILocation(line: 850, column: 29, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 849, column: 34)
!3703 = !DILocation(line: 850, column: 35, scope: !3702)
!3704 = !DILocation(line: 850, column: 41, scope: !3702)
!3705 = !DILocation(line: 850, column: 11, scope: !3702)
!3706 = !DILocation(line: 851, column: 17, scope: !3702)
!3707 = !DILocation(line: 852, column: 11, scope: !3702)
!3708 = !DILocation(line: 854, column: 9, scope: !3688)
!3709 = !DILocation(line: 855, column: 8, scope: !3673)
!3710 = !DILocation(line: 843, column: 42, scope: !3669)
!3711 = !DILocation(line: 843, column: 46, scope: !3669)
!3712 = !DILocation(line: 843, column: 40, scope: !3669)
!3713 = !DILocation(line: 843, column: 8, scope: !3669)
!3714 = distinct !{!3714, !3670, !3715}
!3715 = !DILocation(line: 855, column: 8, scope: !3664)
!3716 = !DILocation(line: 857, column: 12, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 857, column: 12)
!3718 = !DILocation(line: 857, column: 17, scope: !3717)
!3719 = !DILocation(line: 857, column: 12, scope: !3660)
!3720 = !DILocation(line: 858, column: 9, scope: !3717)
!3721 = !DILocation(line: 858, column: 14, scope: !3717)
!3722 = !DILocation(line: 858, column: 39, scope: !3717)
!3723 = !DILocation(line: 859, column: 7, scope: !3660)
!3724 = !DILocation(line: 860, column: 6, scope: !3645)
!3725 = !DILocation(line: 834, column: 54, scope: !3642)
!3726 = !DILocation(line: 834, column: 59, scope: !3642)
!3727 = !DILocation(line: 834, column: 52, scope: !3642)
!3728 = !DILocation(line: 834, column: 6, scope: !3642)
!3729 = distinct !{!3729, !3643, !3730}
!3730 = !DILocation(line: 860, column: 6, scope: !3635)
!3731 = !DILocation(line: 861, column: 5, scope: !3636)
!3732 = !DILocation(line: 833, column: 63, scope: !3632)
!3733 = !DILocation(line: 833, column: 70, scope: !3632)
!3734 = !DILocation(line: 833, column: 61, scope: !3632)
!3735 = !DILocation(line: 833, column: 5, scope: !3632)
!3736 = distinct !{!3736, !3633, !3737}
!3737 = !DILocation(line: 861, column: 5, scope: !3624)
!3738 = !DILocation(line: 863, column: 9, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 863, column: 9)
!3740 = !DILocation(line: 863, column: 15, scope: !3739)
!3741 = !DILocation(line: 863, column: 9, scope: !3598)
!3742 = !DILocation(line: 865, column: 10, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !3, line: 865, column: 10)
!3744 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 863, column: 21)
!3745 = !DILocation(line: 865, column: 22, scope: !3743)
!3746 = !DILocation(line: 865, column: 25, scope: !3743)
!3747 = !DILocation(line: 865, column: 38, scope: !3743)
!3748 = !DILocation(line: 865, column: 10, scope: !3744)
!3749 = !DILocation(line: 866, column: 25, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 865, column: 44)
!3751 = !DILocation(line: 866, column: 31, scope: !3750)
!3752 = !DILocation(line: 866, column: 44, scope: !3750)
!3753 = !DILocation(line: 866, column: 7, scope: !3750)
!3754 = !DILocation(line: 867, column: 15, scope: !3750)
!3755 = !DILocation(line: 868, column: 6, scope: !3750)
!3756 = !DILocation(line: 871, column: 25, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 871, column: 7)
!3758 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 869, column: 11)
!3759 = !DILocation(line: 871, column: 29, scope: !3757)
!3760 = !DILocation(line: 871, column: 38, scope: !3757)
!3761 = !DILocation(line: 871, column: 23, scope: !3757)
!3762 = !DILocation(line: 871, column: 12, scope: !3757)
!3763 = !DILocation(line: 871, column: 45, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3757, file: !3, line: 871, column: 7)
!3765 = !DILocation(line: 871, column: 7, scope: !3757)
!3766 = !DILocation(line: 873, column: 12, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 873, column: 12)
!3768 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 871, column: 88)
!3769 = !DILocation(line: 873, column: 24, scope: !3767)
!3770 = !DILocation(line: 873, column: 29, scope: !3767)
!3771 = !DILocation(line: 873, column: 32, scope: !3767)
!3772 = !DILocation(line: 873, column: 44, scope: !3767)
!3773 = !DILocation(line: 873, column: 50, scope: !3767)
!3774 = !DILocation(line: 873, column: 60, scope: !3767)
!3775 = !DILocation(line: 873, column: 66, scope: !3767)
!3776 = !DILocation(line: 873, column: 57, scope: !3767)
!3777 = !DILocation(line: 873, column: 12, scope: !3768)
!3778 = !DILocation(line: 874, column: 27, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 873, column: 72)
!3780 = !DILocation(line: 874, column: 33, scope: !3779)
!3781 = !DILocation(line: 874, column: 45, scope: !3779)
!3782 = !DILocation(line: 874, column: 9, scope: !3779)
!3783 = !DILocation(line: 875, column: 17, scope: !3779)
!3784 = !DILocation(line: 876, column: 9, scope: !3779)
!3785 = !DILocation(line: 878, column: 7, scope: !3768)
!3786 = !DILocation(line: 871, column: 70, scope: !3764)
!3787 = !DILocation(line: 871, column: 82, scope: !3764)
!3788 = !DILocation(line: 871, column: 68, scope: !3764)
!3789 = !DILocation(line: 871, column: 7, scope: !3764)
!3790 = distinct !{!3790, !3765, !3791}
!3791 = !DILocation(line: 878, column: 7, scope: !3757)
!3792 = !DILocation(line: 880, column: 5, scope: !3744)
!3793 = !DILocation(line: 881, column: 4, scope: !3598)
!3794 = !DILocation(line: 882, column: 3, scope: !3593)
!3795 = !DILocation(line: 817, column: 48, scope: !3589)
!3796 = !DILocation(line: 817, column: 54, scope: !3589)
!3797 = !DILocation(line: 817, column: 46, scope: !3589)
!3798 = !DILocation(line: 817, column: 3, scope: !3589)
!3799 = distinct !{!3799, !3590, !3800}
!3800 = !DILocation(line: 882, column: 3, scope: !3583)
!3801 = distinct !{!3801, !3578, !3802}
!3802 = !DILocation(line: 883, column: 2, scope: !3066)
!3803 = !DILocation(line: 886, column: 14, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 886, column: 2)
!3805 = !DILocation(line: 886, column: 18, scope: !3804)
!3806 = !DILocation(line: 886, column: 27, scope: !3804)
!3807 = !DILocation(line: 886, column: 12, scope: !3804)
!3808 = !DILocation(line: 886, column: 7, scope: !3804)
!3809 = !DILocation(line: 886, column: 34, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 886, column: 2)
!3811 = !DILocation(line: 886, column: 2, scope: !3804)
!3812 = !DILocation(line: 888, column: 8, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 888, column: 7)
!3814 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 886, column: 59)
!3815 = !DILocation(line: 888, column: 14, scope: !3813)
!3816 = !DILocation(line: 888, column: 19, scope: !3813)
!3817 = !DILocation(line: 888, column: 40, scope: !3813)
!3818 = !DILocation(line: 888, column: 7, scope: !3814)
!3819 = !DILocalVariable(name: "ghi", scope: !3820, file: !3, line: 889, type: !3821)
!3820 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 888, column: 46)
!3821 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !281, line: 54, baseType: !3822)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !281, line: 50, size: 192, elements: !3823)
!3823 = !{!3824, !3825, !3828}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !3822, file: !281, line: 51, baseType: !279, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !3822, file: !281, line: 52, baseType: !3826, size: 64, offset: 64)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !281, line: 52, flags: DIFlagFwdDecl)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !3822, file: !281, line: 53, baseType: !6, size: 32, offset: 128)
!3829 = !DILocation(line: 889, column: 18, scope: !3820)
!3830 = !DILocation(line: 892, column: 33, scope: !3820)
!3831 = !DILocation(line: 892, column: 37, scope: !3820)
!3832 = !DILocation(line: 892, column: 4, scope: !3820)
!3833 = !DILocation(line: 894, column: 4, scope: !3820)
!3834 = !DILocation(line: 894, column: 12, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 894, column: 4)
!3836 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 894, column: 4)
!3837 = !DILocation(line: 894, column: 11, scope: !3835)
!3838 = !DILocation(line: 894, column: 4, scope: !3836)
!3839 = !DILocalVariable(name: "bone", scope: !3840, file: !3, line: 895, type: !1542)
!3840 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 894, column: 72)
!3841 = !DILocation(line: 895, column: 15, scope: !3840)
!3842 = !DILocation(line: 895, column: 34, scope: !3840)
!3843 = !DILocation(line: 895, column: 22, scope: !3840)
!3844 = !DILocation(line: 898, column: 9, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3840, file: !3, line: 898, column: 9)
!3846 = !DILocation(line: 898, column: 15, scope: !3845)
!3847 = !DILocation(line: 898, column: 25, scope: !3845)
!3848 = !DILocation(line: 898, column: 31, scope: !3845)
!3849 = !DILocation(line: 898, column: 22, scope: !3845)
!3850 = !DILocation(line: 898, column: 9, scope: !3840)
!3851 = !DILocation(line: 899, column: 19, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 899, column: 10)
!3853 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 898, column: 37)
!3854 = !DILocation(line: 899, column: 25, scope: !3852)
!3855 = !DILocation(line: 899, column: 31, scope: !3852)
!3856 = !DILocation(line: 899, column: 37, scope: !3852)
!3857 = !DILocation(line: 899, column: 43, scope: !3852)
!3858 = !DILocation(line: 899, column: 10, scope: !3852)
!3859 = !DILocation(line: 899, column: 49, scope: !3852)
!3860 = !DILocation(line: 899, column: 10, scope: !3853)
!3861 = !DILocation(line: 900, column: 7, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 899, column: 58)
!3863 = !DILocation(line: 900, column: 13, scope: !3862)
!3864 = !DILocation(line: 900, column: 23, scope: !3862)
!3865 = !DILocation(line: 901, column: 25, scope: !3862)
!3866 = !DILocation(line: 901, column: 7, scope: !3862)
!3867 = !DILocation(line: 901, column: 13, scope: !3862)
!3868 = !DILocation(line: 901, column: 23, scope: !3862)
!3869 = !DILocation(line: 902, column: 7, scope: !3862)
!3870 = !DILocation(line: 904, column: 24, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 904, column: 15)
!3872 = !DILocation(line: 904, column: 30, scope: !3871)
!3873 = !DILocation(line: 904, column: 36, scope: !3871)
!3874 = !DILocation(line: 904, column: 42, scope: !3871)
!3875 = !DILocation(line: 904, column: 48, scope: !3871)
!3876 = !DILocation(line: 904, column: 15, scope: !3871)
!3877 = !DILocation(line: 904, column: 54, scope: !3871)
!3878 = !DILocation(line: 904, column: 15, scope: !3852)
!3879 = !DILocation(line: 905, column: 7, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 904, column: 63)
!3881 = !DILocation(line: 905, column: 13, scope: !3880)
!3882 = !DILocation(line: 905, column: 23, scope: !3880)
!3883 = !DILocation(line: 906, column: 25, scope: !3880)
!3884 = !DILocation(line: 906, column: 7, scope: !3880)
!3885 = !DILocation(line: 906, column: 13, scope: !3880)
!3886 = !DILocation(line: 906, column: 23, scope: !3880)
!3887 = !DILocation(line: 907, column: 7, scope: !3880)
!3888 = !DILocation(line: 909, column: 5, scope: !3853)
!3889 = !DILocation(line: 910, column: 4, scope: !3840)
!3890 = !DILocation(line: 894, column: 42, scope: !3835)
!3891 = !DILocation(line: 894, column: 4, scope: !3835)
!3892 = distinct !{!3892, !3838, !3893}
!3893 = !DILocation(line: 910, column: 4, scope: !3836)
!3894 = !DILocation(line: 913, column: 8, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 913, column: 8)
!3896 = !DILocation(line: 913, column: 14, scope: !3895)
!3897 = !DILocation(line: 913, column: 24, scope: !3895)
!3898 = !DILocation(line: 913, column: 8, scope: !3820)
!3899 = !DILocation(line: 914, column: 4, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 913, column: 36)
!3901 = !DILocation(line: 915, column: 3, scope: !3820)
!3902 = !DILocation(line: 916, column: 2, scope: !3814)
!3903 = !DILocation(line: 886, column: 47, scope: !3810)
!3904 = !DILocation(line: 886, column: 53, scope: !3810)
!3905 = !DILocation(line: 886, column: 45, scope: !3810)
!3906 = !DILocation(line: 886, column: 2, scope: !3810)
!3907 = distinct !{!3907, !3811, !3908}
!3908 = !DILocation(line: 916, column: 2, scope: !3804)
!3909 = !DILocation(line: 918, column: 1, scope: !3066)
!3910 = distinct !DISubprogram(name: "exec_retargetArctoArc", scope: !3, file: !3, line: 2146, type: !3911, scopeLine: 2147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{null, !275, !118, !145}
!3913 = !DILocalVariable(name: "UNUSED_pool", arg: 1, scope: !3910, file: !3, line: 2146, type: !275)
!3914 = !DILocation(line: 2146, column: 38, scope: !3910)
!3915 = !DILocalVariable(name: "taskdata", arg: 2, scope: !3910, file: !3, line: 2146, type: !118)
!3916 = !DILocation(line: 2146, column: 58, scope: !3910)
!3917 = !DILocalVariable(name: "UNUSED_threadid", arg: 3, scope: !3910, file: !3, line: 2146, type: !145)
!3918 = !DILocation(line: 2146, column: 72, scope: !3910)
!3919 = !DILocalVariable(name: "p", scope: !3910, file: !3, line: 2148, type: !1509)
!3920 = !DILocation(line: 2148, column: 17, scope: !3910)
!3921 = !DILocation(line: 2148, column: 38, scope: !3910)
!3922 = !DILocation(line: 2148, column: 21, scope: !3910)
!3923 = !DILocalVariable(name: "rigg", scope: !3910, file: !3, line: 2149, type: !108)
!3924 = !DILocation(line: 2149, column: 12, scope: !3910)
!3925 = !DILocation(line: 2149, column: 19, scope: !3910)
!3926 = !DILocation(line: 2149, column: 22, scope: !3910)
!3927 = !DILocalVariable(name: "iarc", scope: !3910, file: !3, line: 2150, type: !1515)
!3928 = !DILocation(line: 2150, column: 10, scope: !3910)
!3929 = !DILocation(line: 2150, column: 17, scope: !3910)
!3930 = !DILocation(line: 2150, column: 20, scope: !3910)
!3931 = !DILocalVariable(name: "C", scope: !3910, file: !3, line: 2151, type: !1535)
!3932 = !DILocation(line: 2151, column: 12, scope: !3910)
!3933 = !DILocation(line: 2151, column: 16, scope: !3910)
!3934 = !DILocation(line: 2151, column: 19, scope: !3910)
!3935 = !DILocalVariable(name: "inode_start", scope: !3910, file: !3, line: 2152, type: !1403)
!3936 = !DILocation(line: 2152, column: 11, scope: !3910)
!3937 = !DILocation(line: 2152, column: 25, scope: !3910)
!3938 = !DILocation(line: 2152, column: 28, scope: !3910)
!3939 = !DILocalVariable(name: "earc", scope: !3910, file: !3, line: 2153, type: !1531)
!3940 = !DILocation(line: 2153, column: 11, scope: !3910)
!3941 = !DILocation(line: 2153, column: 18, scope: !3910)
!3942 = !DILocation(line: 2153, column: 24, scope: !3910)
!3943 = !DILocation(line: 2155, column: 21, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 2155, column: 6)
!3945 = !DILocation(line: 2155, column: 27, scope: !3944)
!3946 = !DILocation(line: 2155, column: 6, scope: !3944)
!3947 = !DILocation(line: 2155, column: 34, scope: !3944)
!3948 = !DILocation(line: 2155, column: 6, scope: !3910)
!3949 = !DILocalVariable(name: "edge", scope: !3950, file: !3, line: 2156, type: !1743)
!3950 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2155, column: 40)
!3951 = !DILocation(line: 2156, column: 12, scope: !3950)
!3952 = !DILocation(line: 2156, column: 19, scope: !3950)
!3953 = !DILocation(line: 2156, column: 25, scope: !3950)
!3954 = !DILocation(line: 2156, column: 31, scope: !3950)
!3955 = !DILocation(line: 2158, column: 19, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 2158, column: 7)
!3957 = !DILocation(line: 2158, column: 25, scope: !3956)
!3958 = !DILocation(line: 2158, column: 7, scope: !3956)
!3959 = !DILocation(line: 2158, column: 7, scope: !3950)
!3960 = !DILocation(line: 2159, column: 19, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2158, column: 39)
!3962 = !DILocation(line: 2159, column: 22, scope: !3961)
!3963 = !DILocation(line: 2159, column: 28, scope: !3961)
!3964 = !DILocation(line: 2159, column: 34, scope: !3961)
!3965 = !DILocation(line: 2159, column: 40, scope: !3961)
!3966 = !DILocation(line: 2159, column: 46, scope: !3961)
!3967 = !DILocation(line: 2159, column: 49, scope: !3961)
!3968 = !DILocation(line: 2159, column: 55, scope: !3961)
!3969 = !DILocation(line: 2159, column: 61, scope: !3961)
!3970 = !DILocation(line: 2159, column: 64, scope: !3961)
!3971 = !DILocation(line: 2159, column: 70, scope: !3961)
!3972 = !DILocation(line: 2159, column: 76, scope: !3961)
!3973 = !DILocation(line: 2159, column: 4, scope: !3961)
!3974 = !DILocation(line: 2160, column: 3, scope: !3961)
!3975 = !DILocation(line: 2162, column: 19, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2161, column: 8)
!3977 = !DILocation(line: 2162, column: 22, scope: !3976)
!3978 = !DILocation(line: 2162, column: 28, scope: !3976)
!3979 = !DILocation(line: 2162, column: 34, scope: !3976)
!3980 = !DILocation(line: 2162, column: 40, scope: !3976)
!3981 = !DILocation(line: 2162, column: 46, scope: !3976)
!3982 = !DILocation(line: 2162, column: 49, scope: !3976)
!3983 = !DILocation(line: 2162, column: 55, scope: !3976)
!3984 = !DILocation(line: 2162, column: 61, scope: !3976)
!3985 = !DILocation(line: 2162, column: 64, scope: !3976)
!3986 = !DILocation(line: 2162, column: 70, scope: !3976)
!3987 = !DILocation(line: 2162, column: 76, scope: !3976)
!3988 = !DILocation(line: 2162, column: 4, scope: !3976)
!3989 = !DILocation(line: 2164, column: 2, scope: !3950)
!3990 = !DILocalVariable(name: "mode", scope: !3991, file: !3, line: 2166, type: !3992)
!3991 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2165, column: 7)
!3992 = !DIDerivedType(tag: DW_TAG_typedef, name: "RetargetMode", file: !3, line: 68, baseType: !5)
!3993 = !DILocation(line: 2166, column: 16, scope: !3991)
!3994 = !DILocation(line: 2166, column: 45, scope: !3991)
!3995 = !DILocation(line: 2166, column: 23, scope: !3991)
!3996 = !DILocation(line: 2168, column: 7, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 2168, column: 7)
!3998 = !DILocation(line: 2168, column: 12, scope: !3997)
!3999 = !DILocation(line: 2168, column: 7, scope: !3991)
!4000 = !DILocation(line: 2169, column: 30, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 2168, column: 36)
!4002 = !DILocation(line: 2169, column: 33, scope: !4001)
!4003 = !DILocation(line: 2169, column: 39, scope: !4001)
!4004 = !DILocation(line: 2169, column: 45, scope: !4001)
!4005 = !DILocation(line: 2169, column: 4, scope: !4001)
!4006 = !DILocation(line: 2170, column: 3, scope: !4001)
!4007 = !DILocation(line: 2172, column: 27, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 2171, column: 8)
!4009 = !DILocation(line: 2172, column: 30, scope: !4008)
!4010 = !DILocation(line: 2172, column: 36, scope: !4008)
!4011 = !DILocation(line: 2172, column: 42, scope: !4008)
!4012 = !DILocation(line: 2172, column: 4, scope: !4008)
!4013 = !DILocation(line: 2175, column: 1, scope: !3910)
!4014 = distinct !DISubprogram(name: "testFlipArc", scope: !3, file: !3, line: 1930, type: !4015, scopeLine: 1931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!145, !1515, !1403}
!4017 = !DILocalVariable(name: "iarc", arg: 1, scope: !4014, file: !3, line: 1930, type: !1515)
!4018 = !DILocation(line: 1930, column: 32, scope: !4014)
!4019 = !DILocalVariable(name: "inode_start", arg: 2, scope: !4014, file: !3, line: 1930, type: !1403)
!4020 = !DILocation(line: 1930, column: 47, scope: !4014)
!4021 = !DILocalVariable(name: "earc", scope: !4014, file: !3, line: 1932, type: !1531)
!4022 = !DILocation(line: 1932, column: 11, scope: !4014)
!4023 = !DILocation(line: 1932, column: 18, scope: !4014)
!4024 = !DILocation(line: 1932, column: 24, scope: !4014)
!4025 = !DILocalVariable(name: "enode_start", scope: !4014, file: !3, line: 1933, type: !198)
!4026 = !DILocation(line: 1933, column: 12, scope: !4014)
!4027 = !DILocation(line: 1933, column: 44, scope: !4014)
!4028 = !DILocation(line: 1933, column: 50, scope: !4014)
!4029 = !DILocation(line: 1933, column: 63, scope: !4014)
!4030 = !DILocation(line: 1933, column: 26, scope: !4014)
!4031 = !DILocation(line: 1936, column: 7, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1936, column: 6)
!4033 = !DILocation(line: 1936, column: 22, scope: !4032)
!4034 = !DILocation(line: 1936, column: 28, scope: !4032)
!4035 = !DILocation(line: 1936, column: 19, scope: !4032)
!4036 = !DILocation(line: 1936, column: 33, scope: !4032)
!4037 = !DILocation(line: 1936, column: 36, scope: !4032)
!4038 = !DILocation(line: 1936, column: 51, scope: !4032)
!4039 = !DILocation(line: 1936, column: 57, scope: !4032)
!4040 = !DILocation(line: 1936, column: 48, scope: !4032)
!4041 = !DILocation(line: 1936, column: 63, scope: !4032)
!4042 = !DILocation(line: 1937, column: 7, scope: !4032)
!4043 = !DILocation(line: 1937, column: 22, scope: !4032)
!4044 = !DILocation(line: 1937, column: 28, scope: !4032)
!4045 = !DILocation(line: 1937, column: 19, scope: !4032)
!4046 = !DILocation(line: 1937, column: 33, scope: !4032)
!4047 = !DILocation(line: 1937, column: 36, scope: !4032)
!4048 = !DILocation(line: 1937, column: 51, scope: !4032)
!4049 = !DILocation(line: 1937, column: 57, scope: !4032)
!4050 = !DILocation(line: 1937, column: 48, scope: !4032)
!4051 = !DILocation(line: 1936, column: 6, scope: !4014)
!4052 = !DILocation(line: 1939, column: 3, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 1938, column: 2)
!4054 = !DILocation(line: 1942, column: 3, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 1941, column: 7)
!4056 = !DILocation(line: 1944, column: 1, scope: !4014)
!4057 = distinct !DISubprogram(name: "repositionBone", scope: !3, file: !3, line: 1606, type: !4058, scopeLine: 1607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{null, !1535, !108, !1743, !1578, !1578, !1578}
!4060 = !DILocalVariable(name: "C", arg: 1, scope: !4057, file: !3, line: 1606, type: !1535)
!4061 = !DILocation(line: 1606, column: 38, scope: !4057)
!4062 = !DILocalVariable(name: "rigg", arg: 2, scope: !4057, file: !3, line: 1606, type: !108)
!4063 = !DILocation(line: 1606, column: 51, scope: !4057)
!4064 = !DILocalVariable(name: "edge", arg: 3, scope: !4057, file: !3, line: 1606, type: !1743)
!4065 = !DILocation(line: 1606, column: 66, scope: !4057)
!4066 = !DILocalVariable(name: "vec0", arg: 4, scope: !4057, file: !3, line: 1606, type: !1578)
!4067 = !DILocation(line: 1606, column: 78, scope: !4057)
!4068 = !DILocalVariable(name: "vec1", arg: 5, scope: !4057, file: !3, line: 1606, type: !1578)
!4069 = !DILocation(line: 1606, column: 93, scope: !4057)
!4070 = !DILocalVariable(name: "up_axis", arg: 6, scope: !4057, file: !3, line: 1606, type: !1578)
!4071 = !DILocation(line: 1606, column: 108, scope: !4057)
!4072 = !DILocalVariable(name: "scene", scope: !4057, file: !3, line: 1608, type: !2047)
!4073 = !DILocation(line: 1608, column: 9, scope: !4057)
!4074 = !DILocation(line: 1608, column: 32, scope: !4057)
!4075 = !DILocation(line: 1608, column: 17, scope: !4057)
!4076 = !DILocalVariable(name: "bone", scope: !4057, file: !3, line: 1609, type: !1542)
!4077 = !DILocation(line: 1609, column: 12, scope: !4057)
!4078 = !DILocalVariable(name: "ctrl", scope: !4057, file: !3, line: 1610, type: !1908)
!4079 = !DILocation(line: 1610, column: 14, scope: !4057)
!4080 = !DILocalVariable(name: "qrot", scope: !4057, file: !3, line: 1611, type: !479)
!4081 = !DILocation(line: 1611, column: 8, scope: !4057)
!4082 = !DILocalVariable(name: "resize", scope: !4057, file: !3, line: 1611, type: !122)
!4083 = !DILocation(line: 1611, column: 17, scope: !4057)
!4084 = !DILocalVariable(name: "v1", scope: !4057, file: !3, line: 1612, type: !141)
!4085 = !DILocation(line: 1612, column: 8, scope: !4057)
!4086 = !DILocalVariable(name: "v2", scope: !4057, file: !3, line: 1612, type: !141)
!4087 = !DILocation(line: 1612, column: 15, scope: !4057)
!4088 = !DILocalVariable(name: "l1", scope: !4057, file: !3, line: 1613, type: !122)
!4089 = !DILocation(line: 1613, column: 8, scope: !4057)
!4090 = !DILocalVariable(name: "l2", scope: !4057, file: !3, line: 1613, type: !122)
!4091 = !DILocation(line: 1613, column: 12, scope: !4057)
!4092 = !DILocation(line: 1615, column: 9, scope: !4057)
!4093 = !DILocation(line: 1615, column: 15, scope: !4057)
!4094 = !DILocation(line: 1615, column: 7, scope: !4057)
!4095 = !DILocation(line: 1617, column: 14, scope: !4057)
!4096 = !DILocation(line: 1617, column: 18, scope: !4057)
!4097 = !DILocation(line: 1617, column: 24, scope: !4057)
!4098 = !DILocation(line: 1617, column: 30, scope: !4057)
!4099 = !DILocation(line: 1617, column: 36, scope: !4057)
!4100 = !DILocation(line: 1617, column: 2, scope: !4057)
!4101 = !DILocation(line: 1618, column: 14, scope: !4057)
!4102 = !DILocation(line: 1618, column: 18, scope: !4057)
!4103 = !DILocation(line: 1618, column: 24, scope: !4057)
!4104 = !DILocation(line: 1618, column: 2, scope: !4057)
!4105 = !DILocation(line: 1620, column: 20, scope: !4057)
!4106 = !DILocation(line: 1620, column: 7, scope: !4057)
!4107 = !DILocation(line: 1620, column: 5, scope: !4057)
!4108 = !DILocation(line: 1621, column: 20, scope: !4057)
!4109 = !DILocation(line: 1621, column: 7, scope: !4057)
!4110 = !DILocation(line: 1621, column: 5, scope: !4057)
!4111 = !DILocation(line: 1623, column: 11, scope: !4057)
!4112 = !DILocation(line: 1623, column: 16, scope: !4057)
!4113 = !DILocation(line: 1623, column: 14, scope: !4057)
!4114 = !DILocation(line: 1623, column: 9, scope: !4057)
!4115 = !DILocation(line: 1625, column: 32, scope: !4057)
!4116 = !DILocation(line: 1625, column: 38, scope: !4057)
!4117 = !DILocation(line: 1625, column: 42, scope: !4057)
!4118 = !DILocation(line: 1625, column: 2, scope: !4057)
!4119 = !DILocation(line: 1627, column: 13, scope: !4057)
!4120 = !DILocation(line: 1627, column: 19, scope: !4057)
!4121 = !DILocation(line: 1627, column: 25, scope: !4057)
!4122 = !DILocation(line: 1627, column: 2, scope: !4057)
!4123 = !DILocation(line: 1628, column: 13, scope: !4057)
!4124 = !DILocation(line: 1628, column: 19, scope: !4057)
!4125 = !DILocation(line: 1628, column: 25, scope: !4057)
!4126 = !DILocation(line: 1628, column: 2, scope: !4057)
!4127 = !DILocation(line: 1630, column: 18, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 1630, column: 6)
!4129 = !DILocation(line: 1630, column: 7, scope: !4128)
!4130 = !DILocation(line: 1630, column: 6, scope: !4057)
!4131 = !DILocalVariable(name: "qroll", scope: !4132, file: !3, line: 1631, type: !479)
!4132 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 1630, column: 28)
!4133 = !DILocation(line: 1631, column: 9, scope: !4132)
!4134 = !DILocation(line: 1633, column: 7, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1633, column: 7)
!4136 = !DILocation(line: 1633, column: 14, scope: !4135)
!4137 = !DILocation(line: 1633, column: 28, scope: !4135)
!4138 = !DILocation(line: 1633, column: 48, scope: !4135)
!4139 = !DILocation(line: 1633, column: 7, scope: !4132)
!4140 = !DILocation(line: 1634, column: 39, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 1633, column: 74)
!4142 = !DILocation(line: 1634, column: 45, scope: !4141)
!4143 = !DILocation(line: 1634, column: 51, scope: !4141)
!4144 = !DILocation(line: 1634, column: 60, scope: !4141)
!4145 = !DILocation(line: 1634, column: 66, scope: !4141)
!4146 = !DILocation(line: 1634, column: 73, scope: !4141)
!4147 = !DILocation(line: 1634, column: 17, scope: !4141)
!4148 = !DILocation(line: 1634, column: 4, scope: !4141)
!4149 = !DILocation(line: 1634, column: 10, scope: !4141)
!4150 = !DILocation(line: 1634, column: 15, scope: !4141)
!4151 = !DILocation(line: 1635, column: 3, scope: !4141)
!4152 = !DILocation(line: 1636, column: 12, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 1636, column: 12)
!4154 = !DILocation(line: 1636, column: 19, scope: !4153)
!4155 = !DILocation(line: 1636, column: 33, scope: !4153)
!4156 = !DILocation(line: 1636, column: 53, scope: !4153)
!4157 = !DILocation(line: 1636, column: 12, scope: !4135)
!4158 = !DILocation(line: 1637, column: 37, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 1636, column: 80)
!4160 = !DILocation(line: 1637, column: 43, scope: !4159)
!4161 = !DILocation(line: 1637, column: 49, scope: !4159)
!4162 = !DILocation(line: 1637, column: 55, scope: !4159)
!4163 = !DILocation(line: 1637, column: 61, scope: !4159)
!4164 = !DILocation(line: 1637, column: 68, scope: !4159)
!4165 = !DILocation(line: 1637, column: 17, scope: !4159)
!4166 = !DILocation(line: 1637, column: 4, scope: !4159)
!4167 = !DILocation(line: 1637, column: 10, scope: !4159)
!4168 = !DILocation(line: 1637, column: 15, scope: !4159)
!4169 = !DILocation(line: 1638, column: 3, scope: !4159)
!4170 = !DILocation(line: 1640, column: 12, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4153, file: !3, line: 1639, column: 8)
!4172 = !DILocation(line: 1640, column: 4, scope: !4171)
!4173 = !DILocation(line: 1643, column: 15, scope: !4132)
!4174 = !DILocation(line: 1643, column: 21, scope: !4132)
!4175 = !DILocation(line: 1643, column: 28, scope: !4132)
!4176 = !DILocation(line: 1643, column: 3, scope: !4132)
!4177 = !DILocation(line: 1644, column: 2, scope: !4132)
!4178 = !DILocation(line: 1646, column: 31, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 1645, column: 7)
!4180 = !DILocation(line: 1646, column: 37, scope: !4179)
!4181 = !DILocation(line: 1646, column: 43, scope: !4179)
!4182 = !DILocation(line: 1646, column: 52, scope: !4179)
!4183 = !DILocation(line: 1646, column: 16, scope: !4179)
!4184 = !DILocation(line: 1646, column: 3, scope: !4179)
!4185 = !DILocation(line: 1646, column: 9, scope: !4179)
!4186 = !DILocation(line: 1646, column: 14, scope: !4179)
!4187 = !DILocation(line: 1649, column: 14, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 1649, column: 2)
!4189 = !DILocation(line: 1649, column: 20, scope: !4188)
!4190 = !DILocation(line: 1649, column: 29, scope: !4188)
!4191 = !DILocation(line: 1649, column: 12, scope: !4188)
!4192 = !DILocation(line: 1649, column: 7, scope: !4188)
!4193 = !DILocation(line: 1649, column: 36, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1649, column: 2)
!4195 = !DILocation(line: 1649, column: 2, scope: !4188)
!4196 = !DILocation(line: 1650, column: 7, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 1650, column: 7)
!4198 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 1649, column: 61)
!4199 = !DILocation(line: 1650, column: 13, scope: !4197)
!4200 = !DILocation(line: 1650, column: 21, scope: !4197)
!4201 = !DILocation(line: 1650, column: 18, scope: !4197)
!4202 = !DILocation(line: 1650, column: 7, scope: !4198)
!4203 = !DILocation(line: 1651, column: 22, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 1650, column: 27)
!4205 = !DILocation(line: 1651, column: 28, scope: !4204)
!4206 = !DILocation(line: 1651, column: 34, scope: !4204)
!4207 = !DILocation(line: 1651, column: 40, scope: !4204)
!4208 = !DILocation(line: 1651, column: 46, scope: !4204)
!4209 = !DILocation(line: 1651, column: 52, scope: !4204)
!4210 = !DILocation(line: 1651, column: 4, scope: !4204)
!4211 = !DILocation(line: 1652, column: 3, scope: !4204)
!4212 = !DILocation(line: 1653, column: 7, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 1653, column: 7)
!4214 = !DILocation(line: 1653, column: 13, scope: !4213)
!4215 = !DILocation(line: 1653, column: 26, scope: !4213)
!4216 = !DILocation(line: 1653, column: 23, scope: !4213)
!4217 = !DILocation(line: 1653, column: 7, scope: !4198)
!4218 = !DILocation(line: 1654, column: 26, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 1653, column: 32)
!4220 = !DILocation(line: 1654, column: 32, scope: !4219)
!4221 = !DILocation(line: 1654, column: 4, scope: !4219)
!4222 = !DILocation(line: 1655, column: 3, scope: !4219)
!4223 = !DILocation(line: 1656, column: 2, scope: !4198)
!4224 = !DILocation(line: 1649, column: 49, scope: !4194)
!4225 = !DILocation(line: 1649, column: 55, scope: !4194)
!4226 = !DILocation(line: 1649, column: 47, scope: !4194)
!4227 = !DILocation(line: 1649, column: 2, scope: !4194)
!4228 = distinct !{!4228, !4195, !4229}
!4229 = !DILocation(line: 1656, column: 2, scope: !4188)
!4230 = !DILocation(line: 1657, column: 1, scope: !4057)
!4231 = distinct !DISubprogram(name: "detectArcRetargetMode", scope: !3, file: !3, line: 1663, type: !4232, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!3992, !1515}
!4234 = !DILocalVariable(name: "iarc", arg: 1, scope: !4231, file: !3, line: 1663, type: !1515)
!4235 = !DILocation(line: 1663, column: 51, scope: !4231)
!4236 = !DILocalVariable(name: "mode", scope: !4231, file: !3, line: 1665, type: !3992)
!4237 = !DILocation(line: 1665, column: 15, scope: !4231)
!4238 = !DILocalVariable(name: "earc", scope: !4231, file: !3, line: 1666, type: !1531)
!4239 = !DILocation(line: 1666, column: 11, scope: !4231)
!4240 = !DILocation(line: 1666, column: 18, scope: !4231)
!4241 = !DILocation(line: 1666, column: 24, scope: !4231)
!4242 = !DILocalVariable(name: "edge", scope: !4231, file: !3, line: 1667, type: !1743)
!4243 = !DILocation(line: 1667, column: 11, scope: !4231)
!4244 = !DILocalVariable(name: "large_angle", scope: !4231, file: !3, line: 1668, type: !145)
!4245 = !DILocation(line: 1668, column: 6, scope: !4231)
!4246 = !DILocalVariable(name: "avg_angle", scope: !4231, file: !3, line: 1669, type: !122)
!4247 = !DILocation(line: 1669, column: 8, scope: !4231)
!4248 = !DILocalVariable(name: "nb_edges", scope: !4231, file: !3, line: 1671, type: !145)
!4249 = !DILocation(line: 1671, column: 6, scope: !4231)
!4250 = !DILocation(line: 1674, column: 14, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 1674, column: 2)
!4252 = !DILocation(line: 1674, column: 20, scope: !4251)
!4253 = !DILocation(line: 1674, column: 26, scope: !4251)
!4254 = !DILocation(line: 1674, column: 12, scope: !4251)
!4255 = !DILocation(line: 1674, column: 7, scope: !4251)
!4256 = !DILocation(line: 1674, column: 33, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 1674, column: 2)
!4258 = !DILocation(line: 1674, column: 2, scope: !4251)
!4259 = !DILocation(line: 1675, column: 16, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 1674, column: 58)
!4261 = !DILocation(line: 1675, column: 22, scope: !4260)
!4262 = !DILocation(line: 1675, column: 13, scope: !4260)
!4263 = !DILocation(line: 1676, column: 11, scope: !4260)
!4264 = !DILocation(line: 1677, column: 2, scope: !4260)
!4265 = !DILocation(line: 1674, column: 46, scope: !4257)
!4266 = !DILocation(line: 1674, column: 52, scope: !4257)
!4267 = !DILocation(line: 1674, column: 44, scope: !4257)
!4268 = !DILocation(line: 1674, column: 2, scope: !4257)
!4269 = distinct !{!4269, !4258, !4270}
!4270 = !DILocation(line: 1677, column: 2, scope: !4251)
!4271 = !DILocation(line: 1679, column: 15, scope: !4231)
!4272 = !DILocation(line: 1679, column: 24, scope: !4231)
!4273 = !DILocation(line: 1679, column: 12, scope: !4231)
!4274 = !DILocation(line: 1684, column: 6, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 1684, column: 6)
!4276 = !DILocation(line: 1684, column: 15, scope: !4275)
!4277 = !DILocation(line: 1684, column: 6, scope: !4231)
!4278 = !DILocation(line: 1685, column: 15, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !3, line: 1685, column: 3)
!4280 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 1684, column: 20)
!4281 = !DILocation(line: 1685, column: 21, scope: !4279)
!4282 = !DILocation(line: 1685, column: 27, scope: !4279)
!4283 = !DILocation(line: 1685, column: 13, scope: !4279)
!4284 = !DILocation(line: 1685, column: 8, scope: !4279)
!4285 = !DILocation(line: 1685, column: 34, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 1685, column: 3)
!4287 = !DILocation(line: 1685, column: 3, scope: !4279)
!4288 = !DILocation(line: 1686, column: 14, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 1686, column: 8)
!4290 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 1685, column: 59)
!4291 = !DILocation(line: 1686, column: 20, scope: !4289)
!4292 = !DILocation(line: 1686, column: 28, scope: !4289)
!4293 = !DILocation(line: 1686, column: 26, scope: !4289)
!4294 = !DILocation(line: 1686, column: 8, scope: !4289)
!4295 = !DILocation(line: 1686, column: 39, scope: !4289)
!4296 = !DILocation(line: 1686, column: 8, scope: !4290)
!4297 = !DILocation(line: 1687, column: 17, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1686, column: 60)
!4299 = !DILocation(line: 1688, column: 4, scope: !4298)
!4300 = !DILocation(line: 1689, column: 3, scope: !4290)
!4301 = !DILocation(line: 1685, column: 47, scope: !4286)
!4302 = !DILocation(line: 1685, column: 53, scope: !4286)
!4303 = !DILocation(line: 1685, column: 45, scope: !4286)
!4304 = !DILocation(line: 1685, column: 3, scope: !4286)
!4305 = distinct !{!4305, !4287, !4306}
!4306 = !DILocation(line: 1689, column: 3, scope: !4279)
!4307 = !DILocation(line: 1690, column: 2, scope: !4280)
!4308 = !DILocation(line: 1691, column: 11, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 1691, column: 11)
!4310 = !DILocation(line: 1691, column: 20, scope: !4309)
!4311 = !DILocation(line: 1691, column: 25, scope: !4309)
!4312 = !DILocation(line: 1691, column: 28, scope: !4309)
!4313 = !DILocation(line: 1691, column: 38, scope: !4309)
!4314 = !DILocation(line: 1691, column: 11, scope: !4275)
!4315 = !DILocation(line: 1692, column: 15, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 1691, column: 43)
!4317 = !DILocation(line: 1693, column: 2, scope: !4316)
!4318 = !DILocation(line: 1696, column: 6, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 1696, column: 6)
!4320 = !DILocation(line: 1696, column: 18, scope: !4319)
!4321 = !DILocation(line: 1696, column: 6, scope: !4231)
!4322 = !DILocation(line: 1697, column: 8, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 1696, column: 24)
!4324 = !DILocation(line: 1698, column: 2, scope: !4323)
!4325 = !DILocation(line: 1700, column: 6, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 1700, column: 6)
!4327 = !DILocation(line: 1700, column: 12, scope: !4326)
!4328 = !DILocation(line: 1700, column: 23, scope: !4326)
!4329 = !DILocation(line: 1700, column: 29, scope: !4326)
!4330 = !DILocation(line: 1700, column: 35, scope: !4326)
!4331 = !DILocation(line: 1700, column: 19, scope: !4326)
!4332 = !DILocation(line: 1700, column: 6, scope: !4231)
!4333 = !DILocation(line: 1701, column: 8, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 1700, column: 41)
!4335 = !DILocation(line: 1702, column: 2, scope: !4334)
!4336 = !DILocation(line: 1704, column: 9, scope: !4231)
!4337 = !DILocation(line: 1704, column: 2, scope: !4231)
!4338 = distinct !DISubprogram(name: "retargetArctoArcAggresive", scope: !3, file: !3, line: 1946, type: !4339, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{null, !1535, !108, !1515, !1403}
!4341 = !DILocalVariable(name: "C", arg: 1, scope: !4338, file: !3, line: 1946, type: !1535)
!4342 = !DILocation(line: 1946, column: 49, scope: !4338)
!4343 = !DILocalVariable(name: "rigg", arg: 2, scope: !4338, file: !3, line: 1946, type: !108)
!4344 = !DILocation(line: 1946, column: 62, scope: !4338)
!4345 = !DILocalVariable(name: "iarc", arg: 3, scope: !4338, file: !3, line: 1946, type: !1515)
!4346 = !DILocation(line: 1946, column: 76, scope: !4338)
!4347 = !DILocalVariable(name: "inode_start", arg: 4, scope: !4338, file: !3, line: 1946, type: !1403)
!4348 = !DILocation(line: 1946, column: 91, scope: !4338)
!4349 = !DILocalVariable(name: "arc_iter", scope: !4338, file: !3, line: 1948, type: !4350)
!4350 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReebArcIterator", file: !200, line: 141, baseType: !4351)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReebArcIterator", file: !200, line: 122, size: 896, elements: !4352)
!4352 = !{!4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4351, file: !200, line: 123, baseType: !1555, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4351, file: !200, line: 124, baseType: !1560, size: 64, offset: 64)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !4351, file: !200, line: 125, baseType: !1562, size: 64, offset: 128)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4351, file: !200, line: 126, baseType: !1567, size: 64, offset: 192)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "nextN", scope: !4351, file: !200, line: 127, baseType: !1569, size: 64, offset: 256)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !4351, file: !200, line: 128, baseType: !1571, size: 64, offset: 320)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !4351, file: !200, line: 129, baseType: !1573, size: 64, offset: 384)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4351, file: !200, line: 131, baseType: !1578, size: 64, offset: 448)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !4351, file: !200, line: 131, baseType: !1578, size: 64, offset: 512)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4351, file: !200, line: 132, baseType: !122, size: 32, offset: 576)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4351, file: !200, line: 134, baseType: !145, size: 32, offset: 608)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4351, file: !200, line: 135, baseType: !145, size: 32, offset: 640)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "arc", scope: !4351, file: !200, line: 137, baseType: !210, size: 64, offset: 704)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4351, file: !200, line: 138, baseType: !145, size: 32, offset: 768)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4351, file: !200, line: 139, baseType: !145, size: 32, offset: 800)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !4351, file: !200, line: 140, baseType: !145, size: 32, offset: 832)
!4369 = !DILocation(line: 1948, column: 18, scope: !4338)
!4370 = !DILocalVariable(name: "iter", scope: !4338, file: !3, line: 1949, type: !1550)
!4371 = !DILocation(line: 1949, column: 16, scope: !4338)
!4372 = !DILocation(line: 1949, column: 23, scope: !4338)
!4373 = !DILocalVariable(name: "edge", scope: !4338, file: !3, line: 1950, type: !1743)
!4374 = !DILocation(line: 1950, column: 11, scope: !4338)
!4375 = !DILocalVariable(name: "node_start", scope: !4338, file: !3, line: 1951, type: !198)
!4376 = !DILocation(line: 1951, column: 12, scope: !4338)
!4377 = !DILocalVariable(name: "node_end", scope: !4338, file: !3, line: 1951, type: !198)
!4378 = !DILocation(line: 1951, column: 25, scope: !4338)
!4379 = !DILocalVariable(name: "earc", scope: !4338, file: !3, line: 1952, type: !1531)
!4380 = !DILocation(line: 1952, column: 11, scope: !4338)
!4381 = !DILocation(line: 1952, column: 18, scope: !4338)
!4382 = !DILocation(line: 1952, column: 24, scope: !4338)
!4383 = !DILocalVariable(name: "angle_weight", scope: !4338, file: !3, line: 1953, type: !122)
!4384 = !DILocation(line: 1953, column: 8, scope: !4338)
!4385 = !DILocalVariable(name: "length_weight", scope: !4338, file: !3, line: 1954, type: !122)
!4386 = !DILocation(line: 1954, column: 8, scope: !4338)
!4387 = !DILocalVariable(name: "distance_weight", scope: !4338, file: !3, line: 1955, type: !122)
!4388 = !DILocation(line: 1955, column: 8, scope: !4338)
!4389 = !DILocalVariable(name: "vec0", scope: !4338, file: !3, line: 1959, type: !1578)
!4390 = !DILocation(line: 1959, column: 9, scope: !4338)
!4391 = !DILocalVariable(name: "vec1", scope: !4338, file: !3, line: 1959, type: !1578)
!4392 = !DILocation(line: 1959, column: 16, scope: !4338)
!4393 = !DILocalVariable(name: "best_positions", scope: !4338, file: !3, line: 1960, type: !4394)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!4395 = !DILocation(line: 1960, column: 7, scope: !4338)
!4396 = !DILocalVariable(name: "nb_edges", scope: !4338, file: !3, line: 1961, type: !145)
!4397 = !DILocation(line: 1961, column: 6, scope: !4338)
!4398 = !DILocation(line: 1961, column: 32, scope: !4338)
!4399 = !DILocation(line: 1961, column: 38, scope: !4338)
!4400 = !DILocation(line: 1961, column: 17, scope: !4338)
!4401 = !DILocalVariable(name: "nb_joints", scope: !4338, file: !3, line: 1962, type: !145)
!4402 = !DILocation(line: 1962, column: 6, scope: !4338)
!4403 = !DILocation(line: 1962, column: 18, scope: !4338)
!4404 = !DILocation(line: 1962, column: 27, scope: !4338)
!4405 = !DILocalVariable(name: "method", scope: !4338, file: !3, line: 1963, type: !4406)
!4406 = !DIDerivedType(tag: DW_TAG_typedef, name: "RetargetMethod", file: !3, line: 73, baseType: !94)
!4407 = !DILocation(line: 1963, column: 17, scope: !4338)
!4408 = !DILocalVariable(name: "i", scope: !4338, file: !3, line: 1964, type: !145)
!4409 = !DILocation(line: 1964, column: 6, scope: !4338)
!4410 = !DILocation(line: 1966, column: 6, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1966, column: 6)
!4412 = !DILocation(line: 1966, column: 18, scope: !4411)
!4413 = !DILocation(line: 1966, column: 24, scope: !4411)
!4414 = !DILocation(line: 1966, column: 16, scope: !4411)
!4415 = !DILocation(line: 1966, column: 6, scope: !4338)
!4416 = !DILocation(line: 1967, column: 3, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1966, column: 32)
!4418 = !DILocation(line: 1968, column: 3, scope: !4417)
!4419 = !DILocation(line: 1971, column: 19, scope: !4338)
!4420 = !DILocation(line: 1971, column: 45, scope: !4338)
!4421 = !DILocation(line: 1971, column: 43, scope: !4338)
!4422 = !DILocation(line: 1971, column: 17, scope: !4338)
!4423 = !DILocation(line: 1973, column: 18, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1973, column: 6)
!4425 = !DILocation(line: 1973, column: 24, scope: !4424)
!4426 = !DILocation(line: 1973, column: 6, scope: !4424)
!4427 = !DILocation(line: 1973, column: 6, scope: !4338)
!4428 = !DILocation(line: 1974, column: 16, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1973, column: 38)
!4430 = !DILocation(line: 1974, column: 22, scope: !4429)
!4431 = !DILocation(line: 1974, column: 14, scope: !4429)
!4432 = !DILocation(line: 1975, column: 14, scope: !4429)
!4433 = !DILocation(line: 1975, column: 20, scope: !4429)
!4434 = !DILocation(line: 1975, column: 12, scope: !4429)
!4435 = !DILocation(line: 1976, column: 2, scope: !4429)
!4436 = !DILocation(line: 1978, column: 16, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1977, column: 7)
!4438 = !DILocation(line: 1978, column: 22, scope: !4437)
!4439 = !DILocation(line: 1978, column: 14, scope: !4437)
!4440 = !DILocation(line: 1979, column: 14, scope: !4437)
!4441 = !DILocation(line: 1979, column: 20, scope: !4437)
!4442 = !DILocation(line: 1979, column: 12, scope: !4437)
!4443 = !DILocation(line: 1983, column: 6, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1983, column: 6)
!4445 = !DILocation(line: 1983, column: 19, scope: !4444)
!4446 = !DILocation(line: 1983, column: 25, scope: !4444)
!4447 = !DILocation(line: 1983, column: 16, scope: !4444)
!4448 = !DILocation(line: 1983, column: 6, scope: !4338)
!4449 = !DILocation(line: 1985, column: 10, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1985, column: 3)
!4451 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1983, column: 33)
!4452 = !DILocation(line: 1985, column: 8, scope: !4450)
!4453 = !DILocation(line: 1985, column: 15, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 1985, column: 3)
!4455 = !DILocation(line: 1985, column: 19, scope: !4454)
!4456 = !DILocation(line: 1985, column: 17, scope: !4454)
!4457 = !DILocation(line: 1985, column: 3, scope: !4450)
!4458 = !DILocation(line: 1986, column: 24, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1985, column: 35)
!4460 = !DILocation(line: 1986, column: 26, scope: !4459)
!4461 = !DILocation(line: 1986, column: 4, scope: !4459)
!4462 = !DILocation(line: 1986, column: 19, scope: !4459)
!4463 = !DILocation(line: 1986, column: 22, scope: !4459)
!4464 = !DILocation(line: 1987, column: 3, scope: !4459)
!4465 = !DILocation(line: 1985, column: 31, scope: !4454)
!4466 = !DILocation(line: 1985, column: 3, scope: !4454)
!4467 = distinct !{!4467, !4457, !4468}
!4468 = !DILocation(line: 1987, column: 3, scope: !4450)
!4469 = !DILocation(line: 1988, column: 2, scope: !4451)
!4470 = !DILocation(line: 1989, column: 6, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1989, column: 6)
!4472 = !DILocation(line: 1989, column: 13, scope: !4471)
!4473 = !DILocation(line: 1989, column: 6, scope: !4338)
!4474 = !DILocalVariable(name: "nb_positions", scope: !4475, file: !3, line: 1990, type: !145)
!4475 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 1989, column: 32)
!4476 = !DILocation(line: 1990, column: 7, scope: !4475)
!4477 = !DILocation(line: 1990, column: 22, scope: !4475)
!4478 = !DILocation(line: 1990, column: 28, scope: !4475)
!4479 = !DILocalVariable(name: "nb_memo_nodes", scope: !4475, file: !3, line: 1991, type: !145)
!4480 = !DILocation(line: 1991, column: 7, scope: !4475)
!4481 = !DILocation(line: 1991, column: 23, scope: !4475)
!4482 = !DILocation(line: 1991, column: 38, scope: !4475)
!4483 = !DILocation(line: 1991, column: 36, scope: !4475)
!4484 = !DILocation(line: 1991, column: 54, scope: !4475)
!4485 = !DILocation(line: 1991, column: 64, scope: !4475)
!4486 = !DILocation(line: 1991, column: 51, scope: !4475)
!4487 = !DILocalVariable(name: "table", scope: !4475, file: !3, line: 1992, type: !4488)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoNode", file: !3, line: 56, baseType: !4490)
!4490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MemoNode", file: !3, line: 53, size: 64, elements: !4491)
!4491 = !{!4492, !4493}
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4490, file: !3, line: 54, baseType: !122, size: 32)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4490, file: !3, line: 55, baseType: !145, size: 32, offset: 32)
!4494 = !DILocation(line: 1992, column: 13, scope: !4475)
!4495 = !DILocation(line: 1992, column: 21, scope: !4475)
!4496 = !DILocation(line: 1992, column: 33, scope: !4475)
!4497 = !DILocation(line: 1992, column: 47, scope: !4475)
!4498 = !DILocalVariable(name: "positions_cache", scope: !4475, file: !3, line: 1996, type: !4499)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!4500 = !DILocation(line: 1996, column: 11, scope: !4475)
!4501 = !DILocation(line: 1996, column: 29, scope: !4475)
!4502 = !DILocation(line: 1996, column: 60, scope: !4475)
!4503 = !DILocation(line: 1996, column: 73, scope: !4475)
!4504 = !DILocation(line: 1996, column: 59, scope: !4475)
!4505 = !DILocation(line: 1996, column: 57, scope: !4475)
!4506 = !DILocation(line: 1998, column: 24, scope: !4475)
!4507 = !DILocation(line: 1998, column: 36, scope: !4475)
!4508 = !DILocation(line: 1998, column: 3, scope: !4475)
!4509 = !DILocation(line: 1998, column: 22, scope: !4475)
!4510 = !DILocation(line: 1999, column: 39, scope: !4475)
!4511 = !DILocation(line: 1999, column: 49, scope: !4475)
!4512 = !DILocation(line: 1999, column: 3, scope: !4475)
!4513 = !DILocation(line: 1999, column: 19, scope: !4475)
!4514 = !DILocation(line: 1999, column: 32, scope: !4475)
!4515 = !DILocation(line: 1999, column: 37, scope: !4475)
!4516 = !DILocation(line: 2001, column: 19, scope: !4475)
!4517 = !DILocation(line: 2001, column: 25, scope: !4475)
!4518 = !DILocation(line: 2001, column: 31, scope: !4475)
!4519 = !DILocation(line: 2001, column: 3, scope: !4475)
!4520 = !DILocation(line: 2003, column: 10, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4475, file: !3, line: 2003, column: 3)
!4522 = !DILocation(line: 2003, column: 8, scope: !4521)
!4523 = !DILocation(line: 2003, column: 15, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 2003, column: 3)
!4525 = !DILocation(line: 2003, column: 20, scope: !4524)
!4526 = !DILocation(line: 2003, column: 17, scope: !4524)
!4527 = !DILocation(line: 2003, column: 3, scope: !4521)
!4528 = !DILocalVariable(name: "bucket", scope: !4529, file: !3, line: 2004, type: !4530)
!4529 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 2003, column: 39)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "EmbedBucket", file: !200, line: 67, baseType: !227)
!4532 = !DILocation(line: 2004, column: 17, scope: !4529)
!4533 = !DILocation(line: 2004, column: 34, scope: !4529)
!4534 = !DILocation(line: 2004, column: 40, scope: !4529)
!4535 = !DILocation(line: 2004, column: 26, scope: !4529)
!4536 = !DILocation(line: 2005, column: 25, scope: !4529)
!4537 = !DILocation(line: 2005, column: 33, scope: !4529)
!4538 = !DILocation(line: 2005, column: 4, scope: !4529)
!4539 = !DILocation(line: 2005, column: 20, scope: !4529)
!4540 = !DILocation(line: 2005, column: 23, scope: !4529)
!4541 = !DILocation(line: 2006, column: 3, scope: !4529)
!4542 = !DILocation(line: 2003, column: 35, scope: !4524)
!4543 = !DILocation(line: 2003, column: 3, scope: !4524)
!4544 = distinct !{!4544, !4527, !4545}
!4545 = !DILocation(line: 2006, column: 3, scope: !4521)
!4546 = !DILocation(line: 2012, column: 15, scope: !4475)
!4547 = !DILocation(line: 2012, column: 22, scope: !4475)
!4548 = !DILocation(line: 2012, column: 28, scope: !4475)
!4549 = !DILocation(line: 2012, column: 45, scope: !4475)
!4550 = !DILocation(line: 2012, column: 56, scope: !4475)
!4551 = !DILocation(line: 2012, column: 62, scope: !4475)
!4552 = !DILocation(line: 2012, column: 76, scope: !4475)
!4553 = !DILocation(line: 2012, column: 82, scope: !4475)
!4554 = !DILocation(line: 2012, column: 88, scope: !4475)
!4555 = !DILocation(line: 2012, column: 95, scope: !4475)
!4556 = !DILocation(line: 2012, column: 106, scope: !4475)
!4557 = !DILocation(line: 2012, column: 120, scope: !4475)
!4558 = !DILocation(line: 2012, column: 135, scope: !4475)
!4559 = !DILocation(line: 2012, column: 3, scope: !4475)
!4560 = !DILocation(line: 2015, column: 21, scope: !4475)
!4561 = !DILocation(line: 2015, column: 37, scope: !4475)
!4562 = !DILocation(line: 2015, column: 44, scope: !4475)
!4563 = !DILocation(line: 2015, column: 50, scope: !4475)
!4564 = !DILocation(line: 2015, column: 58, scope: !4475)
!4565 = !DILocation(line: 2015, column: 3, scope: !4475)
!4566 = !DILocation(line: 2017, column: 3, scope: !4475)
!4567 = !DILocation(line: 2017, column: 13, scope: !4475)
!4568 = !DILocation(line: 2018, column: 3, scope: !4475)
!4569 = !DILocation(line: 2018, column: 13, scope: !4475)
!4570 = !DILocation(line: 2019, column: 2, scope: !4475)
!4571 = !DILocation(line: 2021, column: 9, scope: !4338)
!4572 = !DILocation(line: 2021, column: 21, scope: !4338)
!4573 = !DILocation(line: 2021, column: 7, scope: !4338)
!4574 = !DILocation(line: 2022, column: 18, scope: !4338)
!4575 = !DILocation(line: 2022, column: 24, scope: !4338)
!4576 = !DILocation(line: 2022, column: 30, scope: !4338)
!4577 = !DILocation(line: 2022, column: 2, scope: !4338)
!4578 = !DILocation(line: 2032, column: 14, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 2032, column: 2)
!4580 = !DILocation(line: 2032, column: 20, scope: !4579)
!4581 = !DILocation(line: 2032, column: 26, scope: !4579)
!4582 = !DILocation(line: 2032, column: 12, scope: !4579)
!4583 = !DILocation(line: 2032, column: 35, scope: !4579)
!4584 = !DILocation(line: 2032, column: 7, scope: !4579)
!4585 = !DILocation(line: 2033, column: 7, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 2032, column: 2)
!4587 = !DILocation(line: 2032, column: 2, scope: !4579)
!4588 = !DILocalVariable(name: "no", scope: !4589, file: !3, line: 2036, type: !1578)
!4589 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 2035, column: 2)
!4590 = !DILocation(line: 2036, column: 10, scope: !4589)
!4591 = !DILocation(line: 2037, column: 7, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2037, column: 7)
!4593 = !DILocation(line: 2037, column: 11, scope: !4592)
!4594 = !DILocation(line: 2037, column: 9, scope: !4592)
!4595 = !DILocation(line: 2037, column: 7, scope: !4589)
!4596 = !DILocalVariable(name: "bucket", scope: !4597, file: !3, line: 2038, type: !4530)
!4597 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 2037, column: 22)
!4598 = !DILocation(line: 2038, column: 17, scope: !4597)
!4599 = !DILocation(line: 2038, column: 34, scope: !4597)
!4600 = !DILocation(line: 2038, column: 40, scope: !4597)
!4601 = !DILocation(line: 2038, column: 55, scope: !4597)
!4602 = !DILocation(line: 2038, column: 26, scope: !4597)
!4603 = !DILocation(line: 2039, column: 11, scope: !4597)
!4604 = !DILocation(line: 2039, column: 19, scope: !4597)
!4605 = !DILocation(line: 2039, column: 9, scope: !4597)
!4606 = !DILocation(line: 2040, column: 9, scope: !4597)
!4607 = !DILocation(line: 2040, column: 17, scope: !4597)
!4608 = !DILocation(line: 2040, column: 7, scope: !4597)
!4609 = !DILocation(line: 2041, column: 3, scope: !4597)
!4610 = !DILocation(line: 2043, column: 11, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 2042, column: 8)
!4612 = !DILocation(line: 2043, column: 21, scope: !4611)
!4613 = !DILocation(line: 2043, column: 9, scope: !4611)
!4614 = !DILocation(line: 2044, column: 9, scope: !4611)
!4615 = !DILocation(line: 2044, column: 19, scope: !4611)
!4616 = !DILocation(line: 2044, column: 7, scope: !4611)
!4617 = !DILocation(line: 2047, column: 7, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2047, column: 7)
!4619 = !DILocation(line: 2047, column: 13, scope: !4618)
!4620 = !DILocation(line: 2047, column: 7, scope: !4589)
!4621 = !DILocation(line: 2048, column: 19, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 2047, column: 19)
!4623 = !DILocation(line: 2048, column: 22, scope: !4622)
!4624 = !DILocation(line: 2048, column: 28, scope: !4622)
!4625 = !DILocation(line: 2048, column: 34, scope: !4622)
!4626 = !DILocation(line: 2048, column: 40, scope: !4622)
!4627 = !DILocation(line: 2048, column: 46, scope: !4622)
!4628 = !DILocation(line: 2048, column: 4, scope: !4622)
!4629 = !DILocation(line: 2049, column: 3, scope: !4622)
!4630 = !DILocation(line: 2051, column: 10, scope: !4589)
!4631 = !DILocation(line: 2051, column: 8, scope: !4589)
!4632 = !DILocation(line: 2052, column: 2, scope: !4589)
!4633 = !DILocation(line: 2034, column: 14, scope: !4586)
!4634 = !DILocation(line: 2034, column: 20, scope: !4586)
!4635 = !DILocation(line: 2034, column: 12, scope: !4586)
!4636 = !DILocation(line: 2034, column: 27, scope: !4586)
!4637 = !DILocation(line: 2032, column: 2, scope: !4586)
!4638 = distinct !{!4638, !4587, !4639}
!4639 = !DILocation(line: 2052, column: 2, scope: !4579)
!4640 = !DILocation(line: 2054, column: 2, scope: !4338)
!4641 = !DILocation(line: 2054, column: 12, scope: !4338)
!4642 = !DILocation(line: 2055, column: 1, scope: !4338)
!4643 = distinct !DISubprogram(name: "retargetArctoArcLength", scope: !3, file: !3, line: 2057, type: !4339, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!4644 = !DILocalVariable(name: "C", arg: 1, scope: !4643, file: !3, line: 2057, type: !1535)
!4645 = !DILocation(line: 2057, column: 46, scope: !4643)
!4646 = !DILocalVariable(name: "rigg", arg: 2, scope: !4643, file: !3, line: 2057, type: !108)
!4647 = !DILocation(line: 2057, column: 59, scope: !4643)
!4648 = !DILocalVariable(name: "iarc", arg: 3, scope: !4643, file: !3, line: 2057, type: !1515)
!4649 = !DILocation(line: 2057, column: 73, scope: !4643)
!4650 = !DILocalVariable(name: "inode_start", arg: 4, scope: !4643, file: !3, line: 2057, type: !1403)
!4651 = !DILocation(line: 2057, column: 88, scope: !4643)
!4652 = !DILocalVariable(name: "arc_iter", scope: !4643, file: !3, line: 2059, type: !4350)
!4653 = !DILocation(line: 2059, column: 18, scope: !4643)
!4654 = !DILocalVariable(name: "iter", scope: !4643, file: !3, line: 2060, type: !1550)
!4655 = !DILocation(line: 2060, column: 16, scope: !4643)
!4656 = !DILocation(line: 2060, column: 23, scope: !4643)
!4657 = !DILocalVariable(name: "earc", scope: !4643, file: !3, line: 2061, type: !1531)
!4658 = !DILocation(line: 2061, column: 11, scope: !4643)
!4659 = !DILocation(line: 2061, column: 18, scope: !4643)
!4660 = !DILocation(line: 2061, column: 24, scope: !4643)
!4661 = !DILocalVariable(name: "node_start", scope: !4643, file: !3, line: 2062, type: !198)
!4662 = !DILocation(line: 2062, column: 12, scope: !4643)
!4663 = !DILocalVariable(name: "node_end", scope: !4643, file: !3, line: 2062, type: !198)
!4664 = !DILocation(line: 2062, column: 25, scope: !4643)
!4665 = !DILocalVariable(name: "edge", scope: !4643, file: !3, line: 2063, type: !1743)
!4666 = !DILocation(line: 2063, column: 11, scope: !4643)
!4667 = !DILocalVariable(name: "bucket", scope: !4643, file: !3, line: 2064, type: !4530)
!4668 = !DILocation(line: 2064, column: 15, scope: !4643)
!4669 = !DILocalVariable(name: "embedding_length", scope: !4643, file: !3, line: 2065, type: !122)
!4670 = !DILocation(line: 2065, column: 8, scope: !4643)
!4671 = !DILocalVariable(name: "vec0", scope: !4643, file: !3, line: 2066, type: !1578)
!4672 = !DILocation(line: 2066, column: 9, scope: !4643)
!4673 = !DILocalVariable(name: "vec1", scope: !4643, file: !3, line: 2067, type: !1578)
!4674 = !DILocation(line: 2067, column: 9, scope: !4643)
!4675 = !DILocalVariable(name: "previous_vec", scope: !4643, file: !3, line: 2068, type: !1578)
!4676 = !DILocation(line: 2068, column: 9, scope: !4643)
!4677 = !DILocation(line: 2071, column: 18, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 2071, column: 6)
!4679 = !DILocation(line: 2071, column: 24, scope: !4678)
!4680 = !DILocation(line: 2071, column: 6, scope: !4678)
!4681 = !DILocation(line: 2071, column: 6, scope: !4643)
!4682 = !DILocation(line: 2072, column: 28, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 2071, column: 38)
!4684 = !DILocation(line: 2072, column: 34, scope: !4683)
!4685 = !DILocation(line: 2072, column: 14, scope: !4683)
!4686 = !DILocation(line: 2073, column: 26, scope: !4683)
!4687 = !DILocation(line: 2073, column: 32, scope: !4683)
!4688 = !DILocation(line: 2073, column: 12, scope: !4683)
!4689 = !DILocation(line: 2074, column: 2, scope: !4683)
!4690 = !DILocation(line: 2076, column: 28, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 2075, column: 7)
!4692 = !DILocation(line: 2076, column: 34, scope: !4691)
!4693 = !DILocation(line: 2076, column: 14, scope: !4691)
!4694 = !DILocation(line: 2077, column: 26, scope: !4691)
!4695 = !DILocation(line: 2077, column: 32, scope: !4691)
!4696 = !DILocation(line: 2077, column: 12, scope: !4691)
!4697 = !DILocation(line: 2080, column: 18, scope: !4643)
!4698 = !DILocation(line: 2080, column: 24, scope: !4643)
!4699 = !DILocation(line: 2080, column: 30, scope: !4643)
!4700 = !DILocation(line: 2080, column: 2, scope: !4643)
!4701 = !DILocation(line: 2082, column: 19, scope: !4643)
!4702 = !DILocation(line: 2082, column: 11, scope: !4643)
!4703 = !DILocation(line: 2082, column: 9, scope: !4643)
!4704 = !DILocation(line: 2084, column: 9, scope: !4643)
!4705 = !DILocation(line: 2084, column: 21, scope: !4643)
!4706 = !DILocation(line: 2084, column: 7, scope: !4643)
!4707 = !DILocation(line: 2086, column: 2, scope: !4643)
!4708 = !DILocation(line: 2086, column: 9, scope: !4643)
!4709 = !DILocation(line: 2086, column: 16, scope: !4643)
!4710 = !DILocation(line: 2087, column: 10, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 2086, column: 25)
!4712 = !DILocation(line: 2087, column: 18, scope: !4711)
!4713 = !DILocation(line: 2087, column: 8, scope: !4711)
!4714 = !DILocation(line: 2089, column: 32, scope: !4711)
!4715 = !DILocation(line: 2089, column: 38, scope: !4711)
!4716 = !DILocation(line: 2089, column: 23, scope: !4711)
!4717 = !DILocation(line: 2089, column: 20, scope: !4711)
!4718 = !DILocation(line: 2091, column: 10, scope: !4711)
!4719 = !DILocation(line: 2091, column: 8, scope: !4711)
!4720 = !DILocation(line: 2092, column: 20, scope: !4711)
!4721 = !DILocation(line: 2092, column: 12, scope: !4711)
!4722 = !DILocation(line: 2092, column: 10, scope: !4711)
!4723 = distinct !{!4723, !4707, !4724}
!4724 = !DILocation(line: 2093, column: 2, scope: !4643)
!4725 = !DILocation(line: 2095, column: 31, scope: !4643)
!4726 = !DILocation(line: 2095, column: 41, scope: !4643)
!4727 = !DILocation(line: 2095, column: 44, scope: !4643)
!4728 = !DILocation(line: 2095, column: 22, scope: !4643)
!4729 = !DILocation(line: 2095, column: 19, scope: !4643)
!4730 = !DILocation(line: 2098, column: 18, scope: !4643)
!4731 = !DILocation(line: 2098, column: 24, scope: !4643)
!4732 = !DILocation(line: 2098, column: 30, scope: !4643)
!4733 = !DILocation(line: 2098, column: 2, scope: !4643)
!4734 = !DILocation(line: 2100, column: 19, scope: !4643)
!4735 = !DILocation(line: 2100, column: 11, scope: !4643)
!4736 = !DILocation(line: 2100, column: 9, scope: !4643)
!4737 = !DILocation(line: 2102, column: 9, scope: !4643)
!4738 = !DILocation(line: 2102, column: 21, scope: !4643)
!4739 = !DILocation(line: 2102, column: 7, scope: !4643)
!4740 = !DILocation(line: 2103, column: 17, scope: !4643)
!4741 = !DILocation(line: 2103, column: 15, scope: !4643)
!4742 = !DILocation(line: 2104, column: 9, scope: !4643)
!4743 = !DILocation(line: 2104, column: 17, scope: !4643)
!4744 = !DILocation(line: 2104, column: 7, scope: !4643)
!4745 = !DILocation(line: 2106, column: 14, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 2106, column: 2)
!4747 = !DILocation(line: 2106, column: 20, scope: !4746)
!4748 = !DILocation(line: 2106, column: 26, scope: !4746)
!4749 = !DILocation(line: 2106, column: 12, scope: !4746)
!4750 = !DILocation(line: 2106, column: 7, scope: !4746)
!4751 = !DILocation(line: 2106, column: 33, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 2106, column: 2)
!4753 = !DILocation(line: 2106, column: 2, scope: !4746)
!4754 = !DILocalVariable(name: "new_bone_length", scope: !4755, file: !3, line: 2107, type: !122)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 2106, column: 58)
!4756 = !DILocation(line: 2107, column: 9, scope: !4755)
!4757 = !DILocation(line: 2107, column: 27, scope: !4755)
!4758 = !DILocation(line: 2107, column: 33, scope: !4755)
!4759 = !DILocation(line: 2107, column: 42, scope: !4755)
!4760 = !DILocation(line: 2107, column: 48, scope: !4755)
!4761 = !DILocation(line: 2107, column: 40, scope: !4755)
!4762 = !DILocation(line: 2107, column: 57, scope: !4755)
!4763 = !DILocation(line: 2107, column: 55, scope: !4755)
!4764 = !DILocalVariable(name: "no", scope: !4755, file: !3, line: 2108, type: !1578)
!4765 = !DILocation(line: 2108, column: 10, scope: !4755)
!4766 = !DILocalVariable(name: "length", scope: !4755, file: !3, line: 2109, type: !122)
!4767 = !DILocation(line: 2109, column: 9, scope: !4755)
!4768 = !DILocation(line: 2111, column: 3, scope: !4755)
!4769 = !DILocation(line: 2111, column: 10, scope: !4755)
!4770 = !DILocation(line: 2111, column: 17, scope: !4755)
!4771 = !DILocation(line: 2111, column: 20, scope: !4755)
!4772 = !DILocation(line: 2111, column: 38, scope: !4755)
!4773 = !DILocation(line: 2111, column: 36, scope: !4755)
!4774 = !DILocation(line: 0, scope: !4755)
!4775 = !DILocation(line: 2112, column: 23, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 2111, column: 46)
!4777 = !DILocation(line: 2112, column: 37, scope: !4776)
!4778 = !DILocation(line: 2112, column: 14, scope: !4776)
!4779 = !DILocation(line: 2112, column: 11, scope: !4776)
!4780 = !DILocation(line: 2113, column: 21, scope: !4776)
!4781 = !DILocation(line: 2113, column: 13, scope: !4776)
!4782 = !DILocation(line: 2113, column: 11, scope: !4776)
!4783 = !DILocation(line: 2114, column: 19, scope: !4776)
!4784 = !DILocation(line: 2114, column: 17, scope: !4776)
!4785 = !DILocation(line: 2115, column: 11, scope: !4776)
!4786 = !DILocation(line: 2115, column: 19, scope: !4776)
!4787 = !DILocation(line: 2115, column: 9, scope: !4776)
!4788 = !DILocation(line: 2116, column: 9, scope: !4776)
!4789 = !DILocation(line: 2116, column: 17, scope: !4776)
!4790 = !DILocation(line: 2116, column: 7, scope: !4776)
!4791 = distinct !{!4791, !4768, !4792}
!4792 = !DILocation(line: 2117, column: 3, scope: !4755)
!4793 = !DILocation(line: 2119, column: 7, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 2119, column: 7)
!4795 = !DILocation(line: 2119, column: 14, scope: !4794)
!4796 = !DILocation(line: 2119, column: 7, scope: !4755)
!4797 = !DILocation(line: 2120, column: 11, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 2119, column: 23)
!4799 = !DILocation(line: 2120, column: 21, scope: !4798)
!4800 = !DILocation(line: 2120, column: 9, scope: !4798)
!4801 = !DILocation(line: 2121, column: 9, scope: !4798)
!4802 = !DILocation(line: 2121, column: 19, scope: !4798)
!4803 = !DILocation(line: 2121, column: 7, scope: !4798)
!4804 = !DILocation(line: 2122, column: 3, scope: !4798)
!4805 = !DILocation(line: 2125, column: 7, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 2125, column: 7)
!4807 = !DILocation(line: 2125, column: 13, scope: !4806)
!4808 = !DILocation(line: 2125, column: 7, scope: !4755)
!4809 = !DILocation(line: 2126, column: 19, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 2125, column: 19)
!4811 = !DILocation(line: 2126, column: 22, scope: !4810)
!4812 = !DILocation(line: 2126, column: 28, scope: !4810)
!4813 = !DILocation(line: 2126, column: 34, scope: !4810)
!4814 = !DILocation(line: 2126, column: 40, scope: !4810)
!4815 = !DILocation(line: 2126, column: 46, scope: !4810)
!4816 = !DILocation(line: 2126, column: 4, scope: !4810)
!4817 = !DILocation(line: 2127, column: 3, scope: !4810)
!4818 = !DILocation(line: 2129, column: 10, scope: !4755)
!4819 = !DILocation(line: 2129, column: 8, scope: !4755)
!4820 = !DILocation(line: 2130, column: 18, scope: !4755)
!4821 = !DILocation(line: 2130, column: 16, scope: !4755)
!4822 = !DILocation(line: 2131, column: 2, scope: !4755)
!4823 = !DILocation(line: 2106, column: 46, scope: !4752)
!4824 = !DILocation(line: 2106, column: 52, scope: !4752)
!4825 = !DILocation(line: 2106, column: 44, scope: !4752)
!4826 = !DILocation(line: 2106, column: 2, scope: !4752)
!4827 = distinct !{!4827, !4753, !4828}
!4828 = !DILocation(line: 2131, column: 2, scope: !4746)
!4829 = !DILocation(line: 2132, column: 1, scope: !4643)
!4830 = distinct !DISubprogram(name: "RIG_nameBone", scope: !3, file: !3, line: 2448, type: !4831, scopeLine: 2449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!1857, !108, !145, !145}
!4833 = !DILocalVariable(name: "rg", arg: 1, scope: !4830, file: !3, line: 2448, type: !108)
!4834 = !DILocation(line: 2448, column: 36, scope: !4830)
!4835 = !DILocalVariable(name: "arc_index", arg: 2, scope: !4830, file: !3, line: 2448, type: !145)
!4836 = !DILocation(line: 2448, column: 44, scope: !4830)
!4837 = !DILocalVariable(name: "bone_index", arg: 3, scope: !4830, file: !3, line: 2448, type: !145)
!4838 = !DILocation(line: 2448, column: 59, scope: !4830)
!4839 = !DILocalVariable(name: "arc", scope: !4830, file: !3, line: 2450, type: !1515)
!4840 = !DILocation(line: 2450, column: 10, scope: !4830)
!4841 = !DILocation(line: 2450, column: 30, scope: !4830)
!4842 = !DILocation(line: 2450, column: 34, scope: !4830)
!4843 = !DILocation(line: 2450, column: 40, scope: !4830)
!4844 = !DILocation(line: 2450, column: 16, scope: !4830)
!4845 = !DILocalVariable(name: "iedge", scope: !4830, file: !3, line: 2451, type: !1743)
!4846 = !DILocation(line: 2451, column: 11, scope: !4830)
!4847 = !DILocation(line: 2453, column: 6, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 2453, column: 6)
!4849 = !DILocation(line: 2453, column: 10, scope: !4848)
!4850 = !DILocation(line: 2453, column: 6, scope: !4830)
!4851 = !DILocation(line: 2454, column: 3, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 2453, column: 19)
!4853 = !DILocation(line: 2457, column: 6, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 2457, column: 6)
!4855 = !DILocation(line: 2457, column: 35, scope: !4854)
!4856 = !DILocation(line: 2457, column: 40, scope: !4854)
!4857 = !DILocation(line: 2457, column: 20, scope: !4854)
!4858 = !DILocation(line: 2457, column: 17, scope: !4854)
!4859 = !DILocation(line: 2457, column: 6, scope: !4830)
!4860 = !DILocation(line: 2458, column: 3, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2457, column: 48)
!4862 = !DILocation(line: 2461, column: 24, scope: !4830)
!4863 = !DILocation(line: 2461, column: 29, scope: !4830)
!4864 = !DILocation(line: 2461, column: 36, scope: !4830)
!4865 = !DILocation(line: 2461, column: 10, scope: !4830)
!4866 = !DILocation(line: 2461, column: 8, scope: !4830)
!4867 = !DILocation(line: 2463, column: 6, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 2463, column: 6)
!4869 = !DILocation(line: 2463, column: 12, scope: !4868)
!4870 = !DILocation(line: 2463, column: 6, scope: !4830)
!4871 = !DILocation(line: 2464, column: 3, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 2463, column: 21)
!4873 = !DILocation(line: 2467, column: 6, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 2467, column: 6)
!4875 = !DILocation(line: 2467, column: 13, scope: !4874)
!4876 = !DILocation(line: 2467, column: 18, scope: !4874)
!4877 = !DILocation(line: 2467, column: 6, scope: !4830)
!4878 = !DILocation(line: 2468, column: 3, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 2467, column: 27)
!4880 = !DILocation(line: 2471, column: 9, scope: !4830)
!4881 = !DILocation(line: 2471, column: 16, scope: !4830)
!4882 = !DILocation(line: 2471, column: 22, scope: !4830)
!4883 = !DILocation(line: 2471, column: 2, scope: !4830)
!4884 = !DILocation(line: 2472, column: 1, scope: !4830)
!4885 = distinct !DISubprogram(name: "RIG_nbJoints", scope: !3, file: !3, line: 2474, type: !4886, scopeLine: 2475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!145, !108}
!4888 = !DILocalVariable(name: "rg", arg: 1, scope: !4885, file: !3, line: 2474, type: !108)
!4889 = !DILocation(line: 2474, column: 28, scope: !4885)
!4890 = !DILocalVariable(name: "arc", scope: !4885, file: !3, line: 2476, type: !1515)
!4891 = !DILocation(line: 2476, column: 10, scope: !4885)
!4892 = !DILocalVariable(name: "total", scope: !4885, file: !3, line: 2477, type: !145)
!4893 = !DILocation(line: 2477, column: 6, scope: !4885)
!4894 = !DILocation(line: 2479, column: 26, scope: !4885)
!4895 = !DILocation(line: 2479, column: 30, scope: !4885)
!4896 = !DILocation(line: 2479, column: 11, scope: !4885)
!4897 = !DILocation(line: 2479, column: 8, scope: !4885)
!4898 = !DILocation(line: 2481, column: 13, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 2481, column: 2)
!4900 = !DILocation(line: 2481, column: 17, scope: !4899)
!4901 = !DILocation(line: 2481, column: 22, scope: !4899)
!4902 = !DILocation(line: 2481, column: 11, scope: !4899)
!4903 = !DILocation(line: 2481, column: 7, scope: !4899)
!4904 = !DILocation(line: 2481, column: 29, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 2481, column: 2)
!4906 = !DILocation(line: 2481, column: 2, scope: !4899)
!4907 = !DILocation(line: 2482, column: 27, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 2481, column: 51)
!4909 = !DILocation(line: 2482, column: 32, scope: !4908)
!4910 = !DILocation(line: 2482, column: 12, scope: !4908)
!4911 = !DILocation(line: 2482, column: 39, scope: !4908)
!4912 = !DILocation(line: 2482, column: 9, scope: !4908)
!4913 = !DILocation(line: 2483, column: 2, scope: !4908)
!4914 = !DILocation(line: 2481, column: 40, scope: !4905)
!4915 = !DILocation(line: 2481, column: 45, scope: !4905)
!4916 = !DILocation(line: 2481, column: 38, scope: !4905)
!4917 = !DILocation(line: 2481, column: 2, scope: !4905)
!4918 = distinct !{!4918, !4906, !4919}
!4919 = !DILocation(line: 2483, column: 2, scope: !4899)
!4920 = !DILocation(line: 2485, column: 9, scope: !4885)
!4921 = !DILocation(line: 2485, column: 2, scope: !4885)
!4922 = distinct !DISubprogram(name: "BIF_retargetArmature", scope: !3, file: !3, line: 2496, type: !4923, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{null, !1535}
!4925 = !DILocalVariable(name: "C", arg: 1, scope: !4922, file: !3, line: 2496, type: !1535)
!4926 = !DILocation(line: 2496, column: 37, scope: !4922)
!4927 = !DILocalVariable(name: "reebg", scope: !4922, file: !3, line: 2498, type: !250)
!4928 = !DILocation(line: 2498, column: 13, scope: !4922)
!4929 = !DILocalVariable(name: "start_time", scope: !4922, file: !3, line: 2499, type: !4930)
!4930 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4931 = !DILocation(line: 2499, column: 9, scope: !4922)
!4932 = !DILocalVariable(name: "end_time", scope: !4922, file: !3, line: 2499, type: !4930)
!4933 = !DILocation(line: 2499, column: 21, scope: !4922)
!4934 = !DILocalVariable(name: "gstart_time", scope: !4922, file: !3, line: 2500, type: !4930)
!4935 = !DILocation(line: 2500, column: 9, scope: !4922)
!4936 = !DILocalVariable(name: "gend_time", scope: !4922, file: !3, line: 2500, type: !4930)
!4937 = !DILocation(line: 2500, column: 22, scope: !4922)
!4938 = !DILocalVariable(name: "reeb_time", scope: !4922, file: !3, line: 2501, type: !4930)
!4939 = !DILocation(line: 2501, column: 9, scope: !4922)
!4940 = !DILocalVariable(name: "rig_time", scope: !4922, file: !3, line: 2501, type: !4930)
!4941 = !DILocation(line: 2501, column: 20, scope: !4922)
!4942 = !DILocalVariable(name: "retarget_time", scope: !4922, file: !3, line: 2501, type: !4930)
!4943 = !DILocation(line: 2501, column: 36, scope: !4922)
!4944 = !DILocalVariable(name: "total_time", scope: !4922, file: !3, line: 2501, type: !4930)
!4945 = !DILocation(line: 2501, column: 57, scope: !4922)
!4946 = !DILocation(line: 2503, column: 29, scope: !4922)
!4947 = !DILocation(line: 2503, column: 27, scope: !4922)
!4948 = !DILocation(line: 2503, column: 14, scope: !4922)
!4949 = !DILocation(line: 2505, column: 41, scope: !4922)
!4950 = !DILocation(line: 2505, column: 10, scope: !4922)
!4951 = !DILocation(line: 2505, column: 8, scope: !4922)
!4952 = !DILocation(line: 2507, column: 13, scope: !4922)
!4953 = !DILocation(line: 2507, column: 11, scope: !4922)
!4954 = !DILocation(line: 2508, column: 14, scope: !4922)
!4955 = !DILocation(line: 2508, column: 25, scope: !4922)
!4956 = !DILocation(line: 2508, column: 23, scope: !4922)
!4957 = !DILocation(line: 2508, column: 12, scope: !4922)
!4958 = !DILocation(line: 2510, column: 2, scope: !4922)
!4959 = !DILocalVariable(name: "ctx_data_list", scope: !4960, file: !3, line: 2512, type: !113)
!4960 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 2512, column: 2)
!4961 = !DILocation(line: 2512, column: 2, scope: !4960)
!4962 = !DILocalVariable(name: "ctx_link", scope: !4960, file: !3, line: 2512, type: !4963)
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4964 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPointerLink", file: !1539, line: 284, baseType: !4965)
!4965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPointerLink", file: !1539, line: 281, size: 320, elements: !4966)
!4966 = !{!4967, !4969, !4970}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4965, file: !1539, line: 282, baseType: !4968, size: 64)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4965, file: !1539, line: 282, baseType: !4968, size: 64, offset: 64)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4965, file: !1539, line: 283, baseType: !4971, size: 192, offset: 128)
!4971 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !1539, line: 62, baseType: !4972)
!4972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !1539, line: 55, size: 192, elements: !4973)
!4973 = !{!4974, !4978, !4981}
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4972, file: !1539, line: 58, baseType: !4975, size: 64)
!4975 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4972, file: !1539, line: 56, size: 64, elements: !4976)
!4976 = !{!4977}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4975, file: !1539, line: 57, baseType: !118, size: 64)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4972, file: !1539, line: 60, baseType: !4979, size: 64, offset: 64)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1539, line: 41, flags: DIFlagFwdDecl)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4972, file: !1539, line: 61, baseType: !118, size: 64, offset: 128)
!4982 = !DILocation(line: 2512, column: 2, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 2512, column: 2)
!4984 = !DILocation(line: 2512, column: 2, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 2512, column: 2)
!4986 = !DILocalVariable(name: "base", scope: !4987, file: !3, line: 2512, type: !4988)
!4987 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 2512, column: 2)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !438, line: 75, baseType: !621)
!4990 = !DILocation(line: 2512, column: 2, scope: !4987)
!4991 = !DILocalVariable(name: "ob", scope: !4992, file: !3, line: 2514, type: !2034)
!4992 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 2513, column: 2)
!4993 = !DILocation(line: 2514, column: 11, scope: !4992)
!4994 = !DILocation(line: 2514, column: 16, scope: !4992)
!4995 = !DILocation(line: 2514, column: 22, scope: !4992)
!4996 = !DILocation(line: 2516, column: 7, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 2516, column: 7)
!4998 = !DILocation(line: 2516, column: 11, scope: !4997)
!4999 = !DILocation(line: 2516, column: 16, scope: !4997)
!5000 = !DILocation(line: 2516, column: 7, scope: !4992)
!5001 = !DILocalVariable(name: "rigg", scope: !5002, file: !3, line: 2517, type: !108)
!5002 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 2516, column: 32)
!5003 = !DILocation(line: 2517, column: 14, scope: !5002)
!5004 = !DILocalVariable(name: "arm", scope: !5002, file: !3, line: 2518, type: !1405)
!5005 = !DILocation(line: 2518, column: 15, scope: !5002)
!5006 = !DILocation(line: 2520, column: 10, scope: !5002)
!5007 = !DILocation(line: 2520, column: 14, scope: !5002)
!5008 = !DILocation(line: 2520, column: 8, scope: !5002)
!5009 = !DILocation(line: 2525, column: 17, scope: !5002)
!5010 = !DILocation(line: 2525, column: 15, scope: !5002)
!5011 = !DILocation(line: 2527, column: 33, scope: !5002)
!5012 = !DILocation(line: 2527, column: 36, scope: !5002)
!5013 = !DILocation(line: 2527, column: 40, scope: !5002)
!5014 = !DILocation(line: 2527, column: 11, scope: !5002)
!5015 = !DILocation(line: 2527, column: 9, scope: !5002)
!5016 = !DILocation(line: 2529, column: 15, scope: !5002)
!5017 = !DILocation(line: 2529, column: 13, scope: !5002)
!5018 = !DILocation(line: 2530, column: 15, scope: !5002)
!5019 = !DILocation(line: 2530, column: 26, scope: !5002)
!5020 = !DILocation(line: 2530, column: 24, scope: !5002)
!5021 = !DILocation(line: 2530, column: 13, scope: !5002)
!5022 = !DILocation(line: 2532, column: 4, scope: !5002)
!5023 = !DILocation(line: 2536, column: 22, scope: !5002)
!5024 = !DILocation(line: 2536, column: 4, scope: !5002)
!5025 = !DILocation(line: 2536, column: 10, scope: !5002)
!5026 = !DILocation(line: 2536, column: 20, scope: !5002)
!5027 = !DILocation(line: 2538, column: 32, scope: !5002)
!5028 = !DILocation(line: 2538, column: 36, scope: !5002)
!5029 = !DILocation(line: 2538, column: 39, scope: !5002)
!5030 = !DILocation(line: 2538, column: 4, scope: !5002)
!5031 = !DILocation(line: 2540, column: 17, scope: !5002)
!5032 = !DILocation(line: 2540, column: 15, scope: !5002)
!5033 = !DILocation(line: 2542, column: 19, scope: !5002)
!5034 = !DILocation(line: 2542, column: 22, scope: !5002)
!5035 = !DILocation(line: 2542, column: 4, scope: !5002)
!5036 = !DILocation(line: 2544, column: 15, scope: !5002)
!5037 = !DILocation(line: 2544, column: 13, scope: !5002)
!5038 = !DILocation(line: 2545, column: 20, scope: !5002)
!5039 = !DILocation(line: 2545, column: 31, scope: !5002)
!5040 = !DILocation(line: 2545, column: 29, scope: !5002)
!5041 = !DILocation(line: 2545, column: 18, scope: !5002)
!5042 = !DILocation(line: 2547, column: 4, scope: !5002)
!5043 = !DILocation(line: 2549, column: 18, scope: !5002)
!5044 = !DILocation(line: 2549, column: 16, scope: !5002)
!5045 = !DILocation(line: 2551, column: 4, scope: !5002)
!5046 = !DILocation(line: 2554, column: 2, scope: !4987)
!5047 = distinct !{!5047, !4982, !5048}
!5048 = !DILocation(line: 2554, column: 2, scope: !4983)
!5049 = !DILocation(line: 2554, column: 2, scope: !4960)
!5050 = !DILocation(line: 2557, column: 14, scope: !4922)
!5051 = !DILocation(line: 2557, column: 12, scope: !4922)
!5052 = !DILocation(line: 2559, column: 15, scope: !4922)
!5053 = !DILocation(line: 2559, column: 27, scope: !4922)
!5054 = !DILocation(line: 2559, column: 25, scope: !4922)
!5055 = !DILocation(line: 2559, column: 13, scope: !4922)
!5056 = !DILocation(line: 2561, column: 2, scope: !4922)
!5057 = !DILocation(line: 2562, column: 30, scope: !4922)
!5058 = !DILocation(line: 2562, column: 2, scope: !4922)
!5059 = !DILocation(line: 2563, column: 38, scope: !4922)
!5060 = !DILocation(line: 2563, column: 49, scope: !4922)
!5061 = !DILocation(line: 2563, column: 61, scope: !4922)
!5062 = !DILocation(line: 2563, column: 59, scope: !4922)
!5063 = !DILocation(line: 2563, column: 72, scope: !4922)
!5064 = !DILocation(line: 2563, column: 2, scope: !4922)
!5065 = !DILocation(line: 2564, column: 37, scope: !4922)
!5066 = !DILocation(line: 2564, column: 47, scope: !4922)
!5067 = !DILocation(line: 2564, column: 58, scope: !4922)
!5068 = !DILocation(line: 2564, column: 56, scope: !4922)
!5069 = !DILocation(line: 2564, column: 69, scope: !4922)
!5070 = !DILocation(line: 2564, column: 2, scope: !4922)
!5071 = !DILocation(line: 2565, column: 40, scope: !4922)
!5072 = !DILocation(line: 2565, column: 55, scope: !4922)
!5073 = !DILocation(line: 2565, column: 71, scope: !4922)
!5074 = !DILocation(line: 2565, column: 69, scope: !4922)
!5075 = !DILocation(line: 2565, column: 82, scope: !4922)
!5076 = !DILocation(line: 2565, column: 2, scope: !4922)
!5077 = !DILocation(line: 2566, column: 2, scope: !4922)
!5078 = !DILocation(line: 2568, column: 15, scope: !4922)
!5079 = !DILocation(line: 2568, column: 2, scope: !4922)
!5080 = !DILocation(line: 2572, column: 1, scope: !4922)
!5081 = distinct !DISubprogram(name: "retargetGraphs", scope: !3, file: !3, line: 2423, type: !5082, scopeLine: 2424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{null, !1535, !108}
!5084 = !DILocalVariable(name: "C", arg: 1, scope: !5081, file: !3, line: 2423, type: !1535)
!5085 = !DILocation(line: 2423, column: 38, scope: !5081)
!5086 = !DILocalVariable(name: "rigg", arg: 2, scope: !5081, file: !3, line: 2423, type: !108)
!5087 = !DILocation(line: 2423, column: 51, scope: !5081)
!5088 = !DILocalVariable(name: "arm", scope: !5081, file: !3, line: 2425, type: !1405)
!5089 = !DILocation(line: 2425, column: 13, scope: !5081)
!5090 = !DILocation(line: 2425, column: 19, scope: !5081)
!5091 = !DILocation(line: 2425, column: 25, scope: !5081)
!5092 = !DILocation(line: 2425, column: 29, scope: !5081)
!5093 = !DILocalVariable(name: "reebg", scope: !5081, file: !3, line: 2426, type: !250)
!5094 = !DILocation(line: 2426, column: 13, scope: !5081)
!5095 = !DILocation(line: 2426, column: 21, scope: !5081)
!5096 = !DILocation(line: 2426, column: 27, scope: !5081)
!5097 = !DILocalVariable(name: "inode", scope: !5081, file: !3, line: 2427, type: !1403)
!5098 = !DILocation(line: 2427, column: 11, scope: !5081)
!5099 = !DILocation(line: 2430, column: 20, scope: !5081)
!5100 = !DILocation(line: 2430, column: 2, scope: !5081)
!5101 = !DILocation(line: 2433, column: 10, scope: !5081)
!5102 = !DILocation(line: 2433, column: 16, scope: !5081)
!5103 = !DILocation(line: 2433, column: 8, scope: !5081)
!5104 = !DILocation(line: 2435, column: 35, scope: !5081)
!5105 = !DILocation(line: 2435, column: 41, scope: !5081)
!5106 = !DILocation(line: 2435, column: 48, scope: !5081)
!5107 = !DILocation(line: 2435, column: 2, scope: !5081)
!5108 = !DILocation(line: 2437, column: 19, scope: !5081)
!5109 = !DILocation(line: 2437, column: 22, scope: !5081)
!5110 = !DILocation(line: 2437, column: 34, scope: !5081)
!5111 = !DILocation(line: 2437, column: 2, scope: !5081)
!5112 = !DILocation(line: 2441, column: 17, scope: !5081)
!5113 = !DILocation(line: 2441, column: 2, scope: !5081)
!5114 = !DILocation(line: 2444, column: 14, scope: !5081)
!5115 = !DILocation(line: 2444, column: 20, scope: !5081)
!5116 = !DILocation(line: 2444, column: 2, scope: !5081)
!5117 = !DILocation(line: 2444, column: 7, scope: !5081)
!5118 = !DILocation(line: 2444, column: 12, scope: !5081)
!5119 = !DILocation(line: 2445, column: 24, scope: !5081)
!5120 = !DILocation(line: 2445, column: 2, scope: !5081)
!5121 = !DILocation(line: 2446, column: 1, scope: !5081)
!5122 = distinct !DISubprogram(name: "BIF_freeRetarget", scope: !3, file: !3, line: 2488, type: !5123, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{null}
!5125 = !DILocation(line: 2490, column: 6, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 2490, column: 6)
!5127 = !DILocation(line: 2490, column: 6, scope: !5122)
!5128 = !DILocation(line: 2491, column: 30, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 2490, column: 19)
!5130 = !DILocation(line: 2491, column: 20, scope: !5129)
!5131 = !DILocation(line: 2491, column: 3, scope: !5129)
!5132 = !DILocation(line: 2492, column: 15, scope: !5129)
!5133 = !DILocation(line: 2493, column: 2, scope: !5129)
!5134 = !DILocation(line: 2494, column: 1, scope: !5122)
!5135 = distinct !DISubprogram(name: "BIF_retargetArc", scope: !3, file: !3, line: 2574, type: !5136, scopeLine: 2575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{null, !1535, !1531, !108}
!5138 = !DILocalVariable(name: "C", arg: 1, scope: !5135, file: !3, line: 2574, type: !1535)
!5139 = !DILocation(line: 2574, column: 32, scope: !5135)
!5140 = !DILocalVariable(name: "earc", arg: 2, scope: !5135, file: !3, line: 2574, type: !1531)
!5141 = !DILocation(line: 2574, column: 44, scope: !5135)
!5142 = !DILocalVariable(name: "template_rigg", arg: 3, scope: !5135, file: !3, line: 2574, type: !108)
!5143 = !DILocation(line: 2574, column: 60, scope: !5135)
!5144 = !DILocalVariable(name: "obedit", scope: !5135, file: !3, line: 2576, type: !2034)
!5145 = !DILocation(line: 2576, column: 10, scope: !5135)
!5146 = !DILocation(line: 2576, column: 40, scope: !5135)
!5147 = !DILocation(line: 2576, column: 19, scope: !5135)
!5148 = !DILocalVariable(name: "scene", scope: !5135, file: !3, line: 2577, type: !2047)
!5149 = !DILocation(line: 2577, column: 9, scope: !5135)
!5150 = !DILocation(line: 2577, column: 32, scope: !5135)
!5151 = !DILocation(line: 2577, column: 17, scope: !5135)
!5152 = !DILocalVariable(name: "armedit", scope: !5135, file: !3, line: 2578, type: !1405)
!5153 = !DILocation(line: 2578, column: 13, scope: !5135)
!5154 = !DILocation(line: 2578, column: 23, scope: !5135)
!5155 = !DILocation(line: 2578, column: 31, scope: !5135)
!5156 = !DILocalVariable(name: "ob", scope: !5135, file: !3, line: 2579, type: !2034)
!5157 = !DILocation(line: 2579, column: 10, scope: !5135)
!5158 = !DILocalVariable(name: "rigg", scope: !5135, file: !3, line: 2580, type: !108)
!5159 = !DILocation(line: 2580, column: 12, scope: !5135)
!5160 = !DILocalVariable(name: "iarc", scope: !5135, file: !3, line: 2581, type: !1515)
!5161 = !DILocation(line: 2581, column: 10, scope: !5135)
!5162 = !DILocalVariable(name: "side_string", scope: !5135, file: !3, line: 2582, type: !467)
!5163 = !DILocation(line: 2582, column: 8, scope: !5135)
!5164 = !DILocation(line: 2582, column: 22, scope: !5135)
!5165 = !DILocation(line: 2582, column: 29, scope: !5135)
!5166 = !DILocation(line: 2582, column: 43, scope: !5135)
!5167 = !DILocalVariable(name: "num_string", scope: !5135, file: !3, line: 2583, type: !467)
!5168 = !DILocation(line: 2583, column: 8, scope: !5135)
!5169 = !DILocation(line: 2583, column: 21, scope: !5135)
!5170 = !DILocation(line: 2583, column: 28, scope: !5135)
!5171 = !DILocation(line: 2583, column: 42, scope: !5135)
!5172 = !DILocalVariable(name: "free_template", scope: !5135, file: !3, line: 2584, type: !145)
!5173 = !DILocation(line: 2584, column: 6, scope: !5135)
!5174 = !DILocation(line: 2586, column: 6, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 2586, column: 6)
!5176 = !DILocation(line: 2586, column: 6, scope: !5135)
!5177 = !DILocation(line: 2587, column: 8, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 2586, column: 21)
!5179 = !DILocation(line: 2587, column: 23, scope: !5178)
!5180 = !DILocation(line: 2587, column: 6, scope: !5178)
!5181 = !DILocation(line: 2588, column: 2, scope: !5178)
!5182 = !DILocation(line: 2590, column: 17, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 2589, column: 7)
!5184 = !DILocation(line: 2591, column: 8, scope: !5183)
!5185 = !DILocation(line: 2591, column: 6, scope: !5183)
!5186 = !DILocation(line: 2592, column: 43, scope: !5183)
!5187 = !DILocation(line: 2592, column: 46, scope: !5183)
!5188 = !DILocation(line: 2592, column: 50, scope: !5183)
!5189 = !DILocation(line: 2592, column: 54, scope: !5183)
!5190 = !DILocation(line: 2592, column: 19, scope: !5183)
!5191 = !DILocation(line: 2592, column: 17, scope: !5183)
!5192 = !DILocation(line: 2595, column: 29, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 2595, column: 6)
!5194 = !DILocation(line: 2595, column: 44, scope: !5193)
!5195 = !DILocation(line: 2595, column: 6, scope: !5193)
!5196 = !DILocation(line: 2595, column: 6, scope: !5135)
!5197 = !DILocation(line: 2598, column: 3, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 2595, column: 51)
!5199 = !DILocation(line: 2601, column: 23, scope: !5135)
!5200 = !DILocation(line: 2601, column: 38, scope: !5135)
!5201 = !DILocation(line: 2601, column: 47, scope: !5135)
!5202 = !DILocation(line: 2601, column: 53, scope: !5135)
!5203 = !DILocation(line: 2601, column: 61, scope: !5135)
!5204 = !DILocation(line: 2601, column: 74, scope: !5135)
!5205 = !DILocation(line: 2601, column: 9, scope: !5135)
!5206 = !DILocation(line: 2601, column: 7, scope: !5135)
!5207 = !DILocation(line: 2603, column: 9, scope: !5135)
!5208 = !DILocation(line: 2603, column: 15, scope: !5135)
!5209 = !DILocation(line: 2603, column: 20, scope: !5135)
!5210 = !DILocation(line: 2603, column: 7, scope: !5135)
!5211 = !DILocation(line: 2605, column: 20, scope: !5135)
!5212 = !DILocation(line: 2605, column: 2, scope: !5135)
!5213 = !DILocation(line: 2605, column: 8, scope: !5135)
!5214 = !DILocation(line: 2605, column: 18, scope: !5135)
!5215 = !DILocation(line: 2606, column: 26, scope: !5135)
!5216 = !DILocation(line: 2606, column: 32, scope: !5135)
!5217 = !DILocation(line: 2606, column: 2, scope: !5135)
!5218 = !DILocation(line: 2606, column: 8, scope: !5135)
!5219 = !DILocation(line: 2606, column: 14, scope: !5135)
!5220 = !DILocation(line: 2606, column: 24, scope: !5135)
!5221 = !DILocation(line: 2607, column: 26, scope: !5135)
!5222 = !DILocation(line: 2607, column: 32, scope: !5135)
!5223 = !DILocation(line: 2607, column: 2, scope: !5135)
!5224 = !DILocation(line: 2607, column: 8, scope: !5135)
!5225 = !DILocation(line: 2607, column: 14, scope: !5135)
!5226 = !DILocation(line: 2607, column: 24, scope: !5135)
!5227 = !DILocation(line: 2609, column: 19, scope: !5135)
!5228 = !DILocation(line: 2609, column: 22, scope: !5135)
!5229 = !DILocation(line: 2609, column: 28, scope: !5135)
!5230 = !DILocation(line: 2609, column: 34, scope: !5135)
!5231 = !DILocation(line: 2609, column: 40, scope: !5135)
!5232 = !DILocation(line: 2609, column: 2, scope: !5135)
!5233 = !DILocation(line: 2611, column: 17, scope: !5135)
!5234 = !DILocation(line: 2611, column: 2, scope: !5135)
!5235 = !DILocation(line: 2614, column: 6, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 2614, column: 6)
!5237 = !DILocation(line: 2614, column: 6, scope: !5135)
!5238 = !DILocation(line: 2615, column: 30, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 2614, column: 21)
!5240 = !DILocation(line: 2615, column: 20, scope: !5239)
!5241 = !DILocation(line: 2615, column: 3, scope: !5239)
!5242 = !DILocation(line: 2616, column: 2, scope: !5239)
!5243 = !DILocation(line: 2617, column: 29, scope: !5135)
!5244 = !DILocation(line: 2617, column: 19, scope: !5135)
!5245 = !DILocation(line: 2617, column: 2, scope: !5135)
!5246 = !DILocation(line: 2619, column: 30, scope: !5135)
!5247 = !DILocation(line: 2619, column: 2, scope: !5135)
!5248 = !DILocation(line: 2623, column: 1, scope: !5135)
!5249 = distinct !DISubprogram(name: "armatureSelectedToGraph", scope: !3, file: !3, line: 1383, type: !5250, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{!108, !1535, !2034, !1405}
!5252 = !DILocalVariable(name: "C", arg: 1, scope: !5249, file: !3, line: 1383, type: !1535)
!5253 = !DILocation(line: 1383, column: 52, scope: !5249)
!5254 = !DILocalVariable(name: "ob", arg: 2, scope: !5249, file: !3, line: 1383, type: !2034)
!5255 = !DILocation(line: 1383, column: 63, scope: !5249)
!5256 = !DILocalVariable(name: "arm", arg: 3, scope: !5249, file: !3, line: 1383, type: !1405)
!5257 = !DILocation(line: 1383, column: 78, scope: !5249)
!5258 = !DILocalVariable(name: "obedit", scope: !5249, file: !3, line: 1385, type: !2034)
!5259 = !DILocation(line: 1385, column: 10, scope: !5249)
!5260 = !DILocation(line: 1385, column: 40, scope: !5249)
!5261 = !DILocation(line: 1385, column: 19, scope: !5249)
!5262 = !DILocalVariable(name: "scene", scope: !5249, file: !3, line: 1386, type: !2047)
!5263 = !DILocation(line: 1386, column: 9, scope: !5249)
!5264 = !DILocation(line: 1386, column: 32, scope: !5249)
!5265 = !DILocation(line: 1386, column: 17, scope: !5249)
!5266 = !DILocalVariable(name: "ebone", scope: !5249, file: !3, line: 1387, type: !1542)
!5267 = !DILocation(line: 1387, column: 12, scope: !5249)
!5268 = !DILocalVariable(name: "rg", scope: !5249, file: !3, line: 1388, type: !108)
!5269 = !DILocation(line: 1388, column: 12, scope: !5249)
!5270 = !DILocation(line: 1390, column: 7, scope: !5249)
!5271 = !DILocation(line: 1390, column: 5, scope: !5249)
!5272 = !DILocation(line: 1392, column: 6, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 1392, column: 6)
!5274 = !DILocation(line: 1392, column: 16, scope: !5273)
!5275 = !DILocation(line: 1392, column: 13, scope: !5273)
!5276 = !DILocation(line: 1392, column: 6, scope: !5249)
!5277 = !DILocation(line: 1393, column: 19, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 1392, column: 20)
!5279 = !DILocation(line: 1393, column: 24, scope: !5278)
!5280 = !DILocation(line: 1393, column: 3, scope: !5278)
!5281 = !DILocation(line: 1393, column: 7, scope: !5278)
!5282 = !DILocation(line: 1393, column: 17, scope: !5278)
!5283 = !DILocation(line: 1394, column: 2, scope: !5278)
!5284 = !DILocation(line: 1396, column: 19, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 1395, column: 7)
!5286 = !DILocation(line: 1396, column: 3, scope: !5285)
!5287 = !DILocation(line: 1396, column: 7, scope: !5285)
!5288 = !DILocation(line: 1396, column: 17, scope: !5285)
!5289 = !DILocation(line: 1397, column: 17, scope: !5285)
!5290 = !DILocation(line: 1397, column: 21, scope: !5285)
!5291 = !DILocation(line: 1397, column: 33, scope: !5285)
!5292 = !DILocation(line: 1397, column: 38, scope: !5285)
!5293 = !DILocation(line: 1397, column: 3, scope: !5285)
!5294 = !DILocation(line: 1398, column: 3, scope: !5285)
!5295 = !DILocation(line: 1398, column: 7, scope: !5285)
!5296 = !DILocation(line: 1398, column: 12, scope: !5285)
!5297 = !DILocation(line: 1401, column: 11, scope: !5249)
!5298 = !DILocation(line: 1401, column: 2, scope: !5249)
!5299 = !DILocation(line: 1401, column: 6, scope: !5249)
!5300 = !DILocation(line: 1401, column: 9, scope: !5249)
!5301 = !DILocation(line: 1404, column: 15, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 1404, column: 2)
!5303 = !DILocation(line: 1404, column: 19, scope: !5302)
!5304 = !DILocation(line: 1404, column: 30, scope: !5302)
!5305 = !DILocation(line: 1404, column: 13, scope: !5302)
!5306 = !DILocation(line: 1404, column: 7, scope: !5302)
!5307 = !DILocation(line: 1404, column: 37, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 1404, column: 2)
!5309 = !DILocation(line: 1404, column: 2, scope: !5302)
!5310 = !DILocation(line: 1405, column: 7, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 1405, column: 7)
!5312 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 1404, column: 65)
!5313 = !DILocation(line: 1405, column: 14, scope: !5311)
!5314 = !DILocation(line: 1405, column: 21, scope: !5311)
!5315 = !DILocation(line: 1405, column: 7, scope: !5312)
!5316 = !DILocation(line: 1406, column: 25, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 1405, column: 30)
!5318 = !DILocation(line: 1406, column: 29, scope: !5317)
!5319 = !DILocation(line: 1406, column: 33, scope: !5317)
!5320 = !DILocation(line: 1406, column: 44, scope: !5317)
!5321 = !DILocation(line: 1406, column: 4, scope: !5317)
!5322 = !DILocation(line: 1407, column: 3, scope: !5317)
!5323 = !DILocation(line: 1408, column: 2, scope: !5312)
!5324 = !DILocation(line: 1404, column: 52, scope: !5308)
!5325 = !DILocation(line: 1404, column: 59, scope: !5308)
!5326 = !DILocation(line: 1404, column: 50, scope: !5308)
!5327 = !DILocation(line: 1404, column: 2, scope: !5308)
!5328 = distinct !{!5328, !5309, !5329}
!5329 = !DILocation(line: 1408, column: 2, scope: !5302)
!5330 = !DILocation(line: 1410, column: 34, scope: !5249)
!5331 = !DILocation(line: 1410, column: 24, scope: !5249)
!5332 = !DILocation(line: 1410, column: 2, scope: !5249)
!5333 = !DILocation(line: 1412, column: 24, scope: !5249)
!5334 = !DILocation(line: 1412, column: 2, scope: !5249)
!5335 = !DILocation(line: 1414, column: 27, scope: !5249)
!5336 = !DILocation(line: 1414, column: 2, scope: !5249)
!5337 = !DILocation(line: 1416, column: 35, scope: !5249)
!5338 = !DILocation(line: 1416, column: 25, scope: !5249)
!5339 = !DILocation(line: 1416, column: 2, scope: !5249)
!5340 = !DILocation(line: 1418, column: 15, scope: !5249)
!5341 = !DILocation(line: 1418, column: 2, scope: !5249)
!5342 = !DILocation(line: 1420, column: 33, scope: !5249)
!5343 = !DILocation(line: 1420, column: 23, scope: !5249)
!5344 = !DILocation(line: 1420, column: 46, scope: !5249)
!5345 = !DILocation(line: 1420, column: 50, scope: !5249)
!5346 = !DILocation(line: 1420, column: 37, scope: !5249)
!5347 = !DILocation(line: 1420, column: 56, scope: !5249)
!5348 = !DILocation(line: 1420, column: 63, scope: !5249)
!5349 = !DILocation(line: 1420, column: 77, scope: !5249)
!5350 = !DILocation(line: 1420, column: 2, scope: !5249)
!5351 = !DILocation(line: 1422, column: 28, scope: !5249)
!5352 = !DILocation(line: 1422, column: 2, scope: !5249)
!5353 = !DILocation(line: 1424, column: 34, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 1424, column: 6)
!5355 = !DILocation(line: 1424, column: 24, scope: !5354)
!5356 = !DILocation(line: 1424, column: 6, scope: !5354)
!5357 = !DILocation(line: 1424, column: 6, scope: !5249)
!5358 = !DILocation(line: 1425, column: 3, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 1424, column: 39)
!5360 = !DILocation(line: 1426, column: 2, scope: !5359)
!5361 = !DILocation(line: 1428, column: 9, scope: !5249)
!5362 = !DILocation(line: 1428, column: 2, scope: !5249)
!5363 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !5364, file: !5364, line: 88, type: !5365, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5364 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5365 = !DISubroutineType(types: !5366)
!5366 = !{!673, !5367}
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!5369 = !DILocalVariable(name: "lb", arg: 1, scope: !5363, file: !5364, line: 88, type: !5367)
!5370 = !DILocation(line: 88, column: 62, scope: !5363)
!5371 = !DILocation(line: 88, column: 76, scope: !5363)
!5372 = !DILocation(line: 88, column: 80, scope: !5363)
!5373 = !DILocation(line: 88, column: 86, scope: !5363)
!5374 = !DILocation(line: 88, column: 75, scope: !5363)
!5375 = !DILocation(line: 88, column: 68, scope: !5363)
!5376 = distinct !DISubprogram(name: "cloneRigGraph", scope: !3, file: !3, line: 500, type: !5377, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{!108, !108, !182, !2034, !467, !467}
!5379 = !DILocalVariable(name: "src", arg: 1, scope: !5376, file: !3, line: 500, type: !108)
!5380 = !DILocation(line: 500, column: 42, scope: !5376)
!5381 = !DILocalVariable(name: "editbones", arg: 2, scope: !5376, file: !3, line: 500, type: !182)
!5382 = !DILocation(line: 500, column: 57, scope: !5376)
!5383 = !DILocalVariable(name: "ob", arg: 3, scope: !5376, file: !3, line: 500, type: !2034)
!5384 = !DILocation(line: 500, column: 76, scope: !5376)
!5385 = !DILocalVariable(name: "side_string", arg: 4, scope: !5376, file: !3, line: 500, type: !467)
!5386 = !DILocation(line: 500, column: 86, scope: !5376)
!5387 = !DILocalVariable(name: "num_string", arg: 5, scope: !5376, file: !3, line: 500, type: !467)
!5388 = !DILocation(line: 500, column: 105, scope: !5376)
!5389 = !DILocalVariable(name: "ptr_hash", scope: !5376, file: !3, line: 502, type: !279)
!5390 = !DILocation(line: 502, column: 11, scope: !5376)
!5391 = !DILocalVariable(name: "node", scope: !5376, file: !3, line: 503, type: !1403)
!5392 = !DILocation(line: 503, column: 11, scope: !5376)
!5393 = !DILocalVariable(name: "arc", scope: !5376, file: !3, line: 504, type: !1515)
!5394 = !DILocation(line: 504, column: 11, scope: !5376)
!5395 = !DILocalVariable(name: "ctrl", scope: !5376, file: !3, line: 505, type: !1908)
!5396 = !DILocation(line: 505, column: 14, scope: !5376)
!5397 = !DILocalVariable(name: "rg", scope: !5376, file: !3, line: 506, type: !108)
!5398 = !DILocation(line: 506, column: 12, scope: !5376)
!5399 = !DILocation(line: 508, column: 13, scope: !5376)
!5400 = !DILocation(line: 508, column: 11, scope: !5376)
!5401 = !DILocation(line: 510, column: 7, scope: !5376)
!5402 = !DILocation(line: 510, column: 5, scope: !5376)
!5403 = !DILocation(line: 512, column: 11, scope: !5376)
!5404 = !DILocation(line: 512, column: 2, scope: !5376)
!5405 = !DILocation(line: 512, column: 6, scope: !5376)
!5406 = !DILocation(line: 512, column: 9, scope: !5376)
!5407 = !DILocation(line: 513, column: 18, scope: !5376)
!5408 = !DILocation(line: 513, column: 2, scope: !5376)
!5409 = !DILocation(line: 513, column: 6, scope: !5376)
!5410 = !DILocation(line: 513, column: 16, scope: !5376)
!5411 = !DILocation(line: 515, column: 23, scope: !5376)
!5412 = !DILocation(line: 515, column: 27, scope: !5376)
!5413 = !DILocation(line: 515, column: 2, scope: !5376)
!5414 = !DILocation(line: 516, column: 23, scope: !5376)
!5415 = !DILocation(line: 516, column: 28, scope: !5376)
!5416 = !DILocation(line: 516, column: 2, scope: !5376)
!5417 = !DILocation(line: 519, column: 14, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 519, column: 2)
!5419 = !DILocation(line: 519, column: 19, scope: !5418)
!5420 = !DILocation(line: 519, column: 25, scope: !5418)
!5421 = !DILocation(line: 519, column: 12, scope: !5418)
!5422 = !DILocation(line: 519, column: 7, scope: !5418)
!5423 = !DILocation(line: 519, column: 32, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 519, column: 2)
!5425 = !DILocation(line: 519, column: 2, scope: !5418)
!5426 = !DILocalVariable(name: "cloned_node", scope: !5427, file: !3, line: 520, type: !1403)
!5427 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 519, column: 57)
!5428 = !DILocation(line: 520, column: 12, scope: !5427)
!5429 = !DILocation(line: 520, column: 37, scope: !5427)
!5430 = !DILocation(line: 520, column: 41, scope: !5427)
!5431 = !DILocation(line: 520, column: 47, scope: !5427)
!5432 = !DILocation(line: 520, column: 26, scope: !5427)
!5433 = !DILocation(line: 521, column: 20, scope: !5427)
!5434 = !DILocation(line: 521, column: 30, scope: !5427)
!5435 = !DILocation(line: 521, column: 36, scope: !5427)
!5436 = !DILocation(line: 521, column: 3, scope: !5427)
!5437 = !DILocation(line: 522, column: 2, scope: !5427)
!5438 = !DILocation(line: 519, column: 45, scope: !5424)
!5439 = !DILocation(line: 519, column: 51, scope: !5424)
!5440 = !DILocation(line: 519, column: 43, scope: !5424)
!5441 = !DILocation(line: 519, column: 2, scope: !5424)
!5442 = distinct !{!5442, !5425, !5443}
!5443 = !DILocation(line: 522, column: 2, scope: !5418)
!5444 = !DILocation(line: 524, column: 30, scope: !5376)
!5445 = !DILocation(line: 524, column: 40, scope: !5376)
!5446 = !DILocation(line: 524, column: 45, scope: !5376)
!5447 = !DILocation(line: 524, column: 13, scope: !5376)
!5448 = !DILocation(line: 524, column: 2, scope: !5376)
!5449 = !DILocation(line: 524, column: 6, scope: !5376)
!5450 = !DILocation(line: 524, column: 11, scope: !5376)
!5451 = !DILocation(line: 527, column: 13, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 527, column: 2)
!5453 = !DILocation(line: 527, column: 18, scope: !5452)
!5454 = !DILocation(line: 527, column: 23, scope: !5452)
!5455 = !DILocation(line: 527, column: 11, scope: !5452)
!5456 = !DILocation(line: 527, column: 7, scope: !5452)
!5457 = !DILocation(line: 527, column: 30, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 527, column: 2)
!5459 = !DILocation(line: 527, column: 2, scope: !5452)
!5460 = !DILocation(line: 528, column: 12, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 527, column: 52)
!5462 = !DILocation(line: 528, column: 16, scope: !5461)
!5463 = !DILocation(line: 528, column: 21, scope: !5461)
!5464 = !DILocation(line: 528, column: 26, scope: !5461)
!5465 = !DILocation(line: 528, column: 36, scope: !5461)
!5466 = !DILocation(line: 528, column: 49, scope: !5461)
!5467 = !DILocation(line: 528, column: 3, scope: !5461)
!5468 = !DILocation(line: 529, column: 2, scope: !5461)
!5469 = !DILocation(line: 527, column: 41, scope: !5458)
!5470 = !DILocation(line: 527, column: 46, scope: !5458)
!5471 = !DILocation(line: 527, column: 39, scope: !5458)
!5472 = !DILocation(line: 527, column: 2, scope: !5458)
!5473 = distinct !{!5473, !5459, !5474}
!5474 = !DILocation(line: 529, column: 2, scope: !5452)
!5475 = !DILocation(line: 532, column: 14, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 532, column: 2)
!5477 = !DILocation(line: 532, column: 19, scope: !5476)
!5478 = !DILocation(line: 532, column: 28, scope: !5476)
!5479 = !DILocation(line: 532, column: 12, scope: !5476)
!5480 = !DILocation(line: 532, column: 7, scope: !5476)
!5481 = !DILocation(line: 532, column: 35, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 532, column: 2)
!5483 = !DILocation(line: 532, column: 2, scope: !5476)
!5484 = !DILocation(line: 533, column: 16, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 532, column: 60)
!5486 = !DILocation(line: 533, column: 20, scope: !5485)
!5487 = !DILocation(line: 533, column: 25, scope: !5485)
!5488 = !DILocation(line: 533, column: 31, scope: !5485)
!5489 = !DILocation(line: 533, column: 41, scope: !5485)
!5490 = !DILocation(line: 533, column: 54, scope: !5485)
!5491 = !DILocation(line: 533, column: 3, scope: !5485)
!5492 = !DILocation(line: 534, column: 2, scope: !5485)
!5493 = !DILocation(line: 532, column: 48, scope: !5482)
!5494 = !DILocation(line: 532, column: 54, scope: !5482)
!5495 = !DILocation(line: 532, column: 46, scope: !5482)
!5496 = !DILocation(line: 532, column: 2, scope: !5482)
!5497 = distinct !{!5497, !5483, !5498}
!5498 = !DILocation(line: 534, column: 2, scope: !5476)
!5499 = !DILocation(line: 537, column: 13, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 537, column: 2)
!5501 = !DILocation(line: 537, column: 17, scope: !5500)
!5502 = !DILocation(line: 537, column: 22, scope: !5500)
!5503 = !DILocation(line: 537, column: 11, scope: !5500)
!5504 = !DILocation(line: 537, column: 7, scope: !5500)
!5505 = !DILocation(line: 537, column: 29, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 537, column: 2)
!5507 = !DILocation(line: 537, column: 2, scope: !5500)
!5508 = !DILocalVariable(name: "edge", scope: !5509, file: !3, line: 538, type: !1743)
!5509 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 537, column: 51)
!5510 = !DILocation(line: 538, column: 12, scope: !5509)
!5511 = !DILocation(line: 540, column: 15, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 540, column: 3)
!5513 = !DILocation(line: 540, column: 20, scope: !5512)
!5514 = !DILocation(line: 540, column: 26, scope: !5512)
!5515 = !DILocation(line: 540, column: 13, scope: !5512)
!5516 = !DILocation(line: 540, column: 8, scope: !5512)
!5517 = !DILocation(line: 540, column: 33, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 540, column: 3)
!5519 = !DILocation(line: 540, column: 3, scope: !5512)
!5520 = !DILocation(line: 541, column: 8, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 541, column: 8)
!5522 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 540, column: 58)
!5523 = !DILocation(line: 541, column: 14, scope: !5521)
!5524 = !DILocation(line: 541, column: 19, scope: !5521)
!5525 = !DILocation(line: 541, column: 8, scope: !5522)
!5526 = !DILocalVariable(name: "bone", scope: !5527, file: !3, line: 542, type: !1542)
!5527 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 541, column: 28)
!5528 = !DILocation(line: 542, column: 15, scope: !5527)
!5529 = !DILocation(line: 544, column: 37, scope: !5527)
!5530 = !DILocation(line: 544, column: 43, scope: !5527)
!5531 = !DILocation(line: 544, column: 49, scope: !5527)
!5532 = !DILocation(line: 544, column: 54, scope: !5527)
!5533 = !DILocation(line: 544, column: 65, scope: !5527)
!5534 = !DILocation(line: 544, column: 70, scope: !5527)
!5535 = !DILocation(line: 544, column: 74, scope: !5527)
!5536 = !DILocation(line: 544, column: 78, scope: !5527)
!5537 = !DILocation(line: 544, column: 5, scope: !5527)
!5538 = !DILocation(line: 546, column: 9, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 546, column: 9)
!5540 = !DILocation(line: 546, column: 15, scope: !5539)
!5541 = !DILocation(line: 546, column: 21, scope: !5539)
!5542 = !DILocation(line: 546, column: 9, scope: !5527)
!5543 = !DILocation(line: 547, column: 30, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 546, column: 29)
!5545 = !DILocation(line: 547, column: 40, scope: !5544)
!5546 = !DILocation(line: 547, column: 46, scope: !5544)
!5547 = !DILocation(line: 547, column: 52, scope: !5544)
!5548 = !DILocation(line: 547, column: 13, scope: !5544)
!5549 = !DILocation(line: 547, column: 11, scope: !5544)
!5550 = !DILocation(line: 549, column: 10, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 549, column: 10)
!5552 = !DILocation(line: 549, column: 15, scope: !5551)
!5553 = !DILocation(line: 549, column: 10, scope: !5544)
!5554 = !DILocation(line: 550, column: 28, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 549, column: 24)
!5556 = !DILocation(line: 550, column: 7, scope: !5555)
!5557 = !DILocation(line: 550, column: 13, scope: !5555)
!5558 = !DILocation(line: 550, column: 19, scope: !5555)
!5559 = !DILocation(line: 550, column: 26, scope: !5555)
!5560 = !DILocation(line: 551, column: 6, scope: !5555)
!5561 = !DILocation(line: 556, column: 7, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 552, column: 11)
!5563 = !DILocation(line: 556, column: 13, scope: !5562)
!5564 = !DILocation(line: 556, column: 19, scope: !5562)
!5565 = !DILocation(line: 556, column: 24, scope: !5562)
!5566 = !DILocation(line: 558, column: 5, scope: !5544)
!5567 = !DILocation(line: 559, column: 4, scope: !5527)
!5568 = !DILocation(line: 560, column: 3, scope: !5522)
!5569 = !DILocation(line: 540, column: 46, scope: !5518)
!5570 = !DILocation(line: 540, column: 52, scope: !5518)
!5571 = !DILocation(line: 540, column: 44, scope: !5518)
!5572 = !DILocation(line: 540, column: 3, scope: !5518)
!5573 = distinct !{!5573, !5519, !5574}
!5574 = !DILocation(line: 560, column: 3, scope: !5512)
!5575 = !DILocation(line: 561, column: 2, scope: !5509)
!5576 = !DILocation(line: 537, column: 40, scope: !5506)
!5577 = !DILocation(line: 537, column: 45, scope: !5506)
!5578 = !DILocation(line: 537, column: 38, scope: !5506)
!5579 = !DILocation(line: 537, column: 2, scope: !5506)
!5580 = distinct !{!5580, !5507, !5581}
!5581 = !DILocation(line: 561, column: 2, scope: !5500)
!5582 = !DILocation(line: 563, column: 14, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 563, column: 2)
!5584 = !DILocation(line: 563, column: 18, scope: !5583)
!5585 = !DILocation(line: 563, column: 27, scope: !5583)
!5586 = !DILocation(line: 563, column: 12, scope: !5583)
!5587 = !DILocation(line: 563, column: 7, scope: !5583)
!5588 = !DILocation(line: 563, column: 34, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 563, column: 2)
!5590 = !DILocation(line: 563, column: 2, scope: !5583)
!5591 = !DILocalVariable(name: "bone", scope: !5592, file: !3, line: 564, type: !1542)
!5592 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 563, column: 59)
!5593 = !DILocation(line: 564, column: 13, scope: !5592)
!5594 = !DILocation(line: 566, column: 35, scope: !5592)
!5595 = !DILocation(line: 566, column: 41, scope: !5592)
!5596 = !DILocation(line: 566, column: 47, scope: !5592)
!5597 = !DILocation(line: 566, column: 52, scope: !5592)
!5598 = !DILocation(line: 566, column: 63, scope: !5592)
!5599 = !DILocation(line: 566, column: 68, scope: !5592)
!5600 = !DILocation(line: 566, column: 72, scope: !5592)
!5601 = !DILocation(line: 566, column: 76, scope: !5592)
!5602 = !DILocation(line: 566, column: 3, scope: !5592)
!5603 = !DILocation(line: 568, column: 7, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 568, column: 7)
!5605 = !DILocation(line: 568, column: 13, scope: !5604)
!5606 = !DILocation(line: 568, column: 19, scope: !5604)
!5607 = !DILocation(line: 568, column: 7, scope: !5592)
!5608 = !DILocation(line: 569, column: 28, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5604, file: !3, line: 568, column: 27)
!5610 = !DILocation(line: 569, column: 38, scope: !5609)
!5611 = !DILocation(line: 569, column: 44, scope: !5609)
!5612 = !DILocation(line: 569, column: 50, scope: !5609)
!5613 = !DILocation(line: 569, column: 11, scope: !5609)
!5614 = !DILocation(line: 569, column: 9, scope: !5609)
!5615 = !DILocation(line: 571, column: 8, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 571, column: 8)
!5617 = !DILocation(line: 571, column: 13, scope: !5616)
!5618 = !DILocation(line: 571, column: 8, scope: !5609)
!5619 = !DILocation(line: 572, column: 26, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 571, column: 22)
!5621 = !DILocation(line: 572, column: 5, scope: !5620)
!5622 = !DILocation(line: 572, column: 11, scope: !5620)
!5623 = !DILocation(line: 572, column: 17, scope: !5620)
!5624 = !DILocation(line: 572, column: 24, scope: !5620)
!5625 = !DILocation(line: 573, column: 4, scope: !5620)
!5626 = !DILocation(line: 578, column: 5, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 574, column: 9)
!5628 = !DILocation(line: 578, column: 11, scope: !5627)
!5629 = !DILocation(line: 578, column: 17, scope: !5627)
!5630 = !DILocation(line: 578, column: 22, scope: !5627)
!5631 = !DILocation(line: 580, column: 3, scope: !5609)
!5632 = !DILocation(line: 582, column: 33, scope: !5592)
!5633 = !DILocation(line: 582, column: 43, scope: !5592)
!5634 = !DILocation(line: 582, column: 49, scope: !5592)
!5635 = !DILocation(line: 582, column: 16, scope: !5592)
!5636 = !DILocation(line: 582, column: 3, scope: !5592)
!5637 = !DILocation(line: 582, column: 9, scope: !5592)
!5638 = !DILocation(line: 582, column: 14, scope: !5592)
!5639 = !DILocation(line: 583, column: 38, scope: !5592)
!5640 = !DILocation(line: 583, column: 48, scope: !5592)
!5641 = !DILocation(line: 583, column: 54, scope: !5592)
!5642 = !DILocation(line: 583, column: 21, scope: !5592)
!5643 = !DILocation(line: 583, column: 3, scope: !5592)
!5644 = !DILocation(line: 583, column: 9, scope: !5592)
!5645 = !DILocation(line: 583, column: 19, scope: !5592)
!5646 = !DILocation(line: 584, column: 2, scope: !5592)
!5647 = !DILocation(line: 563, column: 47, scope: !5589)
!5648 = !DILocation(line: 563, column: 53, scope: !5589)
!5649 = !DILocation(line: 563, column: 45, scope: !5589)
!5650 = !DILocation(line: 563, column: 2, scope: !5589)
!5651 = distinct !{!5651, !5590, !5652}
!5652 = !DILocation(line: 584, column: 2, scope: !5583)
!5653 = !DILocation(line: 586, column: 17, scope: !5376)
!5654 = !DILocation(line: 586, column: 2, scope: !5376)
!5655 = !DILocation(line: 588, column: 9, scope: !5376)
!5656 = !DILocation(line: 588, column: 2, scope: !5376)
!5657 = distinct !DISubprogram(name: "retargetArctoArc", scope: !3, file: !3, line: 2134, type: !4339, scopeLine: 2135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5658 = !DILocalVariable(name: "C", arg: 1, scope: !5657, file: !3, line: 2134, type: !1535)
!5659 = !DILocation(line: 2134, column: 40, scope: !5657)
!5660 = !DILocalVariable(name: "rigg", arg: 2, scope: !5657, file: !3, line: 2134, type: !108)
!5661 = !DILocation(line: 2134, column: 53, scope: !5657)
!5662 = !DILocalVariable(name: "iarc", arg: 3, scope: !5657, file: !3, line: 2134, type: !1515)
!5663 = !DILocation(line: 2134, column: 67, scope: !5657)
!5664 = !DILocalVariable(name: "inode_start", arg: 4, scope: !5657, file: !3, line: 2134, type: !1403)
!5665 = !DILocation(line: 2134, column: 82, scope: !5657)
!5666 = !DILocalVariable(name: "p", scope: !5657, file: !3, line: 2136, type: !1509)
!5667 = !DILocation(line: 2136, column: 17, scope: !5657)
!5668 = !DILocation(line: 2136, column: 21, scope: !5657)
!5669 = !DILocation(line: 2138, column: 12, scope: !5657)
!5670 = !DILocation(line: 2138, column: 2, scope: !5657)
!5671 = !DILocation(line: 2138, column: 5, scope: !5657)
!5672 = !DILocation(line: 2138, column: 10, scope: !5657)
!5673 = !DILocation(line: 2139, column: 12, scope: !5657)
!5674 = !DILocation(line: 2139, column: 2, scope: !5657)
!5675 = !DILocation(line: 2139, column: 5, scope: !5657)
!5676 = !DILocation(line: 2139, column: 10, scope: !5657)
!5677 = !DILocation(line: 2140, column: 19, scope: !5657)
!5678 = !DILocation(line: 2140, column: 2, scope: !5657)
!5679 = !DILocation(line: 2140, column: 5, scope: !5657)
!5680 = !DILocation(line: 2140, column: 17, scope: !5657)
!5681 = !DILocation(line: 2141, column: 15, scope: !5657)
!5682 = !DILocation(line: 2141, column: 2, scope: !5657)
!5683 = !DILocation(line: 2141, column: 5, scope: !5657)
!5684 = !DILocation(line: 2141, column: 13, scope: !5657)
!5685 = !DILocation(line: 2143, column: 21, scope: !5657)
!5686 = !DILocation(line: 2143, column: 27, scope: !5657)
!5687 = !DILocation(line: 2143, column: 61, scope: !5657)
!5688 = !DILocation(line: 2143, column: 2, scope: !5657)
!5689 = !DILocation(line: 2144, column: 1, scope: !5657)
!5690 = distinct !DISubprogram(name: "finishRetarget", scope: !3, file: !3, line: 2398, type: !1989, scopeLine: 2399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5691 = !DILocalVariable(name: "rigg", arg: 1, scope: !5690, file: !3, line: 2398, type: !108)
!5692 = !DILocation(line: 2398, column: 38, scope: !5690)
!5693 = !DILocation(line: 2400, column: 30, scope: !5690)
!5694 = !DILocation(line: 2400, column: 36, scope: !5690)
!5695 = !DILocation(line: 2400, column: 2, scope: !5690)
!5696 = !DILocation(line: 2401, column: 1, scope: !5690)
!5697 = distinct !DISubprogram(name: "BIF_adjustRetarget", scope: !3, file: !3, line: 2625, type: !4923, scopeLine: 2626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5698 = !DILocalVariable(name: "C", arg: 1, scope: !5697, file: !3, line: 2625, type: !1535)
!5699 = !DILocation(line: 2625, column: 35, scope: !5697)
!5700 = !DILocation(line: 2627, column: 6, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 2627, column: 6)
!5702 = !DILocation(line: 2627, column: 6, scope: !5697)
!5703 = !DILocation(line: 2628, column: 16, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 2627, column: 19)
!5705 = !DILocation(line: 2628, column: 19, scope: !5704)
!5706 = !DILocation(line: 2628, column: 3, scope: !5704)
!5707 = !DILocation(line: 2629, column: 2, scope: !5704)
!5708 = !DILocation(line: 2630, column: 1, scope: !5697)
!5709 = distinct !DISubprogram(name: "adjustGraphs", scope: !3, file: !3, line: 2403, type: !5082, scopeLine: 2404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5710 = !DILocalVariable(name: "C", arg: 1, scope: !5709, file: !3, line: 2403, type: !1535)
!5711 = !DILocation(line: 2403, column: 36, scope: !5709)
!5712 = !DILocalVariable(name: "rigg", arg: 2, scope: !5709, file: !3, line: 2403, type: !108)
!5713 = !DILocation(line: 2403, column: 49, scope: !5709)
!5714 = !DILocalVariable(name: "arm", scope: !5709, file: !3, line: 2405, type: !1405)
!5715 = !DILocation(line: 2405, column: 13, scope: !5709)
!5716 = !DILocation(line: 2405, column: 19, scope: !5709)
!5717 = !DILocation(line: 2405, column: 25, scope: !5709)
!5718 = !DILocation(line: 2405, column: 29, scope: !5709)
!5719 = !DILocalVariable(name: "arc", scope: !5709, file: !3, line: 2406, type: !1515)
!5720 = !DILocation(line: 2406, column: 10, scope: !5709)
!5721 = !DILocation(line: 2408, column: 13, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 2408, column: 2)
!5723 = !DILocation(line: 2408, column: 19, scope: !5722)
!5724 = !DILocation(line: 2408, column: 24, scope: !5722)
!5725 = !DILocation(line: 2408, column: 11, scope: !5722)
!5726 = !DILocation(line: 2408, column: 7, scope: !5722)
!5727 = !DILocation(line: 2408, column: 31, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 2408, column: 2)
!5729 = !DILocation(line: 2408, column: 2, scope: !5722)
!5730 = !DILocation(line: 2409, column: 7, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 2409, column: 7)
!5732 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 2408, column: 53)
!5733 = !DILocation(line: 2409, column: 12, scope: !5731)
!5734 = !DILocation(line: 2409, column: 7, scope: !5732)
!5735 = !DILocation(line: 2410, column: 21, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 2409, column: 23)
!5737 = !DILocation(line: 2410, column: 24, scope: !5736)
!5738 = !DILocation(line: 2410, column: 30, scope: !5736)
!5739 = !DILocation(line: 2410, column: 35, scope: !5736)
!5740 = !DILocation(line: 2410, column: 40, scope: !5736)
!5741 = !DILocation(line: 2410, column: 4, scope: !5736)
!5742 = !DILocation(line: 2411, column: 3, scope: !5736)
!5743 = !DILocation(line: 2412, column: 2, scope: !5732)
!5744 = !DILocation(line: 2408, column: 42, scope: !5728)
!5745 = !DILocation(line: 2408, column: 47, scope: !5728)
!5746 = !DILocation(line: 2408, column: 40, scope: !5728)
!5747 = !DILocation(line: 2408, column: 2, scope: !5728)
!5748 = distinct !{!5748, !5729, !5749}
!5749 = !DILocation(line: 2412, column: 2, scope: !5722)
!5750 = !DILocation(line: 2414, column: 17, scope: !5709)
!5751 = !DILocation(line: 2414, column: 2, scope: !5709)
!5752 = !DILocation(line: 2417, column: 14, scope: !5709)
!5753 = !DILocation(line: 2417, column: 20, scope: !5709)
!5754 = !DILocation(line: 2417, column: 2, scope: !5709)
!5755 = !DILocation(line: 2417, column: 7, scope: !5709)
!5756 = !DILocation(line: 2417, column: 12, scope: !5709)
!5757 = !DILocation(line: 2418, column: 24, scope: !5709)
!5758 = !DILocation(line: 2418, column: 2, scope: !5709)
!5759 = !DILocation(line: 2420, column: 15, scope: !5709)
!5760 = !DILocation(line: 2420, column: 2, scope: !5709)
!5761 = !DILocation(line: 2421, column: 1, scope: !5709)
!5762 = distinct !DISubprogram(name: "RIG_printCtrl", scope: !3, file: !3, line: 1261, type: !5763, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{null, !1908, !467}
!5765 = !DILocalVariable(name: "ctrl", arg: 1, scope: !5762, file: !3, line: 1261, type: !1908)
!5766 = !DILocation(line: 1261, column: 39, scope: !5762)
!5767 = !DILocalVariable(name: "indent", arg: 2, scope: !5762, file: !3, line: 1261, type: !467)
!5768 = !DILocation(line: 1261, column: 51, scope: !5762)
!5769 = !DILocalVariable(name: "text", scope: !5762, file: !3, line: 1263, type: !1053)
!5770 = !DILocation(line: 1263, column: 7, scope: !5762)
!5771 = !DILocation(line: 1265, column: 25, scope: !5762)
!5772 = !DILocation(line: 1265, column: 33, scope: !5762)
!5773 = !DILocation(line: 1265, column: 39, scope: !5762)
!5774 = !DILocation(line: 1265, column: 45, scope: !5762)
!5775 = !DILocation(line: 1265, column: 2, scope: !5762)
!5776 = !DILocation(line: 1266, column: 25, scope: !5762)
!5777 = !DILocation(line: 1266, column: 33, scope: !5762)
!5778 = !DILocation(line: 1266, column: 39, scope: !5762)
!5779 = !DILocation(line: 1266, column: 46, scope: !5762)
!5780 = !DILocation(line: 1266, column: 52, scope: !5762)
!5781 = !DILocation(line: 1266, column: 58, scope: !5762)
!5782 = !DILocation(line: 1266, column: 2, scope: !5762)
!5783 = !DILocation(line: 1268, column: 15, scope: !5762)
!5784 = !DILocation(line: 1268, column: 47, scope: !5762)
!5785 = !DILocation(line: 1268, column: 2, scope: !5762)
!5786 = !DILocation(line: 1269, column: 11, scope: !5762)
!5787 = !DILocation(line: 1269, column: 17, scope: !5762)
!5788 = !DILocation(line: 1269, column: 23, scope: !5762)
!5789 = !DILocation(line: 1269, column: 2, scope: !5762)
!5790 = !DILocation(line: 1271, column: 25, scope: !5762)
!5791 = !DILocation(line: 1271, column: 33, scope: !5762)
!5792 = !DILocation(line: 1271, column: 39, scope: !5762)
!5793 = !DILocation(line: 1271, column: 2, scope: !5762)
!5794 = !DILocation(line: 1272, column: 1, scope: !5762)
!5795 = distinct !DISubprogram(name: "newRigArc", scope: !3, file: !3, line: 296, type: !5796, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!1515, !108}
!5798 = !DILocalVariable(name: "rg", arg: 1, scope: !5795, file: !3, line: 296, type: !108)
!5799 = !DILocation(line: 296, column: 36, scope: !5795)
!5800 = !DILocalVariable(name: "arc", scope: !5795, file: !3, line: 298, type: !1515)
!5801 = !DILocation(line: 298, column: 10, scope: !5795)
!5802 = !DILocation(line: 300, column: 8, scope: !5795)
!5803 = !DILocation(line: 300, column: 6, scope: !5795)
!5804 = !DILocation(line: 301, column: 2, scope: !5795)
!5805 = !DILocation(line: 301, column: 7, scope: !5795)
!5806 = !DILocation(line: 301, column: 13, scope: !5795)
!5807 = !DILocation(line: 302, column: 15, scope: !5795)
!5808 = !DILocation(line: 302, column: 19, scope: !5795)
!5809 = !DILocation(line: 302, column: 25, scope: !5795)
!5810 = !DILocation(line: 302, column: 2, scope: !5795)
!5811 = !DILocation(line: 304, column: 9, scope: !5795)
!5812 = !DILocation(line: 304, column: 2, scope: !5795)
!5813 = distinct !DISubprogram(name: "newRigNodeHead", scope: !3, file: !3, line: 318, type: !5814, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!1403, !108, !1515, !1578}
!5816 = !DILocalVariable(name: "rg", arg: 1, scope: !5813, file: !3, line: 318, type: !108)
!5817 = !DILocation(line: 318, column: 42, scope: !5813)
!5818 = !DILocalVariable(name: "arc", arg: 2, scope: !5813, file: !3, line: 318, type: !1515)
!5819 = !DILocation(line: 318, column: 54, scope: !5813)
!5820 = !DILocalVariable(name: "p", arg: 3, scope: !5813, file: !3, line: 318, type: !1578)
!5821 = !DILocation(line: 318, column: 65, scope: !5813)
!5822 = !DILocalVariable(name: "node", scope: !5813, file: !3, line: 320, type: !1403)
!5823 = !DILocation(line: 320, column: 11, scope: !5813)
!5824 = !DILocation(line: 321, column: 9, scope: !5813)
!5825 = !DILocation(line: 321, column: 7, scope: !5813)
!5826 = !DILocation(line: 322, column: 15, scope: !5813)
!5827 = !DILocation(line: 322, column: 19, scope: !5813)
!5828 = !DILocation(line: 322, column: 26, scope: !5813)
!5829 = !DILocation(line: 322, column: 2, scope: !5813)
!5830 = !DILocation(line: 324, column: 13, scope: !5813)
!5831 = !DILocation(line: 324, column: 19, scope: !5813)
!5832 = !DILocation(line: 324, column: 22, scope: !5813)
!5833 = !DILocation(line: 324, column: 2, scope: !5813)
!5834 = !DILocation(line: 325, column: 2, scope: !5813)
!5835 = !DILocation(line: 325, column: 8, scope: !5813)
!5836 = !DILocation(line: 325, column: 15, scope: !5813)
!5837 = !DILocation(line: 326, column: 2, scope: !5813)
!5838 = !DILocation(line: 326, column: 8, scope: !5813)
!5839 = !DILocation(line: 326, column: 13, scope: !5813)
!5840 = !DILocation(line: 328, column: 14, scope: !5813)
!5841 = !DILocation(line: 328, column: 2, scope: !5813)
!5842 = !DILocation(line: 328, column: 7, scope: !5813)
!5843 = !DILocation(line: 328, column: 12, scope: !5813)
!5844 = !DILocation(line: 330, column: 9, scope: !5813)
!5845 = !DILocation(line: 330, column: 2, scope: !5813)
!5846 = distinct !DISubprogram(name: "addRigNodeHead", scope: !3, file: !3, line: 333, type: !5847, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5847 = !DISubroutineType(types: !5848)
!5848 = !{null, !108, !1515, !1403}
!5849 = !DILocalVariable(name: "UNUSED_rg", arg: 1, scope: !5846, file: !3, line: 333, type: !108)
!5850 = !DILocation(line: 333, column: 38, scope: !5846)
!5851 = !DILocalVariable(name: "arc", arg: 2, scope: !5846, file: !3, line: 333, type: !1515)
!5852 = !DILocation(line: 333, column: 58, scope: !5846)
!5853 = !DILocalVariable(name: "node", arg: 3, scope: !5846, file: !3, line: 333, type: !1403)
!5854 = !DILocation(line: 333, column: 72, scope: !5846)
!5855 = !DILocation(line: 335, column: 2, scope: !5846)
!5856 = !DILocation(line: 335, column: 8, scope: !5846)
!5857 = !DILocation(line: 335, column: 14, scope: !5846)
!5858 = !DILocation(line: 337, column: 14, scope: !5846)
!5859 = !DILocation(line: 337, column: 2, scope: !5846)
!5860 = !DILocation(line: 337, column: 7, scope: !5846)
!5861 = !DILocation(line: 337, column: 12, scope: !5846)
!5862 = !DILocation(line: 338, column: 1, scope: !5846)
!5863 = distinct !DISubprogram(name: "RIG_addEdgeToArc", scope: !3, file: !3, line: 383, type: !5864, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{null, !1515, !1578, !1542}
!5866 = !DILocalVariable(name: "arc", arg: 1, scope: !5863, file: !3, line: 383, type: !1515)
!5867 = !DILocation(line: 383, column: 38, scope: !5863)
!5868 = !DILocalVariable(name: "tail", arg: 2, scope: !5863, file: !3, line: 383, type: !1578)
!5869 = !DILocation(line: 383, column: 49, scope: !5863)
!5870 = !DILocalVariable(name: "bone", arg: 3, scope: !5863, file: !3, line: 383, type: !1542)
!5871 = !DILocation(line: 383, column: 68, scope: !5863)
!5872 = !DILocalVariable(name: "edge", scope: !5863, file: !3, line: 385, type: !1743)
!5873 = !DILocation(line: 385, column: 11, scope: !5863)
!5874 = !DILocation(line: 387, column: 9, scope: !5863)
!5875 = !DILocation(line: 387, column: 7, scope: !5863)
!5876 = !DILocation(line: 389, column: 13, scope: !5863)
!5877 = !DILocation(line: 389, column: 19, scope: !5863)
!5878 = !DILocation(line: 389, column: 25, scope: !5863)
!5879 = !DILocation(line: 389, column: 2, scope: !5863)
!5880 = !DILocation(line: 390, column: 15, scope: !5863)
!5881 = !DILocation(line: 390, column: 2, scope: !5863)
!5882 = !DILocation(line: 390, column: 8, scope: !5863)
!5883 = !DILocation(line: 390, column: 13, scope: !5863)
!5884 = !DILocation(line: 392, column: 6, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 392, column: 6)
!5886 = !DILocation(line: 392, column: 6, scope: !5863)
!5887 = !DILocation(line: 393, column: 25, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 392, column: 12)
!5889 = !DILocation(line: 393, column: 31, scope: !5888)
!5890 = !DILocation(line: 393, column: 37, scope: !5888)
!5891 = !DILocation(line: 393, column: 43, scope: !5888)
!5892 = !DILocation(line: 393, column: 49, scope: !5888)
!5893 = !DILocation(line: 393, column: 3, scope: !5888)
!5894 = !DILocation(line: 394, column: 2, scope: !5888)
!5895 = !DILocation(line: 396, column: 22, scope: !5863)
!5896 = !DILocation(line: 396, column: 27, scope: !5863)
!5897 = !DILocation(line: 396, column: 2, scope: !5863)
!5898 = !DILocation(line: 397, column: 1, scope: !5863)
!5899 = distinct !DISubprogram(name: "RIG_addControlBone", scope: !3, file: !3, line: 618, type: !5900, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5900 = !DISubroutineType(types: !5901)
!5901 = !{null, !108, !1542}
!5902 = !DILocalVariable(name: "rg", arg: 1, scope: !5899, file: !3, line: 618, type: !108)
!5903 = !DILocation(line: 618, column: 42, scope: !5899)
!5904 = !DILocalVariable(name: "bone", arg: 2, scope: !5899, file: !3, line: 618, type: !1542)
!5905 = !DILocation(line: 618, column: 56, scope: !5899)
!5906 = !DILocalVariable(name: "ctrl", scope: !5899, file: !3, line: 620, type: !1908)
!5907 = !DILocation(line: 620, column: 14, scope: !5899)
!5908 = !DILocation(line: 620, column: 35, scope: !5899)
!5909 = !DILocation(line: 620, column: 21, scope: !5899)
!5910 = !DILocation(line: 621, column: 15, scope: !5899)
!5911 = !DILocation(line: 621, column: 2, scope: !5899)
!5912 = !DILocation(line: 621, column: 8, scope: !5899)
!5913 = !DILocation(line: 621, column: 13, scope: !5899)
!5914 = !DILocation(line: 622, column: 13, scope: !5899)
!5915 = !DILocation(line: 622, column: 19, scope: !5899)
!5916 = !DILocation(line: 622, column: 25, scope: !5899)
!5917 = !DILocation(line: 622, column: 31, scope: !5899)
!5918 = !DILocation(line: 622, column: 2, scope: !5899)
!5919 = !DILocation(line: 623, column: 13, scope: !5899)
!5920 = !DILocation(line: 623, column: 19, scope: !5899)
!5921 = !DILocation(line: 623, column: 25, scope: !5899)
!5922 = !DILocation(line: 623, column: 31, scope: !5899)
!5923 = !DILocation(line: 623, column: 2, scope: !5899)
!5924 = !DILocation(line: 624, column: 24, scope: !5899)
!5925 = !DILocation(line: 624, column: 30, scope: !5899)
!5926 = !DILocation(line: 624, column: 36, scope: !5899)
!5927 = !DILocation(line: 624, column: 42, scope: !5899)
!5928 = !DILocation(line: 624, column: 48, scope: !5899)
!5929 = !DILocation(line: 624, column: 2, scope: !5899)
!5930 = !DILocation(line: 625, column: 2, scope: !5899)
!5931 = !DILocation(line: 625, column: 8, scope: !5899)
!5932 = !DILocation(line: 625, column: 18, scope: !5899)
!5933 = !DILocation(line: 627, column: 19, scope: !5899)
!5934 = !DILocation(line: 627, column: 23, scope: !5899)
!5935 = !DILocation(line: 627, column: 37, scope: !5899)
!5936 = !DILocation(line: 627, column: 43, scope: !5899)
!5937 = !DILocation(line: 627, column: 49, scope: !5899)
!5938 = !DILocation(line: 627, column: 2, scope: !5899)
!5939 = !DILocation(line: 628, column: 1, scope: !5899)
!5940 = distinct !DISubprogram(name: "countEditBoneChildren", scope: !3, file: !3, line: 95, type: !5941, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{!145, !182, !1542}
!5943 = !DILocalVariable(name: "list", arg: 1, scope: !5940, file: !3, line: 95, type: !182)
!5944 = !DILocation(line: 95, column: 44, scope: !5940)
!5945 = !DILocalVariable(name: "parent", arg: 2, scope: !5940, file: !3, line: 95, type: !1542)
!5946 = !DILocation(line: 95, column: 60, scope: !5940)
!5947 = !DILocalVariable(name: "ebone", scope: !5940, file: !3, line: 97, type: !1542)
!5948 = !DILocation(line: 97, column: 12, scope: !5940)
!5949 = !DILocalVariable(name: "count", scope: !5940, file: !3, line: 98, type: !145)
!5950 = !DILocation(line: 98, column: 6, scope: !5940)
!5951 = !DILocation(line: 100, column: 15, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 100, column: 2)
!5953 = !DILocation(line: 100, column: 21, scope: !5952)
!5954 = !DILocation(line: 100, column: 13, scope: !5952)
!5955 = !DILocation(line: 100, column: 7, scope: !5952)
!5956 = !DILocation(line: 100, column: 28, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 100, column: 2)
!5958 = !DILocation(line: 100, column: 2, scope: !5952)
!5959 = !DILocation(line: 101, column: 7, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 101, column: 7)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 100, column: 56)
!5962 = !DILocation(line: 101, column: 14, scope: !5960)
!5963 = !DILocation(line: 101, column: 24, scope: !5960)
!5964 = !DILocation(line: 101, column: 21, scope: !5960)
!5965 = !DILocation(line: 101, column: 7, scope: !5961)
!5966 = !DILocation(line: 102, column: 9, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 101, column: 32)
!5968 = !DILocation(line: 103, column: 3, scope: !5967)
!5969 = !DILocation(line: 104, column: 2, scope: !5961)
!5970 = !DILocation(line: 100, column: 43, scope: !5957)
!5971 = !DILocation(line: 100, column: 50, scope: !5957)
!5972 = !DILocation(line: 100, column: 41, scope: !5957)
!5973 = !DILocation(line: 100, column: 2, scope: !5957)
!5974 = distinct !{!5974, !5958, !5975}
!5975 = !DILocation(line: 104, column: 2, scope: !5952)
!5976 = !DILocation(line: 106, column: 9, scope: !5940)
!5977 = !DILocation(line: 106, column: 2, scope: !5940)
!5978 = distinct !DISubprogram(name: "newRigNodeTail", scope: !3, file: !3, line: 353, type: !5814, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!5979 = !DILocalVariable(name: "rg", arg: 1, scope: !5978, file: !3, line: 353, type: !108)
!5980 = !DILocation(line: 353, column: 42, scope: !5978)
!5981 = !DILocalVariable(name: "arc", arg: 2, scope: !5978, file: !3, line: 353, type: !1515)
!5982 = !DILocation(line: 353, column: 54, scope: !5978)
!5983 = !DILocalVariable(name: "p", arg: 3, scope: !5978, file: !3, line: 353, type: !1578)
!5984 = !DILocation(line: 353, column: 65, scope: !5978)
!5985 = !DILocalVariable(name: "node", scope: !5978, file: !3, line: 355, type: !1403)
!5986 = !DILocation(line: 355, column: 11, scope: !5978)
!5987 = !DILocation(line: 355, column: 29, scope: !5978)
!5988 = !DILocation(line: 355, column: 33, scope: !5978)
!5989 = !DILocation(line: 355, column: 18, scope: !5978)
!5990 = !DILocation(line: 357, column: 2, scope: !5978)
!5991 = !DILocation(line: 357, column: 8, scope: !5978)
!5992 = !DILocation(line: 357, column: 15, scope: !5978)
!5993 = !DILocation(line: 358, column: 14, scope: !5978)
!5994 = !DILocation(line: 358, column: 2, scope: !5978)
!5995 = !DILocation(line: 358, column: 7, scope: !5978)
!5996 = !DILocation(line: 358, column: 12, scope: !5978)
!5997 = !DILocation(line: 360, column: 9, scope: !5978)
!5998 = !DILocation(line: 360, column: 2, scope: !5978)
!5999 = distinct !DISubprogram(name: "newRigNode", scope: !3, file: !3, line: 340, type: !6000, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!1403, !108, !1578}
!6002 = !DILocalVariable(name: "rg", arg: 1, scope: !5999, file: !3, line: 340, type: !108)
!6003 = !DILocation(line: 340, column: 38, scope: !5999)
!6004 = !DILocalVariable(name: "p", arg: 2, scope: !5999, file: !3, line: 340, type: !1578)
!6005 = !DILocation(line: 340, column: 48, scope: !5999)
!6006 = !DILocalVariable(name: "node", scope: !5999, file: !3, line: 342, type: !1403)
!6007 = !DILocation(line: 342, column: 11, scope: !5999)
!6008 = !DILocation(line: 343, column: 9, scope: !5999)
!6009 = !DILocation(line: 343, column: 7, scope: !5999)
!6010 = !DILocation(line: 344, column: 15, scope: !5999)
!6011 = !DILocation(line: 344, column: 19, scope: !5999)
!6012 = !DILocation(line: 344, column: 26, scope: !5999)
!6013 = !DILocation(line: 344, column: 2, scope: !5999)
!6014 = !DILocation(line: 346, column: 13, scope: !5999)
!6015 = !DILocation(line: 346, column: 19, scope: !5999)
!6016 = !DILocation(line: 346, column: 22, scope: !5999)
!6017 = !DILocation(line: 346, column: 2, scope: !5999)
!6018 = !DILocation(line: 347, column: 2, scope: !5999)
!6019 = !DILocation(line: 347, column: 8, scope: !5999)
!6020 = !DILocation(line: 347, column: 15, scope: !5999)
!6021 = !DILocation(line: 348, column: 2, scope: !5999)
!6022 = !DILocation(line: 348, column: 8, scope: !5999)
!6023 = !DILocation(line: 348, column: 13, scope: !5999)
!6024 = !DILocation(line: 350, column: 9, scope: !5999)
!6025 = !DILocation(line: 350, column: 2, scope: !5999)
!6026 = distinct !DISubprogram(name: "nextEditBoneChild", scope: !3, file: !3, line: 109, type: !6027, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6027 = !DISubroutineType(types: !6028)
!6028 = !{!1542, !182, !1542, !145}
!6029 = !DILocalVariable(name: "list", arg: 1, scope: !6026, file: !3, line: 109, type: !182)
!6030 = !DILocation(line: 109, column: 46, scope: !6026)
!6031 = !DILocalVariable(name: "parent", arg: 2, scope: !6026, file: !3, line: 109, type: !1542)
!6032 = !DILocation(line: 109, column: 62, scope: !6026)
!6033 = !DILocalVariable(name: "n", arg: 3, scope: !6026, file: !3, line: 109, type: !145)
!6034 = !DILocation(line: 109, column: 74, scope: !6026)
!6035 = !DILocalVariable(name: "ebone", scope: !6026, file: !3, line: 111, type: !1542)
!6036 = !DILocation(line: 111, column: 12, scope: !6026)
!6037 = !DILocation(line: 113, column: 15, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 113, column: 2)
!6039 = !DILocation(line: 113, column: 21, scope: !6038)
!6040 = !DILocation(line: 113, column: 13, scope: !6038)
!6041 = !DILocation(line: 113, column: 7, scope: !6038)
!6042 = !DILocation(line: 113, column: 28, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 113, column: 2)
!6044 = !DILocation(line: 113, column: 2, scope: !6038)
!6045 = !DILocation(line: 114, column: 7, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 114, column: 7)
!6047 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 113, column: 56)
!6048 = !DILocation(line: 114, column: 14, scope: !6046)
!6049 = !DILocation(line: 114, column: 24, scope: !6046)
!6050 = !DILocation(line: 114, column: 21, scope: !6046)
!6051 = !DILocation(line: 114, column: 7, scope: !6047)
!6052 = !DILocation(line: 115, column: 8, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 115, column: 8)
!6054 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 114, column: 32)
!6055 = !DILocation(line: 115, column: 10, scope: !6053)
!6056 = !DILocation(line: 115, column: 8, scope: !6054)
!6057 = !DILocation(line: 116, column: 12, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 115, column: 16)
!6059 = !DILocation(line: 116, column: 5, scope: !6058)
!6060 = !DILocation(line: 118, column: 5, scope: !6054)
!6061 = !DILocation(line: 119, column: 3, scope: !6054)
!6062 = !DILocation(line: 120, column: 2, scope: !6047)
!6063 = !DILocation(line: 113, column: 43, scope: !6043)
!6064 = !DILocation(line: 113, column: 50, scope: !6043)
!6065 = !DILocation(line: 113, column: 41, scope: !6043)
!6066 = !DILocation(line: 113, column: 2, scope: !6043)
!6067 = distinct !{!6067, !6044, !6068}
!6068 = !DILocation(line: 120, column: 2, scope: !6038)
!6069 = !DILocation(line: 122, column: 2, scope: !6026)
!6070 = !DILocation(line: 123, column: 1, scope: !6026)
!6071 = distinct !DISubprogram(name: "getEditBoneRollUpAxis", scope: !3, file: !3, line: 125, type: !6072, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{null, !1542, !122, !1578}
!6074 = !DILocalVariable(name: "bone", arg: 1, scope: !6071, file: !3, line: 125, type: !1542)
!6075 = !DILocation(line: 125, column: 45, scope: !6071)
!6076 = !DILocalVariable(name: "roll", arg: 2, scope: !6071, file: !3, line: 125, type: !122)
!6077 = !DILocation(line: 125, column: 57, scope: !6071)
!6078 = !DILocalVariable(name: "up_axis", arg: 3, scope: !6071, file: !3, line: 125, type: !1578)
!6079 = !DILocation(line: 125, column: 69, scope: !6071)
!6080 = !DILocalVariable(name: "mat", scope: !6071, file: !3, line: 127, type: !1430)
!6081 = !DILocation(line: 127, column: 8, scope: !6071)
!6082 = !DILocalVariable(name: "nor", scope: !6071, file: !3, line: 127, type: !141)
!6083 = !DILocation(line: 127, column: 19, scope: !6071)
!6084 = !DILocation(line: 129, column: 14, scope: !6071)
!6085 = !DILocation(line: 129, column: 19, scope: !6071)
!6086 = !DILocation(line: 129, column: 25, scope: !6071)
!6087 = !DILocation(line: 129, column: 31, scope: !6071)
!6088 = !DILocation(line: 129, column: 37, scope: !6071)
!6089 = !DILocation(line: 129, column: 2, scope: !6071)
!6090 = !DILocation(line: 131, column: 19, scope: !6071)
!6091 = !DILocation(line: 131, column: 24, scope: !6071)
!6092 = !DILocation(line: 131, column: 30, scope: !6071)
!6093 = !DILocation(line: 131, column: 2, scope: !6071)
!6094 = !DILocation(line: 132, column: 13, scope: !6071)
!6095 = !DILocation(line: 132, column: 22, scope: !6071)
!6096 = !DILocation(line: 132, column: 2, scope: !6071)
!6097 = !DILocation(line: 133, column: 1, scope: !6071)
!6098 = distinct !DISubprogram(name: "RIG_appendEdgeToArc", scope: !3, file: !3, line: 363, type: !6099, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6099 = !DISubroutineType(types: !6100)
!6100 = !{null, !1515, !1743}
!6101 = !DILocalVariable(name: "arc", arg: 1, scope: !6098, file: !3, line: 363, type: !1515)
!6102 = !DILocation(line: 363, column: 41, scope: !6098)
!6103 = !DILocalVariable(name: "edge", arg: 2, scope: !6098, file: !3, line: 363, type: !1743)
!6104 = !DILocation(line: 363, column: 55, scope: !6098)
!6105 = !DILocation(line: 365, column: 15, scope: !6098)
!6106 = !DILocation(line: 365, column: 20, scope: !6098)
!6107 = !DILocation(line: 365, column: 27, scope: !6098)
!6108 = !DILocation(line: 365, column: 2, scope: !6098)
!6109 = !DILocation(line: 367, column: 6, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 367, column: 6)
!6111 = !DILocation(line: 367, column: 12, scope: !6110)
!6112 = !DILocation(line: 367, column: 17, scope: !6110)
!6113 = !DILocation(line: 367, column: 6, scope: !6098)
!6114 = !DILocation(line: 368, column: 14, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 367, column: 26)
!6116 = !DILocation(line: 368, column: 20, scope: !6115)
!6117 = !DILocation(line: 368, column: 26, scope: !6115)
!6118 = !DILocation(line: 368, column: 31, scope: !6115)
!6119 = !DILocation(line: 368, column: 37, scope: !6115)
!6120 = !DILocation(line: 368, column: 3, scope: !6115)
!6121 = !DILocation(line: 369, column: 2, scope: !6115)
!6122 = !DILocalVariable(name: "last_edge", scope: !6123, file: !3, line: 371, type: !1743)
!6123 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 370, column: 7)
!6124 = !DILocation(line: 371, column: 12, scope: !6123)
!6125 = !DILocation(line: 371, column: 24, scope: !6123)
!6126 = !DILocation(line: 371, column: 30, scope: !6123)
!6127 = !DILocation(line: 372, column: 14, scope: !6123)
!6128 = !DILocation(line: 372, column: 20, scope: !6123)
!6129 = !DILocation(line: 372, column: 26, scope: !6123)
!6130 = !DILocation(line: 372, column: 37, scope: !6123)
!6131 = !DILocation(line: 372, column: 3, scope: !6123)
!6132 = !DILocation(line: 373, column: 27, scope: !6123)
!6133 = !DILocation(line: 373, column: 38, scope: !6123)
!6134 = !DILocation(line: 373, column: 3, scope: !6123)
!6135 = !DILocation(line: 376, column: 26, scope: !6098)
!6136 = !DILocation(line: 376, column: 32, scope: !6098)
!6137 = !DILocation(line: 376, column: 38, scope: !6098)
!6138 = !DILocation(line: 376, column: 44, scope: !6098)
!6139 = !DILocation(line: 376, column: 17, scope: !6098)
!6140 = !DILocation(line: 376, column: 2, scope: !6098)
!6141 = !DILocation(line: 376, column: 8, scope: !6098)
!6142 = !DILocation(line: 376, column: 15, scope: !6098)
!6143 = !DILocation(line: 378, column: 17, scope: !6098)
!6144 = !DILocation(line: 378, column: 23, scope: !6098)
!6145 = !DILocation(line: 378, column: 2, scope: !6098)
!6146 = !DILocation(line: 378, column: 7, scope: !6098)
!6147 = !DILocation(line: 378, column: 14, scope: !6098)
!6148 = !DILocation(line: 380, column: 2, scope: !6098)
!6149 = !DILocation(line: 380, column: 7, scope: !6098)
!6150 = !DILocation(line: 380, column: 13, scope: !6098)
!6151 = !DILocation(line: 381, column: 1, scope: !6098)
!6152 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !1611, file: !1611, line: 357, type: !6153, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6153 = !DISubroutineType(types: !6154)
!6154 = !{null, !1578, !1614, !1614}
!6155 = !DILocalVariable(name: "r", arg: 1, scope: !6152, file: !1611, line: 357, type: !1578)
!6156 = !DILocation(line: 357, column: 32, scope: !6152)
!6157 = !DILocalVariable(name: "a", arg: 2, scope: !6152, file: !1611, line: 357, type: !1614)
!6158 = !DILocation(line: 357, column: 50, scope: !6152)
!6159 = !DILocalVariable(name: "b", arg: 3, scope: !6152, file: !1611, line: 357, type: !1614)
!6160 = !DILocation(line: 357, column: 68, scope: !6152)
!6161 = !DILocation(line: 359, column: 9, scope: !6152)
!6162 = !DILocation(line: 359, column: 16, scope: !6152)
!6163 = !DILocation(line: 359, column: 14, scope: !6152)
!6164 = !DILocation(line: 359, column: 2, scope: !6152)
!6165 = !DILocation(line: 359, column: 7, scope: !6152)
!6166 = !DILocation(line: 360, column: 9, scope: !6152)
!6167 = !DILocation(line: 360, column: 16, scope: !6152)
!6168 = !DILocation(line: 360, column: 14, scope: !6152)
!6169 = !DILocation(line: 360, column: 2, scope: !6152)
!6170 = !DILocation(line: 360, column: 7, scope: !6152)
!6171 = !DILocation(line: 361, column: 9, scope: !6152)
!6172 = !DILocation(line: 361, column: 16, scope: !6152)
!6173 = !DILocation(line: 361, column: 14, scope: !6152)
!6174 = !DILocation(line: 361, column: 2, scope: !6152)
!6175 = !DILocation(line: 361, column: 7, scope: !6152)
!6176 = !DILocation(line: 362, column: 1, scope: !6152)
!6177 = distinct !DISubprogram(name: "RIG_calculateEdgeAngles", scope: !3, file: !3, line: 594, type: !6178, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !1743, !1743}
!6180 = !DILocalVariable(name: "edge_first", arg: 1, scope: !6177, file: !3, line: 594, type: !1743)
!6181 = !DILocation(line: 594, column: 46, scope: !6177)
!6182 = !DILocalVariable(name: "edge_second", arg: 2, scope: !6177, file: !3, line: 594, type: !1743)
!6183 = !DILocation(line: 594, column: 67, scope: !6177)
!6184 = !DILocalVariable(name: "vec_first", scope: !6177, file: !3, line: 596, type: !141)
!6185 = !DILocation(line: 596, column: 8, scope: !6177)
!6186 = !DILocalVariable(name: "vec_second", scope: !6177, file: !3, line: 596, type: !141)
!6187 = !DILocation(line: 596, column: 22, scope: !6177)
!6188 = !DILocation(line: 598, column: 14, scope: !6177)
!6189 = !DILocation(line: 598, column: 25, scope: !6177)
!6190 = !DILocation(line: 598, column: 37, scope: !6177)
!6191 = !DILocation(line: 598, column: 43, scope: !6177)
!6192 = !DILocation(line: 598, column: 55, scope: !6177)
!6193 = !DILocation(line: 598, column: 2, scope: !6177)
!6194 = !DILocation(line: 599, column: 14, scope: !6177)
!6195 = !DILocation(line: 599, column: 26, scope: !6177)
!6196 = !DILocation(line: 599, column: 39, scope: !6177)
!6197 = !DILocation(line: 599, column: 45, scope: !6177)
!6198 = !DILocation(line: 599, column: 58, scope: !6177)
!6199 = !DILocation(line: 599, column: 2, scope: !6177)
!6200 = !DILocation(line: 601, column: 15, scope: !6177)
!6201 = !DILocation(line: 601, column: 2, scope: !6177)
!6202 = !DILocation(line: 602, column: 15, scope: !6177)
!6203 = !DILocation(line: 602, column: 2, scope: !6177)
!6204 = !DILocation(line: 604, column: 44, scope: !6177)
!6205 = !DILocation(line: 604, column: 55, scope: !6177)
!6206 = !DILocation(line: 604, column: 22, scope: !6177)
!6207 = !DILocation(line: 604, column: 2, scope: !6177)
!6208 = !DILocation(line: 604, column: 14, scope: !6177)
!6209 = !DILocation(line: 604, column: 20, scope: !6177)
!6210 = !DILocation(line: 606, column: 6, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 606, column: 6)
!6212 = !DILocation(line: 606, column: 19, scope: !6211)
!6213 = !DILocation(line: 606, column: 24, scope: !6211)
!6214 = !DILocation(line: 606, column: 6, scope: !6177)
!6215 = !DILocalVariable(name: "normal", scope: !6216, file: !3, line: 607, type: !141)
!6216 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 606, column: 33)
!6217 = !DILocation(line: 607, column: 9, scope: !6216)
!6218 = !DILocation(line: 609, column: 17, scope: !6216)
!6219 = !DILocation(line: 609, column: 25, scope: !6216)
!6220 = !DILocation(line: 609, column: 36, scope: !6216)
!6221 = !DILocation(line: 609, column: 3, scope: !6216)
!6222 = !DILocation(line: 610, column: 16, scope: !6216)
!6223 = !DILocation(line: 610, column: 3, scope: !6216)
!6224 = !DILocation(line: 612, column: 49, scope: !6216)
!6225 = !DILocation(line: 612, column: 57, scope: !6216)
!6226 = !DILocation(line: 612, column: 70, scope: !6216)
!6227 = !DILocation(line: 612, column: 27, scope: !6216)
!6228 = !DILocation(line: 612, column: 3, scope: !6216)
!6229 = !DILocation(line: 612, column: 16, scope: !6216)
!6230 = !DILocation(line: 612, column: 25, scope: !6216)
!6231 = !DILocation(line: 613, column: 2, scope: !6216)
!6232 = !DILocation(line: 614, column: 1, scope: !6177)
!6233 = distinct !DISubprogram(name: "len_v3v3", scope: !1611, file: !1611, line: 759, type: !6234, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!122, !1614, !1614}
!6236 = !DILocalVariable(name: "a", arg: 1, scope: !6233, file: !1611, line: 759, type: !1614)
!6237 = !DILocation(line: 759, column: 36, scope: !6233)
!6238 = !DILocalVariable(name: "b", arg: 2, scope: !6233, file: !1611, line: 759, type: !1614)
!6239 = !DILocation(line: 759, column: 54, scope: !6233)
!6240 = !DILocalVariable(name: "d", scope: !6233, file: !1611, line: 761, type: !141)
!6241 = !DILocation(line: 761, column: 8, scope: !6233)
!6242 = !DILocation(line: 763, column: 14, scope: !6233)
!6243 = !DILocation(line: 763, column: 17, scope: !6233)
!6244 = !DILocation(line: 763, column: 20, scope: !6233)
!6245 = !DILocation(line: 763, column: 2, scope: !6233)
!6246 = !DILocation(line: 764, column: 16, scope: !6233)
!6247 = !DILocation(line: 764, column: 9, scope: !6233)
!6248 = !DILocation(line: 764, column: 2, scope: !6233)
!6249 = distinct !DISubprogram(name: "normalize_v3", scope: !1611, file: !1611, line: 830, type: !6250, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!122, !1578}
!6252 = !DILocalVariable(name: "n", arg: 1, scope: !6249, file: !1611, line: 830, type: !1578)
!6253 = !DILocation(line: 830, column: 34, scope: !6249)
!6254 = !DILocation(line: 832, column: 25, scope: !6249)
!6255 = !DILocation(line: 832, column: 28, scope: !6249)
!6256 = !DILocation(line: 832, column: 9, scope: !6249)
!6257 = !DILocation(line: 832, column: 2, scope: !6249)
!6258 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !1611, file: !1611, line: 634, type: !6153, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6259 = !DILocalVariable(name: "r", arg: 1, scope: !6258, file: !1611, line: 634, type: !1578)
!6260 = !DILocation(line: 634, column: 34, scope: !6258)
!6261 = !DILocalVariable(name: "a", arg: 2, scope: !6258, file: !1611, line: 634, type: !1614)
!6262 = !DILocation(line: 634, column: 52, scope: !6258)
!6263 = !DILocalVariable(name: "b", arg: 3, scope: !6258, file: !1611, line: 634, type: !1614)
!6264 = !DILocation(line: 634, column: 70, scope: !6258)
!6265 = !DILocation(line: 637, column: 9, scope: !6258)
!6266 = !DILocation(line: 637, column: 16, scope: !6258)
!6267 = !DILocation(line: 637, column: 14, scope: !6258)
!6268 = !DILocation(line: 637, column: 23, scope: !6258)
!6269 = !DILocation(line: 637, column: 30, scope: !6258)
!6270 = !DILocation(line: 637, column: 28, scope: !6258)
!6271 = !DILocation(line: 637, column: 21, scope: !6258)
!6272 = !DILocation(line: 637, column: 2, scope: !6258)
!6273 = !DILocation(line: 637, column: 7, scope: !6258)
!6274 = !DILocation(line: 638, column: 9, scope: !6258)
!6275 = !DILocation(line: 638, column: 16, scope: !6258)
!6276 = !DILocation(line: 638, column: 14, scope: !6258)
!6277 = !DILocation(line: 638, column: 23, scope: !6258)
!6278 = !DILocation(line: 638, column: 30, scope: !6258)
!6279 = !DILocation(line: 638, column: 28, scope: !6258)
!6280 = !DILocation(line: 638, column: 21, scope: !6258)
!6281 = !DILocation(line: 638, column: 2, scope: !6258)
!6282 = !DILocation(line: 638, column: 7, scope: !6258)
!6283 = !DILocation(line: 639, column: 9, scope: !6258)
!6284 = !DILocation(line: 639, column: 16, scope: !6258)
!6285 = !DILocation(line: 639, column: 14, scope: !6258)
!6286 = !DILocation(line: 639, column: 23, scope: !6258)
!6287 = !DILocation(line: 639, column: 30, scope: !6258)
!6288 = !DILocation(line: 639, column: 28, scope: !6258)
!6289 = !DILocation(line: 639, column: 21, scope: !6258)
!6290 = !DILocation(line: 639, column: 2, scope: !6258)
!6291 = !DILocation(line: 639, column: 7, scope: !6258)
!6292 = !DILocation(line: 640, column: 1, scope: !6258)
!6293 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !1611, file: !1611, line: 788, type: !6294, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6294 = !DISubroutineType(types: !6295)
!6295 = !{!122, !1578, !1614}
!6296 = !DILocalVariable(name: "r", arg: 1, scope: !6293, file: !1611, line: 788, type: !1578)
!6297 = !DILocation(line: 788, column: 37, scope: !6293)
!6298 = !DILocalVariable(name: "a", arg: 2, scope: !6293, file: !1611, line: 788, type: !1614)
!6299 = !DILocation(line: 788, column: 55, scope: !6293)
!6300 = !DILocalVariable(name: "d", scope: !6293, file: !1611, line: 790, type: !122)
!6301 = !DILocation(line: 790, column: 8, scope: !6293)
!6302 = !DILocation(line: 790, column: 21, scope: !6293)
!6303 = !DILocation(line: 790, column: 24, scope: !6293)
!6304 = !DILocation(line: 790, column: 12, scope: !6293)
!6305 = !DILocation(line: 794, column: 6, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6293, file: !1611, line: 794, column: 6)
!6307 = !DILocation(line: 794, column: 8, scope: !6306)
!6308 = !DILocation(line: 794, column: 6, scope: !6293)
!6309 = !DILocation(line: 795, column: 13, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6306, file: !1611, line: 794, column: 20)
!6311 = !DILocation(line: 795, column: 7, scope: !6310)
!6312 = !DILocation(line: 795, column: 5, scope: !6310)
!6313 = !DILocation(line: 796, column: 15, scope: !6310)
!6314 = !DILocation(line: 796, column: 18, scope: !6310)
!6315 = !DILocation(line: 796, column: 28, scope: !6310)
!6316 = !DILocation(line: 796, column: 26, scope: !6310)
!6317 = !DILocation(line: 796, column: 3, scope: !6310)
!6318 = !DILocation(line: 797, column: 2, scope: !6310)
!6319 = !DILocation(line: 799, column: 11, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6306, file: !1611, line: 798, column: 7)
!6321 = !DILocation(line: 799, column: 3, scope: !6320)
!6322 = !DILocation(line: 800, column: 5, scope: !6320)
!6323 = !DILocation(line: 803, column: 9, scope: !6293)
!6324 = !DILocation(line: 803, column: 2, scope: !6293)
!6325 = distinct !DISubprogram(name: "dot_v3v3", scope: !1611, file: !1611, line: 619, type: !6234, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6326 = !DILocalVariable(name: "a", arg: 1, scope: !6325, file: !1611, line: 619, type: !1614)
!6327 = !DILocation(line: 619, column: 36, scope: !6325)
!6328 = !DILocalVariable(name: "b", arg: 2, scope: !6325, file: !1611, line: 619, type: !1614)
!6329 = !DILocation(line: 619, column: 54, scope: !6325)
!6330 = !DILocation(line: 621, column: 9, scope: !6325)
!6331 = !DILocation(line: 621, column: 16, scope: !6325)
!6332 = !DILocation(line: 621, column: 14, scope: !6325)
!6333 = !DILocation(line: 621, column: 23, scope: !6325)
!6334 = !DILocation(line: 621, column: 30, scope: !6325)
!6335 = !DILocation(line: 621, column: 28, scope: !6325)
!6336 = !DILocation(line: 621, column: 21, scope: !6325)
!6337 = !DILocation(line: 621, column: 37, scope: !6325)
!6338 = !DILocation(line: 621, column: 44, scope: !6325)
!6339 = !DILocation(line: 621, column: 42, scope: !6325)
!6340 = !DILocation(line: 621, column: 35, scope: !6325)
!6341 = !DILocation(line: 621, column: 2, scope: !6325)
!6342 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !1611, file: !1611, line: 399, type: !6343, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6343 = !DISubroutineType(types: !6344)
!6344 = !{null, !1578, !1614, !122}
!6345 = !DILocalVariable(name: "r", arg: 1, scope: !6342, file: !1611, line: 399, type: !1578)
!6346 = !DILocation(line: 399, column: 32, scope: !6342)
!6347 = !DILocalVariable(name: "a", arg: 2, scope: !6342, file: !1611, line: 399, type: !1614)
!6348 = !DILocation(line: 399, column: 50, scope: !6342)
!6349 = !DILocalVariable(name: "f", arg: 3, scope: !6342, file: !1611, line: 399, type: !122)
!6350 = !DILocation(line: 399, column: 62, scope: !6342)
!6351 = !DILocation(line: 401, column: 9, scope: !6342)
!6352 = !DILocation(line: 401, column: 16, scope: !6342)
!6353 = !DILocation(line: 401, column: 14, scope: !6342)
!6354 = !DILocation(line: 401, column: 2, scope: !6342)
!6355 = !DILocation(line: 401, column: 7, scope: !6342)
!6356 = !DILocation(line: 402, column: 9, scope: !6342)
!6357 = !DILocation(line: 402, column: 16, scope: !6342)
!6358 = !DILocation(line: 402, column: 14, scope: !6342)
!6359 = !DILocation(line: 402, column: 2, scope: !6342)
!6360 = !DILocation(line: 402, column: 7, scope: !6342)
!6361 = !DILocation(line: 403, column: 9, scope: !6342)
!6362 = !DILocation(line: 403, column: 16, scope: !6342)
!6363 = !DILocation(line: 403, column: 14, scope: !6342)
!6364 = !DILocation(line: 403, column: 2, scope: !6342)
!6365 = !DILocation(line: 403, column: 7, scope: !6342)
!6366 = !DILocation(line: 404, column: 1, scope: !6342)
!6367 = distinct !DISubprogram(name: "zero_v3", scope: !1611, file: !1611, line: 43, type: !6368, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6368 = !DISubroutineType(types: !6369)
!6369 = !{null, !1578}
!6370 = !DILocalVariable(name: "r", arg: 1, scope: !6367, file: !1611, line: 43, type: !1578)
!6371 = !DILocation(line: 43, column: 28, scope: !6367)
!6372 = !DILocation(line: 45, column: 2, scope: !6367)
!6373 = !DILocation(line: 45, column: 7, scope: !6367)
!6374 = !DILocation(line: 46, column: 2, scope: !6367)
!6375 = !DILocation(line: 46, column: 7, scope: !6367)
!6376 = !DILocation(line: 47, column: 2, scope: !6367)
!6377 = !DILocation(line: 47, column: 7, scope: !6367)
!6378 = !DILocation(line: 48, column: 1, scope: !6367)
!6379 = distinct !DISubprogram(name: "len_v3", scope: !1611, file: !1611, line: 714, type: !6380, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6380 = !DISubroutineType(types: !6381)
!6381 = !{!122, !1614}
!6382 = !DILocalVariable(name: "a", arg: 1, scope: !6379, file: !1611, line: 714, type: !1614)
!6383 = !DILocation(line: 714, column: 34, scope: !6379)
!6384 = !DILocation(line: 716, column: 24, scope: !6379)
!6385 = !DILocation(line: 716, column: 27, scope: !6379)
!6386 = !DILocation(line: 716, column: 15, scope: !6379)
!6387 = !DILocation(line: 716, column: 9, scope: !6379)
!6388 = !DILocation(line: 716, column: 2, scope: !6379)
!6389 = distinct !DISubprogram(name: "newRigControl", scope: !3, file: !3, line: 307, type: !6390, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6390 = !DISubroutineType(types: !6391)
!6391 = !{!1908, !108}
!6392 = !DILocalVariable(name: "rg", arg: 1, scope: !6389, file: !3, line: 307, type: !108)
!6393 = !DILocation(line: 307, column: 44, scope: !6389)
!6394 = !DILocalVariable(name: "ctrl", scope: !6389, file: !3, line: 309, type: !1908)
!6395 = !DILocation(line: 309, column: 14, scope: !6389)
!6396 = !DILocation(line: 311, column: 9, scope: !6389)
!6397 = !DILocation(line: 311, column: 7, scope: !6389)
!6398 = !DILocation(line: 313, column: 15, scope: !6389)
!6399 = !DILocation(line: 313, column: 19, scope: !6389)
!6400 = !DILocation(line: 313, column: 29, scope: !6389)
!6401 = !DILocation(line: 313, column: 2, scope: !6389)
!6402 = !DILocation(line: 315, column: 9, scope: !6389)
!6403 = !DILocation(line: 315, column: 2, scope: !6389)
!6404 = distinct !DISubprogram(name: "RIG_joinArcs", scope: !3, file: !3, line: 922, type: !6405, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{null, !108, !1403, !1515, !1515}
!6407 = !DILocalVariable(name: "rg", arg: 1, scope: !6404, file: !3, line: 922, type: !108)
!6408 = !DILocation(line: 922, column: 36, scope: !6404)
!6409 = !DILocalVariable(name: "node", arg: 2, scope: !6404, file: !3, line: 922, type: !1403)
!6410 = !DILocation(line: 922, column: 49, scope: !6404)
!6411 = !DILocalVariable(name: "joined_arc1", arg: 3, scope: !6404, file: !3, line: 922, type: !1515)
!6412 = !DILocation(line: 922, column: 63, scope: !6404)
!6413 = !DILocalVariable(name: "joined_arc2", arg: 4, scope: !6404, file: !3, line: 922, type: !1515)
!6414 = !DILocation(line: 922, column: 84, scope: !6404)
!6415 = !DILocalVariable(name: "edge", scope: !6404, file: !3, line: 924, type: !1743)
!6416 = !DILocation(line: 924, column: 11, scope: !6404)
!6417 = !DILocalVariable(name: "next_edge", scope: !6404, file: !3, line: 924, type: !1743)
!6418 = !DILocation(line: 924, column: 18, scope: !6404)
!6419 = !DILocation(line: 927, column: 6, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 927, column: 6)
!6421 = !DILocation(line: 927, column: 19, scope: !6420)
!6422 = !DILocation(line: 927, column: 27, scope: !6420)
!6423 = !DILocation(line: 927, column: 40, scope: !6420)
!6424 = !DILocation(line: 927, column: 24, scope: !6420)
!6425 = !DILocation(line: 927, column: 45, scope: !6420)
!6426 = !DILocation(line: 927, column: 48, scope: !6420)
!6427 = !DILocation(line: 927, column: 61, scope: !6420)
!6428 = !DILocation(line: 927, column: 69, scope: !6420)
!6429 = !DILocation(line: 927, column: 82, scope: !6420)
!6430 = !DILocation(line: 927, column: 66, scope: !6420)
!6431 = !DILocation(line: 927, column: 6, scope: !6404)
!6432 = !DILocation(line: 928, column: 3, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 927, column: 88)
!6434 = !DILocation(line: 932, column: 6, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 932, column: 6)
!6436 = !DILocation(line: 932, column: 19, scope: !6435)
!6437 = !DILocation(line: 932, column: 27, scope: !6435)
!6438 = !DILocation(line: 932, column: 40, scope: !6435)
!6439 = !DILocation(line: 932, column: 24, scope: !6435)
!6440 = !DILocation(line: 932, column: 6, scope: !6404)
!6441 = !DILocalVariable(name: "tmp", scope: !6442, file: !3, line: 933, type: !1515)
!6442 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 932, column: 46)
!6443 = !DILocation(line: 933, column: 11, scope: !6442)
!6444 = !DILocation(line: 933, column: 17, scope: !6442)
!6445 = !DILocation(line: 934, column: 17, scope: !6442)
!6446 = !DILocation(line: 934, column: 15, scope: !6442)
!6447 = !DILocation(line: 935, column: 17, scope: !6442)
!6448 = !DILocation(line: 935, column: 15, scope: !6442)
!6449 = !DILocation(line: 936, column: 2, scope: !6442)
!6450 = !DILocation(line: 938, column: 14, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 938, column: 2)
!6452 = !DILocation(line: 938, column: 27, scope: !6451)
!6453 = !DILocation(line: 938, column: 33, scope: !6451)
!6454 = !DILocation(line: 938, column: 12, scope: !6451)
!6455 = !DILocation(line: 938, column: 7, scope: !6451)
!6456 = !DILocation(line: 938, column: 40, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 938, column: 2)
!6458 = !DILocation(line: 938, column: 2, scope: !6451)
!6459 = !DILocation(line: 939, column: 15, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 938, column: 64)
!6461 = !DILocation(line: 939, column: 21, scope: !6460)
!6462 = !DILocation(line: 939, column: 13, scope: !6460)
!6463 = !DILocation(line: 941, column: 23, scope: !6460)
!6464 = !DILocation(line: 941, column: 36, scope: !6460)
!6465 = !DILocation(line: 941, column: 3, scope: !6460)
!6466 = !DILocation(line: 942, column: 2, scope: !6460)
!6467 = !DILocation(line: 938, column: 53, scope: !6457)
!6468 = !DILocation(line: 938, column: 51, scope: !6457)
!6469 = !DILocation(line: 938, column: 2, scope: !6457)
!6470 = distinct !{!6470, !6458, !6471}
!6471 = !DILocation(line: 942, column: 2, scope: !6451)
!6472 = !DILocation(line: 944, column: 22, scope: !6404)
!6473 = !DILocation(line: 944, column: 35, scope: !6404)
!6474 = !DILocation(line: 944, column: 2, scope: !6404)
!6475 = !DILocation(line: 944, column: 15, scope: !6404)
!6476 = !DILocation(line: 944, column: 20, scope: !6404)
!6477 = !DILocation(line: 946, column: 22, scope: !6404)
!6478 = !DILocation(line: 946, column: 35, scope: !6404)
!6479 = !DILocation(line: 946, column: 2, scope: !6404)
!6480 = !DILocation(line: 948, column: 26, scope: !6404)
!6481 = !DILocation(line: 948, column: 16, scope: !6404)
!6482 = !DILocation(line: 948, column: 38, scope: !6404)
!6483 = !DILocation(line: 948, column: 30, scope: !6404)
!6484 = !DILocation(line: 948, column: 2, scope: !6404)
!6485 = !DILocation(line: 950, column: 27, scope: !6404)
!6486 = !DILocation(line: 950, column: 17, scope: !6404)
!6487 = !DILocation(line: 950, column: 40, scope: !6404)
!6488 = !DILocation(line: 950, column: 31, scope: !6404)
!6489 = !DILocation(line: 950, column: 2, scope: !6404)
!6490 = !DILocation(line: 951, column: 1, scope: !6404)
!6491 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !5364, file: !5364, line: 89, type: !6492, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6492 = !DISubroutineType(types: !6493)
!6493 = !{null, !3210}
!6494 = !DILocalVariable(name: "lb", arg: 1, scope: !6491, file: !5364, line: 89, type: !3210)
!6495 = !DILocation(line: 89, column: 53, scope: !6491)
!6496 = !DILocation(line: 89, column: 71, scope: !6491)
!6497 = !DILocation(line: 89, column: 75, scope: !6491)
!6498 = !DILocation(line: 89, column: 80, scope: !6491)
!6499 = !DILocation(line: 89, column: 59, scope: !6491)
!6500 = !DILocation(line: 89, column: 63, scope: !6491)
!6501 = !DILocation(line: 89, column: 69, scope: !6491)
!6502 = !DILocation(line: 89, column: 93, scope: !6491)
!6503 = distinct !DISubprogram(name: "RIG_parentControl", scope: !3, file: !3, line: 630, type: !6504, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{!145, !1908, !1542}
!6506 = !DILocalVariable(name: "ctrl", arg: 1, scope: !6503, file: !3, line: 630, type: !1908)
!6507 = !DILocation(line: 630, column: 42, scope: !6503)
!6508 = !DILocalVariable(name: "link", arg: 2, scope: !6503, file: !3, line: 630, type: !1542)
!6509 = !DILocation(line: 630, column: 58, scope: !6503)
!6510 = !DILocation(line: 632, column: 6, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 632, column: 6)
!6512 = !DILocation(line: 632, column: 6, scope: !6503)
!6513 = !DILocalVariable(name: "offset", scope: !6514, file: !3, line: 633, type: !141)
!6514 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 632, column: 12)
!6515 = !DILocation(line: 633, column: 9, scope: !6514)
!6516 = !DILocalVariable(name: "flag", scope: !6514, file: !3, line: 634, type: !145)
!6517 = !DILocation(line: 634, column: 7, scope: !6514)
!6518 = !DILocation(line: 636, column: 15, scope: !6514)
!6519 = !DILocation(line: 636, column: 23, scope: !6514)
!6520 = !DILocation(line: 636, column: 29, scope: !6514)
!6521 = !DILocation(line: 636, column: 35, scope: !6514)
!6522 = !DILocation(line: 636, column: 41, scope: !6514)
!6523 = !DILocation(line: 636, column: 47, scope: !6514)
!6524 = !DILocation(line: 636, column: 3, scope: !6514)
!6525 = !DILocation(line: 639, column: 16, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 639, column: 7)
!6527 = !DILocation(line: 639, column: 24, scope: !6526)
!6528 = !DILocation(line: 639, column: 7, scope: !6526)
!6529 = !DILocation(line: 639, column: 32, scope: !6526)
!6530 = !DILocation(line: 639, column: 7, scope: !6514)
!6531 = !DILocalVariable(name: "vbone", scope: !6532, file: !3, line: 640, type: !141)
!6532 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 639, column: 43)
!6533 = !DILocation(line: 640, column: 10, scope: !6532)
!6534 = !DILocalVariable(name: "vparent", scope: !6532, file: !3, line: 640, type: !141)
!6535 = !DILocation(line: 640, column: 20, scope: !6532)
!6536 = !DILocation(line: 642, column: 9, scope: !6532)
!6537 = !DILocation(line: 644, column: 16, scope: !6532)
!6538 = !DILocation(line: 644, column: 23, scope: !6532)
!6539 = !DILocation(line: 644, column: 29, scope: !6532)
!6540 = !DILocation(line: 644, column: 35, scope: !6532)
!6541 = !DILocation(line: 644, column: 41, scope: !6532)
!6542 = !DILocation(line: 644, column: 47, scope: !6532)
!6543 = !DILocation(line: 644, column: 53, scope: !6532)
!6544 = !DILocation(line: 644, column: 4, scope: !6532)
!6545 = !DILocation(line: 645, column: 16, scope: !6532)
!6546 = !DILocation(line: 645, column: 25, scope: !6532)
!6547 = !DILocation(line: 645, column: 31, scope: !6532)
!6548 = !DILocation(line: 645, column: 37, scope: !6532)
!6549 = !DILocation(line: 645, column: 43, scope: !6532)
!6550 = !DILocation(line: 645, column: 4, scope: !6532)
!6551 = !DILocation(line: 648, column: 17, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 648, column: 8)
!6553 = !DILocation(line: 648, column: 24, scope: !6552)
!6554 = !DILocation(line: 648, column: 8, scope: !6552)
!6555 = !DILocation(line: 648, column: 33, scope: !6552)
!6556 = !DILocation(line: 648, column: 8, scope: !6532)
!6557 = !DILocalVariable(name: "nor", scope: !6558, file: !3, line: 649, type: !141)
!6558 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 648, column: 38)
!6559 = !DILocation(line: 649, column: 11, scope: !6558)
!6560 = !DILocalVariable(name: "len", scope: !6558, file: !3, line: 650, type: !122)
!6561 = !DILocation(line: 650, column: 11, scope: !6558)
!6562 = !DILocation(line: 652, column: 19, scope: !6558)
!6563 = !DILocation(line: 652, column: 24, scope: !6558)
!6564 = !DILocation(line: 652, column: 31, scope: !6558)
!6565 = !DILocation(line: 652, column: 5, scope: !6558)
!6566 = !DILocation(line: 654, column: 20, scope: !6558)
!6567 = !DILocation(line: 654, column: 25, scope: !6558)
!6568 = !DILocation(line: 654, column: 11, scope: !6558)
!6569 = !DILocation(line: 654, column: 9, scope: !6558)
!6570 = !DILocation(line: 655, column: 9, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 655, column: 9)
!6572 = !DILocation(line: 655, column: 13, scope: !6571)
!6573 = !DILocation(line: 655, column: 9, scope: !6558)
!6574 = !DILocation(line: 656, column: 11, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 655, column: 24)
!6576 = !DILocation(line: 657, column: 5, scope: !6575)
!6577 = !DILocation(line: 658, column: 4, scope: !6558)
!6578 = !DILocation(line: 659, column: 3, scope: !6532)
!6579 = !DILocation(line: 662, column: 7, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 662, column: 7)
!6581 = !DILocation(line: 662, column: 14, scope: !6580)
!6582 = !DILocation(line: 662, column: 20, scope: !6580)
!6583 = !DILocation(line: 662, column: 12, scope: !6580)
!6584 = !DILocation(line: 662, column: 7, scope: !6514)
!6585 = !DILocation(line: 663, column: 4, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 662, column: 26)
!6587 = !DILocation(line: 668, column: 7, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 668, column: 7)
!6589 = !DILocation(line: 668, column: 13, scope: !6588)
!6590 = !DILocation(line: 668, column: 18, scope: !6588)
!6591 = !DILocation(line: 668, column: 21, scope: !6588)
!6592 = !DILocation(line: 668, column: 29, scope: !6588)
!6593 = !DILocation(line: 668, column: 35, scope: !6588)
!6594 = !DILocation(line: 668, column: 26, scope: !6588)
!6595 = !DILocation(line: 668, column: 7, scope: !6514)
!6596 = !DILocalVariable(name: "bone", scope: !6597, file: !3, line: 669, type: !1542)
!6597 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 668, column: 41)
!6598 = !DILocation(line: 669, column: 14, scope: !6597)
!6599 = !DILocation(line: 671, column: 16, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 671, column: 4)
!6601 = !DILocation(line: 671, column: 22, scope: !6600)
!6602 = !DILocation(line: 671, column: 14, scope: !6600)
!6603 = !DILocation(line: 671, column: 9, scope: !6600)
!6604 = !DILocation(line: 671, column: 28, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 671, column: 4)
!6606 = !DILocation(line: 671, column: 4, scope: !6600)
!6607 = !DILocation(line: 673, column: 9, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 673, column: 9)
!6609 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 671, column: 55)
!6610 = !DILocation(line: 673, column: 17, scope: !6608)
!6611 = !DILocation(line: 673, column: 14, scope: !6608)
!6612 = !DILocation(line: 673, column: 9, scope: !6609)
!6613 = !DILocation(line: 674, column: 6, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 673, column: 23)
!6615 = !DILocation(line: 676, column: 4, scope: !6609)
!6616 = !DILocation(line: 671, column: 41, scope: !6605)
!6617 = !DILocation(line: 671, column: 47, scope: !6605)
!6618 = !DILocation(line: 671, column: 39, scope: !6605)
!6619 = !DILocation(line: 671, column: 4, scope: !6605)
!6620 = distinct !{!6620, !6606, !6621}
!6621 = !DILocation(line: 676, column: 4, scope: !6600)
!6622 = !DILocation(line: 679, column: 8, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 679, column: 8)
!6624 = !DILocation(line: 679, column: 13, scope: !6623)
!6625 = !DILocation(line: 679, column: 8, scope: !6597)
!6626 = !DILocation(line: 680, column: 5, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 679, column: 22)
!6628 = !DILocation(line: 682, column: 3, scope: !6597)
!6629 = !DILocation(line: 685, column: 16, scope: !6514)
!6630 = !DILocation(line: 685, column: 3, scope: !6514)
!6631 = !DILocation(line: 685, column: 9, scope: !6514)
!6632 = !DILocation(line: 685, column: 14, scope: !6514)
!6633 = !DILocation(line: 686, column: 16, scope: !6514)
!6634 = !DILocation(line: 686, column: 3, scope: !6514)
!6635 = !DILocation(line: 686, column: 9, scope: !6514)
!6636 = !DILocation(line: 686, column: 14, scope: !6514)
!6637 = !DILocation(line: 688, column: 14, scope: !6514)
!6638 = !DILocation(line: 688, column: 20, scope: !6514)
!6639 = !DILocation(line: 688, column: 28, scope: !6514)
!6640 = !DILocation(line: 688, column: 3, scope: !6514)
!6641 = !DILocation(line: 690, column: 3, scope: !6514)
!6642 = !DILocation(line: 693, column: 2, scope: !6503)
!6643 = !DILocation(line: 694, column: 1, scope: !6503)
!6644 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !281, file: !281, line: 98, type: !6645, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6645 = !DISubroutineType(types: !6646)
!6646 = !{!673, !6647}
!6647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 64)
!6648 = !DILocalVariable(name: "ghi", arg: 1, scope: !6644, file: !281, line: 98, type: !6647)
!6649 = !DILocation(line: 98, column: 57, scope: !6644)
!6650 = !DILocation(line: 98, column: 78, scope: !6644)
!6651 = !DILocation(line: 98, column: 83, scope: !6644)
!6652 = !DILocation(line: 98, column: 77, scope: !6644)
!6653 = !DILocation(line: 98, column: 70, scope: !6644)
!6654 = distinct !DISubprogram(name: "BLI_ghashIterator_getValue", scope: !281, file: !281, line: 96, type: !6655, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6655 = !DISubroutineType(types: !6656)
!6656 = !{!118, !6647}
!6657 = !DILocalVariable(name: "ghi", arg: 1, scope: !6654, file: !281, line: 96, type: !6647)
!6658 = !DILocation(line: 96, column: 61, scope: !6654)
!6659 = !DILocation(line: 96, column: 99, scope: !6654)
!6660 = !DILocation(line: 96, column: 104, scope: !6654)
!6661 = !DILocation(line: 96, column: 115, scope: !6654)
!6662 = !DILocation(line: 96, column: 70, scope: !6654)
!6663 = distinct !DISubprogram(name: "is_zero_v3", scope: !1611, file: !1611, line: 857, type: !6664, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6664 = !DISubroutineType(types: !6665)
!6665 = !{!673, !1614}
!6666 = !DILocalVariable(name: "v", arg: 1, scope: !6663, file: !1611, line: 857, type: !1614)
!6667 = !DILocation(line: 857, column: 37, scope: !6663)
!6668 = !DILocation(line: 859, column: 10, scope: !6663)
!6669 = !DILocation(line: 859, column: 15, scope: !6663)
!6670 = !DILocation(line: 859, column: 23, scope: !6663)
!6671 = !DILocation(line: 859, column: 26, scope: !6663)
!6672 = !DILocation(line: 859, column: 31, scope: !6663)
!6673 = !DILocation(line: 859, column: 39, scope: !6663)
!6674 = !DILocation(line: 859, column: 42, scope: !6663)
!6675 = !DILocation(line: 859, column: 47, scope: !6663)
!6676 = !DILocation(line: 0, scope: !6663)
!6677 = !DILocation(line: 859, column: 9, scope: !6663)
!6678 = !DILocation(line: 859, column: 2, scope: !6663)
!6679 = distinct !DISubprogram(name: "rollBoneByQuatAligned", scope: !3, file: !3, line: 135, type: !6680, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{!122, !1542, !1578, !1578, !1578, !1578}
!6682 = !DILocalVariable(name: "bone", arg: 1, scope: !6679, file: !3, line: 135, type: !1542)
!6683 = !DILocation(line: 135, column: 46, scope: !6679)
!6684 = !DILocalVariable(name: "old_up_axis", arg: 2, scope: !6679, file: !3, line: 135, type: !1578)
!6685 = !DILocation(line: 135, column: 58, scope: !6679)
!6686 = !DILocalVariable(name: "qrot", arg: 3, scope: !6679, file: !3, line: 135, type: !1578)
!6687 = !DILocation(line: 135, column: 80, scope: !6679)
!6688 = !DILocalVariable(name: "qroll", arg: 4, scope: !6679, file: !3, line: 135, type: !1578)
!6689 = !DILocation(line: 135, column: 95, scope: !6679)
!6690 = !DILocalVariable(name: "aligned_axis", arg: 5, scope: !6679, file: !3, line: 135, type: !1578)
!6691 = !DILocation(line: 135, column: 111, scope: !6679)
!6692 = !DILocalVariable(name: "nor", scope: !6679, file: !3, line: 137, type: !141)
!6693 = !DILocation(line: 137, column: 8, scope: !6679)
!6694 = !DILocalVariable(name: "new_up_axis", scope: !6679, file: !3, line: 137, type: !141)
!6695 = !DILocation(line: 137, column: 16, scope: !6679)
!6696 = !DILocalVariable(name: "x_axis", scope: !6679, file: !3, line: 137, type: !141)
!6697 = !DILocation(line: 137, column: 32, scope: !6679)
!6698 = !DILocalVariable(name: "z_axis", scope: !6679, file: !3, line: 137, type: !141)
!6699 = !DILocation(line: 137, column: 43, scope: !6679)
!6700 = !DILocation(line: 139, column: 13, scope: !6679)
!6701 = !DILocation(line: 139, column: 26, scope: !6679)
!6702 = !DILocation(line: 139, column: 2, scope: !6679)
!6703 = !DILocation(line: 140, column: 12, scope: !6679)
!6704 = !DILocation(line: 140, column: 18, scope: !6679)
!6705 = !DILocation(line: 140, column: 2, scope: !6679)
!6706 = !DILocation(line: 142, column: 14, scope: !6679)
!6707 = !DILocation(line: 142, column: 19, scope: !6679)
!6708 = !DILocation(line: 142, column: 25, scope: !6679)
!6709 = !DILocation(line: 142, column: 31, scope: !6679)
!6710 = !DILocation(line: 142, column: 37, scope: !6679)
!6711 = !DILocation(line: 142, column: 2, scope: !6679)
!6712 = !DILocation(line: 144, column: 16, scope: !6679)
!6713 = !DILocation(line: 144, column: 24, scope: !6679)
!6714 = !DILocation(line: 144, column: 29, scope: !6679)
!6715 = !DILocation(line: 144, column: 2, scope: !6679)
!6716 = !DILocation(line: 145, column: 16, scope: !6679)
!6717 = !DILocation(line: 145, column: 24, scope: !6679)
!6718 = !DILocation(line: 145, column: 32, scope: !6679)
!6719 = !DILocation(line: 145, column: 2, scope: !6679)
!6720 = !DILocation(line: 147, column: 15, scope: !6679)
!6721 = !DILocation(line: 147, column: 2, scope: !6679)
!6722 = !DILocation(line: 148, column: 15, scope: !6679)
!6723 = !DILocation(line: 148, column: 2, scope: !6679)
!6724 = !DILocation(line: 149, column: 15, scope: !6679)
!6725 = !DILocation(line: 149, column: 2, scope: !6679)
!6726 = !DILocation(line: 151, column: 15, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 151, column: 6)
!6728 = !DILocation(line: 151, column: 28, scope: !6727)
!6729 = !DILocation(line: 151, column: 6, scope: !6727)
!6730 = !DILocation(line: 151, column: 36, scope: !6727)
!6731 = !DILocation(line: 151, column: 6, scope: !6679)
!6732 = !DILocation(line: 152, column: 13, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 151, column: 41)
!6734 = !DILocation(line: 152, column: 3, scope: !6733)
!6735 = !DILocation(line: 153, column: 2, scope: !6733)
!6736 = !DILocation(line: 155, column: 15, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 155, column: 6)
!6738 = !DILocation(line: 155, column: 28, scope: !6737)
!6739 = !DILocation(line: 155, column: 6, scope: !6737)
!6740 = !DILocation(line: 155, column: 36, scope: !6737)
!6741 = !DILocation(line: 155, column: 6, scope: !6679)
!6742 = !DILocation(line: 156, column: 13, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 155, column: 41)
!6744 = !DILocation(line: 156, column: 3, scope: !6743)
!6745 = !DILocation(line: 157, column: 2, scope: !6743)
!6746 = !DILocation(line: 159, column: 28, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 159, column: 6)
!6748 = !DILocation(line: 159, column: 36, scope: !6747)
!6749 = !DILocation(line: 159, column: 6, scope: !6747)
!6750 = !DILocation(line: 159, column: 73, scope: !6747)
!6751 = !DILocation(line: 159, column: 81, scope: !6747)
!6752 = !DILocation(line: 159, column: 51, scope: !6747)
!6753 = !DILocation(line: 159, column: 49, scope: !6747)
!6754 = !DILocation(line: 159, column: 6, scope: !6679)
!6755 = !DILocation(line: 160, column: 33, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 159, column: 95)
!6757 = !DILocation(line: 160, column: 40, scope: !6756)
!6758 = !DILocation(line: 160, column: 53, scope: !6756)
!6759 = !DILocation(line: 160, column: 3, scope: !6756)
!6760 = !DILocation(line: 161, column: 30, scope: !6756)
!6761 = !DILocation(line: 161, column: 36, scope: !6756)
!6762 = !DILocation(line: 161, column: 10, scope: !6756)
!6763 = !DILocation(line: 161, column: 3, scope: !6756)
!6764 = !DILocation(line: 164, column: 33, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 163, column: 7)
!6766 = !DILocation(line: 164, column: 40, scope: !6765)
!6767 = !DILocation(line: 164, column: 53, scope: !6765)
!6768 = !DILocation(line: 164, column: 3, scope: !6765)
!6769 = !DILocation(line: 165, column: 30, scope: !6765)
!6770 = !DILocation(line: 165, column: 36, scope: !6765)
!6771 = !DILocation(line: 165, column: 10, scope: !6765)
!6772 = !DILocation(line: 165, column: 3, scope: !6765)
!6773 = !DILocation(line: 167, column: 1, scope: !6679)
!6774 = distinct !DISubprogram(name: "rollBoneByQuatJoint", scope: !3, file: !3, line: 169, type: !6775, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6775 = !DISubroutineType(types: !6776)
!6776 = !{!122, !1743, !1743, !1578, !1578, !1578}
!6777 = !DILocalVariable(name: "edge", arg: 1, scope: !6774, file: !3, line: 169, type: !1743)
!6778 = !DILocation(line: 169, column: 43, scope: !6774)
!6779 = !DILocalVariable(name: "previous", arg: 2, scope: !6774, file: !3, line: 169, type: !1743)
!6780 = !DILocation(line: 169, column: 58, scope: !6774)
!6781 = !DILocalVariable(name: "qrot", arg: 3, scope: !6774, file: !3, line: 169, type: !1578)
!6782 = !DILocation(line: 169, column: 74, scope: !6774)
!6783 = !DILocalVariable(name: "qroll", arg: 4, scope: !6774, file: !3, line: 169, type: !1578)
!6784 = !DILocation(line: 169, column: 89, scope: !6774)
!6785 = !DILocalVariable(name: "up_axis", arg: 5, scope: !6774, file: !3, line: 169, type: !1578)
!6786 = !DILocation(line: 169, column: 105, scope: !6774)
!6787 = !DILocation(line: 171, column: 6, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 171, column: 6)
!6789 = !DILocation(line: 171, column: 15, scope: !6788)
!6790 = !DILocation(line: 171, column: 6, scope: !6774)
!6791 = !DILocation(line: 173, column: 32, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 171, column: 24)
!6793 = !DILocation(line: 173, column: 38, scope: !6792)
!6794 = !DILocation(line: 173, column: 44, scope: !6792)
!6795 = !DILocation(line: 173, column: 50, scope: !6792)
!6796 = !DILocation(line: 173, column: 59, scope: !6792)
!6797 = !DILocation(line: 173, column: 65, scope: !6792)
!6798 = !DILocation(line: 173, column: 72, scope: !6792)
!6799 = !DILocation(line: 173, column: 10, scope: !6792)
!6800 = !DILocation(line: 173, column: 3, scope: !6792)
!6801 = !DILocalVariable(name: "new_up_axis", scope: !6802, file: !3, line: 176, type: !141)
!6802 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 175, column: 7)
!6803 = !DILocation(line: 176, column: 9, scope: !6802)
!6804 = !DILocalVariable(name: "vec_first", scope: !6802, file: !3, line: 177, type: !141)
!6805 = !DILocation(line: 177, column: 9, scope: !6802)
!6806 = !DILocalVariable(name: "vec_second", scope: !6802, file: !3, line: 177, type: !141)
!6807 = !DILocation(line: 177, column: 23, scope: !6802)
!6808 = !DILocalVariable(name: "normal", scope: !6802, file: !3, line: 177, type: !141)
!6809 = !DILocation(line: 177, column: 38, scope: !6802)
!6810 = !DILocation(line: 179, column: 7, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 179, column: 7)
!6812 = !DILocation(line: 179, column: 17, scope: !6811)
!6813 = !DILocation(line: 179, column: 7, scope: !6802)
!6814 = !DILocation(line: 180, column: 16, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 179, column: 23)
!6816 = !DILocation(line: 180, column: 27, scope: !6815)
!6817 = !DILocation(line: 180, column: 37, scope: !6815)
!6818 = !DILocation(line: 180, column: 43, scope: !6815)
!6819 = !DILocation(line: 180, column: 49, scope: !6815)
!6820 = !DILocation(line: 180, column: 59, scope: !6815)
!6821 = !DILocation(line: 180, column: 65, scope: !6815)
!6822 = !DILocation(line: 180, column: 4, scope: !6815)
!6823 = !DILocation(line: 181, column: 3, scope: !6815)
!6824 = !DILocation(line: 182, column: 12, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 182, column: 12)
!6826 = !DILocation(line: 182, column: 22, scope: !6825)
!6827 = !DILocation(line: 182, column: 28, scope: !6825)
!6828 = !DILocation(line: 182, column: 12, scope: !6811)
!6829 = !DILocation(line: 183, column: 16, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 182, column: 34)
!6831 = !DILocation(line: 183, column: 27, scope: !6830)
!6832 = !DILocation(line: 183, column: 33, scope: !6830)
!6833 = !DILocation(line: 183, column: 39, scope: !6830)
!6834 = !DILocation(line: 183, column: 45, scope: !6830)
!6835 = !DILocation(line: 183, column: 55, scope: !6830)
!6836 = !DILocation(line: 183, column: 61, scope: !6830)
!6837 = !DILocation(line: 183, column: 67, scope: !6830)
!6838 = !DILocation(line: 183, column: 4, scope: !6830)
!6839 = !DILocation(line: 184, column: 3, scope: !6830)
!6840 = !DILocation(line: 187, column: 33, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 185, column: 8)
!6842 = !DILocation(line: 187, column: 39, scope: !6841)
!6843 = !DILocation(line: 187, column: 45, scope: !6841)
!6844 = !DILocation(line: 187, column: 51, scope: !6841)
!6845 = !DILocation(line: 187, column: 60, scope: !6841)
!6846 = !DILocation(line: 187, column: 66, scope: !6841)
!6847 = !DILocation(line: 187, column: 73, scope: !6841)
!6848 = !DILocation(line: 187, column: 11, scope: !6841)
!6849 = !DILocation(line: 187, column: 4, scope: !6841)
!6850 = !DILocation(line: 190, column: 15, scope: !6802)
!6851 = !DILocation(line: 190, column: 27, scope: !6802)
!6852 = !DILocation(line: 190, column: 33, scope: !6802)
!6853 = !DILocation(line: 190, column: 39, scope: !6802)
!6854 = !DILocation(line: 190, column: 45, scope: !6802)
!6855 = !DILocation(line: 190, column: 51, scope: !6802)
!6856 = !DILocation(line: 190, column: 57, scope: !6802)
!6857 = !DILocation(line: 190, column: 3, scope: !6802)
!6858 = !DILocation(line: 192, column: 16, scope: !6802)
!6859 = !DILocation(line: 192, column: 3, scope: !6802)
!6860 = !DILocation(line: 193, column: 16, scope: !6802)
!6861 = !DILocation(line: 193, column: 3, scope: !6802)
!6862 = !DILocation(line: 195, column: 17, scope: !6802)
!6863 = !DILocation(line: 195, column: 25, scope: !6802)
!6864 = !DILocation(line: 195, column: 36, scope: !6802)
!6865 = !DILocation(line: 195, column: 3, scope: !6802)
!6866 = !DILocation(line: 196, column: 16, scope: !6802)
!6867 = !DILocation(line: 196, column: 3, scope: !6802)
!6868 = !DILocation(line: 198, column: 22, scope: !6802)
!6869 = !DILocation(line: 198, column: 29, scope: !6802)
!6870 = !DILocation(line: 198, column: 41, scope: !6802)
!6871 = !DILocation(line: 198, column: 47, scope: !6802)
!6872 = !DILocation(line: 198, column: 3, scope: !6802)
!6873 = !DILocation(line: 200, column: 13, scope: !6802)
!6874 = !DILocation(line: 200, column: 20, scope: !6802)
!6875 = !DILocation(line: 200, column: 3, scope: !6802)
!6876 = !DILocation(line: 202, column: 14, scope: !6802)
!6877 = !DILocation(line: 202, column: 27, scope: !6802)
!6878 = !DILocation(line: 202, column: 33, scope: !6802)
!6879 = !DILocation(line: 202, column: 3, scope: !6802)
!6880 = !DILocation(line: 203, column: 13, scope: !6802)
!6881 = !DILocation(line: 203, column: 19, scope: !6802)
!6882 = !DILocation(line: 203, column: 3, scope: !6802)
!6883 = !DILocation(line: 205, column: 16, scope: !6802)
!6884 = !DILocation(line: 205, column: 3, scope: !6802)
!6885 = !DILocation(line: 208, column: 33, scope: !6802)
!6886 = !DILocation(line: 208, column: 40, scope: !6802)
!6887 = !DILocation(line: 208, column: 53, scope: !6802)
!6888 = !DILocation(line: 208, column: 3, scope: !6802)
!6889 = !DILocation(line: 210, column: 30, scope: !6802)
!6890 = !DILocation(line: 210, column: 36, scope: !6802)
!6891 = !DILocation(line: 210, column: 42, scope: !6802)
!6892 = !DILocation(line: 210, column: 10, scope: !6802)
!6893 = !DILocation(line: 210, column: 3, scope: !6802)
!6894 = !DILocation(line: 212, column: 1, scope: !6774)
!6895 = distinct !DISubprogram(name: "repositionControl", scope: !3, file: !3, line: 1579, type: !6896, scopeLine: 1580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{null, !108, !1908, !1578, !1578, !1578, !122}
!6898 = !DILocalVariable(name: "rigg", arg: 1, scope: !6895, file: !3, line: 1579, type: !108)
!6899 = !DILocation(line: 1579, column: 41, scope: !6895)
!6900 = !DILocalVariable(name: "ctrl", arg: 2, scope: !6895, file: !3, line: 1579, type: !1908)
!6901 = !DILocation(line: 1579, column: 59, scope: !6895)
!6902 = !DILocalVariable(name: "head", arg: 3, scope: !6895, file: !3, line: 1579, type: !1578)
!6903 = !DILocation(line: 1579, column: 71, scope: !6895)
!6904 = !DILocalVariable(name: "UNUSED_tail", arg: 4, scope: !6895, file: !3, line: 1579, type: !1578)
!6905 = !DILocation(line: 1579, column: 86, scope: !6895)
!6906 = !DILocalVariable(name: "qrot", arg: 5, scope: !6895, file: !3, line: 1579, type: !1578)
!6907 = !DILocation(line: 1579, column: 109, scope: !6895)
!6908 = !DILocalVariable(name: "resize", arg: 6, scope: !6895, file: !3, line: 1579, type: !122)
!6909 = !DILocation(line: 1579, column: 124, scope: !6895)
!6910 = !DILocalVariable(name: "parent_offset", scope: !6895, file: !3, line: 1581, type: !141)
!6911 = !DILocation(line: 1581, column: 8, scope: !6895)
!6912 = !DILocalVariable(name: "tail_offset", scope: !6895, file: !3, line: 1581, type: !141)
!6913 = !DILocation(line: 1581, column: 26, scope: !6895)
!6914 = !DILocation(line: 1583, column: 13, scope: !6895)
!6915 = !DILocation(line: 1583, column: 28, scope: !6895)
!6916 = !DILocation(line: 1583, column: 34, scope: !6895)
!6917 = !DILocation(line: 1583, column: 2, scope: !6895)
!6918 = !DILocation(line: 1584, column: 12, scope: !6895)
!6919 = !DILocation(line: 1584, column: 27, scope: !6895)
!6920 = !DILocation(line: 1584, column: 2, scope: !6895)
!6921 = !DILocation(line: 1585, column: 12, scope: !6895)
!6922 = !DILocation(line: 1585, column: 18, scope: !6895)
!6923 = !DILocation(line: 1585, column: 2, scope: !6895)
!6924 = !DILocation(line: 1587, column: 14, scope: !6895)
!6925 = !DILocation(line: 1587, column: 20, scope: !6895)
!6926 = !DILocation(line: 1587, column: 26, scope: !6895)
!6927 = !DILocation(line: 1587, column: 32, scope: !6895)
!6928 = !DILocation(line: 1587, column: 38, scope: !6895)
!6929 = !DILocation(line: 1587, column: 2, scope: !6895)
!6930 = !DILocation(line: 1589, column: 2, scope: !6895)
!6931 = !DILocation(line: 1589, column: 8, scope: !6895)
!6932 = !DILocation(line: 1589, column: 13, scope: !6895)
!6933 = !DILocation(line: 1591, column: 13, scope: !6895)
!6934 = !DILocation(line: 1591, column: 19, scope: !6895)
!6935 = !DILocation(line: 1591, column: 25, scope: !6895)
!6936 = !DILocation(line: 1591, column: 2, scope: !6895)
!6937 = !DILocation(line: 1593, column: 6, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 1593, column: 6)
!6939 = !DILocation(line: 1593, column: 12, scope: !6938)
!6940 = !DILocation(line: 1593, column: 22, scope: !6938)
!6941 = !DILocation(line: 1593, column: 6, scope: !6895)
!6942 = !DILocation(line: 1594, column: 15, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6938, file: !3, line: 1593, column: 34)
!6944 = !DILocation(line: 1594, column: 28, scope: !6943)
!6945 = !DILocation(line: 1594, column: 34, scope: !6943)
!6946 = !DILocation(line: 1594, column: 40, scope: !6943)
!6947 = !DILocation(line: 1594, column: 46, scope: !6943)
!6948 = !DILocation(line: 1594, column: 3, scope: !6943)
!6949 = !DILocation(line: 1595, column: 13, scope: !6943)
!6950 = !DILocation(line: 1595, column: 26, scope: !6943)
!6951 = !DILocation(line: 1595, column: 3, scope: !6943)
!6952 = !DILocation(line: 1596, column: 13, scope: !6943)
!6953 = !DILocation(line: 1596, column: 19, scope: !6943)
!6954 = !DILocation(line: 1596, column: 3, scope: !6943)
!6955 = !DILocation(line: 1598, column: 15, scope: !6943)
!6956 = !DILocation(line: 1598, column: 21, scope: !6943)
!6957 = !DILocation(line: 1598, column: 27, scope: !6943)
!6958 = !DILocation(line: 1598, column: 33, scope: !6943)
!6959 = !DILocation(line: 1598, column: 39, scope: !6943)
!6960 = !DILocation(line: 1598, column: 45, scope: !6943)
!6961 = !DILocation(line: 1598, column: 51, scope: !6943)
!6962 = !DILocation(line: 1598, column: 3, scope: !6943)
!6963 = !DILocation(line: 1600, column: 3, scope: !6943)
!6964 = !DILocation(line: 1600, column: 9, scope: !6943)
!6965 = !DILocation(line: 1600, column: 14, scope: !6943)
!6966 = !DILocation(line: 1601, column: 2, scope: !6943)
!6967 = !DILocation(line: 1603, column: 18, scope: !6895)
!6968 = !DILocation(line: 1603, column: 24, scope: !6895)
!6969 = !DILocation(line: 1603, column: 30, scope: !6895)
!6970 = !DILocation(line: 1603, column: 2, scope: !6895)
!6971 = !DILocation(line: 1604, column: 1, scope: !6895)
!6972 = distinct !DISubprogram(name: "repositionTailControl", scope: !3, file: !3, line: 1572, type: !6973, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{null, !108, !1908}
!6975 = !DILocalVariable(name: "rigg", arg: 1, scope: !6972, file: !3, line: 1572, type: !108)
!6976 = !DILocation(line: 1572, column: 45, scope: !6972)
!6977 = !DILocalVariable(name: "ctrl", arg: 2, scope: !6972, file: !3, line: 1572, type: !1908)
!6978 = !DILocation(line: 1572, column: 63, scope: !6972)
!6979 = !DILocation(line: 1574, column: 2, scope: !6972)
!6980 = !DILocation(line: 1574, column: 8, scope: !6972)
!6981 = !DILocation(line: 1574, column: 13, scope: !6972)
!6982 = !DILocation(line: 1576, column: 18, scope: !6972)
!6983 = !DILocation(line: 1576, column: 24, scope: !6972)
!6984 = !DILocation(line: 1576, column: 2, scope: !6972)
!6985 = !DILocation(line: 1577, column: 1, scope: !6972)
!6986 = distinct !DISubprogram(name: "negate_v3", scope: !1611, file: !1611, line: 576, type: !6368, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!6987 = !DILocalVariable(name: "r", arg: 1, scope: !6986, file: !1611, line: 576, type: !1578)
!6988 = !DILocation(line: 576, column: 30, scope: !6986)
!6989 = !DILocation(line: 578, column: 10, scope: !6986)
!6990 = !DILocation(line: 578, column: 9, scope: !6986)
!6991 = !DILocation(line: 578, column: 2, scope: !6986)
!6992 = !DILocation(line: 578, column: 7, scope: !6986)
!6993 = !DILocation(line: 579, column: 10, scope: !6986)
!6994 = !DILocation(line: 579, column: 9, scope: !6986)
!6995 = !DILocation(line: 579, column: 2, scope: !6986)
!6996 = !DILocation(line: 579, column: 7, scope: !6986)
!6997 = !DILocation(line: 580, column: 10, scope: !6986)
!6998 = !DILocation(line: 580, column: 9, scope: !6986)
!6999 = !DILocation(line: 580, column: 2, scope: !6986)
!7000 = !DILocation(line: 580, column: 7, scope: !6986)
!7001 = !DILocation(line: 581, column: 1, scope: !6986)
!7002 = distinct !DISubprogram(name: "mul_v3_fl", scope: !1611, file: !1611, line: 392, type: !7003, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{null, !1578, !122}
!7005 = !DILocalVariable(name: "r", arg: 1, scope: !7002, file: !1611, line: 392, type: !1578)
!7006 = !DILocation(line: 392, column: 30, scope: !7002)
!7007 = !DILocalVariable(name: "f", arg: 2, scope: !7002, file: !1611, line: 392, type: !122)
!7008 = !DILocation(line: 392, column: 42, scope: !7002)
!7009 = !DILocation(line: 394, column: 10, scope: !7002)
!7010 = !DILocation(line: 394, column: 2, scope: !7002)
!7011 = !DILocation(line: 394, column: 7, scope: !7002)
!7012 = !DILocation(line: 395, column: 10, scope: !7002)
!7013 = !DILocation(line: 395, column: 2, scope: !7002)
!7014 = !DILocation(line: 395, column: 7, scope: !7002)
!7015 = !DILocation(line: 396, column: 10, scope: !7002)
!7016 = !DILocation(line: 396, column: 2, scope: !7002)
!7017 = !DILocation(line: 396, column: 7, scope: !7002)
!7018 = !DILocation(line: 397, column: 1, scope: !7002)
!7019 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !1611, file: !1611, line: 309, type: !6153, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7020 = !DILocalVariable(name: "r", arg: 1, scope: !7019, file: !1611, line: 309, type: !1578)
!7021 = !DILocation(line: 309, column: 32, scope: !7019)
!7022 = !DILocalVariable(name: "a", arg: 2, scope: !7019, file: !1611, line: 309, type: !1614)
!7023 = !DILocation(line: 309, column: 50, scope: !7019)
!7024 = !DILocalVariable(name: "b", arg: 3, scope: !7019, file: !1611, line: 309, type: !1614)
!7025 = !DILocation(line: 309, column: 68, scope: !7019)
!7026 = !DILocation(line: 311, column: 9, scope: !7019)
!7027 = !DILocation(line: 311, column: 16, scope: !7019)
!7028 = !DILocation(line: 311, column: 14, scope: !7019)
!7029 = !DILocation(line: 311, column: 2, scope: !7019)
!7030 = !DILocation(line: 311, column: 7, scope: !7019)
!7031 = !DILocation(line: 312, column: 9, scope: !7019)
!7032 = !DILocation(line: 312, column: 16, scope: !7019)
!7033 = !DILocation(line: 312, column: 14, scope: !7019)
!7034 = !DILocation(line: 312, column: 2, scope: !7019)
!7035 = !DILocation(line: 312, column: 7, scope: !7019)
!7036 = !DILocation(line: 313, column: 9, scope: !7019)
!7037 = !DILocation(line: 313, column: 16, scope: !7019)
!7038 = !DILocation(line: 313, column: 14, scope: !7019)
!7039 = !DILocation(line: 313, column: 2, scope: !7019)
!7040 = !DILocation(line: 313, column: 7, scope: !7019)
!7041 = !DILocation(line: 314, column: 1, scope: !7019)
!7042 = distinct !DISubprogram(name: "finalizeControl", scope: !3, file: !3, line: 1519, type: !7043, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{null, !108, !1908, !122}
!7045 = !DILocalVariable(name: "rigg", arg: 1, scope: !7042, file: !3, line: 1519, type: !108)
!7046 = !DILocation(line: 1519, column: 39, scope: !7042)
!7047 = !DILocalVariable(name: "ctrl", arg: 2, scope: !7042, file: !3, line: 1519, type: !1908)
!7048 = !DILocation(line: 1519, column: 57, scope: !7042)
!7049 = !DILocalVariable(name: "resize", arg: 3, scope: !7042, file: !3, line: 1519, type: !122)
!7050 = !DILocation(line: 1519, column: 69, scope: !7042)
!7051 = !DILocation(line: 1521, column: 7, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 1521, column: 6)
!7053 = !DILocation(line: 1521, column: 13, scope: !7052)
!7054 = !DILocation(line: 1521, column: 18, scope: !7052)
!7055 = !DILocation(line: 1521, column: 35, scope: !7052)
!7056 = !DILocation(line: 1521, column: 6, scope: !7042)
!7057 = !DILocalVariable(name: "ctrl_child", scope: !7058, file: !3, line: 1522, type: !1908)
!7058 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 1521, column: 53)
!7059 = !DILocation(line: 1522, column: 15, scope: !7058)
!7060 = !DILocation(line: 1536, column: 7, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 1536, column: 7)
!7062 = !DILocation(line: 1536, column: 13, scope: !7061)
!7063 = !DILocation(line: 1536, column: 23, scope: !7061)
!7064 = !DILocation(line: 1536, column: 7, scope: !7058)
!7065 = !DILocalVariable(name: "tail_vec", scope: !7066, file: !3, line: 1537, type: !1578)
!7066 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 1536, column: 35)
!7067 = !DILocation(line: 1537, column: 11, scope: !7066)
!7068 = !DILocalVariable(name: "v1", scope: !7066, file: !3, line: 1538, type: !141)
!7069 = !DILocation(line: 1538, column: 10, scope: !7066)
!7070 = !DILocalVariable(name: "v2", scope: !7066, file: !3, line: 1538, type: !141)
!7071 = !DILocation(line: 1538, column: 17, scope: !7066)
!7072 = !DILocalVariable(name: "qtail", scope: !7066, file: !3, line: 1538, type: !479)
!7073 = !DILocation(line: 1538, column: 24, scope: !7066)
!7074 = !DILocation(line: 1540, column: 8, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 1540, column: 8)
!7076 = !DILocation(line: 1540, column: 14, scope: !7075)
!7077 = !DILocation(line: 1540, column: 24, scope: !7075)
!7078 = !DILocation(line: 1540, column: 8, scope: !7066)
!7079 = !DILocation(line: 1541, column: 16, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 1540, column: 36)
!7081 = !DILocation(line: 1541, column: 22, scope: !7080)
!7082 = !DILocation(line: 1541, column: 33, scope: !7080)
!7083 = !DILocation(line: 1541, column: 14, scope: !7080)
!7084 = !DILocation(line: 1542, column: 4, scope: !7080)
!7085 = !DILocation(line: 1543, column: 13, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 1543, column: 13)
!7087 = !DILocation(line: 1543, column: 19, scope: !7086)
!7088 = !DILocation(line: 1543, column: 29, scope: !7086)
!7089 = !DILocation(line: 1543, column: 13, scope: !7075)
!7090 = !DILocation(line: 1544, column: 16, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1543, column: 41)
!7092 = !DILocation(line: 1544, column: 22, scope: !7091)
!7093 = !DILocation(line: 1544, column: 33, scope: !7091)
!7094 = !DILocation(line: 1544, column: 14, scope: !7091)
!7095 = !DILocation(line: 1545, column: 4, scope: !7091)
!7096 = !DILocation(line: 1547, column: 16, scope: !7066)
!7097 = !DILocation(line: 1547, column: 20, scope: !7066)
!7098 = !DILocation(line: 1547, column: 26, scope: !7066)
!7099 = !DILocation(line: 1547, column: 32, scope: !7066)
!7100 = !DILocation(line: 1547, column: 38, scope: !7066)
!7101 = !DILocation(line: 1547, column: 44, scope: !7066)
!7102 = !DILocation(line: 1547, column: 50, scope: !7066)
!7103 = !DILocation(line: 1547, column: 4, scope: !7066)
!7104 = !DILocation(line: 1548, column: 16, scope: !7066)
!7105 = !DILocation(line: 1548, column: 20, scope: !7066)
!7106 = !DILocation(line: 1548, column: 30, scope: !7066)
!7107 = !DILocation(line: 1548, column: 36, scope: !7066)
!7108 = !DILocation(line: 1548, column: 42, scope: !7066)
!7109 = !DILocation(line: 1548, column: 4, scope: !7066)
!7110 = !DILocation(line: 1550, column: 15, scope: !7066)
!7111 = !DILocation(line: 1550, column: 21, scope: !7066)
!7112 = !DILocation(line: 1550, column: 27, scope: !7066)
!7113 = !DILocation(line: 1550, column: 33, scope: !7066)
!7114 = !DILocation(line: 1550, column: 4, scope: !7066)
!7115 = !DILocation(line: 1552, column: 34, scope: !7066)
!7116 = !DILocation(line: 1552, column: 41, scope: !7066)
!7117 = !DILocation(line: 1552, column: 45, scope: !7066)
!7118 = !DILocation(line: 1552, column: 4, scope: !7066)
!7119 = !DILocation(line: 1553, column: 16, scope: !7066)
!7120 = !DILocation(line: 1553, column: 22, scope: !7066)
!7121 = !DILocation(line: 1553, column: 28, scope: !7066)
!7122 = !DILocation(line: 1553, column: 35, scope: !7066)
!7123 = !DILocation(line: 1553, column: 41, scope: !7066)
!7124 = !DILocation(line: 1553, column: 4, scope: !7066)
!7125 = !DILocation(line: 1555, column: 20, scope: !7066)
!7126 = !DILocation(line: 1555, column: 13, scope: !7066)
!7127 = !DILocation(line: 1555, column: 35, scope: !7066)
!7128 = !DILocation(line: 1555, column: 41, scope: !7066)
!7129 = !DILocation(line: 1555, column: 47, scope: !7066)
!7130 = !DILocation(line: 1555, column: 53, scope: !7066)
!7131 = !DILocation(line: 1555, column: 26, scope: !7066)
!7132 = !DILocation(line: 1555, column: 24, scope: !7066)
!7133 = !DILocation(line: 1555, column: 11, scope: !7066)
!7134 = !DILocation(line: 1556, column: 3, scope: !7066)
!7135 = !DILocation(line: 1558, column: 37, scope: !7058)
!7136 = !DILocation(line: 1558, column: 43, scope: !7058)
!7137 = !DILocation(line: 1558, column: 49, scope: !7058)
!7138 = !DILocation(line: 1558, column: 55, scope: !7058)
!7139 = !DILocation(line: 1558, column: 64, scope: !7058)
!7140 = !DILocation(line: 1558, column: 70, scope: !7058)
!7141 = !DILocation(line: 1558, column: 22, scope: !7058)
!7142 = !DILocation(line: 1558, column: 3, scope: !7058)
!7143 = !DILocation(line: 1558, column: 9, scope: !7058)
!7144 = !DILocation(line: 1558, column: 15, scope: !7058)
!7145 = !DILocation(line: 1558, column: 20, scope: !7058)
!7146 = !DILocation(line: 1561, column: 21, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 1561, column: 3)
!7148 = !DILocation(line: 1561, column: 27, scope: !7147)
!7149 = !DILocation(line: 1561, column: 36, scope: !7147)
!7150 = !DILocation(line: 1561, column: 19, scope: !7147)
!7151 = !DILocation(line: 1561, column: 8, scope: !7147)
!7152 = !DILocation(line: 1561, column: 43, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 1561, column: 3)
!7154 = !DILocation(line: 1561, column: 3, scope: !7147)
!7155 = !DILocation(line: 1562, column: 8, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1562, column: 8)
!7157 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1561, column: 86)
!7158 = !DILocation(line: 1562, column: 20, scope: !7156)
!7159 = !DILocation(line: 1562, column: 28, scope: !7156)
!7160 = !DILocation(line: 1562, column: 34, scope: !7156)
!7161 = !DILocation(line: 1562, column: 25, scope: !7156)
!7162 = !DILocation(line: 1562, column: 8, scope: !7157)
!7163 = !DILocation(line: 1563, column: 23, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 1562, column: 40)
!7165 = !DILocation(line: 1563, column: 29, scope: !7164)
!7166 = !DILocation(line: 1563, column: 41, scope: !7164)
!7167 = !DILocation(line: 1563, column: 47, scope: !7164)
!7168 = !DILocation(line: 1563, column: 53, scope: !7164)
!7169 = !DILocation(line: 1563, column: 59, scope: !7164)
!7170 = !DILocation(line: 1563, column: 65, scope: !7164)
!7171 = !DILocation(line: 1563, column: 71, scope: !7164)
!7172 = !DILocation(line: 1563, column: 77, scope: !7164)
!7173 = !DILocation(line: 1563, column: 83, scope: !7164)
!7174 = !DILocation(line: 1563, column: 89, scope: !7164)
!7175 = !DILocation(line: 1563, column: 5, scope: !7164)
!7176 = !DILocation(line: 1564, column: 4, scope: !7164)
!7177 = !DILocation(line: 1565, column: 8, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1565, column: 8)
!7179 = !DILocation(line: 1565, column: 20, scope: !7178)
!7180 = !DILocation(line: 1565, column: 33, scope: !7178)
!7181 = !DILocation(line: 1565, column: 39, scope: !7178)
!7182 = !DILocation(line: 1565, column: 30, scope: !7178)
!7183 = !DILocation(line: 1565, column: 8, scope: !7157)
!7184 = !DILocation(line: 1566, column: 27, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1565, column: 45)
!7186 = !DILocation(line: 1566, column: 33, scope: !7185)
!7187 = !DILocation(line: 1566, column: 5, scope: !7185)
!7188 = !DILocation(line: 1567, column: 4, scope: !7185)
!7189 = !DILocation(line: 1568, column: 3, scope: !7157)
!7190 = !DILocation(line: 1561, column: 68, scope: !7153)
!7191 = !DILocation(line: 1561, column: 80, scope: !7153)
!7192 = !DILocation(line: 1561, column: 66, scope: !7153)
!7193 = !DILocation(line: 1561, column: 3, scope: !7153)
!7194 = distinct !{!7194, !7154, !7195}
!7195 = !DILocation(line: 1568, column: 3, scope: !7147)
!7196 = !DILocation(line: 1569, column: 2, scope: !7058)
!7197 = !DILocation(line: 1570, column: 1, scope: !7042)
!7198 = distinct !DISubprogram(name: "solveJoints", scope: !3, file: !3, line: 1865, type: !7199, scopeLine: 1868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{!4488, !4488, !1550, !4499, !145, !145, !145, !145, !1743, !145, !122, !122, !122}
!7201 = !DILocalVariable(name: "table", arg: 1, scope: !7198, file: !3, line: 1865, type: !4488)
!7202 = !DILocation(line: 1865, column: 40, scope: !7198)
!7203 = !DILocalVariable(name: "iter", arg: 2, scope: !7198, file: !3, line: 1865, type: !1550)
!7204 = !DILocation(line: 1865, column: 61, scope: !7198)
!7205 = !DILocalVariable(name: "vec_cache", arg: 3, scope: !7198, file: !3, line: 1865, type: !4499)
!7206 = !DILocation(line: 1865, column: 75, scope: !7198)
!7207 = !DILocalVariable(name: "nb_joints", arg: 4, scope: !7198, file: !3, line: 1866, type: !145)
!7208 = !DILocation(line: 1866, column: 34, scope: !7198)
!7209 = !DILocalVariable(name: "nb_positions", arg: 5, scope: !7198, file: !3, line: 1866, type: !145)
!7210 = !DILocation(line: 1866, column: 49, scope: !7198)
!7211 = !DILocalVariable(name: "previous", arg: 6, scope: !7198, file: !3, line: 1866, type: !145)
!7212 = !DILocation(line: 1866, column: 67, scope: !7198)
!7213 = !DILocalVariable(name: "current", arg: 7, scope: !7198, file: !3, line: 1866, type: !145)
!7214 = !DILocation(line: 1866, column: 81, scope: !7198)
!7215 = !DILocalVariable(name: "edge", arg: 8, scope: !7198, file: !3, line: 1866, type: !1743)
!7216 = !DILocation(line: 1866, column: 99, scope: !7198)
!7217 = !DILocalVariable(name: "joints_left", arg: 9, scope: !7198, file: !3, line: 1867, type: !145)
!7218 = !DILocation(line: 1867, column: 34, scope: !7198)
!7219 = !DILocalVariable(name: "angle_weight", arg: 10, scope: !7198, file: !3, line: 1867, type: !122)
!7220 = !DILocation(line: 1867, column: 53, scope: !7198)
!7221 = !DILocalVariable(name: "length_weight", arg: 11, scope: !7198, file: !3, line: 1867, type: !122)
!7222 = !DILocation(line: 1867, column: 73, scope: !7198)
!7223 = !DILocalVariable(name: "distance_weight", arg: 12, scope: !7198, file: !3, line: 1867, type: !122)
!7224 = !DILocation(line: 1867, column: 94, scope: !7198)
!7225 = !DILocalVariable(name: "node", scope: !7198, file: !3, line: 1869, type: !4488)
!7226 = !DILocation(line: 1869, column: 12, scope: !7198)
!7227 = !DILocalVariable(name: "index", scope: !7198, file: !3, line: 1870, type: !145)
!7228 = !DILocation(line: 1870, column: 6, scope: !7198)
!7229 = !DILocation(line: 1870, column: 28, scope: !7198)
!7230 = !DILocation(line: 1870, column: 42, scope: !7198)
!7231 = !DILocation(line: 1870, column: 52, scope: !7198)
!7232 = !DILocation(line: 1870, column: 61, scope: !7198)
!7233 = !DILocation(line: 1870, column: 14, scope: !7198)
!7234 = !DILocation(line: 1872, column: 9, scope: !7198)
!7235 = !DILocation(line: 1872, column: 17, scope: !7198)
!7236 = !DILocation(line: 1872, column: 15, scope: !7198)
!7237 = !DILocation(line: 1872, column: 7, scope: !7198)
!7238 = !DILocation(line: 1874, column: 6, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 1874, column: 6)
!7240 = !DILocation(line: 1874, column: 12, scope: !7239)
!7241 = !DILocation(line: 1874, column: 19, scope: !7239)
!7242 = !DILocation(line: 1874, column: 6, scope: !7198)
!7243 = !DILocation(line: 1875, column: 10, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1874, column: 25)
!7245 = !DILocation(line: 1875, column: 3, scope: !7244)
!7246 = !DILocation(line: 1877, column: 11, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1877, column: 11)
!7248 = !DILocation(line: 1877, column: 23, scope: !7247)
!7249 = !DILocation(line: 1877, column: 11, scope: !7239)
!7250 = !DILocalVariable(name: "vec0", scope: !7251, file: !3, line: 1878, type: !1578)
!7251 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 1877, column: 29)
!7252 = !DILocation(line: 1878, column: 10, scope: !7251)
!7253 = !DILocation(line: 1878, column: 17, scope: !7251)
!7254 = !DILocation(line: 1878, column: 27, scope: !7251)
!7255 = !DILocalVariable(name: "vec1", scope: !7251, file: !3, line: 1879, type: !1578)
!7256 = !DILocation(line: 1879, column: 10, scope: !7251)
!7257 = !DILocation(line: 1879, column: 17, scope: !7251)
!7258 = !DILocation(line: 1879, column: 27, scope: !7251)
!7259 = !DILocalVariable(name: "vec2", scope: !7251, file: !3, line: 1880, type: !1578)
!7260 = !DILocation(line: 1880, column: 10, scope: !7251)
!7261 = !DILocation(line: 1880, column: 17, scope: !7251)
!7262 = !DILocation(line: 1880, column: 27, scope: !7251)
!7263 = !DILocation(line: 1880, column: 40, scope: !7251)
!7264 = !DILocation(line: 1882, column: 46, scope: !7251)
!7265 = !DILocation(line: 1882, column: 52, scope: !7251)
!7266 = !DILocation(line: 1882, column: 63, scope: !7251)
!7267 = !DILocation(line: 1882, column: 69, scope: !7251)
!7268 = !DILocation(line: 1882, column: 75, scope: !7251)
!7269 = !DILocation(line: 1882, column: 81, scope: !7251)
!7270 = !DILocation(line: 1882, column: 87, scope: !7251)
!7271 = !DILocation(line: 1882, column: 96, scope: !7251)
!7272 = !DILocation(line: 1882, column: 102, scope: !7251)
!7273 = !DILocation(line: 1882, column: 110, scope: !7251)
!7274 = !DILocation(line: 1882, column: 124, scope: !7251)
!7275 = !DILocation(line: 1882, column: 139, scope: !7251)
!7276 = !DILocation(line: 1882, column: 18, scope: !7251)
!7277 = !DILocation(line: 1882, column: 3, scope: !7251)
!7278 = !DILocation(line: 1882, column: 9, scope: !7251)
!7279 = !DILocation(line: 1882, column: 16, scope: !7251)
!7280 = !DILocation(line: 1884, column: 10, scope: !7251)
!7281 = !DILocation(line: 1884, column: 3, scope: !7251)
!7282 = !DILocalVariable(name: "min_node", scope: !7283, file: !3, line: 1887, type: !4488)
!7283 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 1886, column: 7)
!7284 = !DILocation(line: 1887, column: 13, scope: !7283)
!7285 = !DILocalVariable(name: "vec0", scope: !7283, file: !3, line: 1888, type: !1578)
!7286 = !DILocation(line: 1888, column: 10, scope: !7283)
!7287 = !DILocation(line: 1888, column: 17, scope: !7283)
!7288 = !DILocation(line: 1888, column: 27, scope: !7283)
!7289 = !DILocalVariable(name: "vec1", scope: !7283, file: !3, line: 1889, type: !1578)
!7290 = !DILocation(line: 1889, column: 10, scope: !7283)
!7291 = !DILocation(line: 1889, column: 17, scope: !7283)
!7292 = !DILocation(line: 1889, column: 27, scope: !7283)
!7293 = !DILocalVariable(name: "min_weight", scope: !7283, file: !3, line: 1890, type: !122)
!7294 = !DILocation(line: 1890, column: 9, scope: !7283)
!7295 = !DILocalVariable(name: "min_next", scope: !7283, file: !3, line: 1891, type: !145)
!7296 = !DILocation(line: 1891, column: 7, scope: !7283)
!7297 = !DILocalVariable(name: "next", scope: !7283, file: !3, line: 1892, type: !145)
!7298 = !DILocation(line: 1892, column: 7, scope: !7283)
!7299 = !DILocation(line: 1894, column: 15, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 1894, column: 3)
!7301 = !DILocation(line: 1894, column: 23, scope: !7300)
!7302 = !DILocation(line: 1894, column: 13, scope: !7300)
!7303 = !DILocation(line: 1894, column: 8, scope: !7300)
!7304 = !DILocation(line: 1894, column: 28, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 1894, column: 3)
!7306 = !DILocation(line: 1894, column: 36, scope: !7305)
!7307 = !DILocation(line: 1894, column: 52, scope: !7305)
!7308 = !DILocation(line: 1894, column: 64, scope: !7305)
!7309 = !DILocation(line: 1894, column: 49, scope: !7305)
!7310 = !DILocation(line: 1894, column: 33, scope: !7305)
!7311 = !DILocation(line: 1894, column: 3, scope: !7300)
!7312 = !DILocalVariable(name: "next_node", scope: !7313, file: !3, line: 1895, type: !4488)
!7313 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 1894, column: 78)
!7314 = !DILocation(line: 1895, column: 14, scope: !7313)
!7315 = !DILocalVariable(name: "vec2", scope: !7313, file: !3, line: 1896, type: !1578)
!7316 = !DILocation(line: 1896, column: 11, scope: !7313)
!7317 = !DILocation(line: 1896, column: 18, scope: !7313)
!7318 = !DILocation(line: 1896, column: 28, scope: !7313)
!7319 = !DILocalVariable(name: "weight", scope: !7313, file: !3, line: 1897, type: !122)
!7320 = !DILocation(line: 1897, column: 10, scope: !7313)
!7321 = !DILocation(line: 1900, column: 41, scope: !7313)
!7322 = !DILocation(line: 1900, column: 47, scope: !7313)
!7323 = !DILocation(line: 1900, column: 58, scope: !7313)
!7324 = !DILocation(line: 1900, column: 64, scope: !7313)
!7325 = !DILocation(line: 1900, column: 70, scope: !7313)
!7326 = !DILocation(line: 1900, column: 76, scope: !7313)
!7327 = !DILocation(line: 1900, column: 82, scope: !7313)
!7328 = !DILocation(line: 1900, column: 91, scope: !7313)
!7329 = !DILocation(line: 1900, column: 97, scope: !7313)
!7330 = !DILocation(line: 1900, column: 111, scope: !7313)
!7331 = !DILocation(line: 1900, column: 126, scope: !7313)
!7332 = !DILocation(line: 1900, column: 13, scope: !7313)
!7333 = !DILocation(line: 1900, column: 11, scope: !7313)
!7334 = !DILocation(line: 1902, column: 8, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1902, column: 8)
!7336 = !DILocation(line: 1902, column: 15, scope: !7335)
!7337 = !DILocation(line: 1902, column: 8, scope: !7313)
!7338 = !DILocation(line: 1903, column: 5, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1902, column: 28)
!7340 = !DILocation(line: 1907, column: 28, scope: !7313)
!7341 = !DILocation(line: 1907, column: 35, scope: !7313)
!7342 = !DILocation(line: 1907, column: 41, scope: !7313)
!7343 = !DILocation(line: 1907, column: 52, scope: !7313)
!7344 = !DILocation(line: 1907, column: 63, scope: !7313)
!7345 = !DILocation(line: 1907, column: 77, scope: !7313)
!7346 = !DILocation(line: 1907, column: 86, scope: !7313)
!7347 = !DILocation(line: 1907, column: 92, scope: !7313)
!7348 = !DILocation(line: 1907, column: 98, scope: !7313)
!7349 = !DILocation(line: 1907, column: 104, scope: !7313)
!7350 = !DILocation(line: 1907, column: 116, scope: !7313)
!7351 = !DILocation(line: 1907, column: 121, scope: !7313)
!7352 = !DILocation(line: 1907, column: 135, scope: !7313)
!7353 = !DILocation(line: 1907, column: 150, scope: !7313)
!7354 = !DILocation(line: 1907, column: 16, scope: !7313)
!7355 = !DILocation(line: 1907, column: 14, scope: !7313)
!7356 = !DILocation(line: 1908, column: 14, scope: !7313)
!7357 = !DILocation(line: 1908, column: 25, scope: !7313)
!7358 = !DILocation(line: 1908, column: 11, scope: !7313)
!7359 = !DILocation(line: 1910, column: 8, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1910, column: 8)
!7361 = !DILocation(line: 1910, column: 17, scope: !7360)
!7362 = !DILocation(line: 1910, column: 25, scope: !7360)
!7363 = !DILocation(line: 1910, column: 28, scope: !7360)
!7364 = !DILocation(line: 1910, column: 37, scope: !7360)
!7365 = !DILocation(line: 1910, column: 35, scope: !7360)
!7366 = !DILocation(line: 1910, column: 8, scope: !7313)
!7367 = !DILocation(line: 1911, column: 18, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 1910, column: 49)
!7369 = !DILocation(line: 1911, column: 16, scope: !7368)
!7370 = !DILocation(line: 1912, column: 16, scope: !7368)
!7371 = !DILocation(line: 1912, column: 14, scope: !7368)
!7372 = !DILocation(line: 1913, column: 16, scope: !7368)
!7373 = !DILocation(line: 1913, column: 14, scope: !7368)
!7374 = !DILocation(line: 1914, column: 4, scope: !7368)
!7375 = !DILocation(line: 1915, column: 3, scope: !7313)
!7376 = !DILocation(line: 1894, column: 74, scope: !7305)
!7377 = !DILocation(line: 1894, column: 3, scope: !7305)
!7378 = distinct !{!7378, !7311, !7379}
!7379 = !DILocation(line: 1915, column: 3, scope: !7300)
!7380 = !DILocation(line: 1917, column: 7, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 1917, column: 7)
!7382 = !DILocation(line: 1917, column: 7, scope: !7283)
!7383 = !DILocation(line: 1918, column: 19, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 1917, column: 17)
!7385 = !DILocation(line: 1918, column: 4, scope: !7384)
!7386 = !DILocation(line: 1918, column: 10, scope: !7384)
!7387 = !DILocation(line: 1918, column: 17, scope: !7384)
!7388 = !DILocation(line: 1919, column: 17, scope: !7384)
!7389 = !DILocation(line: 1919, column: 4, scope: !7384)
!7390 = !DILocation(line: 1919, column: 10, scope: !7384)
!7391 = !DILocation(line: 1919, column: 15, scope: !7384)
!7392 = !DILocation(line: 1920, column: 11, scope: !7384)
!7393 = !DILocation(line: 1920, column: 4, scope: !7384)
!7394 = !DILocation(line: 1923, column: 4, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 1922, column: 8)
!7396 = !DILocation(line: 1923, column: 10, scope: !7395)
!7397 = !DILocation(line: 1923, column: 17, scope: !7395)
!7398 = !DILocation(line: 1924, column: 11, scope: !7395)
!7399 = !DILocation(line: 1924, column: 4, scope: !7395)
!7400 = !DILocation(line: 1928, column: 1, scope: !7198)
!7401 = distinct !DISubprogram(name: "copyMemoPositions", scope: !3, file: !3, line: 1849, type: !7402, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7402 = !DISubroutineType(types: !7403)
!7403 = !{null, !4394, !4488, !145, !145}
!7404 = !DILocalVariable(name: "positions", arg: 1, scope: !7401, file: !3, line: 1849, type: !4394)
!7405 = !DILocation(line: 1849, column: 36, scope: !7401)
!7406 = !DILocalVariable(name: "table", arg: 2, scope: !7401, file: !3, line: 1849, type: !4488)
!7407 = !DILocation(line: 1849, column: 57, scope: !7401)
!7408 = !DILocalVariable(name: "nb_positions", arg: 3, scope: !7401, file: !3, line: 1849, type: !145)
!7409 = !DILocation(line: 1849, column: 68, scope: !7401)
!7410 = !DILocalVariable(name: "joints_left", arg: 4, scope: !7401, file: !3, line: 1849, type: !145)
!7411 = !DILocation(line: 1849, column: 86, scope: !7401)
!7412 = !DILocalVariable(name: "previous", scope: !7401, file: !3, line: 1851, type: !145)
!7413 = !DILocation(line: 1851, column: 6, scope: !7401)
!7414 = !DILocalVariable(name: "current", scope: !7401, file: !3, line: 1851, type: !145)
!7415 = !DILocation(line: 1851, column: 20, scope: !7401)
!7416 = !DILocalVariable(name: "i", scope: !7401, file: !3, line: 1852, type: !145)
!7417 = !DILocation(line: 1852, column: 6, scope: !7401)
!7418 = !DILocation(line: 1854, column: 9, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 1854, column: 2)
!7420 = !DILocation(line: 1854, column: 7, scope: !7419)
!7421 = !DILocation(line: 1854, column: 14, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 1854, column: 2)
!7423 = !DILocation(line: 1854, column: 26, scope: !7422)
!7424 = !DILocation(line: 1854, column: 2, scope: !7419)
!7425 = !DILocalVariable(name: "node", scope: !7426, file: !3, line: 1855, type: !4488)
!7426 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 1854, column: 51)
!7427 = !DILocation(line: 1855, column: 13, scope: !7426)
!7428 = !DILocation(line: 1856, column: 10, scope: !7426)
!7429 = !DILocation(line: 1856, column: 32, scope: !7426)
!7430 = !DILocation(line: 1856, column: 46, scope: !7426)
!7431 = !DILocation(line: 1856, column: 56, scope: !7426)
!7432 = !DILocation(line: 1856, column: 65, scope: !7426)
!7433 = !DILocation(line: 1856, column: 18, scope: !7426)
!7434 = !DILocation(line: 1856, column: 16, scope: !7426)
!7435 = !DILocation(line: 1856, column: 8, scope: !7426)
!7436 = !DILocation(line: 1858, column: 18, scope: !7426)
!7437 = !DILocation(line: 1858, column: 24, scope: !7426)
!7438 = !DILocation(line: 1858, column: 3, scope: !7426)
!7439 = !DILocation(line: 1858, column: 13, scope: !7426)
!7440 = !DILocation(line: 1858, column: 16, scope: !7426)
!7441 = !DILocation(line: 1860, column: 14, scope: !7426)
!7442 = !DILocation(line: 1860, column: 12, scope: !7426)
!7443 = !DILocation(line: 1861, column: 13, scope: !7426)
!7444 = !DILocation(line: 1861, column: 19, scope: !7426)
!7445 = !DILocation(line: 1861, column: 11, scope: !7426)
!7446 = !DILocation(line: 1862, column: 2, scope: !7426)
!7447 = !DILocation(line: 1854, column: 42, scope: !7422)
!7448 = !DILocation(line: 1854, column: 47, scope: !7422)
!7449 = !DILocation(line: 1854, column: 2, scope: !7422)
!7450 = distinct !{!7450, !7424, !7451}
!7451 = !DILocation(line: 1862, column: 2, scope: !7419)
!7452 = !DILocation(line: 1863, column: 1, scope: !7401)
!7453 = distinct !DISubprogram(name: "indexMemoNode", scope: !3, file: !3, line: 1844, type: !7454, scopeLine: 1845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7454 = !DISubroutineType(types: !7455)
!7455 = !{!145, !145, !145, !145, !145}
!7456 = !DILocalVariable(name: "nb_positions", arg: 1, scope: !7453, file: !3, line: 1844, type: !145)
!7457 = !DILocation(line: 1844, column: 30, scope: !7453)
!7458 = !DILocalVariable(name: "previous", arg: 2, scope: !7453, file: !3, line: 1844, type: !145)
!7459 = !DILocation(line: 1844, column: 48, scope: !7453)
!7460 = !DILocalVariable(name: "current", arg: 3, scope: !7453, file: !3, line: 1844, type: !145)
!7461 = !DILocation(line: 1844, column: 62, scope: !7453)
!7462 = !DILocalVariable(name: "joints_left", arg: 4, scope: !7453, file: !3, line: 1844, type: !145)
!7463 = !DILocation(line: 1844, column: 75, scope: !7453)
!7464 = !DILocation(line: 1846, column: 9, scope: !7453)
!7465 = !DILocation(line: 1846, column: 23, scope: !7453)
!7466 = !DILocation(line: 1846, column: 21, scope: !7453)
!7467 = !DILocation(line: 1846, column: 38, scope: !7453)
!7468 = !DILocation(line: 1846, column: 36, scope: !7453)
!7469 = !DILocation(line: 1846, column: 53, scope: !7453)
!7470 = !DILocation(line: 1846, column: 63, scope: !7453)
!7471 = !DILocation(line: 1846, column: 61, scope: !7453)
!7472 = !DILocation(line: 1846, column: 51, scope: !7453)
!7473 = !DILocation(line: 1846, column: 78, scope: !7453)
!7474 = !DILocation(line: 1846, column: 76, scope: !7453)
!7475 = !DILocation(line: 1846, column: 2, scope: !7453)
!7476 = distinct !DISubprogram(name: "calcCostAngleLengthDistance", scope: !3, file: !3, line: 1815, type: !7477, scopeLine: 1818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7477 = !DISubroutineType(types: !7478)
!7478 = !{!122, !1550, !4499, !1743, !1578, !1578, !1578, !145, !145, !122, !122, !122}
!7479 = !DILocalVariable(name: "iter", arg: 1, scope: !7476, file: !3, line: 1815, type: !1550)
!7480 = !DILocation(line: 1815, column: 56, scope: !7476)
!7481 = !DILocalVariable(name: "UNUSED_vec_cache", arg: 2, scope: !7476, file: !3, line: 1815, type: !4499)
!7482 = !DILocation(line: 1815, column: 70, scope: !7476)
!7483 = !DILocalVariable(name: "edge", arg: 3, scope: !7476, file: !3, line: 1815, type: !1743)
!7484 = !DILocation(line: 1815, column: 98, scope: !7476)
!7485 = !DILocalVariable(name: "vec0", arg: 4, scope: !7476, file: !3, line: 1816, type: !1578)
!7486 = !DILocation(line: 1816, column: 49, scope: !7476)
!7487 = !DILocalVariable(name: "vec1", arg: 5, scope: !7476, file: !3, line: 1816, type: !1578)
!7488 = !DILocation(line: 1816, column: 62, scope: !7476)
!7489 = !DILocalVariable(name: "vec2", arg: 6, scope: !7476, file: !3, line: 1816, type: !1578)
!7490 = !DILocation(line: 1816, column: 75, scope: !7476)
!7491 = !DILocalVariable(name: "i1", arg: 7, scope: !7476, file: !3, line: 1816, type: !145)
!7492 = !DILocation(line: 1816, column: 85, scope: !7476)
!7493 = !DILocalVariable(name: "i2", arg: 8, scope: !7476, file: !3, line: 1816, type: !145)
!7494 = !DILocation(line: 1816, column: 93, scope: !7476)
!7495 = !DILocalVariable(name: "angle_weight", arg: 9, scope: !7476, file: !3, line: 1817, type: !122)
!7496 = !DILocation(line: 1817, column: 48, scope: !7476)
!7497 = !DILocalVariable(name: "length_weight", arg: 10, scope: !7476, file: !3, line: 1817, type: !122)
!7498 = !DILocation(line: 1817, column: 68, scope: !7476)
!7499 = !DILocalVariable(name: "distance_weight", arg: 11, scope: !7476, file: !3, line: 1817, type: !122)
!7500 = !DILocation(line: 1817, column: 89, scope: !7476)
!7501 = !DILocalVariable(name: "vec_second", scope: !7476, file: !3, line: 1819, type: !141)
!7502 = !DILocation(line: 1819, column: 8, scope: !7476)
!7503 = !DILocalVariable(name: "vec_first", scope: !7476, file: !3, line: 1819, type: !141)
!7504 = !DILocation(line: 1819, column: 23, scope: !7476)
!7505 = !DILocalVariable(name: "length2", scope: !7476, file: !3, line: 1820, type: !122)
!7506 = !DILocation(line: 1820, column: 8, scope: !7476)
!7507 = !DILocalVariable(name: "new_cost", scope: !7476, file: !3, line: 1821, type: !122)
!7508 = !DILocation(line: 1821, column: 8, scope: !7476)
!7509 = !DILocation(line: 1823, column: 14, scope: !7476)
!7510 = !DILocation(line: 1823, column: 26, scope: !7476)
!7511 = !DILocation(line: 1823, column: 32, scope: !7476)
!7512 = !DILocation(line: 1823, column: 2, scope: !7476)
!7513 = !DILocation(line: 1824, column: 25, scope: !7476)
!7514 = !DILocation(line: 1824, column: 12, scope: !7476)
!7515 = !DILocation(line: 1824, column: 10, scope: !7476)
!7516 = !DILocation(line: 1828, column: 6, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 1828, column: 6)
!7518 = !DILocation(line: 1828, column: 12, scope: !7517)
!7519 = !DILocation(line: 1828, column: 6, scope: !7476)
!7520 = !DILocation(line: 1829, column: 15, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 1828, column: 18)
!7522 = !DILocation(line: 1829, column: 26, scope: !7521)
!7523 = !DILocation(line: 1829, column: 32, scope: !7521)
!7524 = !DILocation(line: 1829, column: 3, scope: !7521)
!7525 = !DILocation(line: 1830, column: 16, scope: !7521)
!7526 = !DILocation(line: 1830, column: 3, scope: !7521)
!7527 = !DILocation(line: 1832, column: 25, scope: !7521)
!7528 = !DILocation(line: 1832, column: 31, scope: !7521)
!7529 = !DILocation(line: 1832, column: 37, scope: !7521)
!7530 = !DILocation(line: 1832, column: 44, scope: !7521)
!7531 = !DILocation(line: 1832, column: 55, scope: !7521)
!7532 = !DILocation(line: 1832, column: 67, scope: !7521)
!7533 = !DILocation(line: 1832, column: 15, scope: !7521)
!7534 = !DILocation(line: 1832, column: 12, scope: !7521)
!7535 = !DILocation(line: 1833, column: 2, scope: !7521)
!7536 = !DILocation(line: 1836, column: 25, scope: !7476)
!7537 = !DILocation(line: 1836, column: 31, scope: !7476)
!7538 = !DILocation(line: 1836, column: 39, scope: !7476)
!7539 = !DILocation(line: 1836, column: 48, scope: !7476)
!7540 = !DILocation(line: 1836, column: 14, scope: !7476)
!7541 = !DILocation(line: 1836, column: 11, scope: !7476)
!7542 = !DILocation(line: 1839, column: 27, scope: !7476)
!7543 = !DILocation(line: 1839, column: 33, scope: !7476)
!7544 = !DILocation(line: 1839, column: 39, scope: !7476)
!7545 = !DILocation(line: 1839, column: 45, scope: !7476)
!7546 = !DILocation(line: 1839, column: 49, scope: !7476)
!7547 = !DILocation(line: 1839, column: 53, scope: !7476)
!7548 = !DILocation(line: 1839, column: 14, scope: !7476)
!7549 = !DILocation(line: 1839, column: 11, scope: !7476)
!7550 = !DILocation(line: 1841, column: 9, scope: !7476)
!7551 = !DILocation(line: 1841, column: 2, scope: !7476)
!7552 = distinct !DISubprogram(name: "costAngle", scope: !3, file: !3, line: 1772, type: !7553, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7553 = !DISubroutineType(types: !7554)
!7554 = !{!122, !122, !1578, !1578, !122}
!7555 = !DILocalVariable(name: "original_angle", arg: 1, scope: !7552, file: !3, line: 1772, type: !122)
!7556 = !DILocation(line: 1772, column: 30, scope: !7552)
!7557 = !DILocalVariable(name: "vec_first", arg: 2, scope: !7552, file: !3, line: 1772, type: !1578)
!7558 = !DILocation(line: 1772, column: 52, scope: !7552)
!7559 = !DILocalVariable(name: "vec_second", arg: 3, scope: !7552, file: !3, line: 1772, type: !1578)
!7560 = !DILocation(line: 1772, column: 72, scope: !7552)
!7561 = !DILocalVariable(name: "angle_weight", arg: 4, scope: !7552, file: !3, line: 1772, type: !122)
!7562 = !DILocation(line: 1772, column: 93, scope: !7552)
!7563 = !DILocation(line: 1774, column: 6, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 1774, column: 6)
!7565 = !DILocation(line: 1774, column: 19, scope: !7564)
!7566 = !DILocation(line: 1774, column: 6, scope: !7552)
!7567 = !DILocalVariable(name: "current_angle", scope: !7568, file: !3, line: 1775, type: !122)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 1774, column: 24)
!7569 = !DILocation(line: 1775, column: 9, scope: !7568)
!7570 = !DILocation(line: 1777, column: 19, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 1777, column: 7)
!7572 = !DILocation(line: 1777, column: 8, scope: !7571)
!7573 = !DILocation(line: 1777, column: 30, scope: !7571)
!7574 = !DILocation(line: 1777, column: 45, scope: !7571)
!7575 = !DILocation(line: 1777, column: 34, scope: !7571)
!7576 = !DILocation(line: 1777, column: 7, scope: !7568)
!7577 = !DILocation(line: 1778, column: 36, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 1777, column: 58)
!7579 = !DILocation(line: 1778, column: 47, scope: !7578)
!7580 = !DILocation(line: 1778, column: 27, scope: !7578)
!7581 = !DILocation(line: 1778, column: 20, scope: !7578)
!7582 = !DILocation(line: 1778, column: 18, scope: !7578)
!7583 = !DILocation(line: 1780, column: 11, scope: !7578)
!7584 = !DILocation(line: 1780, column: 32, scope: !7578)
!7585 = !DILocation(line: 1780, column: 48, scope: !7578)
!7586 = !DILocation(line: 1780, column: 46, scope: !7578)
!7587 = !DILocation(line: 1780, column: 26, scope: !7578)
!7588 = !DILocation(line: 1780, column: 24, scope: !7578)
!7589 = !DILocation(line: 1780, column: 4, scope: !7578)
!7590 = !DILocation(line: 1783, column: 11, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 1782, column: 8)
!7592 = !DILocation(line: 1783, column: 24, scope: !7591)
!7593 = !DILocation(line: 1783, column: 4, scope: !7591)
!7594 = !DILocation(line: 1787, column: 3, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 1786, column: 7)
!7596 = !DILocation(line: 1789, column: 1, scope: !7552)
!7597 = distinct !DISubprogram(name: "costLength", scope: !3, file: !3, line: 1791, type: !7598, scopeLine: 1792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!122, !122, !122, !122}
!7600 = !DILocalVariable(name: "original_length", arg: 1, scope: !7597, file: !3, line: 1791, type: !122)
!7601 = !DILocation(line: 1791, column: 31, scope: !7597)
!7602 = !DILocalVariable(name: "current_length", arg: 2, scope: !7597, file: !3, line: 1791, type: !122)
!7603 = !DILocation(line: 1791, column: 54, scope: !7597)
!7604 = !DILocalVariable(name: "length_weight", arg: 3, scope: !7597, file: !3, line: 1791, type: !122)
!7605 = !DILocation(line: 1791, column: 76, scope: !7597)
!7606 = !DILocation(line: 1793, column: 6, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 1793, column: 6)
!7608 = !DILocation(line: 1793, column: 21, scope: !7607)
!7609 = !DILocation(line: 1793, column: 6, scope: !7597)
!7610 = !DILocation(line: 1794, column: 3, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 1793, column: 27)
!7612 = !DILocalVariable(name: "length_ratio", scope: !7613, file: !3, line: 1797, type: !122)
!7613 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 1796, column: 7)
!7614 = !DILocation(line: 1797, column: 9, scope: !7613)
!7615 = !DILocation(line: 1797, column: 31, scope: !7613)
!7616 = !DILocation(line: 1797, column: 48, scope: !7613)
!7617 = !DILocation(line: 1797, column: 46, scope: !7613)
!7618 = !DILocation(line: 1797, column: 67, scope: !7613)
!7619 = !DILocation(line: 1797, column: 65, scope: !7613)
!7620 = !DILocation(line: 1797, column: 24, scope: !7613)
!7621 = !DILocation(line: 1798, column: 10, scope: !7613)
!7622 = !DILocation(line: 1798, column: 26, scope: !7613)
!7623 = !DILocation(line: 1798, column: 24, scope: !7613)
!7624 = !DILocation(line: 1798, column: 41, scope: !7613)
!7625 = !DILocation(line: 1798, column: 39, scope: !7613)
!7626 = !DILocation(line: 1798, column: 3, scope: !7613)
!7627 = !DILocation(line: 1800, column: 1, scope: !7597)
!7628 = distinct !DISubprogram(name: "costDistance", scope: !3, file: !3, line: 1733, type: !7629, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{!122, !1550, !1578, !1578, !145, !145, !122}
!7631 = !DILocalVariable(name: "iter", arg: 1, scope: !7628, file: !3, line: 1733, type: !1550)
!7632 = !DILocation(line: 1733, column: 41, scope: !7628)
!7633 = !DILocalVariable(name: "vec0", arg: 2, scope: !7628, file: !3, line: 1733, type: !1578)
!7634 = !DILocation(line: 1733, column: 54, scope: !7628)
!7635 = !DILocalVariable(name: "vec1", arg: 3, scope: !7628, file: !3, line: 1733, type: !1578)
!7636 = !DILocation(line: 1733, column: 67, scope: !7628)
!7637 = !DILocalVariable(name: "i0", arg: 4, scope: !7628, file: !3, line: 1733, type: !145)
!7638 = !DILocation(line: 1733, column: 77, scope: !7628)
!7639 = !DILocalVariable(name: "i1", arg: 5, scope: !7628, file: !3, line: 1733, type: !145)
!7640 = !DILocation(line: 1733, column: 85, scope: !7628)
!7641 = !DILocalVariable(name: "distance_weight", arg: 6, scope: !7628, file: !3, line: 1733, type: !122)
!7642 = !DILocation(line: 1733, column: 95, scope: !7628)
!7643 = !DILocalVariable(name: "bucket", scope: !7628, file: !3, line: 1735, type: !4530)
!7644 = !DILocation(line: 1735, column: 15, scope: !7628)
!7645 = !DILocalVariable(name: "max_dist", scope: !7628, file: !3, line: 1736, type: !122)
!7646 = !DILocation(line: 1736, column: 8, scope: !7628)
!7647 = !DILocalVariable(name: "v1", scope: !7628, file: !3, line: 1737, type: !141)
!7648 = !DILocation(line: 1737, column: 8, scope: !7628)
!7649 = !DILocalVariable(name: "v2", scope: !7628, file: !3, line: 1737, type: !141)
!7650 = !DILocation(line: 1737, column: 15, scope: !7628)
!7651 = !DILocalVariable(name: "c", scope: !7628, file: !3, line: 1737, type: !141)
!7652 = !DILocation(line: 1737, column: 22, scope: !7628)
!7653 = !DILocalVariable(name: "v1_inpf", scope: !7628, file: !3, line: 1738, type: !122)
!7654 = !DILocation(line: 1738, column: 8, scope: !7628)
!7655 = !DILocation(line: 1740, column: 6, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 1740, column: 6)
!7657 = !DILocation(line: 1740, column: 22, scope: !7656)
!7658 = !DILocation(line: 1740, column: 6, scope: !7628)
!7659 = !DILocation(line: 1741, column: 15, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 1740, column: 27)
!7661 = !DILocation(line: 1741, column: 19, scope: !7660)
!7662 = !DILocation(line: 1741, column: 25, scope: !7660)
!7663 = !DILocation(line: 1741, column: 3, scope: !7660)
!7664 = !DILocation(line: 1743, column: 22, scope: !7660)
!7665 = !DILocation(line: 1743, column: 26, scope: !7660)
!7666 = !DILocation(line: 1743, column: 13, scope: !7660)
!7667 = !DILocation(line: 1743, column: 11, scope: !7660)
!7668 = !DILocation(line: 1745, column: 7, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 1745, column: 7)
!7670 = !DILocation(line: 1745, column: 15, scope: !7669)
!7671 = !DILocation(line: 1745, column: 7, scope: !7660)
!7672 = !DILocalVariable(name: "j", scope: !7673, file: !3, line: 1746, type: !145)
!7673 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 1745, column: 20)
!7674 = !DILocation(line: 1746, column: 8, scope: !7673)
!7675 = !DILocation(line: 1747, column: 13, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 1747, column: 4)
!7677 = !DILocation(line: 1747, column: 16, scope: !7676)
!7678 = !DILocation(line: 1747, column: 11, scope: !7676)
!7679 = !DILocation(line: 1747, column: 9, scope: !7676)
!7680 = !DILocation(line: 1747, column: 21, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 1747, column: 4)
!7682 = !DILocation(line: 1747, column: 25, scope: !7681)
!7683 = !DILocation(line: 1747, column: 28, scope: !7681)
!7684 = !DILocation(line: 1747, column: 23, scope: !7681)
!7685 = !DILocation(line: 1747, column: 4, scope: !7676)
!7686 = !DILocalVariable(name: "dist", scope: !7687, file: !3, line: 1748, type: !122)
!7687 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 1747, column: 38)
!7688 = !DILocation(line: 1748, column: 11, scope: !7687)
!7689 = !DILocation(line: 1750, column: 22, scope: !7687)
!7690 = !DILocation(line: 1750, column: 28, scope: !7687)
!7691 = !DILocation(line: 1750, column: 14, scope: !7687)
!7692 = !DILocation(line: 1750, column: 12, scope: !7687)
!7693 = !DILocation(line: 1752, column: 17, scope: !7687)
!7694 = !DILocation(line: 1752, column: 21, scope: !7687)
!7695 = !DILocation(line: 1752, column: 29, scope: !7687)
!7696 = !DILocation(line: 1752, column: 32, scope: !7687)
!7697 = !DILocation(line: 1752, column: 5, scope: !7687)
!7698 = !DILocation(line: 1754, column: 19, scope: !7687)
!7699 = !DILocation(line: 1754, column: 22, scope: !7687)
!7700 = !DILocation(line: 1754, column: 26, scope: !7687)
!7701 = !DILocation(line: 1754, column: 5, scope: !7687)
!7702 = !DILocation(line: 1756, column: 21, scope: !7687)
!7703 = !DILocation(line: 1756, column: 24, scope: !7687)
!7704 = !DILocation(line: 1756, column: 12, scope: !7687)
!7705 = !DILocation(line: 1756, column: 29, scope: !7687)
!7706 = !DILocation(line: 1756, column: 27, scope: !7687)
!7707 = !DILocation(line: 1756, column: 10, scope: !7687)
!7708 = !DILocation(line: 1758, column: 16, scope: !7687)
!7709 = !DILocation(line: 1758, column: 23, scope: !7687)
!7710 = !DILocation(line: 1758, column: 21, scope: !7687)
!7711 = !DILocation(line: 1758, column: 34, scope: !7687)
!7712 = !DILocation(line: 1758, column: 41, scope: !7687)
!7713 = !DILocation(line: 1758, column: 14, scope: !7687)
!7714 = !DILocation(line: 1759, column: 4, scope: !7687)
!7715 = !DILocation(line: 1747, column: 34, scope: !7681)
!7716 = !DILocation(line: 1747, column: 4, scope: !7681)
!7717 = distinct !{!7717, !7685, !7718}
!7718 = !DILocation(line: 1759, column: 4, scope: !7676)
!7719 = !DILocation(line: 1761, column: 11, scope: !7673)
!7720 = !DILocation(line: 1761, column: 29, scope: !7673)
!7721 = !DILocation(line: 1761, column: 27, scope: !7673)
!7722 = !DILocation(line: 1761, column: 4, scope: !7673)
!7723 = !DILocation(line: 1764, column: 4, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 1763, column: 8)
!7725 = !DILocation(line: 1768, column: 3, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 1767, column: 7)
!7727 = !DILocation(line: 1770, column: 1, scope: !7628)
!7728 = distinct !DISubprogram(name: "saacos", scope: !7729, file: !7729, line: 66, type: !7730, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7729 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7730 = !DISubroutineType(types: !7731)
!7731 = !{!122, !122}
!7732 = !DILocalVariable(name: "fac", arg: 1, scope: !7728, file: !7729, line: 66, type: !122)
!7733 = !DILocation(line: 66, column: 28, scope: !7728)
!7734 = !DILocation(line: 68, column: 11, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7728, file: !7729, line: 68, column: 11)
!7736 = !DILocation(line: 68, column: 11, scope: !7728)
!7737 = !DILocation(line: 68, column: 35, scope: !7735)
!7738 = !DILocation(line: 69, column: 11, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7735, file: !7729, line: 69, column: 11)
!7740 = !DILocation(line: 69, column: 11, scope: !7735)
!7741 = !DILocation(line: 69, column: 35, scope: !7739)
!7742 = !DILocation(line: 70, column: 48, scope: !7739)
!7743 = !DILocation(line: 70, column: 42, scope: !7739)
!7744 = !DILocation(line: 70, column: 35, scope: !7739)
!7745 = !DILocation(line: 71, column: 1, scope: !7728)
!7746 = distinct !DISubprogram(name: "matchMultiResolutionStartingNode", scope: !3, file: !3, line: 2259, type: !7747, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7747 = !DISubroutineType(types: !7748)
!7748 = !{null, !108, !250, !1403}
!7749 = !DILocalVariable(name: "rigg", arg: 1, scope: !7746, file: !3, line: 2259, type: !108)
!7750 = !DILocation(line: 2259, column: 56, scope: !7746)
!7751 = !DILocalVariable(name: "reebg", arg: 2, scope: !7746, file: !3, line: 2259, type: !250)
!7752 = !DILocation(line: 2259, column: 73, scope: !7746)
!7753 = !DILocalVariable(name: "inode", arg: 3, scope: !7746, file: !3, line: 2259, type: !1403)
!7754 = !DILocation(line: 2259, column: 89, scope: !7746)
!7755 = !DILocalVariable(name: "enode", scope: !7746, file: !3, line: 2261, type: !198)
!7756 = !DILocation(line: 2261, column: 12, scope: !7746)
!7757 = !DILocalVariable(name: "ishape", scope: !7746, file: !3, line: 2262, type: !145)
!7758 = !DILocation(line: 2262, column: 6, scope: !7746)
!7759 = !DILocalVariable(name: "eshape", scope: !7746, file: !3, line: 2262, type: !145)
!7760 = !DILocation(line: 2262, column: 14, scope: !7746)
!7761 = !DILocation(line: 2264, column: 10, scope: !7746)
!7762 = !DILocation(line: 2264, column: 17, scope: !7746)
!7763 = !DILocation(line: 2264, column: 23, scope: !7746)
!7764 = !DILocation(line: 2264, column: 8, scope: !7746)
!7765 = !DILocation(line: 2266, column: 38, scope: !7746)
!7766 = !DILocation(line: 2266, column: 28, scope: !7746)
!7767 = !DILocation(line: 2266, column: 53, scope: !7746)
!7768 = !DILocation(line: 2266, column: 44, scope: !7746)
!7769 = !DILocation(line: 2266, column: 11, scope: !7746)
!7770 = !DILocation(line: 2266, column: 69, scope: !7746)
!7771 = !DILocation(line: 2266, column: 9, scope: !7746)
!7772 = !DILocation(line: 2267, column: 38, scope: !7746)
!7773 = !DILocation(line: 2267, column: 44, scope: !7746)
!7774 = !DILocation(line: 2267, column: 28, scope: !7746)
!7775 = !DILocation(line: 2267, column: 64, scope: !7746)
!7776 = !DILocation(line: 2267, column: 55, scope: !7746)
!7777 = !DILocation(line: 2267, column: 11, scope: !7746)
!7778 = !DILocation(line: 2267, column: 80, scope: !7746)
!7779 = !DILocation(line: 2267, column: 9, scope: !7746)
!7780 = !DILocation(line: 2269, column: 2, scope: !7746)
!7781 = !DILocation(line: 2269, column: 9, scope: !7746)
!7782 = !DILocation(line: 2269, column: 19, scope: !7746)
!7783 = !DILocation(line: 2269, column: 16, scope: !7746)
!7784 = !DILocation(line: 2269, column: 26, scope: !7746)
!7785 = !DILocation(line: 2269, column: 29, scope: !7746)
!7786 = !DILocation(line: 2269, column: 36, scope: !7746)
!7787 = !DILocation(line: 0, scope: !7746)
!7788 = !DILocation(line: 2270, column: 11, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 2269, column: 45)
!7790 = !DILocation(line: 2270, column: 18, scope: !7789)
!7791 = !DILocation(line: 2270, column: 9, scope: !7789)
!7792 = !DILocation(line: 2272, column: 11, scope: !7789)
!7793 = !DILocation(line: 2272, column: 18, scope: !7789)
!7794 = !DILocation(line: 2272, column: 24, scope: !7789)
!7795 = !DILocation(line: 2272, column: 9, scope: !7789)
!7796 = !DILocation(line: 2274, column: 39, scope: !7789)
!7797 = !DILocation(line: 2274, column: 29, scope: !7789)
!7798 = !DILocation(line: 2274, column: 55, scope: !7789)
!7799 = !DILocation(line: 2274, column: 46, scope: !7789)
!7800 = !DILocation(line: 2274, column: 12, scope: !7789)
!7801 = !DILocation(line: 2274, column: 71, scope: !7789)
!7802 = !DILocation(line: 2274, column: 10, scope: !7789)
!7803 = distinct !{!7803, !7780, !7804}
!7804 = !DILocation(line: 2275, column: 2, scope: !7746)
!7805 = !DILocation(line: 2277, column: 21, scope: !7746)
!7806 = !DILocation(line: 2277, column: 2, scope: !7746)
!7807 = !DILocation(line: 2277, column: 9, scope: !7746)
!7808 = !DILocation(line: 2277, column: 19, scope: !7746)
!7809 = !DILocation(line: 2278, column: 1, scope: !7746)
!7810 = distinct !DISubprogram(name: "retargetSubgraph", scope: !3, file: !3, line: 2366, type: !4339, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7811 = !DILocalVariable(name: "C", arg: 1, scope: !7810, file: !3, line: 2366, type: !1535)
!7812 = !DILocation(line: 2366, column: 40, scope: !7810)
!7813 = !DILocalVariable(name: "rigg", arg: 2, scope: !7810, file: !3, line: 2366, type: !108)
!7814 = !DILocation(line: 2366, column: 53, scope: !7810)
!7815 = !DILocalVariable(name: "start_arc", arg: 3, scope: !7810, file: !3, line: 2366, type: !1515)
!7816 = !DILocation(line: 2366, column: 67, scope: !7810)
!7817 = !DILocalVariable(name: "start_node", arg: 4, scope: !7810, file: !3, line: 2366, type: !1403)
!7818 = !DILocation(line: 2366, column: 87, scope: !7810)
!7819 = !DILocalVariable(name: "inode", scope: !7810, file: !3, line: 2368, type: !1403)
!7820 = !DILocation(line: 2368, column: 11, scope: !7810)
!7821 = !DILocation(line: 2368, column: 19, scope: !7810)
!7822 = !DILocalVariable(name: "i", scope: !7810, file: !3, line: 2369, type: !145)
!7823 = !DILocation(line: 2369, column: 6, scope: !7810)
!7824 = !DILocation(line: 2372, column: 6, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 2372, column: 6)
!7826 = !DILocation(line: 2372, column: 6, scope: !7810)
!7827 = !DILocalVariable(name: "enode", scope: !7828, file: !3, line: 2373, type: !198)
!7828 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 2372, column: 17)
!7829 = !DILocation(line: 2373, column: 13, scope: !7828)
!7830 = !DILocation(line: 2373, column: 21, scope: !7828)
!7831 = !DILocation(line: 2373, column: 33, scope: !7828)
!7832 = !DILocalVariable(name: "earc", scope: !7828, file: !3, line: 2374, type: !1531)
!7833 = !DILocation(line: 2374, column: 12, scope: !7828)
!7834 = !DILocation(line: 2374, column: 19, scope: !7828)
!7835 = !DILocation(line: 2374, column: 30, scope: !7828)
!7836 = !DILocation(line: 2376, column: 20, scope: !7828)
!7837 = !DILocation(line: 2376, column: 23, scope: !7828)
!7838 = !DILocation(line: 2376, column: 29, scope: !7828)
!7839 = !DILocation(line: 2376, column: 40, scope: !7828)
!7840 = !DILocation(line: 2376, column: 3, scope: !7828)
!7841 = !DILocation(line: 2378, column: 34, scope: !7828)
!7842 = !DILocation(line: 2378, column: 40, scope: !7828)
!7843 = !DILocation(line: 2378, column: 11, scope: !7828)
!7844 = !DILocation(line: 2378, column: 9, scope: !7828)
!7845 = !DILocation(line: 2379, column: 44, scope: !7828)
!7846 = !DILocation(line: 2379, column: 36, scope: !7828)
!7847 = !DILocation(line: 2379, column: 64, scope: !7828)
!7848 = !DILocation(line: 2379, column: 55, scope: !7828)
!7849 = !DILocation(line: 2379, column: 22, scope: !7828)
!7850 = !DILocation(line: 2379, column: 11, scope: !7828)
!7851 = !DILocation(line: 2379, column: 9, scope: !7828)
!7852 = !DILocation(line: 2382, column: 28, scope: !7828)
!7853 = !DILocation(line: 2382, column: 34, scope: !7828)
!7854 = !DILocation(line: 2382, column: 41, scope: !7828)
!7855 = !DILocation(line: 2382, column: 3, scope: !7828)
!7856 = !DILocation(line: 2383, column: 2, scope: !7828)
!7857 = !DILocation(line: 2385, column: 9, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 2385, column: 2)
!7859 = !DILocation(line: 2385, column: 7, scope: !7858)
!7860 = !DILocation(line: 2385, column: 14, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 2385, column: 2)
!7862 = !DILocation(line: 2385, column: 18, scope: !7861)
!7863 = !DILocation(line: 2385, column: 25, scope: !7861)
!7864 = !DILocation(line: 2385, column: 16, scope: !7861)
!7865 = !DILocation(line: 2385, column: 2, scope: !7858)
!7866 = !DILocalVariable(name: "next_iarc", scope: !7867, file: !3, line: 2386, type: !1515)
!7867 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 2385, column: 38)
!7868 = !DILocation(line: 2386, column: 11, scope: !7867)
!7869 = !DILocation(line: 2386, column: 33, scope: !7867)
!7870 = !DILocation(line: 2386, column: 40, scope: !7867)
!7871 = !DILocation(line: 2386, column: 45, scope: !7867)
!7872 = !DILocation(line: 2386, column: 23, scope: !7867)
!7873 = !DILocation(line: 2389, column: 7, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 2389, column: 7)
!7875 = !DILocation(line: 2389, column: 20, scope: !7874)
!7876 = !DILocation(line: 2389, column: 17, scope: !7874)
!7877 = !DILocation(line: 2389, column: 7, scope: !7867)
!7878 = !DILocation(line: 2390, column: 25, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 2389, column: 31)
!7880 = !DILocation(line: 2390, column: 31, scope: !7879)
!7881 = !DILocation(line: 2390, column: 42, scope: !7879)
!7882 = !DILocation(line: 2390, column: 49, scope: !7879)
!7883 = !DILocation(line: 2390, column: 4, scope: !7879)
!7884 = !DILocation(line: 2391, column: 8, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 2391, column: 8)
!7886 = !DILocation(line: 2391, column: 19, scope: !7885)
!7887 = !DILocation(line: 2391, column: 8, scope: !7879)
!7888 = !DILocation(line: 2392, column: 22, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 2391, column: 30)
!7890 = !DILocation(line: 2392, column: 25, scope: !7889)
!7891 = !DILocation(line: 2392, column: 31, scope: !7889)
!7892 = !DILocation(line: 2392, column: 42, scope: !7889)
!7893 = !DILocation(line: 2392, column: 5, scope: !7889)
!7894 = !DILocation(line: 2393, column: 4, scope: !7889)
!7895 = !DILocation(line: 2394, column: 3, scope: !7879)
!7896 = !DILocation(line: 2395, column: 2, scope: !7867)
!7897 = !DILocation(line: 2385, column: 34, scope: !7861)
!7898 = !DILocation(line: 2385, column: 2, scope: !7861)
!7899 = distinct !{!7899, !7865, !7900}
!7900 = !DILocation(line: 2395, column: 2, scope: !7858)
!7901 = !DILocation(line: 2396, column: 1, scope: !7810)
!7902 = distinct !DISubprogram(name: "matchMultiResolutionNode", scope: !3, file: !3, line: 2177, type: !7903, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{null, !108, !1403, !198}
!7905 = !DILocalVariable(name: "rigg", arg: 1, scope: !7902, file: !3, line: 2177, type: !108)
!7906 = !DILocation(line: 2177, column: 48, scope: !7902)
!7907 = !DILocalVariable(name: "inode", arg: 2, scope: !7902, file: !3, line: 2177, type: !1403)
!7908 = !DILocation(line: 2177, column: 63, scope: !7902)
!7909 = !DILocalVariable(name: "top_node", arg: 3, scope: !7902, file: !3, line: 2177, type: !198)
!7910 = !DILocation(line: 2177, column: 80, scope: !7902)
!7911 = !DILocalVariable(name: "enode", scope: !7902, file: !3, line: 2179, type: !198)
!7912 = !DILocation(line: 2179, column: 12, scope: !7902)
!7913 = !DILocation(line: 2179, column: 20, scope: !7902)
!7914 = !DILocalVariable(name: "reebg", scope: !7902, file: !3, line: 2180, type: !250)
!7915 = !DILocation(line: 2180, column: 13, scope: !7902)
!7916 = !DILocation(line: 2180, column: 43, scope: !7902)
!7917 = !DILocation(line: 2180, column: 49, scope: !7902)
!7918 = !DILocation(line: 2180, column: 60, scope: !7902)
!7919 = !DILocation(line: 2180, column: 21, scope: !7902)
!7920 = !DILocalVariable(name: "ishape", scope: !7902, file: !3, line: 2181, type: !145)
!7921 = !DILocation(line: 2181, column: 6, scope: !7902)
!7922 = !DILocalVariable(name: "eshape", scope: !7902, file: !3, line: 2181, type: !145)
!7923 = !DILocation(line: 2181, column: 14, scope: !7902)
!7924 = !DILocation(line: 2183, column: 38, scope: !7902)
!7925 = !DILocation(line: 2183, column: 28, scope: !7902)
!7926 = !DILocation(line: 2183, column: 53, scope: !7902)
!7927 = !DILocation(line: 2183, column: 44, scope: !7902)
!7928 = !DILocation(line: 2183, column: 11, scope: !7902)
!7929 = !DILocation(line: 2183, column: 69, scope: !7902)
!7930 = !DILocation(line: 2183, column: 9, scope: !7902)
!7931 = !DILocation(line: 2184, column: 38, scope: !7902)
!7932 = !DILocation(line: 2184, column: 28, scope: !7902)
!7933 = !DILocation(line: 2184, column: 54, scope: !7902)
!7934 = !DILocation(line: 2184, column: 45, scope: !7902)
!7935 = !DILocation(line: 2184, column: 11, scope: !7902)
!7936 = !DILocation(line: 2184, column: 70, scope: !7902)
!7937 = !DILocation(line: 2184, column: 9, scope: !7902)
!7938 = !DILocation(line: 2186, column: 21, scope: !7902)
!7939 = !DILocation(line: 2186, column: 2, scope: !7902)
!7940 = !DILocation(line: 2186, column: 9, scope: !7902)
!7941 = !DILocation(line: 2186, column: 19, scope: !7902)
!7942 = !DILocation(line: 2188, column: 2, scope: !7902)
!7943 = !DILocation(line: 2188, column: 9, scope: !7902)
!7944 = !DILocation(line: 2188, column: 19, scope: !7902)
!7945 = !DILocation(line: 2188, column: 16, scope: !7902)
!7946 = !DILocation(line: 2188, column: 26, scope: !7902)
!7947 = !DILocation(line: 2188, column: 29, scope: !7902)
!7948 = !DILocation(line: 2188, column: 36, scope: !7902)
!7949 = !DILocation(line: 0, scope: !7902)
!7950 = !DILocation(line: 2189, column: 22, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 2188, column: 47)
!7952 = !DILocation(line: 2189, column: 3, scope: !7951)
!7953 = !DILocation(line: 2189, column: 10, scope: !7951)
!7954 = !DILocation(line: 2189, column: 20, scope: !7951)
!7955 = !DILocation(line: 2191, column: 11, scope: !7951)
!7956 = !DILocation(line: 2191, column: 18, scope: !7951)
!7957 = !DILocation(line: 2191, column: 9, scope: !7951)
!7958 = !DILocation(line: 2192, column: 33, scope: !7951)
!7959 = !DILocation(line: 2192, column: 39, scope: !7951)
!7960 = !DILocation(line: 2192, column: 50, scope: !7951)
!7961 = !DILocation(line: 2192, column: 11, scope: !7951)
!7962 = !DILocation(line: 2192, column: 9, scope: !7951)
!7963 = !DILocation(line: 2193, column: 39, scope: !7951)
!7964 = !DILocation(line: 2193, column: 29, scope: !7951)
!7965 = !DILocation(line: 2193, column: 55, scope: !7951)
!7966 = !DILocation(line: 2193, column: 46, scope: !7951)
!7967 = !DILocation(line: 2193, column: 12, scope: !7951)
!7968 = !DILocation(line: 2193, column: 71, scope: !7951)
!7969 = !DILocation(line: 2193, column: 10, scope: !7951)
!7970 = distinct !{!7970, !7942, !7971}
!7971 = !DILocation(line: 2194, column: 2, scope: !7902)
!7972 = !DILocation(line: 2195, column: 1, scope: !7902)
!7973 = distinct !DISubprogram(name: "findCorrespondingArc", scope: !3, file: !3, line: 2280, type: !7974, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!7974 = !DISubroutineType(types: !7975)
!7975 = !{null, !108, !1515, !1403, !1515, !145}
!7976 = !DILocalVariable(name: "rigg", arg: 1, scope: !7973, file: !3, line: 2280, type: !108)
!7977 = !DILocation(line: 2280, column: 44, scope: !7973)
!7978 = !DILocalVariable(name: "start_arc", arg: 2, scope: !7973, file: !3, line: 2280, type: !1515)
!7979 = !DILocation(line: 2280, column: 58, scope: !7973)
!7980 = !DILocalVariable(name: "start_node", arg: 3, scope: !7973, file: !3, line: 2280, type: !1403)
!7981 = !DILocation(line: 2280, column: 78, scope: !7973)
!7982 = !DILocalVariable(name: "next_iarc", arg: 4, scope: !7973, file: !3, line: 2280, type: !1515)
!7983 = !DILocation(line: 2280, column: 98, scope: !7973)
!7984 = !DILocalVariable(name: "root", arg: 5, scope: !7973, file: !3, line: 2280, type: !145)
!7985 = !DILocation(line: 2280, column: 113, scope: !7973)
!7986 = !DILocalVariable(name: "enode", scope: !7973, file: !3, line: 2282, type: !198)
!7987 = !DILocation(line: 2282, column: 12, scope: !7973)
!7988 = !DILocation(line: 2282, column: 20, scope: !7973)
!7989 = !DILocation(line: 2282, column: 32, scope: !7973)
!7990 = !DILocalVariable(name: "next_earc", scope: !7973, file: !3, line: 2283, type: !1531)
!7991 = !DILocation(line: 2283, column: 11, scope: !7973)
!7992 = !DILocalVariable(name: "symmetry_level", scope: !7973, file: !3, line: 2284, type: !145)
!7993 = !DILocation(line: 2284, column: 6, scope: !7973)
!7994 = !DILocation(line: 2284, column: 23, scope: !7973)
!7995 = !DILocation(line: 2284, column: 34, scope: !7973)
!7996 = !DILocalVariable(name: "symmetry_group", scope: !7973, file: !3, line: 2285, type: !145)
!7997 = !DILocation(line: 2285, column: 6, scope: !7973)
!7998 = !DILocation(line: 2285, column: 23, scope: !7973)
!7999 = !DILocation(line: 2285, column: 34, scope: !7973)
!8000 = !DILocalVariable(name: "symmetry_flag", scope: !7973, file: !3, line: 2286, type: !145)
!8001 = !DILocation(line: 2286, column: 6, scope: !7973)
!8002 = !DILocation(line: 2286, column: 22, scope: !7973)
!8003 = !DILocation(line: 2286, column: 33, scope: !7973)
!8004 = !DILocalVariable(name: "i", scope: !7973, file: !3, line: 2287, type: !145)
!8005 = !DILocation(line: 2287, column: 6, scope: !7973)
!8006 = !DILocation(line: 2289, column: 2, scope: !7973)
!8007 = !DILocation(line: 2289, column: 13, scope: !7973)
!8008 = !DILocation(line: 2289, column: 23, scope: !7973)
!8009 = !DILocation(line: 2298, column: 9, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 2298, column: 2)
!8011 = !DILocation(line: 2298, column: 7, scope: !8010)
!8012 = !DILocation(line: 2298, column: 14, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 2298, column: 2)
!8014 = !DILocation(line: 2298, column: 18, scope: !8013)
!8015 = !DILocation(line: 2298, column: 25, scope: !8013)
!8016 = !DILocation(line: 2298, column: 16, scope: !8013)
!8017 = !DILocation(line: 2298, column: 2, scope: !8010)
!8018 = !DILocation(line: 2299, column: 26, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 2298, column: 38)
!8020 = !DILocation(line: 2299, column: 33, scope: !8019)
!8021 = !DILocation(line: 2299, column: 38, scope: !8019)
!8022 = !DILocation(line: 2299, column: 13, scope: !8019)
!8023 = !DILocation(line: 2309, column: 7, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 2309, column: 7)
!8025 = !DILocation(line: 2309, column: 18, scope: !8024)
!8026 = !DILocation(line: 2309, column: 23, scope: !8024)
!8027 = !DILocation(line: 2309, column: 35, scope: !8024)
!8028 = !DILocation(line: 2310, column: 7, scope: !8024)
!8029 = !DILocation(line: 2310, column: 18, scope: !8024)
!8030 = !DILocation(line: 2310, column: 35, scope: !8024)
!8031 = !DILocation(line: 2310, column: 32, scope: !8024)
!8032 = !DILocation(line: 2310, column: 49, scope: !8024)
!8033 = !DILocation(line: 2311, column: 7, scope: !8024)
!8034 = !DILocation(line: 2311, column: 18, scope: !8024)
!8035 = !DILocation(line: 2311, column: 36, scope: !8024)
!8036 = !DILocation(line: 2311, column: 33, scope: !8024)
!8037 = !DILocation(line: 2311, column: 51, scope: !8024)
!8038 = !DILocation(line: 2312, column: 7, scope: !8024)
!8039 = !DILocation(line: 2312, column: 18, scope: !8024)
!8040 = !DILocation(line: 2312, column: 36, scope: !8024)
!8041 = !DILocation(line: 2312, column: 33, scope: !8024)
!8042 = !DILocation(line: 2309, column: 7, scope: !8019)
!8043 = !DILocation(line: 2317, column: 28, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 2313, column: 3)
!8045 = !DILocation(line: 2317, column: 34, scope: !8044)
!8046 = !DILocation(line: 2317, column: 46, scope: !8044)
!8047 = !DILocation(line: 2317, column: 57, scope: !8044)
!8048 = !DILocation(line: 2317, column: 4, scope: !8044)
!8049 = !DILocation(line: 2318, column: 4, scope: !8044)
!8050 = !DILocation(line: 2320, column: 2, scope: !8019)
!8051 = !DILocation(line: 2298, column: 34, scope: !8013)
!8052 = !DILocation(line: 2298, column: 2, scope: !8013)
!8053 = distinct !{!8053, !8017, !8054}
!8054 = !DILocation(line: 2320, column: 2, scope: !8010)
!8055 = !DILocation(line: 2323, column: 6, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 2323, column: 6)
!8057 = !DILocation(line: 2323, column: 17, scope: !8056)
!8058 = !DILocation(line: 2323, column: 27, scope: !8056)
!8059 = !DILocation(line: 2323, column: 6, scope: !7973)
!8060 = !DILocation(line: 2326, column: 7, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 2326, column: 7)
!8062 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 2323, column: 36)
!8063 = !DILocation(line: 2326, column: 14, scope: !8061)
!8064 = !DILocation(line: 2326, column: 7, scope: !8062)
!8065 = !DILocation(line: 2327, column: 28, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 2326, column: 23)
!8067 = !DILocation(line: 2327, column: 35, scope: !8066)
!8068 = !DILocation(line: 2327, column: 4, scope: !8066)
!8069 = !DILocation(line: 2327, column: 16, scope: !8066)
!8070 = !DILocation(line: 2327, column: 26, scope: !8066)
!8071 = !DILocation(line: 2328, column: 25, scope: !8066)
!8072 = !DILocation(line: 2328, column: 31, scope: !8066)
!8073 = !DILocation(line: 2328, column: 42, scope: !8066)
!8074 = !DILocation(line: 2328, column: 54, scope: !8066)
!8075 = !DILocation(line: 2328, column: 4, scope: !8066)
!8076 = !DILocation(line: 2329, column: 3, scope: !8066)
!8077 = !DILocation(line: 2330, column: 2, scope: !8062)
!8078 = !DILocation(line: 2333, column: 6, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 2333, column: 6)
!8080 = !DILocation(line: 2333, column: 11, scope: !8079)
!8081 = !DILocation(line: 2333, column: 14, scope: !8079)
!8082 = !DILocation(line: 2333, column: 25, scope: !8079)
!8083 = !DILocation(line: 2333, column: 35, scope: !8079)
!8084 = !DILocation(line: 2333, column: 6, scope: !7973)
!8085 = !DILocation(line: 2334, column: 27, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 2333, column: 44)
!8087 = !DILocation(line: 2334, column: 3, scope: !8086)
!8088 = !DILocation(line: 2334, column: 15, scope: !8086)
!8089 = !DILocation(line: 2334, column: 25, scope: !8086)
!8090 = !DILocation(line: 2352, column: 10, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 2352, column: 3)
!8092 = !DILocation(line: 2352, column: 8, scope: !8091)
!8093 = !DILocation(line: 2352, column: 15, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 2352, column: 3)
!8095 = !DILocation(line: 2352, column: 19, scope: !8094)
!8096 = !DILocation(line: 2352, column: 26, scope: !8094)
!8097 = !DILocation(line: 2352, column: 17, scope: !8094)
!8098 = !DILocation(line: 2352, column: 3, scope: !8091)
!8099 = !DILocation(line: 2353, column: 27, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 2352, column: 39)
!8101 = !DILocation(line: 2353, column: 34, scope: !8100)
!8102 = !DILocation(line: 2353, column: 39, scope: !8100)
!8103 = !DILocation(line: 2353, column: 14, scope: !8100)
!8104 = !DILocation(line: 2355, column: 8, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 2355, column: 8)
!8106 = !DILocation(line: 2355, column: 19, scope: !8105)
!8107 = !DILocation(line: 2355, column: 24, scope: !8105)
!8108 = !DILocation(line: 2355, column: 36, scope: !8105)
!8109 = !DILocation(line: 2355, column: 39, scope: !8105)
!8110 = !DILocation(line: 2355, column: 50, scope: !8105)
!8111 = !DILocation(line: 2355, column: 68, scope: !8105)
!8112 = !DILocation(line: 2355, column: 65, scope: !8105)
!8113 = !DILocation(line: 2355, column: 8, scope: !8100)
!8114 = !DILocation(line: 2358, column: 29, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8105, file: !3, line: 2355, column: 84)
!8116 = !DILocation(line: 2358, column: 35, scope: !8115)
!8117 = !DILocation(line: 2358, column: 47, scope: !8115)
!8118 = !DILocation(line: 2358, column: 58, scope: !8115)
!8119 = !DILocation(line: 2358, column: 5, scope: !8115)
!8120 = !DILocation(line: 2359, column: 5, scope: !8115)
!8121 = !DILocation(line: 2361, column: 3, scope: !8100)
!8122 = !DILocation(line: 2352, column: 35, scope: !8094)
!8123 = !DILocation(line: 2352, column: 3, scope: !8094)
!8124 = distinct !{!8124, !8098, !8125}
!8125 = !DILocation(line: 2361, column: 3, scope: !8091)
!8126 = !DILocation(line: 2362, column: 2, scope: !8086)
!8127 = !DILocation(line: 2364, column: 1, scope: !7973)
!8128 = distinct !DISubprogram(name: "matchMultiResolutionArc", scope: !3, file: !3, line: 2229, type: !8129, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!8129 = !DISubroutineType(types: !8130)
!8130 = !{null, !108, !1403, !1515, !1531}
!8131 = !DILocalVariable(name: "rigg", arg: 1, scope: !8128, file: !3, line: 2229, type: !108)
!8132 = !DILocation(line: 2229, column: 47, scope: !8128)
!8133 = !DILocalVariable(name: "start_node", arg: 2, scope: !8128, file: !3, line: 2229, type: !1403)
!8134 = !DILocation(line: 2229, column: 62, scope: !8128)
!8135 = !DILocalVariable(name: "next_iarc", arg: 3, scope: !8128, file: !3, line: 2229, type: !1515)
!8136 = !DILocation(line: 2229, column: 82, scope: !8128)
!8137 = !DILocalVariable(name: "next_earc", arg: 4, scope: !8128, file: !3, line: 2229, type: !1531)
!8138 = !DILocation(line: 2229, column: 102, scope: !8128)
!8139 = !DILocalVariable(name: "enode", scope: !8128, file: !3, line: 2231, type: !198)
!8140 = !DILocation(line: 2231, column: 12, scope: !8128)
!8141 = !DILocation(line: 2231, column: 20, scope: !8128)
!8142 = !DILocation(line: 2231, column: 31, scope: !8128)
!8143 = !DILocalVariable(name: "reebg", scope: !8128, file: !3, line: 2232, type: !250)
!8144 = !DILocation(line: 2232, column: 13, scope: !8128)
!8145 = !DILocation(line: 2232, column: 43, scope: !8128)
!8146 = !DILocation(line: 2232, column: 49, scope: !8128)
!8147 = !DILocation(line: 2232, column: 60, scope: !8128)
!8148 = !DILocation(line: 2232, column: 21, scope: !8128)
!8149 = !DILocalVariable(name: "ishape", scope: !8128, file: !3, line: 2233, type: !145)
!8150 = !DILocation(line: 2233, column: 6, scope: !8128)
!8151 = !DILocalVariable(name: "eshape", scope: !8128, file: !3, line: 2233, type: !145)
!8152 = !DILocation(line: 2233, column: 14, scope: !8128)
!8153 = !DILocation(line: 2235, column: 38, scope: !8128)
!8154 = !DILocation(line: 2235, column: 28, scope: !8128)
!8155 = !DILocation(line: 2235, column: 53, scope: !8128)
!8156 = !DILocation(line: 2235, column: 44, scope: !8128)
!8157 = !DILocation(line: 2235, column: 73, scope: !8128)
!8158 = !DILocation(line: 2235, column: 65, scope: !8128)
!8159 = !DILocation(line: 2235, column: 11, scope: !8128)
!8160 = !DILocation(line: 2235, column: 87, scope: !8128)
!8161 = !DILocation(line: 2235, column: 9, scope: !8128)
!8162 = !DILocation(line: 2236, column: 38, scope: !8128)
!8163 = !DILocation(line: 2236, column: 28, scope: !8128)
!8164 = !DILocation(line: 2236, column: 54, scope: !8128)
!8165 = !DILocation(line: 2236, column: 45, scope: !8128)
!8166 = !DILocation(line: 2236, column: 69, scope: !8128)
!8167 = !DILocation(line: 2236, column: 61, scope: !8128)
!8168 = !DILocation(line: 2236, column: 11, scope: !8128)
!8169 = !DILocation(line: 2236, column: 83, scope: !8128)
!8170 = !DILocation(line: 2236, column: 9, scope: !8128)
!8171 = !DILocation(line: 2238, column: 2, scope: !8128)
!8172 = !DILocation(line: 2238, column: 9, scope: !8128)
!8173 = !DILocation(line: 2238, column: 19, scope: !8128)
!8174 = !DILocation(line: 2238, column: 16, scope: !8128)
!8175 = !DILocation(line: 2238, column: 26, scope: !8128)
!8176 = !DILocation(line: 2238, column: 29, scope: !8128)
!8177 = !DILocation(line: 2238, column: 40, scope: !8128)
!8178 = !DILocation(line: 0, scope: !8128)
!8179 = !DILocation(line: 2239, column: 3, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2238, column: 49)
!8181 = !DILocation(line: 2239, column: 14, scope: !8180)
!8182 = !DILocation(line: 2239, column: 19, scope: !8180)
!8183 = !DILocation(line: 2241, column: 15, scope: !8180)
!8184 = !DILocation(line: 2241, column: 26, scope: !8180)
!8185 = !DILocation(line: 2241, column: 13, scope: !8180)
!8186 = !DILocation(line: 2242, column: 11, scope: !8180)
!8187 = !DILocation(line: 2242, column: 18, scope: !8180)
!8188 = !DILocation(line: 2242, column: 9, scope: !8180)
!8189 = !DILocation(line: 2243, column: 11, scope: !8180)
!8190 = !DILocation(line: 2243, column: 22, scope: !8180)
!8191 = !DILocation(line: 2243, column: 9, scope: !8180)
!8192 = !DILocation(line: 2244, column: 39, scope: !8180)
!8193 = !DILocation(line: 2244, column: 29, scope: !8180)
!8194 = !DILocation(line: 2244, column: 55, scope: !8180)
!8195 = !DILocation(line: 2244, column: 46, scope: !8180)
!8196 = !DILocation(line: 2244, column: 70, scope: !8180)
!8197 = !DILocation(line: 2244, column: 62, scope: !8180)
!8198 = !DILocation(line: 2244, column: 12, scope: !8180)
!8199 = !DILocation(line: 2244, column: 84, scope: !8180)
!8200 = !DILocation(line: 2244, column: 10, scope: !8180)
!8201 = distinct !{!8201, !8171, !8202}
!8202 = !DILocation(line: 2245, column: 2, scope: !8128)
!8203 = !DILocation(line: 2247, column: 2, scope: !8128)
!8204 = !DILocation(line: 2247, column: 13, scope: !8128)
!8205 = !DILocation(line: 2247, column: 18, scope: !8128)
!8206 = !DILocation(line: 2248, column: 25, scope: !8128)
!8207 = !DILocation(line: 2248, column: 2, scope: !8128)
!8208 = !DILocation(line: 2248, column: 13, scope: !8128)
!8209 = !DILocation(line: 2248, column: 23, scope: !8128)
!8210 = !DILocation(line: 2251, column: 25, scope: !8128)
!8211 = !DILocation(line: 2251, column: 2, scope: !8128)
!8212 = !DILocation(line: 2257, column: 1, scope: !8128)
!8213 = distinct !DISubprogram(name: "markMultiResolutionArc", scope: !3, file: !3, line: 2215, type: !8214, scopeLine: 2216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{null, !1531}
!8216 = !DILocalVariable(name: "start_earc", arg: 1, scope: !8213, file: !3, line: 2215, type: !1531)
!8217 = !DILocation(line: 2215, column: 45, scope: !8213)
!8218 = !DILocation(line: 2217, column: 6, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2217, column: 6)
!8220 = !DILocation(line: 2217, column: 18, scope: !8219)
!8221 = !DILocation(line: 2217, column: 6, scope: !8213)
!8222 = !DILocalVariable(name: "earc", scope: !8223, file: !3, line: 2218, type: !1531)
!8223 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2217, column: 27)
!8224 = !DILocation(line: 2218, column: 12, scope: !8223)
!8225 = !DILocation(line: 2219, column: 15, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2219, column: 3)
!8227 = !DILocation(line: 2219, column: 27, scope: !8226)
!8228 = !DILocation(line: 2219, column: 13, scope: !8226)
!8229 = !DILocation(line: 2219, column: 8, scope: !8226)
!8230 = !DILocation(line: 2219, column: 36, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 2219, column: 3)
!8232 = !DILocation(line: 2219, column: 3, scope: !8226)
!8233 = !DILocation(line: 2220, column: 4, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 2219, column: 64)
!8235 = !DILocation(line: 2220, column: 10, scope: !8234)
!8236 = !DILocation(line: 2220, column: 15, scope: !8234)
!8237 = !DILocation(line: 2222, column: 8, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 2222, column: 8)
!8239 = !DILocation(line: 2222, column: 14, scope: !8238)
!8240 = !DILocation(line: 2222, column: 20, scope: !8238)
!8241 = !DILocation(line: 2222, column: 29, scope: !8238)
!8242 = !DILocation(line: 2222, column: 41, scope: !8238)
!8243 = !DILocation(line: 2222, column: 47, scope: !8238)
!8244 = !DILocation(line: 2222, column: 26, scope: !8238)
!8245 = !DILocation(line: 2222, column: 8, scope: !8234)
!8246 = !DILocation(line: 2223, column: 33, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 2222, column: 54)
!8248 = !DILocation(line: 2223, column: 39, scope: !8247)
!8249 = !DILocation(line: 2223, column: 45, scope: !8247)
!8250 = !DILocation(line: 2223, column: 51, scope: !8247)
!8251 = !DILocation(line: 2223, column: 5, scope: !8247)
!8252 = !DILocation(line: 2224, column: 4, scope: !8247)
!8253 = !DILocation(line: 2225, column: 3, scope: !8234)
!8254 = !DILocation(line: 2219, column: 49, scope: !8231)
!8255 = !DILocation(line: 2219, column: 55, scope: !8231)
!8256 = !DILocation(line: 2219, column: 47, scope: !8231)
!8257 = !DILocation(line: 2219, column: 3, scope: !8231)
!8258 = distinct !{!8258, !8232, !8259}
!8259 = !DILocation(line: 2225, column: 3, scope: !8226)
!8260 = !DILocation(line: 2226, column: 2, scope: !8223)
!8261 = !DILocation(line: 2227, column: 1, scope: !8213)
!8262 = distinct !DISubprogram(name: "markMultiResolutionChildArc", scope: !3, file: !3, line: 2197, type: !8263, scopeLine: 2198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!8263 = !DISubroutineType(types: !8264)
!8264 = !{null, !198, !198}
!8265 = !DILocalVariable(name: "end_enode", arg: 1, scope: !8262, file: !3, line: 2197, type: !198)
!8266 = !DILocation(line: 2197, column: 51, scope: !8262)
!8267 = !DILocalVariable(name: "enode", arg: 2, scope: !8262, file: !3, line: 2197, type: !198)
!8268 = !DILocation(line: 2197, column: 72, scope: !8262)
!8269 = !DILocalVariable(name: "i", scope: !8262, file: !3, line: 2199, type: !145)
!8270 = !DILocation(line: 2199, column: 6, scope: !8262)
!8271 = !DILocation(line: 2201, column: 9, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 2201, column: 2)
!8273 = !DILocation(line: 2201, column: 7, scope: !8272)
!8274 = !DILocation(line: 2201, column: 14, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 2201, column: 2)
!8276 = !DILocation(line: 2201, column: 18, scope: !8275)
!8277 = !DILocation(line: 2201, column: 25, scope: !8275)
!8278 = !DILocation(line: 2201, column: 16, scope: !8275)
!8279 = !DILocation(line: 2201, column: 2, scope: !8272)
!8280 = !DILocalVariable(name: "earc", scope: !8281, file: !3, line: 2202, type: !1531)
!8281 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 2201, column: 38)
!8282 = !DILocation(line: 2202, column: 12, scope: !8281)
!8283 = !DILocation(line: 2202, column: 30, scope: !8281)
!8284 = !DILocation(line: 2202, column: 37, scope: !8281)
!8285 = !DILocation(line: 2202, column: 42, scope: !8281)
!8286 = !DILocation(line: 2204, column: 7, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2204, column: 7)
!8288 = !DILocation(line: 2204, column: 13, scope: !8287)
!8289 = !DILocation(line: 2204, column: 18, scope: !8287)
!8290 = !DILocation(line: 2204, column: 7, scope: !8281)
!8291 = !DILocation(line: 2205, column: 4, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 2204, column: 31)
!8293 = !DILocation(line: 2205, column: 10, scope: !8292)
!8294 = !DILocation(line: 2205, column: 15, scope: !8292)
!8295 = !DILocation(line: 2207, column: 8, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 2207, column: 8)
!8297 = !DILocation(line: 2207, column: 14, scope: !8296)
!8298 = !DILocation(line: 2207, column: 20, scope: !8296)
!8299 = !DILocation(line: 2207, column: 27, scope: !8296)
!8300 = !DILocation(line: 2207, column: 31, scope: !8296)
!8301 = !DILocation(line: 2207, column: 34, scope: !8296)
!8302 = !DILocation(line: 2207, column: 40, scope: !8296)
!8303 = !DILocation(line: 2207, column: 48, scope: !8296)
!8304 = !DILocation(line: 2207, column: 45, scope: !8296)
!8305 = !DILocation(line: 2207, column: 8, scope: !8292)
!8306 = !DILocation(line: 2208, column: 33, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 2207, column: 59)
!8308 = !DILocation(line: 2208, column: 44, scope: !8307)
!8309 = !DILocation(line: 2208, column: 50, scope: !8307)
!8310 = !DILocation(line: 2208, column: 5, scope: !8307)
!8311 = !DILocation(line: 2209, column: 4, scope: !8307)
!8312 = !DILocation(line: 2210, column: 4, scope: !8292)
!8313 = !DILocation(line: 2212, column: 2, scope: !8281)
!8314 = !DILocation(line: 2201, column: 34, scope: !8275)
!8315 = !DILocation(line: 2201, column: 2, scope: !8275)
!8316 = distinct !{!8316, !8279, !8317}
!8317 = !DILocation(line: 2212, column: 2, scope: !8272)
!8318 = !DILocation(line: 2213, column: 1, scope: !8262)
!8319 = distinct !DISubprogram(name: "cloneArc", scope: !3, file: !3, line: 456, type: !8320, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!8320 = !DISubroutineType(types: !8321)
!8321 = !{!1515, !108, !108, !1515, !279, !467, !467}
!8322 = !DILocalVariable(name: "rg", arg: 1, scope: !8319, file: !3, line: 456, type: !108)
!8323 = !DILocation(line: 456, column: 35, scope: !8319)
!8324 = !DILocalVariable(name: "src_rg", arg: 2, scope: !8319, file: !3, line: 456, type: !108)
!8325 = !DILocation(line: 456, column: 49, scope: !8319)
!8326 = !DILocalVariable(name: "src_arc", arg: 3, scope: !8319, file: !3, line: 456, type: !1515)
!8327 = !DILocation(line: 456, column: 65, scope: !8319)
!8328 = !DILocalVariable(name: "ptr_hash", arg: 4, scope: !8319, file: !3, line: 456, type: !279)
!8329 = !DILocation(line: 456, column: 81, scope: !8319)
!8330 = !DILocalVariable(name: "side_string", arg: 5, scope: !8319, file: !3, line: 456, type: !467)
!8331 = !DILocation(line: 456, column: 97, scope: !8319)
!8332 = !DILocalVariable(name: "num_string", arg: 6, scope: !8319, file: !3, line: 456, type: !467)
!8333 = !DILocation(line: 456, column: 116, scope: !8319)
!8334 = !DILocalVariable(name: "src_edge", scope: !8319, file: !3, line: 458, type: !1743)
!8335 = !DILocation(line: 458, column: 11, scope: !8319)
!8336 = !DILocalVariable(name: "arc", scope: !8319, file: !3, line: 459, type: !1515)
!8337 = !DILocation(line: 459, column: 11, scope: !8319)
!8338 = !DILocation(line: 461, column: 18, scope: !8319)
!8339 = !DILocation(line: 461, column: 8, scope: !8319)
!8340 = !DILocation(line: 461, column: 6, scope: !8319)
!8341 = !DILocation(line: 463, column: 31, scope: !8319)
!8342 = !DILocation(line: 463, column: 41, scope: !8319)
!8343 = !DILocation(line: 463, column: 50, scope: !8319)
!8344 = !DILocation(line: 463, column: 14, scope: !8319)
!8345 = !DILocation(line: 463, column: 2, scope: !8319)
!8346 = !DILocation(line: 463, column: 7, scope: !8319)
!8347 = !DILocation(line: 463, column: 12, scope: !8319)
!8348 = !DILocation(line: 464, column: 31, scope: !8319)
!8349 = !DILocation(line: 464, column: 41, scope: !8319)
!8350 = !DILocation(line: 464, column: 50, scope: !8319)
!8351 = !DILocation(line: 464, column: 14, scope: !8319)
!8352 = !DILocation(line: 464, column: 2, scope: !8319)
!8353 = !DILocation(line: 464, column: 7, scope: !8319)
!8354 = !DILocation(line: 464, column: 12, scope: !8319)
!8355 = !DILocation(line: 466, column: 2, scope: !8319)
!8356 = !DILocation(line: 466, column: 7, scope: !8319)
!8357 = !DILocation(line: 466, column: 13, scope: !8319)
!8358 = !DILocation(line: 466, column: 19, scope: !8319)
!8359 = !DILocation(line: 467, column: 2, scope: !8319)
!8360 = !DILocation(line: 467, column: 7, scope: !8319)
!8361 = !DILocation(line: 467, column: 13, scope: !8319)
!8362 = !DILocation(line: 467, column: 19, scope: !8319)
!8363 = !DILocation(line: 469, column: 16, scope: !8319)
!8364 = !DILocation(line: 469, column: 25, scope: !8319)
!8365 = !DILocation(line: 469, column: 2, scope: !8319)
!8366 = !DILocation(line: 469, column: 7, scope: !8319)
!8367 = !DILocation(line: 469, column: 14, scope: !8319)
!8368 = !DILocation(line: 471, column: 15, scope: !8319)
!8369 = !DILocation(line: 471, column: 24, scope: !8319)
!8370 = !DILocation(line: 471, column: 2, scope: !8319)
!8371 = !DILocation(line: 471, column: 7, scope: !8319)
!8372 = !DILocation(line: 471, column: 13, scope: !8319)
!8373 = !DILocation(line: 473, column: 18, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 473, column: 2)
!8375 = !DILocation(line: 473, column: 27, scope: !8374)
!8376 = !DILocation(line: 473, column: 33, scope: !8374)
!8377 = !DILocation(line: 473, column: 16, scope: !8374)
!8378 = !DILocation(line: 473, column: 7, scope: !8374)
!8379 = !DILocation(line: 473, column: 40, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 473, column: 2)
!8381 = !DILocation(line: 473, column: 2, scope: !8374)
!8382 = !DILocalVariable(name: "edge", scope: !8383, file: !3, line: 474, type: !1743)
!8383 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 473, column: 77)
!8384 = !DILocation(line: 474, column: 12, scope: !8383)
!8385 = !DILocation(line: 476, column: 10, scope: !8383)
!8386 = !DILocation(line: 476, column: 8, scope: !8383)
!8387 = !DILocation(line: 478, column: 14, scope: !8383)
!8388 = !DILocation(line: 478, column: 20, scope: !8383)
!8389 = !DILocation(line: 478, column: 26, scope: !8383)
!8390 = !DILocation(line: 478, column: 36, scope: !8383)
!8391 = !DILocation(line: 478, column: 3, scope: !8383)
!8392 = !DILocation(line: 479, column: 14, scope: !8383)
!8393 = !DILocation(line: 479, column: 20, scope: !8383)
!8394 = !DILocation(line: 479, column: 26, scope: !8383)
!8395 = !DILocation(line: 479, column: 36, scope: !8383)
!8396 = !DILocation(line: 479, column: 3, scope: !8383)
!8397 = !DILocation(line: 480, column: 14, scope: !8383)
!8398 = !DILocation(line: 480, column: 20, scope: !8383)
!8399 = !DILocation(line: 480, column: 29, scope: !8383)
!8400 = !DILocation(line: 480, column: 39, scope: !8383)
!8401 = !DILocation(line: 480, column: 3, scope: !8383)
!8402 = !DILocation(line: 482, column: 18, scope: !8383)
!8403 = !DILocation(line: 482, column: 28, scope: !8383)
!8404 = !DILocation(line: 482, column: 3, scope: !8383)
!8405 = !DILocation(line: 482, column: 9, scope: !8383)
!8406 = !DILocation(line: 482, column: 16, scope: !8383)
!8407 = !DILocation(line: 483, column: 17, scope: !8383)
!8408 = !DILocation(line: 483, column: 27, scope: !8383)
!8409 = !DILocation(line: 483, column: 3, scope: !8383)
!8410 = !DILocation(line: 483, column: 9, scope: !8383)
!8411 = !DILocation(line: 483, column: 15, scope: !8383)
!8412 = !DILocation(line: 484, column: 20, scope: !8383)
!8413 = !DILocation(line: 484, column: 30, scope: !8383)
!8414 = !DILocation(line: 484, column: 3, scope: !8383)
!8415 = !DILocation(line: 484, column: 9, scope: !8383)
!8416 = !DILocation(line: 484, column: 18, scope: !8383)
!8417 = !DILocation(line: 486, column: 7, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 486, column: 7)
!8419 = !DILocation(line: 486, column: 17, scope: !8418)
!8420 = !DILocation(line: 486, column: 22, scope: !8418)
!8421 = !DILocation(line: 486, column: 7, scope: !8383)
!8422 = !DILocalVariable(name: "name", scope: !8423, file: !3, line: 487, type: !337)
!8423 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 486, column: 31)
!8424 = !DILocation(line: 487, column: 9, scope: !8423)
!8425 = !DILocation(line: 488, column: 23, scope: !8423)
!8426 = !DILocation(line: 488, column: 29, scope: !8423)
!8427 = !DILocation(line: 488, column: 39, scope: !8423)
!8428 = !DILocation(line: 488, column: 45, scope: !8423)
!8429 = !DILocation(line: 488, column: 51, scope: !8423)
!8430 = !DILocation(line: 488, column: 55, scope: !8423)
!8431 = !DILocation(line: 488, column: 66, scope: !8423)
!8432 = !DILocation(line: 488, column: 79, scope: !8423)
!8433 = !DILocation(line: 488, column: 4, scope: !8423)
!8434 = !DILocation(line: 489, column: 42, scope: !8423)
!8435 = !DILocation(line: 489, column: 52, scope: !8423)
!8436 = !DILocation(line: 489, column: 58, scope: !8423)
!8437 = !DILocation(line: 489, column: 64, scope: !8423)
!8438 = !DILocation(line: 489, column: 68, scope: !8423)
!8439 = !DILocation(line: 489, column: 79, scope: !8423)
!8440 = !DILocation(line: 489, column: 87, scope: !8423)
!8441 = !DILocation(line: 489, column: 91, scope: !8423)
!8442 = !DILocation(line: 489, column: 95, scope: !8423)
!8443 = !DILocation(line: 489, column: 17, scope: !8423)
!8444 = !DILocation(line: 489, column: 4, scope: !8423)
!8445 = !DILocation(line: 489, column: 10, scope: !8423)
!8446 = !DILocation(line: 489, column: 15, scope: !8423)
!8447 = !DILocation(line: 490, column: 4, scope: !8423)
!8448 = !DILocation(line: 490, column: 10, scope: !8423)
!8449 = !DILocation(line: 490, column: 16, scope: !8423)
!8450 = !DILocation(line: 490, column: 21, scope: !8423)
!8451 = !DILocation(line: 491, column: 21, scope: !8423)
!8452 = !DILocation(line: 491, column: 31, scope: !8423)
!8453 = !DILocation(line: 491, column: 41, scope: !8423)
!8454 = !DILocation(line: 491, column: 47, scope: !8423)
!8455 = !DILocation(line: 491, column: 53, scope: !8423)
!8456 = !DILocation(line: 491, column: 4, scope: !8423)
!8457 = !DILocation(line: 492, column: 3, scope: !8423)
!8458 = !DILocation(line: 494, column: 16, scope: !8383)
!8459 = !DILocation(line: 494, column: 21, scope: !8383)
!8460 = !DILocation(line: 494, column: 28, scope: !8383)
!8461 = !DILocation(line: 494, column: 3, scope: !8383)
!8462 = !DILocation(line: 495, column: 2, scope: !8383)
!8463 = !DILocation(line: 473, column: 61, scope: !8380)
!8464 = !DILocation(line: 473, column: 71, scope: !8380)
!8465 = !DILocation(line: 473, column: 59, scope: !8380)
!8466 = !DILocation(line: 473, column: 2, scope: !8380)
!8467 = distinct !{!8467, !8381, !8468}
!8468 = !DILocation(line: 495, column: 2, scope: !8374)
!8469 = !DILocation(line: 497, column: 9, scope: !8319)
!8470 = !DILocation(line: 497, column: 2, scope: !8319)
!8471 = distinct !DISubprogram(name: "cloneControl", scope: !3, file: !3, line: 430, type: !8472, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!8472 = !DISubroutineType(types: !8473)
!8473 = !{!1908, !108, !108, !1908, !279, !467, !467}
!8474 = !DILocalVariable(name: "rg", arg: 1, scope: !8471, file: !3, line: 430, type: !108)
!8475 = !DILocation(line: 430, column: 43, scope: !8471)
!8476 = !DILocalVariable(name: "src_rg", arg: 2, scope: !8471, file: !3, line: 430, type: !108)
!8477 = !DILocation(line: 430, column: 57, scope: !8471)
!8478 = !DILocalVariable(name: "src_ctrl", arg: 3, scope: !8471, file: !3, line: 430, type: !1908)
!8479 = !DILocation(line: 430, column: 77, scope: !8471)
!8480 = !DILocalVariable(name: "ptr_hash", arg: 4, scope: !8471, file: !3, line: 430, type: !279)
!8481 = !DILocation(line: 430, column: 94, scope: !8471)
!8482 = !DILocalVariable(name: "side_string", arg: 5, scope: !8471, file: !3, line: 430, type: !467)
!8483 = !DILocation(line: 430, column: 110, scope: !8471)
!8484 = !DILocalVariable(name: "num_string", arg: 6, scope: !8471, file: !3, line: 430, type: !467)
!8485 = !DILocation(line: 430, column: 129, scope: !8471)
!8486 = !DILocalVariable(name: "ctrl", scope: !8471, file: !3, line: 432, type: !1908)
!8487 = !DILocation(line: 432, column: 14, scope: !8471)
!8488 = !DILocalVariable(name: "name", scope: !8471, file: !3, line: 433, type: !337)
!8489 = !DILocation(line: 433, column: 7, scope: !8471)
!8490 = !DILocation(line: 435, column: 23, scope: !8471)
!8491 = !DILocation(line: 435, column: 9, scope: !8471)
!8492 = !DILocation(line: 435, column: 7, scope: !8471)
!8493 = !DILocation(line: 437, column: 13, scope: !8471)
!8494 = !DILocation(line: 437, column: 19, scope: !8471)
!8495 = !DILocation(line: 437, column: 25, scope: !8471)
!8496 = !DILocation(line: 437, column: 35, scope: !8471)
!8497 = !DILocation(line: 437, column: 2, scope: !8471)
!8498 = !DILocation(line: 438, column: 13, scope: !8471)
!8499 = !DILocation(line: 438, column: 19, scope: !8471)
!8500 = !DILocation(line: 438, column: 25, scope: !8471)
!8501 = !DILocation(line: 438, column: 35, scope: !8471)
!8502 = !DILocation(line: 438, column: 2, scope: !8471)
!8503 = !DILocation(line: 439, column: 13, scope: !8471)
!8504 = !DILocation(line: 439, column: 19, scope: !8471)
!8505 = !DILocation(line: 439, column: 28, scope: !8471)
!8506 = !DILocation(line: 439, column: 38, scope: !8471)
!8507 = !DILocation(line: 439, column: 2, scope: !8471)
!8508 = !DILocation(line: 440, column: 13, scope: !8471)
!8509 = !DILocation(line: 440, column: 19, scope: !8471)
!8510 = !DILocation(line: 440, column: 27, scope: !8471)
!8511 = !DILocation(line: 440, column: 37, scope: !8471)
!8512 = !DILocation(line: 440, column: 2, scope: !8471)
!8513 = !DILocation(line: 442, column: 20, scope: !8471)
!8514 = !DILocation(line: 442, column: 30, scope: !8471)
!8515 = !DILocation(line: 442, column: 2, scope: !8471)
!8516 = !DILocation(line: 442, column: 8, scope: !8471)
!8517 = !DILocation(line: 442, column: 18, scope: !8471)
!8518 = !DILocation(line: 443, column: 15, scope: !8471)
!8519 = !DILocation(line: 443, column: 25, scope: !8471)
!8520 = !DILocation(line: 443, column: 2, scope: !8471)
!8521 = !DILocation(line: 443, column: 8, scope: !8471)
!8522 = !DILocation(line: 443, column: 13, scope: !8471)
!8523 = !DILocation(line: 445, column: 21, scope: !8471)
!8524 = !DILocation(line: 445, column: 27, scope: !8471)
!8525 = !DILocation(line: 445, column: 37, scope: !8471)
!8526 = !DILocation(line: 445, column: 43, scope: !8471)
!8527 = !DILocation(line: 445, column: 49, scope: !8471)
!8528 = !DILocation(line: 445, column: 53, scope: !8471)
!8529 = !DILocation(line: 445, column: 64, scope: !8471)
!8530 = !DILocation(line: 445, column: 77, scope: !8471)
!8531 = !DILocation(line: 445, column: 2, scope: !8471)
!8532 = !DILocation(line: 446, column: 40, scope: !8471)
!8533 = !DILocation(line: 446, column: 50, scope: !8471)
!8534 = !DILocation(line: 446, column: 56, scope: !8471)
!8535 = !DILocation(line: 446, column: 62, scope: !8471)
!8536 = !DILocation(line: 446, column: 66, scope: !8471)
!8537 = !DILocation(line: 446, column: 77, scope: !8471)
!8538 = !DILocation(line: 446, column: 85, scope: !8471)
!8539 = !DILocation(line: 446, column: 89, scope: !8471)
!8540 = !DILocation(line: 446, column: 93, scope: !8471)
!8541 = !DILocation(line: 446, column: 15, scope: !8471)
!8542 = !DILocation(line: 446, column: 2, scope: !8471)
!8543 = !DILocation(line: 446, column: 8, scope: !8471)
!8544 = !DILocation(line: 446, column: 13, scope: !8471)
!8545 = !DILocation(line: 447, column: 2, scope: !8471)
!8546 = !DILocation(line: 447, column: 8, scope: !8471)
!8547 = !DILocation(line: 447, column: 14, scope: !8471)
!8548 = !DILocation(line: 447, column: 19, scope: !8471)
!8549 = !DILocation(line: 448, column: 19, scope: !8471)
!8550 = !DILocation(line: 448, column: 29, scope: !8471)
!8551 = !DILocation(line: 448, column: 39, scope: !8471)
!8552 = !DILocation(line: 448, column: 45, scope: !8471)
!8553 = !DILocation(line: 448, column: 51, scope: !8471)
!8554 = !DILocation(line: 448, column: 2, scope: !8471)
!8555 = !DILocation(line: 450, column: 15, scope: !8471)
!8556 = !DILocation(line: 450, column: 25, scope: !8471)
!8557 = !DILocation(line: 450, column: 2, scope: !8471)
!8558 = !DILocation(line: 450, column: 8, scope: !8471)
!8559 = !DILocation(line: 450, column: 13, scope: !8471)
!8560 = !DILocation(line: 451, column: 20, scope: !8471)
!8561 = !DILocation(line: 451, column: 30, scope: !8471)
!8562 = !DILocation(line: 451, column: 2, scope: !8471)
!8563 = !DILocation(line: 451, column: 8, scope: !8471)
!8564 = !DILocation(line: 451, column: 18, scope: !8471)
!8565 = !DILocation(line: 453, column: 9, scope: !8471)
!8566 = !DILocation(line: 453, column: 2, scope: !8471)
!8567 = distinct !DISubprogram(name: "renameTemplateBone", scope: !3, file: !3, line: 400, type: !8568, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1591)
!8568 = !DISubroutineType(types: !8569)
!8569 = !{null, !467, !467, !182, !467, !467}
!8570 = !DILocalVariable(name: "name", arg: 1, scope: !8567, file: !3, line: 400, type: !467)
!8571 = !DILocation(line: 400, column: 38, scope: !8567)
!8572 = !DILocalVariable(name: "template_name", arg: 2, scope: !8567, file: !3, line: 400, type: !467)
!8573 = !DILocation(line: 400, column: 50, scope: !8567)
!8574 = !DILocalVariable(name: "editbones", arg: 3, scope: !8567, file: !3, line: 400, type: !182)
!8575 = !DILocation(line: 400, column: 75, scope: !8567)
!8576 = !DILocalVariable(name: "side_string", arg: 4, scope: !8567, file: !3, line: 400, type: !467)
!8577 = !DILocation(line: 400, column: 92, scope: !8567)
!8578 = !DILocalVariable(name: "num_string", arg: 5, scope: !8567, file: !3, line: 400, type: !467)
!8579 = !DILocation(line: 400, column: 111, scope: !8567)
!8580 = !DILocalVariable(name: "i", scope: !8567, file: !3, line: 402, type: !145)
!8581 = !DILocation(line: 402, column: 6, scope: !8567)
!8582 = !DILocalVariable(name: "j", scope: !8567, file: !3, line: 402, type: !145)
!8583 = !DILocation(line: 402, column: 9, scope: !8567)
!8584 = !DILocation(line: 404, column: 9, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 404, column: 2)
!8586 = !DILocation(line: 404, column: 16, scope: !8585)
!8587 = !DILocation(line: 404, column: 7, scope: !8585)
!8588 = !DILocation(line: 404, column: 21, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 404, column: 2)
!8590 = !DILocation(line: 404, column: 23, scope: !8589)
!8591 = !DILocation(line: 404, column: 43, scope: !8589)
!8592 = !DILocation(line: 404, column: 46, scope: !8589)
!8593 = !DILocation(line: 404, column: 48, scope: !8589)
!8594 = !DILocation(line: 404, column: 68, scope: !8589)
!8595 = !DILocation(line: 404, column: 71, scope: !8589)
!8596 = !DILocation(line: 404, column: 85, scope: !8589)
!8597 = !DILocation(line: 404, column: 88, scope: !8589)
!8598 = !DILocation(line: 0, scope: !8589)
!8599 = !DILocation(line: 404, column: 2, scope: !8585)
!8600 = !DILocation(line: 405, column: 7, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 405, column: 7)
!8602 = distinct !DILexicalBlock(scope: !8589, file: !3, line: 404, column: 102)
!8603 = !DILocation(line: 405, column: 21, scope: !8601)
!8604 = !DILocation(line: 405, column: 24, scope: !8601)
!8605 = !DILocation(line: 405, column: 7, scope: !8602)
!8606 = !DILocation(line: 406, column: 8, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 406, column: 8)
!8608 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 405, column: 32)
!8609 = !DILocation(line: 406, column: 22, scope: !8607)
!8610 = !DILocation(line: 406, column: 24, scope: !8607)
!8611 = !DILocation(line: 406, column: 29, scope: !8607)
!8612 = !DILocation(line: 406, column: 36, scope: !8607)
!8613 = !DILocation(line: 406, column: 39, scope: !8607)
!8614 = !DILocation(line: 406, column: 53, scope: !8607)
!8615 = !DILocation(line: 406, column: 55, scope: !8607)
!8616 = !DILocation(line: 406, column: 60, scope: !8607)
!8617 = !DILocation(line: 406, column: 8, scope: !8608)
!8618 = !DILocation(line: 407, column: 27, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 406, column: 68)
!8620 = !DILocation(line: 407, column: 34, scope: !8619)
!8621 = !DILocation(line: 407, column: 32, scope: !8619)
!8622 = !DILocation(line: 407, column: 37, scope: !8619)
!8623 = !DILocation(line: 407, column: 10, scope: !8619)
!8624 = !DILocation(line: 407, column: 7, scope: !8619)
!8625 = !DILocation(line: 408, column: 6, scope: !8619)
!8626 = !DILocation(line: 409, column: 4, scope: !8619)
!8627 = !DILocation(line: 410, column: 13, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 410, column: 13)
!8629 = !DILocation(line: 410, column: 27, scope: !8628)
!8630 = !DILocation(line: 410, column: 29, scope: !8628)
!8631 = !DILocation(line: 410, column: 34, scope: !8628)
!8632 = !DILocation(line: 410, column: 41, scope: !8628)
!8633 = !DILocation(line: 410, column: 44, scope: !8628)
!8634 = !DILocation(line: 410, column: 58, scope: !8628)
!8635 = !DILocation(line: 410, column: 60, scope: !8628)
!8636 = !DILocation(line: 410, column: 65, scope: !8628)
!8637 = !DILocation(line: 410, column: 13, scope: !8607)
!8638 = !DILocation(line: 411, column: 27, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 410, column: 73)
!8640 = !DILocation(line: 411, column: 34, scope: !8639)
!8641 = !DILocation(line: 411, column: 32, scope: !8639)
!8642 = !DILocation(line: 411, column: 37, scope: !8639)
!8643 = !DILocation(line: 411, column: 10, scope: !8639)
!8644 = !DILocation(line: 411, column: 7, scope: !8639)
!8645 = !DILocation(line: 412, column: 6, scope: !8639)
!8646 = !DILocation(line: 413, column: 4, scope: !8639)
!8647 = !DILocation(line: 415, column: 15, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 414, column: 9)
!8649 = !DILocation(line: 415, column: 29, scope: !8648)
!8650 = !DILocation(line: 415, column: 5, scope: !8648)
!8651 = !DILocation(line: 415, column: 10, scope: !8648)
!8652 = !DILocation(line: 415, column: 13, scope: !8648)
!8653 = !DILocation(line: 416, column: 6, scope: !8648)
!8654 = !DILocation(line: 418, column: 3, scope: !8608)
!8655 = !DILocation(line: 420, column: 14, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 419, column: 8)
!8657 = !DILocation(line: 420, column: 28, scope: !8656)
!8658 = !DILocation(line: 420, column: 4, scope: !8656)
!8659 = !DILocation(line: 420, column: 9, scope: !8656)
!8660 = !DILocation(line: 420, column: 12, scope: !8656)
!8661 = !DILocation(line: 421, column: 5, scope: !8656)
!8662 = !DILocation(line: 423, column: 2, scope: !8602)
!8663 = !DILocation(line: 404, column: 98, scope: !8589)
!8664 = !DILocation(line: 404, column: 2, scope: !8589)
!8665 = distinct !{!8665, !8599, !8666}
!8666 = !DILocation(line: 423, column: 2, scope: !8585)
!8667 = !DILocation(line: 425, column: 2, scope: !8567)
!8668 = !DILocation(line: 425, column: 7, scope: !8567)
!8669 = !DILocation(line: 425, column: 10, scope: !8567)
!8670 = !DILocation(line: 427, column: 23, scope: !8567)
!8671 = !DILocation(line: 427, column: 34, scope: !8567)
!8672 = !DILocation(line: 427, column: 2, scope: !8567)
!8673 = !DILocation(line: 428, column: 1, scope: !8567)
