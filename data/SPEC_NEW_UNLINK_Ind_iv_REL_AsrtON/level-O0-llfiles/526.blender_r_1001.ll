; ModuleID = 'blender/source/blender/editors/object/object_vgroup.c'
source_filename = "blender/source/blender/editors/object/object_vgroup.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.bNodeTree = type opaque
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.RNG = type opaque
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type opaque
%struct.BodySpring = type opaque
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type opaque
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.PTCacheEdit = type opaque
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type { i32*, i32 }
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.EditBone = type opaque
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.Key = type opaque
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.bDeformGroup = type { %struct.bDeformGroup*, %struct.bDeformGroup*, [64 x i8], i8, [7 x i8] }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.ExplodeModifierData = type { %struct.ModifierData, i32*, i16, i16, float, [64 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.ParticleCacheKey = type opaque
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.Cloth = type opaque
%struct.ClothSimSettings = type { %struct.LinkNode*, float, float, float, [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i8], %struct.EffectorWeights* }
%struct.ClothCollSettings = type { %struct.LinkNode*, float, float, float, float, float, float, i32, i16, i16, %struct.Group*, i16, i16, i32 }
%struct.LatticeDeformData = type opaque
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.KDTree = type opaque
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type opaque
%struct.bContext = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.StructRNA = type opaque
%struct.PropertyRNA = type opaque
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.CollectionPointerLink = type { %struct.CollectionPointerLink*, %struct.CollectionPointerLink*, %struct.PointerRNA }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BVHTreeFromMesh = type { %struct.BVHTree*, void (i8*, i32, float*, %struct.BVHTreeNearest*)*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, %struct.MVert*, %struct.MEdge*, %struct.MFace*, i8, i8, i8, float, i8*, i8 }
%struct.BVHTreeNearest = type { i32, [3 x float], [3 x float], float, i32 }
%struct.BVHTreeRay = type { [3 x float], [3 x float], float }
%struct.BVHTreeRayHit = type { i32, [3 x float], [3 x float], float, i32 }

@.str = private unnamed_addr constant [6 x i8] c"Group\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [19 x i8] c"lattice deformVert\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [22 x i8] c"vgroup parray from me\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@__func__.ED_vgroup_array_copy = private unnamed_addr constant [21 x i8] c"ED_vgroup_array_copy\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@WT_vertex_group_select_item = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.176, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.178, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.179, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.181, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.182, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.184, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.185, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.186, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@__func__.ED_vgroup_subset_from_select_type = private unnamed_addr constant [34 x i8] c"ED_vgroup_subset_from_select_type\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"Add Vertex Group\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"OBJECT_OT_vertex_group_add\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"Add a new vertex group to the active object\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Remove Vertex Group\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"OBJECT_OT_vertex_group_remove\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"Delete the active or all vertex groups from the active object\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"All\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Remove all vertex groups\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"Assign to Vertex Group\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"OBJECT_OT_vertex_group_assign\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"Assign the selected vertices to the active vertex group\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"Assign to New Group\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"OBJECT_OT_vertex_group_assign_new\00", align 1
@.str.17 = private unnamed_addr constant [51 x i8] c"Assign the selected vertices to a new vertex group\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"Remove from Vertex Group\00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"OBJECT_OT_vertex_group_remove_from\00", align 1
@.str.20 = private unnamed_addr constant [64 x i8] c"Remove the selected vertices from active or all vertex group(s)\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"use_all_groups\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"All Groups\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"Remove from all groups\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"use_all_verts\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"All Verts\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"Clear the active group\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"Select Vertex Group\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"OBJECT_OT_vertex_group_select\00", align 1
@.str.29 = private unnamed_addr constant [60 x i8] c"Select all the vertices assigned to the active vertex group\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"Deselect Vertex Group\00", align 1
@.str.31 = private unnamed_addr constant [32 x i8] c"OBJECT_OT_vertex_group_deselect\00", align 1
@.str.32 = private unnamed_addr constant [67 x i8] c"Deselect all selected vertices assigned to the active vertex group\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"Copy Vertex Group\00", align 1
@.str.34 = private unnamed_addr constant [28 x i8] c"OBJECT_OT_vertex_group_copy\00", align 1
@.str.35 = private unnamed_addr constant [39 x i8] c"Make a copy of the active vertex group\00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"Vertex Group Levels\00", align 1
@.str.37 = private unnamed_addr constant [30 x i8] c"OBJECT_OT_vertex_group_levels\00", align 1
@.str.38 = private unnamed_addr constant [83 x i8] c"Add some offset and multiply with some gain the weights of the active vertex group\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"Value to add to weights\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"gain\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"Gain\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"Value to multiply weights by\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"Normalize Vertex Group\00", align 1
@.str.46 = private unnamed_addr constant [33 x i8] c"OBJECT_OT_vertex_group_normalize\00", align 1
@.str.47 = private unnamed_addr constant [83 x i8] c"Normalize weights of the active vertex group, so that the highest ones are now 1.0\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"Normalize All Vertex Groups\00", align 1
@.str.49 = private unnamed_addr constant [37 x i8] c"OBJECT_OT_vertex_group_normalize_all\00", align 1
@.str.50 = private unnamed_addr constant [99 x i8] c"Normalize all weights of all vertex groups, so that for each vertex, the sum of all weights is 1.0\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"lock_active\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"Lock Active\00", align 1
@.str.53 = private unnamed_addr constant [61 x i8] c"Keep the values of the active group while normalizing others\00", align 1
@.str.54 = private unnamed_addr constant [24 x i8] c"Fix Vertex Group Deform\00", align 1
@.str.55 = private unnamed_addr constant [27 x i8] c"OBJECT_OT_vertex_group_fix\00", align 1
@.str.56 = private unnamed_addr constant [133 x i8] c"Modify the position of selected vertices by changing only their respective groups' weights (this tool may be slow for many vertices)\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"dist\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"Distance\00", align 1
@.str.59 = private unnamed_addr constant [24 x i8] c"The distance to move to\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"strength\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"Strength\00", align 1
@.str.62 = private unnamed_addr constant [53 x i8] c"The distance moved can be changed by this multiplier\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"accuracy\00", align 1
@.str.64 = private unnamed_addr constant [19 x i8] c"Change Sensitivity\00", align 1
@.str.65 = private unnamed_addr constant [83 x i8] c"Change the amount weights are altered with each iteration: lower values are slower\00", align 1
@.str.66 = private unnamed_addr constant [33 x i8] c"Change the Lock On Vertex Groups\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"OBJECT_OT_vertex_group_lock\00", align 1
@.str.68 = private unnamed_addr constant [60 x i8] c"Change the lock state of all vertex groups of active object\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@vgroup_lock_actions = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.201, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.204, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.207, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.208, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.210, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3856
@.str.70 = private unnamed_addr constant [7 x i8] c"Action\00", align 1
@.str.71 = private unnamed_addr constant [40 x i8] c"Lock action to execute on vertex groups\00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"Invert Vertex Group\00", align 1
@.str.73 = private unnamed_addr constant [30 x i8] c"OBJECT_OT_vertex_group_invert\00", align 1
@.str.74 = private unnamed_addr constant [37 x i8] c"Invert active vertex group's weights\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"auto_assign\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"Add Weights\00", align 1
@.str.77 = private unnamed_addr constant [61 x i8] c"Add verts from groups that have zero weight before inverting\00", align 1
@.str.78 = private unnamed_addr constant [12 x i8] c"auto_remove\00", align 1
@.str.79 = private unnamed_addr constant [15 x i8] c"Remove Weights\00", align 1
@.str.80 = private unnamed_addr constant [63 x i8] c"Remove verts from groups that have zero weight after inverting\00", align 1
@.str.81 = private unnamed_addr constant [19 x i8] c"Blend Vertex Group\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"OBJECT_OT_vertex_group_blend\00", align 1
@.str.83 = private unnamed_addr constant [67 x i8] c"Blend selected vertex weights with unselected for the active group\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"factor\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"Factor\00", align 1
@.str.86 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.87 = private unnamed_addr constant [19 x i8] c"Clean Vertex Group\00", align 1
@.str.88 = private unnamed_addr constant [29 x i8] c"OBJECT_OT_vertex_group_clean\00", align 1
@.str.89 = private unnamed_addr constant [55 x i8] c"Remove vertex group assignments which are not required\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"limit\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"Limit\00", align 1
@.str.92 = private unnamed_addr constant [61 x i8] c"Remove vertices which weight is below or equal to this limit\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"keep_single\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"Keep Single\00", align 1
@.str.95 = private unnamed_addr constant [56 x i8] c"Keep verts assigned to at least one group when cleaning\00", align 1
@.str.96 = private unnamed_addr constant [24 x i8] c"Quantize Vertex Weights\00", align 1
@.str.97 = private unnamed_addr constant [32 x i8] c"OBJECT_OT_vertex_group_quantize\00", align 1
@.str.98 = private unnamed_addr constant [39 x i8] c"Set weights to a fixed number of steps\00", align 1
@.str.99 = private unnamed_addr constant [6 x i8] c"steps\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"Steps\00", align 1
@.str.101 = private unnamed_addr constant [32 x i8] c"Number of steps between 0 and 1\00", align 1
@.str.102 = private unnamed_addr constant [35 x i8] c"Limit Number of Weights per Vertex\00", align 1
@.str.103 = private unnamed_addr constant [35 x i8] c"OBJECT_OT_vertex_group_limit_total\00", align 1
@.str.104 = private unnamed_addr constant [95 x i8] c"Limit deform weights associated with a vertex to a specified number by removing lowest weights\00", align 1
@.str.105 = private unnamed_addr constant [33 x i8] c"Maximum number of deform weights\00", align 1
@.str.106 = private unnamed_addr constant [20 x i8] c"Mirror Vertex Group\00", align 1
@.str.107 = private unnamed_addr constant [30 x i8] c"OBJECT_OT_vertex_group_mirror\00", align 1
@.str.108 = private unnamed_addr constant [154 x i8] c"Mirror all vertex groups, flip weights and/or names, editing only selected vertices, flipping when both sides are selected otherwise copy from unselected\00", align 1
@.str.109 = private unnamed_addr constant [15 x i8] c"mirror_weights\00", align 1
@.str.110 = private unnamed_addr constant [15 x i8] c"Mirror Weights\00", align 1
@.str.111 = private unnamed_addr constant [15 x i8] c"Mirror weights\00", align 1
@.str.112 = private unnamed_addr constant [17 x i8] c"flip_group_names\00", align 1
@.str.113 = private unnamed_addr constant [17 x i8] c"Flip Group Names\00", align 1
@.str.114 = private unnamed_addr constant [24 x i8] c"Flip vertex group names\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"all_groups\00", align 1
@.str.116 = private unnamed_addr constant [33 x i8] c"Mirror all vertex groups weights\00", align 1
@.str.117 = private unnamed_addr constant [13 x i8] c"use_topology\00", align 1
@.str.118 = private unnamed_addr constant [16 x i8] c"Topology Mirror\00", align 1
@.str.119 = private unnamed_addr constant [90 x i8] c"Use topology based mirroring (for when both sides of mesh have matching, unique topology)\00", align 1
@.str.120 = private unnamed_addr constant [29 x i8] c"Copy Vertex Groups to Linked\00", align 1
@.str.121 = private unnamed_addr constant [38 x i8] c"OBJECT_OT_vertex_group_copy_to_linked\00", align 1
@.str.122 = private unnamed_addr constant [58 x i8] c"Copy vertex groups to all users of the same geometry data\00", align 1
@.str.123 = private unnamed_addr constant [30 x i8] c"Copy Vertex Group to Selected\00", align 1
@.str.124 = private unnamed_addr constant [40 x i8] c"OBJECT_OT_vertex_group_copy_to_selected\00", align 1
@.str.125 = private unnamed_addr constant [67 x i8] c"Copy vertex groups to other selected objects with matching indices\00", align 1
@.str.126 = private unnamed_addr constant [17 x i8] c"Transfer Weights\00", align 1
@.str.127 = private unnamed_addr constant [39 x i8] c"OBJECT_OT_vertex_group_transfer_weight\00", align 1
@.str.128 = private unnamed_addr constant [51 x i8] c"Transfer weight paint to active from selected mesh\00", align 1
@.str.129 = private unnamed_addr constant [18 x i8] c"group_select_mode\00", align 1
@WT_vertex_group_mode_item = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.221, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.223, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.224, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.225, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3859
@.str.130 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@WT_method_item = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.226, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.228, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.229, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.231, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.232, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.234, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.237, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3861
@.str.131 = private unnamed_addr constant [7 x i8] c"Method\00", align 1
@.str.132 = private unnamed_addr constant [13 x i8] c"replace_mode\00", align 1
@WT_replace_mode_item = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.238, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.239, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.240, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.242, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3863
@.str.133 = private unnamed_addr constant [8 x i8] c"Replace\00", align 1
@.str.134 = private unnamed_addr constant [24 x i8] c"Set Active Vertex Group\00", align 1
@.str.135 = private unnamed_addr constant [34 x i8] c"OBJECT_OT_vertex_group_set_active\00", align 1
@.str.136 = private unnamed_addr constant [28 x i8] c"Set the active vertex group\00", align 1
@.str.137 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@DummyRNA_NULL_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.138 = private unnamed_addr constant [30 x i8] c"Vertex group to set as active\00", align 1
@OBJECT_OT_vertex_group_sort.vgroup_sort_type = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.139, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.141, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3600
@.str.139 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@.str.140 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str.141 = private unnamed_addr constant [15 x i8] c"BONE_HIERARCHY\00", align 1
@.str.142 = private unnamed_addr constant [15 x i8] c"Bone Hierarchy\00", align 1
@.str.143 = private unnamed_addr constant [19 x i8] c"Sort Vertex Groups\00", align 1
@.str.144 = private unnamed_addr constant [28 x i8] c"OBJECT_OT_vertex_group_sort\00", align 1
@.str.145 = private unnamed_addr constant [19 x i8] c"Sort vertex groups\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"sort_type\00", align 1
@.str.147 = private unnamed_addr constant [10 x i8] c"Sort type\00", align 1
@OBJECT_OT_vertex_group_move.vgroup_slot_move = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.150, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3853
@.str.148 = private unnamed_addr constant [3 x i8] c"UP\00", align 1
@.str.149 = private unnamed_addr constant [3 x i8] c"Up\00", align 1
@.str.150 = private unnamed_addr constant [5 x i8] c"DOWN\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"Down\00", align 1
@.str.152 = private unnamed_addr constant [18 x i8] c"Move Vertex Group\00", align 1
@.str.153 = private unnamed_addr constant [28 x i8] c"OBJECT_OT_vertex_group_move\00", align 1
@.str.154 = private unnamed_addr constant [49 x i8] c"Move the active vertex group up/down in the list\00", align 1
@.str.155 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.156 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.157 = private unnamed_addr constant [30 x i8] c"Direction to move, UP or DOWN\00", align 1
@.str.158 = private unnamed_addr constant [25 x i8] c"Paste Weight to Selected\00", align 1
@.str.159 = private unnamed_addr constant [30 x i8] c"OBJECT_OT_vertex_weight_paste\00", align 1
@.str.160 = private unnamed_addr constant [86 x i8] c"Copy this group's weight to other selected verts (disabled if vertex group is locked)\00", align 1
@.str.161 = private unnamed_addr constant [13 x i8] c"weight_group\00", align 1
@.str.162 = private unnamed_addr constant [13 x i8] c"Weight Index\00", align 1
@.str.163 = private unnamed_addr constant [46 x i8] c"Index of source weight in active vertex group\00", align 1
@.str.164 = private unnamed_addr constant [14 x i8] c"Delete Weight\00", align 1
@.str.165 = private unnamed_addr constant [31 x i8] c"OBJECT_OT_vertex_weight_delete\00", align 1
@.str.166 = private unnamed_addr constant [72 x i8] c"Delete this weight from the vertex (disabled if vertex group is locked)\00", align 1
@.str.167 = private unnamed_addr constant [17 x i8] c"Set Active Group\00", align 1
@.str.168 = private unnamed_addr constant [35 x i8] c"OBJECT_OT_vertex_weight_set_active\00", align 1
@.str.169 = private unnamed_addr constant [27 x i8] c"Set as active vertex group\00", align 1
@.str.170 = private unnamed_addr constant [17 x i8] c"Normalize Active\00", align 1
@.str.171 = private unnamed_addr constant [48 x i8] c"OBJECT_OT_vertex_weight_normalize_active_vertex\00", align 1
@.str.172 = private unnamed_addr constant [34 x i8] c"Normalize active vertex's weights\00", align 1
@.str.173 = private unnamed_addr constant [12 x i8] c"Copy Active\00", align 1
@.str.174 = private unnamed_addr constant [29 x i8] c"OBJECT_OT_vertex_weight_copy\00", align 1
@.str.175 = private unnamed_addr constant [37 x i8] c"Copy weights from active to selected\00", align 1
@.str.176 = private unnamed_addr constant [7 x i8] c"ACTIVE\00", align 1
@.str.177 = private unnamed_addr constant [13 x i8] c"Active Group\00", align 1
@.str.178 = private unnamed_addr constant [24 x i8] c"The active Vertex Group\00", align 1
@.str.179 = private unnamed_addr constant [12 x i8] c"BONE_SELECT\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"Selected Pose Bones\00", align 1
@.str.181 = private unnamed_addr constant [40 x i8] c"All Vertex Groups assigned to Selection\00", align 1
@.str.182 = private unnamed_addr constant [12 x i8] c"BONE_DEFORM\00", align 1
@.str.183 = private unnamed_addr constant [18 x i8] c"Deform Pose Bones\00", align 1
@.str.184 = private unnamed_addr constant [43 x i8] c"All Vertex Groups assigned to Deform Bones\00", align 1
@.str.185 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@.str.186 = private unnamed_addr constant [18 x i8] c"All Vertex Groups\00", align 1
@.str.187 = private unnamed_addr constant [11 x i8] c"vgroup del\00", align 1
@.str.188 = private unnamed_addr constant [6 x i8] c"_copy\00", align 1
@.str.189 = private unnamed_addr constant [8 x i8] c"%s_copy\00", align 1
@.str.190 = private unnamed_addr constant [7 x i8] c"Subset\00", align 1
@.str.191 = private unnamed_addr constant [44 x i8] c"Define which subset of Groups shall be used\00", align 1
@.str.192 = private unnamed_addr constant [57 x i8] c"This operator does not support an active mirror modifier\00", align 1
@.str.193 = private unnamed_addr constant [15 x i8] c"deformedPoints\00", align 1
@CD_MASK_BAREMESH = external dso_local constant i64, align 8
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@.str.194 = private unnamed_addr constant [16 x i8] c"BLI_array.verts\00", align 1
@.str.195 = private unnamed_addr constant [15 x i8] c"vertHorzChange\00", align 1
@.str.196 = private unnamed_addr constant [9 x i8] c"distance\00", align 1
@.str.197 = private unnamed_addr constant [14 x i8] c"upDownTracker\00", align 1
@.str.198 = private unnamed_addr constant [15 x i8] c"dwIndexTracker\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"TOGGLE\00", align 1
@.str.200 = private unnamed_addr constant [7 x i8] c"Toggle\00", align 1
@.str.201 = private unnamed_addr constant [87 x i8] c"Unlock all vertex groups if there is at least one locked group, lock all in other case\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"LOCK\00", align 1
@.str.203 = private unnamed_addr constant [5 x i8] c"Lock\00", align 1
@.str.204 = private unnamed_addr constant [23 x i8] c"Lock all vertex groups\00", align 1
@.str.205 = private unnamed_addr constant [7 x i8] c"UNLOCK\00", align 1
@.str.206 = private unnamed_addr constant [7 x i8] c"Unlock\00", align 1
@.str.207 = private unnamed_addr constant [25 x i8] c"Unlock all vertex groups\00", align 1
@.str.208 = private unnamed_addr constant [7 x i8] c"INVERT\00", align 1
@.str.209 = private unnamed_addr constant [7 x i8] c"Invert\00", align 1
@.str.210 = private unnamed_addr constant [43 x i8] c"Invert the lock state of all vertex groups\00", align 1
@.str.211 = private unnamed_addr constant [55 x i8] c"Vertex select needs to be enabled in weight paint mode\00", align 1
@.str.212 = private unnamed_addr constant [26 x i8] c"%d vertex weights limited\00", align 1
@__func__.vgroup_limit_total_subset = private unnamed_addr constant [26 x i8] c"vgroup_limit_total_subset\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@.str.213 = private unnamed_addr constant [92 x i8] c"Copy vertex groups to selected: %d done, %d failed (object data must have matching indices)\00", align 1
@.str.214 = private unnamed_addr constant [43 x i8] c"Failed, active object has no active groups\00", align 1
@.str.215 = private unnamed_addr constant [45 x i8] c"Skipping object '%s' it has no vertex groups\00", align 1
@.str.216 = private unnamed_addr constant [59 x i8] c"Skipping object '%s' only copying from meshes is supported\00", align 1
@.str.217 = private unnamed_addr constant [41 x i8] c"Skipping object '%s' no group '%s' found\00", align 1
@.str.218 = private unnamed_addr constant [59 x i8] c"Failed, no other selected objects with vertex groups found\00", align 1
@.str.219 = private unnamed_addr constant [62 x i8] c"Transfer failed (source mesh does not have any vertex groups)\00", align 1
@.str.220 = private unnamed_addr constant [43 x i8] c"Transfer failed (indices are not matching)\00", align 1
@.str.221 = private unnamed_addr constant [31 x i8] c"WT_REPLACE_ACTIVE_VERTEX_GROUP\00", align 1
@.str.222 = private unnamed_addr constant [7 x i8] c"Active\00", align 1
@.str.223 = private unnamed_addr constant [58 x i8] c"Transfer active vertex group from selected to active mesh\00", align 1
@.str.224 = private unnamed_addr constant [29 x i8] c"WT_REPLACE_ALL_VERTEX_GROUPS\00", align 1
@.str.225 = private unnamed_addr constant [56 x i8] c"Transfer all vertex groups from selected to active mesh\00", align 1
@.str.226 = private unnamed_addr constant [12 x i8] c"WT_BY_INDEX\00", align 1
@.str.227 = private unnamed_addr constant [13 x i8] c"Vertex index\00", align 1
@.str.228 = private unnamed_addr constant [26 x i8] c"Copy for identical meshes\00", align 1
@.str.229 = private unnamed_addr constant [21 x i8] c"WT_BY_NEAREST_VERTEX\00", align 1
@.str.230 = private unnamed_addr constant [15 x i8] c"Nearest vertex\00", align 1
@.str.231 = private unnamed_addr constant [32 x i8] c"Copy weight from closest vertex\00", align 1
@.str.232 = private unnamed_addr constant [19 x i8] c"WT_BY_NEAREST_FACE\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"Nearest face\00", align 1
@.str.234 = private unnamed_addr constant [44 x i8] c"Barycentric interpolation from nearest face\00", align 1
@.str.235 = private unnamed_addr constant [29 x i8] c"WT_BY_NEAREST_VERTEX_IN_FACE\00", align 1
@.str.236 = private unnamed_addr constant [23 x i8] c"Nearest vertex in face\00", align 1
@.str.237 = private unnamed_addr constant [48 x i8] c"Copy weight from closest vertex in nearest face\00", align 1
@.str.238 = private unnamed_addr constant [23 x i8] c"WT_REPLACE_ALL_WEIGHTS\00", align 1
@.str.239 = private unnamed_addr constant [22 x i8] c"Overwrite all weights\00", align 1
@.str.240 = private unnamed_addr constant [25 x i8] c"WT_REPLACE_EMPTY_WEIGHTS\00", align 1
@.str.241 = private unnamed_addr constant [6 x i8] c"Empty\00", align 1
@.str.242 = private unnamed_addr constant [39 x i8] c"Add weights to vertices with no weight\00", align 1
@.str.243 = private unnamed_addr constant [13 x i8] c"sort vgroups\00", align 1
@.str.244 = private unnamed_addr constant [38 x i8] c"Editmode lattice is not supported yet\00", align 1
@.str.245 = private unnamed_addr constant [27 x i8] c"Invalid vertex group index\00", align 1
@.str.246 = private unnamed_addr constant [23 x i8] c"Vertex group is locked\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_vgroup_sync_from_pose(%struct.Object* %ob) #0 !dbg !3869 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %armobj = alloca %struct.Object*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %def_num = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3874, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.declare(metadata %struct.Object** %armobj, metadata !3876, metadata !DIExpression()), !dbg !3877
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3878
  %call = call %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %0), !dbg !3879
  store %struct.Object* %call, %struct.Object** %armobj, align 8, !dbg !3877
  %1 = load %struct.Object*, %struct.Object** %armobj, align 8, !dbg !3880
  %tobool = icmp ne %struct.Object* %1, null, !dbg !3880
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !3882

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %armobj, align 8, !dbg !3883
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !3884
  %3 = load i32, i32* %mode, align 8, !dbg !3884
  %and = and i32 %3, 64, !dbg !3885
  %tobool1 = icmp ne i32 %and, 0, !dbg !3885
  br i1 %tobool1, label %if.then, label %if.end8, !dbg !3886

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !3887, metadata !DIExpression()), !dbg !3956
  %4 = load %struct.Object*, %struct.Object** %armobj, align 8, !dbg !3957
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !3958
  %5 = load i8*, i8** %data, align 8, !dbg !3958
  %6 = bitcast i8* %5 to %struct.bArmature*, !dbg !3957
  store %struct.bArmature* %6, %struct.bArmature** %arm, align 8, !dbg !3956
  %7 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3959
  %act_bone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %7, i32 0, i32 5, !dbg !3961
  %8 = load %struct.Bone*, %struct.Bone** %act_bone, align 8, !dbg !3961
  %tobool2 = icmp ne %struct.Bone* %8, null, !dbg !3959
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !3962

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %def_num, metadata !3963, metadata !DIExpression()), !dbg !3965
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3966
  %10 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3967
  %act_bone4 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %10, i32 0, i32 5, !dbg !3968
  %11 = load %struct.Bone*, %struct.Bone** %act_bone4, align 8, !dbg !3968
  %name = getelementptr inbounds %struct.Bone, %struct.Bone* %11, i32 0, i32 5, !dbg !3969
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3967
  %call5 = call i32 @defgroup_name_index(%struct.Object* %9, i8* %arraydecay), !dbg !3970
  store i32 %call5, i32* %def_num, align 4, !dbg !3965
  %12 = load i32, i32* %def_num, align 4, !dbg !3971
  %cmp = icmp ne i32 %12, -1, !dbg !3973
  br i1 %cmp, label %if.then6, label %if.end, !dbg !3974

if.then6:                                         ; preds = %if.then3
  %13 = load i32, i32* %def_num, align 4, !dbg !3975
  %add = add nsw i32 %13, 1, !dbg !3977
  %conv = trunc i32 %add to i16, !dbg !3975
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3978
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 97, !dbg !3979
  store i16 %conv, i16* %actdef, align 2, !dbg !3980
  store i8 1, i8* %retval, align 1, !dbg !3981
  br label %return, !dbg !3981

if.end:                                           ; preds = %if.then3
  br label %if.end7, !dbg !3982

if.end7:                                          ; preds = %if.end, %if.then
  br label %if.end8, !dbg !3983

if.end8:                                          ; preds = %if.end7, %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !3984
  br label %return, !dbg !3984

return:                                           ; preds = %if.end8, %if.then6
  %15 = load i8, i8* %retval, align 1, !dbg !3985
  ret i8 %15, !dbg !3985
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.Object* @BKE_object_pose_armature_get(%struct.Object*) #2

declare dso_local i32 @defgroup_name_index(%struct.Object*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_vgroup_object_is_edit_mode(%struct.Object* %ob) #0 !dbg !3986 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3987, metadata !DIExpression()), !dbg !3988
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3989
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !3991
  %1 = load i16, i16* %type, align 8, !dbg !3991
  %conv = sext i16 %1 to i32, !dbg !3989
  %cmp = icmp eq i32 %conv, 1, !dbg !3992
  br i1 %cmp, label %if.then, label %if.else, !dbg !3993

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3994
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %2), !dbg !3995
  %cmp2 = icmp ne %struct.BMEditMesh* %call, null, !dbg !3996
  %conv3 = zext i1 %cmp2 to i32, !dbg !3996
  %conv4 = trunc i32 %conv3 to i8, !dbg !3997
  store i8 %conv4, i8* %retval, align 1, !dbg !3998
  br label %return, !dbg !3998

if.else:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3999
  %type5 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !4001
  %4 = load i16, i16* %type5, align 8, !dbg !4001
  %conv6 = sext i16 %4 to i32, !dbg !3999
  %cmp7 = icmp eq i32 %conv6, 22, !dbg !4002
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !4003

if.then9:                                         ; preds = %if.else
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4004
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !4005
  %6 = load i8*, i8** %data, align 8, !dbg !4005
  %7 = bitcast i8* %6 to %struct.Lattice*, !dbg !4006
  %editlatt = getelementptr inbounds %struct.Lattice, %struct.Lattice* %7, i32 0, i32 26, !dbg !4007
  %8 = load %struct.EditLatt*, %struct.EditLatt** %editlatt, align 8, !dbg !4007
  %cmp10 = icmp ne %struct.EditLatt* %8, null, !dbg !4008
  %conv11 = zext i1 %cmp10 to i32, !dbg !4008
  %conv12 = trunc i32 %conv11 to i8, !dbg !4009
  store i8 %conv12, i8* %retval, align 1, !dbg !4010
  br label %return, !dbg !4010

if.end:                                           ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !4011
  br label %return, !dbg !4011

return:                                           ; preds = %if.end13, %if.then9, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !4012
  ret i8 %9, !dbg !4012
}

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bDeformGroup* @ED_vgroup_add_name(%struct.Object* %ob, i8* %name) #0 !dbg !4013 {
entry:
  %retval = alloca %struct.bDeformGroup*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %name.addr = alloca i8*, align 8
  %defgroup = alloca %struct.bDeformGroup*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4016, metadata !DIExpression()), !dbg !4017
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4018, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %defgroup, metadata !4020, metadata !DIExpression()), !dbg !4021
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4022
  %tobool = icmp ne %struct.Object* %0, null, !dbg !4022
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4024

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4025
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !4025
  %2 = load i16, i16* %type, align 8, !dbg !4025
  %conv = sext i16 %2 to i32, !dbg !4025
  %cmp = icmp eq i32 %conv, 1, !dbg !4025
  br i1 %cmp, label %if.end, label %lor.lhs.false2, !dbg !4025

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4025
  %type3 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !4025
  %4 = load i16, i16* %type3, align 8, !dbg !4025
  %conv4 = sext i16 %4 to i32, !dbg !4025
  %cmp5 = icmp eq i32 %conv4, 22, !dbg !4025
  br i1 %cmp5, label %if.end, label %if.then, !dbg !4026

if.then:                                          ; preds = %lor.lhs.false2, %entry
  store %struct.bDeformGroup* null, %struct.bDeformGroup** %retval, align 8, !dbg !4027
  br label %return, !dbg !4027

if.end:                                           ; preds = %lor.lhs.false2, %lor.lhs.false
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4028
  %6 = load i8*, i8** %name.addr, align 8, !dbg !4029
  %call = call %struct.bDeformGroup* @BKE_defgroup_new(%struct.Object* %5, i8* %6), !dbg !4030
  store %struct.bDeformGroup* %call, %struct.bDeformGroup** %defgroup, align 8, !dbg !4031
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4032
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 25, !dbg !4033
  %call7 = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !4034
  %conv8 = trunc i32 %call7 to i16, !dbg !4034
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4035
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 97, !dbg !4036
  store i16 %conv8, i16* %actdef, align 2, !dbg !4037
  %9 = load %struct.bDeformGroup*, %struct.bDeformGroup** %defgroup, align 8, !dbg !4038
  store %struct.bDeformGroup* %9, %struct.bDeformGroup** %retval, align 8, !dbg !4039
  br label %return, !dbg !4039

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.bDeformGroup*, %struct.bDeformGroup** %retval, align 8, !dbg !4040
  ret %struct.bDeformGroup* %10, !dbg !4040
}

declare dso_local %struct.bDeformGroup* @BKE_defgroup_new(%struct.Object*, i8*) #2

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bDeformGroup* @ED_vgroup_add(%struct.Object* %ob) #0 !dbg !4041 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4044, metadata !DIExpression()), !dbg !4045
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4046
  %call = call %struct.bDeformGroup* @ED_vgroup_add_name(%struct.Object* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)), !dbg !4047
  ret %struct.bDeformGroup* %call, !dbg !4048
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_delete(%struct.Object* %ob, %struct.bDeformGroup* %defgroup) #0 !dbg !4049 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %defgroup.addr = alloca %struct.bDeformGroup*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4052, metadata !DIExpression()), !dbg !4053
  store %struct.bDeformGroup* %defgroup, %struct.bDeformGroup** %defgroup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %defgroup.addr, metadata !4054, metadata !DIExpression()), !dbg !4055
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4056
  %call = call zeroext i8 @ED_vgroup_object_is_edit_mode(%struct.Object* %0), !dbg !4058
  %tobool = icmp ne i8 %call, 0, !dbg !4058
  br i1 %tobool, label %if.then, label %if.else, !dbg !4059

if.then:                                          ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4060
  %2 = load %struct.bDeformGroup*, %struct.bDeformGroup** %defgroup.addr, align 8, !dbg !4061
  call void @vgroup_delete_edit_mode(%struct.Object* %1, %struct.bDeformGroup* %2), !dbg !4062
  br label %if.end, !dbg !4062

if.else:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4063
  %4 = load %struct.bDeformGroup*, %struct.bDeformGroup** %defgroup.addr, align 8, !dbg !4064
  call void @vgroup_delete_object_mode(%struct.Object* %3, %struct.bDeformGroup* %4), !dbg !4065
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4066
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_delete_edit_mode(%struct.Object* %ob, %struct.bDeformGroup* %dg) #0 !dbg !4067 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dg.addr = alloca %struct.bDeformGroup*, align 8
  %i = alloca i32, align 4
  %dg_index = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %dvert = alloca %struct.MDeformVert*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %dvert35 = alloca %struct.MDeformVert*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %me102 = alloca %struct.Mesh*, align 8
  %lt113 = alloca %struct.Lattice*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4068, metadata !DIExpression()), !dbg !4069
  store %struct.bDeformGroup* %dg, %struct.bDeformGroup** %dg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg.addr, metadata !4070, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4072, metadata !DIExpression()), !dbg !4073
  call void @llvm.dbg.declare(metadata i32* %dg_index, metadata !4074, metadata !DIExpression()), !dbg !4076
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4077
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !4078
  %1 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !4079
  %2 = bitcast %struct.bDeformGroup* %1 to i8*, !dbg !4079
  %call = call i32 @BLI_findindex(%struct.ListBase* %defbase, i8* %2), !dbg !4080
  store i32 %call, i32* %dg_index, align 4, !dbg !4076
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4081
  %4 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !4083
  %call1 = call zeroext i8 @vgroup_active_remove_verts(%struct.Object* %3, i8 zeroext 1, %struct.bDeformGroup* %4), !dbg !4084
  %conv = zext i8 %call1 to i32, !dbg !4084
  %cmp = icmp eq i32 %conv, 0, !dbg !4085
  br i1 %cmp, label %if.then, label %if.else, !dbg !4086

if.then:                                          ; preds = %entry
  br label %if.end75, !dbg !4087

if.else:                                          ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4089
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !4091
  %6 = load i16, i16* %type, align 8, !dbg !4091
  %conv3 = sext i16 %6 to i32, !dbg !4089
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !4092
  br i1 %cmp4, label %if.then6, label %if.else28, !dbg !4093

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4094, metadata !DIExpression()), !dbg !4096
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4097
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !4098
  %8 = load i8*, i8** %data, align 8, !dbg !4098
  %9 = bitcast i8* %8 to %struct.Mesh*, !dbg !4097
  store %struct.Mesh* %9, %struct.Mesh** %me, align 8, !dbg !4096
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4099, metadata !DIExpression()), !dbg !4102
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4103
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 20, !dbg !4104
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !4104
  store %struct.BMEditMesh* %11, %struct.BMEditMesh** %em, align 8, !dbg !4102
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !4105, metadata !DIExpression()), !dbg !4106
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4107
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !4108
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4108
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 24, !dbg !4109
  %call7 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !4110
  store i32 %call7, i32* %cd_dvert_offset, align 4, !dbg !4106
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !4111, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !4200, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !4202, metadata !DIExpression()), !dbg !4205
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4206
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !4206
  %15 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !4206
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %15, i8 zeroext 1, i8* null), !dbg !4206
  %16 = bitcast i8* %call9 to %struct.BMVert*, !dbg !4206
  store %struct.BMVert* %16, %struct.BMVert** %eve, align 8, !dbg !4206
  br label %for.cond, !dbg !4206

for.cond:                                         ; preds = %for.inc25, %if.then6
  %17 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4208
  %tobool = icmp ne %struct.BMVert* %17, null, !dbg !4206
  br i1 %tobool, label %for.body, label %for.end27, !dbg !4206

for.body:                                         ; preds = %for.cond
  %18 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4210
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %18, i32 0, i32 0, !dbg !4210
  %data10 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !4210
  %19 = load i8*, i8** %data10, align 8, !dbg !4210
  %20 = load i32, i32* %cd_dvert_offset, align 4, !dbg !4210
  %idx.ext = sext i32 %20 to i64, !dbg !4210
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !4210
  %21 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !4210
  store %struct.MDeformVert* %21, %struct.MDeformVert** %dvert, align 8, !dbg !4212
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !4213
  %tobool11 = icmp ne %struct.MDeformVert* %22, null, !dbg !4213
  br i1 %tobool11, label %if.then12, label %if.end24, !dbg !4215

if.then12:                                        ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !4216
  br label %for.cond13, !dbg !4218

for.cond13:                                       ; preds = %for.inc, %if.then12
  %23 = load i32, i32* %i, align 4, !dbg !4219
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !4221
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %24, i32 0, i32 1, !dbg !4222
  %25 = load i32, i32* %totweight, align 8, !dbg !4222
  %cmp14 = icmp slt i32 %23, %25, !dbg !4223
  br i1 %cmp14, label %for.body16, label %for.end, !dbg !4224

for.body16:                                       ; preds = %for.cond13
  %26 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !4225
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %26, i32 0, i32 0, !dbg !4227
  %27 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4227
  %28 = load i32, i32* %i, align 4, !dbg !4228
  %idxprom = sext i32 %28 to i64, !dbg !4225
  %arrayidx = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %27, i64 %idxprom, !dbg !4225
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx, i32 0, i32 0, !dbg !4229
  %29 = load i32, i32* %def_nr, align 4, !dbg !4229
  %30 = load i32, i32* %dg_index, align 4, !dbg !4230
  %cmp17 = icmp sgt i32 %29, %30, !dbg !4231
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !4232

if.then19:                                        ; preds = %for.body16
  %31 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !4233
  %dw20 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %31, i32 0, i32 0, !dbg !4234
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw20, align 8, !dbg !4234
  %33 = load i32, i32* %i, align 4, !dbg !4235
  %idxprom21 = sext i32 %33 to i64, !dbg !4233
  %arrayidx22 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %32, i64 %idxprom21, !dbg !4233
  %def_nr23 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx22, i32 0, i32 0, !dbg !4236
  %34 = load i32, i32* %def_nr23, align 4, !dbg !4237
  %dec = add nsw i32 %34, -1, !dbg !4237
  store i32 %dec, i32* %def_nr23, align 4, !dbg !4237
  br label %if.end, !dbg !4233

if.end:                                           ; preds = %if.then19, %for.body16
  br label %for.inc, !dbg !4230

for.inc:                                          ; preds = %if.end
  %35 = load i32, i32* %i, align 4, !dbg !4238
  %inc = add nsw i32 %35, 1, !dbg !4238
  store i32 %inc, i32* %i, align 4, !dbg !4238
  br label %for.cond13, !dbg !4239, !llvm.loop !4240

for.end:                                          ; preds = %for.cond13
  br label %if.end24, !dbg !4241

if.end24:                                         ; preds = %for.end, %for.body
  br label %for.inc25, !dbg !4242

for.inc25:                                        ; preds = %if.end24
  %call26 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4208
  %36 = bitcast i8* %call26 to %struct.BMVert*, !dbg !4208
  store %struct.BMVert* %36, %struct.BMVert** %eve, align 8, !dbg !4208
  br label %for.cond, !dbg !4208, !llvm.loop !4243

for.end27:                                        ; preds = %for.cond
  br label %if.end74, !dbg !4245

if.else28:                                        ; preds = %if.else
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4246
  %type29 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 3, !dbg !4248
  %38 = load i16, i16* %type29, align 8, !dbg !4248
  %conv30 = sext i16 %38 to i32, !dbg !4246
  %cmp31 = icmp eq i32 %conv30, 22, !dbg !4249
  br i1 %cmp31, label %if.then33, label %if.end73, !dbg !4250

if.then33:                                        ; preds = %if.else28
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4251, metadata !DIExpression()), !dbg !4253
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4254
  %call34 = call %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %39), !dbg !4255
  store %struct.Lattice* %call34, %struct.Lattice** %lt, align 8, !dbg !4253
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !4256, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert35, metadata !4260, metadata !DIExpression()), !dbg !4261
  %40 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4262
  %dvert36 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %40, i32 0, i32 24, !dbg !4263
  %41 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert36, align 8, !dbg !4263
  store %struct.MDeformVert* %41, %struct.MDeformVert** %dvert35, align 8, !dbg !4261
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4264, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !4266, metadata !DIExpression()), !dbg !4267
  %42 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert35, align 8, !dbg !4268
  %tobool37 = icmp ne %struct.MDeformVert* %42, null, !dbg !4268
  br i1 %tobool37, label %if.then38, label %if.end72, !dbg !4270

if.then38:                                        ; preds = %if.then33
  %43 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4271
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %43, i32 0, i32 2, !dbg !4273
  %44 = load i16, i16* %pntsu, align 8, !dbg !4273
  %conv39 = sext i16 %44 to i32, !dbg !4271
  %45 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4274
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %45, i32 0, i32 3, !dbg !4275
  %46 = load i16, i16* %pntsv, align 2, !dbg !4275
  %conv40 = sext i16 %46 to i32, !dbg !4274
  %mul = mul nsw i32 %conv39, %conv40, !dbg !4276
  %47 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4277
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %47, i32 0, i32 4, !dbg !4278
  %48 = load i16, i16* %pntsw, align 4, !dbg !4278
  %conv41 = sext i16 %48 to i32, !dbg !4277
  %mul42 = mul nsw i32 %mul, %conv41, !dbg !4279
  store i32 %mul42, i32* %tot, align 4, !dbg !4280
  store i32 0, i32* %a, align 4, !dbg !4281
  %49 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4283
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %49, i32 0, i32 21, !dbg !4284
  %50 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !4284
  store %struct.BPoint* %50, %struct.BPoint** %bp, align 8, !dbg !4285
  br label %for.cond43, !dbg !4286

for.cond43:                                       ; preds = %for.inc68, %if.then38
  %51 = load i32, i32* %a, align 4, !dbg !4287
  %52 = load i32, i32* %tot, align 4, !dbg !4289
  %cmp44 = icmp slt i32 %51, %52, !dbg !4290
  br i1 %cmp44, label %for.body46, label %for.end71, !dbg !4291

for.body46:                                       ; preds = %for.cond43
  store i32 0, i32* %i, align 4, !dbg !4292
  br label %for.cond47, !dbg !4295

for.cond47:                                       ; preds = %for.inc65, %for.body46
  %53 = load i32, i32* %i, align 4, !dbg !4296
  %54 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert35, align 8, !dbg !4298
  %totweight48 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %54, i32 0, i32 1, !dbg !4299
  %55 = load i32, i32* %totweight48, align 8, !dbg !4299
  %cmp49 = icmp slt i32 %53, %55, !dbg !4300
  br i1 %cmp49, label %for.body51, label %for.end67, !dbg !4301

for.body51:                                       ; preds = %for.cond47
  %56 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert35, align 8, !dbg !4302
  %dw52 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %56, i32 0, i32 0, !dbg !4305
  %57 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw52, align 8, !dbg !4305
  %58 = load i32, i32* %i, align 4, !dbg !4306
  %idxprom53 = sext i32 %58 to i64, !dbg !4302
  %arrayidx54 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %57, i64 %idxprom53, !dbg !4302
  %def_nr55 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx54, i32 0, i32 0, !dbg !4307
  %59 = load i32, i32* %def_nr55, align 4, !dbg !4307
  %60 = load i32, i32* %dg_index, align 4, !dbg !4308
  %cmp56 = icmp sgt i32 %59, %60, !dbg !4309
  br i1 %cmp56, label %if.then58, label %if.end64, !dbg !4310

if.then58:                                        ; preds = %for.body51
  %61 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert35, align 8, !dbg !4311
  %dw59 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %61, i32 0, i32 0, !dbg !4312
  %62 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw59, align 8, !dbg !4312
  %63 = load i32, i32* %i, align 4, !dbg !4313
  %idxprom60 = sext i32 %63 to i64, !dbg !4311
  %arrayidx61 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %62, i64 %idxprom60, !dbg !4311
  %def_nr62 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx61, i32 0, i32 0, !dbg !4314
  %64 = load i32, i32* %def_nr62, align 4, !dbg !4315
  %dec63 = add nsw i32 %64, -1, !dbg !4315
  store i32 %dec63, i32* %def_nr62, align 4, !dbg !4315
  br label %if.end64, !dbg !4311

if.end64:                                         ; preds = %if.then58, %for.body51
  br label %for.inc65, !dbg !4316

for.inc65:                                        ; preds = %if.end64
  %65 = load i32, i32* %i, align 4, !dbg !4317
  %inc66 = add nsw i32 %65, 1, !dbg !4317
  store i32 %inc66, i32* %i, align 4, !dbg !4317
  br label %for.cond47, !dbg !4318, !llvm.loop !4319

for.end67:                                        ; preds = %for.cond47
  br label %for.inc68, !dbg !4321

for.inc68:                                        ; preds = %for.end67
  %66 = load i32, i32* %a, align 4, !dbg !4322
  %inc69 = add nsw i32 %66, 1, !dbg !4322
  store i32 %inc69, i32* %a, align 4, !dbg !4322
  %67 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4323
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %67, i32 1, !dbg !4323
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !4323
  %68 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert35, align 8, !dbg !4324
  %incdec.ptr70 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %68, i32 1, !dbg !4324
  store %struct.MDeformVert* %incdec.ptr70, %struct.MDeformVert** %dvert35, align 8, !dbg !4324
  br label %for.cond43, !dbg !4325, !llvm.loop !4326

for.end71:                                        ; preds = %for.cond43
  br label %if.end72, !dbg !4328

if.end72:                                         ; preds = %for.end71, %if.then33
  br label %if.end73, !dbg !4329

if.end73:                                         ; preds = %if.end72, %if.else28
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %for.end27
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then
  %69 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4330
  %70 = load i32, i32* %dg_index, align 4, !dbg !4331
  %add = add nsw i32 %70, 1, !dbg !4332
  call void @vgroup_delete_update_users(%struct.Object* %69, i32 %add), !dbg !4333
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4334
  %defbase76 = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 25, !dbg !4335
  %72 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !4336
  %73 = bitcast %struct.bDeformGroup* %72 to i8*, !dbg !4336
  call void @BLI_freelinkN(%struct.ListBase* %defbase76, i8* %73), !dbg !4337
  %74 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4338
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 97, !dbg !4340
  %75 = load i16, i16* %actdef, align 2, !dbg !4340
  %conv77 = zext i16 %75 to i32, !dbg !4338
  %76 = load i32, i32* %dg_index, align 4, !dbg !4341
  %cmp78 = icmp sgt i32 %conv77, %76, !dbg !4342
  br i1 %cmp78, label %if.then80, label %if.end83, !dbg !4343

if.then80:                                        ; preds = %if.end75
  %77 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4344
  %actdef81 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 97, !dbg !4345
  %78 = load i16, i16* %actdef81, align 2, !dbg !4346
  %dec82 = add i16 %78, -1, !dbg !4346
  store i16 %dec82, i16* %actdef81, align 2, !dbg !4346
  br label %if.end83, !dbg !4344

if.end83:                                         ; preds = %if.then80, %if.end75
  %79 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4347
  %actdef84 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 97, !dbg !4349
  %80 = load i16, i16* %actdef84, align 2, !dbg !4349
  %conv85 = zext i16 %80 to i32, !dbg !4347
  %cmp86 = icmp slt i32 %conv85, 1, !dbg !4350
  br i1 %cmp86, label %land.lhs.true, label %if.end92, !dbg !4351

land.lhs.true:                                    ; preds = %if.end83
  %81 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4352
  %defbase88 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 25, !dbg !4353
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase88, i32 0, i32 0, !dbg !4354
  %82 = load i8*, i8** %first, align 8, !dbg !4354
  %tobool89 = icmp ne i8* %82, null, !dbg !4352
  br i1 %tobool89, label %if.then90, label %if.end92, !dbg !4355

if.then90:                                        ; preds = %land.lhs.true
  %83 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4356
  %actdef91 = getelementptr inbounds %struct.Object, %struct.Object* %83, i32 0, i32 97, !dbg !4357
  store i16 1, i16* %actdef91, align 2, !dbg !4358
  br label %if.end92, !dbg !4356

if.end92:                                         ; preds = %if.then90, %land.lhs.true, %if.end83
  %84 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4359
  %defbase93 = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 25, !dbg !4361
  %call94 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %defbase93), !dbg !4362
  %tobool95 = icmp ne i8 %call94, 0, !dbg !4362
  br i1 %tobool95, label %if.then96, label %if.end123, !dbg !4363

if.then96:                                        ; preds = %if.end92
  %85 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4364
  %type97 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 3, !dbg !4367
  %86 = load i16, i16* %type97, align 8, !dbg !4367
  %conv98 = sext i16 %86 to i32, !dbg !4364
  %cmp99 = icmp eq i32 %conv98, 1, !dbg !4368
  br i1 %cmp99, label %if.then101, label %if.else107, !dbg !4369

if.then101:                                       ; preds = %if.then96
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me102, metadata !4370, metadata !DIExpression()), !dbg !4372
  %87 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4373
  %data103 = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 19, !dbg !4374
  %88 = load i8*, i8** %data103, align 8, !dbg !4374
  %89 = bitcast i8* %88 to %struct.Mesh*, !dbg !4373
  store %struct.Mesh* %89, %struct.Mesh** %me102, align 8, !dbg !4372
  %90 = load %struct.Mesh*, %struct.Mesh** %me102, align 8, !dbg !4375
  %vdata104 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %90, i32 0, i32 21, !dbg !4376
  %91 = load %struct.Mesh*, %struct.Mesh** %me102, align 8, !dbg !4377
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %91, i32 0, i32 26, !dbg !4378
  %92 = load i32, i32* %totvert, align 8, !dbg !4378
  %call105 = call zeroext i8 @CustomData_free_layer_active(%struct.CustomData* %vdata104, i32 2, i32 %92), !dbg !4379
  %93 = load %struct.Mesh*, %struct.Mesh** %me102, align 8, !dbg !4380
  %dvert106 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %93, i32 0, i32 17, !dbg !4381
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert106, align 8, !dbg !4382
  br label %if.end122, !dbg !4383

if.else107:                                       ; preds = %if.then96
  %94 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4384
  %type108 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 3, !dbg !4386
  %95 = load i16, i16* %type108, align 8, !dbg !4386
  %conv109 = sext i16 %95 to i32, !dbg !4384
  %cmp110 = icmp eq i32 %conv109, 22, !dbg !4387
  br i1 %cmp110, label %if.then112, label %if.end121, !dbg !4388

if.then112:                                       ; preds = %if.else107
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt113, metadata !4389, metadata !DIExpression()), !dbg !4391
  %96 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4392
  %call114 = call %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %96), !dbg !4393
  store %struct.Lattice* %call114, %struct.Lattice** %lt113, align 8, !dbg !4391
  %97 = load %struct.Lattice*, %struct.Lattice** %lt113, align 8, !dbg !4394
  %dvert115 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %97, i32 0, i32 24, !dbg !4396
  %98 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert115, align 8, !dbg !4396
  %tobool116 = icmp ne %struct.MDeformVert* %98, null, !dbg !4394
  br i1 %tobool116, label %if.then117, label %if.end120, !dbg !4397

if.then117:                                       ; preds = %if.then112
  %99 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4398
  %100 = load %struct.Lattice*, %struct.Lattice** %lt113, align 8, !dbg !4400
  %dvert118 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %100, i32 0, i32 24, !dbg !4401
  %101 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert118, align 8, !dbg !4401
  %102 = bitcast %struct.MDeformVert* %101 to i8*, !dbg !4400
  call void %99(i8* %102), !dbg !4398
  %103 = load %struct.Lattice*, %struct.Lattice** %lt113, align 8, !dbg !4402
  %dvert119 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %103, i32 0, i32 24, !dbg !4403
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert119, align 8, !dbg !4404
  br label %if.end120, !dbg !4405

if.end120:                                        ; preds = %if.then117, %if.then112
  br label %if.end121, !dbg !4406

if.end121:                                        ; preds = %if.end120, %if.else107
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then101
  br label %if.end123, !dbg !4407

if.end123:                                        ; preds = %if.end122, %if.end92
  ret void, !dbg !4408
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_delete_object_mode(%struct.Object* %ob, %struct.bDeformGroup* %dg) #0 !dbg !4409 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dg.addr = alloca %struct.bDeformGroup*, align 8
  %dvert_array = alloca %struct.MDeformVert*, align 8
  %dvert_tot = alloca i32, align 4
  %def_nr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4410, metadata !DIExpression()), !dbg !4411
  store %struct.bDeformGroup* %dg, %struct.bDeformGroup** %dg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg.addr, metadata !4412, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_array, metadata !4414, metadata !DIExpression()), !dbg !4415
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert_array, align 8, !dbg !4415
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !4416, metadata !DIExpression()), !dbg !4417
  store i32 0, i32* %dvert_tot, align 4, !dbg !4417
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !4418, metadata !DIExpression()), !dbg !4419
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4420
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !4421
  %1 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !4422
  %2 = bitcast %struct.bDeformGroup* %1 to i8*, !dbg !4422
  %call = call i32 @BLI_findindex(%struct.ListBase* %defbase, i8* %2), !dbg !4423
  store i32 %call, i32* %def_nr, align 4, !dbg !4419
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4424
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !4425
  %4 = load i8*, i8** %data, align 8, !dbg !4425
  %5 = bitcast i8* %4 to %struct.ID*, !dbg !4424
  %call1 = call zeroext i8 @ED_vgroup_array_get(%struct.ID* %5, %struct.MDeformVert** %dvert_array, i32* %dvert_tot), !dbg !4426
  %6 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_array, align 8, !dbg !4427
  %tobool = icmp ne %struct.MDeformVert* %6, null, !dbg !4427
  br i1 %tobool, label %if.then, label %if.end17, !dbg !4429

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4430, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4433, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !4435, metadata !DIExpression()), !dbg !4436
  store i32 0, i32* %i, align 4, !dbg !4437
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_array, align 8, !dbg !4439
  store %struct.MDeformVert* %7, %struct.MDeformVert** %dv, align 8, !dbg !4440
  br label %for.cond, !dbg !4441

for.cond:                                         ; preds = %for.inc14, %if.then
  %8 = load i32, i32* %i, align 4, !dbg !4442
  %9 = load i32, i32* %dvert_tot, align 4, !dbg !4444
  %cmp = icmp slt i32 %8, %9, !dbg !4445
  br i1 %cmp, label %for.body, label %for.end16, !dbg !4446

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !4447, metadata !DIExpression()), !dbg !4451
  %10 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4452
  %11 = load i32, i32* %def_nr, align 4, !dbg !4453
  %call2 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %10, i32 %11), !dbg !4454
  store %struct.MDeformWeight* %call2, %struct.MDeformWeight** %dw, align 8, !dbg !4455
  %12 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4456
  %13 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4457
  call void @defvert_remove_group(%struct.MDeformVert* %12, %struct.MDeformWeight* %13), !dbg !4458
  store i32 0, i32* %j, align 4, !dbg !4459
  br label %for.cond3, !dbg !4461

for.cond3:                                        ; preds = %for.inc, %for.body
  %14 = load i32, i32* %j, align 4, !dbg !4462
  %15 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4464
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %15, i32 0, i32 1, !dbg !4465
  %16 = load i32, i32* %totweight, align 8, !dbg !4465
  %cmp4 = icmp slt i32 %14, %16, !dbg !4466
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !4467

for.body5:                                        ; preds = %for.cond3
  %17 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4468
  %dw6 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %17, i32 0, i32 0, !dbg !4471
  %18 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw6, align 8, !dbg !4471
  %19 = load i32, i32* %j, align 4, !dbg !4472
  %idxprom = sext i32 %19 to i64, !dbg !4468
  %arrayidx = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %18, i64 %idxprom, !dbg !4468
  %def_nr7 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx, i32 0, i32 0, !dbg !4473
  %20 = load i32, i32* %def_nr7, align 4, !dbg !4473
  %21 = load i32, i32* %def_nr, align 4, !dbg !4474
  %cmp8 = icmp sgt i32 %20, %21, !dbg !4475
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !4476

if.then9:                                         ; preds = %for.body5
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4477
  %dw10 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %22, i32 0, i32 0, !dbg !4479
  %23 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw10, align 8, !dbg !4479
  %24 = load i32, i32* %j, align 4, !dbg !4480
  %idxprom11 = sext i32 %24 to i64, !dbg !4477
  %arrayidx12 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %23, i64 %idxprom11, !dbg !4477
  %def_nr13 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx12, i32 0, i32 0, !dbg !4481
  %25 = load i32, i32* %def_nr13, align 4, !dbg !4482
  %dec = add nsw i32 %25, -1, !dbg !4482
  store i32 %dec, i32* %def_nr13, align 4, !dbg !4482
  br label %if.end, !dbg !4483

if.end:                                           ; preds = %if.then9, %for.body5
  br label %for.inc, !dbg !4484

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %j, align 4, !dbg !4485
  %inc = add nsw i32 %26, 1, !dbg !4485
  store i32 %inc, i32* %j, align 4, !dbg !4485
  br label %for.cond3, !dbg !4486, !llvm.loop !4487

for.end:                                          ; preds = %for.cond3
  br label %for.inc14, !dbg !4489

for.inc14:                                        ; preds = %for.end
  %27 = load i32, i32* %i, align 4, !dbg !4490
  %inc15 = add nsw i32 %27, 1, !dbg !4490
  store i32 %inc15, i32* %i, align 4, !dbg !4490
  %28 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4491
  %incdec.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %28, i32 1, !dbg !4491
  store %struct.MDeformVert* %incdec.ptr, %struct.MDeformVert** %dv, align 8, !dbg !4491
  br label %for.cond, !dbg !4492, !llvm.loop !4493

for.end16:                                        ; preds = %for.cond
  br label %if.end17, !dbg !4495

if.end17:                                         ; preds = %for.end16, %entry
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4496
  %30 = load i32, i32* %def_nr, align 4, !dbg !4497
  %add = add nsw i32 %30, 1, !dbg !4498
  call void @vgroup_delete_update_users(%struct.Object* %29, i32 %add), !dbg !4499
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4500
  %defbase18 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 25, !dbg !4501
  %32 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !4502
  %33 = bitcast %struct.bDeformGroup* %32 to i8*, !dbg !4502
  call void @BLI_freelinkN(%struct.ListBase* %defbase18, i8* %33), !dbg !4503
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4504
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 97, !dbg !4506
  %35 = load i16, i16* %actdef, align 2, !dbg !4506
  %conv = zext i16 %35 to i32, !dbg !4504
  %36 = load i32, i32* %def_nr, align 4, !dbg !4507
  %cmp19 = icmp sgt i32 %conv, %36, !dbg !4508
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !4509

if.then21:                                        ; preds = %if.end17
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4510
  %actdef22 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 97, !dbg !4511
  %38 = load i16, i16* %actdef22, align 2, !dbg !4512
  %dec23 = add i16 %38, -1, !dbg !4512
  store i16 %dec23, i16* %actdef22, align 2, !dbg !4512
  br label %if.end24, !dbg !4510

if.end24:                                         ; preds = %if.then21, %if.end17
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4513
  %actdef25 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 97, !dbg !4515
  %40 = load i16, i16* %actdef25, align 2, !dbg !4515
  %conv26 = zext i16 %40 to i32, !dbg !4513
  %cmp27 = icmp slt i32 %conv26, 1, !dbg !4516
  br i1 %cmp27, label %land.lhs.true, label %if.end33, !dbg !4517

land.lhs.true:                                    ; preds = %if.end24
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4518
  %defbase29 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 25, !dbg !4519
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase29, i32 0, i32 0, !dbg !4520
  %42 = load i8*, i8** %first, align 8, !dbg !4520
  %tobool30 = icmp ne i8* %42, null, !dbg !4518
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !4521

if.then31:                                        ; preds = %land.lhs.true
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4522
  %actdef32 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 97, !dbg !4523
  store i16 1, i16* %actdef32, align 2, !dbg !4524
  br label %if.end33, !dbg !4522

if.end33:                                         ; preds = %if.then31, %land.lhs.true, %if.end24
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4525
  %defbase34 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 25, !dbg !4527
  %call35 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %defbase34), !dbg !4528
  %tobool36 = icmp ne i8 %call35, 0, !dbg !4528
  br i1 %tobool36, label %if.then37, label %if.end58, !dbg !4529

if.then37:                                        ; preds = %if.end33
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4530
  %type = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 3, !dbg !4533
  %46 = load i16, i16* %type, align 8, !dbg !4533
  %conv38 = sext i16 %46 to i32, !dbg !4530
  %cmp39 = icmp eq i32 %conv38, 1, !dbg !4534
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !4535

if.then41:                                        ; preds = %if.then37
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4536, metadata !DIExpression()), !dbg !4538
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4539
  %data42 = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 19, !dbg !4540
  %48 = load i8*, i8** %data42, align 8, !dbg !4540
  %49 = bitcast i8* %48 to %struct.Mesh*, !dbg !4539
  store %struct.Mesh* %49, %struct.Mesh** %me, align 8, !dbg !4538
  %50 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4541
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %50, i32 0, i32 21, !dbg !4542
  %51 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4543
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %51, i32 0, i32 26, !dbg !4544
  %52 = load i32, i32* %totvert, align 8, !dbg !4544
  %call43 = call zeroext i8 @CustomData_free_layer_active(%struct.CustomData* %vdata, i32 2, i32 %52), !dbg !4545
  %53 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4546
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %53, i32 0, i32 17, !dbg !4547
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert, align 8, !dbg !4548
  br label %if.end57, !dbg !4549

if.else:                                          ; preds = %if.then37
  %54 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4550
  %type44 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 3, !dbg !4552
  %55 = load i16, i16* %type44, align 8, !dbg !4552
  %conv45 = sext i16 %55 to i32, !dbg !4550
  %cmp46 = icmp eq i32 %conv45, 22, !dbg !4553
  br i1 %cmp46, label %if.then48, label %if.end56, !dbg !4554

if.then48:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4555, metadata !DIExpression()), !dbg !4557
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4558
  %data49 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 19, !dbg !4559
  %57 = load i8*, i8** %data49, align 8, !dbg !4559
  %58 = bitcast i8* %57 to %struct.Lattice*, !dbg !4558
  store %struct.Lattice* %58, %struct.Lattice** %lt, align 8, !dbg !4557
  %59 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4560
  %dvert50 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %59, i32 0, i32 24, !dbg !4562
  %60 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert50, align 8, !dbg !4562
  %tobool51 = icmp ne %struct.MDeformVert* %60, null, !dbg !4560
  br i1 %tobool51, label %if.then52, label %if.end55, !dbg !4563

if.then52:                                        ; preds = %if.then48
  %61 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4564
  %62 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4566
  %dvert53 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %62, i32 0, i32 24, !dbg !4567
  %63 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert53, align 8, !dbg !4567
  %64 = bitcast %struct.MDeformVert* %63 to i8*, !dbg !4566
  call void %61(i8* %64), !dbg !4564
  %65 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4568
  %dvert54 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %65, i32 0, i32 24, !dbg !4569
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert54, align 8, !dbg !4570
  br label %if.end55, !dbg !4571

if.end55:                                         ; preds = %if.then52, %if.then48
  br label %if.end56, !dbg !4572

if.end56:                                         ; preds = %if.end55, %if.else
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then41
  br label %if.end58, !dbg !4573

if.end58:                                         ; preds = %if.end57, %if.end33
  ret void, !dbg !4574
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_clear(%struct.Object* %ob) #0 !dbg !4575 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dg = alloca %struct.bDeformGroup*, align 8
  %edit_mode = alloca i32, align 4
  %next_dg = alloca %struct.bDeformGroup*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4578, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !4580, metadata !DIExpression()), !dbg !4581
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4582
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !4583
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase, i32 0, i32 0, !dbg !4584
  %1 = load i8*, i8** %first, align 8, !dbg !4584
  %2 = bitcast i8* %1 to %struct.bDeformGroup*, !dbg !4585
  store %struct.bDeformGroup* %2, %struct.bDeformGroup** %dg, align 8, !dbg !4581
  call void @llvm.dbg.declare(metadata i32* %edit_mode, metadata !4586, metadata !DIExpression()), !dbg !4587
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4588
  %call = call zeroext i8 @ED_vgroup_object_is_edit_mode(%struct.Object* %3), !dbg !4589
  %conv = zext i8 %call to i32, !dbg !4589
  store i32 %conv, i32* %edit_mode, align 4, !dbg !4587
  br label %while.cond, !dbg !4590

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !4591
  %tobool = icmp ne %struct.bDeformGroup* %4, null, !dbg !4590
  br i1 %tobool, label %while.body, label %while.end, !dbg !4590

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %next_dg, metadata !4592, metadata !DIExpression()), !dbg !4594
  %5 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !4595
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %5, i32 0, i32 0, !dbg !4596
  %6 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !4596
  store %struct.bDeformGroup* %6, %struct.bDeformGroup** %next_dg, align 8, !dbg !4594
  %7 = load i32, i32* %edit_mode, align 4, !dbg !4597
  %tobool1 = icmp ne i32 %7, 0, !dbg !4597
  br i1 %tobool1, label %if.then, label %if.else, !dbg !4599

if.then:                                          ; preds = %while.body
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4600
  %9 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !4601
  call void @vgroup_delete_edit_mode(%struct.Object* %8, %struct.bDeformGroup* %9), !dbg !4602
  br label %if.end, !dbg !4602

if.else:                                          ; preds = %while.body
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4603
  %11 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !4604
  call void @vgroup_delete_object_mode(%struct.Object* %10, %struct.bDeformGroup* %11), !dbg !4605
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next_dg, align 8, !dbg !4606
  store %struct.bDeformGroup* %12, %struct.bDeformGroup** %dg, align 8, !dbg !4607
  br label %while.cond, !dbg !4590, !llvm.loop !4608

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4610
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_vgroup_data_create(%struct.ID* %id) #0 !dbg !4611 {
entry:
  %retval = alloca i8, align 1
  %id.addr = alloca %struct.ID*, align 8
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4614, metadata !DIExpression()), !dbg !4615
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4616
  %name = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 4, !dbg !4616
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4616
  %1 = bitcast i8* %arraydecay to i16*, !dbg !4616
  %2 = load i16, i16* %1, align 8, !dbg !4616
  %conv = sext i16 %2 to i32, !dbg !4616
  %cmp = icmp eq i32 %conv, 17741, !dbg !4618
  br i1 %cmp, label %if.then, label %if.else, !dbg !4619

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4620, metadata !DIExpression()), !dbg !4622
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4623
  %4 = bitcast %struct.ID* %3 to %struct.Mesh*, !dbg !4624
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !4622
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4625
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 21, !dbg !4626
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4627
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 26, !dbg !4628
  %7 = load i32, i32* %totvert, align 8, !dbg !4628
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %vdata, i32 2, i32 1, i8* null, i32 %7), !dbg !4629
  %8 = bitcast i8* %call to %struct.MDeformVert*, !dbg !4629
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4630
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 17, !dbg !4631
  store %struct.MDeformVert* %8, %struct.MDeformVert** %dvert, align 8, !dbg !4632
  store i8 1, i8* %retval, align 1, !dbg !4633
  br label %return, !dbg !4633

if.else:                                          ; preds = %entry
  %10 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4634
  %name2 = getelementptr inbounds %struct.ID, %struct.ID* %10, i32 0, i32 4, !dbg !4634
  %arraydecay3 = getelementptr inbounds [66 x i8], [66 x i8]* %name2, i64 0, i64 0, !dbg !4634
  %11 = bitcast i8* %arraydecay3 to i16*, !dbg !4634
  %12 = load i16, i16* %11, align 8, !dbg !4634
  %conv4 = sext i16 %12 to i32, !dbg !4634
  %cmp5 = icmp eq i32 %conv4, 21580, !dbg !4636
  br i1 %cmp5, label %if.then7, label %if.else15, !dbg !4637

if.then7:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4638, metadata !DIExpression()), !dbg !4640
  %13 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4641
  %14 = bitcast %struct.ID* %13 to %struct.Lattice*, !dbg !4642
  store %struct.Lattice* %14, %struct.Lattice** %lt, align 8, !dbg !4640
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4643
  %16 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4644
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %16, i32 0, i32 2, !dbg !4645
  %17 = load i16, i16* %pntsu, align 8, !dbg !4645
  %conv8 = sext i16 %17 to i64, !dbg !4644
  %mul = mul i64 16, %conv8, !dbg !4646
  %18 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4647
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %18, i32 0, i32 3, !dbg !4648
  %19 = load i16, i16* %pntsv, align 2, !dbg !4648
  %conv9 = sext i16 %19 to i64, !dbg !4647
  %mul10 = mul i64 %mul, %conv9, !dbg !4649
  %20 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4650
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %20, i32 0, i32 4, !dbg !4651
  %21 = load i16, i16* %pntsw, align 4, !dbg !4651
  %conv11 = sext i16 %21 to i64, !dbg !4650
  %mul12 = mul i64 %mul10, %conv11, !dbg !4652
  %call13 = call i8* %15(i64 %mul12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)), !dbg !4643
  %22 = bitcast i8* %call13 to %struct.MDeformVert*, !dbg !4643
  %23 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4653
  %dvert14 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %23, i32 0, i32 24, !dbg !4654
  store %struct.MDeformVert* %22, %struct.MDeformVert** %dvert14, align 8, !dbg !4655
  store i8 1, i8* %retval, align 1, !dbg !4656
  br label %return, !dbg !4656

if.else15:                                        ; preds = %if.else
  store i8 0, i8* %retval, align 1, !dbg !4657
  br label %return, !dbg !4657

return:                                           ; preds = %if.else15, %if.then7, %if.then
  %24 = load i8, i8* %retval, align 1, !dbg !4659
  ret i8 %24, !dbg !4659
}

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_data_clamp_range(%struct.ID* %id, i32 %total) #0 !dbg !4660 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %total.addr = alloca i32, align 4
  %dvert_arr = alloca %struct.MDeformVert**, align 8
  %dvert_tot = alloca i32, align 4
  %i = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %j = alloca i32, align 4
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4663, metadata !DIExpression()), !dbg !4664
  store i32 %total, i32* %total.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total.addr, metadata !4665, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_arr, metadata !4667, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !4670, metadata !DIExpression()), !dbg !4671
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4672
  %call = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %0, %struct.MDeformVert*** %dvert_arr, i32* %dvert_tot, i8 zeroext 0), !dbg !4674
  %tobool = icmp ne i8 %call, 0, !dbg !4674
  br i1 %tobool, label %if.then, label %if.end14, !dbg !4675

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4676, metadata !DIExpression()), !dbg !4678
  store i32 0, i32* %i, align 4, !dbg !4679
  br label %for.cond, !dbg !4681

for.cond:                                         ; preds = %for.inc11, %if.then
  %1 = load i32, i32* %i, align 4, !dbg !4682
  %2 = load i32, i32* %dvert_tot, align 4, !dbg !4684
  %cmp = icmp slt i32 %1, %2, !dbg !4685
  br i1 %cmp, label %for.body, label %for.end13, !dbg !4686

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !4687, metadata !DIExpression()), !dbg !4689
  %3 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_arr, align 8, !dbg !4690
  %4 = load i32, i32* %i, align 4, !dbg !4691
  %idxprom = sext i32 %4 to i64, !dbg !4690
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %3, i64 %idxprom, !dbg !4690
  %5 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !4690
  store %struct.MDeformVert* %5, %struct.MDeformVert** %dv, align 8, !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4692, metadata !DIExpression()), !dbg !4693
  store i32 0, i32* %j, align 4, !dbg !4694
  br label %for.cond1, !dbg !4696

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %j, align 4, !dbg !4697
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4699
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %7, i32 0, i32 1, !dbg !4700
  %8 = load i32, i32* %totweight, align 8, !dbg !4700
  %cmp2 = icmp slt i32 %6, %8, !dbg !4701
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !4702

for.body3:                                        ; preds = %for.cond1
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4703
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %9, i32 0, i32 0, !dbg !4706
  %10 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4706
  %11 = load i32, i32* %j, align 4, !dbg !4707
  %idxprom4 = sext i32 %11 to i64, !dbg !4703
  %arrayidx5 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %10, i64 %idxprom4, !dbg !4703
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx5, i32 0, i32 0, !dbg !4708
  %12 = load i32, i32* %def_nr, align 4, !dbg !4708
  %13 = load i32, i32* %total.addr, align 4, !dbg !4709
  %cmp6 = icmp sge i32 %12, %13, !dbg !4710
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !4711

if.then7:                                         ; preds = %for.body3
  %14 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4712
  %15 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !4714
  %dw8 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %15, i32 0, i32 0, !dbg !4715
  %16 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw8, align 8, !dbg !4715
  %17 = load i32, i32* %j, align 4, !dbg !4716
  %idxprom9 = sext i32 %17 to i64, !dbg !4714
  %arrayidx10 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %16, i64 %idxprom9, !dbg !4714
  call void @defvert_remove_group(%struct.MDeformVert* %14, %struct.MDeformWeight* %arrayidx10), !dbg !4717
  %18 = load i32, i32* %j, align 4, !dbg !4718
  %dec = add nsw i32 %18, -1, !dbg !4718
  store i32 %dec, i32* %j, align 4, !dbg !4718
  br label %if.end, !dbg !4719

if.end:                                           ; preds = %if.then7, %for.body3
  br label %for.inc, !dbg !4720

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %j, align 4, !dbg !4721
  %inc = add nsw i32 %19, 1, !dbg !4721
  store i32 %inc, i32* %j, align 4, !dbg !4721
  br label %for.cond1, !dbg !4722, !llvm.loop !4723

for.end:                                          ; preds = %for.cond1
  br label %for.inc11, !dbg !4725

for.inc11:                                        ; preds = %for.end
  %20 = load i32, i32* %i, align 4, !dbg !4726
  %inc12 = add nsw i32 %20, 1, !dbg !4726
  store i32 %inc12, i32* %i, align 4, !dbg !4726
  br label %for.cond, !dbg !4727, !llvm.loop !4728

for.end13:                                        ; preds = %for.cond
  br label %if.end14, !dbg !4730

if.end14:                                         ; preds = %for.end13, %entry
  ret void, !dbg !4731
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %id, %struct.MDeformVert*** %dvert_arr, i32* %dvert_tot, i8 zeroext %use_vert_sel) #0 !dbg !4732 {
entry:
  %retval = alloca i8, align 1
  %id.addr = alloca %struct.ID*, align 8
  %dvert_arr.addr = alloca %struct.MDeformVert***, align 8
  %dvert_tot.addr = alloca i32*, align 8
  %use_vert_sel.addr = alloca i8, align 1
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %i = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  %dvert40 = alloca %struct.MDeformVert*, align 8
  %i42 = alloca i32, align 4
  %i88 = alloca i32, align 4
  %lt = alloca %struct.Lattice*, align 8
  %def = alloca %struct.BPoint*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4736, metadata !DIExpression()), !dbg !4737
  store %struct.MDeformVert*** %dvert_arr, %struct.MDeformVert**** %dvert_arr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert**** %dvert_arr.addr, metadata !4738, metadata !DIExpression()), !dbg !4739
  store i32* %dvert_tot, i32** %dvert_tot.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dvert_tot.addr, metadata !4740, metadata !DIExpression()), !dbg !4741
  store i8 %use_vert_sel, i8* %use_vert_sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_vert_sel.addr, metadata !4742, metadata !DIExpression()), !dbg !4743
  %0 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !4744
  store i32 0, i32* %0, align 4, !dbg !4745
  %1 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4746
  store %struct.MDeformVert** null, %struct.MDeformVert*** %1, align 8, !dbg !4747
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4748
  %tobool = icmp ne %struct.ID* %2, null, !dbg !4748
  br i1 %tobool, label %if.then, label %if.end143, !dbg !4750

if.then:                                          ; preds = %entry
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4751
  %name = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 4, !dbg !4751
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4751
  %4 = bitcast i8* %arraydecay to i16*, !dbg !4751
  %5 = load i16, i16* %4, align 8, !dbg !4751
  %conv = sext i16 %5 to i32, !dbg !4751
  switch i32 %conv, label %sw.epilog [
    i32 17741, label %sw.bb
    i32 21580, label %sw.bb87
  ], !dbg !4753

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4754, metadata !DIExpression()), !dbg !4757
  %6 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4758
  %7 = bitcast %struct.ID* %6 to %struct.Mesh*, !dbg !4759
  store %struct.Mesh* %7, %struct.Mesh** %me, align 8, !dbg !4757
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4760
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 20, !dbg !4762
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !4762
  %tobool1 = icmp ne %struct.BMEditMesh* %9, null, !dbg !4760
  br i1 %tobool1, label %if.then2, label %if.else36, !dbg !4763

if.then2:                                         ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4764, metadata !DIExpression()), !dbg !4766
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4767
  %edit_btmesh3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 20, !dbg !4768
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh3, align 8, !dbg !4768
  store %struct.BMEditMesh* %11, %struct.BMEditMesh** %em, align 8, !dbg !4766
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !4769, metadata !DIExpression()), !dbg !4770
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4771
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !4772
  %13 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !4772
  store %struct.BMesh* %13, %struct.BMesh** %bm, align 8, !dbg !4770
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !4773, metadata !DIExpression()), !dbg !4774
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4775
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 24, !dbg !4776
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !4777
  store i32 %call, i32* %cd_dvert_offset, align 4, !dbg !4774
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !4778, metadata !DIExpression()), !dbg !4779
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !4780, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4782, metadata !DIExpression()), !dbg !4783
  %15 = load i32, i32* %cd_dvert_offset, align 4, !dbg !4784
  %cmp = icmp eq i32 %15, -1, !dbg !4786
  br i1 %cmp, label %if.then6, label %if.end, !dbg !4787

if.then6:                                         ; preds = %if.then2
  store i8 0, i8* %retval, align 1, !dbg !4788
  br label %return, !dbg !4788

if.end:                                           ; preds = %if.then2
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4790
  %bm7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !4791
  %17 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !4791
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 0, !dbg !4792
  %18 = load i32, i32* %totvert, align 8, !dbg !4792
  store i32 %18, i32* %i, align 4, !dbg !4793
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4794
  %20 = load i32, i32* %i, align 4, !dbg !4795
  %conv8 = sext i32 %20 to i64, !dbg !4795
  %mul = mul i64 8, %conv8, !dbg !4796
  %call9 = call i8* %19(i64 %mul, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)), !dbg !4794
  %21 = bitcast i8* %call9 to %struct.MDeformVert**, !dbg !4794
  %22 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4797
  store %struct.MDeformVert** %21, %struct.MDeformVert*** %22, align 8, !dbg !4798
  %23 = load i32, i32* %i, align 4, !dbg !4799
  %24 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !4800
  store i32 %23, i32* %24, align 4, !dbg !4801
  store i32 0, i32* %i, align 4, !dbg !4802
  %25 = load i8, i8* %use_vert_sel.addr, align 1, !dbg !4803
  %tobool10 = icmp ne i8 %25, 0, !dbg !4803
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !4805

if.then11:                                        ; preds = %if.end
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4806
  %bm12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %26, i32 0, i32 0, !dbg !4806
  %27 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !4806
  %call13 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %27, i8 zeroext 1, i8* null), !dbg !4806
  %28 = bitcast i8* %call13 to %struct.BMVert*, !dbg !4806
  store %struct.BMVert* %28, %struct.BMVert** %eve, align 8, !dbg !4806
  br label %for.cond, !dbg !4806

for.cond:                                         ; preds = %for.inc, %if.then11
  %29 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4809
  %tobool14 = icmp ne %struct.BMVert* %29, null, !dbg !4806
  br i1 %tobool14, label %for.body, label %for.end, !dbg !4806

for.body:                                         ; preds = %for.cond
  %30 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4811
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %30, i32 0, i32 0, !dbg !4811
  %call15 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4811
  %conv16 = zext i8 %call15 to i32, !dbg !4811
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !4811
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !4811

cond.true:                                        ; preds = %for.body
  %31 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4813
  %head18 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 0, !dbg !4813
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head18, i32 0, i32 0, !dbg !4813
  %32 = load i8*, i8** %data, align 8, !dbg !4813
  %33 = load i32, i32* %cd_dvert_offset, align 4, !dbg !4813
  %idx.ext = sext i32 %33 to i64, !dbg !4813
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %idx.ext, !dbg !4813
  br label %cond.end, !dbg !4811

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !4811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ null, %cond.false ], !dbg !4811
  %34 = bitcast i8* %cond to %struct.MDeformVert*, !dbg !4811
  %35 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4814
  %36 = load %struct.MDeformVert**, %struct.MDeformVert*** %35, align 8, !dbg !4815
  %37 = load i32, i32* %i, align 4, !dbg !4816
  %idxprom = sext i32 %37 to i64, !dbg !4817
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %36, i64 %idxprom, !dbg !4817
  store %struct.MDeformVert* %34, %struct.MDeformVert** %arrayidx, align 8, !dbg !4818
  %38 = load i32, i32* %i, align 4, !dbg !4819
  %inc = add nsw i32 %38, 1, !dbg !4819
  store i32 %inc, i32* %i, align 4, !dbg !4819
  br label %for.inc, !dbg !4820

for.inc:                                          ; preds = %cond.end
  %call19 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4809
  %39 = bitcast i8* %call19 to %struct.BMVert*, !dbg !4809
  store %struct.BMVert* %39, %struct.BMVert** %eve, align 8, !dbg !4809
  br label %for.cond, !dbg !4809, !llvm.loop !4821

for.end:                                          ; preds = %for.cond
  br label %if.end35, !dbg !4823

if.else:                                          ; preds = %if.end
  %40 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4824
  %bm20 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %40, i32 0, i32 0, !dbg !4824
  %41 = load %struct.BMesh*, %struct.BMesh** %bm20, align 8, !dbg !4824
  %call21 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %41, i8 zeroext 1, i8* null), !dbg !4824
  %42 = bitcast i8* %call21 to %struct.BMVert*, !dbg !4824
  store %struct.BMVert* %42, %struct.BMVert** %eve, align 8, !dbg !4824
  br label %for.cond22, !dbg !4824

for.cond22:                                       ; preds = %for.inc32, %if.else
  %43 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4827
  %tobool23 = icmp ne %struct.BMVert* %43, null, !dbg !4824
  br i1 %tobool23, label %for.body24, label %for.end34, !dbg !4824

for.body24:                                       ; preds = %for.cond22
  %44 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4829
  %head25 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %44, i32 0, i32 0, !dbg !4829
  %data26 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head25, i32 0, i32 0, !dbg !4829
  %45 = load i8*, i8** %data26, align 8, !dbg !4829
  %46 = load i32, i32* %cd_dvert_offset, align 4, !dbg !4829
  %idx.ext27 = sext i32 %46 to i64, !dbg !4829
  %add.ptr28 = getelementptr inbounds i8, i8* %45, i64 %idx.ext27, !dbg !4829
  %47 = bitcast i8* %add.ptr28 to %struct.MDeformVert*, !dbg !4829
  %48 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4831
  %49 = load %struct.MDeformVert**, %struct.MDeformVert*** %48, align 8, !dbg !4832
  %50 = load i32, i32* %i, align 4, !dbg !4833
  %idxprom29 = sext i32 %50 to i64, !dbg !4834
  %arrayidx30 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %49, i64 %idxprom29, !dbg !4834
  store %struct.MDeformVert* %47, %struct.MDeformVert** %arrayidx30, align 8, !dbg !4835
  %51 = load i32, i32* %i, align 4, !dbg !4836
  %inc31 = add nsw i32 %51, 1, !dbg !4836
  store i32 %inc31, i32* %i, align 4, !dbg !4836
  br label %for.inc32, !dbg !4837

for.inc32:                                        ; preds = %for.body24
  %call33 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4827
  %52 = bitcast i8* %call33 to %struct.BMVert*, !dbg !4827
  store %struct.BMVert* %52, %struct.BMVert** %eve, align 8, !dbg !4827
  br label %for.cond22, !dbg !4827, !llvm.loop !4838

for.end34:                                        ; preds = %for.cond22
  br label %if.end35

if.end35:                                         ; preds = %for.end34, %for.end
  store i8 1, i8* %retval, align 1, !dbg !4840
  br label %return, !dbg !4840

if.else36:                                        ; preds = %sw.bb
  %53 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4841
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %53, i32 0, i32 17, !dbg !4843
  %54 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !4843
  %tobool37 = icmp ne %struct.MDeformVert* %54, null, !dbg !4841
  br i1 %tobool37, label %if.then38, label %if.end85, !dbg !4844

if.then38:                                        ; preds = %if.else36
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !4845, metadata !DIExpression()), !dbg !4847
  %55 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4848
  %mvert39 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %55, i32 0, i32 15, !dbg !4849
  %56 = load %struct.MVert*, %struct.MVert** %mvert39, align 8, !dbg !4849
  store %struct.MVert* %56, %struct.MVert** %mvert, align 8, !dbg !4847
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert40, metadata !4850, metadata !DIExpression()), !dbg !4851
  %57 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4852
  %dvert41 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %57, i32 0, i32 17, !dbg !4853
  %58 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert41, align 8, !dbg !4853
  store %struct.MDeformVert* %58, %struct.MDeformVert** %dvert40, align 8, !dbg !4851
  call void @llvm.dbg.declare(metadata i32* %i42, metadata !4854, metadata !DIExpression()), !dbg !4855
  %59 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4856
  %totvert43 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %59, i32 0, i32 26, !dbg !4857
  %60 = load i32, i32* %totvert43, align 8, !dbg !4857
  %61 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !4858
  store i32 %60, i32* %61, align 4, !dbg !4859
  %62 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4860
  %63 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4861
  %totvert44 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %63, i32 0, i32 26, !dbg !4862
  %64 = load i32, i32* %totvert44, align 8, !dbg !4862
  %conv45 = sext i32 %64 to i64, !dbg !4861
  %mul46 = mul i64 8, %conv45, !dbg !4863
  %call47 = call i8* %62(i64 %mul46, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)), !dbg !4860
  %65 = bitcast i8* %call47 to %struct.MDeformVert**, !dbg !4860
  %66 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4864
  store %struct.MDeformVert** %65, %struct.MDeformVert*** %66, align 8, !dbg !4865
  %67 = load i8, i8* %use_vert_sel.addr, align 1, !dbg !4866
  %tobool48 = icmp ne i8 %67, 0, !dbg !4866
  br i1 %tobool48, label %if.then49, label %if.else70, !dbg !4868

if.then49:                                        ; preds = %if.then38
  store i32 0, i32* %i42, align 4, !dbg !4869
  br label %for.cond50, !dbg !4872

for.cond50:                                       ; preds = %for.inc67, %if.then49
  %68 = load i32, i32* %i42, align 4, !dbg !4873
  %69 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4875
  %totvert51 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %69, i32 0, i32 26, !dbg !4876
  %70 = load i32, i32* %totvert51, align 8, !dbg !4876
  %cmp52 = icmp slt i32 %68, %70, !dbg !4877
  br i1 %cmp52, label %for.body54, label %for.end69, !dbg !4878

for.body54:                                       ; preds = %for.cond50
  %71 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4879
  %72 = load i32, i32* %i42, align 4, !dbg !4881
  %idxprom55 = sext i32 %72 to i64, !dbg !4879
  %arrayidx56 = getelementptr inbounds %struct.MVert, %struct.MVert* %71, i64 %idxprom55, !dbg !4879
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx56, i32 0, i32 2, !dbg !4882
  %73 = load i8, i8* %flag, align 2, !dbg !4882
  %conv57 = zext i8 %73 to i32, !dbg !4879
  %and = and i32 %conv57, 1, !dbg !4883
  %tobool58 = icmp ne i32 %and, 0, !dbg !4883
  br i1 %tobool58, label %cond.true59, label %cond.false62, !dbg !4884

cond.true59:                                      ; preds = %for.body54
  %74 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert40, align 8, !dbg !4885
  %75 = load i32, i32* %i42, align 4, !dbg !4886
  %idxprom60 = sext i32 %75 to i64, !dbg !4885
  %arrayidx61 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %74, i64 %idxprom60, !dbg !4885
  br label %cond.end63, !dbg !4884

cond.false62:                                     ; preds = %for.body54
  br label %cond.end63, !dbg !4884

cond.end63:                                       ; preds = %cond.false62, %cond.true59
  %cond64 = phi %struct.MDeformVert* [ %arrayidx61, %cond.true59 ], [ null, %cond.false62 ], !dbg !4884
  %76 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4887
  %77 = load %struct.MDeformVert**, %struct.MDeformVert*** %76, align 8, !dbg !4888
  %78 = load i32, i32* %i42, align 4, !dbg !4889
  %idxprom65 = sext i32 %78 to i64, !dbg !4890
  %arrayidx66 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %77, i64 %idxprom65, !dbg !4890
  store %struct.MDeformVert* %cond64, %struct.MDeformVert** %arrayidx66, align 8, !dbg !4891
  br label %for.inc67, !dbg !4892

for.inc67:                                        ; preds = %cond.end63
  %79 = load i32, i32* %i42, align 4, !dbg !4893
  %inc68 = add nsw i32 %79, 1, !dbg !4893
  store i32 %inc68, i32* %i42, align 4, !dbg !4893
  br label %for.cond50, !dbg !4894, !llvm.loop !4895

for.end69:                                        ; preds = %for.cond50
  br label %if.end84, !dbg !4897

if.else70:                                        ; preds = %if.then38
  store i32 0, i32* %i42, align 4, !dbg !4898
  br label %for.cond71, !dbg !4901

for.cond71:                                       ; preds = %for.inc81, %if.else70
  %80 = load i32, i32* %i42, align 4, !dbg !4902
  %81 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4904
  %totvert72 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 26, !dbg !4905
  %82 = load i32, i32* %totvert72, align 8, !dbg !4905
  %cmp73 = icmp slt i32 %80, %82, !dbg !4906
  br i1 %cmp73, label %for.body75, label %for.end83, !dbg !4907

for.body75:                                       ; preds = %for.cond71
  %83 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4908
  %dvert76 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %83, i32 0, i32 17, !dbg !4910
  %84 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert76, align 8, !dbg !4910
  %85 = load i32, i32* %i42, align 4, !dbg !4911
  %idx.ext77 = sext i32 %85 to i64, !dbg !4912
  %add.ptr78 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %84, i64 %idx.ext77, !dbg !4912
  %86 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4913
  %87 = load %struct.MDeformVert**, %struct.MDeformVert*** %86, align 8, !dbg !4914
  %88 = load i32, i32* %i42, align 4, !dbg !4915
  %idxprom79 = sext i32 %88 to i64, !dbg !4916
  %arrayidx80 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %87, i64 %idxprom79, !dbg !4916
  store %struct.MDeformVert* %add.ptr78, %struct.MDeformVert** %arrayidx80, align 8, !dbg !4917
  br label %for.inc81, !dbg !4918

for.inc81:                                        ; preds = %for.body75
  %89 = load i32, i32* %i42, align 4, !dbg !4919
  %inc82 = add nsw i32 %89, 1, !dbg !4919
  store i32 %inc82, i32* %i42, align 4, !dbg !4919
  br label %for.cond71, !dbg !4920, !llvm.loop !4921

for.end83:                                        ; preds = %for.cond71
  br label %if.end84

if.end84:                                         ; preds = %for.end83, %for.end69
  store i8 1, i8* %retval, align 1, !dbg !4923
  br label %return, !dbg !4923

if.end85:                                         ; preds = %if.else36
  br label %if.end86

if.end86:                                         ; preds = %if.end85
  store i8 0, i8* %retval, align 1, !dbg !4924
  br label %return, !dbg !4924

sw.bb87:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %i88, metadata !4925, metadata !DIExpression()), !dbg !4927
  store i32 0, i32* %i88, align 4, !dbg !4927
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4928, metadata !DIExpression()), !dbg !4929
  %90 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4930
  %91 = bitcast %struct.ID* %90 to %struct.Lattice*, !dbg !4931
  store %struct.Lattice* %91, %struct.Lattice** %lt, align 8, !dbg !4929
  %92 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4932
  %editlatt = getelementptr inbounds %struct.Lattice, %struct.Lattice* %92, i32 0, i32 26, !dbg !4933
  %93 = load %struct.EditLatt*, %struct.EditLatt** %editlatt, align 8, !dbg !4933
  %tobool89 = icmp ne %struct.EditLatt* %93, null, !dbg !4934
  br i1 %tobool89, label %cond.true90, label %cond.false92, !dbg !4934

cond.true90:                                      ; preds = %sw.bb87
  %94 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4935
  %editlatt91 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %94, i32 0, i32 26, !dbg !4936
  %95 = load %struct.EditLatt*, %struct.EditLatt** %editlatt91, align 8, !dbg !4936
  %latt = getelementptr inbounds %struct.EditLatt, %struct.EditLatt* %95, i32 0, i32 0, !dbg !4937
  %96 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !4937
  br label %cond.end93, !dbg !4934

cond.false92:                                     ; preds = %sw.bb87
  %97 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4938
  br label %cond.end93, !dbg !4934

cond.end93:                                       ; preds = %cond.false92, %cond.true90
  %cond94 = phi %struct.Lattice* [ %96, %cond.true90 ], [ %97, %cond.false92 ], !dbg !4934
  store %struct.Lattice* %cond94, %struct.Lattice** %lt, align 8, !dbg !4939
  %98 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4940
  %dvert95 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %98, i32 0, i32 24, !dbg !4942
  %99 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert95, align 8, !dbg !4942
  %tobool96 = icmp ne %struct.MDeformVert* %99, null, !dbg !4940
  br i1 %tobool96, label %if.then97, label %if.end142, !dbg !4943

if.then97:                                        ; preds = %cond.end93
  call void @llvm.dbg.declare(metadata %struct.BPoint** %def, metadata !4944, metadata !DIExpression()), !dbg !4946
  %100 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4947
  %def98 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %100, i32 0, i32 21, !dbg !4948
  %101 = load %struct.BPoint*, %struct.BPoint** %def98, align 8, !dbg !4948
  store %struct.BPoint* %101, %struct.BPoint** %def, align 8, !dbg !4946
  %102 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4949
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %102, i32 0, i32 2, !dbg !4950
  %103 = load i16, i16* %pntsu, align 8, !dbg !4950
  %conv99 = sext i16 %103 to i32, !dbg !4949
  %104 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4951
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %104, i32 0, i32 3, !dbg !4952
  %105 = load i16, i16* %pntsv, align 2, !dbg !4952
  %conv100 = sext i16 %105 to i32, !dbg !4951
  %mul101 = mul nsw i32 %conv99, %conv100, !dbg !4953
  %106 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4954
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %106, i32 0, i32 4, !dbg !4955
  %107 = load i16, i16* %pntsw, align 4, !dbg !4955
  %conv102 = sext i16 %107 to i32, !dbg !4954
  %mul103 = mul nsw i32 %mul101, %conv102, !dbg !4956
  %108 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !4957
  store i32 %mul103, i32* %108, align 4, !dbg !4958
  %109 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4959
  %110 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !4960
  %111 = load i32, i32* %110, align 4, !dbg !4961
  %conv104 = sext i32 %111 to i64, !dbg !4962
  %mul105 = mul i64 8, %conv104, !dbg !4963
  %call106 = call i8* %109(i64 %mul105, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)), !dbg !4959
  %112 = bitcast i8* %call106 to %struct.MDeformVert**, !dbg !4959
  %113 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4964
  store %struct.MDeformVert** %112, %struct.MDeformVert*** %113, align 8, !dbg !4965
  %114 = load i8, i8* %use_vert_sel.addr, align 1, !dbg !4966
  %tobool107 = icmp ne i8 %114, 0, !dbg !4966
  br i1 %tobool107, label %if.then108, label %if.else128, !dbg !4968

if.then108:                                       ; preds = %if.then97
  store i32 0, i32* %i88, align 4, !dbg !4969
  br label %for.cond109, !dbg !4972

for.cond109:                                      ; preds = %for.inc125, %if.then108
  %115 = load i32, i32* %i88, align 4, !dbg !4973
  %116 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !4975
  %117 = load i32, i32* %116, align 4, !dbg !4976
  %cmp110 = icmp slt i32 %115, %117, !dbg !4977
  br i1 %cmp110, label %for.body112, label %for.end127, !dbg !4978

for.body112:                                      ; preds = %for.cond109
  %118 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !4979
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %118, i32 0, i32 3, !dbg !4981
  %119 = load i16, i16* %f1, align 4, !dbg !4981
  %conv113 = sext i16 %119 to i32, !dbg !4979
  %and114 = and i32 %conv113, 1, !dbg !4982
  %tobool115 = icmp ne i32 %and114, 0, !dbg !4982
  br i1 %tobool115, label %cond.true116, label %cond.false120, !dbg !4983

cond.true116:                                     ; preds = %for.body112
  %120 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4984
  %dvert117 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %120, i32 0, i32 24, !dbg !4985
  %121 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert117, align 8, !dbg !4985
  %122 = load i32, i32* %i88, align 4, !dbg !4986
  %idxprom118 = sext i32 %122 to i64, !dbg !4984
  %arrayidx119 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %121, i64 %idxprom118, !dbg !4984
  br label %cond.end121, !dbg !4983

cond.false120:                                    ; preds = %for.body112
  br label %cond.end121, !dbg !4983

cond.end121:                                      ; preds = %cond.false120, %cond.true116
  %cond122 = phi %struct.MDeformVert* [ %arrayidx119, %cond.true116 ], [ null, %cond.false120 ], !dbg !4983
  %123 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !4987
  %124 = load %struct.MDeformVert**, %struct.MDeformVert*** %123, align 8, !dbg !4988
  %125 = load i32, i32* %i88, align 4, !dbg !4989
  %idxprom123 = sext i32 %125 to i64, !dbg !4990
  %arrayidx124 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %124, i64 %idxprom123, !dbg !4990
  store %struct.MDeformVert* %cond122, %struct.MDeformVert** %arrayidx124, align 8, !dbg !4991
  br label %for.inc125, !dbg !4992

for.inc125:                                       ; preds = %cond.end121
  %126 = load i32, i32* %i88, align 4, !dbg !4993
  %inc126 = add nsw i32 %126, 1, !dbg !4993
  store i32 %inc126, i32* %i88, align 4, !dbg !4993
  br label %for.cond109, !dbg !4994, !llvm.loop !4995

for.end127:                                       ; preds = %for.cond109
  br label %if.end141, !dbg !4997

if.else128:                                       ; preds = %if.then97
  store i32 0, i32* %i88, align 4, !dbg !4998
  br label %for.cond129, !dbg !5001

for.cond129:                                      ; preds = %for.inc138, %if.else128
  %127 = load i32, i32* %i88, align 4, !dbg !5002
  %128 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !5004
  %129 = load i32, i32* %128, align 4, !dbg !5005
  %cmp130 = icmp slt i32 %127, %129, !dbg !5006
  br i1 %cmp130, label %for.body132, label %for.end140, !dbg !5007

for.body132:                                      ; preds = %for.cond129
  %130 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5008
  %dvert133 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %130, i32 0, i32 24, !dbg !5010
  %131 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert133, align 8, !dbg !5010
  %132 = load i32, i32* %i88, align 4, !dbg !5011
  %idx.ext134 = sext i32 %132 to i64, !dbg !5012
  %add.ptr135 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %131, i64 %idx.ext134, !dbg !5012
  %133 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !5013
  %134 = load %struct.MDeformVert**, %struct.MDeformVert*** %133, align 8, !dbg !5014
  %135 = load i32, i32* %i88, align 4, !dbg !5015
  %idxprom136 = sext i32 %135 to i64, !dbg !5016
  %arrayidx137 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %134, i64 %idxprom136, !dbg !5016
  store %struct.MDeformVert* %add.ptr135, %struct.MDeformVert** %arrayidx137, align 8, !dbg !5017
  br label %for.inc138, !dbg !5018

for.inc138:                                       ; preds = %for.body132
  %136 = load i32, i32* %i88, align 4, !dbg !5019
  %inc139 = add nsw i32 %136, 1, !dbg !5019
  store i32 %inc139, i32* %i88, align 4, !dbg !5019
  br label %for.cond129, !dbg !5020, !llvm.loop !5021

for.end140:                                       ; preds = %for.cond129
  br label %if.end141

if.end141:                                        ; preds = %for.end140, %for.end127
  store i8 1, i8* %retval, align 1, !dbg !5023
  br label %return, !dbg !5023

if.end142:                                        ; preds = %cond.end93
  store i8 0, i8* %retval, align 1, !dbg !5024
  br label %return, !dbg !5024

sw.epilog:                                        ; preds = %if.then
  br label %if.end143, !dbg !5025

if.end143:                                        ; preds = %sw.epilog, %entry
  store i8 0, i8* %retval, align 1, !dbg !5026
  br label %return, !dbg !5026

return:                                           ; preds = %if.end143, %if.end142, %if.end141, %if.end86, %if.end84, %if.end35, %if.then6
  %137 = load i8, i8* %retval, align 1, !dbg !5027
  ret i8 %137, !dbg !5027
}

declare dso_local void @defvert_remove_group(%struct.MDeformVert*, %struct.MDeformWeight*) #2

declare dso_local i32 @CustomData_get_offset(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !5028 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !5033, metadata !DIExpression()), !dbg !5034
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !5035, metadata !DIExpression()), !dbg !5036
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !5037, metadata !DIExpression()), !dbg !5038
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5041
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5041
  %2 = load i8, i8* %itype.addr, align 1, !dbg !5041
  %3 = load i8*, i8** %data.addr, align 8, !dbg !5041
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !5041
  %tobool = icmp ne i8 %call, 0, !dbg !5041
  br i1 %tobool, label %if.then, label %if.else, !dbg !5043

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5044
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !5046
  store i8* %call1, i8** %retval, align 8, !dbg !5047
  br label %return, !dbg !5047

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !5048
  br label %return, !dbg !5048

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !5050
  ret i8* %5, !dbg !5050
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !5051 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !5059, metadata !DIExpression()), !dbg !5060
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !5061
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !5062
  %1 = load i8, i8* %hflag1, align 1, !dbg !5062
  %conv = zext i8 %1 to i32, !dbg !5061
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !5063
  %conv2 = zext i8 %2 to i32, !dbg !5063
  %and = and i32 %conv, %conv2, !dbg !5064
  %conv3 = trunc i32 %and to i8, !dbg !5061
  ret i8 %conv3, !dbg !5065
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !5066 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !5069, metadata !DIExpression()), !dbg !5070
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5071
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !5072
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !5072
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5073
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !5073
  %call = call i8* %1(i8* %3), !dbg !5071
  ret i8* %call, !dbg !5074
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_parray_mirror_sync(%struct.Object* %ob, %struct.MDeformVert** %dvert_array, i32 %dvert_tot, i8* %vgroup_validmap, i32 %vgroup_tot) #0 !dbg !5075 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dvert_array.addr = alloca %struct.MDeformVert**, align 8
  %dvert_tot.addr = alloca i32, align 4
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  %dvert_array_all = alloca %struct.MDeformVert**, align 8
  %dvert_tot_all = alloca i32, align 4
  %i = alloca i32, align 4
  %i_sel = alloca i32, align 4
  %dv_src = alloca %struct.MDeformVert*, align 8
  %dv_dst = alloca %struct.MDeformVert*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5079, metadata !DIExpression()), !dbg !5080
  store %struct.MDeformVert** %dvert_array, %struct.MDeformVert*** %dvert_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array.addr, metadata !5081, metadata !DIExpression()), !dbg !5082
  store i32 %dvert_tot, i32* %dvert_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dvert_tot.addr, metadata !5083, metadata !DIExpression()), !dbg !5084
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !5085, metadata !DIExpression()), !dbg !5086
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !5087, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5089, metadata !DIExpression()), !dbg !5090
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5091
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !5092
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !5090
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array_all, metadata !5093, metadata !DIExpression()), !dbg !5094
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array_all, align 8, !dbg !5094
  call void @llvm.dbg.declare(metadata i32* %dvert_tot_all, metadata !5095, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5097, metadata !DIExpression()), !dbg !5098
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5099
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !5101
  %2 = load i8*, i8** %data, align 8, !dbg !5101
  %3 = bitcast i8* %2 to %struct.ID*, !dbg !5099
  %call1 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %3, %struct.MDeformVert*** %dvert_array_all, i32* %dvert_tot_all, i8 zeroext 0), !dbg !5102
  %conv = zext i8 %call1 to i32, !dbg !5102
  %cmp = icmp eq i32 %conv, 0, !dbg !5103
  br i1 %cmp, label %if.then, label %if.end, !dbg !5104

if.then:                                          ; preds = %entry
  br label %return, !dbg !5105

if.end:                                           ; preds = %entry
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5107
  %tobool = icmp ne %struct.BMEditMesh* %4, null, !dbg !5107
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !5109

if.then3:                                         ; preds = %if.end
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5110
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !5112
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5112
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %6, i8 zeroext 1), !dbg !5113
  br label %if.end4, !dbg !5114

if.end4:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %i, align 4, !dbg !5115
  br label %for.cond, !dbg !5117

for.cond:                                         ; preds = %for.inc, %if.end4
  %7 = load i32, i32* %i, align 4, !dbg !5118
  %8 = load i32, i32* %dvert_tot.addr, align 4, !dbg !5120
  %cmp5 = icmp slt i32 %7, %8, !dbg !5121
  br i1 %cmp5, label %for.body, label %for.end, !dbg !5122

for.body:                                         ; preds = %for.cond
  %9 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array.addr, align 8, !dbg !5123
  %10 = load i32, i32* %i, align 4, !dbg !5126
  %idxprom = sext i32 %10 to i64, !dbg !5123
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %9, i64 %idxprom, !dbg !5123
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !5123
  %cmp7 = icmp eq %struct.MDeformVert* %11, null, !dbg !5127
  br i1 %cmp7, label %if.then9, label %if.end29, !dbg !5128

if.then9:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %i_sel, metadata !5129, metadata !DIExpression()), !dbg !5131
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5132
  %13 = load i32, i32* %i, align 4, !dbg !5133
  %call10 = call i32 @ED_mesh_mirror_get_vert(%struct.Object* %12, i32 %13), !dbg !5134
  store i32 %call10, i32* %i_sel, align 4, !dbg !5131
  %14 = load i32, i32* %i_sel, align 4, !dbg !5135
  %cmp11 = icmp ne i32 %14, -1, !dbg !5137
  br i1 %cmp11, label %land.lhs.true, label %if.end28, !dbg !5138

land.lhs.true:                                    ; preds = %if.then9
  %15 = load i32, i32* %i_sel, align 4, !dbg !5139
  %16 = load i32, i32* %i, align 4, !dbg !5140
  %cmp13 = icmp ne i32 %15, %16, !dbg !5141
  br i1 %cmp13, label %land.lhs.true15, label %if.end28, !dbg !5142

land.lhs.true15:                                  ; preds = %land.lhs.true
  %17 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array.addr, align 8, !dbg !5143
  %18 = load i32, i32* %i_sel, align 4, !dbg !5144
  %idxprom16 = sext i32 %18 to i64, !dbg !5143
  %arrayidx17 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %17, i64 %idxprom16, !dbg !5143
  %19 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx17, align 8, !dbg !5143
  %tobool18 = icmp ne %struct.MDeformVert* %19, null, !dbg !5145
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !5146

if.then19:                                        ; preds = %land.lhs.true15
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv_src, metadata !5147, metadata !DIExpression()), !dbg !5149
  %20 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array.addr, align 8, !dbg !5150
  %21 = load i32, i32* %i_sel, align 4, !dbg !5151
  %idxprom20 = sext i32 %21 to i64, !dbg !5150
  %arrayidx21 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %20, i64 %idxprom20, !dbg !5150
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx21, align 8, !dbg !5150
  store %struct.MDeformVert* %22, %struct.MDeformVert** %dv_src, align 8, !dbg !5149
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv_dst, metadata !5152, metadata !DIExpression()), !dbg !5153
  %23 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_all, align 8, !dbg !5154
  %24 = load i32, i32* %i, align 4, !dbg !5155
  %idxprom22 = sext i32 %24 to i64, !dbg !5154
  %arrayidx23 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %23, i64 %idxprom22, !dbg !5154
  %25 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx23, align 8, !dbg !5154
  store %struct.MDeformVert* %25, %struct.MDeformVert** %dv_dst, align 8, !dbg !5153
  %26 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_dst, align 8, !dbg !5156
  %27 = load %struct.MDeformVert*, %struct.MDeformVert** %dv_src, align 8, !dbg !5157
  %28 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !5158
  %29 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !5159
  call void @defvert_copy_subset(%struct.MDeformVert* %26, %struct.MDeformVert* %27, i8* %28, i32 %29), !dbg !5160
  %30 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_all, align 8, !dbg !5161
  %31 = load i32, i32* %i, align 4, !dbg !5162
  %idxprom24 = sext i32 %31 to i64, !dbg !5161
  %arrayidx25 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %30, i64 %idxprom24, !dbg !5161
  %32 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx25, align 8, !dbg !5161
  %33 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array.addr, align 8, !dbg !5163
  %34 = load i32, i32* %i, align 4, !dbg !5164
  %idxprom26 = sext i32 %34 to i64, !dbg !5163
  %arrayidx27 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %33, i64 %idxprom26, !dbg !5163
  store %struct.MDeformVert* %32, %struct.MDeformVert** %arrayidx27, align 8, !dbg !5165
  br label %if.end28, !dbg !5166

if.end28:                                         ; preds = %if.then19, %land.lhs.true15, %land.lhs.true, %if.then9
  br label %if.end29, !dbg !5167

if.end29:                                         ; preds = %if.end28, %for.body
  br label %for.inc, !dbg !5168

for.inc:                                          ; preds = %if.end29
  %35 = load i32, i32* %i, align 4, !dbg !5169
  %inc = add nsw i32 %35, 1, !dbg !5169
  store i32 %inc, i32* %i, align 4, !dbg !5169
  br label %for.cond, !dbg !5170, !llvm.loop !5171

for.end:                                          ; preds = %for.cond
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5173
  %37 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_all, align 8, !dbg !5174
  %38 = bitcast %struct.MDeformVert** %37 to i8*, !dbg !5174
  call void %36(i8* %38), !dbg !5173
  br label %return, !dbg !5175

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !5175
}

declare dso_local void @BM_mesh_elem_table_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local i32 @ED_mesh_mirror_get_vert(%struct.Object*, i32) #2

declare dso_local void @defvert_copy_subset(%struct.MDeformVert*, %struct.MDeformVert*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_parray_mirror_assign(%struct.Object* %ob, %struct.MDeformVert** %dvert_array, i32 %dvert_tot) #0 !dbg !5176 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dvert_array.addr = alloca %struct.MDeformVert**, align 8
  %dvert_tot.addr = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  %dvert_array_all = alloca %struct.MDeformVert**, align 8
  %dvert_tot_all = alloca i32, align 4
  %i = alloca i32, align 4
  %i_sel = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5179, metadata !DIExpression()), !dbg !5180
  store %struct.MDeformVert** %dvert_array, %struct.MDeformVert*** %dvert_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array.addr, metadata !5181, metadata !DIExpression()), !dbg !5182
  store i32 %dvert_tot, i32* %dvert_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dvert_tot.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5185, metadata !DIExpression()), !dbg !5186
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5187
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !5188
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !5186
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array_all, metadata !5189, metadata !DIExpression()), !dbg !5190
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array_all, align 8, !dbg !5190
  call void @llvm.dbg.declare(metadata i32* %dvert_tot_all, metadata !5191, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5193, metadata !DIExpression()), !dbg !5194
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5195
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !5197
  %2 = load i8*, i8** %data, align 8, !dbg !5197
  %3 = bitcast i8* %2 to %struct.ID*, !dbg !5195
  %call1 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %3, %struct.MDeformVert*** %dvert_array_all, i32* %dvert_tot_all, i8 zeroext 0), !dbg !5198
  %conv = zext i8 %call1 to i32, !dbg !5198
  %cmp = icmp eq i32 %conv, 0, !dbg !5199
  br i1 %cmp, label %if.then, label %if.end, !dbg !5200

if.then:                                          ; preds = %entry
  br label %return, !dbg !5201

if.end:                                           ; preds = %entry
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5203
  %tobool = icmp ne %struct.BMEditMesh* %4, null, !dbg !5203
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !5205

if.then3:                                         ; preds = %if.end
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5206
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !5208
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5208
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %6, i8 zeroext 1), !dbg !5209
  br label %if.end4, !dbg !5210

if.end4:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %i, align 4, !dbg !5211
  br label %for.cond, !dbg !5213

for.cond:                                         ; preds = %for.inc, %if.end4
  %7 = load i32, i32* %i, align 4, !dbg !5214
  %8 = load i32, i32* %dvert_tot.addr, align 4, !dbg !5216
  %cmp5 = icmp slt i32 %7, %8, !dbg !5217
  br i1 %cmp5, label %for.body, label %for.end, !dbg !5218

for.body:                                         ; preds = %for.cond
  %9 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array.addr, align 8, !dbg !5219
  %10 = load i32, i32* %i, align 4, !dbg !5222
  %idxprom = sext i32 %10 to i64, !dbg !5219
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %9, i64 %idxprom, !dbg !5219
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !5219
  %cmp7 = icmp eq %struct.MDeformVert* %11, null, !dbg !5223
  br i1 %cmp7, label %if.then9, label %if.end25, !dbg !5224

if.then9:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %i_sel, metadata !5225, metadata !DIExpression()), !dbg !5227
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5228
  %13 = load i32, i32* %i, align 4, !dbg !5229
  %call10 = call i32 @ED_mesh_mirror_get_vert(%struct.Object* %12, i32 %13), !dbg !5230
  store i32 %call10, i32* %i_sel, align 4, !dbg !5227
  %14 = load i32, i32* %i_sel, align 4, !dbg !5231
  %cmp11 = icmp ne i32 %14, -1, !dbg !5233
  br i1 %cmp11, label %land.lhs.true, label %if.end24, !dbg !5234

land.lhs.true:                                    ; preds = %if.then9
  %15 = load i32, i32* %i_sel, align 4, !dbg !5235
  %16 = load i32, i32* %i, align 4, !dbg !5236
  %cmp13 = icmp ne i32 %15, %16, !dbg !5237
  br i1 %cmp13, label %land.lhs.true15, label %if.end24, !dbg !5238

land.lhs.true15:                                  ; preds = %land.lhs.true
  %17 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array.addr, align 8, !dbg !5239
  %18 = load i32, i32* %i_sel, align 4, !dbg !5240
  %idxprom16 = sext i32 %18 to i64, !dbg !5239
  %arrayidx17 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %17, i64 %idxprom16, !dbg !5239
  %19 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx17, align 8, !dbg !5239
  %tobool18 = icmp ne %struct.MDeformVert* %19, null, !dbg !5241
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !5242

if.then19:                                        ; preds = %land.lhs.true15
  %20 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_all, align 8, !dbg !5243
  %21 = load i32, i32* %i, align 4, !dbg !5245
  %idxprom20 = sext i32 %21 to i64, !dbg !5243
  %arrayidx21 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %20, i64 %idxprom20, !dbg !5243
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx21, align 8, !dbg !5243
  %23 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array.addr, align 8, !dbg !5246
  %24 = load i32, i32* %i, align 4, !dbg !5247
  %idxprom22 = sext i32 %24 to i64, !dbg !5246
  %arrayidx23 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %23, i64 %idxprom22, !dbg !5246
  store %struct.MDeformVert* %22, %struct.MDeformVert** %arrayidx23, align 8, !dbg !5248
  br label %if.end24, !dbg !5249

if.end24:                                         ; preds = %if.then19, %land.lhs.true15, %land.lhs.true, %if.then9
  br label %if.end25, !dbg !5250

if.end25:                                         ; preds = %if.end24, %for.body
  br label %for.inc, !dbg !5251

for.inc:                                          ; preds = %if.end25
  %25 = load i32, i32* %i, align 4, !dbg !5252
  %inc = add nsw i32 %25, 1, !dbg !5252
  store i32 %inc, i32* %i, align 4, !dbg !5252
  br label %for.cond, !dbg !5253, !llvm.loop !5254

for.end:                                          ; preds = %for.cond
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5256
  %27 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_all, align 8, !dbg !5257
  %28 = bitcast %struct.MDeformVert** %27 to i8*, !dbg !5257
  call void %26(i8* %28), !dbg !5256
  br label %return, !dbg !5258

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !5258
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_parray_remove_zero(%struct.MDeformVert** %dvert_array, i32 %dvert_tot, i8* %vgroup_validmap, i32 %vgroup_tot, float %epsilon, i8 zeroext %keep_single) #0 !dbg !5259 {
entry:
  %dvert_array.addr = alloca %struct.MDeformVert**, align 8
  %dvert_tot.addr = alloca i32, align 4
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %epsilon.addr = alloca float, align 4
  %keep_single.addr = alloca i8, align 1
  %dv = alloca %struct.MDeformVert*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.MDeformVert** %dvert_array, %struct.MDeformVert*** %dvert_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array.addr, metadata !5262, metadata !DIExpression()), !dbg !5263
  store i32 %dvert_tot, i32* %dvert_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dvert_tot.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !5266, metadata !DIExpression()), !dbg !5267
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !5268, metadata !DIExpression()), !dbg !5269
  store float %epsilon, float* %epsilon.addr, align 4
  call void @llvm.dbg.declare(metadata float* %epsilon.addr, metadata !5270, metadata !DIExpression()), !dbg !5271
  store i8 %keep_single, i8* %keep_single.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %keep_single.addr, metadata !5272, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !5274, metadata !DIExpression()), !dbg !5275
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5276, metadata !DIExpression()), !dbg !5277
  store i32 0, i32* %i, align 4, !dbg !5278
  br label %for.cond, !dbg !5280

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5281
  %1 = load i32, i32* %dvert_tot.addr, align 4, !dbg !5283
  %cmp = icmp slt i32 %0, %1, !dbg !5284
  br i1 %cmp, label %for.body, label %for.end, !dbg !5285

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5286, metadata !DIExpression()), !dbg !5288
  %2 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array.addr, align 8, !dbg !5289
  %3 = load i32, i32* %i, align 4, !dbg !5291
  %idxprom = sext i32 %3 to i64, !dbg !5289
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %2, i64 %idxprom, !dbg !5289
  %4 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !5289
  store %struct.MDeformVert* %4, %struct.MDeformVert** %dv, align 8, !dbg !5292
  %tobool = icmp ne %struct.MDeformVert* %4, null, !dbg !5292
  br i1 %tobool, label %if.end, label %if.then, !dbg !5293

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !5294

if.end:                                           ; preds = %for.body
  %5 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5296
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %5, i32 0, i32 1, !dbg !5297
  %6 = load i32, i32* %totweight, align 8, !dbg !5297
  store i32 %6, i32* %j, align 4, !dbg !5298
  br label %while.cond, !dbg !5299

while.cond:                                       ; preds = %if.end22, %if.end
  %7 = load i32, i32* %j, align 4, !dbg !5300
  %dec = add nsw i32 %7, -1, !dbg !5300
  store i32 %dec, i32* %j, align 4, !dbg !5300
  %tobool1 = icmp ne i32 %7, 0, !dbg !5299
  br i1 %tobool1, label %while.body, label %while.end, !dbg !5299

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !5301, metadata !DIExpression()), !dbg !5303
  %8 = load i8, i8* %keep_single.addr, align 1, !dbg !5304
  %conv = zext i8 %8 to i32, !dbg !5304
  %tobool2 = icmp ne i32 %conv, 0, !dbg !5304
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !5306

land.lhs.true:                                    ; preds = %while.body
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5307
  %totweight3 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %9, i32 0, i32 1, !dbg !5308
  %10 = load i32, i32* %totweight3, align 8, !dbg !5308
  %cmp4 = icmp eq i32 %10, 1, !dbg !5309
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !5310

if.then6:                                         ; preds = %land.lhs.true
  br label %while.end, !dbg !5311

if.end7:                                          ; preds = %land.lhs.true, %while.body
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5312
  %dw8 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %11, i32 0, i32 0, !dbg !5313
  %12 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw8, align 8, !dbg !5313
  %13 = load i32, i32* %j, align 4, !dbg !5314
  %idx.ext = sext i32 %13 to i64, !dbg !5315
  %add.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %12, i64 %idx.ext, !dbg !5315
  store %struct.MDeformWeight* %add.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !5316
  %14 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5317
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %14, i32 0, i32 0, !dbg !5319
  %15 = load i32, i32* %def_nr, align 4, !dbg !5319
  %16 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !5320
  %cmp9 = icmp slt i32 %15, %16, !dbg !5321
  br i1 %cmp9, label %land.lhs.true11, label %if.end22, !dbg !5322

land.lhs.true11:                                  ; preds = %if.end7
  %17 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !5323
  %18 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5324
  %def_nr12 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %18, i32 0, i32 0, !dbg !5325
  %19 = load i32, i32* %def_nr12, align 4, !dbg !5325
  %idxprom13 = sext i32 %19 to i64, !dbg !5323
  %arrayidx14 = getelementptr inbounds i8, i8* %17, i64 %idxprom13, !dbg !5323
  %20 = load i8, i8* %arrayidx14, align 1, !dbg !5323
  %conv15 = zext i8 %20 to i32, !dbg !5323
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !5323
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !5326

if.then17:                                        ; preds = %land.lhs.true11
  %21 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5327
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %21, i32 0, i32 1, !dbg !5330
  %22 = load float, float* %weight, align 4, !dbg !5330
  %23 = load float, float* %epsilon.addr, align 4, !dbg !5331
  %cmp18 = fcmp ole float %22, %23, !dbg !5332
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !5333

if.then20:                                        ; preds = %if.then17
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !5334
  %25 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5336
  call void @defvert_remove_group(%struct.MDeformVert* %24, %struct.MDeformWeight* %25), !dbg !5337
  br label %if.end21, !dbg !5338

if.end21:                                         ; preds = %if.then20, %if.then17
  br label %if.end22, !dbg !5339

if.end22:                                         ; preds = %if.end21, %land.lhs.true11, %if.end7
  br label %while.cond, !dbg !5299, !llvm.loop !5340

while.end:                                        ; preds = %if.then6, %while.cond
  br label %for.inc, !dbg !5342

for.inc:                                          ; preds = %while.end, %if.then
  %26 = load i32, i32* %i, align 4, !dbg !5343
  %inc = add nsw i32 %26, 1, !dbg !5343
  store i32 %inc, i32* %i, align 4, !dbg !5343
  br label %for.cond, !dbg !5344, !llvm.loop !5345

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5347
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_vgroup_array_get(%struct.ID* %id, %struct.MDeformVert** %dvert_arr, i32* %dvert_tot) #0 !dbg !5348 {
entry:
  %retval = alloca i8, align 1
  %id.addr = alloca %struct.ID*, align 8
  %dvert_arr.addr = alloca %struct.MDeformVert**, align 8
  %dvert_tot.addr = alloca i32*, align 8
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  store %struct.MDeformVert** %dvert_arr, %struct.MDeformVert*** %dvert_arr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_arr.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  store i32* %dvert_tot, i32** %dvert_tot.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dvert_tot.addr, metadata !5355, metadata !DIExpression()), !dbg !5356
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5357
  %tobool = icmp ne %struct.ID* %0, null, !dbg !5357
  br i1 %tobool, label %if.then, label %if.end, !dbg !5359

if.then:                                          ; preds = %entry
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5360
  %name = getelementptr inbounds %struct.ID, %struct.ID* %1, i32 0, i32 4, !dbg !5360
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5360
  %2 = bitcast i8* %arraydecay to i16*, !dbg !5360
  %3 = load i16, i16* %2, align 8, !dbg !5360
  %conv = sext i16 %3 to i32, !dbg !5360
  switch i32 %conv, label %sw.epilog [
    i32 17741, label %sw.bb
    i32 21580, label %sw.bb1
  ], !dbg !5362

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5363, metadata !DIExpression()), !dbg !5366
  %4 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5367
  %5 = bitcast %struct.ID* %4 to %struct.Mesh*, !dbg !5368
  store %struct.Mesh* %5, %struct.Mesh** %me, align 8, !dbg !5366
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5369
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 17, !dbg !5370
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !5370
  %8 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_arr.addr, align 8, !dbg !5371
  store %struct.MDeformVert* %7, %struct.MDeformVert** %8, align 8, !dbg !5372
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5373
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !5374
  %10 = load i32, i32* %totvert, align 8, !dbg !5374
  %11 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !5375
  store i32 %10, i32* %11, align 4, !dbg !5376
  store i8 1, i8* %retval, align 1, !dbg !5377
  br label %return, !dbg !5377

sw.bb1:                                           ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !5378, metadata !DIExpression()), !dbg !5380
  %12 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5381
  %13 = bitcast %struct.ID* %12 to %struct.Lattice*, !dbg !5382
  store %struct.Lattice* %13, %struct.Lattice** %lt, align 8, !dbg !5380
  %14 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5383
  %editlatt = getelementptr inbounds %struct.Lattice, %struct.Lattice* %14, i32 0, i32 26, !dbg !5384
  %15 = load %struct.EditLatt*, %struct.EditLatt** %editlatt, align 8, !dbg !5384
  %tobool2 = icmp ne %struct.EditLatt* %15, null, !dbg !5385
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !5385

cond.true:                                        ; preds = %sw.bb1
  %16 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5386
  %editlatt3 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %16, i32 0, i32 26, !dbg !5387
  %17 = load %struct.EditLatt*, %struct.EditLatt** %editlatt3, align 8, !dbg !5387
  %latt = getelementptr inbounds %struct.EditLatt, %struct.EditLatt* %17, i32 0, i32 0, !dbg !5388
  %18 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !5388
  br label %cond.end, !dbg !5385

cond.false:                                       ; preds = %sw.bb1
  %19 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5389
  br label %cond.end, !dbg !5385

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Lattice* [ %18, %cond.true ], [ %19, %cond.false ], !dbg !5385
  store %struct.Lattice* %cond, %struct.Lattice** %lt, align 8, !dbg !5390
  %20 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5391
  %dvert4 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %20, i32 0, i32 24, !dbg !5392
  %21 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert4, align 8, !dbg !5392
  %22 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_arr.addr, align 8, !dbg !5393
  store %struct.MDeformVert* %21, %struct.MDeformVert** %22, align 8, !dbg !5394
  %23 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5395
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %23, i32 0, i32 2, !dbg !5396
  %24 = load i16, i16* %pntsu, align 8, !dbg !5396
  %conv5 = sext i16 %24 to i32, !dbg !5395
  %25 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5397
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %25, i32 0, i32 3, !dbg !5398
  %26 = load i16, i16* %pntsv, align 2, !dbg !5398
  %conv6 = sext i16 %26 to i32, !dbg !5397
  %mul = mul nsw i32 %conv5, %conv6, !dbg !5399
  %27 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5400
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %27, i32 0, i32 4, !dbg !5401
  %28 = load i16, i16* %pntsw, align 4, !dbg !5401
  %conv7 = sext i16 %28 to i32, !dbg !5400
  %mul8 = mul nsw i32 %mul, %conv7, !dbg !5402
  %29 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !5403
  store i32 %mul8, i32* %29, align 4, !dbg !5404
  store i8 1, i8* %retval, align 1, !dbg !5405
  br label %return, !dbg !5405

sw.epilog:                                        ; preds = %if.then
  br label %if.end, !dbg !5406

if.end:                                           ; preds = %sw.epilog, %entry
  %30 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_arr.addr, align 8, !dbg !5407
  store %struct.MDeformVert* null, %struct.MDeformVert** %30, align 8, !dbg !5408
  %31 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !5409
  store i32 0, i32* %31, align 4, !dbg !5410
  store i8 0, i8* %retval, align 1, !dbg !5411
  br label %return, !dbg !5411

return:                                           ; preds = %if.end, %cond.end, %sw.bb
  %32 = load i8, i8* %retval, align 1, !dbg !5412
  ret i8 %32, !dbg !5412
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ED_vgroup_array_copy(%struct.Object* %ob, %struct.Object* %ob_from) #0 !dbg !5413 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %ob_from.addr = alloca %struct.Object*, align 8
  %dvert_array_from = alloca %struct.MDeformVert**, align 8
  %dvf = alloca %struct.MDeformVert**, align 8
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %dv = alloca %struct.MDeformVert**, align 8
  %dvert_tot_from = alloca i32, align 4
  %dvert_tot = alloca i32, align 4
  %i = alloca i32, align 4
  %defbase_tot_from = alloca i32, align 4
  %defbase_tot = alloca i32, align 4
  %new_vgroup = alloca i8, align 1
  %remap = alloca i32*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5416, metadata !DIExpression()), !dbg !5417
  store %struct.Object* %ob_from, %struct.Object** %ob_from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_from.addr, metadata !5418, metadata !DIExpression()), !dbg !5419
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array_from, metadata !5420, metadata !DIExpression()), !dbg !5421
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvf, metadata !5422, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !5424, metadata !DIExpression()), !dbg !5425
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dv, metadata !5426, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.declare(metadata i32* %dvert_tot_from, metadata !5428, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !5430, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5432, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.declare(metadata i32* %defbase_tot_from, metadata !5434, metadata !DIExpression()), !dbg !5435
  %0 = load %struct.Object*, %struct.Object** %ob_from.addr, align 8, !dbg !5436
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !5437
  %call = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !5438
  store i32 %call, i32* %defbase_tot_from, align 4, !dbg !5435
  call void @llvm.dbg.declare(metadata i32* %defbase_tot, metadata !5439, metadata !DIExpression()), !dbg !5440
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5441
  %defbase1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 25, !dbg !5442
  %call2 = call i32 @BLI_countlist(%struct.ListBase* %defbase1), !dbg !5443
  store i32 %call2, i32* %defbase_tot, align 4, !dbg !5440
  call void @llvm.dbg.declare(metadata i8* %new_vgroup, metadata !5444, metadata !DIExpression()), !dbg !5445
  store i8 0, i8* %new_vgroup, align 1, !dbg !5445
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5446
  %3 = load %struct.Object*, %struct.Object** %ob_from.addr, align 8, !dbg !5448
  %cmp = icmp eq %struct.Object* %2, %3, !dbg !5449
  br i1 %cmp, label %if.then, label %if.end, !dbg !5450

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !5451
  br label %return, !dbg !5451

if.end:                                           ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob_from.addr, align 8, !dbg !5452
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !5453
  %5 = load i8*, i8** %data, align 8, !dbg !5453
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !5452
  %call3 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %6, %struct.MDeformVert*** %dvert_array_from, i32* %dvert_tot_from, i8 zeroext 0), !dbg !5454
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5455
  %data4 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !5456
  %8 = load i8*, i8** %data4, align 8, !dbg !5456
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !5455
  %call5 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %9, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext 0), !dbg !5457
  %10 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !5458
  %cmp6 = icmp eq %struct.MDeformVert** %10, null, !dbg !5460
  br i1 %cmp6, label %land.lhs.true, label %if.end14, !dbg !5461

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_from, align 8, !dbg !5462
  %cmp7 = icmp ne %struct.MDeformVert** %11, null, !dbg !5463
  br i1 %cmp7, label %land.lhs.true8, label %if.end14, !dbg !5464

land.lhs.true8:                                   ; preds = %land.lhs.true
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5465
  %data9 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !5466
  %13 = load i8*, i8** %data9, align 8, !dbg !5466
  %14 = bitcast i8* %13 to %struct.ID*, !dbg !5465
  %call10 = call zeroext i8 @ED_vgroup_data_create(%struct.ID* %14), !dbg !5467
  %conv = zext i8 %call10 to i32, !dbg !5467
  %tobool = icmp ne i32 %conv, 0, !dbg !5467
  br i1 %tobool, label %if.then11, label %if.end14, !dbg !5468

if.then11:                                        ; preds = %land.lhs.true8
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5469
  %data12 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 19, !dbg !5471
  %16 = load i8*, i8** %data12, align 8, !dbg !5471
  %17 = bitcast i8* %16 to %struct.ID*, !dbg !5469
  %call13 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %17, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext 0), !dbg !5472
  store i8 1, i8* %new_vgroup, align 1, !dbg !5473
  br label %if.end14, !dbg !5474

if.end14:                                         ; preds = %if.then11, %land.lhs.true8, %land.lhs.true, %if.end
  %18 = load i32, i32* %dvert_tot, align 4, !dbg !5475
  %cmp15 = icmp eq i32 %18, 0, !dbg !5477
  br i1 %cmp15, label %if.then25, label %lor.lhs.false, !dbg !5478

lor.lhs.false:                                    ; preds = %if.end14
  %19 = load i32, i32* %dvert_tot, align 4, !dbg !5479
  %20 = load i32, i32* %dvert_tot_from, align 4, !dbg !5480
  %cmp17 = icmp ne i32 %19, %20, !dbg !5481
  br i1 %cmp17, label %if.then25, label %lor.lhs.false19, !dbg !5482

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %21 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_from, align 8, !dbg !5483
  %cmp20 = icmp eq %struct.MDeformVert** %21, null, !dbg !5484
  br i1 %cmp20, label %if.then25, label %lor.lhs.false22, !dbg !5485

lor.lhs.false22:                                  ; preds = %lor.lhs.false19
  %22 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !5486
  %cmp23 = icmp eq %struct.MDeformVert** %22, null, !dbg !5487
  br i1 %cmp23, label %if.then25, label %if.end40, !dbg !5488

if.then25:                                        ; preds = %lor.lhs.false22, %lor.lhs.false19, %lor.lhs.false, %if.end14
  %23 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !5489
  %tobool26 = icmp ne %struct.MDeformVert** %23, null, !dbg !5489
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !5492

if.then27:                                        ; preds = %if.then25
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5493
  %25 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !5494
  %26 = bitcast %struct.MDeformVert** %25 to i8*, !dbg !5494
  call void %24(i8* %26), !dbg !5493
  br label %if.end28, !dbg !5493

if.end28:                                         ; preds = %if.then27, %if.then25
  %27 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_from, align 8, !dbg !5495
  %tobool29 = icmp ne %struct.MDeformVert** %27, null, !dbg !5495
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !5497

if.then30:                                        ; preds = %if.end28
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5498
  %29 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_from, align 8, !dbg !5499
  %30 = bitcast %struct.MDeformVert** %29 to i8*, !dbg !5499
  call void %28(i8* %30), !dbg !5498
  br label %if.end31, !dbg !5498

if.end31:                                         ; preds = %if.then30, %if.end28
  %31 = load i8, i8* %new_vgroup, align 1, !dbg !5500
  %conv32 = zext i8 %31 to i32, !dbg !5500
  %cmp33 = icmp eq i32 %conv32, 1, !dbg !5502
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !5503

if.then35:                                        ; preds = %if.end31
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5504
  call void @vgroup_delete_all(%struct.Object* %32), !dbg !5506
  br label %if.end36, !dbg !5507

if.end36:                                         ; preds = %if.then35, %if.end31
  %33 = load i32, i32* %dvert_tot, align 4, !dbg !5508
  %34 = load i32, i32* %dvert_tot_from, align 4, !dbg !5509
  %cmp37 = icmp eq i32 %33, %34, !dbg !5510
  %conv38 = zext i1 %cmp37 to i32, !dbg !5510
  %conv39 = trunc i32 %conv38 to i8, !dbg !5511
  store i8 %conv39, i8* %retval, align 1, !dbg !5512
  br label %return, !dbg !5512

if.end40:                                         ; preds = %lor.lhs.false22
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5513
  %defbase41 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 25, !dbg !5514
  call void @BLI_freelistN(%struct.ListBase* %defbase41), !dbg !5515
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5516
  %defbase42 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 25, !dbg !5517
  %37 = load %struct.Object*, %struct.Object** %ob_from.addr, align 8, !dbg !5518
  %defbase43 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 25, !dbg !5519
  call void @BLI_duplicatelist(%struct.ListBase* %defbase42, %struct.ListBase* %defbase43), !dbg !5520
  %38 = load %struct.Object*, %struct.Object** %ob_from.addr, align 8, !dbg !5521
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 97, !dbg !5522
  %39 = load i16, i16* %actdef, align 2, !dbg !5522
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5523
  %actdef44 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 97, !dbg !5524
  store i16 %39, i16* %actdef44, align 2, !dbg !5525
  %41 = load i32, i32* %defbase_tot_from, align 4, !dbg !5526
  %42 = load i32, i32* %defbase_tot, align 4, !dbg !5528
  %cmp45 = icmp slt i32 %41, %42, !dbg !5529
  br i1 %cmp45, label %if.then47, label %if.end61, !dbg !5530

if.then47:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i32** %remap, metadata !5531, metadata !DIExpression()), !dbg !5533
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5534
  %44 = load i32, i32* %defbase_tot, align 4, !dbg !5535
  %add = add nsw i32 %44, 1, !dbg !5536
  %conv48 = sext i32 %add to i64, !dbg !5537
  %mul = mul i64 4, %conv48, !dbg !5538
  %call49 = call i8* %43(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.ED_vgroup_array_copy, i64 0, i64 0)), !dbg !5534
  %45 = bitcast i8* %call49 to i32*, !dbg !5534
  store i32* %45, i32** %remap, align 8, !dbg !5533
  store i32 0, i32* %i, align 4, !dbg !5539
  br label %for.cond, !dbg !5541

for.cond:                                         ; preds = %for.inc, %if.then47
  %46 = load i32, i32* %i, align 4, !dbg !5542
  %47 = load i32, i32* %defbase_tot_from, align 4, !dbg !5544
  %cmp50 = icmp sle i32 %46, %47, !dbg !5545
  br i1 %cmp50, label %for.body, label %for.end, !dbg !5546

for.body:                                         ; preds = %for.cond
  %48 = load i32, i32* %i, align 4, !dbg !5547
  %49 = load i32*, i32** %remap, align 8, !dbg !5548
  %50 = load i32, i32* %i, align 4, !dbg !5549
  %idxprom = sext i32 %50 to i64, !dbg !5548
  %arrayidx = getelementptr inbounds i32, i32* %49, i64 %idxprom, !dbg !5548
  store i32 %48, i32* %arrayidx, align 4, !dbg !5550
  br label %for.inc, !dbg !5548

for.inc:                                          ; preds = %for.body
  %51 = load i32, i32* %i, align 4, !dbg !5551
  %inc = add nsw i32 %51, 1, !dbg !5551
  store i32 %inc, i32* %i, align 4, !dbg !5551
  br label %for.cond, !dbg !5552, !llvm.loop !5553

for.end:                                          ; preds = %for.cond
  br label %for.cond52, !dbg !5555

for.cond52:                                       ; preds = %for.inc58, %for.end
  %52 = load i32, i32* %i, align 4, !dbg !5556
  %53 = load i32, i32* %defbase_tot, align 4, !dbg !5559
  %cmp53 = icmp sle i32 %52, %53, !dbg !5560
  br i1 %cmp53, label %for.body55, label %for.end60, !dbg !5561

for.body55:                                       ; preds = %for.cond52
  %54 = load i32*, i32** %remap, align 8, !dbg !5562
  %55 = load i32, i32* %i, align 4, !dbg !5563
  %idxprom56 = sext i32 %55 to i64, !dbg !5562
  %arrayidx57 = getelementptr inbounds i32, i32* %54, i64 %idxprom56, !dbg !5562
  store i32 0, i32* %arrayidx57, align 4, !dbg !5564
  br label %for.inc58, !dbg !5562

for.inc58:                                        ; preds = %for.body55
  %56 = load i32, i32* %i, align 4, !dbg !5565
  %inc59 = add nsw i32 %56, 1, !dbg !5565
  store i32 %inc59, i32* %i, align 4, !dbg !5565
  br label %for.cond52, !dbg !5566, !llvm.loop !5567

for.end60:                                        ; preds = %for.cond52
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5569
  %58 = load i32*, i32** %remap, align 8, !dbg !5570
  call void @vgroup_remap_update_users(%struct.Object* %57, i32* %58), !dbg !5571
  %59 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5572
  %60 = load i32*, i32** %remap, align 8, !dbg !5573
  %61 = bitcast i32* %60 to i8*, !dbg !5573
  call void %59(i8* %61), !dbg !5572
  br label %if.end61, !dbg !5574

if.end61:                                         ; preds = %for.end60, %if.end40
  %62 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_from, align 8, !dbg !5575
  store %struct.MDeformVert** %62, %struct.MDeformVert*** %dvf, align 8, !dbg !5576
  %63 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !5577
  store %struct.MDeformVert** %63, %struct.MDeformVert*** %dv, align 8, !dbg !5578
  store i32 0, i32* %i, align 4, !dbg !5579
  br label %for.cond62, !dbg !5581

for.cond62:                                       ; preds = %for.inc77, %if.end61
  %64 = load i32, i32* %i, align 4, !dbg !5582
  %65 = load i32, i32* %dvert_tot, align 4, !dbg !5584
  %cmp63 = icmp slt i32 %64, %65, !dbg !5585
  br i1 %cmp63, label %for.body65, label %for.end80, !dbg !5586

for.body65:                                       ; preds = %for.cond62
  %66 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv, align 8, !dbg !5587
  %67 = load %struct.MDeformVert*, %struct.MDeformVert** %66, align 8, !dbg !5590
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %67, i32 0, i32 0, !dbg !5591
  %68 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !5591
  %tobool66 = icmp ne %struct.MDeformWeight* %68, null, !dbg !5592
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !5593

if.then67:                                        ; preds = %for.body65
  %69 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5594
  %70 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv, align 8, !dbg !5595
  %71 = load %struct.MDeformVert*, %struct.MDeformVert** %70, align 8, !dbg !5596
  %dw68 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %71, i32 0, i32 0, !dbg !5597
  %72 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw68, align 8, !dbg !5597
  %73 = bitcast %struct.MDeformWeight* %72 to i8*, !dbg !5598
  call void %69(i8* %73), !dbg !5594
  br label %if.end69, !dbg !5594

if.end69:                                         ; preds = %if.then67, %for.body65
  %74 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv, align 8, !dbg !5599
  %75 = load %struct.MDeformVert*, %struct.MDeformVert** %74, align 8, !dbg !5600
  %76 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvf, align 8, !dbg !5601
  %77 = load %struct.MDeformVert*, %struct.MDeformVert** %76, align 8, !dbg !5602
  %78 = bitcast %struct.MDeformVert* %75 to i8*, !dbg !5603
  %79 = bitcast %struct.MDeformVert* %77 to i8*, !dbg !5603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false), !dbg !5603
  %80 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv, align 8, !dbg !5604
  %81 = load %struct.MDeformVert*, %struct.MDeformVert** %80, align 8, !dbg !5606
  %dw70 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %81, i32 0, i32 0, !dbg !5607
  %82 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw70, align 8, !dbg !5607
  %tobool71 = icmp ne %struct.MDeformWeight* %82, null, !dbg !5608
  br i1 %tobool71, label %if.then72, label %if.end76, !dbg !5609

if.then72:                                        ; preds = %if.end69
  %83 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5610
  %84 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv, align 8, !dbg !5611
  %85 = load %struct.MDeformVert*, %struct.MDeformVert** %84, align 8, !dbg !5612
  %dw73 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %85, i32 0, i32 0, !dbg !5613
  %86 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw73, align 8, !dbg !5613
  %87 = bitcast %struct.MDeformWeight* %86 to i8*, !dbg !5614
  %call74 = call i8* %83(i8* %87), !dbg !5610
  %88 = bitcast i8* %call74 to %struct.MDeformWeight*, !dbg !5610
  %89 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv, align 8, !dbg !5615
  %90 = load %struct.MDeformVert*, %struct.MDeformVert** %89, align 8, !dbg !5616
  %dw75 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %90, i32 0, i32 0, !dbg !5617
  store %struct.MDeformWeight* %88, %struct.MDeformWeight** %dw75, align 8, !dbg !5618
  br label %if.end76, !dbg !5619

if.end76:                                         ; preds = %if.then72, %if.end69
  br label %for.inc77, !dbg !5620

for.inc77:                                        ; preds = %if.end76
  %91 = load i32, i32* %i, align 4, !dbg !5621
  %inc78 = add nsw i32 %91, 1, !dbg !5621
  store i32 %inc78, i32* %i, align 4, !dbg !5621
  %92 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvf, align 8, !dbg !5622
  %incdec.ptr = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %92, i32 1, !dbg !5622
  store %struct.MDeformVert** %incdec.ptr, %struct.MDeformVert*** %dvf, align 8, !dbg !5622
  %93 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv, align 8, !dbg !5623
  %incdec.ptr79 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %93, i32 1, !dbg !5623
  store %struct.MDeformVert** %incdec.ptr79, %struct.MDeformVert*** %dv, align 8, !dbg !5623
  br label %for.cond62, !dbg !5624, !llvm.loop !5625

for.end80:                                        ; preds = %for.cond62
  %94 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5627
  %95 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !5628
  %96 = bitcast %struct.MDeformVert** %95 to i8*, !dbg !5628
  call void %94(i8* %96), !dbg !5627
  %97 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5629
  %98 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array_from, align 8, !dbg !5630
  %99 = bitcast %struct.MDeformVert** %98 to i8*, !dbg !5630
  call void %97(i8* %99), !dbg !5629
  store i8 1, i8* %retval, align 1, !dbg !5631
  br label %return, !dbg !5631

return:                                           ; preds = %for.end80, %if.end36, %if.then
  %100 = load i8, i8* %retval, align 1, !dbg !5632
  ret i8 %100, !dbg !5632
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_delete_all(%struct.Object* %ob) #0 !dbg !5633 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5636
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !5638
  %1 = load i16, i16* %type, align 8, !dbg !5638
  %conv = sext i16 %1 to i32, !dbg !5636
  %cmp = icmp eq i32 %conv, 1, !dbg !5639
  br i1 %cmp, label %if.then, label %if.else, !dbg !5640

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5641, metadata !DIExpression()), !dbg !5643
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5644
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !5645
  %3 = load i8*, i8** %data, align 8, !dbg !5645
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !5644
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !5643
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5646
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 21, !dbg !5647
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5648
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 26, !dbg !5649
  %7 = load i32, i32* %totvert, align 8, !dbg !5649
  %call = call zeroext i8 @CustomData_free_layer_active(%struct.CustomData* %vdata, i32 2, i32 %7), !dbg !5650
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5651
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 17, !dbg !5652
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert, align 8, !dbg !5653
  br label %if.end13, !dbg !5654

if.else:                                          ; preds = %entry
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5655
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !5657
  %10 = load i16, i16* %type2, align 8, !dbg !5657
  %conv3 = sext i16 %10 to i32, !dbg !5655
  %cmp4 = icmp eq i32 %conv3, 22, !dbg !5658
  br i1 %cmp4, label %if.then6, label %if.end12, !dbg !5659

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !5660, metadata !DIExpression()), !dbg !5662
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5663
  %call7 = call %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %11), !dbg !5664
  store %struct.Lattice* %call7, %struct.Lattice** %lt, align 8, !dbg !5662
  %12 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5665
  %dvert8 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %12, i32 0, i32 24, !dbg !5667
  %13 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert8, align 8, !dbg !5667
  %tobool = icmp ne %struct.MDeformVert* %13, null, !dbg !5665
  br i1 %tobool, label %if.then9, label %if.end, !dbg !5668

if.then9:                                         ; preds = %if.then6
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5669
  %15 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5671
  %dvert10 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %15, i32 0, i32 24, !dbg !5672
  %16 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert10, align 8, !dbg !5672
  %17 = bitcast %struct.MDeformVert* %16 to i8*, !dbg !5671
  call void %14(i8* %17), !dbg !5669
  %18 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !5673
  %dvert11 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %18, i32 0, i32 24, !dbg !5674
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert11, align 8, !dbg !5675
  br label %if.end, !dbg !5676

if.end:                                           ; preds = %if.then9, %if.then6
  br label %if.end12, !dbg !5677

if.end12:                                         ; preds = %if.end, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5678
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 25, !dbg !5679
  call void @BLI_freelistN(%struct.ListBase* %defbase), !dbg !5680
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5681
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 97, !dbg !5682
  store i16 0, i16* %actdef, align 2, !dbg !5683
  ret void, !dbg !5684
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_remap_update_users(%struct.Object* %ob, i32* %map) #0 !dbg !5685 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %map.addr = alloca i32*, align 8
  %emd = alloca %struct.ExplodeModifierData*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %clmd = alloca %struct.ClothModifierData*, align 8
  %clsim = alloca %struct.ClothSimSettings*, align 8
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  store i32* %map, i32** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %map.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.declare(metadata %struct.ExplodeModifierData** %emd, metadata !5692, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !5694, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5697, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.declare(metadata %struct.ClothModifierData** %clmd, metadata !6103, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.declare(metadata %struct.ClothSimSettings** %clsim, metadata !6105, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6109, metadata !DIExpression()), !dbg !6110
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6111
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !6113
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !6113
  %tobool = icmp ne %struct.SoftBody* %1, null, !dbg !6111
  br i1 %tobool, label %if.then, label %if.end, !dbg !6114

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %map.addr, align 8, !dbg !6115
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6116
  %soft1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 111, !dbg !6117
  %4 = load %struct.SoftBody*, %struct.SoftBody** %soft1, align 8, !dbg !6117
  %vertgroup = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %4, i32 0, i32 18, !dbg !6118
  %5 = load i16, i16* %vertgroup, align 4, !dbg !6118
  %idxprom = sext i16 %5 to i64, !dbg !6115
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !6115
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6115
  %conv = trunc i32 %6 to i16, !dbg !6115
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6119
  %soft2 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 111, !dbg !6120
  %8 = load %struct.SoftBody*, %struct.SoftBody** %soft2, align 8, !dbg !6120
  %vertgroup3 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 18, !dbg !6121
  store i16 %conv, i16* %vertgroup3, align 4, !dbg !6122
  br label %if.end, !dbg !6119

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6123
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 26, !dbg !6125
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !6126
  %10 = load i8*, i8** %first, align 8, !dbg !6126
  %11 = bitcast i8* %10 to %struct.ModifierData*, !dbg !6123
  store %struct.ModifierData* %11, %struct.ModifierData** %md, align 8, !dbg !6127
  br label %for.cond, !dbg !6128

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6129
  %tobool4 = icmp ne %struct.ModifierData* %12, null, !dbg !6131
  br i1 %tobool4, label %for.body, label %for.end, !dbg !6131

for.body:                                         ; preds = %for.cond
  %13 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6132
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %13, i32 0, i32 2, !dbg !6135
  %14 = load i32, i32* %type, align 8, !dbg !6135
  %cmp = icmp eq i32 %14, 21, !dbg !6136
  br i1 %cmp, label %if.then6, label %if.else, !dbg !6137

if.then6:                                         ; preds = %for.body
  %15 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6138
  %16 = bitcast %struct.ModifierData* %15 to %struct.ExplodeModifierData*, !dbg !6140
  store %struct.ExplodeModifierData* %16, %struct.ExplodeModifierData** %emd, align 8, !dbg !6141
  %17 = load i32*, i32** %map.addr, align 8, !dbg !6142
  %18 = load %struct.ExplodeModifierData*, %struct.ExplodeModifierData** %emd, align 8, !dbg !6143
  %vgroup = getelementptr inbounds %struct.ExplodeModifierData, %struct.ExplodeModifierData* %18, i32 0, i32 3, !dbg !6144
  %19 = load i16, i16* %vgroup, align 2, !dbg !6144
  %idxprom7 = sext i16 %19 to i64, !dbg !6142
  %arrayidx8 = getelementptr inbounds i32, i32* %17, i64 %idxprom7, !dbg !6142
  %20 = load i32, i32* %arrayidx8, align 4, !dbg !6142
  %conv9 = trunc i32 %20 to i16, !dbg !6142
  %21 = load %struct.ExplodeModifierData*, %struct.ExplodeModifierData** %emd, align 8, !dbg !6145
  %vgroup10 = getelementptr inbounds %struct.ExplodeModifierData, %struct.ExplodeModifierData* %21, i32 0, i32 3, !dbg !6146
  store i16 %conv9, i16* %vgroup10, align 2, !dbg !6147
  br label %if.end31, !dbg !6148

if.else:                                          ; preds = %for.body
  %22 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6149
  %type11 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %22, i32 0, i32 2, !dbg !6151
  %23 = load i32, i32* %type11, align 8, !dbg !6151
  %cmp12 = icmp eq i32 %23, 22, !dbg !6152
  br i1 %cmp12, label %if.then14, label %if.end30, !dbg !6153

if.then14:                                        ; preds = %if.else
  %24 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6154
  %25 = bitcast %struct.ModifierData* %24 to %struct.ClothModifierData*, !dbg !6156
  store %struct.ClothModifierData* %25, %struct.ClothModifierData** %clmd, align 8, !dbg !6157
  %26 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !6158
  %sim_parms = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %26, i32 0, i32 3, !dbg !6159
  %27 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms, align 8, !dbg !6159
  store %struct.ClothSimSettings* %27, %struct.ClothSimSettings** %clsim, align 8, !dbg !6160
  %28 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %clsim, align 8, !dbg !6161
  %tobool15 = icmp ne %struct.ClothSimSettings* %28, null, !dbg !6161
  br i1 %tobool15, label %if.then16, label %if.end29, !dbg !6163

if.then16:                                        ; preds = %if.then14
  %29 = load i32*, i32** %map.addr, align 8, !dbg !6164
  %30 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %clsim, align 8, !dbg !6166
  %vgroup_mass = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %30, i32 0, i32 34, !dbg !6167
  %31 = load i16, i16* %vgroup_mass, align 8, !dbg !6167
  %idxprom17 = sext i16 %31 to i64, !dbg !6164
  %arrayidx18 = getelementptr inbounds i32, i32* %29, i64 %idxprom17, !dbg !6164
  %32 = load i32, i32* %arrayidx18, align 4, !dbg !6164
  %conv19 = trunc i32 %32 to i16, !dbg !6164
  %33 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %clsim, align 8, !dbg !6168
  %vgroup_mass20 = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %33, i32 0, i32 34, !dbg !6169
  store i16 %conv19, i16* %vgroup_mass20, align 8, !dbg !6170
  %34 = load i32*, i32** %map.addr, align 8, !dbg !6171
  %35 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %clsim, align 8, !dbg !6172
  %vgroup_bend = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %35, i32 0, i32 33, !dbg !6173
  %36 = load i16, i16* %vgroup_bend, align 2, !dbg !6173
  %idxprom21 = sext i16 %36 to i64, !dbg !6171
  %arrayidx22 = getelementptr inbounds i32, i32* %34, i64 %idxprom21, !dbg !6171
  %37 = load i32, i32* %arrayidx22, align 4, !dbg !6171
  %conv23 = trunc i32 %37 to i16, !dbg !6171
  %38 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %clsim, align 8, !dbg !6174
  %vgroup_bend24 = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %38, i32 0, i32 33, !dbg !6175
  store i16 %conv23, i16* %vgroup_bend24, align 2, !dbg !6176
  %39 = load i32*, i32** %map.addr, align 8, !dbg !6177
  %40 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %clsim, align 8, !dbg !6178
  %vgroup_struct = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %40, i32 0, i32 35, !dbg !6179
  %41 = load i16, i16* %vgroup_struct, align 2, !dbg !6179
  %idxprom25 = sext i16 %41 to i64, !dbg !6177
  %arrayidx26 = getelementptr inbounds i32, i32* %39, i64 %idxprom25, !dbg !6177
  %42 = load i32, i32* %arrayidx26, align 4, !dbg !6177
  %conv27 = trunc i32 %42 to i16, !dbg !6177
  %43 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %clsim, align 8, !dbg !6180
  %vgroup_struct28 = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %43, i32 0, i32 35, !dbg !6181
  store i16 %conv27, i16* %vgroup_struct28, align 2, !dbg !6182
  br label %if.end29, !dbg !6183

if.end29:                                         ; preds = %if.then16, %if.then14
  br label %if.end30, !dbg !6184

if.end30:                                         ; preds = %if.end29, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then6
  br label %for.inc, !dbg !6185

for.inc:                                          ; preds = %if.end31
  %44 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6186
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %44, i32 0, i32 0, !dbg !6187
  %45 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !6187
  store %struct.ModifierData* %45, %struct.ModifierData** %md, align 8, !dbg !6188
  br label %for.cond, !dbg !6189, !llvm.loop !6190

for.end:                                          ; preds = %for.cond
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6192
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 109, !dbg !6194
  %first32 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !6195
  %47 = load i8*, i8** %first32, align 8, !dbg !6195
  %48 = bitcast i8* %47 to %struct.ParticleSystem*, !dbg !6192
  store %struct.ParticleSystem* %48, %struct.ParticleSystem** %psys, align 8, !dbg !6196
  br label %for.cond33, !dbg !6197

for.cond33:                                       ; preds = %for.inc51, %for.end
  %49 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6198
  %tobool34 = icmp ne %struct.ParticleSystem* %49, null, !dbg !6200
  br i1 %tobool34, label %for.body35, label %for.end53, !dbg !6200

for.body35:                                       ; preds = %for.cond33
  store i32 0, i32* %a, align 4, !dbg !6201
  br label %for.cond36, !dbg !6204

for.cond36:                                       ; preds = %for.inc49, %for.body35
  %50 = load i32, i32* %a, align 4, !dbg !6205
  %cmp37 = icmp slt i32 %50, 12, !dbg !6207
  br i1 %cmp37, label %for.body39, label %for.end50, !dbg !6208

for.body39:                                       ; preds = %for.cond36
  %51 = load i32*, i32** %map.addr, align 8, !dbg !6209
  %52 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6210
  %vgroup40 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %52, i32 0, i32 36, !dbg !6211
  %53 = load i32, i32* %a, align 4, !dbg !6212
  %idxprom41 = sext i32 %53 to i64, !dbg !6210
  %arrayidx42 = getelementptr inbounds [12 x i16], [12 x i16]* %vgroup40, i64 0, i64 %idxprom41, !dbg !6210
  %54 = load i16, i16* %arrayidx42, align 2, !dbg !6210
  %idxprom43 = sext i16 %54 to i64, !dbg !6209
  %arrayidx44 = getelementptr inbounds i32, i32* %51, i64 %idxprom43, !dbg !6209
  %55 = load i32, i32* %arrayidx44, align 4, !dbg !6209
  %conv45 = trunc i32 %55 to i16, !dbg !6209
  %56 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6213
  %vgroup46 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %56, i32 0, i32 36, !dbg !6214
  %57 = load i32, i32* %a, align 4, !dbg !6215
  %idxprom47 = sext i32 %57 to i64, !dbg !6213
  %arrayidx48 = getelementptr inbounds [12 x i16], [12 x i16]* %vgroup46, i64 0, i64 %idxprom47, !dbg !6213
  store i16 %conv45, i16* %arrayidx48, align 2, !dbg !6216
  br label %for.inc49, !dbg !6213

for.inc49:                                        ; preds = %for.body39
  %58 = load i32, i32* %a, align 4, !dbg !6217
  %inc = add nsw i32 %58, 1, !dbg !6217
  store i32 %inc, i32* %a, align 4, !dbg !6217
  br label %for.cond36, !dbg !6218, !llvm.loop !6219

for.end50:                                        ; preds = %for.cond36
  br label %for.inc51, !dbg !6221

for.inc51:                                        ; preds = %for.end50
  %59 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !6222
  %next52 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %59, i32 0, i32 0, !dbg !6223
  %60 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next52, align 8, !dbg !6223
  store %struct.ParticleSystem* %60, %struct.ParticleSystem** %psys, align 8, !dbg !6224
  br label %for.cond33, !dbg !6225, !llvm.loop !6226

for.end53:                                        ; preds = %for.cond33
  ret void, !dbg !6228
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_vert_active_mirror(%struct.Object* %ob, i32 %def_nr) #0 !dbg !6229 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %def_nr.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %dvert_act = alloca %struct.MDeformVert*, align 8
  %eve_act = alloca %struct.BMVert*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %v_act = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6232, metadata !DIExpression()), !dbg !6233
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !6234, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6236, metadata !DIExpression()), !dbg !6237
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6238
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6239
  %1 = load i8*, i8** %data, align 8, !dbg !6239
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !6238
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !6237
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6240, metadata !DIExpression()), !dbg !6241
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6242
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 20, !dbg !6243
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !6243
  store %struct.BMEditMesh* %4, %struct.BMEditMesh** %em, align 8, !dbg !6241
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_act, metadata !6244, metadata !DIExpression()), !dbg !6245
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6246
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !6248
  %6 = load i8, i8* %editflag, align 1, !dbg !6248
  %conv = zext i8 %6 to i32, !dbg !6246
  %and = and i32 %conv, 1, !dbg !6249
  %tobool = icmp ne i32 %and, 0, !dbg !6249
  br i1 %tobool, label %if.then, label %if.end11, !dbg !6250

if.then:                                          ; preds = %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6251
  %tobool1 = icmp ne %struct.BMEditMesh* %7, null, !dbg !6251
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6254

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_act, metadata !6255, metadata !DIExpression()), !dbg !6257
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6258
  %call = call %struct.MDeformVert* @ED_mesh_active_dvert_get_em(%struct.Object* %8, %struct.BMVert** %eve_act), !dbg !6259
  store %struct.MDeformVert* %call, %struct.MDeformVert** %dvert_act, align 8, !dbg !6260
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !6261
  %tobool3 = icmp ne %struct.MDeformVert* %9, null, !dbg !6261
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6263

if.then4:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !6264, metadata !DIExpression()), !dbg !6266
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6267
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !6268
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6268
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 24, !dbg !6269
  %call5 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !6270
  store i32 %call5, i32* %cd_dvert_offset, align 4, !dbg !6266
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6271
  %13 = load %struct.BMVert*, %struct.BMVert** %eve_act, align 8, !dbg !6272
  %14 = load i32, i32* %def_nr.addr, align 4, !dbg !6273
  %15 = load i32, i32* %cd_dvert_offset, align 4, !dbg !6274
  call void @ED_mesh_defvert_mirror_update_em(%struct.Object* %12, %struct.BMVert* %13, i32 %14, i32 -1, i32 %15), !dbg !6275
  br label %if.end, !dbg !6276

if.end:                                           ; preds = %if.then4, %if.then2
  br label %if.end10, !dbg !6277

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %v_act, metadata !6278, metadata !DIExpression()), !dbg !6280
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6281
  %call6 = call %struct.MDeformVert* @ED_mesh_active_dvert_get_ob(%struct.Object* %16, i32* %v_act), !dbg !6282
  store %struct.MDeformVert* %call6, %struct.MDeformVert** %dvert_act, align 8, !dbg !6283
  %17 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !6284
  %tobool7 = icmp ne %struct.MDeformVert* %17, null, !dbg !6284
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !6286

if.then8:                                         ; preds = %if.else
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6287
  %19 = load i32, i32* %def_nr.addr, align 4, !dbg !6289
  %20 = load i32, i32* %v_act, align 4, !dbg !6290
  call void @ED_mesh_defvert_mirror_update_ob(%struct.Object* %18, i32 %19, i32 %20), !dbg !6291
  br label %if.end9, !dbg !6292

if.end9:                                          ; preds = %if.then8, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  br label %if.end11, !dbg !6293

if.end11:                                         ; preds = %if.end10, %entry
  ret void, !dbg !6294
}

declare dso_local %struct.MDeformVert* @ED_mesh_active_dvert_get_em(%struct.Object*, %struct.BMVert**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ED_mesh_defvert_mirror_update_em(%struct.Object* %ob, %struct.BMVert* %eve, i32 %def_nr, i32 %vidx, i32 %cd_dvert_offset) #0 !dbg !6295 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %eve.addr = alloca %struct.BMVert*, align 8
  %def_nr.addr = alloca i32, align 4
  %vidx.addr = alloca i32, align 4
  %cd_dvert_offset.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %eve_mirr = alloca %struct.BMVert*, align 8
  %use_topology = alloca i8, align 1
  %dvert_src = alloca %struct.MDeformVert*, align 8
  %dvert_dst = alloca %struct.MDeformVert*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6298, metadata !DIExpression()), !dbg !6299
  store %struct.BMVert* %eve, %struct.BMVert** %eve.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve.addr, metadata !6300, metadata !DIExpression()), !dbg !6301
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !6302, metadata !DIExpression()), !dbg !6303
  store i32 %vidx, i32* %vidx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vidx.addr, metadata !6304, metadata !DIExpression()), !dbg !6305
  store i32 %cd_dvert_offset, i32* %cd_dvert_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset.addr, metadata !6306, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6308, metadata !DIExpression()), !dbg !6309
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6310
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6311
  %1 = load i8*, i8** %data, align 8, !dbg !6311
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !6310
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !6309
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6312, metadata !DIExpression()), !dbg !6313
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6314
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 20, !dbg !6315
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !6315
  store %struct.BMEditMesh* %4, %struct.BMEditMesh** %em, align 8, !dbg !6313
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_mirr, metadata !6316, metadata !DIExpression()), !dbg !6317
  call void @llvm.dbg.declare(metadata i8* %use_topology, metadata !6318, metadata !DIExpression()), !dbg !6319
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6320
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !6321
  %6 = load i8, i8* %editflag, align 1, !dbg !6321
  %conv = zext i8 %6 to i32, !dbg !6320
  %and = and i32 %conv, 16, !dbg !6322
  %cmp = icmp ne i32 %and, 0, !dbg !6323
  %conv1 = zext i1 %cmp to i32, !dbg !6323
  %conv2 = trunc i32 %conv1 to i8, !dbg !6324
  store i8 %conv2, i8* %use_topology, align 1, !dbg !6319
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6325
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6326
  %9 = load %struct.BMVert*, %struct.BMVert** %eve.addr, align 8, !dbg !6327
  %10 = load %struct.BMVert*, %struct.BMVert** %eve.addr, align 8, !dbg !6328
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 2, !dbg !6329
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6328
  %11 = load i32, i32* %vidx.addr, align 4, !dbg !6330
  %12 = load i8, i8* %use_topology, align 1, !dbg !6331
  %call = call %struct.BMVert* @editbmesh_get_x_mirror_vert(%struct.Object* %7, %struct.BMEditMesh* %8, %struct.BMVert* %9, float* %arraydecay, i32 %11, i8 zeroext %12), !dbg !6332
  store %struct.BMVert* %call, %struct.BMVert** %eve_mirr, align 8, !dbg !6333
  %13 = load %struct.BMVert*, %struct.BMVert** %eve_mirr, align 8, !dbg !6334
  %tobool = icmp ne %struct.BMVert* %13, null, !dbg !6334
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6336

land.lhs.true:                                    ; preds = %entry
  %14 = load %struct.BMVert*, %struct.BMVert** %eve_mirr, align 8, !dbg !6337
  %15 = load %struct.BMVert*, %struct.BMVert** %eve.addr, align 8, !dbg !6338
  %cmp3 = icmp ne %struct.BMVert* %14, %15, !dbg !6339
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6340

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_src, metadata !6341, metadata !DIExpression()), !dbg !6343
  %16 = load %struct.BMVert*, %struct.BMVert** %eve.addr, align 8, !dbg !6344
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 0, !dbg !6344
  %data5 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !6344
  %17 = load i8*, i8** %data5, align 8, !dbg !6344
  %18 = load i32, i32* %cd_dvert_offset.addr, align 4, !dbg !6344
  %idx.ext = sext i32 %18 to i64, !dbg !6344
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !6344
  %19 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !6344
  store %struct.MDeformVert* %19, %struct.MDeformVert** %dvert_src, align 8, !dbg !6343
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_dst, metadata !6345, metadata !DIExpression()), !dbg !6346
  %20 = load %struct.BMVert*, %struct.BMVert** %eve_mirr, align 8, !dbg !6347
  %head6 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 0, !dbg !6347
  %data7 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head6, i32 0, i32 0, !dbg !6347
  %21 = load i8*, i8** %data7, align 8, !dbg !6347
  %22 = load i32, i32* %cd_dvert_offset.addr, align 4, !dbg !6347
  %idx.ext8 = sext i32 %22 to i64, !dbg !6347
  %add.ptr9 = getelementptr inbounds i8, i8* %21, i64 %idx.ext8, !dbg !6347
  %23 = bitcast i8* %add.ptr9 to %struct.MDeformVert*, !dbg !6347
  store %struct.MDeformVert* %23, %struct.MDeformVert** %dvert_dst, align 8, !dbg !6346
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6348
  %25 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_dst, align 8, !dbg !6349
  %26 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_src, align 8, !dbg !6350
  %27 = load i32, i32* %def_nr.addr, align 4, !dbg !6351
  call void @mesh_defvert_mirror_update_internal(%struct.Object* %24, %struct.MDeformVert* %25, %struct.MDeformVert* %26, i32 %27), !dbg !6352
  br label %if.end, !dbg !6353

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6354
}

declare dso_local %struct.MDeformVert* @ED_mesh_active_dvert_get_ob(%struct.Object*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ED_mesh_defvert_mirror_update_ob(%struct.Object* %ob, i32 %def_nr, i32 %vidx) #0 !dbg !6355 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %def_nr.addr = alloca i32, align 4
  %vidx.addr = alloca i32, align 4
  %vidx_mirr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %use_topology = alloca i8, align 1
  %dvert_src = alloca %struct.MDeformVert*, align 8
  %dvert_dst = alloca %struct.MDeformVert*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6358, metadata !DIExpression()), !dbg !6359
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !6360, metadata !DIExpression()), !dbg !6361
  store i32 %vidx, i32* %vidx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vidx.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.declare(metadata i32* %vidx_mirr, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6366, metadata !DIExpression()), !dbg !6367
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6368
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6369
  %1 = load i8*, i8** %data, align 8, !dbg !6369
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !6368
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !6367
  call void @llvm.dbg.declare(metadata i8* %use_topology, metadata !6370, metadata !DIExpression()), !dbg !6371
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6372
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 46, !dbg !6373
  %4 = load i8, i8* %editflag, align 1, !dbg !6373
  %conv = zext i8 %4 to i32, !dbg !6372
  %and = and i32 %conv, 16, !dbg !6374
  %cmp = icmp ne i32 %and, 0, !dbg !6375
  %conv1 = zext i1 %cmp to i32, !dbg !6375
  %conv2 = trunc i32 %conv1 to i8, !dbg !6376
  store i8 %conv2, i8* %use_topology, align 1, !dbg !6371
  %5 = load i32, i32* %vidx.addr, align 4, !dbg !6377
  %cmp3 = icmp eq i32 %5, -1, !dbg !6379
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6380

if.then:                                          ; preds = %entry
  br label %if.end13, !dbg !6381

if.end:                                           ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6382
  %7 = load i32, i32* %vidx.addr, align 4, !dbg !6383
  %8 = load i8, i8* %use_topology, align 1, !dbg !6384
  %call = call i32 @mesh_get_x_mirror_vert(%struct.Object* %6, i32 %7, i8 zeroext %8), !dbg !6385
  store i32 %call, i32* %vidx_mirr, align 4, !dbg !6386
  %9 = load i32, i32* %vidx_mirr, align 4, !dbg !6387
  %cmp5 = icmp sge i32 %9, 0, !dbg !6389
  br i1 %cmp5, label %land.lhs.true, label %if.end13, !dbg !6390

land.lhs.true:                                    ; preds = %if.end
  %10 = load i32, i32* %vidx_mirr, align 4, !dbg !6391
  %11 = load i32, i32* %vidx.addr, align 4, !dbg !6392
  %cmp7 = icmp ne i32 %10, %11, !dbg !6393
  br i1 %cmp7, label %if.then9, label %if.end13, !dbg !6394

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_src, metadata !6395, metadata !DIExpression()), !dbg !6397
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6398
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 17, !dbg !6399
  %13 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6399
  %14 = load i32, i32* %vidx.addr, align 4, !dbg !6400
  %idxprom = sext i32 %14 to i64, !dbg !6398
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %13, i64 %idxprom, !dbg !6398
  store %struct.MDeformVert* %arrayidx, %struct.MDeformVert** %dvert_src, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_dst, metadata !6401, metadata !DIExpression()), !dbg !6402
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6403
  %dvert10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 17, !dbg !6404
  %16 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert10, align 8, !dbg !6404
  %17 = load i32, i32* %vidx_mirr, align 4, !dbg !6405
  %idxprom11 = sext i32 %17 to i64, !dbg !6403
  %arrayidx12 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %16, i64 %idxprom11, !dbg !6403
  store %struct.MDeformVert* %arrayidx12, %struct.MDeformVert** %dvert_dst, align 8, !dbg !6402
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6406
  %19 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_dst, align 8, !dbg !6407
  %20 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_src, align 8, !dbg !6408
  %21 = load i32, i32* %def_nr.addr, align 4, !dbg !6409
  call void @mesh_defvert_mirror_update_internal(%struct.Object* %18, %struct.MDeformVert* %19, %struct.MDeformVert* %20, i32 %21), !dbg !6410
  br label %if.end13, !dbg !6411

if.end13:                                         ; preds = %if.then, %if.then9, %land.lhs.true, %if.end
  ret void, !dbg !6412
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @ED_object_vgroup_selection_itemf_helper(%struct.bContext* %C, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free, i32 %selection_mask) #0 !dbg !6413 {
entry:
  %retval = alloca %struct.EnumPropertyItem*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  %selection_mask.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %totitem = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6424, metadata !DIExpression()), !dbg !6425
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !6426, metadata !DIExpression()), !dbg !6427
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !6428, metadata !DIExpression()), !dbg !6429
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !6430, metadata !DIExpression()), !dbg !6431
  store i32 %selection_mask, i32* %selection_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %selection_mask.addr, metadata !6432, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !6436, metadata !DIExpression()), !dbg !6438
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !6438
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !6439, metadata !DIExpression()), !dbg !6440
  store i32 0, i32* %totitem, align 4, !dbg !6440
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6441
  %tobool = icmp ne %struct.bContext* %0, null, !dbg !6441
  br i1 %tobool, label %if.end, label %if.then, !dbg !6443

if.then:                                          ; preds = %entry
  store %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @WT_vertex_group_select_item, i64 0, i64 0), %struct.EnumPropertyItem** %retval, align 8, !dbg !6444
  br label %return, !dbg !6444

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6445
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !6446
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !6447
  %2 = load i32, i32* %selection_mask.addr, align 4, !dbg !6448
  %and = and i32 %2, 2, !dbg !6450
  %tobool1 = icmp ne i32 %and, 0, !dbg !6450
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6451

if.then2:                                         ; preds = %if.end
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @WT_vertex_group_select_item, i64 0, i64 0), i32 1), !dbg !6452
  br label %if.end3, !dbg !6452

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6453
  %call4 = call %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %3), !dbg !6455
  %tobool5 = icmp ne %struct.Object* %call4, null, !dbg !6455
  br i1 %tobool5, label %if.then6, label %if.end15, !dbg !6456

if.then6:                                         ; preds = %if.end3
  %4 = load i32, i32* %selection_mask.addr, align 4, !dbg !6457
  %and7 = and i32 %4, 4, !dbg !6460
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6460
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6461

if.then9:                                         ; preds = %if.then6
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @WT_vertex_group_select_item, i64 0, i64 0), i32 2), !dbg !6462
  br label %if.end10, !dbg !6462

if.end10:                                         ; preds = %if.then9, %if.then6
  %5 = load i32, i32* %selection_mask.addr, align 4, !dbg !6463
  %and11 = and i32 %5, 8, !dbg !6465
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6465
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6466

if.then13:                                        ; preds = %if.end10
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @WT_vertex_group_select_item, i64 0, i64 0), i32 3), !dbg !6467
  br label %if.end14, !dbg !6467

if.end14:                                         ; preds = %if.then13, %if.end10
  br label %if.end15, !dbg !6468

if.end15:                                         ; preds = %if.end14, %if.end3
  %6 = load i32, i32* %selection_mask.addr, align 4, !dbg !6469
  %and16 = and i32 %6, 1, !dbg !6471
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6471
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !6472

if.then18:                                        ; preds = %if.end15
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @WT_vertex_group_select_item, i64 0, i64 0), i32 0), !dbg !6473
  br label %if.end19, !dbg !6473

if.end19:                                         ; preds = %if.then18, %if.end15
  call void @RNA_enum_item_end(%struct.EnumPropertyItem** %item, i32* %totitem), !dbg !6474
  %7 = load i8*, i8** %r_free.addr, align 8, !dbg !6475
  store i8 1, i8* %7, align 1, !dbg !6476
  %8 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !6477
  store %struct.EnumPropertyItem* %8, %struct.EnumPropertyItem** %retval, align 8, !dbg !6478
  br label %return, !dbg !6478

return:                                           ; preds = %if.end19, %if.then
  %9 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %retval, align 8, !dbg !6479
  ret %struct.EnumPropertyItem* %9, !dbg !6479
}

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

declare dso_local void @RNA_enum_items_add_value(%struct.EnumPropertyItem**, i32*, %struct.EnumPropertyItem*, i32) #2

declare dso_local void @RNA_enum_item_end(%struct.EnumPropertyItem**, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_vert_add(%struct.Object* %ob, %struct.bDeformGroup* %dg, i32 %vertnum, float %weight, i32 %assignmode) #0 !dbg !6480 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dg.addr = alloca %struct.bDeformGroup*, align 8
  %vertnum.addr = alloca i32, align 4
  %weight.addr = alloca float, align 4
  %assignmode.addr = alloca i32, align 4
  %def_nr = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %tot = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6483, metadata !DIExpression()), !dbg !6484
  store %struct.bDeformGroup* %dg, %struct.bDeformGroup** %dg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg.addr, metadata !6485, metadata !DIExpression()), !dbg !6486
  store i32 %vertnum, i32* %vertnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertnum.addr, metadata !6487, metadata !DIExpression()), !dbg !6488
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !6489, metadata !DIExpression()), !dbg !6490
  store i32 %assignmode, i32* %assignmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %assignmode.addr, metadata !6491, metadata !DIExpression()), !dbg !6492
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !6493, metadata !DIExpression()), !dbg !6494
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6495
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !6496
  %1 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !6497
  %2 = bitcast %struct.bDeformGroup* %1 to i8*, !dbg !6497
  %call = call i32 @BLI_findindex(%struct.ListBase* %defbase, i8* %2), !dbg !6498
  store i32 %call, i32* %def_nr, align 4, !dbg !6494
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !6499, metadata !DIExpression()), !dbg !6500
  store %struct.MDeformVert* null, %struct.MDeformVert** %dv, align 8, !dbg !6500
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6501, metadata !DIExpression()), !dbg !6502
  %3 = load i32, i32* %def_nr, align 4, !dbg !6503
  %cmp = icmp ne i32 %3, -1, !dbg !6505
  br i1 %cmp, label %if.then, label %if.end7, !dbg !6506

if.then:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6507
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !6510
  %5 = load i8*, i8** %data, align 8, !dbg !6510
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !6507
  %call1 = call zeroext i8 @ED_vgroup_array_get(%struct.ID* %6, %struct.MDeformVert** %dv, i32* %tot), !dbg !6511
  %conv = zext i8 %call1 to i32, !dbg !6511
  %tobool = icmp ne i32 %conv, 0, !dbg !6511
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6512

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6513
  %cmp2 = icmp eq %struct.MDeformVert* %7, null, !dbg !6514
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !6515

if.then4:                                         ; preds = %land.lhs.true
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6516
  %data5 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 19, !dbg !6517
  %9 = load i8*, i8** %data5, align 8, !dbg !6517
  %10 = bitcast i8* %9 to %struct.ID*, !dbg !6516
  %call6 = call zeroext i8 @ED_vgroup_data_create(%struct.ID* %10), !dbg !6518
  br label %if.end, !dbg !6518

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6519
  %12 = load i32, i32* %def_nr, align 4, !dbg !6520
  %13 = load i32, i32* %vertnum.addr, align 4, !dbg !6521
  %14 = load float, float* %weight.addr, align 4, !dbg !6522
  %15 = load i32, i32* %assignmode.addr, align 4, !dbg !6523
  call void @ED_vgroup_nr_vert_add(%struct.Object* %11, i32 %12, i32 %13, float %14, i32 %15), !dbg !6524
  br label %if.end7, !dbg !6525

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !6526
}

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ED_vgroup_nr_vert_add(%struct.Object* %ob, i32 %def_nr, i32 %vertnum, float %weight, i32 %assignmode) #0 !dbg !6527 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %def_nr.addr = alloca i32, align 4
  %vertnum.addr = alloca i32, align 4
  %weight.addr = alloca float, align 4
  %assignmode.addr = alloca i32, align 4
  %dvert = alloca %struct.MDeformVert*, align 8
  %tot = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6530, metadata !DIExpression()), !dbg !6531
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  store i32 %vertnum, i32* %vertnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertnum.addr, metadata !6534, metadata !DIExpression()), !dbg !6535
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !6536, metadata !DIExpression()), !dbg !6537
  store i32 %assignmode, i32* %assignmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %assignmode.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !6540, metadata !DIExpression()), !dbg !6541
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert, align 8, !dbg !6541
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6542, metadata !DIExpression()), !dbg !6543
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6544
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6545
  %1 = load i8*, i8** %data, align 8, !dbg !6545
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !6544
  %call = call zeroext i8 @ED_vgroup_array_get(%struct.ID* %2, %struct.MDeformVert** %dvert, i32* %tot), !dbg !6546
  %3 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6547
  %cmp = icmp eq %struct.MDeformVert* %3, null, !dbg !6549
  br i1 %cmp, label %if.then, label %if.end, !dbg !6550

if.then:                                          ; preds = %entry
  br label %if.end27, !dbg !6551

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %vertnum.addr, align 4, !dbg !6552
  %cmp1 = icmp slt i32 %4, 0, !dbg !6554
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !6555

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %vertnum.addr, align 4, !dbg !6556
  %6 = load i32, i32* %tot, align 4, !dbg !6557
  %cmp2 = icmp sge i32 %5, %6, !dbg !6558
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6559

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  br label %if.end27, !dbg !6560

if.end4:                                          ; preds = %lor.lhs.false
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6561
  %tobool = icmp ne %struct.MDeformVert* %7, null, !dbg !6561
  br i1 %tobool, label %if.then5, label %if.end27, !dbg !6563

if.then5:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !6564, metadata !DIExpression()), !dbg !6566
  %8 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6567
  %9 = load i32, i32* %vertnum.addr, align 4, !dbg !6568
  %idxprom = sext i32 %9 to i64, !dbg !6567
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %8, i64 %idxprom, !dbg !6567
  store %struct.MDeformVert* %arrayidx, %struct.MDeformVert** %dv, align 8, !dbg !6566
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !6569, metadata !DIExpression()), !dbg !6570
  %10 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6571
  %11 = load i32, i32* %def_nr.addr, align 4, !dbg !6572
  %call6 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %10, i32 %11), !dbg !6573
  store %struct.MDeformWeight* %call6, %struct.MDeformWeight** %dw, align 8, !dbg !6574
  %12 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6575
  %tobool7 = icmp ne %struct.MDeformWeight* %12, null, !dbg !6575
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !6577

if.then8:                                         ; preds = %if.then5
  %13 = load i32, i32* %assignmode.addr, align 4, !dbg !6578
  switch i32 %13, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb10
    i32 3, label %sw.bb17
  ], !dbg !6580

sw.bb:                                            ; preds = %if.then8
  %14 = load float, float* %weight.addr, align 4, !dbg !6581
  %15 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6583
  %weight9 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %15, i32 0, i32 1, !dbg !6584
  store float %14, float* %weight9, align 4, !dbg !6585
  br label %sw.epilog, !dbg !6586

sw.bb10:                                          ; preds = %if.then8
  %16 = load float, float* %weight.addr, align 4, !dbg !6587
  %17 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6588
  %weight11 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %17, i32 0, i32 1, !dbg !6589
  %18 = load float, float* %weight11, align 4, !dbg !6590
  %add = fadd float %18, %16, !dbg !6590
  store float %add, float* %weight11, align 4, !dbg !6590
  %19 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6591
  %weight12 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %19, i32 0, i32 1, !dbg !6593
  %20 = load float, float* %weight12, align 4, !dbg !6593
  %cmp13 = fcmp oge float %20, 1.000000e+00, !dbg !6594
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !6595

if.then14:                                        ; preds = %sw.bb10
  %21 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6596
  %weight15 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %21, i32 0, i32 1, !dbg !6597
  store float 1.000000e+00, float* %weight15, align 4, !dbg !6598
  br label %if.end16, !dbg !6596

if.end16:                                         ; preds = %if.then14, %sw.bb10
  br label %sw.epilog, !dbg !6599

sw.bb17:                                          ; preds = %if.then8
  %22 = load float, float* %weight.addr, align 4, !dbg !6600
  %23 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6601
  %weight18 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %23, i32 0, i32 1, !dbg !6602
  %24 = load float, float* %weight18, align 4, !dbg !6603
  %sub = fsub float %24, %22, !dbg !6603
  store float %sub, float* %weight18, align 4, !dbg !6603
  %25 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6604
  %weight19 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %25, i32 0, i32 1, !dbg !6606
  %26 = load float, float* %weight19, align 4, !dbg !6606
  %cmp20 = fcmp ole float %26, 0.000000e+00, !dbg !6607
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !6608

if.then21:                                        ; preds = %sw.bb17
  %27 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6609
  %28 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6611
  call void @defvert_remove_group(%struct.MDeformVert* %27, %struct.MDeformWeight* %28), !dbg !6612
  br label %if.end22, !dbg !6613

if.end22:                                         ; preds = %if.then21, %sw.bb17
  br label %sw.epilog, !dbg !6614

sw.epilog:                                        ; preds = %if.then8, %if.end22, %if.end16, %sw.bb
  br label %if.end26, !dbg !6615

if.else:                                          ; preds = %if.then5
  %29 = load i32, i32* %assignmode.addr, align 4, !dbg !6616
  switch i32 %29, label %sw.epilog25 [
    i32 3, label %sw.bb23
    i32 1, label %sw.bb24
    i32 2, label %sw.bb24
  ], !dbg !6618

sw.bb23:                                          ; preds = %if.else
  br label %if.end27, !dbg !6619

sw.bb24:                                          ; preds = %if.else, %if.else
  %30 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6621
  %31 = load i32, i32* %def_nr.addr, align 4, !dbg !6622
  %32 = load float, float* %weight.addr, align 4, !dbg !6623
  call void @defvert_add_index_notest(%struct.MDeformVert* %30, i32 %31, float %32), !dbg !6624
  br label %sw.epilog25, !dbg !6625

sw.epilog25:                                      ; preds = %if.else, %sw.bb24
  br label %if.end26

if.end26:                                         ; preds = %sw.epilog25, %sw.epilog
  br label %if.end27, !dbg !6626

if.end27:                                         ; preds = %if.then, %if.then3, %sw.bb23, %if.end26, %if.end4
  ret void, !dbg !6627
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_vert_remove(%struct.Object* %ob, %struct.bDeformGroup* %dg, i32 %vertnum) #0 !dbg !6628 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dg.addr = alloca %struct.bDeformGroup*, align 8
  %vertnum.addr = alloca i32, align 4
  %def_nr = alloca i32, align 4
  %dvert = alloca %struct.MDeformVert*, align 8
  %tot = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6631, metadata !DIExpression()), !dbg !6632
  store %struct.bDeformGroup* %dg, %struct.bDeformGroup** %dg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg.addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  store i32 %vertnum, i32* %vertnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertnum.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !6637, metadata !DIExpression()), !dbg !6638
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6639
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !6640
  %1 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !6641
  %2 = bitcast %struct.bDeformGroup* %1 to i8*, !dbg !6641
  %call = call i32 @BLI_findindex(%struct.ListBase* %defbase, i8* %2), !dbg !6642
  store i32 %call, i32* %def_nr, align 4, !dbg !6638
  %3 = load i32, i32* %def_nr, align 4, !dbg !6643
  %cmp = icmp ne i32 %3, -1, !dbg !6645
  br i1 %cmp, label %if.then, label %if.end4, !dbg !6646

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !6647, metadata !DIExpression()), !dbg !6649
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert, align 8, !dbg !6649
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6650, metadata !DIExpression()), !dbg !6651
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6652
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !6653
  %5 = load i8*, i8** %data, align 8, !dbg !6653
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !6652
  %call1 = call zeroext i8 @ED_vgroup_array_get(%struct.ID* %6, %struct.MDeformVert** %dvert, i32* %tot), !dbg !6654
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6655
  %tobool = icmp ne %struct.MDeformVert* %7, null, !dbg !6655
  br i1 %tobool, label %if.then2, label %if.end, !dbg !6657

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !6658, metadata !DIExpression()), !dbg !6660
  %8 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6661
  %9 = load i32, i32* %vertnum.addr, align 4, !dbg !6662
  %idxprom = sext i32 %9 to i64, !dbg !6661
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %8, i64 %idxprom, !dbg !6661
  store %struct.MDeformVert* %arrayidx, %struct.MDeformVert** %dv, align 8, !dbg !6660
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !6663, metadata !DIExpression()), !dbg !6664
  %10 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6665
  %11 = load i32, i32* %def_nr, align 4, !dbg !6666
  %call3 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %10, i32 %11), !dbg !6667
  store %struct.MDeformWeight* %call3, %struct.MDeformWeight** %dw, align 8, !dbg !6668
  %12 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6669
  %13 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6670
  call void @defvert_remove_group(%struct.MDeformVert* %12, %struct.MDeformWeight* %13), !dbg !6671
  br label %if.end, !dbg !6672

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !6673

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !6674
}

declare dso_local %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @ED_vgroup_vert_weight(%struct.Object* %ob, %struct.bDeformGroup* %dg, i32 %vertnum) #0 !dbg !6675 {
entry:
  %retval = alloca float, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %dg.addr = alloca %struct.bDeformGroup*, align 8
  %vertnum.addr = alloca i32, align 4
  %def_nr = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6678, metadata !DIExpression()), !dbg !6679
  store %struct.bDeformGroup* %dg, %struct.bDeformGroup** %dg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg.addr, metadata !6680, metadata !DIExpression()), !dbg !6681
  store i32 %vertnum, i32* %vertnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertnum.addr, metadata !6682, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !6684, metadata !DIExpression()), !dbg !6685
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6686
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !6687
  %1 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !6688
  %2 = bitcast %struct.bDeformGroup* %1 to i8*, !dbg !6688
  %call = call i32 @BLI_findindex(%struct.ListBase* %defbase, i8* %2), !dbg !6689
  store i32 %call, i32* %def_nr, align 4, !dbg !6685
  %3 = load i32, i32* %def_nr, align 4, !dbg !6690
  %cmp = icmp eq i32 %3, -1, !dbg !6692
  br i1 %cmp, label %if.then, label %if.end, !dbg !6693

if.then:                                          ; preds = %entry
  store float -1.000000e+00, float* %retval, align 4, !dbg !6694
  br label %return, !dbg !6694

if.end:                                           ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6696
  %5 = load i32, i32* %def_nr, align 4, !dbg !6697
  %6 = load i32, i32* %vertnum.addr, align 4, !dbg !6698
  %call1 = call float @get_vert_def_nr(%struct.Object* %4, i32 %5, i32 %6), !dbg !6699
  store float %call1, float* %retval, align 4, !dbg !6700
  br label %return, !dbg !6700

return:                                           ; preds = %if.end, %if.then
  %7 = load float, float* %retval, align 4, !dbg !6701
  ret float %7, !dbg !6701
}

; Function Attrs: noinline nounwind uwtable
define internal float @get_vert_def_nr(%struct.Object* %ob, i32 %def_nr, i32 %vertnum) #0 !dbg !6702 {
entry:
  %retval = alloca float, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %def_nr.addr = alloca i32, align 4
  %vertnum.addr = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %eve = alloca %struct.BMVert*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6705, metadata !DIExpression()), !dbg !6706
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !6707, metadata !DIExpression()), !dbg !6708
  store i32 %vertnum, i32* %vertnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertnum.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !6711, metadata !DIExpression()), !dbg !6712
  store %struct.MDeformVert* null, %struct.MDeformVert** %dv, align 8, !dbg !6712
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6713
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !6715
  %1 = load i16, i16* %type, align 8, !dbg !6715
  %conv = sext i16 %1 to i32, !dbg !6713
  %cmp = icmp eq i32 %conv, 1, !dbg !6716
  br i1 %cmp, label %if.then, label %if.else21, !dbg !6717

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6718, metadata !DIExpression()), !dbg !6720
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6721
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !6722
  %3 = load i8*, i8** %data, align 8, !dbg !6722
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !6721
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !6720
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6723
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 20, !dbg !6725
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !6725
  %tobool = icmp ne %struct.BMEditMesh* %6, null, !dbg !6723
  br i1 %tobool, label %if.then2, label %if.else11, !dbg !6726

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6727, metadata !DIExpression()), !dbg !6729
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6730
  %edit_btmesh3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 20, !dbg !6731
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh3, align 8, !dbg !6731
  store %struct.BMEditMesh* %8, %struct.BMEditMesh** %em, align 8, !dbg !6729
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !6732, metadata !DIExpression()), !dbg !6733
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6734
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !6735
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6735
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 24, !dbg !6736
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !6737
  store i32 %call, i32* %cd_dvert_offset, align 4, !dbg !6733
  %11 = load i32, i32* %cd_dvert_offset, align 4, !dbg !6738
  %cmp4 = icmp ne i32 %11, -1, !dbg !6740
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !6741

if.then6:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !6742, metadata !DIExpression()), !dbg !6744
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6745
  %bm7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !6746
  %13 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !6746
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %13, i8 zeroext 1), !dbg !6747
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6748
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !6749
  %15 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !6749
  %16 = load i32, i32* %vertnum.addr, align 4, !dbg !6750
  %call9 = call %struct.BMVert* @BM_vert_at_index(%struct.BMesh* %15, i32 %16), !dbg !6751
  store %struct.BMVert* %call9, %struct.BMVert** %eve, align 8, !dbg !6752
  %17 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !6753
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 0, !dbg !6753
  %data10 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !6753
  %18 = load i8*, i8** %data10, align 8, !dbg !6753
  %19 = load i32, i32* %cd_dvert_offset, align 4, !dbg !6753
  %idx.ext = sext i32 %19 to i64, !dbg !6753
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !6753
  %20 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !6753
  store %struct.MDeformVert* %20, %struct.MDeformVert** %dv, align 8, !dbg !6754
  br label %if.end, !dbg !6755

if.else:                                          ; preds = %if.then2
  store float 0.000000e+00, float* %retval, align 4, !dbg !6756
  br label %return, !dbg !6756

if.end:                                           ; preds = %if.then6
  br label %if.end20, !dbg !6758

if.else11:                                        ; preds = %if.then
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6759
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 17, !dbg !6762
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6762
  %tobool12 = icmp ne %struct.MDeformVert* %22, null, !dbg !6759
  br i1 %tobool12, label %if.then13, label %if.end19, !dbg !6763

if.then13:                                        ; preds = %if.else11
  %23 = load i32, i32* %vertnum.addr, align 4, !dbg !6764
  %24 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6767
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 26, !dbg !6768
  %25 = load i32, i32* %totvert, align 8, !dbg !6768
  %cmp14 = icmp sge i32 %23, %25, !dbg !6769
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6770

if.then16:                                        ; preds = %if.then13
  store float 0.000000e+00, float* %retval, align 4, !dbg !6771
  br label %return, !dbg !6771

if.end17:                                         ; preds = %if.then13
  %26 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6773
  %dvert18 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 17, !dbg !6774
  %27 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert18, align 8, !dbg !6774
  %28 = load i32, i32* %vertnum.addr, align 4, !dbg !6775
  %idxprom = sext i32 %28 to i64, !dbg !6773
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %27, i64 %idxprom, !dbg !6773
  store %struct.MDeformVert* %arrayidx, %struct.MDeformVert** %dv, align 8, !dbg !6776
  br label %if.end19, !dbg !6777

if.end19:                                         ; preds = %if.end17, %if.else11
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end
  br label %if.end44, !dbg !6778

if.else21:                                        ; preds = %entry
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6779
  %type22 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 3, !dbg !6781
  %30 = load i16, i16* %type22, align 8, !dbg !6781
  %conv23 = sext i16 %30 to i32, !dbg !6779
  %cmp24 = icmp eq i32 %conv23, 22, !dbg !6782
  br i1 %cmp24, label %if.then26, label %if.end43, !dbg !6783

if.then26:                                        ; preds = %if.else21
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !6784, metadata !DIExpression()), !dbg !6786
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6787
  %call27 = call %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %31), !dbg !6788
  store %struct.Lattice* %call27, %struct.Lattice** %lt, align 8, !dbg !6786
  %32 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6789
  %dvert28 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %32, i32 0, i32 24, !dbg !6791
  %33 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert28, align 8, !dbg !6791
  %tobool29 = icmp ne %struct.MDeformVert* %33, null, !dbg !6789
  br i1 %tobool29, label %if.then30, label %if.end42, !dbg !6792

if.then30:                                        ; preds = %if.then26
  %34 = load i32, i32* %vertnum.addr, align 4, !dbg !6793
  %35 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6796
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %35, i32 0, i32 2, !dbg !6797
  %36 = load i16, i16* %pntsu, align 8, !dbg !6797
  %conv31 = sext i16 %36 to i32, !dbg !6796
  %37 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6798
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %37, i32 0, i32 3, !dbg !6799
  %38 = load i16, i16* %pntsv, align 2, !dbg !6799
  %conv32 = sext i16 %38 to i32, !dbg !6798
  %mul = mul nsw i32 %conv31, %conv32, !dbg !6800
  %39 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6801
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %39, i32 0, i32 4, !dbg !6802
  %40 = load i16, i16* %pntsw, align 4, !dbg !6802
  %conv33 = sext i16 %40 to i32, !dbg !6801
  %mul34 = mul nsw i32 %mul, %conv33, !dbg !6803
  %cmp35 = icmp sge i32 %34, %mul34, !dbg !6804
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !6805

if.then37:                                        ; preds = %if.then30
  store float 0.000000e+00, float* %retval, align 4, !dbg !6806
  br label %return, !dbg !6806

if.end38:                                         ; preds = %if.then30
  %41 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !6808
  %dvert39 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %41, i32 0, i32 24, !dbg !6809
  %42 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert39, align 8, !dbg !6809
  %43 = load i32, i32* %vertnum.addr, align 4, !dbg !6810
  %idxprom40 = sext i32 %43 to i64, !dbg !6808
  %arrayidx41 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %42, i64 %idxprom40, !dbg !6808
  store %struct.MDeformVert* %arrayidx41, %struct.MDeformVert** %dv, align 8, !dbg !6811
  br label %if.end42, !dbg !6812

if.end42:                                         ; preds = %if.end38, %if.then26
  br label %if.end43, !dbg !6813

if.end43:                                         ; preds = %if.end42, %if.else21
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end20
  %44 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6814
  %tobool45 = icmp ne %struct.MDeformVert* %44, null, !dbg !6814
  br i1 %tobool45, label %if.then46, label %if.end51, !dbg !6816

if.then46:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !6817, metadata !DIExpression()), !dbg !6819
  %45 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6820
  %46 = load i32, i32* %def_nr.addr, align 4, !dbg !6821
  %call47 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %45, i32 %46), !dbg !6822
  store %struct.MDeformWeight* %call47, %struct.MDeformWeight** %dw, align 8, !dbg !6819
  %47 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6823
  %tobool48 = icmp ne %struct.MDeformWeight* %47, null, !dbg !6823
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !6825

if.then49:                                        ; preds = %if.then46
  %48 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !6826
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %48, i32 0, i32 1, !dbg !6828
  %49 = load float, float* %weight, align 4, !dbg !6828
  store float %49, float* %retval, align 4, !dbg !6829
  br label %return, !dbg !6829

if.end50:                                         ; preds = %if.then46
  br label %if.end51, !dbg !6830

if.end51:                                         ; preds = %if.end50, %if.end44
  store float -1.000000e+00, float* %retval, align 4, !dbg !6831
  br label %return, !dbg !6831

return:                                           ; preds = %if.end51, %if.then49, %if.then37, %if.then16, %if.else
  %50 = load float, float* %retval, align 4, !dbg !6832
  ret float %50, !dbg !6832
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_select_by_name(%struct.Object* %ob, i8* %name) #0 !dbg !6833 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6836, metadata !DIExpression()), !dbg !6837
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6838, metadata !DIExpression()), !dbg !6839
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6840
  %1 = load i8*, i8** %name.addr, align 8, !dbg !6841
  %call = call i32 @defgroup_name_index(%struct.Object* %0, i8* %1), !dbg !6842
  %add = add nsw i32 %call, 1, !dbg !6843
  %conv = trunc i32 %add to i16, !dbg !6842
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6844
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 97, !dbg !6845
  store i16 %conv, i16* %actdef, align 2, !dbg !6846
  ret void, !dbg !6847
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @ED_vgroup_subset_from_select_type(%struct.Object* %ob, i32 %subset_type, i32* %r_vgroup_tot, i32* %r_subset_count) #0 !dbg !6848 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %subset_type.addr = alloca i32, align 4
  %r_vgroup_tot.addr = alloca i32*, align 8
  %r_subset_count.addr = alloca i32*, align 8
  %vgroup_validmap = alloca i8*, align 8
  %def_nr_active = alloca i32, align 4
  %i = alloca i32, align 4
  %i22 = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6852, metadata !DIExpression()), !dbg !6853
  store i32 %subset_type, i32* %subset_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subset_type.addr, metadata !6854, metadata !DIExpression()), !dbg !6855
  store i32* %r_vgroup_tot, i32** %r_vgroup_tot.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_vgroup_tot.addr, metadata !6856, metadata !DIExpression()), !dbg !6857
  store i32* %r_subset_count, i32** %r_subset_count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_subset_count.addr, metadata !6858, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !6860, metadata !DIExpression()), !dbg !6861
  store i8* null, i8** %vgroup_validmap, align 8, !dbg !6861
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6862
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !6863
  %call = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !6864
  %1 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6865
  store i32 %call, i32* %1, align 4, !dbg !6866
  %2 = load i32, i32* %subset_type.addr, align 4, !dbg !6867
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb8
    i32 3, label %sw.bb10
    i32 4, label %sw.bb21
    i32 0, label %sw.bb44
  ], !dbg !6868

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %def_nr_active, metadata !6869, metadata !DIExpression()), !dbg !6872
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6873
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 97, !dbg !6874
  %4 = load i16, i16* %actdef, align 2, !dbg !6874
  %conv = zext i16 %4 to i32, !dbg !6873
  %sub = sub nsw i32 %conv, 1, !dbg !6875
  store i32 %sub, i32* %def_nr_active, align 4, !dbg !6872
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6876
  %6 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6877
  %7 = load i32, i32* %6, align 4, !dbg !6878
  %conv1 = sext i32 %7 to i64, !dbg !6878
  %mul = mul i64 %conv1, 1, !dbg !6879
  %call2 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.ED_vgroup_subset_from_select_type, i64 0, i64 0)), !dbg !6876
  store i8* %call2, i8** %vgroup_validmap, align 8, !dbg !6880
  %8 = load i8*, i8** %vgroup_validmap, align 8, !dbg !6881
  %9 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6882
  %10 = load i32, i32* %9, align 4, !dbg !6883
  %conv3 = sext i32 %10 to i64, !dbg !6883
  %mul4 = mul i64 %conv3, 1, !dbg !6884
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 %mul4, i1 false), !dbg !6885
  %11 = load i32, i32* %def_nr_active, align 4, !dbg !6886
  %cmp = icmp sge i32 %11, 0, !dbg !6888
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6889

land.lhs.true:                                    ; preds = %sw.bb
  %12 = load i32, i32* %def_nr_active, align 4, !dbg !6890
  %13 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6891
  %14 = load i32, i32* %13, align 4, !dbg !6892
  %cmp6 = icmp slt i32 %12, %14, !dbg !6893
  br i1 %cmp6, label %if.then, label %if.else, !dbg !6894

if.then:                                          ; preds = %land.lhs.true
  %15 = load i32*, i32** %r_subset_count.addr, align 8, !dbg !6895
  store i32 1, i32* %15, align 4, !dbg !6897
  %16 = load i8*, i8** %vgroup_validmap, align 8, !dbg !6898
  %17 = load i32, i32* %def_nr_active, align 4, !dbg !6899
  %idxprom = sext i32 %17 to i64, !dbg !6898
  %arrayidx = getelementptr inbounds i8, i8* %16, i64 %idxprom, !dbg !6898
  store i8 1, i8* %arrayidx, align 1, !dbg !6900
  br label %if.end, !dbg !6901

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  %18 = load i32*, i32** %r_subset_count.addr, align 8, !dbg !6902
  store i32 0, i32* %18, align 4, !dbg !6904
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !6905

sw.bb8:                                           ; preds = %entry
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6906
  %20 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6908
  %21 = load i32, i32* %20, align 4, !dbg !6909
  %22 = load i32*, i32** %r_subset_count.addr, align 8, !dbg !6910
  %call9 = call i8* @BKE_objdef_selected_get(%struct.Object* %19, i32 %21, i32* %22), !dbg !6911
  store i8* %call9, i8** %vgroup_validmap, align 8, !dbg !6912
  br label %sw.epilog, !dbg !6913

sw.bb10:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6914, metadata !DIExpression()), !dbg !6916
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6917
  %24 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6918
  %25 = load i32, i32* %24, align 4, !dbg !6919
  %call11 = call i8* @BKE_objdef_validmap_get(%struct.Object* %23, i32 %25), !dbg !6920
  store i8* %call11, i8** %vgroup_validmap, align 8, !dbg !6921
  %26 = load i32*, i32** %r_subset_count.addr, align 8, !dbg !6922
  store i32 0, i32* %26, align 4, !dbg !6923
  store i32 0, i32* %i, align 4, !dbg !6924
  br label %for.cond, !dbg !6926

for.cond:                                         ; preds = %for.inc, %sw.bb10
  %27 = load i32, i32* %i, align 4, !dbg !6927
  %28 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6929
  %29 = load i32, i32* %28, align 4, !dbg !6930
  %cmp12 = icmp slt i32 %27, %29, !dbg !6931
  br i1 %cmp12, label %for.body, label %for.end, !dbg !6932

for.body:                                         ; preds = %for.cond
  %30 = load i8*, i8** %vgroup_validmap, align 8, !dbg !6933
  %31 = load i32, i32* %i, align 4, !dbg !6936
  %idxprom14 = sext i32 %31 to i64, !dbg !6933
  %arrayidx15 = getelementptr inbounds i8, i8* %30, i64 %idxprom14, !dbg !6933
  %32 = load i8, i8* %arrayidx15, align 1, !dbg !6933
  %conv16 = zext i8 %32 to i32, !dbg !6933
  %cmp17 = icmp eq i32 %conv16, 1, !dbg !6937
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !6938

if.then19:                                        ; preds = %for.body
  %33 = load i32*, i32** %r_subset_count.addr, align 8, !dbg !6939
  %34 = load i32, i32* %33, align 4, !dbg !6941
  %add = add nsw i32 %34, 1, !dbg !6941
  store i32 %add, i32* %33, align 4, !dbg !6941
  br label %if.end20, !dbg !6942

if.end20:                                         ; preds = %if.then19, %for.body
  br label %for.inc, !dbg !6943

for.inc:                                          ; preds = %if.end20
  %35 = load i32, i32* %i, align 4, !dbg !6944
  %inc = add nsw i32 %35, 1, !dbg !6944
  store i32 %inc, i32* %i, align 4, !dbg !6944
  br label %for.cond, !dbg !6945, !llvm.loop !6946

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !6948

sw.bb21:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i22, metadata !6949, metadata !DIExpression()), !dbg !6951
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6952
  %37 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6953
  %38 = load i32, i32* %37, align 4, !dbg !6954
  %call23 = call i8* @BKE_objdef_validmap_get(%struct.Object* %36, i32 %38), !dbg !6955
  store i8* %call23, i8** %vgroup_validmap, align 8, !dbg !6956
  %39 = load i32*, i32** %r_subset_count.addr, align 8, !dbg !6957
  store i32 0, i32* %39, align 4, !dbg !6958
  store i32 0, i32* %i22, align 4, !dbg !6959
  br label %for.cond24, !dbg !6961

for.cond24:                                       ; preds = %for.inc41, %sw.bb21
  %40 = load i32, i32* %i22, align 4, !dbg !6962
  %41 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6964
  %42 = load i32, i32* %41, align 4, !dbg !6965
  %cmp25 = icmp slt i32 %40, %42, !dbg !6966
  br i1 %cmp25, label %for.body27, label %for.end43, !dbg !6967

for.body27:                                       ; preds = %for.cond24
  %43 = load i8*, i8** %vgroup_validmap, align 8, !dbg !6968
  %44 = load i32, i32* %i22, align 4, !dbg !6970
  %idxprom28 = sext i32 %44 to i64, !dbg !6968
  %arrayidx29 = getelementptr inbounds i8, i8* %43, i64 %idxprom28, !dbg !6968
  %45 = load i8, i8* %arrayidx29, align 1, !dbg !6968
  %tobool = icmp ne i8 %45, 0, !dbg !6971
  %lnot = xor i1 %tobool, true, !dbg !6971
  %lnot.ext = zext i1 %lnot to i32, !dbg !6971
  %conv30 = trunc i32 %lnot.ext to i8, !dbg !6971
  %46 = load i8*, i8** %vgroup_validmap, align 8, !dbg !6972
  %47 = load i32, i32* %i22, align 4, !dbg !6973
  %idxprom31 = sext i32 %47 to i64, !dbg !6972
  %arrayidx32 = getelementptr inbounds i8, i8* %46, i64 %idxprom31, !dbg !6972
  store i8 %conv30, i8* %arrayidx32, align 1, !dbg !6974
  %48 = load i8*, i8** %vgroup_validmap, align 8, !dbg !6975
  %49 = load i32, i32* %i22, align 4, !dbg !6977
  %idxprom33 = sext i32 %49 to i64, !dbg !6975
  %arrayidx34 = getelementptr inbounds i8, i8* %48, i64 %idxprom33, !dbg !6975
  %50 = load i8, i8* %arrayidx34, align 1, !dbg !6975
  %conv35 = zext i8 %50 to i32, !dbg !6975
  %cmp36 = icmp eq i32 %conv35, 1, !dbg !6978
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !6979

if.then38:                                        ; preds = %for.body27
  %51 = load i32*, i32** %r_subset_count.addr, align 8, !dbg !6980
  %52 = load i32, i32* %51, align 4, !dbg !6982
  %add39 = add nsw i32 %52, 1, !dbg !6982
  store i32 %add39, i32* %51, align 4, !dbg !6982
  br label %if.end40, !dbg !6983

if.end40:                                         ; preds = %if.then38, %for.body27
  br label %for.inc41, !dbg !6984

for.inc41:                                        ; preds = %if.end40
  %53 = load i32, i32* %i22, align 4, !dbg !6985
  %inc42 = add nsw i32 %53, 1, !dbg !6985
  store i32 %inc42, i32* %i22, align 4, !dbg !6985
  br label %for.cond24, !dbg !6986, !llvm.loop !6987

for.end43:                                        ; preds = %for.cond24
  br label %sw.epilog, !dbg !6989

sw.bb44:                                          ; preds = %entry
  br label %sw.default, !dbg !6990

sw.default:                                       ; preds = %entry, %sw.bb44
  %54 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6991
  %55 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6993
  %56 = load i32, i32* %55, align 4, !dbg !6994
  %conv45 = sext i32 %56 to i64, !dbg !6994
  %mul46 = mul i64 %conv45, 1, !dbg !6995
  %call47 = call i8* %54(i64 %mul46, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.ED_vgroup_subset_from_select_type, i64 0, i64 0)), !dbg !6991
  store i8* %call47, i8** %vgroup_validmap, align 8, !dbg !6996
  %57 = load i8*, i8** %vgroup_validmap, align 8, !dbg !6997
  %58 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !6998
  %59 = load i32, i32* %58, align 4, !dbg !6999
  %conv48 = sext i32 %59 to i64, !dbg !6999
  %mul49 = mul i64 %conv48, 1, !dbg !7000
  call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 1, i64 %mul49, i1 false), !dbg !7001
  %60 = load i32*, i32** %r_vgroup_tot.addr, align 8, !dbg !7002
  %61 = load i32, i32* %60, align 4, !dbg !7003
  %62 = load i32*, i32** %r_subset_count.addr, align 8, !dbg !7004
  store i32 %61, i32* %62, align 4, !dbg !7005
  br label %sw.epilog, !dbg !7006

sw.epilog:                                        ; preds = %sw.default, %for.end43, %for.end, %sw.bb8, %if.end
  %63 = load i8*, i8** %vgroup_validmap, align 8, !dbg !7007
  ret i8* %63, !dbg !7008
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local i8* @BKE_objdef_selected_get(%struct.Object*, i32, i32*) #2

declare dso_local i8* @BKE_objdef_validmap_get(%struct.Object*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_subset_to_index_array(i8* %vgroup_validmap, i32 %vgroup_tot, i32* %r_vgroup_subset_map) #0 !dbg !7009 {
entry:
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %r_vgroup_subset_map.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !7012, metadata !DIExpression()), !dbg !7013
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !7014, metadata !DIExpression()), !dbg !7015
  store i32* %r_vgroup_subset_map, i32** %r_vgroup_subset_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_vgroup_subset_map.addr, metadata !7016, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7018, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7020, metadata !DIExpression()), !dbg !7021
  store i32 0, i32* %j, align 4, !dbg !7021
  store i32 0, i32* %i, align 4, !dbg !7022
  br label %for.cond, !dbg !7024

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7025
  %1 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !7027
  %cmp = icmp slt i32 %0, %1, !dbg !7028
  br i1 %cmp, label %for.body, label %for.end, !dbg !7029

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !7030
  %3 = load i32, i32* %i, align 4, !dbg !7033
  %idxprom = sext i32 %3 to i64, !dbg !7030
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !7030
  %4 = load i8, i8* %arrayidx, align 1, !dbg !7030
  %tobool = icmp ne i8 %4, 0, !dbg !7030
  br i1 %tobool, label %if.then, label %if.end, !dbg !7034

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !7035
  %6 = load i32*, i32** %r_vgroup_subset_map.addr, align 8, !dbg !7037
  %7 = load i32, i32* %j, align 4, !dbg !7038
  %inc = add nsw i32 %7, 1, !dbg !7038
  store i32 %inc, i32* %j, align 4, !dbg !7038
  %idxprom1 = sext i32 %7 to i64, !dbg !7037
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 %idxprom1, !dbg !7037
  store i32 %5, i32* %arrayidx2, align 4, !dbg !7039
  br label %if.end, !dbg !7040

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7041

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !7042
  %inc3 = add nsw i32 %8, 1, !dbg !7042
  store i32 %inc3, i32* %i, align 4, !dbg !7042
  br label %for.cond, !dbg !7043, !llvm.loop !7044

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7046
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_vgroup_mirror(%struct.Object* %ob, i8 zeroext %mirror_weights, i8 zeroext %flip_vgroups, i8 zeroext %all_vgroups, i8 zeroext %use_topology, i32* %r_totmirr, i32* %r_totfail) #0 !dbg !7047 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mirror_weights.addr = alloca i8, align 1
  %flip_vgroups.addr = alloca i8, align 1
  %all_vgroups.addr = alloca i8, align 1
  %use_topology.addr = alloca i8, align 1
  %r_totmirr.addr = alloca i32*, align 8
  %r_totfail.addr = alloca i32*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eve_mirr = alloca %struct.BMVert*, align 8
  %dvert = alloca %struct.MDeformVert*, align 8
  %dvert_mirr = alloca %struct.MDeformVert*, align 8
  %sel = alloca i8, align 1
  %sel_mirr = alloca i8, align 1
  %flip_map = alloca i32*, align 8
  %flip_map_len = alloca i32, align 4
  %def_nr = alloca i32, align 4
  %totmirr = alloca i32, align 4
  %totfail = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %mv = alloca %struct.MVert*, align 8
  %mv_mirr = alloca %struct.MVert*, align 8
  %vidx = alloca i32, align 4
  %vidx_mirr = alloca i32, align 4
  %use_vert_sel = alloca i32, align 4
  %lt = alloca %struct.Lattice*, align 8
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %w = alloca i32, align 4
  %pntsu_half = alloca i32, align 4
  %u_inv = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %bp_mirr = alloca %struct.BPoint*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7050, metadata !DIExpression()), !dbg !7051
  store i8 %mirror_weights, i8* %mirror_weights.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mirror_weights.addr, metadata !7052, metadata !DIExpression()), !dbg !7053
  store i8 %flip_vgroups, i8* %flip_vgroups.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flip_vgroups.addr, metadata !7054, metadata !DIExpression()), !dbg !7055
  store i8 %all_vgroups, i8* %all_vgroups.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all_vgroups.addr, metadata !7056, metadata !DIExpression()), !dbg !7057
  store i8 %use_topology, i8* %use_topology.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_topology.addr, metadata !7058, metadata !DIExpression()), !dbg !7059
  store i32* %r_totmirr, i32** %r_totmirr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totmirr.addr, metadata !7060, metadata !DIExpression()), !dbg !7061
  store i32* %r_totfail, i32** %r_totfail.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totfail.addr, metadata !7062, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !7064, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_mirr, metadata !7066, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !7068, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_mirr, metadata !7070, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.declare(metadata i8* %sel, metadata !7072, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.declare(metadata i8* %sel_mirr, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata i32** %flip_map, metadata !7076, metadata !DIExpression()), !dbg !7077
  store i32* null, i32** %flip_map, align 8, !dbg !7077
  call void @llvm.dbg.declare(metadata i32* %flip_map_len, metadata !7078, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !7080, metadata !DIExpression()), !dbg !7081
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7082
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 97, !dbg !7083
  %1 = load i16, i16* %actdef, align 2, !dbg !7083
  %conv = zext i16 %1 to i32, !dbg !7082
  %sub = sub nsw i32 %conv, 1, !dbg !7084
  store i32 %sub, i32* %def_nr, align 4, !dbg !7081
  call void @llvm.dbg.declare(metadata i32* %totmirr, metadata !7085, metadata !DIExpression()), !dbg !7086
  store i32 0, i32* %totmirr, align 4, !dbg !7086
  call void @llvm.dbg.declare(metadata i32* %totfail, metadata !7087, metadata !DIExpression()), !dbg !7088
  store i32 0, i32* %totfail, align 4, !dbg !7088
  %2 = load i32*, i32** %r_totfail.addr, align 8, !dbg !7089
  store i32 0, i32* %2, align 4, !dbg !7090
  %3 = load i32*, i32** %r_totmirr.addr, align 8, !dbg !7091
  store i32 0, i32* %3, align 4, !dbg !7092
  %4 = load i8, i8* %mirror_weights.addr, align 1, !dbg !7093
  %conv1 = zext i8 %4 to i32, !dbg !7093
  %cmp = icmp eq i32 %conv1, 0, !dbg !7095
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7096

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* %flip_vgroups.addr, align 1, !dbg !7097
  %conv3 = zext i8 %5 to i32, !dbg !7097
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !7098
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !7099

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7100
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 25, !dbg !7101
  %7 = load i32, i32* %def_nr, align 4, !dbg !7102
  %call = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %7), !dbg !7103
  %cmp6 = icmp eq i8* %call, null, !dbg !7104
  br i1 %cmp6, label %if.then, label %if.end, !dbg !7105

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %if.end234, !dbg !7106

if.end:                                           ; preds = %lor.lhs.false
  %8 = load i8, i8* %flip_vgroups.addr, align 1, !dbg !7108
  %tobool = icmp ne i8 %8, 0, !dbg !7108
  br i1 %tobool, label %if.then8, label %if.else, !dbg !7110

if.then8:                                         ; preds = %if.end
  %9 = load i8, i8* %all_vgroups.addr, align 1, !dbg !7111
  %conv9 = zext i8 %9 to i32, !dbg !7111
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !7111
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !7111

cond.true:                                        ; preds = %if.then8
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7113
  %call11 = call i32* @defgroup_flip_map(%struct.Object* %10, i32* %flip_map_len, i8 zeroext 0), !dbg !7114
  br label %cond.end, !dbg !7111

cond.false:                                       ; preds = %if.then8
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7115
  %12 = load i32, i32* %def_nr, align 4, !dbg !7116
  %call12 = call i32* @defgroup_flip_map_single(%struct.Object* %11, i32* %flip_map_len, i8 zeroext 0, i32 %12), !dbg !7117
  br label %cond.end, !dbg !7111

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %call11, %cond.true ], [ %call12, %cond.false ], !dbg !7111
  store i32* %cond, i32** %flip_map, align 8, !dbg !7118
  %13 = load i32*, i32** %flip_map, align 8, !dbg !7119
  %cmp13 = icmp eq i32* %13, null, !dbg !7121
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !7122

if.then15:                                        ; preds = %cond.end
  br label %if.end234, !dbg !7123

if.end16:                                         ; preds = %cond.end
  br label %if.end17, !dbg !7125

if.else:                                          ; preds = %if.end
  store i32* null, i32** %flip_map, align 8, !dbg !7126
  store i32 0, i32* %flip_map_len, align 4, !dbg !7128
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end16
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7129
  %type = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 3, !dbg !7131
  %15 = load i16, i16* %type, align 8, !dbg !7131
  %conv18 = sext i16 %15 to i32, !dbg !7129
  %cmp19 = icmp eq i32 %conv18, 1, !dbg !7132
  br i1 %cmp19, label %if.then21, label %if.else153, !dbg !7133

if.then21:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7134, metadata !DIExpression()), !dbg !7136
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7137
  %data = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 19, !dbg !7138
  %17 = load i8*, i8** %data, align 8, !dbg !7138
  %18 = bitcast i8* %17 to %struct.Mesh*, !dbg !7137
  store %struct.Mesh* %18, %struct.Mesh** %me, align 8, !dbg !7136
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7139, metadata !DIExpression()), !dbg !7140
  %19 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7141
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 20, !dbg !7142
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !7142
  store %struct.BMEditMesh* %20, %struct.BMEditMesh** %em, align 8, !dbg !7140
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7143
  %tobool22 = icmp ne %struct.BMEditMesh* %21, null, !dbg !7143
  br i1 %tobool22, label %if.then23, label %if.else62, !dbg !7145

if.then23:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !7146, metadata !DIExpression()), !dbg !7148
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7149
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %22, i32 0, i32 0, !dbg !7150
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7150
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %23, i32 0, i32 24, !dbg !7151
  %call24 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !7152
  store i32 %call24, i32* %cd_dvert_offset, align 4, !dbg !7148
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7153, metadata !DIExpression()), !dbg !7154
  %24 = load i32, i32* %cd_dvert_offset, align 4, !dbg !7155
  %cmp25 = icmp eq i32 %24, -1, !dbg !7157
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7158

if.then27:                                        ; preds = %if.then23
  br label %cleanup, !dbg !7159

if.end28:                                         ; preds = %if.then23
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7161
  %26 = load i8, i8* %use_topology.addr, align 1, !dbg !7162
  call void @EDBM_verts_mirror_cache_begin(%struct.BMEditMesh* %25, i32 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext %26), !dbg !7163
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7164
  %bm29 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !7164
  %28 = load %struct.BMesh*, %struct.BMesh** %bm29, align 8, !dbg !7164
  %call30 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %28, i8 zeroext 1, i8* null), !dbg !7164
  %29 = bitcast i8* %call30 to %struct.BMVert*, !dbg !7164
  store %struct.BMVert* %29, %struct.BMVert** %eve, align 8, !dbg !7164
  br label %for.cond, !dbg !7164

for.cond:                                         ; preds = %for.inc, %if.end28
  %30 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7166
  %tobool31 = icmp ne %struct.BMVert* %30, null, !dbg !7164
  br i1 %tobool31, label %for.body, label %for.end, !dbg !7164

for.body:                                         ; preds = %for.cond
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7168
  %32 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7171
  %call32 = call %struct.BMVert* @EDBM_verts_mirror_get(%struct.BMEditMesh* %31, %struct.BMVert* %32), !dbg !7172
  store %struct.BMVert* %call32, %struct.BMVert** %eve_mirr, align 8, !dbg !7173
  %tobool33 = icmp ne %struct.BMVert* %call32, null, !dbg !7173
  br i1 %tobool33, label %if.then34, label %if.else58, !dbg !7174

if.then34:                                        ; preds = %for.body
  %33 = load %struct.BMVert*, %struct.BMVert** %eve_mirr, align 8, !dbg !7175
  %34 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7178
  %cmp35 = icmp ne %struct.BMVert* %33, %34, !dbg !7179
  br i1 %cmp35, label %if.then37, label %if.end57, !dbg !7180

if.then37:                                        ; preds = %if.then34
  %35 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7181
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %35, i32 0, i32 0, !dbg !7181
  %call38 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !7181
  store i8 %call38, i8* %sel, align 1, !dbg !7183
  %36 = load %struct.BMVert*, %struct.BMVert** %eve_mirr, align 8, !dbg !7184
  %head39 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %36, i32 0, i32 0, !dbg !7184
  %call40 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head39, i8 zeroext 1), !dbg !7184
  store i8 %call40, i8* %sel_mirr, align 1, !dbg !7185
  %37 = load i8, i8* %sel, align 1, !dbg !7186
  %conv41 = zext i8 %37 to i32, !dbg !7186
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !7186
  br i1 %tobool42, label %land.lhs.true46, label %lor.lhs.false43, !dbg !7188

lor.lhs.false43:                                  ; preds = %if.then37
  %38 = load i8, i8* %sel_mirr, align 1, !dbg !7189
  %conv44 = zext i8 %38 to i32, !dbg !7189
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !7189
  br i1 %tobool45, label %land.lhs.true46, label %if.end56, !dbg !7190

land.lhs.true46:                                  ; preds = %lor.lhs.false43, %if.then37
  %39 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7191
  %40 = load %struct.BMVert*, %struct.BMVert** %eve_mirr, align 8, !dbg !7192
  %cmp47 = icmp ne %struct.BMVert* %39, %40, !dbg !7193
  br i1 %cmp47, label %if.then49, label %if.end56, !dbg !7194

if.then49:                                        ; preds = %land.lhs.true46
  %41 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7195
  %head50 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %41, i32 0, i32 0, !dbg !7195
  %data51 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head50, i32 0, i32 0, !dbg !7195
  %42 = load i8*, i8** %data51, align 8, !dbg !7195
  %43 = load i32, i32* %cd_dvert_offset, align 4, !dbg !7195
  %idx.ext = sext i32 %43 to i64, !dbg !7195
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 %idx.ext, !dbg !7195
  %44 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !7195
  store %struct.MDeformVert* %44, %struct.MDeformVert** %dvert, align 8, !dbg !7197
  %45 = load %struct.BMVert*, %struct.BMVert** %eve_mirr, align 8, !dbg !7198
  %head52 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %45, i32 0, i32 0, !dbg !7198
  %data53 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head52, i32 0, i32 0, !dbg !7198
  %46 = load i8*, i8** %data53, align 8, !dbg !7198
  %47 = load i32, i32* %cd_dvert_offset, align 4, !dbg !7198
  %idx.ext54 = sext i32 %47 to i64, !dbg !7198
  %add.ptr55 = getelementptr inbounds i8, i8* %46, i64 %idx.ext54, !dbg !7198
  %48 = bitcast i8* %add.ptr55 to %struct.MDeformVert*, !dbg !7198
  store %struct.MDeformVert* %48, %struct.MDeformVert** %dvert_mirr, align 8, !dbg !7199
  %49 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !7200
  %50 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr, align 8, !dbg !7200
  %51 = load i8, i8* %sel, align 1, !dbg !7200
  %52 = load i8, i8* %sel_mirr, align 1, !dbg !7200
  %53 = load i32*, i32** %flip_map, align 8, !dbg !7200
  %54 = load i32, i32* %flip_map_len, align 4, !dbg !7200
  %55 = load i8, i8* %mirror_weights.addr, align 1, !dbg !7200
  %56 = load i8, i8* %flip_vgroups.addr, align 1, !dbg !7200
  %57 = load i8, i8* %all_vgroups.addr, align 1, !dbg !7200
  %58 = load i32, i32* %def_nr, align 4, !dbg !7200
  call void @dvert_mirror_op(%struct.MDeformVert* %49, %struct.MDeformVert* %50, i8 zeroext %51, i8 zeroext %52, i32* %53, i32 %54, i8 zeroext %55, i8 zeroext %56, i8 zeroext %57, i32 %58), !dbg !7200
  %59 = load i32, i32* %totmirr, align 4, !dbg !7201
  %inc = add nsw i32 %59, 1, !dbg !7201
  store i32 %inc, i32* %totmirr, align 4, !dbg !7201
  br label %if.end56, !dbg !7202

if.end56:                                         ; preds = %if.then49, %land.lhs.true46, %lor.lhs.false43
  br label %if.end57, !dbg !7203

if.end57:                                         ; preds = %if.end56, %if.then34
  %60 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7204
  %61 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7205
  call void @EDBM_verts_mirror_cache_clear(%struct.BMEditMesh* %60, %struct.BMVert* %61), !dbg !7206
  %62 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7207
  %63 = load %struct.BMVert*, %struct.BMVert** %eve_mirr, align 8, !dbg !7208
  call void @EDBM_verts_mirror_cache_clear(%struct.BMEditMesh* %62, %struct.BMVert* %63), !dbg !7209
  br label %if.end60, !dbg !7210

if.else58:                                        ; preds = %for.body
  %64 = load i32, i32* %totfail, align 4, !dbg !7211
  %inc59 = add nsw i32 %64, 1, !dbg !7211
  store i32 %inc59, i32* %totfail, align 4, !dbg !7211
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.end57
  br label %for.inc, !dbg !7213

for.inc:                                          ; preds = %if.end60
  %call61 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7166
  %65 = bitcast i8* %call61 to %struct.BMVert*, !dbg !7166
  store %struct.BMVert* %65, %struct.BMVert** %eve, align 8, !dbg !7166
  br label %for.cond, !dbg !7166, !llvm.loop !7214

for.end:                                          ; preds = %for.cond
  %66 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7216
  call void @EDBM_verts_mirror_cache_end(%struct.BMEditMesh* %66), !dbg !7217
  br label %if.end152, !dbg !7218

if.else62:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !7219, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv_mirr, metadata !7222, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.declare(metadata i32* %vidx, metadata !7224, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.declare(metadata i32* %vidx_mirr, metadata !7226, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.declare(metadata i32* %use_vert_sel, metadata !7228, metadata !DIExpression()), !dbg !7229
  %67 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7230
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %67, i32 0, i32 46, !dbg !7231
  %68 = load i8, i8* %editflag, align 1, !dbg !7231
  %conv63 = zext i8 %68 to i32, !dbg !7230
  %and = and i32 %conv63, 32, !dbg !7232
  %cmp64 = icmp ne i32 %and, 0, !dbg !7233
  %conv65 = zext i1 %cmp64 to i32, !dbg !7233
  store i32 %conv65, i32* %use_vert_sel, align 4, !dbg !7229
  %69 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7234
  %dvert66 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %69, i32 0, i32 17, !dbg !7236
  %70 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert66, align 8, !dbg !7236
  %cmp67 = icmp eq %struct.MDeformVert* %70, null, !dbg !7237
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !7238

if.then69:                                        ; preds = %if.else62
  br label %cleanup, !dbg !7239

if.end70:                                         ; preds = %if.else62
  %71 = load i32, i32* %use_vert_sel, align 4, !dbg !7241
  %tobool71 = icmp ne i32 %71, 0, !dbg !7241
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !7243

if.then72:                                        ; preds = %if.end70
  store i8 1, i8* %sel_mirr, align 1, !dbg !7244
  store i8 1, i8* %sel, align 1, !dbg !7246
  br label %if.end73, !dbg !7247

if.end73:                                         ; preds = %if.then72, %if.end70
  store i32 0, i32* %vidx, align 4, !dbg !7248
  %72 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7250
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %72, i32 0, i32 15, !dbg !7251
  %73 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7251
  store %struct.MVert* %73, %struct.MVert** %mv, align 8, !dbg !7252
  br label %for.cond74, !dbg !7253

for.cond74:                                       ; preds = %for.inc81, %if.end73
  %74 = load i32, i32* %vidx, align 4, !dbg !7254
  %75 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7256
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %75, i32 0, i32 26, !dbg !7257
  %76 = load i32, i32* %totvert, align 8, !dbg !7257
  %cmp75 = icmp slt i32 %74, %76, !dbg !7258
  br i1 %cmp75, label %for.body77, label %for.end83, !dbg !7259

for.body77:                                       ; preds = %for.cond74
  %77 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7260
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %77, i32 0, i32 2, !dbg !7262
  %78 = load i8, i8* %flag, align 2, !dbg !7263
  %conv78 = zext i8 %78 to i32, !dbg !7263
  %and79 = and i32 %conv78, -5, !dbg !7263
  %conv80 = trunc i32 %and79 to i8, !dbg !7263
  store i8 %conv80, i8* %flag, align 2, !dbg !7263
  br label %for.inc81, !dbg !7264

for.inc81:                                        ; preds = %for.body77
  %79 = load i32, i32* %vidx, align 4, !dbg !7265
  %inc82 = add nsw i32 %79, 1, !dbg !7265
  store i32 %inc82, i32* %vidx, align 4, !dbg !7265
  %80 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7266
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %80, i32 1, !dbg !7266
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !7266
  br label %for.cond74, !dbg !7267, !llvm.loop !7268

for.end83:                                        ; preds = %for.cond74
  store i32 0, i32* %vidx, align 4, !dbg !7270
  %81 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7272
  %mvert84 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %81, i32 0, i32 15, !dbg !7273
  %82 = load %struct.MVert*, %struct.MVert** %mvert84, align 8, !dbg !7273
  store %struct.MVert* %82, %struct.MVert** %mv, align 8, !dbg !7274
  br label %for.cond85, !dbg !7275

for.cond85:                                       ; preds = %for.inc148, %for.end83
  %83 = load i32, i32* %vidx, align 4, !dbg !7276
  %84 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7278
  %totvert86 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %84, i32 0, i32 26, !dbg !7279
  %85 = load i32, i32* %totvert86, align 8, !dbg !7279
  %cmp87 = icmp slt i32 %83, %85, !dbg !7280
  br i1 %cmp87, label %for.body89, label %for.end151, !dbg !7281

for.body89:                                       ; preds = %for.cond85
  %86 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7282
  %flag90 = getelementptr inbounds %struct.MVert, %struct.MVert* %86, i32 0, i32 2, !dbg !7285
  %87 = load i8, i8* %flag90, align 2, !dbg !7285
  %conv91 = zext i8 %87 to i32, !dbg !7282
  %and92 = and i32 %conv91, 4, !dbg !7286
  %cmp93 = icmp eq i32 %and92, 0, !dbg !7287
  br i1 %cmp93, label %if.then95, label %if.end147, !dbg !7288

if.then95:                                        ; preds = %for.body89
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7289
  %89 = load i32, i32* %vidx, align 4, !dbg !7292
  %90 = load i8, i8* %use_topology.addr, align 1, !dbg !7293
  %call96 = call i32 @mesh_get_x_mirror_vert(%struct.Object* %88, i32 %89, i8 zeroext %90), !dbg !7294
  store i32 %call96, i32* %vidx_mirr, align 4, !dbg !7295
  %cmp97 = icmp ne i32 %call96, -1, !dbg !7296
  br i1 %cmp97, label %if.then99, label %if.else144, !dbg !7297

if.then99:                                        ; preds = %if.then95
  %91 = load i32, i32* %vidx, align 4, !dbg !7298
  %92 = load i32, i32* %vidx_mirr, align 4, !dbg !7301
  %cmp100 = icmp ne i32 %91, %92, !dbg !7302
  br i1 %cmp100, label %if.then102, label %if.end143, !dbg !7303

if.then102:                                       ; preds = %if.then99
  %93 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7304
  %mvert103 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %93, i32 0, i32 15, !dbg !7306
  %94 = load %struct.MVert*, %struct.MVert** %mvert103, align 8, !dbg !7306
  %95 = load i32, i32* %vidx_mirr, align 4, !dbg !7307
  %idxprom = sext i32 %95 to i64, !dbg !7304
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %94, i64 %idxprom, !dbg !7304
  store %struct.MVert* %arrayidx, %struct.MVert** %mv_mirr, align 8, !dbg !7308
  %96 = load %struct.MVert*, %struct.MVert** %mv_mirr, align 8, !dbg !7309
  %flag104 = getelementptr inbounds %struct.MVert, %struct.MVert* %96, i32 0, i32 2, !dbg !7311
  %97 = load i8, i8* %flag104, align 2, !dbg !7311
  %conv105 = zext i8 %97 to i32, !dbg !7309
  %and106 = and i32 %conv105, 4, !dbg !7312
  %cmp107 = icmp eq i32 %and106, 0, !dbg !7313
  br i1 %cmp107, label %if.then109, label %if.end142, !dbg !7314

if.then109:                                       ; preds = %if.then102
  %98 = load i32, i32* %use_vert_sel, align 4, !dbg !7315
  %tobool110 = icmp ne i32 %98, 0, !dbg !7315
  br i1 %tobool110, label %if.then111, label %if.end120, !dbg !7318

if.then111:                                       ; preds = %if.then109
  %99 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7319
  %flag112 = getelementptr inbounds %struct.MVert, %struct.MVert* %99, i32 0, i32 2, !dbg !7321
  %100 = load i8, i8* %flag112, align 2, !dbg !7321
  %conv113 = zext i8 %100 to i32, !dbg !7319
  %and114 = and i32 %conv113, 1, !dbg !7322
  %conv115 = trunc i32 %and114 to i8, !dbg !7319
  store i8 %conv115, i8* %sel, align 1, !dbg !7323
  %101 = load %struct.MVert*, %struct.MVert** %mv_mirr, align 8, !dbg !7324
  %flag116 = getelementptr inbounds %struct.MVert, %struct.MVert* %101, i32 0, i32 2, !dbg !7325
  %102 = load i8, i8* %flag116, align 2, !dbg !7325
  %conv117 = zext i8 %102 to i32, !dbg !7324
  %and118 = and i32 %conv117, 1, !dbg !7326
  %conv119 = trunc i32 %and118 to i8, !dbg !7324
  store i8 %conv119, i8* %sel_mirr, align 1, !dbg !7327
  br label %if.end120, !dbg !7328

if.end120:                                        ; preds = %if.then111, %if.then109
  %103 = load i8, i8* %sel, align 1, !dbg !7329
  %conv121 = zext i8 %103 to i32, !dbg !7329
  %tobool122 = icmp ne i32 %conv121, 0, !dbg !7329
  br i1 %tobool122, label %if.then126, label %lor.lhs.false123, !dbg !7331

lor.lhs.false123:                                 ; preds = %if.end120
  %104 = load i8, i8* %sel_mirr, align 1, !dbg !7332
  %conv124 = zext i8 %104 to i32, !dbg !7332
  %tobool125 = icmp ne i32 %conv124, 0, !dbg !7332
  br i1 %tobool125, label %if.then126, label %if.end134, !dbg !7333

if.then126:                                       ; preds = %lor.lhs.false123, %if.end120
  %105 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7334
  %dvert127 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %105, i32 0, i32 17, !dbg !7336
  %106 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert127, align 8, !dbg !7336
  %107 = load i32, i32* %vidx, align 4, !dbg !7337
  %idxprom128 = sext i32 %107 to i64, !dbg !7334
  %arrayidx129 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %106, i64 %idxprom128, !dbg !7334
  store %struct.MDeformVert* %arrayidx129, %struct.MDeformVert** %dvert, align 8, !dbg !7338
  %108 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7339
  %dvert130 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %108, i32 0, i32 17, !dbg !7340
  %109 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert130, align 8, !dbg !7340
  %110 = load i32, i32* %vidx_mirr, align 4, !dbg !7341
  %idxprom131 = sext i32 %110 to i64, !dbg !7339
  %arrayidx132 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %109, i64 %idxprom131, !dbg !7339
  store %struct.MDeformVert* %arrayidx132, %struct.MDeformVert** %dvert_mirr, align 8, !dbg !7342
  %111 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !7343
  %112 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr, align 8, !dbg !7343
  %113 = load i8, i8* %sel, align 1, !dbg !7343
  %114 = load i8, i8* %sel_mirr, align 1, !dbg !7343
  %115 = load i32*, i32** %flip_map, align 8, !dbg !7343
  %116 = load i32, i32* %flip_map_len, align 4, !dbg !7343
  %117 = load i8, i8* %mirror_weights.addr, align 1, !dbg !7343
  %118 = load i8, i8* %flip_vgroups.addr, align 1, !dbg !7343
  %119 = load i8, i8* %all_vgroups.addr, align 1, !dbg !7343
  %120 = load i32, i32* %def_nr, align 4, !dbg !7343
  call void @dvert_mirror_op(%struct.MDeformVert* %111, %struct.MDeformVert* %112, i8 zeroext %113, i8 zeroext %114, i32* %115, i32 %116, i8 zeroext %117, i8 zeroext %118, i8 zeroext %119, i32 %120), !dbg !7343
  %121 = load i32, i32* %totmirr, align 4, !dbg !7344
  %inc133 = add nsw i32 %121, 1, !dbg !7344
  store i32 %inc133, i32* %totmirr, align 4, !dbg !7344
  br label %if.end134, !dbg !7345

if.end134:                                        ; preds = %if.then126, %lor.lhs.false123
  %122 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7346
  %flag135 = getelementptr inbounds %struct.MVert, %struct.MVert* %122, i32 0, i32 2, !dbg !7347
  %123 = load i8, i8* %flag135, align 2, !dbg !7348
  %conv136 = zext i8 %123 to i32, !dbg !7348
  %or = or i32 %conv136, 4, !dbg !7348
  %conv137 = trunc i32 %or to i8, !dbg !7348
  store i8 %conv137, i8* %flag135, align 2, !dbg !7348
  %124 = load %struct.MVert*, %struct.MVert** %mv_mirr, align 8, !dbg !7349
  %flag138 = getelementptr inbounds %struct.MVert, %struct.MVert* %124, i32 0, i32 2, !dbg !7350
  %125 = load i8, i8* %flag138, align 2, !dbg !7351
  %conv139 = zext i8 %125 to i32, !dbg !7351
  %or140 = or i32 %conv139, 4, !dbg !7351
  %conv141 = trunc i32 %or140 to i8, !dbg !7351
  store i8 %conv141, i8* %flag138, align 2, !dbg !7351
  br label %if.end142, !dbg !7352

if.end142:                                        ; preds = %if.end134, %if.then102
  br label %if.end143, !dbg !7353

if.end143:                                        ; preds = %if.end142, %if.then99
  br label %if.end146, !dbg !7354

if.else144:                                       ; preds = %if.then95
  %126 = load i32, i32* %totfail, align 4, !dbg !7355
  %inc145 = add nsw i32 %126, 1, !dbg !7355
  store i32 %inc145, i32* %totfail, align 4, !dbg !7355
  br label %if.end146

if.end146:                                        ; preds = %if.else144, %if.end143
  br label %if.end147, !dbg !7357

if.end147:                                        ; preds = %if.end146, %for.body89
  br label %for.inc148, !dbg !7358

for.inc148:                                       ; preds = %if.end147
  %127 = load i32, i32* %vidx, align 4, !dbg !7359
  %inc149 = add nsw i32 %127, 1, !dbg !7359
  store i32 %inc149, i32* %vidx, align 4, !dbg !7359
  %128 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !7360
  %incdec.ptr150 = getelementptr inbounds %struct.MVert, %struct.MVert* %128, i32 1, !dbg !7360
  store %struct.MVert* %incdec.ptr150, %struct.MVert** %mv, align 8, !dbg !7360
  br label %for.cond85, !dbg !7361, !llvm.loop !7362

for.end151:                                       ; preds = %for.cond85
  br label %if.end152

if.end152:                                        ; preds = %for.end151, %for.end
  br label %if.end231, !dbg !7364

if.else153:                                       ; preds = %if.end17
  %129 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7365
  %type154 = getelementptr inbounds %struct.Object, %struct.Object* %129, i32 0, i32 3, !dbg !7367
  %130 = load i16, i16* %type154, align 8, !dbg !7367
  %conv155 = sext i16 %130 to i32, !dbg !7365
  %cmp156 = icmp eq i32 %conv155, 22, !dbg !7368
  br i1 %cmp156, label %if.then158, label %if.end230, !dbg !7369

if.then158:                                       ; preds = %if.else153
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !7370, metadata !DIExpression()), !dbg !7372
  %131 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7373
  %call159 = call %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %131), !dbg !7374
  store %struct.Lattice* %call159, %struct.Lattice** %lt, align 8, !dbg !7372
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !7375, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !7377, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.declare(metadata i32* %u, metadata !7379, metadata !DIExpression()), !dbg !7380
  call void @llvm.dbg.declare(metadata i32* %v, metadata !7381, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7383, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.declare(metadata i32* %pntsu_half, metadata !7385, metadata !DIExpression()), !dbg !7386
  %132 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7387
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %132, i32 0, i32 2, !dbg !7389
  %133 = load i16, i16* %pntsu, align 8, !dbg !7389
  %conv160 = sext i16 %133 to i32, !dbg !7387
  %cmp161 = icmp eq i32 %conv160, 1, !dbg !7390
  br i1 %cmp161, label %if.then167, label %lor.lhs.false163, !dbg !7391

lor.lhs.false163:                                 ; preds = %if.then158
  %134 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7392
  %dvert164 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %134, i32 0, i32 24, !dbg !7393
  %135 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert164, align 8, !dbg !7393
  %cmp165 = icmp eq %struct.MDeformVert* %135, null, !dbg !7394
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !7395

if.then167:                                       ; preds = %lor.lhs.false163, %if.then158
  br label %cleanup, !dbg !7396

if.end168:                                        ; preds = %lor.lhs.false163
  %136 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7398
  %pntsu169 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %136, i32 0, i32 2, !dbg !7399
  %137 = load i16, i16* %pntsu169, align 8, !dbg !7399
  %conv170 = sext i16 %137 to i32, !dbg !7398
  %div = sdiv i32 %conv170, 2, !dbg !7400
  store i32 %div, i32* %pntsu_half, align 4, !dbg !7401
  store i32 0, i32* %w, align 4, !dbg !7402
  br label %for.cond171, !dbg !7404

for.cond171:                                      ; preds = %for.inc227, %if.end168
  %138 = load i32, i32* %w, align 4, !dbg !7405
  %139 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7407
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %139, i32 0, i32 4, !dbg !7408
  %140 = load i16, i16* %pntsw, align 4, !dbg !7408
  %conv172 = sext i16 %140 to i32, !dbg !7407
  %cmp173 = icmp slt i32 %138, %conv172, !dbg !7409
  br i1 %cmp173, label %for.body175, label %for.end229, !dbg !7410

for.body175:                                      ; preds = %for.cond171
  store i32 0, i32* %v, align 4, !dbg !7411
  br label %for.cond176, !dbg !7414

for.cond176:                                      ; preds = %for.inc224, %for.body175
  %141 = load i32, i32* %v, align 4, !dbg !7415
  %142 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7417
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %142, i32 0, i32 3, !dbg !7418
  %143 = load i16, i16* %pntsv, align 2, !dbg !7418
  %conv177 = sext i16 %143 to i32, !dbg !7417
  %cmp178 = icmp slt i32 %141, %conv177, !dbg !7419
  br i1 %cmp178, label %for.body180, label %for.end226, !dbg !7420

for.body180:                                      ; preds = %for.cond176
  store i32 0, i32* %u, align 4, !dbg !7421
  br label %for.cond181, !dbg !7424

for.cond181:                                      ; preds = %for.inc221, %for.body180
  %144 = load i32, i32* %u, align 4, !dbg !7425
  %145 = load i32, i32* %pntsu_half, align 4, !dbg !7427
  %cmp182 = icmp slt i32 %144, %145, !dbg !7428
  br i1 %cmp182, label %for.body184, label %for.end223, !dbg !7429

for.body184:                                      ; preds = %for.cond181
  call void @llvm.dbg.declare(metadata i32* %u_inv, metadata !7430, metadata !DIExpression()), !dbg !7432
  %146 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7433
  %pntsu185 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %146, i32 0, i32 2, !dbg !7434
  %147 = load i16, i16* %pntsu185, align 8, !dbg !7434
  %conv186 = sext i16 %147 to i32, !dbg !7433
  %sub187 = sub nsw i32 %conv186, 1, !dbg !7435
  %148 = load i32, i32* %u, align 4, !dbg !7436
  %sub188 = sub nsw i32 %sub187, %148, !dbg !7437
  store i32 %sub188, i32* %u_inv, align 4, !dbg !7432
  %149 = load i32, i32* %u, align 4, !dbg !7438
  %150 = load i32, i32* %u_inv, align 4, !dbg !7440
  %cmp189 = icmp ne i32 %149, %150, !dbg !7441
  br i1 %cmp189, label %if.then191, label %if.end220, !dbg !7442

if.then191:                                       ; preds = %for.body184
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !7443, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp_mirr, metadata !7446, metadata !DIExpression()), !dbg !7447
  %151 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7448
  %152 = load i32, i32* %u, align 4, !dbg !7449
  %153 = load i32, i32* %v, align 4, !dbg !7450
  %154 = load i32, i32* %w, align 4, !dbg !7451
  %call192 = call i32 @BKE_lattice_index_from_uvw(%struct.Lattice* %151, i32 %152, i32 %153, i32 %154), !dbg !7452
  store i32 %call192, i32* %i1, align 4, !dbg !7453
  %155 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7454
  %156 = load i32, i32* %u_inv, align 4, !dbg !7455
  %157 = load i32, i32* %v, align 4, !dbg !7456
  %158 = load i32, i32* %w, align 4, !dbg !7457
  %call193 = call i32 @BKE_lattice_index_from_uvw(%struct.Lattice* %155, i32 %156, i32 %157, i32 %158), !dbg !7458
  store i32 %call193, i32* %i2, align 4, !dbg !7459
  %159 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7460
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %159, i32 0, i32 21, !dbg !7461
  %160 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !7461
  %161 = load i32, i32* %i1, align 4, !dbg !7462
  %idxprom194 = sext i32 %161 to i64, !dbg !7460
  %arrayidx195 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %160, i64 %idxprom194, !dbg !7460
  store %struct.BPoint* %arrayidx195, %struct.BPoint** %bp, align 8, !dbg !7463
  %162 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7464
  %def196 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %162, i32 0, i32 21, !dbg !7465
  %163 = load %struct.BPoint*, %struct.BPoint** %def196, align 8, !dbg !7465
  %164 = load i32, i32* %i2, align 4, !dbg !7466
  %idxprom197 = sext i32 %164 to i64, !dbg !7464
  %arrayidx198 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %163, i64 %idxprom197, !dbg !7464
  store %struct.BPoint* %arrayidx198, %struct.BPoint** %bp_mirr, align 8, !dbg !7467
  %165 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7468
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %165, i32 0, i32 3, !dbg !7469
  %166 = load i16, i16* %f1, align 4, !dbg !7469
  %conv199 = sext i16 %166 to i32, !dbg !7468
  %and200 = and i32 %conv199, 1, !dbg !7470
  %conv201 = trunc i32 %and200 to i8, !dbg !7468
  store i8 %conv201, i8* %sel, align 1, !dbg !7471
  %167 = load %struct.BPoint*, %struct.BPoint** %bp_mirr, align 8, !dbg !7472
  %f1202 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %167, i32 0, i32 3, !dbg !7473
  %168 = load i16, i16* %f1202, align 4, !dbg !7473
  %conv203 = sext i16 %168 to i32, !dbg !7472
  %and204 = and i32 %conv203, 1, !dbg !7474
  %conv205 = trunc i32 %and204 to i8, !dbg !7472
  store i8 %conv205, i8* %sel_mirr, align 1, !dbg !7475
  %169 = load i8, i8* %sel, align 1, !dbg !7476
  %conv206 = zext i8 %169 to i32, !dbg !7476
  %tobool207 = icmp ne i32 %conv206, 0, !dbg !7476
  br i1 %tobool207, label %if.then211, label %lor.lhs.false208, !dbg !7478

lor.lhs.false208:                                 ; preds = %if.then191
  %170 = load i8, i8* %sel_mirr, align 1, !dbg !7479
  %conv209 = zext i8 %170 to i32, !dbg !7479
  %tobool210 = icmp ne i32 %conv209, 0, !dbg !7479
  br i1 %tobool210, label %if.then211, label %if.end219, !dbg !7480

if.then211:                                       ; preds = %lor.lhs.false208, %if.then191
  %171 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7481
  %dvert212 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %171, i32 0, i32 24, !dbg !7483
  %172 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert212, align 8, !dbg !7483
  %173 = load i32, i32* %i1, align 4, !dbg !7484
  %idxprom213 = sext i32 %173 to i64, !dbg !7481
  %arrayidx214 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %172, i64 %idxprom213, !dbg !7481
  store %struct.MDeformVert* %arrayidx214, %struct.MDeformVert** %dvert, align 8, !dbg !7485
  %174 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7486
  %dvert215 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %174, i32 0, i32 24, !dbg !7487
  %175 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert215, align 8, !dbg !7487
  %176 = load i32, i32* %i2, align 4, !dbg !7488
  %idxprom216 = sext i32 %176 to i64, !dbg !7486
  %arrayidx217 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %175, i64 %idxprom216, !dbg !7486
  store %struct.MDeformVert* %arrayidx217, %struct.MDeformVert** %dvert_mirr, align 8, !dbg !7489
  %177 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !7490
  %178 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr, align 8, !dbg !7490
  %179 = load i8, i8* %sel, align 1, !dbg !7490
  %180 = load i8, i8* %sel_mirr, align 1, !dbg !7490
  %181 = load i32*, i32** %flip_map, align 8, !dbg !7490
  %182 = load i32, i32* %flip_map_len, align 4, !dbg !7490
  %183 = load i8, i8* %mirror_weights.addr, align 1, !dbg !7490
  %184 = load i8, i8* %flip_vgroups.addr, align 1, !dbg !7490
  %185 = load i8, i8* %all_vgroups.addr, align 1, !dbg !7490
  %186 = load i32, i32* %def_nr, align 4, !dbg !7490
  call void @dvert_mirror_op(%struct.MDeformVert* %177, %struct.MDeformVert* %178, i8 zeroext %179, i8 zeroext %180, i32* %181, i32 %182, i8 zeroext %183, i8 zeroext %184, i8 zeroext %185, i32 %186), !dbg !7490
  %187 = load i32, i32* %totmirr, align 4, !dbg !7491
  %inc218 = add nsw i32 %187, 1, !dbg !7491
  store i32 %inc218, i32* %totmirr, align 4, !dbg !7491
  br label %if.end219, !dbg !7492

if.end219:                                        ; preds = %if.then211, %lor.lhs.false208
  br label %if.end220, !dbg !7493

if.end220:                                        ; preds = %if.end219, %for.body184
  br label %for.inc221, !dbg !7494

for.inc221:                                       ; preds = %if.end220
  %188 = load i32, i32* %u, align 4, !dbg !7495
  %inc222 = add nsw i32 %188, 1, !dbg !7495
  store i32 %inc222, i32* %u, align 4, !dbg !7495
  br label %for.cond181, !dbg !7496, !llvm.loop !7497

for.end223:                                       ; preds = %for.cond181
  br label %for.inc224, !dbg !7499

for.inc224:                                       ; preds = %for.end223
  %189 = load i32, i32* %v, align 4, !dbg !7500
  %inc225 = add nsw i32 %189, 1, !dbg !7500
  store i32 %inc225, i32* %v, align 4, !dbg !7500
  br label %for.cond176, !dbg !7501, !llvm.loop !7502

for.end226:                                       ; preds = %for.cond176
  br label %for.inc227, !dbg !7504

for.inc227:                                       ; preds = %for.end226
  %190 = load i32, i32* %w, align 4, !dbg !7505
  %inc228 = add nsw i32 %190, 1, !dbg !7505
  store i32 %inc228, i32* %w, align 4, !dbg !7505
  br label %for.cond171, !dbg !7506, !llvm.loop !7507

for.end229:                                       ; preds = %for.cond171
  br label %if.end230, !dbg !7509

if.end230:                                        ; preds = %for.end229, %if.else153
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.end152
  br label %cleanup, !dbg !7510

cleanup:                                          ; preds = %if.end231, %if.then167, %if.then69, %if.then27
  call void @llvm.dbg.label(metadata !7511), !dbg !7512
  %191 = load i32, i32* %totmirr, align 4, !dbg !7513
  %192 = load i32*, i32** %r_totmirr.addr, align 8, !dbg !7514
  store i32 %191, i32* %192, align 4, !dbg !7515
  %193 = load i32, i32* %totfail, align 4, !dbg !7516
  %194 = load i32*, i32** %r_totfail.addr, align 8, !dbg !7517
  store i32 %193, i32* %194, align 4, !dbg !7518
  %195 = load i32*, i32** %flip_map, align 8, !dbg !7519
  %tobool232 = icmp ne i32* %195, null, !dbg !7519
  br i1 %tobool232, label %if.then233, label %if.end234, !dbg !7521

if.then233:                                       ; preds = %cleanup
  %196 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7522
  %197 = load i32*, i32** %flip_map, align 8, !dbg !7523
  %198 = bitcast i32* %197 to i8*, !dbg !7523
  call void %196(i8* %198), !dbg !7522
  br label %if.end234, !dbg !7522

if.end234:                                        ; preds = %if.then, %if.then15, %if.then233, %cleanup
  ret void, !dbg !7524
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local i32* @defgroup_flip_map(%struct.Object*, i32*, i8 zeroext) #2

declare dso_local i32* @defgroup_flip_map_single(%struct.Object*, i32*, i8 zeroext, i32) #2

declare dso_local void @EDBM_verts_mirror_cache_begin(%struct.BMEditMesh*, i32, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local %struct.BMVert* @EDBM_verts_mirror_get(%struct.BMEditMesh*, %struct.BMVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dvert_mirror_op(%struct.MDeformVert* %dvert, %struct.MDeformVert* %dvert_mirr, i8 zeroext %sel, i8 zeroext %sel_mirr, i32* %flip_map, i32 %flip_map_len, i8 zeroext %mirror_weights, i8 zeroext %flip_vgroups, i8 zeroext %all_vgroups, i32 %act_vgroup) #0 !dbg !7525 {
entry:
  %dvert.addr = alloca %struct.MDeformVert*, align 8
  %dvert_mirr.addr = alloca %struct.MDeformVert*, align 8
  %sel.addr = alloca i8, align 1
  %sel_mirr.addr = alloca i8, align 1
  %flip_map.addr = alloca i32*, align 8
  %flip_map_len.addr = alloca i32, align 4
  %mirror_weights.addr = alloca i8, align 1
  %flip_vgroups.addr = alloca i8, align 1
  %all_vgroups.addr = alloca i8, align 1
  %act_vgroup.addr = alloca i32, align 4
  %sw_ap = alloca %struct.MDeformVert, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %dw_mirr = alloca %struct.MDeformWeight*, align 8
  %sw_ap19 = alloca float, align 4
  %sw_ap32 = alloca %struct.MDeformVert*, align 8
  store %struct.MDeformVert* %dvert, %struct.MDeformVert** %dvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert.addr, metadata !7529, metadata !DIExpression()), !dbg !7530
  store %struct.MDeformVert* %dvert_mirr, %struct.MDeformVert** %dvert_mirr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_mirr.addr, metadata !7531, metadata !DIExpression()), !dbg !7532
  store i8 %sel, i8* %sel.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel.addr, metadata !7533, metadata !DIExpression()), !dbg !7534
  store i8 %sel_mirr, i8* %sel_mirr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sel_mirr.addr, metadata !7535, metadata !DIExpression()), !dbg !7536
  store i32* %flip_map, i32** %flip_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %flip_map.addr, metadata !7537, metadata !DIExpression()), !dbg !7538
  store i32 %flip_map_len, i32* %flip_map_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flip_map_len.addr, metadata !7539, metadata !DIExpression()), !dbg !7540
  store i8 %mirror_weights, i8* %mirror_weights.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mirror_weights.addr, metadata !7541, metadata !DIExpression()), !dbg !7542
  store i8 %flip_vgroups, i8* %flip_vgroups.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flip_vgroups.addr, metadata !7543, metadata !DIExpression()), !dbg !7544
  store i8 %all_vgroups, i8* %all_vgroups.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all_vgroups.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  store i32 %act_vgroup, i32* %act_vgroup.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %act_vgroup.addr, metadata !7547, metadata !DIExpression()), !dbg !7548
  %0 = load i8, i8* %sel_mirr.addr, align 1, !dbg !7549
  %conv = zext i8 %0 to i32, !dbg !7549
  %tobool = icmp ne i32 %conv, 0, !dbg !7549
  br i1 %tobool, label %land.lhs.true, label %if.else29, !dbg !7551

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* %sel.addr, align 1, !dbg !7552
  %conv1 = zext i8 %1 to i32, !dbg !7552
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !7552
  br i1 %tobool2, label %if.then, label %if.else29, !dbg !7553

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8, i8* %mirror_weights.addr, align 1, !dbg !7554
  %tobool3 = icmp ne i8 %2, 0, !dbg !7554
  br i1 %tobool3, label %if.then4, label %if.end25, !dbg !7557

if.then4:                                         ; preds = %if.then
  %3 = load i8, i8* %all_vgroups.addr, align 1, !dbg !7558
  %tobool5 = icmp ne i8 %3, 0, !dbg !7558
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !7561

if.then6:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.MDeformVert* %sw_ap, metadata !7562, metadata !DIExpression()), !dbg !7565
  %4 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7565
  %5 = bitcast %struct.MDeformVert* %sw_ap to i8*, !dbg !7565
  %6 = bitcast %struct.MDeformVert* %4 to i8*, !dbg !7565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !7565
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7565
  %8 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7565
  %9 = bitcast %struct.MDeformVert* %7 to i8*, !dbg !7565
  %10 = bitcast %struct.MDeformVert* %8 to i8*, !dbg !7565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false), !dbg !7565
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7565
  %12 = bitcast %struct.MDeformVert* %11 to i8*, !dbg !7565
  %13 = bitcast %struct.MDeformVert* %sw_ap to i8*, !dbg !7565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false), !dbg !7565
  br label %if.end24, !dbg !7566

if.else:                                          ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !7567, metadata !DIExpression()), !dbg !7569
  %14 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7570
  %15 = load i32, i32* %act_vgroup.addr, align 4, !dbg !7571
  %call = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %14, i32 %15), !dbg !7572
  store %struct.MDeformWeight* %call, %struct.MDeformWeight** %dw, align 8, !dbg !7569
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_mirr, metadata !7573, metadata !DIExpression()), !dbg !7574
  %16 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7575
  %17 = load i32, i32* %act_vgroup.addr, align 4, !dbg !7576
  %call7 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %16, i32 %17), !dbg !7577
  store %struct.MDeformWeight* %call7, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !7574
  %18 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !7578
  %tobool8 = icmp ne %struct.MDeformWeight* %18, null, !dbg !7578
  br i1 %tobool8, label %if.then10, label %lor.lhs.false, !dbg !7580

lor.lhs.false:                                    ; preds = %if.else
  %19 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !7581
  %tobool9 = icmp ne %struct.MDeformWeight* %19, null, !dbg !7581
  br i1 %tobool9, label %if.then10, label %if.end23, !dbg !7582

if.then10:                                        ; preds = %lor.lhs.false, %if.else
  %20 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !7583
  %cmp = icmp eq %struct.MDeformWeight* %20, null, !dbg !7586
  br i1 %cmp, label %if.then12, label %if.end, !dbg !7587

if.then12:                                        ; preds = %if.then10
  %21 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7588
  %22 = load i32, i32* %act_vgroup.addr, align 4, !dbg !7589
  %call13 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %21, i32 %22), !dbg !7590
  store %struct.MDeformWeight* %call13, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !7591
  br label %if.end, !dbg !7592

if.end:                                           ; preds = %if.then12, %if.then10
  %23 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !7593
  %cmp14 = icmp eq %struct.MDeformWeight* %23, null, !dbg !7595
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !7596

if.then16:                                        ; preds = %if.end
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7597
  %25 = load i32, i32* %act_vgroup.addr, align 4, !dbg !7598
  %call17 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %24, i32 %25), !dbg !7599
  store %struct.MDeformWeight* %call17, %struct.MDeformWeight** %dw, align 8, !dbg !7600
  br label %if.end18, !dbg !7601

if.end18:                                         ; preds = %if.then16, %if.end
  call void @llvm.dbg.declare(metadata float* %sw_ap19, metadata !7602, metadata !DIExpression()), !dbg !7604
  %26 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !7604
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %26, i32 0, i32 1, !dbg !7604
  %27 = load float, float* %weight, align 4, !dbg !7604
  store float %27, float* %sw_ap19, align 4, !dbg !7604
  %28 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !7604
  %weight20 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %28, i32 0, i32 1, !dbg !7604
  %29 = load float, float* %weight20, align 4, !dbg !7604
  %30 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !7604
  %weight21 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %30, i32 0, i32 1, !dbg !7604
  store float %29, float* %weight21, align 4, !dbg !7604
  %31 = load float, float* %sw_ap19, align 4, !dbg !7604
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_mirr, align 8, !dbg !7604
  %weight22 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %32, i32 0, i32 1, !dbg !7604
  store float %31, float* %weight22, align 4, !dbg !7604
  br label %if.end23, !dbg !7605

if.end23:                                         ; preds = %if.end18, %lor.lhs.false
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then6
  br label %if.end25, !dbg !7606

if.end25:                                         ; preds = %if.end24, %if.then
  %33 = load i8, i8* %flip_vgroups.addr, align 1, !dbg !7607
  %tobool26 = icmp ne i8 %33, 0, !dbg !7607
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7609

if.then27:                                        ; preds = %if.end25
  %34 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7610
  %35 = load i32*, i32** %flip_map.addr, align 8, !dbg !7612
  %36 = load i32, i32* %flip_map_len.addr, align 4, !dbg !7613
  call void @defvert_flip(%struct.MDeformVert* %34, i32* %35, i32 %36), !dbg !7614
  %37 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7615
  %38 = load i32*, i32** %flip_map.addr, align 8, !dbg !7616
  %39 = load i32, i32* %flip_map_len.addr, align 4, !dbg !7617
  call void @defvert_flip(%struct.MDeformVert* %37, i32* %38, i32 %39), !dbg !7618
  br label %if.end28, !dbg !7619

if.end28:                                         ; preds = %if.then27, %if.end25
  br label %if.end44, !dbg !7620

if.else29:                                        ; preds = %land.lhs.true, %entry
  %40 = load i8, i8* %sel_mirr.addr, align 1, !dbg !7621
  %tobool30 = icmp ne i8 %40, 0, !dbg !7621
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !7624

if.then31:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %sw_ap32, metadata !7625, metadata !DIExpression()), !dbg !7628
  %41 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7628
  store %struct.MDeformVert* %41, %struct.MDeformVert** %sw_ap32, align 8, !dbg !7628
  %42 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7628
  store %struct.MDeformVert* %42, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7628
  %43 = load %struct.MDeformVert*, %struct.MDeformVert** %sw_ap32, align 8, !dbg !7628
  store %struct.MDeformVert* %43, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7628
  br label %if.end33, !dbg !7629

if.end33:                                         ; preds = %if.then31, %if.else29
  %44 = load i8, i8* %mirror_weights.addr, align 1, !dbg !7630
  %tobool34 = icmp ne i8 %44, 0, !dbg !7630
  br i1 %tobool34, label %if.then35, label %if.end40, !dbg !7632

if.then35:                                        ; preds = %if.end33
  %45 = load i8, i8* %all_vgroups.addr, align 1, !dbg !7633
  %tobool36 = icmp ne i8 %45, 0, !dbg !7633
  br i1 %tobool36, label %if.then37, label %if.else38, !dbg !7636

if.then37:                                        ; preds = %if.then35
  %46 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7637
  %47 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7639
  call void @defvert_copy(%struct.MDeformVert* %46, %struct.MDeformVert* %47), !dbg !7640
  br label %if.end39, !dbg !7641

if.else38:                                        ; preds = %if.then35
  %48 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7642
  %49 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_mirr.addr, align 8, !dbg !7644
  %50 = load i32, i32* %act_vgroup.addr, align 4, !dbg !7645
  call void @defvert_copy_index(%struct.MDeformVert* %48, %struct.MDeformVert* %49, i32 %50), !dbg !7646
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.then37
  br label %if.end40, !dbg !7647

if.end40:                                         ; preds = %if.end39, %if.end33
  %51 = load i8, i8* %flip_vgroups.addr, align 1, !dbg !7648
  %tobool41 = icmp ne i8 %51, 0, !dbg !7648
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !7650

if.then42:                                        ; preds = %if.end40
  %52 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert.addr, align 8, !dbg !7651
  %53 = load i32*, i32** %flip_map.addr, align 8, !dbg !7653
  %54 = load i32, i32* %flip_map_len.addr, align 4, !dbg !7654
  call void @defvert_flip(%struct.MDeformVert* %52, i32* %53, i32 %54), !dbg !7655
  br label %if.end43, !dbg !7656

if.end43:                                         ; preds = %if.then42, %if.end40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end28
  ret void, !dbg !7657
}

declare dso_local void @EDBM_verts_mirror_cache_clear(%struct.BMEditMesh*, %struct.BMVert*) #2

declare dso_local void @EDBM_verts_mirror_cache_end(%struct.BMEditMesh*) #2

declare dso_local i32 @mesh_get_x_mirror_vert(%struct.Object*, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %ob) #0 !dbg !7658 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %lt = alloca %struct.Lattice*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7661, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !7663, metadata !DIExpression()), !dbg !7664
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7665
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !7666
  %1 = load i8*, i8** %data, align 8, !dbg !7666
  %2 = bitcast i8* %1 to %struct.Lattice*, !dbg !7665
  store %struct.Lattice* %2, %struct.Lattice** %lt, align 8, !dbg !7664
  %3 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7667
  %editlatt = getelementptr inbounds %struct.Lattice, %struct.Lattice* %3, i32 0, i32 26, !dbg !7668
  %4 = load %struct.EditLatt*, %struct.EditLatt** %editlatt, align 8, !dbg !7668
  %tobool = icmp ne %struct.EditLatt* %4, null, !dbg !7669
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7669

cond.true:                                        ; preds = %entry
  %5 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7670
  %editlatt1 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %5, i32 0, i32 26, !dbg !7671
  %6 = load %struct.EditLatt*, %struct.EditLatt** %editlatt1, align 8, !dbg !7671
  %latt = getelementptr inbounds %struct.EditLatt, %struct.EditLatt* %6, i32 0, i32 0, !dbg !7672
  %7 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !7672
  br label %cond.end, !dbg !7669

cond.false:                                       ; preds = %entry
  %8 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !7673
  br label %cond.end, !dbg !7669

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Lattice* [ %7, %cond.true ], [ %8, %cond.false ], !dbg !7669
  ret %struct.Lattice* %cond, !dbg !7674
}

declare dso_local i32 @BKE_lattice_index_from_uvw(%struct.Lattice*, i32, i32, i32) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_add(%struct.wmOperatorType* %ot) #0 !dbg !7675 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7678
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7679
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %name, align 8, !dbg !7680
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7681
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7682
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8** %idname, align 8, !dbg !7683
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7684
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7685
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8** %description, align 8, !dbg !7686
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7687
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !7688
  store i32 (%struct.bContext*)* @vertex_group_supported_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !7689
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7690
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !7691
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_add_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7692
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7693
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7694
  store i16 3, i16* %flag, align 8, !dbg !7695
  ret void, !dbg !7696
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_supported_poll(%struct.bContext* %C) #0 !dbg !7697 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %data = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7703, metadata !DIExpression()), !dbg !7704
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7705
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !7706
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !7704
  call void @llvm.dbg.declare(metadata %struct.ID** %data, metadata !7707, metadata !DIExpression()), !dbg !7708
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7709
  %tobool = icmp ne %struct.Object* %1, null, !dbg !7710
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7710

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7711
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !7712
  %3 = load i8*, i8** %data1, align 8, !dbg !7712
  br label %cond.end, !dbg !7710

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7710

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !7710
  %4 = bitcast i8* %cond to %struct.ID*, !dbg !7710
  store %struct.ID* %4, %struct.ID** %data, align 8, !dbg !7708
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7713
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !7713
  br i1 %tobool2, label %land.lhs.true, label %land.end, !dbg !7714

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7715
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !7716
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !7717
  %7 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7717
  %tobool3 = icmp ne %struct.Library* %7, null, !dbg !7715
  br i1 %tobool3, label %land.end, label %land.lhs.true4, !dbg !7718

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7719
  %type = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !7719
  %9 = load i16, i16* %type, align 8, !dbg !7719
  %conv = sext i16 %9 to i32, !dbg !7719
  %cmp = icmp eq i32 %conv, 1, !dbg !7719
  br i1 %cmp, label %land.lhs.true10, label %lor.lhs.false, !dbg !7719

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7719
  %type6 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !7719
  %11 = load i16, i16* %type6, align 8, !dbg !7719
  %conv7 = sext i16 %11 to i32, !dbg !7719
  %cmp8 = icmp eq i32 %conv7, 22, !dbg !7719
  br i1 %cmp8, label %land.lhs.true10, label %land.end, !dbg !7720

land.lhs.true10:                                  ; preds = %lor.lhs.false, %land.lhs.true4
  %12 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !7721
  %tobool11 = icmp ne %struct.ID* %12, null, !dbg !7721
  br i1 %tobool11, label %land.rhs, label %land.end, !dbg !7722

land.rhs:                                         ; preds = %land.lhs.true10
  %13 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !7723
  %lib12 = getelementptr inbounds %struct.ID, %struct.ID* %13, i32 0, i32 3, !dbg !7724
  %14 = load %struct.Library*, %struct.Library** %lib12, align 8, !dbg !7724
  %tobool13 = icmp ne %struct.Library* %14, null, !dbg !7725
  %lnot = xor i1 %tobool13, true, !dbg !7725
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true10, %lor.lhs.false, %land.lhs.true, %cond.end
  %15 = phi i1 [ false, %land.lhs.true10 ], [ false, %lor.lhs.false ], [ false, %land.lhs.true ], [ false, %cond.end ], [ %lnot, %land.rhs ], !dbg !7726
  %land.ext = zext i1 %15 to i32, !dbg !7722
  ret i32 %land.ext, !dbg !7727
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_add_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7728 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7733, metadata !DIExpression()), !dbg !7734
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7735, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7737, metadata !DIExpression()), !dbg !7738
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7739
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !7740
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !7738
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7741
  %call1 = call %struct.bDeformGroup* @ED_vgroup_add(%struct.Object* %1), !dbg !7742
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7743
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !7744
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !7745
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7746
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7747
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !7748
  %5 = load i8*, i8** %data, align 8, !dbg !7748
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 274464768, i8* %5), !dbg !7749
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7750
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7751
  %8 = bitcast %struct.Object* %7 to i8*, !dbg !7751
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 85393408, i8* %8), !dbg !7752
  ret i32 4, !dbg !7753
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_remove(%struct.wmOperatorType* %ot) #0 !dbg !7754 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7755, metadata !DIExpression()), !dbg !7756
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7757
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7758
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8** %name, align 8, !dbg !7759
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7760
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7761
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8** %idname, align 8, !dbg !7762
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7763
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7764
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i64 0, i64 0), i8** %description, align 8, !dbg !7765
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7766
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !7767
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !7768
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7769
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !7770
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_remove_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7771
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7772
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7773
  store i16 2, i16* %flag, align 8, !dbg !7774
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7775
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7776
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7776
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7775
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0)), !dbg !7777
  ret void, !dbg !7778
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_poll(%struct.bContext* %C) #0 !dbg !7779 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %data = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7782, metadata !DIExpression()), !dbg !7783
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7784
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !7785
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.ID** %data, metadata !7786, metadata !DIExpression()), !dbg !7787
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7788
  %tobool = icmp ne %struct.Object* %1, null, !dbg !7789
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7789

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7790
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !7791
  %3 = load i8*, i8** %data1, align 8, !dbg !7791
  br label %cond.end, !dbg !7789

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7789

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !7789
  %4 = bitcast i8* %cond to %struct.ID*, !dbg !7789
  store %struct.ID* %4, %struct.ID** %data, align 8, !dbg !7787
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7792
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !7792
  br i1 %tobool2, label %land.lhs.true, label %land.end, !dbg !7793

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7794
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !7795
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !7796
  %7 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7796
  %tobool3 = icmp ne %struct.Library* %7, null, !dbg !7794
  br i1 %tobool3, label %land.end, label %land.lhs.true4, !dbg !7797

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !7798
  %tobool5 = icmp ne %struct.ID* %8, null, !dbg !7798
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !7799

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %9 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !7800
  %lib7 = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 3, !dbg !7801
  %10 = load %struct.Library*, %struct.Library** %lib7, align 8, !dbg !7801
  %tobool8 = icmp ne %struct.Library* %10, null, !dbg !7800
  br i1 %tobool8, label %land.end, label %land.lhs.true9, !dbg !7802

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7803
  %type = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 3, !dbg !7803
  %12 = load i16, i16* %type, align 8, !dbg !7803
  %conv = sext i16 %12 to i32, !dbg !7803
  %cmp = icmp eq i32 %conv, 1, !dbg !7803
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7803

lor.lhs.false:                                    ; preds = %land.lhs.true9
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7803
  %type11 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 3, !dbg !7803
  %14 = load i16, i16* %type11, align 8, !dbg !7803
  %conv12 = sext i16 %14 to i32, !dbg !7803
  %cmp13 = icmp eq i32 %conv12, 22, !dbg !7803
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !7804

land.rhs:                                         ; preds = %lor.lhs.false, %land.lhs.true9
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7805
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 25, !dbg !7806
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase, i32 0, i32 0, !dbg !7807
  %16 = load i8*, i8** %first, align 8, !dbg !7807
  %tobool15 = icmp ne i8* %16, null, !dbg !7804
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false, %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %cond.end
  %17 = phi i1 [ false, %lor.lhs.false ], [ false, %land.lhs.true6 ], [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %cond.end ], [ %tobool15, %land.rhs ], !dbg !7808
  %land.ext = zext i1 %17 to i32, !dbg !7804
  ret i32 %land.ext, !dbg !7809
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_remove_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7810 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7811, metadata !DIExpression()), !dbg !7812
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7815, metadata !DIExpression()), !dbg !7816
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7817
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !7818
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !7816
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7819
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !7821
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7821
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)), !dbg !7822
  %tobool = icmp ne i32 %call1, 0, !dbg !7822
  br i1 %tobool, label %if.then, label %if.else, !dbg !7823

if.then:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7824
  call void @vgroup_delete_all(%struct.Object* %3), !dbg !7825
  br label %if.end, !dbg !7825

if.else:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7826
  call void @vgroup_delete(%struct.Object* %4), !dbg !7827
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7828
  %id = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 0, !dbg !7829
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !7830
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7831
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7832
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !7833
  %8 = load i8*, i8** %data, align 8, !dbg !7833
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 274464768, i8* %8), !dbg !7834
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7835
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7836
  %11 = bitcast %struct.Object* %10 to i8*, !dbg !7836
  call void @WM_event_add_notifier(%struct.bContext* %9, i32 85393408, i8* %11), !dbg !7837
  ret i32 4, !dbg !7838
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_assign(%struct.wmOperatorType* %ot) #0 !dbg !7839 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7840, metadata !DIExpression()), !dbg !7841
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7842
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7843
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8** %name, align 8, !dbg !7844
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7845
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7846
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i8** %idname, align 8, !dbg !7847
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7848
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7849
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i64 0, i64 0), i8** %description, align 8, !dbg !7850
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7851
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !7852
  store i32 (%struct.bContext*)* @vertex_group_vert_select_unlocked_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !7853
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7854
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !7855
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_assign_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7856
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7857
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7858
  store i16 2, i16* %flag, align 8, !dbg !7859
  ret void, !dbg !7860
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_vert_select_unlocked_poll(%struct.bContext* %C) #0 !dbg !7861 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %data = alloca %struct.ID*, align 8
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7862, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7864, metadata !DIExpression()), !dbg !7865
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7866
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !7867
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !7865
  call void @llvm.dbg.declare(metadata %struct.ID** %data, metadata !7868, metadata !DIExpression()), !dbg !7869
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7870
  %tobool = icmp ne %struct.Object* %1, null, !dbg !7871
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7871

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7872
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !7873
  %3 = load i8*, i8** %data1, align 8, !dbg !7873
  br label %cond.end, !dbg !7871

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7871

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !7871
  %4 = bitcast i8* %cond to %struct.ID*, !dbg !7871
  store %struct.ID* %4, %struct.ID** %data, align 8, !dbg !7869
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7874
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !7874
  br i1 %tobool2, label %land.lhs.true, label %if.then, !dbg !7876

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7877
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !7878
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !7879
  %7 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7879
  %tobool3 = icmp ne %struct.Library* %7, null, !dbg !7877
  br i1 %tobool3, label %if.then, label %land.lhs.true4, !dbg !7880

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !7881
  %tobool5 = icmp ne %struct.ID* %8, null, !dbg !7881
  br i1 %tobool5, label %land.lhs.true6, label %if.then, !dbg !7882

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %9 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !7883
  %lib7 = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 3, !dbg !7884
  %10 = load %struct.Library*, %struct.Library** %lib7, align 8, !dbg !7884
  %tobool8 = icmp ne %struct.Library* %10, null, !dbg !7883
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7885

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !7886
  br label %return, !dbg !7886

if.end:                                           ; preds = %land.lhs.true6
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7887
  %call9 = call zeroext i8 @BKE_object_is_in_editmode_vgroup(%struct.Object* %11), !dbg !7889
  %conv = zext i8 %call9 to i32, !dbg !7889
  %tobool10 = icmp ne i32 %conv, 0, !dbg !7889
  br i1 %tobool10, label %if.end15, label %lor.lhs.false, !dbg !7890

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7891
  %call11 = call zeroext i8 @BKE_object_is_in_wpaint_select_vert(%struct.Object* %12), !dbg !7892
  %conv12 = zext i8 %call11 to i32, !dbg !7892
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !7892
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !7893

if.then14:                                        ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !7894
  br label %return, !dbg !7894

if.end15:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7896
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 97, !dbg !7898
  %14 = load i16, i16* %actdef, align 2, !dbg !7898
  %conv16 = zext i16 %14 to i32, !dbg !7896
  %cmp = icmp ne i32 %conv16, 0, !dbg !7899
  br i1 %cmp, label %if.then18, label %if.end27, !dbg !7900

if.then18:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !7901, metadata !DIExpression()), !dbg !7903
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7904
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 25, !dbg !7905
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7906
  %actdef19 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 97, !dbg !7907
  %17 = load i16, i16* %actdef19, align 2, !dbg !7907
  %conv20 = zext i16 %17 to i32, !dbg !7906
  %sub = sub nsw i32 %conv20, 1, !dbg !7908
  %call21 = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %sub), !dbg !7909
  %18 = bitcast i8* %call21 to %struct.bDeformGroup*, !dbg !7909
  store %struct.bDeformGroup* %18, %struct.bDeformGroup** %dg, align 8, !dbg !7903
  %19 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !7910
  %tobool22 = icmp ne %struct.bDeformGroup* %19, null, !dbg !7910
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !7912

if.then23:                                        ; preds = %if.then18
  %20 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !7913
  %flag = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %20, i32 0, i32 3, !dbg !7915
  %21 = load i8, i8* %flag, align 8, !dbg !7915
  %conv24 = zext i8 %21 to i32, !dbg !7913
  %and = and i32 %conv24, 1, !dbg !7916
  %tobool25 = icmp ne i32 %and, 0, !dbg !7917
  %lnot = xor i1 %tobool25, true, !dbg !7917
  %lnot.ext = zext i1 %lnot to i32, !dbg !7917
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !7918
  br label %return, !dbg !7918

if.end26:                                         ; preds = %if.then18
  br label %if.end27, !dbg !7919

if.end27:                                         ; preds = %if.end26, %if.end15
  store i32 1, i32* %retval, align 4, !dbg !7920
  br label %return, !dbg !7920

return:                                           ; preds = %if.end27, %if.then23, %if.then14, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !7921
  ret i32 %22, !dbg !7921
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_assign_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7922 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7923, metadata !DIExpression()), !dbg !7924
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7925, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !7927, metadata !DIExpression()), !dbg !7930
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7931
  %call = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %0), !dbg !7932
  store %struct.ToolSettings* %call, %struct.ToolSettings** %ts, align 8, !dbg !7930
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7933, metadata !DIExpression()), !dbg !7934
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7935
  %call1 = call %struct.Object* @ED_object_context(%struct.bContext* %1), !dbg !7936
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !7934
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7937
  %3 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !7938
  %vgroup_weight = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %3, i32 0, i32 4, !dbg !7939
  %4 = load float, float* %vgroup_weight, align 8, !dbg !7939
  call void @vgroup_assign_verts(%struct.Object* %2, float %4), !dbg !7940
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7941
  %id = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 0, !dbg !7942
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !7943
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7944
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7945
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !7946
  %8 = load i8*, i8** %data, align 8, !dbg !7946
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 274399232, i8* %8), !dbg !7947
  ret i32 4, !dbg !7948
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_assign_new(%struct.wmOperatorType* %ot) #0 !dbg !7949 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7952
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7953
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0), i8** %name, align 8, !dbg !7954
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7955
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !7956
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0), i8** %idname, align 8, !dbg !7957
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7958
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !7959
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.17, i64 0, i64 0), i8** %description, align 8, !dbg !7960
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7961
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !7962
  store i32 (%struct.bContext*)* @vertex_group_vert_select_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !7963
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7964
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !7965
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_assign_new_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7966
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7967
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7968
  store i16 2, i16* %flag, align 8, !dbg !7969
  ret void, !dbg !7970
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_vert_select_poll(%struct.bContext* %C) #0 !dbg !7971 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %data = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !7974, metadata !DIExpression()), !dbg !7975
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7976
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !7977
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !7975
  call void @llvm.dbg.declare(metadata %struct.ID** %data, metadata !7978, metadata !DIExpression()), !dbg !7979
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7980
  %tobool = icmp ne %struct.Object* %1, null, !dbg !7981
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7981

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7982
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !7983
  %3 = load i8*, i8** %data1, align 8, !dbg !7983
  br label %cond.end, !dbg !7981

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7981

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !7981
  %4 = bitcast i8* %cond to %struct.ID*, !dbg !7981
  store %struct.ID* %4, %struct.ID** %data, align 8, !dbg !7979
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7984
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !7984
  br i1 %tobool2, label %land.lhs.true, label %if.then, !dbg !7986

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7987
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !7988
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !7989
  %7 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7989
  %tobool3 = icmp ne %struct.Library* %7, null, !dbg !7987
  br i1 %tobool3, label %if.then, label %land.lhs.true4, !dbg !7990

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !7991
  %tobool5 = icmp ne %struct.ID* %8, null, !dbg !7991
  br i1 %tobool5, label %land.lhs.true6, label %if.then, !dbg !7992

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %9 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !7993
  %lib7 = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 3, !dbg !7994
  %10 = load %struct.Library*, %struct.Library** %lib7, align 8, !dbg !7994
  %tobool8 = icmp ne %struct.Library* %10, null, !dbg !7993
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7995

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !7996
  br label %return, !dbg !7996

if.end:                                           ; preds = %land.lhs.true6
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7997
  %call9 = call zeroext i8 @BKE_object_is_in_editmode_vgroup(%struct.Object* %11), !dbg !7998
  %conv = zext i8 %call9 to i32, !dbg !7998
  %tobool10 = icmp ne i32 %conv, 0, !dbg !7998
  br i1 %tobool10, label %lor.end, label %lor.rhs, !dbg !7999

lor.rhs:                                          ; preds = %if.end
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8000
  %call11 = call zeroext i8 @BKE_object_is_in_wpaint_select_vert(%struct.Object* %12), !dbg !8001
  %conv12 = zext i8 %call11 to i32, !dbg !8001
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !7999
  br label %lor.end, !dbg !7999

lor.end:                                          ; preds = %lor.rhs, %if.end
  %13 = phi i1 [ true, %if.end ], [ %tobool13, %lor.rhs ]
  %lor.ext = zext i1 %13 to i32, !dbg !7999
  store i32 %lor.ext, i32* %retval, align 4, !dbg !8002
  br label %return, !dbg !8002

return:                                           ; preds = %lor.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8003
  ret i32 %14, !dbg !8003
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_assign_new_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8004 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8005, metadata !DIExpression()), !dbg !8006
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8007, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8009, metadata !DIExpression()), !dbg !8010
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8011
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8012
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8010
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8013
  %call1 = call %struct.bDeformGroup* @ED_vgroup_add(%struct.Object* %1), !dbg !8014
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8015
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8016
  %call2 = call i32 @vertex_group_assign_exec(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !8017
  ret i32 %call2, !dbg !8018
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_remove_from(%struct.wmOperatorType* %ot) #0 !dbg !8019 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8022, metadata !DIExpression()), !dbg !8023
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8024
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8025
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i8** %name, align 8, !dbg !8026
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8027
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8028
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8** %idname, align 8, !dbg !8029
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8030
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8031
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i8** %description, align 8, !dbg !8032
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8033
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8034
  store i32 (%struct.bContext*)* @vertex_group_vert_select_unlocked_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8035
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8036
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8037
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_remove_from_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8038
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8039
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8040
  store i16 2, i16* %flag, align 8, !dbg !8041
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8042
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8043
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8043
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8042
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0)), !dbg !8044
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8045
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8046
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !8047
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8048
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8049
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8049
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8048
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0)), !dbg !8050
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !8051
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8052
  call void @RNA_def_property_flag(%struct.PropertyRNA* %13, i32 268435456), !dbg !8053
  ret void, !dbg !8054
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_remove_from_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8055 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %use_all_groups = alloca i8, align 1
  %use_all_verts = alloca i8, align 1
  %ob = alloca %struct.Object*, align 8
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8056, metadata !DIExpression()), !dbg !8057
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.declare(metadata i8* %use_all_groups, metadata !8060, metadata !DIExpression()), !dbg !8061
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8062
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !8063
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8063
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)), !dbg !8064
  %conv = trunc i32 %call to i8, !dbg !8064
  store i8 %conv, i8* %use_all_groups, align 1, !dbg !8061
  call void @llvm.dbg.declare(metadata i8* %use_all_verts, metadata !8065, metadata !DIExpression()), !dbg !8066
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8067
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8068
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !8068
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)), !dbg !8069
  %conv3 = trunc i32 %call2 to i8, !dbg !8069
  store i8 %conv3, i8* %use_all_verts, align 1, !dbg !8066
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8070, metadata !DIExpression()), !dbg !8071
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8072
  %call4 = call %struct.Object* @ED_object_context(%struct.bContext* %4), !dbg !8073
  store %struct.Object* %call4, %struct.Object** %ob, align 8, !dbg !8071
  %5 = load i8, i8* %use_all_groups, align 1, !dbg !8074
  %tobool = icmp ne i8 %5, 0, !dbg !8074
  br i1 %tobool, label %if.then, label %if.else, !dbg !8076

if.then:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8077
  %call5 = call zeroext i8 @vgroup_remove_verts(%struct.Object* %6, i32 0), !dbg !8080
  %conv6 = zext i8 %call5 to i32, !dbg !8080
  %cmp = icmp eq i32 %conv6, 0, !dbg !8081
  br i1 %cmp, label %if.then8, label %if.end, !dbg !8082

if.then8:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !8083
  br label %return, !dbg !8083

if.end:                                           ; preds = %if.then
  br label %if.end19, !dbg !8085

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !8086, metadata !DIExpression()), !dbg !8088
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8089
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 25, !dbg !8090
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8091
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 97, !dbg !8092
  %9 = load i16, i16* %actdef, align 2, !dbg !8092
  %conv9 = zext i16 %9 to i32, !dbg !8091
  %sub = sub nsw i32 %conv9, 1, !dbg !8093
  %call10 = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %sub), !dbg !8094
  %10 = bitcast i8* %call10 to %struct.bDeformGroup*, !dbg !8094
  store %struct.bDeformGroup* %10, %struct.bDeformGroup** %dg, align 8, !dbg !8088
  %11 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !8095
  %cmp11 = icmp eq %struct.bDeformGroup* %11, null, !dbg !8097
  br i1 %cmp11, label %if.then17, label %lor.lhs.false, !dbg !8098

lor.lhs.false:                                    ; preds = %if.else
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8099
  %13 = load i8, i8* %use_all_verts, align 1, !dbg !8100
  %14 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !8101
  %call13 = call zeroext i8 @vgroup_active_remove_verts(%struct.Object* %12, i8 zeroext %13, %struct.bDeformGroup* %14), !dbg !8102
  %conv14 = zext i8 %call13 to i32, !dbg !8102
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !8103
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8104

if.then17:                                        ; preds = %lor.lhs.false, %if.else
  store i32 2, i32* %retval, align 4, !dbg !8105
  br label %return, !dbg !8105

if.end18:                                         ; preds = %lor.lhs.false
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8107
  %id = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 0, !dbg !8108
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8109
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8110
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8111
  %data = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !8112
  %18 = load i8*, i8** %data, align 8, !dbg !8112
  call void @WM_event_add_notifier(%struct.bContext* %16, i32 274399232, i8* %18), !dbg !8113
  store i32 4, i32* %retval, align 4, !dbg !8114
  br label %return, !dbg !8114

return:                                           ; preds = %if.end19, %if.then17, %if.then8
  %19 = load i32, i32* %retval, align 4, !dbg !8115
  ret i32 %19, !dbg !8115
}

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_select(%struct.wmOperatorType* %ot) #0 !dbg !8116 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8117, metadata !DIExpression()), !dbg !8118
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8119
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8120
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i8** %name, align 8, !dbg !8121
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8122
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8123
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0), i8** %idname, align 8, !dbg !8124
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8125
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8126
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), i8** %description, align 8, !dbg !8127
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8128
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8129
  store i32 (%struct.bContext*)* @vertex_group_vert_select_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8130
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8131
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8132
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_select_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8133
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8134
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8135
  store i16 3, i16* %flag, align 8, !dbg !8136
  ret void, !dbg !8137
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_select_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !8138 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8139, metadata !DIExpression()), !dbg !8140
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !8141, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8143, metadata !DIExpression()), !dbg !8144
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8145
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8146
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8144
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8147
  %tobool = icmp ne %struct.Object* %1, null, !dbg !8147
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8149

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8150
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !8151
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !8152
  %3 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !8152
  %tobool1 = icmp ne %struct.Library* %3, null, !dbg !8150
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8153

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !8154
  br label %return, !dbg !8154

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8155
  call void @vgroup_select_verts(%struct.Object* %4, i32 1), !dbg !8156
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8157
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8158
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !8159
  %7 = load i8*, i8** %data, align 8, !dbg !8159
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 274333696, i8* %7), !dbg !8160
  store i32 4, i32* %retval, align 4, !dbg !8161
  br label %return, !dbg !8161

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !8162
  ret i32 %8, !dbg !8162
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_deselect(%struct.wmOperatorType* %ot) #0 !dbg !8163 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8166
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8167
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i64 0, i64 0), i8** %name, align 8, !dbg !8168
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8169
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8170
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i64 0, i64 0), i8** %idname, align 8, !dbg !8171
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8172
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8173
  store i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.32, i64 0, i64 0), i8** %description, align 8, !dbg !8174
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8175
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8176
  store i32 (%struct.bContext*)* @vertex_group_vert_select_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8177
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8178
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8179
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_deselect_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8180
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8181
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8182
  store i16 3, i16* %flag, align 8, !dbg !8183
  ret void, !dbg !8184
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_deselect_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !8185 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8190, metadata !DIExpression()), !dbg !8191
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8192
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8193
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8191
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8194
  call void @vgroup_select_verts(%struct.Object* %1, i32 0), !dbg !8195
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8196
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8197
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !8198
  %4 = load i8*, i8** %data, align 8, !dbg !8198
  call void @WM_event_add_notifier(%struct.bContext* %2, i32 274333696, i8* %4), !dbg !8199
  ret i32 4, !dbg !8200
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_copy(%struct.wmOperatorType* %ot) #0 !dbg !8201 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8202, metadata !DIExpression()), !dbg !8203
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8204
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8205
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8** %name, align 8, !dbg !8206
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8207
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8208
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.34, i64 0, i64 0), i8** %idname, align 8, !dbg !8209
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8210
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8211
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.35, i64 0, i64 0), i8** %description, align 8, !dbg !8212
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8213
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8214
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8215
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8216
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8217
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_copy_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8218
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8219
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8220
  store i16 3, i16* %flag, align 8, !dbg !8221
  ret void, !dbg !8222
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_copy_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !8223 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8224, metadata !DIExpression()), !dbg !8225
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !8226, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8228, metadata !DIExpression()), !dbg !8229
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8230
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8231
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8229
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8232
  call void @vgroup_duplicate(%struct.Object* %1), !dbg !8233
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8234
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !8235
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8236
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8237
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8238
  %5 = bitcast %struct.Object* %4 to i8*, !dbg !8238
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 85393408, i8* %5), !dbg !8239
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8240
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8241
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !8242
  %8 = load i8*, i8** %data, align 8, !dbg !8242
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 274464768, i8* %8), !dbg !8243
  ret i32 4, !dbg !8244
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_levels(%struct.wmOperatorType* %ot) #0 !dbg !8245 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8248
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8249
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0), i8** %name, align 8, !dbg !8250
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8251
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8252
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i8** %idname, align 8, !dbg !8253
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8254
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8255
  store i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.38, i64 0, i64 0), i8** %description, align 8, !dbg !8256
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8257
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8258
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8259
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8260
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8261
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_levels_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8262
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8263
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8264
  store i16 3, i16* %flag, align 8, !dbg !8265
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8266
  call void @vgroup_operator_subset_select_props(%struct.wmOperatorType* %6, i8 zeroext 1), !dbg !8267
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8268
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8269
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8269
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8268
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), float 0.000000e+00, float -1.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0), float -1.000000e+00, float 1.000000e+00), !dbg !8270
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8271
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8272
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8272
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8271
  %call2 = call %struct.PropertyRNA* @RNA_def_float(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), float 1.000000e+00, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0), float 0.000000e+00, float 1.000000e+01), !dbg !8273
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_levels_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8275 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %offset = alloca float, align 4
  %gain = alloca float, align 4
  %subset_type = alloca i32, align 4
  %subset_count = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8276, metadata !DIExpression()), !dbg !8277
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8280, metadata !DIExpression()), !dbg !8281
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8282
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8283
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8281
  call void @llvm.dbg.declare(metadata float* %offset, metadata !8284, metadata !DIExpression()), !dbg !8285
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8286
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !8287
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8287
  %call1 = call float @RNA_float_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0)), !dbg !8288
  store float %call1, float* %offset, align 4, !dbg !8285
  call void @llvm.dbg.declare(metadata float* %gain, metadata !8289, metadata !DIExpression()), !dbg !8290
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8291
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !8292
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !8292
  %call3 = call float @RNA_float_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0)), !dbg !8293
  store float %call3, float* %gain, align 4, !dbg !8290
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !8294, metadata !DIExpression()), !dbg !8295
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8296
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !8297
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !8297
  %call5 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)), !dbg !8298
  store i32 %call5, i32* %subset_type, align 4, !dbg !8295
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !8299, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !8301, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !8303, metadata !DIExpression()), !dbg !8304
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8305
  %8 = load i32, i32* %subset_type, align 4, !dbg !8306
  %call6 = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %7, i32 %8, i32* %vgroup_tot, i32* %subset_count), !dbg !8307
  store i8* %call6, i8** %vgroup_validmap, align 8, !dbg !8304
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8308
  %10 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8309
  %11 = load i32, i32* %vgroup_tot, align 4, !dbg !8310
  %12 = load i32, i32* %subset_count, align 4, !dbg !8311
  %13 = load float, float* %offset, align 4, !dbg !8312
  %14 = load float, float* %gain, align 4, !dbg !8313
  call void @vgroup_levels_subset(%struct.Object* %9, i8* %10, i32 %11, i32 %12, float %13, float %14), !dbg !8314
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8315
  %16 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8316
  call void %15(i8* %16), !dbg !8315
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8317
  %id = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 0, !dbg !8318
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8319
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8320
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8321
  %20 = bitcast %struct.Object* %19 to i8*, !dbg !8321
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 85393408, i8* %20), !dbg !8322
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8323
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8324
  %data = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 19, !dbg !8325
  %23 = load i8*, i8** %data, align 8, !dbg !8325
  call void @WM_event_add_notifier(%struct.bContext* %21, i32 274399232, i8* %23), !dbg !8326
  ret i32 4, !dbg !8327
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_operator_subset_select_props(%struct.wmOperatorType* %ot, i8 zeroext %use_active) #0 !dbg !8328 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %use_active.addr = alloca i8, align 1
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8331, metadata !DIExpression()), !dbg !8332
  store i8 %use_active, i8* %use_active.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_active.addr, metadata !8333, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8335, metadata !DIExpression()), !dbg !8336
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8337
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !8338
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8338
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !8337
  %3 = load i8, i8* %use_active.addr, align 1, !dbg !8339
  %conv = zext i8 %3 to i32, !dbg !8339
  %tobool = icmp ne i32 %conv, 0, !dbg !8339
  %4 = zext i1 %tobool to i64, !dbg !8339
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !8339
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @DummyRNA_NULL_items, i64 0, i64 0), i32 %cond, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.191, i64 0, i64 0)), !dbg !8340
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8341
  %5 = load i8, i8* %use_active.addr, align 1, !dbg !8342
  %tobool1 = icmp ne i8 %5, 0, !dbg !8342
  br i1 %tobool1, label %if.then, label %if.else, !dbg !8344

if.then:                                          ; preds = %entry
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8345
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %6, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @rna_vertex_group_with_single_itemf), !dbg !8347
  br label %if.end, !dbg !8348

if.else:                                          ; preds = %entry
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8349
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %7, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @rna_vertex_group_select_itemf), !dbg !8351
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8352
  call void @RNA_def_property_flag(%struct.PropertyRNA* %8, i32 536870912), !dbg !8353
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8354
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8355
  %prop2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !8356
  store %struct.PropertyRNA* %9, %struct.PropertyRNA** %prop2, align 8, !dbg !8357
  ret void, !dbg !8358
}

declare dso_local %struct.PropertyRNA* @RNA_def_float(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_normalize(%struct.wmOperatorType* %ot) #0 !dbg !8359 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8362
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8363
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0), i8** %name, align 8, !dbg !8364
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8365
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8366
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0), i8** %idname, align 8, !dbg !8367
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8368
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8369
  store i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.47, i64 0, i64 0), i8** %description, align 8, !dbg !8370
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8371
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8372
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8373
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8374
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8375
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_normalize_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8376
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8377
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8378
  store i16 3, i16* %flag, align 8, !dbg !8379
  ret void, !dbg !8380
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_normalize_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !8381 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8382, metadata !DIExpression()), !dbg !8383
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8386, metadata !DIExpression()), !dbg !8387
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8388
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8389
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8387
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8390
  call void @vgroup_normalize(%struct.Object* %1), !dbg !8391
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8392
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !8393
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8394
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8395
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8396
  %5 = bitcast %struct.Object* %4 to i8*, !dbg !8396
  call void @WM_event_add_notifier(%struct.bContext* %3, i32 85393408, i8* %5), !dbg !8397
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8398
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8399
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !8400
  %8 = load i8*, i8** %data, align 8, !dbg !8400
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 274399232, i8* %8), !dbg !8401
  ret i32 4, !dbg !8402
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_normalize_all(%struct.wmOperatorType* %ot) #0 !dbg !8403 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8404, metadata !DIExpression()), !dbg !8405
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8406
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8407
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i8** %name, align 8, !dbg !8408
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8409
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8410
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49, i64 0, i64 0), i8** %idname, align 8, !dbg !8411
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8412
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8413
  store i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.50, i64 0, i64 0), i8** %description, align 8, !dbg !8414
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8415
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8416
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8417
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8418
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8419
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_normalize_all_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8420
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8421
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8422
  store i16 3, i16* %flag, align 8, !dbg !8423
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8424
  call void @vgroup_operator_subset_select_props(%struct.wmOperatorType* %6, i8 zeroext 0), !dbg !8425
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8426
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8427
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8427
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8426
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.53, i64 0, i64 0)), !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_normalize_all_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8430 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %lock_active = alloca i8, align 1
  %subset_type = alloca i32, align 4
  %subset_count = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8431, metadata !DIExpression()), !dbg !8432
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8433, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8435, metadata !DIExpression()), !dbg !8436
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8437
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8438
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8436
  call void @llvm.dbg.declare(metadata i8* %lock_active, metadata !8439, metadata !DIExpression()), !dbg !8440
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8441
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !8442
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8442
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0)), !dbg !8443
  %conv = trunc i32 %call1 to i8, !dbg !8443
  store i8 %conv, i8* %lock_active, align 1, !dbg !8440
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !8444, metadata !DIExpression()), !dbg !8445
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8446
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !8447
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !8447
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)), !dbg !8448
  store i32 %call3, i32* %subset_type, align 4, !dbg !8445
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !8449, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !8451, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !8453, metadata !DIExpression()), !dbg !8454
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8455
  %6 = load i32, i32* %subset_type, align 4, !dbg !8456
  %call4 = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %5, i32 %6, i32* %vgroup_tot, i32* %subset_count), !dbg !8457
  store i8* %call4, i8** %vgroup_validmap, align 8, !dbg !8454
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8458
  %8 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8459
  %9 = load i32, i32* %vgroup_tot, align 4, !dbg !8460
  %10 = load i32, i32* %subset_count, align 4, !dbg !8461
  %11 = load i8, i8* %lock_active, align 1, !dbg !8462
  call void @vgroup_normalize_all(%struct.Object* %7, i8* %8, i32 %9, i32 %10, i8 zeroext %11), !dbg !8463
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8464
  %13 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8465
  call void %12(i8* %13), !dbg !8464
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8466
  %id = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 0, !dbg !8467
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8468
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8469
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8470
  %17 = bitcast %struct.Object* %16 to i8*, !dbg !8470
  call void @WM_event_add_notifier(%struct.bContext* %15, i32 85393408, i8* %17), !dbg !8471
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8472
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8473
  %data = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 19, !dbg !8474
  %20 = load i8*, i8** %data, align 8, !dbg !8474
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 274399232, i8* %20), !dbg !8475
  ret i32 4, !dbg !8476
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_fix(%struct.wmOperatorType* %ot) #0 !dbg !8477 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8480
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8481
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i64 0, i64 0), i8** %name, align 8, !dbg !8482
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8483
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8484
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.55, i64 0, i64 0), i8** %idname, align 8, !dbg !8485
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8486
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8487
  store i8* getelementptr inbounds ([133 x i8], [133 x i8]* @.str.56, i64 0, i64 0), i8** %description, align 8, !dbg !8488
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8489
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8490
  store i32 (%struct.bContext*)* @vertex_group_mesh_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8491
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8492
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8493
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_fix_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8494
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8495
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8496
  store i16 3, i16* %flag, align 8, !dbg !8497
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8498
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8499
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8499
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8498
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), float 0.000000e+00, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i64 0, i64 0), float -1.000000e+01, float 1.000000e+01), !dbg !8500
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8501
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !8502
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8502
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !8501
  %call2 = call %struct.PropertyRNA* @RNA_def_float(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i64 0, i64 0), float 1.000000e+00, float -2.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.62, i64 0, i64 0), float -2.000000e+00, float 2.000000e+00), !dbg !8503
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8504
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !8505
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !8505
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !8504
  %call4 = call %struct.PropertyRNA* @RNA_def_float(i8* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i64 0, i64 0), float 1.000000e+00, float 0x3FA99999A0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.65, i64 0, i64 0), float 0x3FA99999A0000000, float 1.000000e+00), !dbg !8506
  ret void, !dbg !8507
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_mesh_poll(%struct.bContext* %C) #0 !dbg !8508 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %data = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8511, metadata !DIExpression()), !dbg !8512
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8513
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8514
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8512
  call void @llvm.dbg.declare(metadata %struct.ID** %data, metadata !8515, metadata !DIExpression()), !dbg !8516
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8517
  %tobool = icmp ne %struct.Object* %1, null, !dbg !8518
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8518

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8519
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !8520
  %3 = load i8*, i8** %data1, align 8, !dbg !8520
  br label %cond.end, !dbg !8518

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8518

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !8518
  %4 = bitcast i8* %cond to %struct.ID*, !dbg !8518
  store %struct.ID* %4, %struct.ID** %data, align 8, !dbg !8516
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8521
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !8521
  br i1 %tobool2, label %land.lhs.true, label %land.end, !dbg !8522

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8523
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !8524
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !8525
  %7 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !8525
  %tobool3 = icmp ne %struct.Library* %7, null, !dbg !8523
  br i1 %tobool3, label %land.end, label %land.lhs.true4, !dbg !8526

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !8527
  %tobool5 = icmp ne %struct.ID* %8, null, !dbg !8527
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !8528

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %9 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !8529
  %lib7 = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 3, !dbg !8530
  %10 = load %struct.Library*, %struct.Library** %lib7, align 8, !dbg !8530
  %tobool8 = icmp ne %struct.Library* %10, null, !dbg !8529
  br i1 %tobool8, label %land.end, label %land.lhs.true9, !dbg !8531

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8532
  %type = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 3, !dbg !8533
  %12 = load i16, i16* %type, align 8, !dbg !8533
  %conv = sext i16 %12 to i32, !dbg !8532
  %cmp = icmp eq i32 %conv, 1, !dbg !8534
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8535

land.rhs:                                         ; preds = %land.lhs.true9
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8536
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 25, !dbg !8537
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase, i32 0, i32 0, !dbg !8538
  %14 = load i8*, i8** %first, align 8, !dbg !8538
  %tobool11 = icmp ne i8* %14, null, !dbg !8535
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true9, %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %cond.end
  %15 = phi i1 [ false, %land.lhs.true9 ], [ false, %land.lhs.true6 ], [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %cond.end ], [ %tobool11, %land.rhs ], !dbg !8539
  %land.ext = zext i1 %15 to i32, !dbg !8535
  ret i32 %land.ext, !dbg !8540
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_fix_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8541 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %scene = alloca %struct.Scene*, align 8
  %distToBe = alloca float, align 4
  %strength = alloca float, align 4
  %cp = alloca float, align 4
  %md = alloca %struct.ModifierData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8546, metadata !DIExpression()), !dbg !8547
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8548
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !8549
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8547
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8550, metadata !DIExpression()), !dbg !8553
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8554
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !8555
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !8553
  call void @llvm.dbg.declare(metadata float* %distToBe, metadata !8556, metadata !DIExpression()), !dbg !8557
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8558
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8559
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8559
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0)), !dbg !8560
  store float %call2, float* %distToBe, align 4, !dbg !8557
  call void @llvm.dbg.declare(metadata float* %strength, metadata !8561, metadata !DIExpression()), !dbg !8562
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8563
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8564
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !8564
  %call4 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i64 0, i64 0)), !dbg !8565
  store float %call4, float* %strength, align 4, !dbg !8562
  call void @llvm.dbg.declare(metadata float* %cp, metadata !8566, metadata !DIExpression()), !dbg !8567
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8568
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !8569
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !8569
  %call6 = call float @RNA_float_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i64 0, i64 0)), !dbg !8570
  store float %call6, float* %cp, align 4, !dbg !8567
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !8571, metadata !DIExpression()), !dbg !8572
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8573
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 26, !dbg !8574
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !8575
  %9 = load i8*, i8** %first, align 8, !dbg !8575
  %10 = bitcast i8* %9 to %struct.ModifierData*, !dbg !8573
  store %struct.ModifierData* %10, %struct.ModifierData** %md, align 8, !dbg !8572
  br label %while.cond, !dbg !8576

while.cond:                                       ; preds = %if.end, %entry
  %11 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8577
  %tobool = icmp ne %struct.ModifierData* %11, null, !dbg !8576
  br i1 %tobool, label %while.body, label %while.end, !dbg !8576

while.body:                                       ; preds = %while.cond
  %12 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8578
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %12, i32 0, i32 2, !dbg !8581
  %13 = load i32, i32* %type, align 8, !dbg !8581
  %cmp = icmp eq i32 %13, 5, !dbg !8582
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8583

land.lhs.true:                                    ; preds = %while.body
  %14 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8584
  %mode = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %14, i32 0, i32 3, !dbg !8585
  %15 = load i32, i32* %mode, align 4, !dbg !8585
  %and = and i32 %15, 1, !dbg !8586
  %tobool7 = icmp ne i32 %and, 0, !dbg !8586
  br i1 %tobool7, label %if.then, label %if.end, !dbg !8587

if.then:                                          ; preds = %land.lhs.true
  br label %while.end, !dbg !8588

if.end:                                           ; preds = %land.lhs.true, %while.body
  %16 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8590
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %16, i32 0, i32 0, !dbg !8591
  %17 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !8591
  store %struct.ModifierData* %17, %struct.ModifierData** %md, align 8, !dbg !8592
  br label %while.cond, !dbg !8576, !llvm.loop !8593

while.end:                                        ; preds = %if.then, %while.cond
  %18 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8595
  %tobool8 = icmp ne %struct.ModifierData* %18, null, !dbg !8595
  br i1 %tobool8, label %land.lhs.true9, label %if.end13, !dbg !8597

land.lhs.true9:                                   ; preds = %while.end
  %19 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !8598
  %type10 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %19, i32 0, i32 2, !dbg !8599
  %20 = load i32, i32* %type10, align 8, !dbg !8599
  %cmp11 = icmp eq i32 %20, 5, !dbg !8600
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8601

if.then12:                                        ; preds = %land.lhs.true9
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8602
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 8, !dbg !8604
  %22 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8604
  call void @BKE_report(%struct.ReportList* %22, i32 128, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.192, i64 0, i64 0)), !dbg !8605
  store i32 2, i32* %retval, align 4, !dbg !8606
  br label %return, !dbg !8606

if.end13:                                         ; preds = %land.lhs.true9, %while.end
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8607
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8608
  %25 = load float, float* %distToBe, align 4, !dbg !8609
  %26 = load float, float* %strength, align 4, !dbg !8610
  %27 = load float, float* %cp, align 4, !dbg !8611
  call void @vgroup_fix(%struct.Scene* %23, %struct.Object* %24, float %25, float %26, float %27), !dbg !8612
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8613
  %id = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 0, !dbg !8614
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8615
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8616
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8617
  %31 = bitcast %struct.Object* %30 to i8*, !dbg !8617
  call void @WM_event_add_notifier(%struct.bContext* %29, i32 85393408, i8* %31), !dbg !8618
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8619
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8620
  %data = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 19, !dbg !8621
  %34 = load i8*, i8** %data, align 8, !dbg !8621
  call void @WM_event_add_notifier(%struct.bContext* %32, i32 274399232, i8* %34), !dbg !8622
  store i32 4, i32* %retval, align 4, !dbg !8623
  br label %return, !dbg !8623

return:                                           ; preds = %if.end13, %if.then12
  %35 = load i32, i32* %retval, align 4, !dbg !8624
  ret i32 %35, !dbg !8624
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_lock(%struct.wmOperatorType* %ot) #0 !dbg !8625 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8628
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8629
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.66, i64 0, i64 0), i8** %name, align 8, !dbg !8630
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8631
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8632
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i8** %idname, align 8, !dbg !8633
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8634
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8635
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.68, i64 0, i64 0), i8** %description, align 8, !dbg !8636
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8637
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8638
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8639
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8640
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8641
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_lock_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8642
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8643
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8644
  store i16 3, i16* %flag, align 8, !dbg !8645
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8646
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8647
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8647
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8646
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @vgroup_lock_actions, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.71, i64 0, i64 0)), !dbg !8648
  ret void, !dbg !8649
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_lock_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8650 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %action = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8651, metadata !DIExpression()), !dbg !8652
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8653, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8655, metadata !DIExpression()), !dbg !8656
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8657
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !8658
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8656
  call void @llvm.dbg.declare(metadata i32* %action, metadata !8659, metadata !DIExpression()), !dbg !8660
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8661
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !8662
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8662
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0)), !dbg !8663
  store i32 %call1, i32* %action, align 4, !dbg !8660
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8664
  %4 = load i32, i32* %action, align 4, !dbg !8665
  call void @vgroup_lock_all(%struct.Object* %3, i32 %4), !dbg !8666
  ret i32 4, !dbg !8667
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_invert(%struct.wmOperatorType* %ot) #0 !dbg !8668 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8669, metadata !DIExpression()), !dbg !8670
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8671
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8672
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i64 0, i64 0), i8** %name, align 8, !dbg !8673
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8674
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8675
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i64 0, i64 0), i8** %idname, align 8, !dbg !8676
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8677
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8678
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.74, i64 0, i64 0), i8** %description, align 8, !dbg !8679
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8680
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8681
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8682
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8683
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8684
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_invert_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8685
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8686
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8687
  store i16 3, i16* %flag, align 8, !dbg !8688
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8689
  call void @vgroup_operator_subset_select_props(%struct.wmOperatorType* %6, i8 zeroext 1), !dbg !8690
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8691
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8692
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8692
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8691
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.77, i64 0, i64 0)), !dbg !8693
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8694
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8695
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8695
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8694
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.80, i64 0, i64 0)), !dbg !8696
  ret void, !dbg !8697
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_invert_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8698 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %auto_assign = alloca i8, align 1
  %auto_remove = alloca i8, align 1
  %subset_type = alloca i32, align 4
  %subset_count = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8699, metadata !DIExpression()), !dbg !8700
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8701, metadata !DIExpression()), !dbg !8702
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8703, metadata !DIExpression()), !dbg !8704
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8705
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8706
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8704
  call void @llvm.dbg.declare(metadata i8* %auto_assign, metadata !8707, metadata !DIExpression()), !dbg !8708
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8709
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !8710
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8710
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0)), !dbg !8711
  %conv = trunc i32 %call1 to i8, !dbg !8711
  store i8 %conv, i8* %auto_assign, align 1, !dbg !8708
  call void @llvm.dbg.declare(metadata i8* %auto_remove, metadata !8712, metadata !DIExpression()), !dbg !8713
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8714
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !8715
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !8715
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0)), !dbg !8716
  %conv4 = trunc i32 %call3 to i8, !dbg !8716
  store i8 %conv4, i8* %auto_remove, align 1, !dbg !8713
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !8717, metadata !DIExpression()), !dbg !8718
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8719
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !8720
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !8720
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)), !dbg !8721
  store i32 %call6, i32* %subset_type, align 4, !dbg !8718
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !8722, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !8724, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !8726, metadata !DIExpression()), !dbg !8727
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8728
  %8 = load i32, i32* %subset_type, align 4, !dbg !8729
  %call7 = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %7, i32 %8, i32* %vgroup_tot, i32* %subset_count), !dbg !8730
  store i8* %call7, i8** %vgroup_validmap, align 8, !dbg !8727
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8731
  %10 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8732
  %11 = load i32, i32* %vgroup_tot, align 4, !dbg !8733
  %12 = load i32, i32* %subset_count, align 4, !dbg !8734
  %13 = load i8, i8* %auto_assign, align 1, !dbg !8735
  %14 = load i8, i8* %auto_remove, align 1, !dbg !8736
  call void @vgroup_invert_subset(%struct.Object* %9, i8* %10, i32 %11, i32 %12, i8 zeroext %13, i8 zeroext %14), !dbg !8737
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8738
  %16 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8739
  call void %15(i8* %16), !dbg !8738
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8740
  %id = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 0, !dbg !8741
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8742
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8743
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8744
  %20 = bitcast %struct.Object* %19 to i8*, !dbg !8744
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 85393408, i8* %20), !dbg !8745
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8746
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8747
  %data = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 19, !dbg !8748
  %23 = load i8*, i8** %data, align 8, !dbg !8748
  call void @WM_event_add_notifier(%struct.bContext* %21, i32 274399232, i8* %23), !dbg !8749
  ret i32 4, !dbg !8750
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_blend(%struct.wmOperatorType* %ot) #0 !dbg !8751 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8752, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8754, metadata !DIExpression()), !dbg !8755
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8756
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8757
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i64 0, i64 0), i8** %name, align 8, !dbg !8758
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8759
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8760
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0), i8** %idname, align 8, !dbg !8761
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8762
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8763
  store i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.83, i64 0, i64 0), i8** %description, align 8, !dbg !8764
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8765
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8766
  store i32 (%struct.bContext*)* @vertex_group_blend_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8767
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8768
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8769
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_blend_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8770
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8771
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8772
  store i16 3, i16* %flag, align 8, !dbg !8773
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8774
  call void @vgroup_operator_subset_select_props(%struct.wmOperatorType* %6, i8 zeroext 1), !dbg !8775
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8776
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8777
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8777
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8776
  %call = call %struct.PropertyRNA* @RNA_def_property(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i64 0, i64 0), i32 2, i32 15), !dbg !8778
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8779
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8780
  call void @RNA_def_property_ui_text(%struct.PropertyRNA* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i64 0, i64 0)), !dbg !8781
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8782
  call void @RNA_def_property_range(%struct.PropertyRNA* %11, double 0.000000e+00, double 1.000000e+00), !dbg !8783
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8784
  call void @RNA_def_property_float_default(%struct.PropertyRNA* %12, float 1.000000e+00), !dbg !8785
  ret void, !dbg !8786
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_blend_poll(%struct.bContext* %C) #0 !dbg !8787 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %data = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8790, metadata !DIExpression()), !dbg !8791
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8792
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8793
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8791
  call void @llvm.dbg.declare(metadata %struct.ID** %data, metadata !8794, metadata !DIExpression()), !dbg !8795
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8796
  %tobool = icmp ne %struct.Object* %1, null, !dbg !8797
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8797

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8798
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !8799
  %3 = load i8*, i8** %data1, align 8, !dbg !8799
  br label %cond.end, !dbg !8797

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8797

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !8797
  %4 = bitcast i8* %cond to %struct.ID*, !dbg !8797
  store %struct.ID* %4, %struct.ID** %data, align 8, !dbg !8795
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8800
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !8800
  br i1 %tobool2, label %land.lhs.true, label %if.then, !dbg !8802

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8803
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !8804
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !8805
  %7 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !8805
  %tobool3 = icmp ne %struct.Library* %7, null, !dbg !8803
  br i1 %tobool3, label %if.then, label %land.lhs.true4, !dbg !8806

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !8807
  %tobool5 = icmp ne %struct.ID* %8, null, !dbg !8807
  br i1 %tobool5, label %land.lhs.true6, label %if.then, !dbg !8808

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %9 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !8809
  %lib7 = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 3, !dbg !8810
  %10 = load %struct.Library*, %struct.Library** %lib7, align 8, !dbg !8810
  %tobool8 = icmp ne %struct.Library* %10, null, !dbg !8809
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8811

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !8812
  br label %return, !dbg !8812

if.end:                                           ; preds = %land.lhs.true6
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8813
  %type = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 3, !dbg !8815
  %12 = load i16, i16* %type, align 8, !dbg !8815
  %conv = sext i16 %12 to i32, !dbg !8813
  %cmp = icmp ne i32 %conv, 1, !dbg !8816
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !8817

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8818
  br label %return, !dbg !8818

if.end11:                                         ; preds = %if.end
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8820
  %call12 = call zeroext i8 @BKE_object_is_in_editmode_vgroup(%struct.Object* %13), !dbg !8822
  %tobool13 = icmp ne i8 %call12, 0, !dbg !8822
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !8823

if.then14:                                        ; preds = %if.end11
  store i32 1, i32* %retval, align 4, !dbg !8824
  br label %return, !dbg !8824

if.else:                                          ; preds = %if.end11
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8826
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 27, !dbg !8828
  %15 = load i32, i32* %mode, align 8, !dbg !8828
  %and = and i32 %15, 8, !dbg !8829
  %tobool15 = icmp ne i32 %and, 0, !dbg !8829
  br i1 %tobool15, label %if.then16, label %if.else33, !dbg !8830

if.then16:                                        ; preds = %if.else
  %16 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !8831
  %17 = bitcast %struct.ID* %16 to %struct.Mesh*, !dbg !8831
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 46, !dbg !8831
  %18 = load i8, i8* %editflag, align 1, !dbg !8831
  %conv17 = zext i8 %18 to i32, !dbg !8831
  %and18 = and i32 %conv17, 8, !dbg !8831
  %tobool19 = icmp ne i32 %and18, 0, !dbg !8831
  br i1 %tobool19, label %cond.true20, label %cond.false21, !dbg !8831

cond.true20:                                      ; preds = %if.then16
  br label %cond.end27, !dbg !8831

cond.false21:                                     ; preds = %if.then16
  %19 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !8831
  %20 = bitcast %struct.ID* %19 to %struct.Mesh*, !dbg !8831
  %editflag22 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 46, !dbg !8831
  %21 = load i8, i8* %editflag22, align 1, !dbg !8831
  %conv23 = zext i8 %21 to i32, !dbg !8831
  %and24 = and i32 %conv23, 32, !dbg !8831
  %tobool25 = icmp ne i32 %and24, 0, !dbg !8831
  %22 = zext i1 %tobool25 to i64, !dbg !8831
  %cond26 = select i1 %tobool25, i32 1, i32 0, !dbg !8831
  br label %cond.end27, !dbg !8831

cond.end27:                                       ; preds = %cond.false21, %cond.true20
  %cond28 = phi i32 [ 4, %cond.true20 ], [ %cond26, %cond.false21 ], !dbg !8831
  %cmp29 = icmp eq i32 %cond28, 1, !dbg !8834
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !8835

if.then31:                                        ; preds = %cond.end27
  store i32 1, i32* %retval, align 4, !dbg !8836
  br label %return, !dbg !8836

if.else32:                                        ; preds = %cond.end27
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8838
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %23, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.211, i64 0, i64 0)), !dbg !8840
  store i32 0, i32* %retval, align 4, !dbg !8841
  br label %return, !dbg !8841

if.else33:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !8842
  br label %return, !dbg !8842

return:                                           ; preds = %if.else33, %if.else32, %if.then31, %if.then14, %if.then10, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !8844
  ret i32 %24, !dbg !8844
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_blend_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8845 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %fac = alloca float, align 4
  %subset_type = alloca i32, align 4
  %subset_count = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8850, metadata !DIExpression()), !dbg !8851
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8852
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8853
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8851
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8854, metadata !DIExpression()), !dbg !8855
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8856
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !8857
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8857
  %call1 = call float @RNA_float_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i64 0, i64 0)), !dbg !8858
  store float %call1, float* %fac, align 4, !dbg !8855
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !8859, metadata !DIExpression()), !dbg !8860
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8861
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !8862
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !8862
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)), !dbg !8863
  store i32 %call3, i32* %subset_type, align 4, !dbg !8860
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !8864, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !8866, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !8868, metadata !DIExpression()), !dbg !8869
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8870
  %6 = load i32, i32* %subset_type, align 4, !dbg !8871
  %call4 = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %5, i32 %6, i32* %vgroup_tot, i32* %subset_count), !dbg !8872
  store i8* %call4, i8** %vgroup_validmap, align 8, !dbg !8869
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8873
  %8 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8874
  %9 = load i32, i32* %vgroup_tot, align 4, !dbg !8875
  %10 = load i32, i32* %subset_count, align 4, !dbg !8876
  %11 = load float, float* %fac, align 4, !dbg !8877
  call void @vgroup_blend_subset(%struct.Object* %7, i8* %8, i32 %9, i32 %10, float %11), !dbg !8878
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8879
  %13 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8880
  call void %12(i8* %13), !dbg !8879
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8881
  %id = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 0, !dbg !8882
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8883
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8884
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8885
  %17 = bitcast %struct.Object* %16 to i8*, !dbg !8885
  call void @WM_event_add_notifier(%struct.bContext* %15, i32 85393408, i8* %17), !dbg !8886
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8887
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8888
  %data = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 19, !dbg !8889
  %20 = load i8*, i8** %data, align 8, !dbg !8889
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 274399232, i8* %20), !dbg !8890
  ret i32 4, !dbg !8891
}

declare dso_local %struct.PropertyRNA* @RNA_def_property(i8*, i8*, i32, i32) #2

declare dso_local void @RNA_def_property_ui_text(%struct.PropertyRNA*, i8*, i8*) #2

declare dso_local void @RNA_def_property_range(%struct.PropertyRNA*, double, double) #2

declare dso_local void @RNA_def_property_float_default(%struct.PropertyRNA*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_clean(%struct.wmOperatorType* %ot) #0 !dbg !8892 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8893, metadata !DIExpression()), !dbg !8894
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8895
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8896
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.87, i64 0, i64 0), i8** %name, align 8, !dbg !8897
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8898
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8899
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.88, i64 0, i64 0), i8** %idname, align 8, !dbg !8900
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8901
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8902
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.89, i64 0, i64 0), i8** %description, align 8, !dbg !8903
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8904
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8905
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8906
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8907
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8908
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_clean_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8909
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8910
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8911
  store i16 3, i16* %flag, align 8, !dbg !8912
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8913
  call void @vgroup_operator_subset_select_props(%struct.wmOperatorType* %6, i8 zeroext 1), !dbg !8914
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8915
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8916
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8916
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8915
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.92, i64 0, i64 0), float 0.000000e+00, float 0x3FEFAE1480000000), !dbg !8917
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8918
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8919
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8919
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8918
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.95, i64 0, i64 0)), !dbg !8920
  ret void, !dbg !8921
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_clean_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8922 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %limit = alloca float, align 4
  %keep_single = alloca i8, align 1
  %subset_type = alloca i32, align 4
  %subset_count = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8923, metadata !DIExpression()), !dbg !8924
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8925, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8927, metadata !DIExpression()), !dbg !8928
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8929
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !8930
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !8928
  call void @llvm.dbg.declare(metadata float* %limit, metadata !8931, metadata !DIExpression()), !dbg !8932
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8933
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !8934
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8934
  %call1 = call float @RNA_float_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0)), !dbg !8935
  store float %call1, float* %limit, align 4, !dbg !8932
  call void @llvm.dbg.declare(metadata i8* %keep_single, metadata !8936, metadata !DIExpression()), !dbg !8937
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8938
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !8939
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !8939
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i64 0, i64 0)), !dbg !8940
  %conv = trunc i32 %call3 to i8, !dbg !8940
  store i8 %conv, i8* %keep_single, align 1, !dbg !8937
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !8941, metadata !DIExpression()), !dbg !8942
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8943
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !8944
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !8944
  %call5 = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)), !dbg !8945
  store i32 %call5, i32* %subset_type, align 4, !dbg !8942
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !8946, metadata !DIExpression()), !dbg !8947
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !8948, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !8950, metadata !DIExpression()), !dbg !8951
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8952
  %8 = load i32, i32* %subset_type, align 4, !dbg !8953
  %call6 = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %7, i32 %8, i32* %vgroup_tot, i32* %subset_count), !dbg !8954
  store i8* %call6, i8** %vgroup_validmap, align 8, !dbg !8951
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8955
  %10 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8956
  %11 = load i32, i32* %vgroup_tot, align 4, !dbg !8957
  %12 = load i32, i32* %subset_count, align 4, !dbg !8958
  %13 = load float, float* %limit, align 4, !dbg !8959
  %14 = load i8, i8* %keep_single, align 1, !dbg !8960
  call void @vgroup_clean_subset(%struct.Object* %9, i8* %10, i32 %11, i32 %12, float %13, i8 zeroext %14), !dbg !8961
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8962
  %16 = load i8*, i8** %vgroup_validmap, align 8, !dbg !8963
  call void %15(i8* %16), !dbg !8962
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8964
  %id = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 0, !dbg !8965
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !8966
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8967
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8968
  %20 = bitcast %struct.Object* %19 to i8*, !dbg !8968
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 85393408, i8* %20), !dbg !8969
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8970
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8971
  %data = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 19, !dbg !8972
  %23 = load i8*, i8** %data, align 8, !dbg !8972
  call void @WM_event_add_notifier(%struct.bContext* %21, i32 274399232, i8* %23), !dbg !8973
  ret i32 4, !dbg !8974
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_quantize(%struct.wmOperatorType* %ot) #0 !dbg !8975 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8976, metadata !DIExpression()), !dbg !8977
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8978
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8979
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.96, i64 0, i64 0), i8** %name, align 8, !dbg !8980
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8981
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8982
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.97, i64 0, i64 0), i8** %idname, align 8, !dbg !8983
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8984
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8985
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.98, i64 0, i64 0), i8** %description, align 8, !dbg !8986
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8987
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !8988
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8989
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8990
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8991
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_quantize_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8992
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8993
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8994
  store i16 3, i16* %flag, align 8, !dbg !8995
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8996
  call void @vgroup_operator_subset_select_props(%struct.wmOperatorType* %6, i8 zeroext 1), !dbg !8997
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8998
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8999
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8999
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8998
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i64 0, i64 0), i32 4, i32 1, i32 1000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.101, i64 0, i64 0), i32 1, i32 100), !dbg !9000
  ret void, !dbg !9001
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_quantize_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9002 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %steps = alloca i32, align 4
  %subset_type = alloca i32, align 4
  %subset_count = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9003, metadata !DIExpression()), !dbg !9004
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9005, metadata !DIExpression()), !dbg !9006
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9007, metadata !DIExpression()), !dbg !9008
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9009
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9010
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9008
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !9011, metadata !DIExpression()), !dbg !9012
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9013
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !9014
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9014
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i64 0, i64 0)), !dbg !9015
  store i32 %call1, i32* %steps, align 4, !dbg !9012
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !9016, metadata !DIExpression()), !dbg !9017
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9018
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !9019
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !9019
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)), !dbg !9020
  store i32 %call3, i32* %subset_type, align 4, !dbg !9017
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !9021, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !9023, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !9025, metadata !DIExpression()), !dbg !9026
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9027
  %6 = load i32, i32* %subset_type, align 4, !dbg !9028
  %call4 = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %5, i32 %6, i32* %vgroup_tot, i32* %subset_count), !dbg !9029
  store i8* %call4, i8** %vgroup_validmap, align 8, !dbg !9026
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9030
  %8 = load i8*, i8** %vgroup_validmap, align 8, !dbg !9031
  %9 = load i32, i32* %vgroup_tot, align 4, !dbg !9032
  %10 = load i32, i32* %subset_count, align 4, !dbg !9033
  %11 = load i32, i32* %steps, align 4, !dbg !9034
  call void @vgroup_quantize_subset(%struct.Object* %7, i8* %8, i32 %9, i32 %10, i32 %11), !dbg !9035
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9036
  %13 = load i8*, i8** %vgroup_validmap, align 8, !dbg !9037
  call void %12(i8* %13), !dbg !9036
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9038
  %id = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 0, !dbg !9039
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !9040
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9041
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9042
  %17 = bitcast %struct.Object* %16 to i8*, !dbg !9042
  call void @WM_event_add_notifier(%struct.bContext* %15, i32 85393408, i8* %17), !dbg !9043
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9044
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9045
  %data = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 19, !dbg !9046
  %20 = load i8*, i8** %data, align 8, !dbg !9046
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 274399232, i8* %20), !dbg !9047
  ret i32 4, !dbg !9048
}

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_limit_total(%struct.wmOperatorType* %ot) #0 !dbg !9049 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9052
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9053
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.102, i64 0, i64 0), i8** %name, align 8, !dbg !9054
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9055
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9056
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.103, i64 0, i64 0), i8** %idname, align 8, !dbg !9057
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9058
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9059
  store i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.104, i64 0, i64 0), i8** %description, align 8, !dbg !9060
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9061
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !9062
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !9063
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9064
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9065
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_limit_total_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9066
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9067
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9068
  store i16 3, i16* %flag, align 8, !dbg !9069
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9070
  call void @vgroup_operator_subset_select_props(%struct.wmOperatorType* %6, i8 zeroext 0), !dbg !9071
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9072
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !9073
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9073
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !9072
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), i32 4, i32 1, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.105, i64 0, i64 0), i32 1, i32 32), !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_limit_total_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9076 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %limit = alloca i32, align 4
  %subset_type = alloca i32, align 4
  %subset_count = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  %remove_tot = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9077, metadata !DIExpression()), !dbg !9078
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9079, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9081, metadata !DIExpression()), !dbg !9082
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9083
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9084
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9082
  call void @llvm.dbg.declare(metadata i32* %limit, metadata !9085, metadata !DIExpression()), !dbg !9086
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9087
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !9088
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9088
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0)), !dbg !9089
  store i32 %call1, i32* %limit, align 4, !dbg !9086
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !9090, metadata !DIExpression()), !dbg !9091
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9092
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !9093
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !9093
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)), !dbg !9094
  store i32 %call3, i32* %subset_type, align 4, !dbg !9091
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !9095, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !9097, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !9099, metadata !DIExpression()), !dbg !9100
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9101
  %6 = load i32, i32* %subset_type, align 4, !dbg !9102
  %call4 = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %5, i32 %6, i32* %vgroup_tot, i32* %subset_count), !dbg !9103
  store i8* %call4, i8** %vgroup_validmap, align 8, !dbg !9100
  call void @llvm.dbg.declare(metadata i32* %remove_tot, metadata !9104, metadata !DIExpression()), !dbg !9105
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9106
  %8 = load i8*, i8** %vgroup_validmap, align 8, !dbg !9107
  %9 = load i32, i32* %vgroup_tot, align 4, !dbg !9108
  %10 = load i32, i32* %subset_count, align 4, !dbg !9109
  %11 = load i32, i32* %limit, align 4, !dbg !9110
  %call5 = call i32 @vgroup_limit_total_subset(%struct.Object* %7, i8* %8, i32 %9, i32 %10, i32 %11), !dbg !9111
  store i32 %call5, i32* %remove_tot, align 4, !dbg !9105
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9112
  %13 = load i8*, i8** %vgroup_validmap, align 8, !dbg !9113
  call void %12(i8* %13), !dbg !9112
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9114
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 8, !dbg !9115
  %15 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9115
  %16 = load i32, i32* %remove_tot, align 4, !dbg !9116
  %tobool = icmp ne i32 %16, 0, !dbg !9116
  %17 = zext i1 %tobool to i64, !dbg !9116
  %cond = select i1 %tobool, i32 2, i32 16, !dbg !9116
  %18 = load i32, i32* %remove_tot, align 4, !dbg !9117
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %15, i32 %cond, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.212, i64 0, i64 0), i32 %18), !dbg !9118
  %19 = load i32, i32* %remove_tot, align 4, !dbg !9119
  %tobool6 = icmp ne i32 %19, 0, !dbg !9119
  br i1 %tobool6, label %if.then, label %if.else, !dbg !9121

if.then:                                          ; preds = %entry
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9122
  %id = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 0, !dbg !9124
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !9125
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9126
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9127
  %23 = bitcast %struct.Object* %22 to i8*, !dbg !9127
  call void @WM_event_add_notifier(%struct.bContext* %21, i32 85393408, i8* %23), !dbg !9128
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9129
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9130
  %data = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 19, !dbg !9131
  %26 = load i8*, i8** %data, align 8, !dbg !9131
  call void @WM_event_add_notifier(%struct.bContext* %24, i32 274399232, i8* %26), !dbg !9132
  store i32 4, i32* %retval, align 4, !dbg !9133
  br label %return, !dbg !9133

if.else:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !9134
  br label %return, !dbg !9134

return:                                           ; preds = %if.else, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !9136
  ret i32 %27, !dbg !9136
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_mirror(%struct.wmOperatorType* %ot) #0 !dbg !9137 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9140
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9141
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.106, i64 0, i64 0), i8** %name, align 8, !dbg !9142
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9143
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9144
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.107, i64 0, i64 0), i8** %idname, align 8, !dbg !9145
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9146
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9147
  store i8* getelementptr inbounds ([154 x i8], [154 x i8]* @.str.108, i64 0, i64 0), i8** %description, align 8, !dbg !9148
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9149
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !9150
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !9151
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9152
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9153
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_mirror_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9154
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9155
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9156
  store i16 3, i16* %flag, align 8, !dbg !9157
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9158
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9159
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9159
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9158
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.109, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i64 0, i64 0)), !dbg !9160
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9161
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !9162
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !9162
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !9161
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.112, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.114, i64 0, i64 0)), !dbg !9163
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9164
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !9165
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !9165
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !9164
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.116, i64 0, i64 0)), !dbg !9166
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9167
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !9168
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !9168
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !9167
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.119, i64 0, i64 0)), !dbg !9169
  ret void, !dbg !9170
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_mirror_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9171 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %totmirr = alloca i32, align 4
  %totfail = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9172, metadata !DIExpression()), !dbg !9173
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9176, metadata !DIExpression()), !dbg !9177
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9178
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9179
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9177
  call void @llvm.dbg.declare(metadata i32* %totmirr, metadata !9180, metadata !DIExpression()), !dbg !9181
  store i32 0, i32* %totmirr, align 4, !dbg !9181
  call void @llvm.dbg.declare(metadata i32* %totfail, metadata !9182, metadata !DIExpression()), !dbg !9183
  store i32 0, i32* %totfail, align 4, !dbg !9183
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9184
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9185
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9186
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9186
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.109, i64 0, i64 0)), !dbg !9187
  %conv = trunc i32 %call1 to i8, !dbg !9187
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9188
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9189
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !9189
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.112, i64 0, i64 0)), !dbg !9190
  %conv4 = trunc i32 %call3 to i8, !dbg !9190
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9191
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9192
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !9192
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i64 0, i64 0)), !dbg !9193
  %conv7 = trunc i32 %call6 to i8, !dbg !9193
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9194
  %ptr8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !9195
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !9195
  %call9 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i64 0, i64 0)), !dbg !9196
  %conv10 = trunc i32 %call9 to i8, !dbg !9196
  call void @ED_vgroup_mirror(%struct.Object* %1, i8 zeroext %conv, i8 zeroext %conv4, i8 zeroext %conv7, i8 zeroext %conv10, i32* %totmirr, i32* %totfail), !dbg !9197
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9198
  %11 = load i32, i32* %totmirr, align 4, !dbg !9199
  %12 = load i32, i32* %totfail, align 4, !dbg !9200
  call void @ED_mesh_report_mirror(%struct.wmOperator* %10, i32 %11, i32 %12), !dbg !9201
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9202
  %id = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 0, !dbg !9203
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !9204
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9205
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9206
  %16 = bitcast %struct.Object* %15 to i8*, !dbg !9206
  call void @WM_event_add_notifier(%struct.bContext* %14, i32 85393408, i8* %16), !dbg !9207
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9208
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9209
  %data = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 19, !dbg !9210
  %19 = load i8*, i8** %data, align 8, !dbg !9210
  call void @WM_event_add_notifier(%struct.bContext* %17, i32 274399232, i8* %19), !dbg !9211
  ret i32 4, !dbg !9212
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_copy_to_linked(%struct.wmOperatorType* %ot) #0 !dbg !9213 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9214, metadata !DIExpression()), !dbg !9215
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9216
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9217
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.120, i64 0, i64 0), i8** %name, align 8, !dbg !9218
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9219
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9220
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.121, i64 0, i64 0), i8** %idname, align 8, !dbg !9221
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9222
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9223
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i64 0, i64 0), i8** %description, align 8, !dbg !9224
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9225
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !9226
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !9227
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9228
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9229
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_copy_to_linked_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9230
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9231
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9232
  store i16 3, i16* %flag, align 8, !dbg !9233
  ret void, !dbg !9234
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_copy_to_linked_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !9235 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %base = alloca %struct.Base*, align 8
  %retval2 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9236, metadata !DIExpression()), !dbg !9237
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !9238, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9240, metadata !DIExpression()), !dbg !9241
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9242
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !9243
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !9241
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9244, metadata !DIExpression()), !dbg !9245
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9246
  %call1 = call %struct.Object* @ED_object_context(%struct.bContext* %1), !dbg !9247
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !9245
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !9248, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !9252, metadata !DIExpression()), !dbg !9253
  store i32 2, i32* %retval2, align 4, !dbg !9253
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9254
  %base3 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 5, !dbg !9256
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base3, i32 0, i32 0, !dbg !9257
  %3 = load i8*, i8** %first, align 8, !dbg !9257
  %4 = bitcast i8* %3 to %struct.Base*, !dbg !9254
  store %struct.Base* %4, %struct.Base** %base, align 8, !dbg !9258
  br label %for.cond, !dbg !9259

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9260
  %tobool = icmp ne %struct.Base* %5, null, !dbg !9262
  br i1 %tobool, label %for.body, label %for.end, !dbg !9262

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9263
  %object = getelementptr inbounds %struct.Base, %struct.Base* %6, i32 0, i32 7, !dbg !9266
  %7 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9266
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !9267
  %8 = load i16, i16* %type, align 8, !dbg !9267
  %conv = sext i16 %8 to i32, !dbg !9263
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9268
  %type4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !9269
  %10 = load i16, i16* %type4, align 8, !dbg !9269
  %conv5 = sext i16 %10 to i32, !dbg !9268
  %cmp = icmp eq i32 %conv, %conv5, !dbg !9270
  br i1 %cmp, label %if.then, label %if.end25, !dbg !9271

if.then:                                          ; preds = %for.body
  %11 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9272
  %object7 = getelementptr inbounds %struct.Base, %struct.Base* %11, i32 0, i32 7, !dbg !9275
  %12 = load %struct.Object*, %struct.Object** %object7, align 8, !dbg !9275
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9276
  %cmp8 = icmp ne %struct.Object* %12, %13, !dbg !9277
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !9278

land.lhs.true:                                    ; preds = %if.then
  %14 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9279
  %object10 = getelementptr inbounds %struct.Base, %struct.Base* %14, i32 0, i32 7, !dbg !9280
  %15 = load %struct.Object*, %struct.Object** %object10, align 8, !dbg !9280
  %data = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 19, !dbg !9281
  %16 = load i8*, i8** %data, align 8, !dbg !9281
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9282
  %data11 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !9283
  %18 = load i8*, i8** %data11, align 8, !dbg !9283
  %cmp12 = icmp eq i8* %16, %18, !dbg !9284
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !9285

if.then14:                                        ; preds = %land.lhs.true
  %19 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9286
  %object15 = getelementptr inbounds %struct.Base, %struct.Base* %19, i32 0, i32 7, !dbg !9288
  %20 = load %struct.Object*, %struct.Object** %object15, align 8, !dbg !9288
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 25, !dbg !9289
  call void @BLI_freelistN(%struct.ListBase* %defbase), !dbg !9290
  %21 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9291
  %object16 = getelementptr inbounds %struct.Base, %struct.Base* %21, i32 0, i32 7, !dbg !9292
  %22 = load %struct.Object*, %struct.Object** %object16, align 8, !dbg !9292
  %defbase17 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 25, !dbg !9293
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9294
  %defbase18 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 25, !dbg !9295
  call void @BLI_duplicatelist(%struct.ListBase* %defbase17, %struct.ListBase* %defbase18), !dbg !9296
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9297
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 97, !dbg !9298
  %25 = load i16, i16* %actdef, align 2, !dbg !9298
  %26 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9299
  %object19 = getelementptr inbounds %struct.Base, %struct.Base* %26, i32 0, i32 7, !dbg !9300
  %27 = load %struct.Object*, %struct.Object** %object19, align 8, !dbg !9300
  %actdef20 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 97, !dbg !9301
  store i16 %25, i16* %actdef20, align 2, !dbg !9302
  %28 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9303
  %object21 = getelementptr inbounds %struct.Base, %struct.Base* %28, i32 0, i32 7, !dbg !9304
  %29 = load %struct.Object*, %struct.Object** %object21, align 8, !dbg !9304
  %id = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 0, !dbg !9305
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !9306
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9307
  %31 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9308
  %object22 = getelementptr inbounds %struct.Base, %struct.Base* %31, i32 0, i32 7, !dbg !9309
  %32 = load %struct.Object*, %struct.Object** %object22, align 8, !dbg !9309
  %33 = bitcast %struct.Object* %32 to i8*, !dbg !9308
  call void @WM_event_add_notifier(%struct.bContext* %30, i32 85393408, i8* %33), !dbg !9310
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9311
  %35 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9312
  %object23 = getelementptr inbounds %struct.Base, %struct.Base* %35, i32 0, i32 7, !dbg !9313
  %36 = load %struct.Object*, %struct.Object** %object23, align 8, !dbg !9313
  %data24 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 19, !dbg !9314
  %37 = load i8*, i8** %data24, align 8, !dbg !9314
  call void @WM_event_add_notifier(%struct.bContext* %34, i32 274464768, i8* %37), !dbg !9315
  store i32 4, i32* %retval2, align 4, !dbg !9316
  br label %if.end, !dbg !9317

if.end:                                           ; preds = %if.then14, %land.lhs.true, %if.then
  br label %if.end25, !dbg !9318

if.end25:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9319

for.inc:                                          ; preds = %if.end25
  %38 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9320
  %next = getelementptr inbounds %struct.Base, %struct.Base* %38, i32 0, i32 0, !dbg !9321
  %39 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !9321
  store %struct.Base* %39, %struct.Base** %base, align 8, !dbg !9322
  br label %for.cond, !dbg !9323, !llvm.loop !9324

for.end:                                          ; preds = %for.cond
  %40 = load i32, i32* %retval2, align 4, !dbg !9326
  ret i32 %40, !dbg !9327
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_copy_to_selected(%struct.wmOperatorType* %ot) #0 !dbg !9328 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9329, metadata !DIExpression()), !dbg !9330
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9331
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9332
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.123, i64 0, i64 0), i8** %name, align 8, !dbg !9333
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9334
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9335
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.124, i64 0, i64 0), i8** %idname, align 8, !dbg !9336
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9337
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9338
  store i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.125, i64 0, i64 0), i8** %description, align 8, !dbg !9339
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9340
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !9341
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !9342
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9343
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9344
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_copy_to_selected_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9345
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9346
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9347
  store i16 3, i16* %flag, align 8, !dbg !9348
  ret void, !dbg !9349
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_copy_to_selected_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9350 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obact = alloca %struct.Object*, align 8
  %changed_tot = alloca i32, align 4
  %fail = alloca i32, align 4
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9351, metadata !DIExpression()), !dbg !9352
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9353, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !9355, metadata !DIExpression()), !dbg !9356
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9357
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9358
  store %struct.Object* %call, %struct.Object** %obact, align 8, !dbg !9356
  call void @llvm.dbg.declare(metadata i32* %changed_tot, metadata !9359, metadata !DIExpression()), !dbg !9360
  store i32 0, i32* %changed_tot, align 4, !dbg !9360
  call void @llvm.dbg.declare(metadata i32* %fail, metadata !9361, metadata !DIExpression()), !dbg !9362
  store i32 0, i32* %fail, align 4, !dbg !9362
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !9363, metadata !DIExpression()), !dbg !9365
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !9366, metadata !DIExpression()), !dbg !9365
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9365
  %call1 = call i32 @CTX_data_selected_editable_objects(%struct.bContext* %1, %struct.ListBase* %ctx_data_list), !dbg !9365
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !9375
  %2 = load i8*, i8** %first, align 8, !dbg !9375
  %3 = bitcast i8* %2 to %struct.CollectionPointerLink*, !dbg !9375
  store %struct.CollectionPointerLink* %3, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9375
  br label %for.cond, !dbg !9375

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9377
  %tobool = icmp ne %struct.CollectionPointerLink* %4, null, !dbg !9375
  br i1 %tobool, label %for.body, label %for.end, !dbg !9375

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9379, metadata !DIExpression()), !dbg !9381
  %5 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9381
  %ptr = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %5, i32 0, i32 2, !dbg !9381
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !9381
  %6 = load i8*, i8** %data, align 8, !dbg !9381
  %7 = bitcast i8* %6 to %struct.Object*, !dbg !9381
  store %struct.Object* %7, %struct.Object** %ob, align 8, !dbg !9381
  %8 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !9382
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9385
  %cmp = icmp ne %struct.Object* %8, %9, !dbg !9386
  br i1 %cmp, label %if.then, label %if.end6, !dbg !9387

if.then:                                          ; preds = %for.body
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9388
  %11 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !9391
  %call2 = call zeroext i8 @ED_vgroup_array_copy(%struct.Object* %10, %struct.Object* %11), !dbg !9392
  %tobool3 = icmp ne i8 %call2, 0, !dbg !9392
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !9393

if.then4:                                         ; preds = %if.then
  %12 = load i32, i32* %changed_tot, align 4, !dbg !9394
  %inc = add nsw i32 %12, 1, !dbg !9394
  store i32 %inc, i32* %changed_tot, align 4, !dbg !9394
  br label %if.end, !dbg !9395

if.else:                                          ; preds = %if.then
  %13 = load i32, i32* %fail, align 4, !dbg !9396
  %inc5 = add nsw i32 %13, 1, !dbg !9396
  store i32 %inc5, i32* %fail, align 4, !dbg !9396
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end6, !dbg !9397

if.end6:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9398

for.inc:                                          ; preds = %if.end6
  %14 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9377
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %14, i32 0, i32 0, !dbg !9377
  %15 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !9377
  store %struct.CollectionPointerLink* %15, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9377
  br label %for.cond, !dbg !9377, !llvm.loop !9399

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !9401
  %16 = load i32, i32* %changed_tot, align 4, !dbg !9402
  %cmp7 = icmp eq i32 %16, 0, !dbg !9404
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false, !dbg !9405

land.lhs.true:                                    ; preds = %for.end
  %17 = load i32, i32* %fail, align 4, !dbg !9406
  %cmp8 = icmp eq i32 %17, 0, !dbg !9407
  br i1 %cmp8, label %if.then10, label %lor.lhs.false, !dbg !9408

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.end
  %18 = load i32, i32* %fail, align 4, !dbg !9409
  %tobool9 = icmp ne i32 %18, 0, !dbg !9409
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9410

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9411
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 8, !dbg !9413
  %20 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9413
  %21 = load i32, i32* %changed_tot, align 4, !dbg !9414
  %22 = load i32, i32* %fail, align 4, !dbg !9415
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %20, i32 32, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.213, i64 0, i64 0), i32 %21, i32 %22), !dbg !9416
  br label %if.end11, !dbg !9417

if.end11:                                         ; preds = %if.then10, %lor.lhs.false
  ret i32 4, !dbg !9418
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_transfer_weight(%struct.wmOperatorType* %ot) #0 !dbg !9419 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9420, metadata !DIExpression()), !dbg !9421
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9422
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9423
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0), i8** %name, align 8, !dbg !9424
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9425
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9426
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.127, i64 0, i64 0), i8** %idname, align 8, !dbg !9427
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9428
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9429
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.128, i64 0, i64 0), i8** %description, align 8, !dbg !9430
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9431
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !9432
  store i32 (%struct.bContext*)* @vertex_group_mesh_supported_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !9433
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9434
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9435
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_transfer_weight_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9436
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9437
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9438
  store i16 3, i16* %flag, align 8, !dbg !9439
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9440
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9441
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9441
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9440
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @WT_vertex_group_mode_item, i64 0, i64 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i64 0, i64 0)), !dbg !9442
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9443
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !9444
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !9445
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9446
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !9447
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !9447
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !9446
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @WT_method_item, i64 0, i64 0), i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i64 0, i64 0)), !dbg !9448
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9449
  %prop3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 13, !dbg !9450
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop3, align 8, !dbg !9451
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9452
  %srna4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 11, !dbg !9453
  %15 = load %struct.StructRNA*, %struct.StructRNA** %srna4, align 8, !dbg !9453
  %16 = bitcast %struct.StructRNA* %15 to i8*, !dbg !9452
  %call5 = call %struct.PropertyRNA* @RNA_def_enum(i8* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.132, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @WT_replace_mode_item, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i64 0, i64 0)), !dbg !9454
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9455
  %prop6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 13, !dbg !9456
  store %struct.PropertyRNA* %call5, %struct.PropertyRNA** %prop6, align 8, !dbg !9457
  ret void, !dbg !9458
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_mesh_supported_poll(%struct.bContext* %C) #0 !dbg !9459 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %data = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9460, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9462, metadata !DIExpression()), !dbg !9463
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9464
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9465
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9463
  call void @llvm.dbg.declare(metadata %struct.ID** %data, metadata !9466, metadata !DIExpression()), !dbg !9467
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9468
  %tobool = icmp ne %struct.Object* %1, null, !dbg !9469
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9469

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9470
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !9471
  %3 = load i8*, i8** %data1, align 8, !dbg !9471
  br label %cond.end, !dbg !9469

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9469

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !9469
  %4 = bitcast i8* %cond to %struct.ID*, !dbg !9469
  store %struct.ID* %4, %struct.ID** %data, align 8, !dbg !9467
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9472
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !9472
  br i1 %tobool2, label %land.lhs.true, label %land.end, !dbg !9473

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9474
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !9475
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !9476
  %7 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !9476
  %tobool3 = icmp ne %struct.Library* %7, null, !dbg !9474
  br i1 %tobool3, label %land.end, label %land.lhs.true4, !dbg !9477

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9478
  %type = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !9479
  %9 = load i16, i16* %type, align 8, !dbg !9479
  %conv = sext i16 %9 to i32, !dbg !9478
  %cmp = icmp eq i32 %conv, 1, !dbg !9480
  br i1 %cmp, label %land.lhs.true6, label %land.end, !dbg !9481

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %10 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !9482
  %tobool7 = icmp ne %struct.ID* %10, null, !dbg !9482
  br i1 %tobool7, label %land.rhs, label %land.end, !dbg !9483

land.rhs:                                         ; preds = %land.lhs.true6
  %11 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !9484
  %lib8 = getelementptr inbounds %struct.ID, %struct.ID* %11, i32 0, i32 3, !dbg !9485
  %12 = load %struct.Library*, %struct.Library** %lib8, align 8, !dbg !9485
  %tobool9 = icmp ne %struct.Library* %12, null, !dbg !9486
  %lnot = xor i1 %tobool9, true, !dbg !9486
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %cond.end
  %13 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %cond.end ], [ %lnot, %land.rhs ], !dbg !9487
  %land.ext = zext i1 %13 to i32, !dbg !9483
  ret i32 %land.ext, !dbg !9488
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_transfer_weight_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9489 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob_act = alloca %struct.Object*, align 8
  %dg_act = alloca %struct.bDeformGroup*, align 8
  %dg_act_name = alloca [64 x i8], align 16
  %fail = alloca i32, align 4
  %changed = alloca i8, align 1
  %vertex_group_mode = alloca i32, align 4
  %method = alloca i32, align 4
  %replace_mode = alloca i32, align 4
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %ob_src = alloca %struct.Object*, align 8
  %dg_src = alloca %struct.bDeformGroup*, align 8
  %dg_src64 = alloca %struct.bDeformGroup*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9490, metadata !DIExpression()), !dbg !9491
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9492, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9494, metadata !DIExpression()), !dbg !9495
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9496
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !9497
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !9495
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_act, metadata !9498, metadata !DIExpression()), !dbg !9499
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9500
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !9501
  store %struct.Object* %call1, %struct.Object** %ob_act, align 8, !dbg !9499
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg_act, metadata !9502, metadata !DIExpression()), !dbg !9503
  %2 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9504
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 25, !dbg !9505
  %3 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9506
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 97, !dbg !9507
  %4 = load i16, i16* %actdef, align 2, !dbg !9507
  %conv = zext i16 %4 to i32, !dbg !9506
  %sub = sub nsw i32 %conv, 1, !dbg !9508
  %call2 = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %sub), !dbg !9509
  %5 = bitcast i8* %call2 to %struct.bDeformGroup*, !dbg !9509
  store %struct.bDeformGroup* %5, %struct.bDeformGroup** %dg_act, align 8, !dbg !9503
  call void @llvm.dbg.declare(metadata [64 x i8]* %dg_act_name, metadata !9510, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.declare(metadata i32* %fail, metadata !9512, metadata !DIExpression()), !dbg !9513
  store i32 0, i32* %fail, align 4, !dbg !9513
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !9514, metadata !DIExpression()), !dbg !9515
  store i8 0, i8* %changed, align 1, !dbg !9515
  call void @llvm.dbg.declare(metadata i32* %vertex_group_mode, metadata !9516, metadata !DIExpression()), !dbg !9518
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9519
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9520
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9520
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i64 0, i64 0)), !dbg !9521
  store i32 %call3, i32* %vertex_group_mode, align 4, !dbg !9518
  call void @llvm.dbg.declare(metadata i32* %method, metadata !9522, metadata !DIExpression()), !dbg !9524
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9525
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !9526
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !9526
  %call5 = call i32 @RNA_enum_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i64 0, i64 0)), !dbg !9527
  store i32 %call5, i32* %method, align 4, !dbg !9524
  call void @llvm.dbg.declare(metadata i32* %replace_mode, metadata !9528, metadata !DIExpression()), !dbg !9530
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9531
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !9532
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !9532
  %call7 = call i32 @RNA_enum_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.132, i64 0, i64 0)), !dbg !9533
  store i32 %call7, i32* %replace_mode, align 4, !dbg !9530
  %12 = load i32, i32* %vertex_group_mode, align 4, !dbg !9534
  %cmp = icmp eq i32 %12, 1, !dbg !9536
  br i1 %cmp, label %if.then, label %if.end10, !dbg !9537

if.then:                                          ; preds = %entry
  %13 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_act, align 8, !dbg !9538
  %tobool = icmp ne %struct.bDeformGroup* %13, null, !dbg !9538
  br i1 %tobool, label %if.end, label %if.then9, !dbg !9541

if.then9:                                         ; preds = %if.then
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9542
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 8, !dbg !9544
  %15 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9544
  call void @BKE_report(%struct.ReportList* %15, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.214, i64 0, i64 0)), !dbg !9545
  store i32 4, i32* %retval, align 4, !dbg !9546
  br label %return, !dbg !9546

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !9547

if.end10:                                         ; preds = %if.end, %entry
  %16 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_act, align 8, !dbg !9548
  %tobool11 = icmp ne %struct.bDeformGroup* %16, null, !dbg !9548
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !9550

if.then12:                                        ; preds = %if.end10
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %dg_act_name, i64 0, i64 0, !dbg !9551
  %17 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_act, align 8, !dbg !9553
  %name = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %17, i32 0, i32 2, !dbg !9554
  %arraydecay13 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !9553
  %call14 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay13, i64 64), !dbg !9555
  br label %if.end15, !dbg !9556

if.end15:                                         ; preds = %if.then12, %if.end10
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !9557, metadata !DIExpression()), !dbg !9559
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !9560, metadata !DIExpression()), !dbg !9559
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9559
  %call16 = call i32 @CTX_data_selected_editable_objects(%struct.bContext* %18, %struct.ListBase* %ctx_data_list), !dbg !9559
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !9561
  %19 = load i8*, i8** %first, align 8, !dbg !9561
  %20 = bitcast i8* %19 to %struct.CollectionPointerLink*, !dbg !9561
  store %struct.CollectionPointerLink* %20, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9561
  br label %for.cond, !dbg !9561

for.cond:                                         ; preds = %for.inc77, %if.end15
  %21 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9563
  %tobool17 = icmp ne %struct.CollectionPointerLink* %21, null, !dbg !9561
  br i1 %tobool17, label %for.body, label %for.end79, !dbg !9561

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_src, metadata !9565, metadata !DIExpression()), !dbg !9567
  %22 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9567
  %ptr18 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %22, i32 0, i32 2, !dbg !9567
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr18, i32 0, i32 2, !dbg !9567
  %23 = load i8*, i8** %data, align 8, !dbg !9567
  %24 = bitcast i8* %23 to %struct.Object*, !dbg !9567
  store %struct.Object* %24, %struct.Object** %ob_src, align 8, !dbg !9567
  %25 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9568
  %26 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9571
  %cmp19 = icmp ne %struct.Object* %25, %26, !dbg !9572
  br i1 %cmp19, label %if.then21, label %if.end76, !dbg !9573

if.then21:                                        ; preds = %for.body
  %27 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9574
  %defbase22 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 25, !dbg !9577
  %call23 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %defbase22), !dbg !9578
  %tobool24 = icmp ne i8 %call23, 0, !dbg !9578
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !9579

if.then25:                                        ; preds = %if.then21
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9580
  %reports26 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %28, i32 0, i32 8, !dbg !9582
  %29 = load %struct.ReportList*, %struct.ReportList** %reports26, align 8, !dbg !9582
  %30 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9583
  %id = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 0, !dbg !9584
  %name27 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !9585
  %arraydecay28 = getelementptr inbounds [66 x i8], [66 x i8]* %name27, i64 0, i64 0, !dbg !9583
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay28, i64 2, !dbg !9586
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %29, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.215, i64 0, i64 0), i8* %add.ptr), !dbg !9587
  br label %for.inc77, !dbg !9588

if.else:                                          ; preds = %if.then21
  %31 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9589
  %type = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 3, !dbg !9591
  %32 = load i16, i16* %type, align 8, !dbg !9591
  %conv29 = sext i16 %32 to i32, !dbg !9589
  %cmp30 = icmp ne i32 %conv29, 1, !dbg !9592
  br i1 %cmp30, label %if.then32, label %if.end44, !dbg !9593

if.then32:                                        ; preds = %if.else
  %33 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9594
  %type33 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 3, !dbg !9597
  %34 = load i16, i16* %type33, align 8, !dbg !9597
  %conv34 = sext i16 %34 to i32, !dbg !9594
  %cmp35 = icmp ne i32 %conv34, 25, !dbg !9598
  br i1 %cmp35, label %if.then37, label %if.end43, !dbg !9599

if.then37:                                        ; preds = %if.then32
  %35 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9600
  %reports38 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %35, i32 0, i32 8, !dbg !9602
  %36 = load %struct.ReportList*, %struct.ReportList** %reports38, align 8, !dbg !9602
  %37 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9603
  %id39 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 0, !dbg !9604
  %name40 = getelementptr inbounds %struct.ID, %struct.ID* %id39, i32 0, i32 4, !dbg !9605
  %arraydecay41 = getelementptr inbounds [66 x i8], [66 x i8]* %name40, i64 0, i64 0, !dbg !9603
  %add.ptr42 = getelementptr inbounds i8, i8* %arraydecay41, i64 2, !dbg !9606
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %36, i32 16, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.216, i64 0, i64 0), i8* %add.ptr42), !dbg !9607
  br label %if.end43, !dbg !9608

if.end43:                                         ; preds = %if.then37, %if.then32
  br label %for.inc77, !dbg !9609

if.end44:                                         ; preds = %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44
  %38 = load i32, i32* %vertex_group_mode, align 4, !dbg !9610
  switch i32 %38, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb63
  ], !dbg !9611

sw.bb:                                            ; preds = %if.end45
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg_src, metadata !9612, metadata !DIExpression()), !dbg !9615
  %39 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9616
  %arraydecay46 = getelementptr inbounds [64 x i8], [64 x i8]* %dg_act_name, i64 0, i64 0, !dbg !9617
  %call47 = call %struct.bDeformGroup* @defgroup_find_name(%struct.Object* %39, i8* %arraydecay46), !dbg !9618
  store %struct.bDeformGroup* %call47, %struct.bDeformGroup** %dg_src, align 8, !dbg !9619
  %40 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_src, align 8, !dbg !9620
  %cmp48 = icmp eq %struct.bDeformGroup* %40, null, !dbg !9622
  br i1 %cmp48, label %if.then50, label %if.end57, !dbg !9623

if.then50:                                        ; preds = %sw.bb
  %41 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9624
  %reports51 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %41, i32 0, i32 8, !dbg !9626
  %42 = load %struct.ReportList*, %struct.ReportList** %reports51, align 8, !dbg !9626
  %43 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9627
  %id52 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 0, !dbg !9628
  %name53 = getelementptr inbounds %struct.ID, %struct.ID* %id52, i32 0, i32 4, !dbg !9629
  %arraydecay54 = getelementptr inbounds [66 x i8], [66 x i8]* %name53, i64 0, i64 0, !dbg !9627
  %add.ptr55 = getelementptr inbounds i8, i8* %arraydecay54, i64 2, !dbg !9630
  %arraydecay56 = getelementptr inbounds [64 x i8], [64 x i8]* %dg_act_name, i64 0, i64 0, !dbg !9631
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %42, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.217, i64 0, i64 0), i8* %add.ptr55, i8* %arraydecay56), !dbg !9632
  br label %for.inc77, !dbg !9633

if.end57:                                         ; preds = %sw.bb
  %44 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9634
  %45 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9636
  %46 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_src, align 8, !dbg !9637
  %47 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9638
  %48 = load i32, i32* %method, align 4, !dbg !9639
  %49 = load i32, i32* %replace_mode, align 4, !dbg !9640
  %50 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9641
  %call58 = call zeroext i8 @ed_vgroup_transfer_weight(%struct.Object* %44, %struct.Object* %45, %struct.bDeformGroup* %46, %struct.Scene* %47, i32 %48, i32 %49, %struct.wmOperator* %50), !dbg !9642
  %tobool59 = icmp ne i8 %call58, 0, !dbg !9642
  br i1 %tobool59, label %if.then60, label %if.else61, !dbg !9643

if.then60:                                        ; preds = %if.end57
  store i8 1, i8* %changed, align 1, !dbg !9644
  br label %if.end62, !dbg !9646

if.else61:                                        ; preds = %if.end57
  %51 = load i32, i32* %fail, align 4, !dbg !9647
  %inc = add nsw i32 %51, 1, !dbg !9647
  store i32 %inc, i32* %fail, align 4, !dbg !9647
  br label %if.end62

if.end62:                                         ; preds = %if.else61, %if.then60
  br label %sw.epilog, !dbg !9649

sw.bb63:                                          ; preds = %if.end45
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg_src64, metadata !9650, metadata !DIExpression()), !dbg !9652
  %52 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9653
  %defbase65 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 25, !dbg !9655
  %first66 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase65, i32 0, i32 0, !dbg !9656
  %53 = load i8*, i8** %first66, align 8, !dbg !9656
  %54 = bitcast i8* %53 to %struct.bDeformGroup*, !dbg !9653
  store %struct.bDeformGroup* %54, %struct.bDeformGroup** %dg_src64, align 8, !dbg !9657
  br label %for.cond67, !dbg !9658

for.cond67:                                       ; preds = %for.inc, %sw.bb63
  %55 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_src64, align 8, !dbg !9659
  %tobool68 = icmp ne %struct.bDeformGroup* %55, null, !dbg !9661
  br i1 %tobool68, label %for.body69, label %for.end, !dbg !9661

for.body69:                                       ; preds = %for.cond67
  %56 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9662
  %57 = load %struct.Object*, %struct.Object** %ob_src, align 8, !dbg !9665
  %58 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_src64, align 8, !dbg !9666
  %59 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9667
  %60 = load i32, i32* %method, align 4, !dbg !9668
  %61 = load i32, i32* %replace_mode, align 4, !dbg !9669
  %62 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9670
  %call70 = call zeroext i8 @ed_vgroup_transfer_weight(%struct.Object* %56, %struct.Object* %57, %struct.bDeformGroup* %58, %struct.Scene* %59, i32 %60, i32 %61, %struct.wmOperator* %62), !dbg !9671
  %tobool71 = icmp ne i8 %call70, 0, !dbg !9671
  br i1 %tobool71, label %if.then72, label %if.else73, !dbg !9672

if.then72:                                        ; preds = %for.body69
  store i8 1, i8* %changed, align 1, !dbg !9673
  br label %if.end75, !dbg !9675

if.else73:                                        ; preds = %for.body69
  %63 = load i32, i32* %fail, align 4, !dbg !9676
  %inc74 = add nsw i32 %63, 1, !dbg !9676
  store i32 %inc74, i32* %fail, align 4, !dbg !9676
  br label %if.end75

if.end75:                                         ; preds = %if.else73, %if.then72
  br label %for.inc, !dbg !9678

for.inc:                                          ; preds = %if.end75
  %64 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_src64, align 8, !dbg !9679
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %64, i32 0, i32 0, !dbg !9680
  %65 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !9680
  store %struct.bDeformGroup* %65, %struct.bDeformGroup** %dg_src64, align 8, !dbg !9681
  br label %for.cond67, !dbg !9682, !llvm.loop !9683

for.end:                                          ; preds = %for.cond67
  br label %sw.epilog, !dbg !9685

sw.default:                                       ; preds = %if.end45
  br label %sw.epilog, !dbg !9686

sw.epilog:                                        ; preds = %sw.default, %for.end, %if.end62
  br label %if.end76, !dbg !9687

if.end76:                                         ; preds = %sw.epilog, %for.body
  br label %for.inc77, !dbg !9688

for.inc77:                                        ; preds = %if.end76, %if.then50, %if.end43, %if.then25
  %66 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9563
  %next78 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %66, i32 0, i32 0, !dbg !9563
  %67 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next78, align 8, !dbg !9563
  store %struct.CollectionPointerLink* %67, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !9563
  br label %for.cond, !dbg !9563, !llvm.loop !9689

for.end79:                                        ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !9691
  %68 = load i8, i8* %changed, align 1, !dbg !9692
  %tobool80 = icmp ne i8 %68, 0, !dbg !9692
  br i1 %tobool80, label %if.then81, label %if.else89, !dbg !9694

if.then81:                                        ; preds = %for.end79
  %69 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_act, align 8, !dbg !9695
  %tobool82 = icmp ne %struct.bDeformGroup* %69, null, !dbg !9695
  br i1 %tobool82, label %if.then83, label %if.else85, !dbg !9698

if.then83:                                        ; preds = %if.then81
  %70 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9699
  %arraydecay84 = getelementptr inbounds [64 x i8], [64 x i8]* %dg_act_name, i64 0, i64 0, !dbg !9701
  call void @ED_vgroup_select_by_name(%struct.Object* %70, i8* %arraydecay84), !dbg !9702
  br label %if.end87, !dbg !9703

if.else85:                                        ; preds = %if.then81
  %71 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9704
  %call86 = call zeroext i8 @ED_vgroup_sync_from_pose(%struct.Object* %71), !dbg !9706
  br label %if.end87

if.end87:                                         ; preds = %if.else85, %if.then83
  %72 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9707
  %id88 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 0, !dbg !9708
  call void @DAG_id_tag_update(%struct.ID* %id88, i16 signext 2), !dbg !9709
  %73 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9710
  %74 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9711
  %75 = bitcast %struct.Object* %74 to i8*, !dbg !9711
  call void @WM_event_add_notifier(%struct.bContext* %73, i32 85393408, i8* %75), !dbg !9712
  %76 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9713
  %77 = load %struct.Object*, %struct.Object** %ob_act, align 8, !dbg !9714
  %78 = bitcast %struct.Object* %77 to i8*, !dbg !9714
  call void @WM_event_add_notifier(%struct.bContext* %76, i32 274464768, i8* %78), !dbg !9715
  store i32 4, i32* %retval, align 4, !dbg !9716
  br label %return, !dbg !9716

if.else89:                                        ; preds = %for.end79
  %79 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9717
  %reports90 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %79, i32 0, i32 8, !dbg !9720
  %80 = load %struct.ReportList*, %struct.ReportList** %reports90, align 8, !dbg !9720
  %list = getelementptr inbounds %struct.ReportList, %struct.ReportList* %80, i32 0, i32 0, !dbg !9721
  %call91 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %list), !dbg !9722
  %tobool92 = icmp ne i8 %call91, 0, !dbg !9722
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !9723

if.then93:                                        ; preds = %if.else89
  %81 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9724
  %reports94 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %81, i32 0, i32 8, !dbg !9726
  %82 = load %struct.ReportList*, %struct.ReportList** %reports94, align 8, !dbg !9726
  call void @BKE_report(%struct.ReportList* %82, i32 16, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.218, i64 0, i64 0)), !dbg !9727
  br label %if.end95, !dbg !9728

if.end95:                                         ; preds = %if.then93, %if.else89
  store i32 4, i32* %retval, align 4, !dbg !9729
  br label %return, !dbg !9729

return:                                           ; preds = %if.end95, %if.end87, %if.then9
  %83 = load i32, i32* %retval, align 4, !dbg !9730
  ret i32 %83, !dbg !9730
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_set_active(%struct.wmOperatorType* %ot) #0 !dbg !9731 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !9734, metadata !DIExpression()), !dbg !9735
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9736
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9737
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.134, i64 0, i64 0), i8** %name, align 8, !dbg !9738
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9739
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9740
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.135, i64 0, i64 0), i8** %idname, align 8, !dbg !9741
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9742
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9743
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.136, i64 0, i64 0), i8** %description, align 8, !dbg !9744
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9745
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !9746
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !9747
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9748
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9749
  store i32 (%struct.bContext*, %struct.wmOperator*)* @set_active_group_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9750
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9751
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 6, !dbg !9752
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !9753
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9754
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !9755
  store i16 3, i16* %flag, align 8, !dbg !9756
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9757
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !9758
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9758
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !9757
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.137, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @DummyRNA_NULL_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.138, i64 0, i64 0)), !dbg !9759
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !9760
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !9761
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %10, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @vgroup_itemf), !dbg !9762
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !9763
  call void @RNA_def_property_flag(%struct.PropertyRNA* %11, i32 536870912), !dbg !9764
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !9765
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9766
  %prop1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 13, !dbg !9767
  store %struct.PropertyRNA* %12, %struct.PropertyRNA** %prop1, align 8, !dbg !9768
  ret void, !dbg !9769
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_active_group_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9770 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %nr = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9771, metadata !DIExpression()), !dbg !9772
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9773, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9775, metadata !DIExpression()), !dbg !9776
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9777
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9778
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9776
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !9779, metadata !DIExpression()), !dbg !9780
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9781
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !9782
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9782
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.137, i64 0, i64 0)), !dbg !9783
  store i32 %call1, i32* %nr, align 4, !dbg !9780
  %3 = load i32, i32* %nr, align 4, !dbg !9784
  %add = add nsw i32 %3, 1, !dbg !9785
  %conv = trunc i32 %add to i16, !dbg !9784
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9786
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 97, !dbg !9787
  store i16 %conv, i16* %actdef, align 2, !dbg !9788
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9789
  %id = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 0, !dbg !9790
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !9791
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9792
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9793
  %8 = bitcast %struct.Object* %7 to i8*, !dbg !9793
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 274464768, i8* %8), !dbg !9794
  ret i32 4, !dbg !9795
}

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local void @RNA_def_enum_funcs(%struct.PropertyRNA*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @vgroup_itemf(%struct.bContext* %C, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9796 {
entry:
  %retval = alloca %struct.EnumPropertyItem*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  %ob = alloca %struct.Object*, align 8
  %tmp = alloca %struct.EnumPropertyItem, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %def = alloca %struct.bDeformGroup*, align 8
  %a = alloca i32, align 4
  %totitem = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9799, metadata !DIExpression()), !dbg !9800
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !9801, metadata !DIExpression()), !dbg !9802
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9803, metadata !DIExpression()), !dbg !9804
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9805, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9807, metadata !DIExpression()), !dbg !9808
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9809
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9810
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9808
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem* %tmp, metadata !9811, metadata !DIExpression()), !dbg !9812
  %1 = bitcast %struct.EnumPropertyItem* %tmp to i8*, !dbg !9812
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false), !dbg !9812
  %2 = bitcast i8* %1 to %struct.EnumPropertyItem*, !dbg !9812
  %3 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %2, i32 0, i32 1, !dbg !9812
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i32 0, i32 0), i8** %3, align 8, !dbg !9812
  %4 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %2, i32 0, i32 3, !dbg !9812
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i32 0, i32 0), i8** %4, align 8, !dbg !9812
  %5 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %2, i32 0, i32 4, !dbg !9812
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.86, i32 0, i32 0), i8** %5, align 8, !dbg !9812
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !9813, metadata !DIExpression()), !dbg !9814
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !9814
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %def, metadata !9815, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9817, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !9819, metadata !DIExpression()), !dbg !9820
  store i32 0, i32* %totitem, align 4, !dbg !9820
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9821
  %tobool = icmp ne %struct.Object* %6, null, !dbg !9821
  br i1 %tobool, label %if.end, label %if.then, !dbg !9823

if.then:                                          ; preds = %entry
  store %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @DummyRNA_NULL_items, i64 0, i64 0), %struct.EnumPropertyItem** %retval, align 8, !dbg !9824
  br label %return, !dbg !9824

if.end:                                           ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !9825
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9827
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 25, !dbg !9828
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase, i32 0, i32 0, !dbg !9829
  %8 = load i8*, i8** %first, align 8, !dbg !9829
  %9 = bitcast i8* %8 to %struct.bDeformGroup*, !dbg !9827
  store %struct.bDeformGroup* %9, %struct.bDeformGroup** %def, align 8, !dbg !9830
  br label %for.cond, !dbg !9831

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !9832
  %tobool1 = icmp ne %struct.bDeformGroup* %10, null, !dbg !9834
  br i1 %tobool1, label %for.body, label %for.end, !dbg !9834

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %a, align 4, !dbg !9835
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %tmp, i32 0, i32 0, !dbg !9837
  store i32 %11, i32* %value, align 8, !dbg !9838
  %icon = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %tmp, i32 0, i32 2, !dbg !9839
  store i32 201, i32* %icon, align 8, !dbg !9840
  %12 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !9841
  %name = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %12, i32 0, i32 2, !dbg !9842
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !9841
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %tmp, i32 0, i32 1, !dbg !9843
  store i8* %arraydecay, i8** %identifier, align 8, !dbg !9844
  %13 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !9845
  %name2 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %13, i32 0, i32 2, !dbg !9846
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %name2, i64 0, i64 0, !dbg !9845
  %name4 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %tmp, i32 0, i32 3, !dbg !9847
  store i8* %arraydecay3, i8** %name4, align 8, !dbg !9848
  call void @RNA_enum_item_add(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* %tmp), !dbg !9849
  br label %for.inc, !dbg !9850

for.inc:                                          ; preds = %for.body
  %14 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !9851
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %14, i32 0, i32 0, !dbg !9852
  %15 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !9852
  store %struct.bDeformGroup* %15, %struct.bDeformGroup** %def, align 8, !dbg !9853
  %16 = load i32, i32* %a, align 4, !dbg !9854
  %inc = add nsw i32 %16, 1, !dbg !9854
  store i32 %inc, i32* %a, align 4, !dbg !9854
  br label %for.cond, !dbg !9855, !llvm.loop !9856

for.end:                                          ; preds = %for.cond
  call void @RNA_enum_item_end(%struct.EnumPropertyItem** %item, i32* %totitem), !dbg !9858
  %17 = load i8*, i8** %r_free.addr, align 8, !dbg !9859
  store i8 1, i8* %17, align 1, !dbg !9860
  %18 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !9861
  store %struct.EnumPropertyItem* %18, %struct.EnumPropertyItem** %retval, align 8, !dbg !9862
  br label %return, !dbg !9862

return:                                           ; preds = %for.end, %if.then
  %19 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %retval, align 8, !dbg !9863
  ret %struct.EnumPropertyItem* %19, !dbg !9863
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_sort(%struct.wmOperatorType* %ot) #0 !dbg !3602 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9866
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9867
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.143, i64 0, i64 0), i8** %name, align 8, !dbg !9868
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9869
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9870
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.144, i64 0, i64 0), i8** %idname, align 8, !dbg !9871
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9872
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9873
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.145, i64 0, i64 0), i8** %description, align 8, !dbg !9874
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9875
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !9876
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !9877
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9878
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9879
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_group_sort_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9880
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9881
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9882
  store i16 3, i16* %flag, align 8, !dbg !9883
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9884
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9885
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9885
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9884
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @OBJECT_OT_vertex_group_sort.vgroup_sort_type, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.147, i64 0, i64 0)), !dbg !9886
  ret void, !dbg !9887
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_sort_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9888 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %name_array = alloca i8*, align 8
  %ret = alloca i32, align 4
  %sort_type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9889, metadata !DIExpression()), !dbg !9890
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9891, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9893, metadata !DIExpression()), !dbg !9894
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9895
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9896
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9894
  call void @llvm.dbg.declare(metadata i8** %name_array, metadata !9897, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9899, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.declare(metadata i32* %sort_type, metadata !9901, metadata !DIExpression()), !dbg !9902
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9903
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !9904
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9904
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9905
  store i32 %call1, i32* %sort_type, align 4, !dbg !9902
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9906
  %call2 = call i8* @vgroup_init_remap(%struct.Object* %3), !dbg !9907
  store i8* %call2, i8** %name_array, align 8, !dbg !9908
  %4 = load i32, i32* %sort_type, align 4, !dbg !9909
  switch i32 %4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
  ], !dbg !9910

sw.bb:                                            ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9911
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 25, !dbg !9913
  call void @BLI_sortlist(%struct.ListBase* %defbase, i32 (i8*, i8*)* @vgroup_sort_name), !dbg !9914
  br label %sw.epilog, !dbg !9915

sw.bb3:                                           ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9916
  call void @vgroup_sort_bone_hierarchy(%struct.Object* %6, %struct.ListBase* null), !dbg !9917
  br label %sw.epilog, !dbg !9918

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9919
  %8 = load i8*, i8** %name_array, align 8, !dbg !9920
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9921
  %call4 = call i32 @vgroup_do_remap(%struct.Object* %7, i8* %8, %struct.wmOperator* %9), !dbg !9922
  store i32 %call4, i32* %ret, align 4, !dbg !9923
  %10 = load i32, i32* %ret, align 4, !dbg !9924
  %cmp = icmp ne i32 %10, 2, !dbg !9926
  br i1 %cmp, label %if.then, label %if.end, !dbg !9927

if.then:                                          ; preds = %sw.epilog
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9928
  %id = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 0, !dbg !9930
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !9931
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9932
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9933
  %14 = bitcast %struct.Object* %13 to i8*, !dbg !9933
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 274464768, i8* %14), !dbg !9934
  br label %if.end, !dbg !9935

if.end:                                           ; preds = %if.then, %sw.epilog
  %15 = load i8*, i8** %name_array, align 8, !dbg !9936
  %tobool = icmp ne i8* %15, null, !dbg !9936
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !9938

if.then5:                                         ; preds = %if.end
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9939
  %17 = load i8*, i8** %name_array, align 8, !dbg !9940
  call void %16(i8* %17), !dbg !9939
  br label %if.end6, !dbg !9939

if.end6:                                          ; preds = %if.then5, %if.end
  %18 = load i32, i32* %ret, align 4, !dbg !9941
  ret i32 %18, !dbg !9942
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_group_move(%struct.wmOperatorType* %ot) #0 !dbg !3855 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9943, metadata !DIExpression()), !dbg !9944
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9945
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9946
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.152, i64 0, i64 0), i8** %name, align 8, !dbg !9947
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9948
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9949
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.153, i64 0, i64 0), i8** %idname, align 8, !dbg !9950
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9951
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9952
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.154, i64 0, i64 0), i8** %description, align 8, !dbg !9953
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9954
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !9955
  store i32 (%struct.bContext*)* @vertex_group_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !9956
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9957
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9958
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vgroup_move_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9959
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9960
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9961
  store i16 3, i16* %flag, align 8, !dbg !9962
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9963
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9964
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9964
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9963
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.155, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @OBJECT_OT_vertex_group_move.vgroup_slot_move, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.157, i64 0, i64 0)), !dbg !9965
  ret void, !dbg !9966
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vgroup_move_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9967 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %def = alloca %struct.bDeformGroup*, align 8
  %name_array = alloca i8*, align 8
  %dir = alloca i32, align 4
  %ret = alloca i32, align 4
  %prev = alloca i8*, align 8
  %next = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9970, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9972, metadata !DIExpression()), !dbg !9973
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9974
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !9975
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9973
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %def, metadata !9976, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.declare(metadata i8** %name_array, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !9980, metadata !DIExpression()), !dbg !9981
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9982
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !9983
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9983
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.155, i64 0, i64 0)), !dbg !9984
  store i32 %call1, i32* %dir, align 4, !dbg !9981
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9985, metadata !DIExpression()), !dbg !9986
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9987
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 25, !dbg !9988
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9989
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 97, !dbg !9990
  %5 = load i16, i16* %actdef, align 2, !dbg !9990
  %conv = zext i16 %5 to i32, !dbg !9989
  %sub = sub nsw i32 %conv, 1, !dbg !9991
  %call2 = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %sub), !dbg !9992
  %6 = bitcast i8* %call2 to %struct.bDeformGroup*, !dbg !9992
  store %struct.bDeformGroup* %6, %struct.bDeformGroup** %def, align 8, !dbg !9993
  %7 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !9994
  %tobool = icmp ne %struct.bDeformGroup* %7, null, !dbg !9994
  br i1 %tobool, label %if.end, label %if.then, !dbg !9996

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9997
  br label %return, !dbg !9997

if.end:                                           ; preds = %entry
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9999
  %call3 = call i8* @vgroup_init_remap(%struct.Object* %8), !dbg !10000
  store i8* %call3, i8** %name_array, align 8, !dbg !10001
  %9 = load i32, i32* %dir, align 4, !dbg !10002
  %cmp = icmp eq i32 %9, 1, !dbg !10004
  br i1 %cmp, label %if.then5, label %if.else, !dbg !10005

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %prev, metadata !10006, metadata !DIExpression()), !dbg !10008
  %10 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !10009
  %prev6 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %10, i32 0, i32 1, !dbg !10010
  %11 = load %struct.bDeformGroup*, %struct.bDeformGroup** %prev6, align 8, !dbg !10010
  %12 = bitcast %struct.bDeformGroup* %11 to i8*, !dbg !10009
  store i8* %12, i8** %prev, align 8, !dbg !10008
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10011
  %defbase7 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 25, !dbg !10012
  %14 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !10013
  %15 = bitcast %struct.bDeformGroup* %14 to i8*, !dbg !10013
  call void @BLI_remlink(%struct.ListBase* %defbase7, i8* %15), !dbg !10014
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10015
  %defbase8 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 25, !dbg !10016
  %17 = load i8*, i8** %prev, align 8, !dbg !10017
  %18 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !10018
  %19 = bitcast %struct.bDeformGroup* %18 to i8*, !dbg !10018
  call void @BLI_insertlinkbefore(%struct.ListBase* %defbase8, i8* %17, i8* %19), !dbg !10019
  br label %if.end12, !dbg !10020

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %next, metadata !10021, metadata !DIExpression()), !dbg !10023
  %20 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !10024
  %next9 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %20, i32 0, i32 0, !dbg !10025
  %21 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next9, align 8, !dbg !10025
  %22 = bitcast %struct.bDeformGroup* %21 to i8*, !dbg !10024
  store i8* %22, i8** %next, align 8, !dbg !10023
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10026
  %defbase10 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 25, !dbg !10027
  %24 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !10028
  %25 = bitcast %struct.bDeformGroup* %24 to i8*, !dbg !10028
  call void @BLI_remlink(%struct.ListBase* %defbase10, i8* %25), !dbg !10029
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10030
  %defbase11 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 25, !dbg !10031
  %27 = load i8*, i8** %next, align 8, !dbg !10032
  %28 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !10033
  %29 = bitcast %struct.bDeformGroup* %28 to i8*, !dbg !10033
  call void @BLI_insertlinkafter(%struct.ListBase* %defbase11, i8* %27, i8* %29), !dbg !10034
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then5
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10035
  %31 = load i8*, i8** %name_array, align 8, !dbg !10036
  %32 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10037
  %call13 = call i32 @vgroup_do_remap(%struct.Object* %30, i8* %31, %struct.wmOperator* %32), !dbg !10038
  store i32 %call13, i32* %ret, align 4, !dbg !10039
  %33 = load i8*, i8** %name_array, align 8, !dbg !10040
  %tobool14 = icmp ne i8* %33, null, !dbg !10040
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10042

if.then15:                                        ; preds = %if.end12
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10043
  %35 = load i8*, i8** %name_array, align 8, !dbg !10044
  call void %34(i8* %35), !dbg !10043
  br label %if.end16, !dbg !10043

if.end16:                                         ; preds = %if.then15, %if.end12
  %36 = load i32, i32* %ret, align 4, !dbg !10045
  %cmp17 = icmp ne i32 %36, 2, !dbg !10047
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !10048

if.then19:                                        ; preds = %if.end16
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10049
  %id = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 0, !dbg !10051
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !10052
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10053
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10054
  %40 = bitcast %struct.Object* %39 to i8*, !dbg !10054
  call void @WM_event_add_notifier(%struct.bContext* %38, i32 274464768, i8* %40), !dbg !10055
  br label %if.end20, !dbg !10056

if.end20:                                         ; preds = %if.then19, %if.end16
  %41 = load i32, i32* %ret, align 4, !dbg !10057
  store i32 %41, i32* %retval, align 4, !dbg !10058
  br label %return, !dbg !10058

return:                                           ; preds = %if.end20, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !10059
  ret i32 %42, !dbg !10059
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_weight_paste(%struct.wmOperatorType* %ot) #0 !dbg !10060 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10061, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !10063, metadata !DIExpression()), !dbg !10064
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10065
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10066
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.158, i64 0, i64 0), i8** %name, align 8, !dbg !10067
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10068
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10069
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.159, i64 0, i64 0), i8** %idname, align 8, !dbg !10070
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10071
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10072
  store i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.160, i64 0, i64 0), i8** %description, align 8, !dbg !10073
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10074
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !10075
  store i32 (%struct.bContext*)* @vertex_group_vert_select_mesh_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !10076
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10077
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !10078
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_weight_paste_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10079
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10080
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10081
  store i16 3, i16* %flag, align 8, !dbg !10082
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10083
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10084
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10084
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10083
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i64 0, i64 0), i32 -1, i32 -1, i32 2147483647, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.163, i64 0, i64 0), i32 -1, i32 2147483647), !dbg !10085
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !10086
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10087
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268959744), !dbg !10088
  ret void, !dbg !10089
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_group_vert_select_mesh_poll(%struct.bContext* %C) #0 !dbg !10090 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %data = alloca %struct.ID*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10091, metadata !DIExpression()), !dbg !10092
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10093, metadata !DIExpression()), !dbg !10094
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10095
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !10096
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !10094
  call void @llvm.dbg.declare(metadata %struct.ID** %data, metadata !10097, metadata !DIExpression()), !dbg !10098
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10099
  %tobool = icmp ne %struct.Object* %1, null, !dbg !10100
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10100

cond.true:                                        ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10101
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !10102
  %3 = load i8*, i8** %data1, align 8, !dbg !10102
  br label %cond.end, !dbg !10100

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10100

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !10100
  %4 = bitcast i8* %cond to %struct.ID*, !dbg !10100
  store %struct.ID* %4, %struct.ID** %data, align 8, !dbg !10098
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10103
  %tobool2 = icmp ne %struct.Object* %5, null, !dbg !10103
  br i1 %tobool2, label %land.lhs.true, label %if.then, !dbg !10105

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10106
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !10107
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !10108
  %7 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !10108
  %tobool3 = icmp ne %struct.Library* %7, null, !dbg !10106
  br i1 %tobool3, label %if.then, label %land.lhs.true4, !dbg !10109

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !10110
  %tobool5 = icmp ne %struct.ID* %8, null, !dbg !10110
  br i1 %tobool5, label %land.lhs.true6, label %if.then, !dbg !10111

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %9 = load %struct.ID*, %struct.ID** %data, align 8, !dbg !10112
  %lib7 = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 3, !dbg !10113
  %10 = load %struct.Library*, %struct.Library** %lib7, align 8, !dbg !10113
  %tobool8 = icmp ne %struct.Library* %10, null, !dbg !10112
  br i1 %tobool8, label %if.then, label %if.end, !dbg !10114

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !10115
  br label %return, !dbg !10115

if.end:                                           ; preds = %land.lhs.true6
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10116
  %type = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 3, !dbg !10118
  %12 = load i16, i16* %type, align 8, !dbg !10118
  %conv = sext i16 %12 to i32, !dbg !10116
  %cmp = icmp ne i32 %conv, 1, !dbg !10119
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !10120

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10121
  br label %return, !dbg !10121

if.end11:                                         ; preds = %if.end
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10122
  %call12 = call zeroext i8 @BKE_object_is_in_editmode_vgroup(%struct.Object* %13), !dbg !10123
  %conv13 = zext i8 %call12 to i32, !dbg !10123
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !10123
  br i1 %tobool14, label %lor.end, label %lor.rhs, !dbg !10124

lor.rhs:                                          ; preds = %if.end11
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10125
  %call15 = call zeroext i8 @BKE_object_is_in_wpaint_select_vert(%struct.Object* %14), !dbg !10126
  %conv16 = zext i8 %call15 to i32, !dbg !10126
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !10124
  br label %lor.end, !dbg !10124

lor.end:                                          ; preds = %lor.rhs, %if.end11
  %15 = phi i1 [ true, %if.end11 ], [ %tobool17, %lor.rhs ]
  %lor.ext = zext i1 %15 to i32, !dbg !10124
  store i32 %lor.ext, i32* %retval, align 4, !dbg !10127
  br label %return, !dbg !10127

return:                                           ; preds = %lor.end, %if.then10, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !10128
  ret i32 %16, !dbg !10128
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_weight_paste_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10129 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %def_nr = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10130, metadata !DIExpression()), !dbg !10131
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10132, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10134, metadata !DIExpression()), !dbg !10135
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10136
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !10137
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !10135
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !10138, metadata !DIExpression()), !dbg !10139
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10140
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !10141
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10141
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i64 0, i64 0)), !dbg !10142
  store i32 %call1, i32* %def_nr, align 4, !dbg !10139
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10143
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10145
  %5 = load i32, i32* %def_nr, align 4, !dbg !10146
  %call2 = call zeroext i8 @check_vertex_group_accessible(%struct.wmOperator* %3, %struct.Object* %4, i32 %5), !dbg !10147
  %tobool = icmp ne i8 %call2, 0, !dbg !10147
  br i1 %tobool, label %if.end, label %if.then, !dbg !10148

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10149
  br label %return, !dbg !10149

if.end:                                           ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10151
  %7 = load i32, i32* %def_nr, align 4, !dbg !10152
  call void @vgroup_copy_active_to_sel_single(%struct.Object* %6, i32 %7), !dbg !10153
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10154
  %id = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 0, !dbg !10155
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !10156
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10157
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10158
  %11 = bitcast %struct.Object* %10 to i8*, !dbg !10158
  call void @WM_event_add_notifier(%struct.bContext* %9, i32 85393408, i8* %11), !dbg !10159
  store i32 4, i32* %retval, align 4, !dbg !10160
  br label %return, !dbg !10160

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10161
  ret i32 %12, !dbg !10161
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_weight_delete(%struct.wmOperatorType* %ot) #0 !dbg !10162 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10163, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !10165, metadata !DIExpression()), !dbg !10166
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10167
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10168
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.164, i64 0, i64 0), i8** %name, align 8, !dbg !10169
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10170
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10171
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.165, i64 0, i64 0), i8** %idname, align 8, !dbg !10172
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10173
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10174
  store i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.166, i64 0, i64 0), i8** %description, align 8, !dbg !10175
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10176
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !10177
  store i32 (%struct.bContext*)* @vertex_group_vert_select_mesh_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !10178
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10179
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !10180
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_weight_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10181
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10182
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10183
  store i16 3, i16* %flag, align 8, !dbg !10184
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10185
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10186
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10186
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10185
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i64 0, i64 0), i32 -1, i32 -1, i32 2147483647, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.163, i64 0, i64 0), i32 -1, i32 2147483647), !dbg !10187
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !10188
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10189
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268959744), !dbg !10190
  ret void, !dbg !10191
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_weight_delete_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10192 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %def_nr = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10193, metadata !DIExpression()), !dbg !10194
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10197, metadata !DIExpression()), !dbg !10198
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10199
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !10200
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !10198
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !10201, metadata !DIExpression()), !dbg !10202
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10203
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !10204
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10204
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i64 0, i64 0)), !dbg !10205
  store i32 %call1, i32* %def_nr, align 4, !dbg !10202
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10206
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10208
  %5 = load i32, i32* %def_nr, align 4, !dbg !10209
  %call2 = call zeroext i8 @check_vertex_group_accessible(%struct.wmOperator* %3, %struct.Object* %4, i32 %5), !dbg !10210
  %tobool = icmp ne i8 %call2, 0, !dbg !10210
  br i1 %tobool, label %if.end, label %if.then, !dbg !10211

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10212
  br label %return, !dbg !10212

if.end:                                           ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10214
  %7 = load i32, i32* %def_nr, align 4, !dbg !10215
  call void @vgroup_remove_weight(%struct.Object* %6, i32 %7), !dbg !10216
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10217
  %id = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 0, !dbg !10218
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !10219
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10220
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10221
  %11 = bitcast %struct.Object* %10 to i8*, !dbg !10221
  call void @WM_event_add_notifier(%struct.bContext* %9, i32 85393408, i8* %11), !dbg !10222
  store i32 4, i32* %retval, align 4, !dbg !10223
  br label %return, !dbg !10223

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10224
  ret i32 %12, !dbg !10224
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_weight_set_active(%struct.wmOperatorType* %ot) #0 !dbg !10225 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !10228, metadata !DIExpression()), !dbg !10229
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10230
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10231
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.167, i64 0, i64 0), i8** %name, align 8, !dbg !10232
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10233
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10234
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.168, i64 0, i64 0), i8** %idname, align 8, !dbg !10235
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10236
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10237
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i64 0, i64 0), i8** %description, align 8, !dbg !10238
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10239
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !10240
  store i32 (%struct.bContext*)* @vertex_group_vert_select_mesh_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !10241
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10242
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !10243
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_weight_set_active_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10244
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10245
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10246
  store i16 3, i16* %flag, align 8, !dbg !10247
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10248
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10249
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10249
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10248
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i64 0, i64 0), i32 -1, i32 -1, i32 2147483647, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.163, i64 0, i64 0), i32 -1, i32 2147483647), !dbg !10250
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !10251
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10252
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268959744), !dbg !10253
  ret void, !dbg !10254
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_weight_set_active_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10255 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %wg_index = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10256, metadata !DIExpression()), !dbg !10257
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10258, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10260, metadata !DIExpression()), !dbg !10261
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10262
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !10263
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !10261
  call void @llvm.dbg.declare(metadata i32* %wg_index, metadata !10264, metadata !DIExpression()), !dbg !10265
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10266
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !10267
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10267
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i64 0, i64 0)), !dbg !10268
  store i32 %call1, i32* %wg_index, align 4, !dbg !10265
  %3 = load i32, i32* %wg_index, align 4, !dbg !10269
  %cmp = icmp ne i32 %3, -1, !dbg !10271
  br i1 %cmp, label %if.then, label %if.end, !dbg !10272

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %wg_index, align 4, !dbg !10273
  %add = add nsw i32 %4, 1, !dbg !10275
  %conv = trunc i32 %add to i16, !dbg !10273
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10276
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 97, !dbg !10277
  store i16 %conv, i16* %actdef, align 2, !dbg !10278
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10279
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !10280
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !10281
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10282
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10283
  %9 = bitcast %struct.Object* %8 to i8*, !dbg !10283
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 85393408, i8* %9), !dbg !10284
  br label %if.end, !dbg !10285

if.end:                                           ; preds = %if.then, %entry
  ret i32 4, !dbg !10286
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_weight_normalize_active_vertex(%struct.wmOperatorType* %ot) #0 !dbg !10287 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10288, metadata !DIExpression()), !dbg !10289
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10290
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10291
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.170, i64 0, i64 0), i8** %name, align 8, !dbg !10292
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10293
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10294
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.171, i64 0, i64 0), i8** %idname, align 8, !dbg !10295
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10296
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10297
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.172, i64 0, i64 0), i8** %description, align 8, !dbg !10298
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10299
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !10300
  store i32 (%struct.bContext*)* @vertex_group_vert_select_mesh_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !10301
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10302
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !10303
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_weight_normalize_active_vertex_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10304
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10305
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10306
  store i16 3, i16* %flag, align 8, !dbg !10307
  ret void, !dbg !10308
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_weight_normalize_active_vertex_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !10309 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %subset_type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10310, metadata !DIExpression()), !dbg !10311
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !10312, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10314, metadata !DIExpression()), !dbg !10315
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10316
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !10317
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !10315
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !10318, metadata !DIExpression()), !dbg !10319
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10320
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !10321
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %ts, align 8, !dbg !10319
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !10322, metadata !DIExpression()), !dbg !10323
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10324
  %vgroupsubset = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 63, !dbg !10325
  %3 = load i8, i8* %vgroupsubset, align 1, !dbg !10325
  %conv = zext i8 %3 to i32, !dbg !10324
  store i32 %conv, i32* %subset_type, align 4, !dbg !10323
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10326
  %5 = load i32, i32* %subset_type, align 4, !dbg !10327
  call void @vgroup_normalize_active(%struct.Object* %4, i32 %5), !dbg !10328
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10329
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !10330
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !10331
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10332
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10333
  %9 = bitcast %struct.Object* %8 to i8*, !dbg !10333
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 85393408, i8* %9), !dbg !10334
  ret i32 4, !dbg !10335
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @OBJECT_OT_vertex_weight_copy(%struct.wmOperatorType* %ot) #0 !dbg !10336 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10339
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10340
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.173, i64 0, i64 0), i8** %name, align 8, !dbg !10341
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10342
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10343
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.174, i64 0, i64 0), i8** %idname, align 8, !dbg !10344
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10345
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10346
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.175, i64 0, i64 0), i8** %description, align 8, !dbg !10347
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10348
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 9, !dbg !10349
  store i32 (%struct.bContext*)* @vertex_group_vert_select_mesh_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !10350
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10351
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !10352
  store i32 (%struct.bContext*, %struct.wmOperator*)* @vertex_weight_copy_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10353
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10354
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10355
  store i16 3, i16* %flag, align 8, !dbg !10356
  ret void, !dbg !10357
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vertex_weight_copy_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !10358 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %subset_type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10359, metadata !DIExpression()), !dbg !10360
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !10361, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10363, metadata !DIExpression()), !dbg !10364
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10365
  %call = call %struct.Object* @ED_object_context(%struct.bContext* %0), !dbg !10366
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !10364
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !10367, metadata !DIExpression()), !dbg !10368
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10369
  %call1 = call %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext* %1), !dbg !10370
  store %struct.ToolSettings* %call1, %struct.ToolSettings** %ts, align 8, !dbg !10368
  call void @llvm.dbg.declare(metadata i32* %subset_type, metadata !10371, metadata !DIExpression()), !dbg !10372
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !10373
  %vgroupsubset = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %2, i32 0, i32 63, !dbg !10374
  %3 = load i8, i8* %vgroupsubset, align 1, !dbg !10374
  %conv = zext i8 %3 to i32, !dbg !10373
  store i32 %conv, i32* %subset_type, align 4, !dbg !10372
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10375
  %5 = load i32, i32* %subset_type, align 4, !dbg !10376
  call void @vgroup_copy_active_to_sel(%struct.Object* %4, i32 %5), !dbg !10377
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10378
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !10379
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !10380
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10381
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10382
  %9 = bitcast %struct.Object* %8 to i8*, !dbg !10382
  call void @WM_event_add_notifier(%struct.bContext* %7, i32 85393408, i8* %9), !dbg !10383
  ret i32 4, !dbg !10384
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !10385 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !10390, metadata !DIExpression()), !dbg !10391
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !10392, metadata !DIExpression()), !dbg !10393
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10394, metadata !DIExpression()), !dbg !10395
  %0 = load i8, i8* %itype.addr, align 1, !dbg !10396
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10397
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !10398
  store i8 %0, i8* %itype1, align 4, !dbg !10399
  %2 = load i8, i8* %itype.addr, align 1, !dbg !10400
  %conv = zext i8 %2 to i32, !dbg !10401
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !10402

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10403
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !10405
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !10406
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10407
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !10408
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !10409
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10410
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !10411
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !10411
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10412
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !10413
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !10414
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !10415
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !10416
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !10417
  br label %sw.epilog, !dbg !10418

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10419
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !10420
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !10421
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10422
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !10423
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !10424
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10425
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !10426
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !10426
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10427
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !10428
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !10429
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !10430
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !10431
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !10432
  br label %sw.epilog, !dbg !10433

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10434
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !10435
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !10436
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10437
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !10438
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !10439
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10440
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !10441
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !10441
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10442
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !10443
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !10444
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !10445
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !10446
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !10447
  br label %sw.epilog, !dbg !10448

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10449
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !10450
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !10451
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10452
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !10453
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !10454
  %20 = load i8*, i8** %data.addr, align 8, !dbg !10455
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !10456
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10457
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !10458
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !10459
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !10460
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !10461
  br label %sw.epilog, !dbg !10462

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10463
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !10464
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !10465
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10466
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !10467
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !10468
  %25 = load i8*, i8** %data.addr, align 8, !dbg !10469
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !10470
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10471
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !10472
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !10473
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !10474
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !10475
  br label %sw.epilog, !dbg !10476

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10477
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !10478
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !10479
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10480
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !10481
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !10482
  %30 = load i8*, i8** %data.addr, align 8, !dbg !10483
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !10484
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10485
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !10486
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !10487
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !10488
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !10489
  br label %sw.epilog, !dbg !10490

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10491
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !10492
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !10493
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10494
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !10495
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !10496
  %35 = load i8*, i8** %data.addr, align 8, !dbg !10497
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !10498
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10499
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !10500
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !10501
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !10502
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !10503
  br label %sw.epilog, !dbg !10504

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10505
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !10506
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !10507
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10508
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !10509
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !10510
  %40 = load i8*, i8** %data.addr, align 8, !dbg !10511
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !10512
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10513
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !10514
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !10515
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !10516
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !10517
  br label %sw.epilog, !dbg !10518

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10519
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !10520
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !10521
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10522
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !10523
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !10524
  %45 = load i8*, i8** %data.addr, align 8, !dbg !10525
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !10526
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10527
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !10528
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !10529
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !10530
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !10531
  br label %sw.epilog, !dbg !10532

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10533
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !10534
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !10535
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10536
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !10537
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !10538
  %50 = load i8*, i8** %data.addr, align 8, !dbg !10539
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !10540
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10541
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !10542
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !10543
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !10544
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !10545
  br label %sw.epilog, !dbg !10546

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10547
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !10548
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !10549
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10550
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !10551
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !10552
  %55 = load i8*, i8** %data.addr, align 8, !dbg !10553
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !10554
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10555
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !10556
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !10557
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !10558
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !10559
  br label %sw.epilog, !dbg !10560

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10561
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !10562
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !10563
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10564
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !10565
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !10566
  %60 = load i8*, i8** %data.addr, align 8, !dbg !10567
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !10568
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10569
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !10570
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !10571
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !10572
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !10573
  br label %sw.epilog, !dbg !10574

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10575
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !10576
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !10577
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10578
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !10579
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !10580
  %65 = load i8*, i8** %data.addr, align 8, !dbg !10581
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !10582
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10583
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !10584
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !10585
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !10586
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !10587
  br label %sw.epilog, !dbg !10588

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !10589
  br label %return, !dbg !10589

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10590
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !10591
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !10591
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10592
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !10592
  call void %69(i8* %71), !dbg !10590
  store i8 1, i8* %retval, align 1, !dbg !10593
  br label %return, !dbg !10593

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !10594
  ret i8 %72, !dbg !10594
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

declare dso_local %struct.BMVert* @editbmesh_get_x_mirror_vert(%struct.Object*, %struct.BMEditMesh*, %struct.BMVert*, float*, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_defvert_mirror_update_internal(%struct.Object* %ob, %struct.MDeformVert* %dvert_dst, %struct.MDeformVert* %dvert_src, i32 %def_nr) #0 !dbg !10595 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dvert_dst.addr = alloca %struct.MDeformVert*, align 8
  %dvert_src.addr = alloca %struct.MDeformVert*, align 8
  %def_nr.addr = alloca i32, align 4
  %flip_map_len = alloca i32, align 4
  %flip_map = alloca i32*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10598, metadata !DIExpression()), !dbg !10599
  store %struct.MDeformVert* %dvert_dst, %struct.MDeformVert** %dvert_dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_dst.addr, metadata !10600, metadata !DIExpression()), !dbg !10601
  store %struct.MDeformVert* %dvert_src, %struct.MDeformVert** %dvert_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_src.addr, metadata !10602, metadata !DIExpression()), !dbg !10603
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load i32, i32* %def_nr.addr, align 4, !dbg !10606
  %cmp = icmp eq i32 %0, -1, !dbg !10608
  br i1 %cmp, label %if.then, label %if.else, !dbg !10609

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %flip_map_len, metadata !10610, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.declare(metadata i32** %flip_map, metadata !10613, metadata !DIExpression()), !dbg !10614
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10615
  %call = call i32* @defgroup_flip_map(%struct.Object* %1, i32* %flip_map_len, i8 zeroext 1), !dbg !10616
  store i32* %call, i32** %flip_map, align 8, !dbg !10614
  %2 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_dst.addr, align 8, !dbg !10617
  %3 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_src.addr, align 8, !dbg !10618
  %4 = load i32*, i32** %flip_map, align 8, !dbg !10619
  %5 = load i32, i32* %flip_map_len, align 4, !dbg !10620
  call void @defvert_sync_mapped(%struct.MDeformVert* %2, %struct.MDeformVert* %3, i32* %4, i32 %5, i8 zeroext 1), !dbg !10621
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10622
  %7 = load i32*, i32** %flip_map, align 8, !dbg !10623
  %8 = bitcast i32* %7 to i8*, !dbg !10623
  call void %6(i8* %8), !dbg !10622
  br label %if.end5, !dbg !10624

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !10625, metadata !DIExpression()), !dbg !10627
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_dst.addr, align 8, !dbg !10628
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10629
  %11 = load i32, i32* %def_nr.addr, align 4, !dbg !10630
  %call1 = call i32 @defgroup_flip_index(%struct.Object* %10, i32 %11, i8 zeroext 1), !dbg !10631
  %call2 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %9, i32 %call1), !dbg !10632
  store %struct.MDeformWeight* %call2, %struct.MDeformWeight** %dw, align 8, !dbg !10627
  %12 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10633
  %tobool = icmp ne %struct.MDeformWeight* %12, null, !dbg !10633
  br i1 %tobool, label %if.then3, label %if.end, !dbg !10635

if.then3:                                         ; preds = %if.else
  %13 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_src.addr, align 8, !dbg !10636
  %14 = load i32, i32* %def_nr.addr, align 4, !dbg !10638
  %call4 = call float @defvert_find_weight(%struct.MDeformVert* %13, i32 %14), !dbg !10639
  %15 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10640
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %15, i32 0, i32 1, !dbg !10641
  store float %call4, float* %weight, align 4, !dbg !10642
  br label %if.end, !dbg !10643

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  ret void, !dbg !10644
}

declare dso_local void @defvert_sync_mapped(%struct.MDeformVert*, %struct.MDeformVert*, i32*, i32, i8 zeroext) #2

declare dso_local %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert*, i32) #2

declare dso_local i32 @defgroup_flip_index(%struct.Object*, i32, i8 zeroext) #2

declare dso_local float @defvert_find_weight(%struct.MDeformVert*, i32) #2

declare dso_local void @defvert_add_index_notest(%struct.MDeformVert*, i32, float) #2

declare dso_local %struct.BMVert* @BM_vert_at_index(%struct.BMesh*, i32) #2

declare dso_local void @defvert_flip(%struct.MDeformVert*, i32*, i32) #2

declare dso_local void @defvert_copy(%struct.MDeformVert*, %struct.MDeformVert*) #2

declare dso_local void @defvert_copy_index(%struct.MDeformVert*, %struct.MDeformVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_delete_update_users(%struct.Object* %ob, i32 %id) #0 !dbg !10645 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %id.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %defbase_tot = alloca i32, align 4
  %map = alloca i32*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10646, metadata !DIExpression()), !dbg !10647
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !10648, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10650, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.declare(metadata i32* %defbase_tot, metadata !10652, metadata !DIExpression()), !dbg !10653
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10654
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !10655
  %call = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !10656
  %add = add nsw i32 %call, 1, !dbg !10657
  store i32 %add, i32* %defbase_tot, align 4, !dbg !10653
  call void @llvm.dbg.declare(metadata i32** %map, metadata !10658, metadata !DIExpression()), !dbg !10659
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10660
  %2 = load i32, i32* %defbase_tot, align 4, !dbg !10661
  %conv = sext i32 %2 to i64, !dbg !10661
  %mul = mul i64 4, %conv, !dbg !10662
  %call1 = call i8* %1(i64 %mul, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.187, i64 0, i64 0)), !dbg !10660
  %3 = bitcast i8* %call1 to i32*, !dbg !10660
  store i32* %3, i32** %map, align 8, !dbg !10659
  %4 = load i32*, i32** %map, align 8, !dbg !10663
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 0, !dbg !10663
  store i32 0, i32* %arrayidx, align 4, !dbg !10664
  %5 = load i32*, i32** %map, align 8, !dbg !10665
  %6 = load i32, i32* %id.addr, align 4, !dbg !10666
  %idxprom = sext i32 %6 to i64, !dbg !10665
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !10665
  store i32 0, i32* %arrayidx2, align 4, !dbg !10667
  store i32 1, i32* %i, align 4, !dbg !10668
  br label %for.cond, !dbg !10670

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !10671
  %8 = load i32, i32* %id.addr, align 4, !dbg !10673
  %cmp = icmp slt i32 %7, %8, !dbg !10674
  br i1 %cmp, label %for.body, label %for.end, !dbg !10675

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !10676
  %10 = load i32*, i32** %map, align 8, !dbg !10677
  %11 = load i32, i32* %i, align 4, !dbg !10678
  %idxprom4 = sext i32 %11 to i64, !dbg !10677
  %arrayidx5 = getelementptr inbounds i32, i32* %10, i64 %idxprom4, !dbg !10677
  store i32 %9, i32* %arrayidx5, align 4, !dbg !10679
  br label %for.inc, !dbg !10677

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !10680
  %inc = add nsw i32 %12, 1, !dbg !10680
  store i32 %inc, i32* %i, align 4, !dbg !10680
  br label %for.cond, !dbg !10681, !llvm.loop !10682

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %id.addr, align 4, !dbg !10684
  %add6 = add nsw i32 %13, 1, !dbg !10686
  store i32 %add6, i32* %i, align 4, !dbg !10687
  br label %for.cond7, !dbg !10688

for.cond7:                                        ; preds = %for.inc13, %for.end
  %14 = load i32, i32* %i, align 4, !dbg !10689
  %15 = load i32, i32* %defbase_tot, align 4, !dbg !10691
  %cmp8 = icmp slt i32 %14, %15, !dbg !10692
  br i1 %cmp8, label %for.body10, label %for.end15, !dbg !10693

for.body10:                                       ; preds = %for.cond7
  %16 = load i32, i32* %i, align 4, !dbg !10694
  %sub = sub nsw i32 %16, 1, !dbg !10695
  %17 = load i32*, i32** %map, align 8, !dbg !10696
  %18 = load i32, i32* %i, align 4, !dbg !10697
  %idxprom11 = sext i32 %18 to i64, !dbg !10696
  %arrayidx12 = getelementptr inbounds i32, i32* %17, i64 %idxprom11, !dbg !10696
  store i32 %sub, i32* %arrayidx12, align 4, !dbg !10698
  br label %for.inc13, !dbg !10696

for.inc13:                                        ; preds = %for.body10
  %19 = load i32, i32* %i, align 4, !dbg !10699
  %inc14 = add nsw i32 %19, 1, !dbg !10699
  store i32 %inc14, i32* %i, align 4, !dbg !10699
  br label %for.cond7, !dbg !10700, !llvm.loop !10701

for.end15:                                        ; preds = %for.cond7
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10703
  %21 = load i32*, i32** %map, align 8, !dbg !10704
  call void @vgroup_remap_update_users(%struct.Object* %20, i32* %21), !dbg !10705
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10706
  %23 = load i32*, i32** %map, align 8, !dbg !10707
  %24 = bitcast i32* %23 to i8*, !dbg !10707
  call void %22(i8* %24), !dbg !10706
  ret void, !dbg !10708
}

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !10709 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !10715, metadata !DIExpression()), !dbg !10716
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10717
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10718
  %1 = load i8*, i8** %first, align 8, !dbg !10718
  %cmp = icmp eq i8* %1, null, !dbg !10719
  %conv = zext i1 %cmp to i32, !dbg !10719
  %conv1 = trunc i32 %conv to i8, !dbg !10720
  ret i8 %conv1, !dbg !10721
}

declare dso_local zeroext i8 @CustomData_free_layer_active(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vgroup_active_remove_verts(%struct.Object* %ob, i8 zeroext %allverts, %struct.bDeformGroup* %dg) #0 !dbg !10722 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %allverts.addr = alloca i8, align 1
  %dg.addr = alloca %struct.bDeformGroup*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %def_nr = alloca i32, align 4
  %changed = alloca i8, align 1
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %dw22 = alloca %struct.MDeformWeight*, align 8
  %mv = alloca %struct.MVert*, align 8
  %i = alloca i32, align 4
  %dw47 = alloca %struct.MDeformWeight*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %i66 = alloca i32, align 4
  %tot = alloca i32, align 4
  %dw82 = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10725, metadata !DIExpression()), !dbg !10726
  store i8 %allverts, i8* %allverts.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %allverts.addr, metadata !10727, metadata !DIExpression()), !dbg !10728
  store %struct.bDeformGroup* %dg, %struct.bDeformGroup** %dg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg.addr, metadata !10729, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !10731, metadata !DIExpression()), !dbg !10732
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !10733, metadata !DIExpression()), !dbg !10734
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10735
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !10736
  %1 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg.addr, align 8, !dbg !10737
  %2 = bitcast %struct.bDeformGroup* %1 to i8*, !dbg !10737
  %call = call i32 @BLI_findindex(%struct.ListBase* %defbase, i8* %2), !dbg !10738
  store i32 %call, i32* %def_nr, align 4, !dbg !10734
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !10739, metadata !DIExpression()), !dbg !10740
  store i8 0, i8* %changed, align 1, !dbg !10740
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10741
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !10743
  %4 = load i16, i16* %type, align 8, !dbg !10743
  %conv = sext i16 %4 to i32, !dbg !10741
  %cmp = icmp eq i32 %conv, 1, !dbg !10744
  br i1 %cmp, label %if.then, label %if.else56, !dbg !10745

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !10746, metadata !DIExpression()), !dbg !10748
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10749
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !10750
  %6 = load i8*, i8** %data, align 8, !dbg !10750
  %7 = bitcast i8* %6 to %struct.Mesh*, !dbg !10749
  store %struct.Mesh* %7, %struct.Mesh** %me, align 8, !dbg !10748
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !10751
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 20, !dbg !10753
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !10753
  %tobool = icmp ne %struct.BMEditMesh* %9, null, !dbg !10751
  br i1 %tobool, label %if.then2, label %if.else, !dbg !10754

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10755, metadata !DIExpression()), !dbg !10757
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !10758
  %edit_btmesh3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 20, !dbg !10759
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh3, align 8, !dbg !10759
  store %struct.BMEditMesh* %11, %struct.BMEditMesh** %em, align 8, !dbg !10757
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !10760, metadata !DIExpression()), !dbg !10761
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10762
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !10763
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10763
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 24, !dbg !10764
  %call4 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !10765
  store i32 %call4, i32* %cd_dvert_offset, align 4, !dbg !10761
  %14 = load i32, i32* %cd_dvert_offset, align 4, !dbg !10766
  %cmp5 = icmp ne i32 %14, -1, !dbg !10768
  br i1 %cmp5, label %if.then7, label %if.end25, !dbg !10769

if.then7:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !10770, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10773, metadata !DIExpression()), !dbg !10774
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10775
  %bm8 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !10775
  %16 = load %struct.BMesh*, %struct.BMesh** %bm8, align 8, !dbg !10775
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %16, i8 zeroext 1, i8* null), !dbg !10775
  %17 = bitcast i8* %call9 to %struct.BMVert*, !dbg !10775
  store %struct.BMVert* %17, %struct.BMVert** %eve, align 8, !dbg !10775
  br label %for.cond, !dbg !10775

for.cond:                                         ; preds = %for.inc, %if.then7
  %18 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10777
  %tobool10 = icmp ne %struct.BMVert* %18, null, !dbg !10775
  br i1 %tobool10, label %for.body, label %for.end, !dbg !10775

for.body:                                         ; preds = %for.cond
  %19 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10779
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 0, !dbg !10779
  %data11 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !10779
  %20 = load i8*, i8** %data11, align 8, !dbg !10779
  %21 = load i32, i32* %cd_dvert_offset, align 4, !dbg !10779
  %idx.ext = sext i32 %21 to i64, !dbg !10779
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !10779
  %22 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !10779
  store %struct.MDeformVert* %22, %struct.MDeformVert** %dv, align 8, !dbg !10781
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10782
  %tobool12 = icmp ne %struct.MDeformVert* %23, null, !dbg !10782
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !10784

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10785
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %24, i32 0, i32 0, !dbg !10786
  %25 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !10786
  %tobool13 = icmp ne %struct.MDeformWeight* %25, null, !dbg !10785
  br i1 %tobool13, label %land.lhs.true14, label %if.end, !dbg !10787

land.lhs.true14:                                  ; preds = %land.lhs.true
  %26 = load i8, i8* %allverts.addr, align 1, !dbg !10788
  %conv15 = zext i8 %26 to i32, !dbg !10788
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !10788
  br i1 %tobool16, label %if.then21, label %lor.lhs.false, !dbg !10789

lor.lhs.false:                                    ; preds = %land.lhs.true14
  %27 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10790
  %head17 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %27, i32 0, i32 0, !dbg !10790
  %call18 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head17, i8 zeroext 1), !dbg !10790
  %conv19 = zext i8 %call18 to i32, !dbg !10790
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !10790
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !10791

if.then21:                                        ; preds = %lor.lhs.false, %land.lhs.true14
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw22, metadata !10792, metadata !DIExpression()), !dbg !10794
  %28 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10795
  %29 = load i32, i32* %def_nr, align 4, !dbg !10796
  %call23 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %28, i32 %29), !dbg !10797
  store %struct.MDeformWeight* %call23, %struct.MDeformWeight** %dw22, align 8, !dbg !10794
  %30 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10798
  %31 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw22, align 8, !dbg !10799
  call void @defvert_remove_group(%struct.MDeformVert* %30, %struct.MDeformWeight* %31), !dbg !10800
  store i8 1, i8* %changed, align 1, !dbg !10801
  br label %if.end, !dbg !10802

if.end:                                           ; preds = %if.then21, %lor.lhs.false, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10803

for.inc:                                          ; preds = %if.end
  %call24 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10777
  %32 = bitcast i8* %call24 to %struct.BMVert*, !dbg !10777
  store %struct.BMVert* %32, %struct.BMVert** %eve, align 8, !dbg !10777
  br label %for.cond, !dbg !10777, !llvm.loop !10804

for.end:                                          ; preds = %for.cond
  br label %if.end25, !dbg !10806

if.end25:                                         ; preds = %for.end, %if.then2
  br label %if.end55, !dbg !10807

if.else:                                          ; preds = %if.then
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !10808
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 17, !dbg !10811
  %34 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !10811
  %tobool26 = icmp ne %struct.MDeformVert* %34, null, !dbg !10808
  br i1 %tobool26, label %if.then27, label %if.end54, !dbg !10812

if.then27:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !10813, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10816, metadata !DIExpression()), !dbg !10817
  %35 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !10818
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 15, !dbg !10819
  %36 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10819
  store %struct.MVert* %36, %struct.MVert** %mv, align 8, !dbg !10820
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !10821
  %dvert28 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 17, !dbg !10822
  %38 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert28, align 8, !dbg !10822
  store %struct.MDeformVert* %38, %struct.MDeformVert** %dv, align 8, !dbg !10823
  store i32 0, i32* %i, align 4, !dbg !10824
  br label %for.cond29, !dbg !10826

for.cond29:                                       ; preds = %for.inc51, %if.then27
  %39 = load i32, i32* %i, align 4, !dbg !10827
  %40 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !10829
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %40, i32 0, i32 26, !dbg !10830
  %41 = load i32, i32* %totvert, align 8, !dbg !10830
  %cmp30 = icmp slt i32 %39, %41, !dbg !10831
  br i1 %cmp30, label %for.body32, label %for.end53, !dbg !10832

for.body32:                                       ; preds = %for.cond29
  %42 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10833
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %42, i32 0, i32 2, !dbg !10836
  %43 = load i8, i8* %flag, align 2, !dbg !10836
  %conv33 = zext i8 %43 to i32, !dbg !10833
  %and = and i32 %conv33, 1, !dbg !10837
  %tobool34 = icmp ne i32 %and, 0, !dbg !10837
  br i1 %tobool34, label %if.then35, label %if.end50, !dbg !10838

if.then35:                                        ; preds = %for.body32
  %44 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10839
  %dw36 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %44, i32 0, i32 0, !dbg !10842
  %45 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw36, align 8, !dbg !10842
  %tobool37 = icmp ne %struct.MDeformWeight* %45, null, !dbg !10839
  br i1 %tobool37, label %land.lhs.true38, label %if.end49, !dbg !10843

land.lhs.true38:                                  ; preds = %if.then35
  %46 = load i8, i8* %allverts.addr, align 1, !dbg !10844
  %conv39 = zext i8 %46 to i32, !dbg !10844
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !10844
  br i1 %tobool40, label %if.then46, label %lor.lhs.false41, !dbg !10845

lor.lhs.false41:                                  ; preds = %land.lhs.true38
  %47 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10846
  %flag42 = getelementptr inbounds %struct.MVert, %struct.MVert* %47, i32 0, i32 2, !dbg !10847
  %48 = load i8, i8* %flag42, align 2, !dbg !10847
  %conv43 = zext i8 %48 to i32, !dbg !10846
  %and44 = and i32 %conv43, 1, !dbg !10848
  %tobool45 = icmp ne i32 %and44, 0, !dbg !10848
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !10849

if.then46:                                        ; preds = %lor.lhs.false41, %land.lhs.true38
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw47, metadata !10850, metadata !DIExpression()), !dbg !10852
  %49 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10853
  %50 = load i32, i32* %def_nr, align 4, !dbg !10854
  %call48 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %49, i32 %50), !dbg !10855
  store %struct.MDeformWeight* %call48, %struct.MDeformWeight** %dw47, align 8, !dbg !10852
  %51 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10856
  %52 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw47, align 8, !dbg !10857
  call void @defvert_remove_group(%struct.MDeformVert* %51, %struct.MDeformWeight* %52), !dbg !10858
  store i8 1, i8* %changed, align 1, !dbg !10859
  br label %if.end49, !dbg !10860

if.end49:                                         ; preds = %if.then46, %lor.lhs.false41, %if.then35
  br label %if.end50, !dbg !10861

if.end50:                                         ; preds = %if.end49, %for.body32
  br label %for.inc51, !dbg !10862

for.inc51:                                        ; preds = %if.end50
  %53 = load i32, i32* %i, align 4, !dbg !10863
  %inc = add nsw i32 %53, 1, !dbg !10863
  store i32 %inc, i32* %i, align 4, !dbg !10863
  %54 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !10864
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i32 1, !dbg !10864
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !10864
  %55 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10865
  %incdec.ptr52 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %55, i32 1, !dbg !10865
  store %struct.MDeformVert* %incdec.ptr52, %struct.MDeformVert** %dv, align 8, !dbg !10865
  br label %for.cond29, !dbg !10866, !llvm.loop !10867

for.end53:                                        ; preds = %for.cond29
  br label %if.end54, !dbg !10869

if.end54:                                         ; preds = %for.end53, %if.else
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end25
  br label %if.end92, !dbg !10870

if.else56:                                        ; preds = %entry
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10871
  %type57 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 3, !dbg !10873
  %57 = load i16, i16* %type57, align 8, !dbg !10873
  %conv58 = sext i16 %57 to i32, !dbg !10871
  %cmp59 = icmp eq i32 %conv58, 22, !dbg !10874
  br i1 %cmp59, label %if.then61, label %if.end91, !dbg !10875

if.then61:                                        ; preds = %if.else56
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !10876, metadata !DIExpression()), !dbg !10878
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10879
  %call62 = call %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %58), !dbg !10880
  store %struct.Lattice* %call62, %struct.Lattice** %lt, align 8, !dbg !10878
  %59 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10881
  %dvert63 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %59, i32 0, i32 24, !dbg !10883
  %60 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert63, align 8, !dbg !10883
  %tobool64 = icmp ne %struct.MDeformVert* %60, null, !dbg !10881
  br i1 %tobool64, label %if.then65, label %if.end90, !dbg !10884

if.then65:                                        ; preds = %if.then61
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !10885, metadata !DIExpression()), !dbg !10887
  call void @llvm.dbg.declare(metadata i32* %i66, metadata !10888, metadata !DIExpression()), !dbg !10889
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !10890, metadata !DIExpression()), !dbg !10891
  %61 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10892
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %61, i32 0, i32 2, !dbg !10893
  %62 = load i16, i16* %pntsu, align 8, !dbg !10893
  %conv67 = sext i16 %62 to i32, !dbg !10892
  %63 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10894
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %63, i32 0, i32 3, !dbg !10895
  %64 = load i16, i16* %pntsv, align 2, !dbg !10895
  %conv68 = sext i16 %64 to i32, !dbg !10894
  %mul = mul nsw i32 %conv67, %conv68, !dbg !10896
  %65 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10897
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %65, i32 0, i32 4, !dbg !10898
  %66 = load i16, i16* %pntsw, align 4, !dbg !10898
  %conv69 = sext i16 %66 to i32, !dbg !10897
  %mul70 = mul nsw i32 %mul, %conv69, !dbg !10899
  store i32 %mul70, i32* %tot, align 4, !dbg !10891
  store i32 0, i32* %i66, align 4, !dbg !10900
  %67 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10902
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %67, i32 0, i32 21, !dbg !10903
  %68 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !10903
  store %struct.BPoint* %68, %struct.BPoint** %bp, align 8, !dbg !10904
  br label %for.cond71, !dbg !10905

for.cond71:                                       ; preds = %for.inc86, %if.then65
  %69 = load i32, i32* %i66, align 4, !dbg !10906
  %70 = load i32, i32* %tot, align 4, !dbg !10908
  %cmp72 = icmp slt i32 %69, %70, !dbg !10909
  br i1 %cmp72, label %for.body74, label %for.end89, !dbg !10910

for.body74:                                       ; preds = %for.cond71
  %71 = load i8, i8* %allverts.addr, align 1, !dbg !10911
  %conv75 = zext i8 %71 to i32, !dbg !10911
  %tobool76 = icmp ne i32 %conv75, 0, !dbg !10911
  br i1 %tobool76, label %if.then81, label %lor.lhs.false77, !dbg !10914

lor.lhs.false77:                                  ; preds = %for.body74
  %72 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10915
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %72, i32 0, i32 3, !dbg !10916
  %73 = load i16, i16* %f1, align 4, !dbg !10916
  %conv78 = sext i16 %73 to i32, !dbg !10915
  %and79 = and i32 %conv78, 1, !dbg !10917
  %tobool80 = icmp ne i32 %and79, 0, !dbg !10917
  br i1 %tobool80, label %if.then81, label %if.end85, !dbg !10918

if.then81:                                        ; preds = %lor.lhs.false77, %for.body74
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw82, metadata !10919, metadata !DIExpression()), !dbg !10921
  %74 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10922
  %dvert83 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %74, i32 0, i32 24, !dbg !10923
  %75 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert83, align 8, !dbg !10923
  %76 = load i32, i32* %i66, align 4, !dbg !10924
  %idxprom = sext i32 %76 to i64, !dbg !10922
  %arrayidx = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %75, i64 %idxprom, !dbg !10922
  store %struct.MDeformVert* %arrayidx, %struct.MDeformVert** %dv, align 8, !dbg !10925
  %77 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10926
  %78 = load i32, i32* %def_nr, align 4, !dbg !10927
  %call84 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %77, i32 %78), !dbg !10928
  store %struct.MDeformWeight* %call84, %struct.MDeformWeight** %dw82, align 8, !dbg !10929
  %79 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !10930
  %80 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw82, align 8, !dbg !10931
  call void @defvert_remove_group(%struct.MDeformVert* %79, %struct.MDeformWeight* %80), !dbg !10932
  store i8 1, i8* %changed, align 1, !dbg !10933
  br label %if.end85, !dbg !10934

if.end85:                                         ; preds = %if.then81, %lor.lhs.false77
  br label %for.inc86, !dbg !10935

for.inc86:                                        ; preds = %if.end85
  %81 = load i32, i32* %i66, align 4, !dbg !10936
  %inc87 = add nsw i32 %81, 1, !dbg !10936
  store i32 %inc87, i32* %i66, align 4, !dbg !10936
  %82 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !10937
  %incdec.ptr88 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %82, i32 1, !dbg !10937
  store %struct.BPoint* %incdec.ptr88, %struct.BPoint** %bp, align 8, !dbg !10937
  br label %for.cond71, !dbg !10938, !llvm.loop !10939

for.end89:                                        ; preds = %for.cond71
  br label %if.end90, !dbg !10941

if.end90:                                         ; preds = %for.end89, %if.then61
  br label %if.end91, !dbg !10942

if.end91:                                         ; preds = %if.end90, %if.else56
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end55
  %83 = load i8, i8* %changed, align 1, !dbg !10943
  ret i8 %83, !dbg !10944
}

declare dso_local %struct.Object* @ED_object_context(%struct.bContext*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_delete(%struct.Object* %ob) #0 !dbg !10945 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10946, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !10948, metadata !DIExpression()), !dbg !10949
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10950
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !10951
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10952
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 97, !dbg !10953
  %2 = load i16, i16* %actdef, align 2, !dbg !10953
  %conv = zext i16 %2 to i32, !dbg !10952
  %sub = sub nsw i32 %conv, 1, !dbg !10954
  %call = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %sub), !dbg !10955
  %3 = bitcast i8* %call to %struct.bDeformGroup*, !dbg !10955
  store %struct.bDeformGroup* %3, %struct.bDeformGroup** %dg, align 8, !dbg !10949
  %4 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !10956
  %tobool = icmp ne %struct.bDeformGroup* %4, null, !dbg !10956
  br i1 %tobool, label %if.end, label %if.then, !dbg !10958

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !10959

if.end:                                           ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10960
  %call1 = call zeroext i8 @BKE_object_is_in_editmode_vgroup(%struct.Object* %5), !dbg !10962
  %tobool2 = icmp ne i8 %call1, 0, !dbg !10962
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !10963

if.then3:                                         ; preds = %if.end
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10964
  %7 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !10965
  call void @vgroup_delete_edit_mode(%struct.Object* %6, %struct.bDeformGroup* %7), !dbg !10966
  br label %if.end4, !dbg !10966

if.else:                                          ; preds = %if.end
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10967
  %9 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !10968
  call void @vgroup_delete_object_mode(%struct.Object* %8, %struct.bDeformGroup* %9), !dbg !10969
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !10970
}

declare dso_local zeroext i8 @BKE_object_is_in_editmode_vgroup(%struct.Object*) #2

declare dso_local zeroext i8 @BKE_object_is_in_wpaint_select_vert(%struct.Object*) #2

declare dso_local %struct.ToolSettings* @CTX_data_tool_settings(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_assign_verts(%struct.Object* %ob, float %weight) #0 !dbg !10971 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %weight.addr = alloca float, align 4
  %def_nr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %mv = alloca %struct.MVert*, align 8
  %dv32 = alloca %struct.MDeformVert*, align 8
  %i = alloca i32, align 4
  %dw45 = alloca %struct.MDeformWeight*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %dv63 = alloca %struct.MDeformVert*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %dw84 = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !10976, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !10978, metadata !DIExpression()), !dbg !10979
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10980
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 97, !dbg !10981
  %1 = load i16, i16* %actdef, align 2, !dbg !10981
  %conv = zext i16 %1 to i32, !dbg !10980
  %sub = sub nsw i32 %conv, 1, !dbg !10982
  store i32 %sub, i32* %def_nr, align 4, !dbg !10979
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10983
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 25, !dbg !10985
  %3 = load i32, i32* %def_nr, align 4, !dbg !10986
  %call = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %3), !dbg !10987
  %tobool = icmp ne i8* %call, null, !dbg !10987
  br i1 %tobool, label %if.end, label %if.then, !dbg !10988

if.then:                                          ; preds = %entry
  br label %if.end97, !dbg !10989

if.end:                                           ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10990
  %type = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !10992
  %5 = load i16, i16* %type, align 8, !dbg !10992
  %conv1 = sext i16 %5 to i32, !dbg !10990
  %cmp = icmp eq i32 %conv1, 1, !dbg !10993
  br i1 %cmp, label %if.then3, label %if.else56, !dbg !10994

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !10995, metadata !DIExpression()), !dbg !10997
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10998
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !10999
  %7 = load i8*, i8** %data, align 8, !dbg !10999
  %8 = bitcast i8* %7 to %struct.Mesh*, !dbg !10998
  store %struct.Mesh* %8, %struct.Mesh** %me, align 8, !dbg !10997
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11000
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 20, !dbg !11002
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !11002
  %tobool4 = icmp ne %struct.BMEditMesh* %10, null, !dbg !11000
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !11003

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11004, metadata !DIExpression()), !dbg !11006
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11007
  %edit_btmesh6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 20, !dbg !11008
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh6, align 8, !dbg !11008
  store %struct.BMEditMesh* %12, %struct.BMEditMesh** %em, align 8, !dbg !11006
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !11009, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11011, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !11013, metadata !DIExpression()), !dbg !11014
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11015
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !11017
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11017
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 24, !dbg !11018
  %call7 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vdata, i32 2), !dbg !11019
  %tobool8 = icmp ne i8 %call7, 0, !dbg !11019
  br i1 %tobool8, label %if.end13, label %if.then9, !dbg !11020

if.then9:                                         ; preds = %if.then5
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11021
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !11022
  %16 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !11022
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11023
  %bm11 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 0, !dbg !11024
  %18 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !11024
  %vdata12 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %18, i32 0, i32 24, !dbg !11025
  call void @BM_data_layer_add(%struct.BMesh* %16, %struct.CustomData* %vdata12, i32 2), !dbg !11026
  br label %if.end13, !dbg !11026

if.end13:                                         ; preds = %if.then9, %if.then5
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11027
  %bm14 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !11028
  %20 = load %struct.BMesh*, %struct.BMesh** %bm14, align 8, !dbg !11028
  %vdata15 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %20, i32 0, i32 24, !dbg !11029
  %call16 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata15, i32 2), !dbg !11030
  store i32 %call16, i32* %cd_dvert_offset, align 4, !dbg !11031
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11032
  %bm17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !11032
  %22 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !11032
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %22, i8 zeroext 1, i8* null), !dbg !11032
  %23 = bitcast i8* %call18 to %struct.BMVert*, !dbg !11032
  store %struct.BMVert* %23, %struct.BMVert** %eve, align 8, !dbg !11032
  br label %for.cond, !dbg !11032

for.cond:                                         ; preds = %for.inc, %if.end13
  %24 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11034
  %tobool19 = icmp ne %struct.BMVert* %24, null, !dbg !11032
  br i1 %tobool19, label %for.body, label %for.end, !dbg !11032

for.body:                                         ; preds = %for.cond
  %25 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11036
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %25, i32 0, i32 0, !dbg !11036
  %call20 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !11036
  %tobool21 = icmp ne i8 %call20, 0, !dbg !11036
  br i1 %tobool21, label %if.then22, label %if.end30, !dbg !11039

if.then22:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !11040, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !11043, metadata !DIExpression()), !dbg !11044
  %26 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11045
  %head23 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 0, !dbg !11045
  %data24 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head23, i32 0, i32 0, !dbg !11045
  %27 = load i8*, i8** %data24, align 8, !dbg !11045
  %28 = load i32, i32* %cd_dvert_offset, align 4, !dbg !11045
  %idx.ext = sext i32 %28 to i64, !dbg !11045
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext, !dbg !11045
  %29 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !11045
  store %struct.MDeformVert* %29, %struct.MDeformVert** %dv, align 8, !dbg !11046
  %30 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !11047
  %31 = load i32, i32* %def_nr, align 4, !dbg !11048
  %call25 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %30, i32 %31), !dbg !11049
  store %struct.MDeformWeight* %call25, %struct.MDeformWeight** %dw, align 8, !dbg !11050
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11051
  %tobool26 = icmp ne %struct.MDeformWeight* %32, null, !dbg !11051
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !11053

if.then27:                                        ; preds = %if.then22
  %33 = load float, float* %weight.addr, align 4, !dbg !11054
  %34 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11056
  %weight28 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %34, i32 0, i32 1, !dbg !11057
  store float %33, float* %weight28, align 4, !dbg !11058
  br label %if.end29, !dbg !11059

if.end29:                                         ; preds = %if.then27, %if.then22
  br label %if.end30, !dbg !11060

if.end30:                                         ; preds = %if.end29, %for.body
  br label %for.inc, !dbg !11061

for.inc:                                          ; preds = %if.end30
  %call31 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11034
  %35 = bitcast i8* %call31 to %struct.BMVert*, !dbg !11034
  store %struct.BMVert* %35, %struct.BMVert** %eve, align 8, !dbg !11034
  br label %for.cond, !dbg !11034, !llvm.loop !11062

for.end:                                          ; preds = %for.cond
  br label %if.end55, !dbg !11064

if.else:                                          ; preds = %if.then3
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !11065, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv32, metadata !11068, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11070, metadata !DIExpression()), !dbg !11071
  %36 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11072
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 17, !dbg !11074
  %37 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !11074
  %tobool33 = icmp ne %struct.MDeformVert* %37, null, !dbg !11072
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !11075

if.then34:                                        ; preds = %if.else
  %38 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11076
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %38, i32 0, i32 0, !dbg !11078
  %call35 = call zeroext i8 @ED_vgroup_data_create(%struct.ID* %id), !dbg !11079
  br label %if.end36, !dbg !11080

if.end36:                                         ; preds = %if.then34, %if.else
  %39 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11081
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %39, i32 0, i32 15, !dbg !11082
  %40 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !11082
  store %struct.MVert* %40, %struct.MVert** %mv, align 8, !dbg !11083
  %41 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11084
  %dvert37 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %41, i32 0, i32 17, !dbg !11085
  %42 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert37, align 8, !dbg !11085
  store %struct.MDeformVert* %42, %struct.MDeformVert** %dv32, align 8, !dbg !11086
  store i32 0, i32* %i, align 4, !dbg !11087
  br label %for.cond38, !dbg !11089

for.cond38:                                       ; preds = %for.inc52, %if.end36
  %43 = load i32, i32* %i, align 4, !dbg !11090
  %44 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11092
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %44, i32 0, i32 26, !dbg !11093
  %45 = load i32, i32* %totvert, align 8, !dbg !11093
  %cmp39 = icmp slt i32 %43, %45, !dbg !11094
  br i1 %cmp39, label %for.body41, label %for.end54, !dbg !11095

for.body41:                                       ; preds = %for.cond38
  %46 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !11096
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i32 0, i32 2, !dbg !11099
  %47 = load i8, i8* %flag, align 2, !dbg !11099
  %conv42 = zext i8 %47 to i32, !dbg !11096
  %and = and i32 %conv42, 1, !dbg !11100
  %tobool43 = icmp ne i32 %and, 0, !dbg !11100
  br i1 %tobool43, label %if.then44, label %if.end51, !dbg !11101

if.then44:                                        ; preds = %for.body41
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw45, metadata !11102, metadata !DIExpression()), !dbg !11104
  %48 = load %struct.MDeformVert*, %struct.MDeformVert** %dv32, align 8, !dbg !11105
  %49 = load i32, i32* %def_nr, align 4, !dbg !11106
  %call46 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %48, i32 %49), !dbg !11107
  store %struct.MDeformWeight* %call46, %struct.MDeformWeight** %dw45, align 8, !dbg !11108
  %50 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw45, align 8, !dbg !11109
  %tobool47 = icmp ne %struct.MDeformWeight* %50, null, !dbg !11109
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !11111

if.then48:                                        ; preds = %if.then44
  %51 = load float, float* %weight.addr, align 4, !dbg !11112
  %52 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw45, align 8, !dbg !11114
  %weight49 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %52, i32 0, i32 1, !dbg !11115
  store float %51, float* %weight49, align 4, !dbg !11116
  br label %if.end50, !dbg !11117

if.end50:                                         ; preds = %if.then48, %if.then44
  br label %if.end51, !dbg !11118

if.end51:                                         ; preds = %if.end50, %for.body41
  br label %for.inc52, !dbg !11119

for.inc52:                                        ; preds = %if.end51
  %53 = load i32, i32* %i, align 4, !dbg !11120
  %inc = add nsw i32 %53, 1, !dbg !11120
  store i32 %inc, i32* %i, align 4, !dbg !11120
  %54 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !11121
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i32 1, !dbg !11121
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !11121
  %55 = load %struct.MDeformVert*, %struct.MDeformVert** %dv32, align 8, !dbg !11122
  %incdec.ptr53 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %55, i32 1, !dbg !11122
  store %struct.MDeformVert* %incdec.ptr53, %struct.MDeformVert** %dv32, align 8, !dbg !11122
  br label %for.cond38, !dbg !11123, !llvm.loop !11124

for.end54:                                        ; preds = %for.cond38
  br label %if.end55

if.end55:                                         ; preds = %for.end54, %for.end
  br label %if.end97, !dbg !11126

if.else56:                                        ; preds = %if.end
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11127
  %type57 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 3, !dbg !11129
  %57 = load i16, i16* %type57, align 8, !dbg !11129
  %conv58 = sext i16 %57 to i32, !dbg !11127
  %cmp59 = icmp eq i32 %conv58, 22, !dbg !11130
  br i1 %cmp59, label %if.then61, label %if.end96, !dbg !11131

if.then61:                                        ; preds = %if.else56
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !11132, metadata !DIExpression()), !dbg !11134
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11135
  %call62 = call %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %58), !dbg !11136
  store %struct.Lattice* %call62, %struct.Lattice** %lt, align 8, !dbg !11134
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv63, metadata !11137, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !11139, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11141, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !11143, metadata !DIExpression()), !dbg !11144
  %59 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11145
  %dvert64 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %59, i32 0, i32 24, !dbg !11147
  %60 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert64, align 8, !dbg !11147
  %cmp65 = icmp eq %struct.MDeformVert* %60, null, !dbg !11148
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !11149

if.then67:                                        ; preds = %if.then61
  %61 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11150
  %id68 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %61, i32 0, i32 0, !dbg !11151
  %call69 = call zeroext i8 @ED_vgroup_data_create(%struct.ID* %id68), !dbg !11152
  br label %if.end70, !dbg !11152

if.end70:                                         ; preds = %if.then67, %if.then61
  %62 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11153
  %dvert71 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %62, i32 0, i32 24, !dbg !11154
  %63 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert71, align 8, !dbg !11154
  store %struct.MDeformVert* %63, %struct.MDeformVert** %dv63, align 8, !dbg !11155
  %64 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11156
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %64, i32 0, i32 2, !dbg !11157
  %65 = load i16, i16* %pntsu, align 8, !dbg !11157
  %conv72 = sext i16 %65 to i32, !dbg !11156
  %66 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11158
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %66, i32 0, i32 3, !dbg !11159
  %67 = load i16, i16* %pntsv, align 2, !dbg !11159
  %conv73 = sext i16 %67 to i32, !dbg !11158
  %mul = mul nsw i32 %conv72, %conv73, !dbg !11160
  %68 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11161
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %68, i32 0, i32 4, !dbg !11162
  %69 = load i16, i16* %pntsw, align 4, !dbg !11162
  %conv74 = sext i16 %69 to i32, !dbg !11161
  %mul75 = mul nsw i32 %mul, %conv74, !dbg !11163
  store i32 %mul75, i32* %tot, align 4, !dbg !11164
  store i32 0, i32* %a, align 4, !dbg !11165
  %70 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11167
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %70, i32 0, i32 21, !dbg !11168
  %71 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !11168
  store %struct.BPoint* %71, %struct.BPoint** %bp, align 8, !dbg !11169
  br label %for.cond76, !dbg !11170

for.cond76:                                       ; preds = %for.inc91, %if.end70
  %72 = load i32, i32* %a, align 4, !dbg !11171
  %73 = load i32, i32* %tot, align 4, !dbg !11173
  %cmp77 = icmp slt i32 %72, %73, !dbg !11174
  br i1 %cmp77, label %for.body79, label %for.end95, !dbg !11175

for.body79:                                       ; preds = %for.cond76
  %74 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11176
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %74, i32 0, i32 3, !dbg !11179
  %75 = load i16, i16* %f1, align 4, !dbg !11179
  %conv80 = sext i16 %75 to i32, !dbg !11176
  %and81 = and i32 %conv80, 1, !dbg !11180
  %tobool82 = icmp ne i32 %and81, 0, !dbg !11180
  br i1 %tobool82, label %if.then83, label %if.end90, !dbg !11181

if.then83:                                        ; preds = %for.body79
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw84, metadata !11182, metadata !DIExpression()), !dbg !11184
  %76 = load %struct.MDeformVert*, %struct.MDeformVert** %dv63, align 8, !dbg !11185
  %77 = load i32, i32* %def_nr, align 4, !dbg !11186
  %call85 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %76, i32 %77), !dbg !11187
  store %struct.MDeformWeight* %call85, %struct.MDeformWeight** %dw84, align 8, !dbg !11188
  %78 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw84, align 8, !dbg !11189
  %tobool86 = icmp ne %struct.MDeformWeight* %78, null, !dbg !11189
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !11191

if.then87:                                        ; preds = %if.then83
  %79 = load float, float* %weight.addr, align 4, !dbg !11192
  %80 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw84, align 8, !dbg !11194
  %weight88 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %80, i32 0, i32 1, !dbg !11195
  store float %79, float* %weight88, align 4, !dbg !11196
  br label %if.end89, !dbg !11197

if.end89:                                         ; preds = %if.then87, %if.then83
  br label %if.end90, !dbg !11198

if.end90:                                         ; preds = %if.end89, %for.body79
  br label %for.inc91, !dbg !11199

for.inc91:                                        ; preds = %if.end90
  %81 = load i32, i32* %a, align 4, !dbg !11200
  %inc92 = add nsw i32 %81, 1, !dbg !11200
  store i32 %inc92, i32* %a, align 4, !dbg !11200
  %82 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11201
  %incdec.ptr93 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %82, i32 1, !dbg !11201
  store %struct.BPoint* %incdec.ptr93, %struct.BPoint** %bp, align 8, !dbg !11201
  %83 = load %struct.MDeformVert*, %struct.MDeformVert** %dv63, align 8, !dbg !11202
  %incdec.ptr94 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %83, i32 1, !dbg !11202
  store %struct.MDeformVert* %incdec.ptr94, %struct.MDeformVert** %dv63, align 8, !dbg !11202
  br label %for.cond76, !dbg !11203, !llvm.loop !11204

for.end95:                                        ; preds = %for.cond76
  br label %if.end96, !dbg !11206

if.end96:                                         ; preds = %for.end95, %if.else56
  br label %if.end97

if.end97:                                         ; preds = %if.then, %if.end96, %if.end55
  ret void, !dbg !11207
}

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local void @BM_data_layer_add(%struct.BMesh*, %struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vgroup_remove_verts(%struct.Object* %ob, i32 %allverts) #0 !dbg !11208 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %allverts.addr = alloca i32, align 4
  %changed = alloca i8, align 1
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11211, metadata !DIExpression()), !dbg !11212
  store i32 %allverts, i32* %allverts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %allverts.addr, metadata !11213, metadata !DIExpression()), !dbg !11214
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !11215, metadata !DIExpression()), !dbg !11216
  store i8 0, i8* %changed, align 1, !dbg !11216
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !11217, metadata !DIExpression()), !dbg !11218
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11219
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !11221
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase, i32 0, i32 0, !dbg !11222
  %1 = load i8*, i8** %first, align 8, !dbg !11222
  %2 = bitcast i8* %1 to %struct.bDeformGroup*, !dbg !11219
  store %struct.bDeformGroup* %2, %struct.bDeformGroup** %dg, align 8, !dbg !11223
  br label %for.cond, !dbg !11224

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !11225
  %tobool = icmp ne %struct.bDeformGroup* %3, null, !dbg !11227
  br i1 %tobool, label %for.body, label %for.end, !dbg !11227

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11228
  %5 = load i32, i32* %allverts.addr, align 4, !dbg !11230
  %conv = trunc i32 %5 to i8, !dbg !11230
  %6 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !11231
  %call = call zeroext i8 @vgroup_active_remove_verts(%struct.Object* %4, i8 zeroext %conv, %struct.bDeformGroup* %6), !dbg !11232
  %conv1 = zext i8 %call to i32, !dbg !11232
  %7 = load i8, i8* %changed, align 1, !dbg !11233
  %conv2 = zext i8 %7 to i32, !dbg !11233
  %or = or i32 %conv2, %conv1, !dbg !11233
  %conv3 = trunc i32 %or to i8, !dbg !11233
  store i8 %conv3, i8* %changed, align 1, !dbg !11233
  br label %for.inc, !dbg !11234

for.inc:                                          ; preds = %for.body
  %8 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !11235
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %8, i32 0, i32 0, !dbg !11236
  %9 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !11236
  store %struct.bDeformGroup* %9, %struct.bDeformGroup** %dg, align 8, !dbg !11237
  br label %for.cond, !dbg !11238, !llvm.loop !11239

for.end:                                          ; preds = %for.cond
  %10 = load i8, i8* %changed, align 1, !dbg !11241
  ret i8 %10, !dbg !11242
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_select_verts(%struct.Object* %ob, i32 %select) #0 !dbg !11243 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %select.addr = alloca i32, align 4
  %def_nr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %mv = alloca %struct.MVert*, align 8
  %dv34 = alloca %struct.MDeformVert*, align 8
  %i = alloca i32, align 4
  %lt = alloca %struct.Lattice*, align 8
  %dv74 = alloca %struct.MDeformVert*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %actbp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11244, metadata !DIExpression()), !dbg !11245
  store i32 %select, i32* %select.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %select.addr, metadata !11246, metadata !DIExpression()), !dbg !11247
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !11248, metadata !DIExpression()), !dbg !11249
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11250
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 97, !dbg !11251
  %1 = load i16, i16* %actdef, align 2, !dbg !11251
  %conv = zext i16 %1 to i32, !dbg !11250
  %sub = sub nsw i32 %conv, 1, !dbg !11252
  store i32 %sub, i32* %def_nr, align 4, !dbg !11249
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11253
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 25, !dbg !11255
  %3 = load i32, i32* %def_nr, align 4, !dbg !11256
  %call = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %3), !dbg !11257
  %tobool = icmp ne i8* %call, null, !dbg !11257
  br i1 %tobool, label %if.end, label %if.then, !dbg !11258

if.then:                                          ; preds = %entry
  br label %if.end113, !dbg !11259

if.end:                                           ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11261
  %type = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !11263
  %5 = load i16, i16* %type, align 8, !dbg !11263
  %conv1 = sext i16 %5 to i32, !dbg !11261
  %cmp = icmp eq i32 %conv1, 1, !dbg !11264
  br i1 %cmp, label %if.then3, label %if.else64, !dbg !11265

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !11266, metadata !DIExpression()), !dbg !11268
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11269
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !11270
  %7 = load i8*, i8** %data, align 8, !dbg !11270
  %8 = bitcast i8* %7 to %struct.Mesh*, !dbg !11269
  store %struct.Mesh* %8, %struct.Mesh** %me, align 8, !dbg !11268
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11271
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 20, !dbg !11273
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !11273
  %tobool4 = icmp ne %struct.BMEditMesh* %10, null, !dbg !11271
  br i1 %tobool4, label %if.then5, label %if.else31, !dbg !11274

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !11275, metadata !DIExpression()), !dbg !11277
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11278
  %edit_btmesh6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 20, !dbg !11279
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh6, align 8, !dbg !11279
  store %struct.BMEditMesh* %12, %struct.BMEditMesh** %em, align 8, !dbg !11277
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !11280, metadata !DIExpression()), !dbg !11281
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11282
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !11283
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11283
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 24, !dbg !11284
  %call7 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !11285
  store i32 %call7, i32* %cd_dvert_offset, align 4, !dbg !11281
  %15 = load i32, i32* %cd_dvert_offset, align 4, !dbg !11286
  %cmp8 = icmp ne i32 %15, -1, !dbg !11288
  br i1 %cmp8, label %if.then10, label %if.end30, !dbg !11289

if.then10:                                        ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11290, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !11293, metadata !DIExpression()), !dbg !11294
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11295
  %bm11 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !11295
  %17 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !11295
  %call12 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %17, i8 zeroext 1, i8* null), !dbg !11295
  %18 = bitcast i8* %call12 to %struct.BMVert*, !dbg !11295
  store %struct.BMVert* %18, %struct.BMVert** %eve, align 8, !dbg !11295
  br label %for.cond, !dbg !11295

for.cond:                                         ; preds = %for.inc, %if.then10
  %19 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11297
  %tobool13 = icmp ne %struct.BMVert* %19, null, !dbg !11295
  br i1 %tobool13, label %for.body, label %for.end, !dbg !11295

for.body:                                         ; preds = %for.cond
  %20 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11299
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 0, !dbg !11299
  %call14 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !11299
  %tobool15 = icmp ne i8 %call14, 0, !dbg !11299
  br i1 %tobool15, label %if.end25, label %if.then16, !dbg !11302

if.then16:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !11303, metadata !DIExpression()), !dbg !11305
  %21 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11306
  %head17 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 0, !dbg !11306
  %data18 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head17, i32 0, i32 0, !dbg !11306
  %22 = load i8*, i8** %data18, align 8, !dbg !11306
  %23 = load i32, i32* %cd_dvert_offset, align 4, !dbg !11306
  %idx.ext = sext i32 %23 to i64, !dbg !11306
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.ext, !dbg !11306
  %24 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !11306
  store %struct.MDeformVert* %24, %struct.MDeformVert** %dv, align 8, !dbg !11305
  %25 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !11307
  %26 = load i32, i32* %def_nr, align 4, !dbg !11309
  %call19 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %25, i32 %26), !dbg !11310
  %tobool20 = icmp ne %struct.MDeformWeight* %call19, null, !dbg !11310
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !11311

if.then21:                                        ; preds = %if.then16
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11312
  %bm22 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !11314
  %28 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !11314
  %29 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !11315
  %30 = load i32, i32* %select.addr, align 4, !dbg !11316
  %conv23 = trunc i32 %30 to i8, !dbg !11316
  call void @BM_vert_select_set(%struct.BMesh* %28, %struct.BMVert* %29, i8 zeroext %conv23), !dbg !11317
  br label %if.end24, !dbg !11318

if.end24:                                         ; preds = %if.then21, %if.then16
  br label %if.end25, !dbg !11319

if.end25:                                         ; preds = %if.end24, %for.body
  br label %for.inc, !dbg !11320

for.inc:                                          ; preds = %if.end25
  %call26 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11297
  %31 = bitcast i8* %call26 to %struct.BMVert*, !dbg !11297
  store %struct.BMVert* %31, %struct.BMVert** %eve, align 8, !dbg !11297
  br label %for.cond, !dbg !11297, !llvm.loop !11321

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %select.addr, align 4, !dbg !11323
  %tobool27 = icmp ne i32 %32, 0, !dbg !11323
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !11325

if.then28:                                        ; preds = %for.end
  %33 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11326
  call void @EDBM_select_flush(%struct.BMEditMesh* %33), !dbg !11327
  br label %if.end29, !dbg !11327

if.else:                                          ; preds = %for.end
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !11328
  call void @EDBM_deselect_flush(%struct.BMEditMesh* %34), !dbg !11329
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30, !dbg !11330

if.end30:                                         ; preds = %if.end29, %if.then5
  br label %if.end63, !dbg !11331

if.else31:                                        ; preds = %if.then3
  %35 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11332
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 17, !dbg !11335
  %36 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !11335
  %tobool32 = icmp ne %struct.MDeformVert* %36, null, !dbg !11332
  br i1 %tobool32, label %if.then33, label %if.end62, !dbg !11336

if.then33:                                        ; preds = %if.else31
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !11337, metadata !DIExpression()), !dbg !11339
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv34, metadata !11340, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11342, metadata !DIExpression()), !dbg !11343
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11344
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 15, !dbg !11345
  %38 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !11345
  store %struct.MVert* %38, %struct.MVert** %mv, align 8, !dbg !11346
  %39 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11347
  %dvert35 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %39, i32 0, i32 17, !dbg !11348
  %40 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert35, align 8, !dbg !11348
  store %struct.MDeformVert* %40, %struct.MDeformVert** %dv34, align 8, !dbg !11349
  store i32 0, i32* %i, align 4, !dbg !11350
  br label %for.cond36, !dbg !11352

for.cond36:                                       ; preds = %for.inc59, %if.then33
  %41 = load i32, i32* %i, align 4, !dbg !11353
  %42 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !11355
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 26, !dbg !11356
  %43 = load i32, i32* %totvert, align 8, !dbg !11356
  %cmp37 = icmp slt i32 %41, %43, !dbg !11357
  br i1 %cmp37, label %for.body39, label %for.end61, !dbg !11358

for.body39:                                       ; preds = %for.cond36
  %44 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !11359
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %44, i32 0, i32 2, !dbg !11362
  %45 = load i8, i8* %flag, align 2, !dbg !11362
  %conv40 = zext i8 %45 to i32, !dbg !11359
  %and = and i32 %conv40, 16, !dbg !11363
  %tobool41 = icmp ne i32 %and, 0, !dbg !11363
  br i1 %tobool41, label %if.end58, label %if.then42, !dbg !11364

if.then42:                                        ; preds = %for.body39
  %46 = load %struct.MDeformVert*, %struct.MDeformVert** %dv34, align 8, !dbg !11365
  %47 = load i32, i32* %def_nr, align 4, !dbg !11368
  %call43 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %46, i32 %47), !dbg !11369
  %tobool44 = icmp ne %struct.MDeformWeight* %call43, null, !dbg !11369
  br i1 %tobool44, label %if.then45, label %if.end57, !dbg !11370

if.then45:                                        ; preds = %if.then42
  %48 = load i32, i32* %select.addr, align 4, !dbg !11371
  %tobool46 = icmp ne i32 %48, 0, !dbg !11371
  br i1 %tobool46, label %if.then47, label %if.else51, !dbg !11374

if.then47:                                        ; preds = %if.then45
  %49 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !11375
  %flag48 = getelementptr inbounds %struct.MVert, %struct.MVert* %49, i32 0, i32 2, !dbg !11376
  %50 = load i8, i8* %flag48, align 2, !dbg !11377
  %conv49 = zext i8 %50 to i32, !dbg !11377
  %or = or i32 %conv49, 1, !dbg !11377
  %conv50 = trunc i32 %or to i8, !dbg !11377
  store i8 %conv50, i8* %flag48, align 2, !dbg !11377
  br label %if.end56, !dbg !11375

if.else51:                                        ; preds = %if.then45
  %51 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !11378
  %flag52 = getelementptr inbounds %struct.MVert, %struct.MVert* %51, i32 0, i32 2, !dbg !11379
  %52 = load i8, i8* %flag52, align 2, !dbg !11380
  %conv53 = zext i8 %52 to i32, !dbg !11380
  %and54 = and i32 %conv53, -2, !dbg !11380
  %conv55 = trunc i32 %and54 to i8, !dbg !11380
  store i8 %conv55, i8* %flag52, align 2, !dbg !11380
  br label %if.end56

if.end56:                                         ; preds = %if.else51, %if.then47
  br label %if.end57, !dbg !11381

if.end57:                                         ; preds = %if.end56, %if.then42
  br label %if.end58, !dbg !11382

if.end58:                                         ; preds = %if.end57, %for.body39
  br label %for.inc59, !dbg !11383

for.inc59:                                        ; preds = %if.end58
  %53 = load i32, i32* %i, align 4, !dbg !11384
  %inc = add nsw i32 %53, 1, !dbg !11384
  store i32 %inc, i32* %i, align 4, !dbg !11384
  %54 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !11385
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i32 1, !dbg !11385
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !11385
  %55 = load %struct.MDeformVert*, %struct.MDeformVert** %dv34, align 8, !dbg !11386
  %incdec.ptr60 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %55, i32 1, !dbg !11386
  store %struct.MDeformVert* %incdec.ptr60, %struct.MDeformVert** %dv34, align 8, !dbg !11386
  br label %for.cond36, !dbg !11387, !llvm.loop !11388

for.end61:                                        ; preds = %for.cond36
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11390
  call void @paintvert_flush_flags(%struct.Object* %56), !dbg !11391
  br label %if.end62, !dbg !11392

if.end62:                                         ; preds = %for.end61, %if.else31
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end30
  br label %if.end113, !dbg !11393

if.else64:                                        ; preds = %if.end
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11394
  %type65 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 3, !dbg !11396
  %58 = load i16, i16* %type65, align 8, !dbg !11396
  %conv66 = sext i16 %58 to i32, !dbg !11394
  %cmp67 = icmp eq i32 %conv66, 22, !dbg !11397
  br i1 %cmp67, label %if.then69, label %if.end112, !dbg !11398

if.then69:                                        ; preds = %if.else64
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !11399, metadata !DIExpression()), !dbg !11401
  %59 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11402
  %call70 = call %struct.Lattice* @vgroup_edit_lattice(%struct.Object* %59), !dbg !11403
  store %struct.Lattice* %call70, %struct.Lattice** %lt, align 8, !dbg !11401
  %60 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11404
  %dvert71 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %60, i32 0, i32 24, !dbg !11406
  %61 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert71, align 8, !dbg !11406
  %tobool72 = icmp ne %struct.MDeformVert* %61, null, !dbg !11404
  br i1 %tobool72, label %if.then73, label %if.end111, !dbg !11407

if.then73:                                        ; preds = %if.then69
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv74, metadata !11408, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !11411, metadata !DIExpression()), !dbg !11412
  call void @llvm.dbg.declare(metadata %struct.BPoint** %actbp, metadata !11413, metadata !DIExpression()), !dbg !11414
  %62 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11415
  %call75 = call %struct.BPoint* @BKE_lattice_active_point_get(%struct.Lattice* %62), !dbg !11416
  store %struct.BPoint* %call75, %struct.BPoint** %actbp, align 8, !dbg !11414
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11417, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !11419, metadata !DIExpression()), !dbg !11420
  %63 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11421
  %dvert76 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %63, i32 0, i32 24, !dbg !11422
  %64 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert76, align 8, !dbg !11422
  store %struct.MDeformVert* %64, %struct.MDeformVert** %dv74, align 8, !dbg !11423
  %65 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11424
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %65, i32 0, i32 2, !dbg !11425
  %66 = load i16, i16* %pntsu, align 8, !dbg !11425
  %conv77 = sext i16 %66 to i32, !dbg !11424
  %67 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11426
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %67, i32 0, i32 3, !dbg !11427
  %68 = load i16, i16* %pntsv, align 2, !dbg !11427
  %conv78 = sext i16 %68 to i32, !dbg !11426
  %mul = mul nsw i32 %conv77, %conv78, !dbg !11428
  %69 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11429
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %69, i32 0, i32 4, !dbg !11430
  %70 = load i16, i16* %pntsw, align 4, !dbg !11430
  %conv79 = sext i16 %70 to i32, !dbg !11429
  %mul80 = mul nsw i32 %mul, %conv79, !dbg !11431
  store i32 %mul80, i32* %tot, align 4, !dbg !11432
  store i32 0, i32* %a, align 4, !dbg !11433
  %71 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11435
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %71, i32 0, i32 21, !dbg !11436
  %72 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !11436
  store %struct.BPoint* %72, %struct.BPoint** %bp, align 8, !dbg !11437
  br label %for.cond81, !dbg !11438

for.cond81:                                       ; preds = %for.inc106, %if.then73
  %73 = load i32, i32* %a, align 4, !dbg !11439
  %74 = load i32, i32* %tot, align 4, !dbg !11441
  %cmp82 = icmp slt i32 %73, %74, !dbg !11442
  br i1 %cmp82, label %for.body84, label %for.end110, !dbg !11443

for.body84:                                       ; preds = %for.cond81
  %75 = load %struct.MDeformVert*, %struct.MDeformVert** %dv74, align 8, !dbg !11444
  %76 = load i32, i32* %def_nr, align 4, !dbg !11447
  %call85 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %75, i32 %76), !dbg !11448
  %tobool86 = icmp ne %struct.MDeformWeight* %call85, null, !dbg !11448
  br i1 %tobool86, label %if.then87, label %if.end105, !dbg !11449

if.then87:                                        ; preds = %for.body84
  %77 = load i32, i32* %select.addr, align 4, !dbg !11450
  %tobool88 = icmp ne i32 %77, 0, !dbg !11450
  br i1 %tobool88, label %if.then89, label %if.else93, !dbg !11453

if.then89:                                        ; preds = %if.then87
  %78 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11454
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %78, i32 0, i32 3, !dbg !11455
  %79 = load i16, i16* %f1, align 4, !dbg !11456
  %conv90 = sext i16 %79 to i32, !dbg !11456
  %or91 = or i32 %conv90, 1, !dbg !11456
  %conv92 = trunc i32 %or91 to i16, !dbg !11456
  store i16 %conv92, i16* %f1, align 4, !dbg !11456
  br label %if.end104, !dbg !11454

if.else93:                                        ; preds = %if.then87
  %80 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11457
  %f194 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %80, i32 0, i32 3, !dbg !11459
  %81 = load i16, i16* %f194, align 4, !dbg !11460
  %conv95 = sext i16 %81 to i32, !dbg !11460
  %and96 = and i32 %conv95, -2, !dbg !11460
  %conv97 = trunc i32 %and96 to i16, !dbg !11460
  store i16 %conv97, i16* %f194, align 4, !dbg !11460
  %82 = load %struct.BPoint*, %struct.BPoint** %actbp, align 8, !dbg !11461
  %tobool98 = icmp ne %struct.BPoint* %82, null, !dbg !11461
  br i1 %tobool98, label %land.lhs.true, label %if.end103, !dbg !11463

land.lhs.true:                                    ; preds = %if.else93
  %83 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11464
  %84 = load %struct.BPoint*, %struct.BPoint** %actbp, align 8, !dbg !11465
  %cmp99 = icmp eq %struct.BPoint* %83, %84, !dbg !11466
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !11467

if.then101:                                       ; preds = %land.lhs.true
  %85 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !11468
  %actbp102 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %85, i32 0, i32 14, !dbg !11469
  store i32 -1, i32* %actbp102, align 4, !dbg !11470
  br label %if.end103, !dbg !11468

if.end103:                                        ; preds = %if.then101, %land.lhs.true, %if.else93
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then89
  br label %if.end105, !dbg !11471

if.end105:                                        ; preds = %if.end104, %for.body84
  br label %for.inc106, !dbg !11472

for.inc106:                                       ; preds = %if.end105
  %86 = load i32, i32* %a, align 4, !dbg !11473
  %inc107 = add nsw i32 %86, 1, !dbg !11473
  store i32 %inc107, i32* %a, align 4, !dbg !11473
  %87 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11474
  %incdec.ptr108 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %87, i32 1, !dbg !11474
  store %struct.BPoint* %incdec.ptr108, %struct.BPoint** %bp, align 8, !dbg !11474
  %88 = load %struct.MDeformVert*, %struct.MDeformVert** %dv74, align 8, !dbg !11475
  %incdec.ptr109 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %88, i32 1, !dbg !11475
  store %struct.MDeformVert* %incdec.ptr109, %struct.MDeformVert** %dv74, align 8, !dbg !11475
  br label %for.cond81, !dbg !11476, !llvm.loop !11477

for.end110:                                       ; preds = %for.cond81
  br label %if.end111, !dbg !11479

if.end111:                                        ; preds = %for.end110, %if.then69
  br label %if.end112, !dbg !11480

if.end112:                                        ; preds = %if.end111, %if.else64
  br label %if.end113

if.end113:                                        ; preds = %if.then, %if.end112, %if.end63
  ret void, !dbg !11481
}

declare dso_local void @BM_vert_select_set(%struct.BMesh*, %struct.BMVert*, i8 zeroext) #2

declare dso_local void @EDBM_select_flush(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_deselect_flush(%struct.BMEditMesh*) #2

declare dso_local void @paintvert_flush_flags(%struct.Object*) #2

declare dso_local %struct.BPoint* @BKE_lattice_active_point_get(%struct.Lattice*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_duplicate(%struct.Object* %ob) #0 !dbg !11482 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dg = alloca %struct.bDeformGroup*, align 8
  %cdg = alloca %struct.bDeformGroup*, align 8
  %name = alloca [64 x i8], align 16
  %dw_org = alloca %struct.MDeformWeight*, align 8
  %dw_cpy = alloca %struct.MDeformWeight*, align 8
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %i = alloca i32, align 4
  %idg = alloca i32, align 4
  %icdg = alloca i32, align 4
  %dvert_tot = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %weight = alloca float, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11483, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !11485, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %cdg, metadata !11487, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.declare(metadata [64 x i8]* %name, metadata !11489, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_org, metadata !11491, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_cpy, metadata !11493, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !11495, metadata !DIExpression()), !dbg !11496
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11496
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11497, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.declare(metadata i32* %idg, metadata !11499, metadata !DIExpression()), !dbg !11500
  call void @llvm.dbg.declare(metadata i32* %icdg, metadata !11501, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !11503, metadata !DIExpression()), !dbg !11504
  store i32 0, i32* %dvert_tot, align 4, !dbg !11504
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11505
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !11506
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11507
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 97, !dbg !11508
  %2 = load i16, i16* %actdef, align 2, !dbg !11508
  %conv = zext i16 %2 to i32, !dbg !11507
  %sub = sub nsw i32 %conv, 1, !dbg !11509
  %call = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %sub), !dbg !11510
  %3 = bitcast i8* %call to %struct.bDeformGroup*, !dbg !11510
  store %struct.bDeformGroup* %3, %struct.bDeformGroup** %dg, align 8, !dbg !11511
  %4 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !11512
  %tobool = icmp ne %struct.bDeformGroup* %4, null, !dbg !11512
  br i1 %tobool, label %if.end, label %if.then, !dbg !11514

if.then:                                          ; preds = %entry
  br label %if.end41, !dbg !11515

if.end:                                           ; preds = %entry
  %5 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !11516
  %name1 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %5, i32 0, i32 2, !dbg !11518
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name1, i64 0, i64 0, !dbg !11516
  %call2 = call i8* @strstr(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.188, i64 0, i64 0)) #6, !dbg !11519
  %tobool3 = icmp ne i8* %call2, null, !dbg !11519
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !11520

if.then4:                                         ; preds = %if.end
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11521
  %6 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !11523
  %name6 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %6, i32 0, i32 2, !dbg !11524
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %name6, i64 0, i64 0, !dbg !11523
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay5, i64 64, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i64 0, i64 0), i8* %arraydecay7), !dbg !11525
  br label %if.end13, !dbg !11526

if.else:                                          ; preds = %if.end
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11527
  %7 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !11529
  %name10 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %7, i32 0, i32 2, !dbg !11530
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %name10, i64 0, i64 0, !dbg !11529
  %call12 = call i8* @BLI_strncpy(i8* %arraydecay9, i8* %arraydecay11, i64 64), !dbg !11531
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then4
  %8 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !11532
  %call14 = call %struct.bDeformGroup* @defgroup_duplicate(%struct.bDeformGroup* %8), !dbg !11533
  store %struct.bDeformGroup* %call14, %struct.bDeformGroup** %cdg, align 8, !dbg !11534
  %9 = load %struct.bDeformGroup*, %struct.bDeformGroup** %cdg, align 8, !dbg !11535
  %name15 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %9, i32 0, i32 2, !dbg !11536
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %name15, i64 0, i64 0, !dbg !11535
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !11537
  %call18 = call i8* @BLI_strncpy(i8* %arraydecay16, i8* %arraydecay17, i64 64), !dbg !11538
  %10 = load %struct.bDeformGroup*, %struct.bDeformGroup** %cdg, align 8, !dbg !11539
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11540
  call void @defgroup_unique_name(%struct.bDeformGroup* %10, %struct.Object* %11), !dbg !11541
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11542
  %defbase19 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 25, !dbg !11543
  %13 = load %struct.bDeformGroup*, %struct.bDeformGroup** %cdg, align 8, !dbg !11544
  %14 = bitcast %struct.bDeformGroup* %13 to i8*, !dbg !11544
  call void @BLI_addtail(%struct.ListBase* %defbase19, i8* %14), !dbg !11545
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11546
  %actdef20 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 97, !dbg !11547
  %16 = load i16, i16* %actdef20, align 2, !dbg !11547
  %conv21 = zext i16 %16 to i32, !dbg !11546
  %sub22 = sub nsw i32 %conv21, 1, !dbg !11548
  store i32 %sub22, i32* %idg, align 4, !dbg !11549
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11550
  %defbase23 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 25, !dbg !11551
  %call24 = call i32 @BLI_countlist(%struct.ListBase* %defbase23), !dbg !11552
  %conv25 = trunc i32 %call24 to i16, !dbg !11552
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11553
  %actdef26 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 97, !dbg !11554
  store i16 %conv25, i16* %actdef26, align 2, !dbg !11555
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11556
  %actdef27 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 97, !dbg !11557
  %20 = load i16, i16* %actdef27, align 2, !dbg !11557
  %conv28 = zext i16 %20 to i32, !dbg !11556
  %sub29 = sub nsw i32 %conv28, 1, !dbg !11558
  store i32 %sub29, i32* %icdg, align 4, !dbg !11559
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11560
  %data = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 19, !dbg !11561
  %22 = load i8*, i8** %data, align 8, !dbg !11561
  %23 = bitcast i8* %22 to %struct.ID*, !dbg !11560
  %call30 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %23, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext 0), !dbg !11562
  %24 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11563
  %tobool31 = icmp ne %struct.MDeformVert** %24, null, !dbg !11563
  br i1 %tobool31, label %if.then32, label %if.end41, !dbg !11565

if.then32:                                        ; preds = %if.end13
  store i32 0, i32* %i, align 4, !dbg !11566
  br label %for.cond, !dbg !11569

for.cond:                                         ; preds = %for.inc, %if.then32
  %25 = load i32, i32* %i, align 4, !dbg !11570
  %26 = load i32, i32* %dvert_tot, align 4, !dbg !11572
  %cmp = icmp slt i32 %25, %26, !dbg !11573
  br i1 %cmp, label %for.body, label %for.end, !dbg !11574

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !11575, metadata !DIExpression()), !dbg !11577
  %27 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11578
  %28 = load i32, i32* %i, align 4, !dbg !11579
  %idxprom = sext i32 %28 to i64, !dbg !11578
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %27, i64 %idxprom, !dbg !11578
  %29 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !11578
  store %struct.MDeformVert* %29, %struct.MDeformVert** %dv, align 8, !dbg !11577
  %30 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !11580
  %31 = load i32, i32* %idg, align 4, !dbg !11581
  %call34 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %30, i32 %31), !dbg !11582
  store %struct.MDeformWeight* %call34, %struct.MDeformWeight** %dw_org, align 8, !dbg !11583
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_org, align 8, !dbg !11584
  %tobool35 = icmp ne %struct.MDeformWeight* %32, null, !dbg !11584
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !11586

if.then36:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %weight, metadata !11587, metadata !DIExpression()), !dbg !11589
  %33 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_org, align 8, !dbg !11590
  %weight37 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %33, i32 0, i32 1, !dbg !11591
  %34 = load float, float* %weight37, align 4, !dbg !11591
  store float %34, float* %weight, align 4, !dbg !11589
  %35 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !11592
  %36 = load i32, i32* %icdg, align 4, !dbg !11593
  %call38 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %35, i32 %36), !dbg !11594
  store %struct.MDeformWeight* %call38, %struct.MDeformWeight** %dw_cpy, align 8, !dbg !11595
  %37 = load float, float* %weight, align 4, !dbg !11596
  %38 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_cpy, align 8, !dbg !11597
  %weight39 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %38, i32 0, i32 1, !dbg !11598
  store float %37, float* %weight39, align 4, !dbg !11599
  br label %if.end40, !dbg !11600

if.end40:                                         ; preds = %if.then36, %for.body
  br label %for.inc, !dbg !11601

for.inc:                                          ; preds = %if.end40
  %39 = load i32, i32* %i, align 4, !dbg !11602
  %inc = add nsw i32 %39, 1, !dbg !11602
  store i32 %inc, i32* %i, align 4, !dbg !11602
  br label %for.cond, !dbg !11603, !llvm.loop !11604

for.end:                                          ; preds = %for.cond
  %40 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11606
  %41 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11607
  %42 = bitcast %struct.MDeformVert** %41 to i8*, !dbg !11607
  call void %40(i8* %42), !dbg !11606
  br label %if.end41, !dbg !11608

if.end41:                                         ; preds = %if.then, %for.end, %if.end13
  ret void, !dbg !11609
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #4

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local %struct.bDeformGroup* @defgroup_duplicate(%struct.bDeformGroup*) #2

declare dso_local void @defgroup_unique_name(%struct.bDeformGroup*, %struct.Object*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_levels_subset(%struct.Object* %ob, i8* %vgroup_validmap, i32 %vgroup_tot, i32 %UNUSED_subset_count, float %offset, float %gain) #0 !dbg !11610 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %UNUSED_subset_count.addr = alloca i32, align 4
  %offset.addr = alloca float, align 4
  %gain.addr = alloca float, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %i = alloca i32, align 4
  %dvert_tot = alloca i32, align 4
  %use_vert_sel = alloca i8, align 1
  %use_mirror = alloca i8, align 1
  %j = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11613, metadata !DIExpression()), !dbg !11614
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !11615, metadata !DIExpression()), !dbg !11616
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !11617, metadata !DIExpression()), !dbg !11618
  store i32 %UNUSED_subset_count, i32* %UNUSED_subset_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_subset_count.addr, metadata !11619, metadata !DIExpression()), !dbg !11620
  store float %offset, float* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata float* %offset.addr, metadata !11621, metadata !DIExpression()), !dbg !11622
  store float %gain, float* %gain.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr, metadata !11623, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !11625, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !11627, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !11629, metadata !DIExpression()), !dbg !11630
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11630
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11631, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !11633, metadata !DIExpression()), !dbg !11634
  store i32 0, i32* %dvert_tot, align 4, !dbg !11634
  call void @llvm.dbg.declare(metadata i8* %use_vert_sel, metadata !11635, metadata !DIExpression()), !dbg !11636
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11637
  %call = call zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %0), !dbg !11638
  store i8 %call, i8* %use_vert_sel, align 1, !dbg !11636
  call void @llvm.dbg.declare(metadata i8* %use_mirror, metadata !11639, metadata !DIExpression()), !dbg !11640
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11641
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !11642
  %2 = load i16, i16* %type, align 8, !dbg !11642
  %conv = sext i16 %2 to i32, !dbg !11641
  %cmp = icmp eq i32 %conv, 1, !dbg !11643
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11644

cond.true:                                        ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11645
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !11646
  %4 = load i8*, i8** %data, align 8, !dbg !11646
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !11647
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !11648
  %6 = load i8, i8* %editflag, align 1, !dbg !11648
  %conv2 = zext i8 %6 to i32, !dbg !11649
  %and = and i32 %conv2, 1, !dbg !11650
  %cmp3 = icmp ne i32 %and, 0, !dbg !11651
  %conv4 = zext i1 %cmp3 to i32, !dbg !11651
  br label %cond.end, !dbg !11644

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11644

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ 0, %cond.false ], !dbg !11644
  %conv5 = trunc i32 %cond to i8, !dbg !11644
  store i8 %conv5, i8* %use_mirror, align 1, !dbg !11640
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11652
  %data6 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !11653
  %8 = load i8*, i8** %data6, align 8, !dbg !11653
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !11652
  %10 = load i8, i8* %use_vert_sel, align 1, !dbg !11654
  %call7 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %9, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext %10), !dbg !11655
  %11 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11656
  %tobool = icmp ne %struct.MDeformVert** %11, null, !dbg !11656
  br i1 %tobool, label %if.then, label %if.end41, !dbg !11658

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !11659
  br label %for.cond, !dbg !11662

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !11663
  %13 = load i32, i32* %dvert_tot, align 4, !dbg !11665
  %cmp8 = icmp slt i32 %12, %13, !dbg !11666
  br i1 %cmp8, label %for.body, label %for.end, !dbg !11667

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11668, metadata !DIExpression()), !dbg !11670
  %14 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11671
  %15 = load i32, i32* %i, align 4, !dbg !11673
  %idxprom = sext i32 %15 to i64, !dbg !11671
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %14, i64 %idxprom, !dbg !11671
  %16 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !11671
  store %struct.MDeformVert* %16, %struct.MDeformVert** %dv, align 8, !dbg !11674
  %tobool10 = icmp ne %struct.MDeformVert* %16, null, !dbg !11674
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !11675

if.then11:                                        ; preds = %for.body
  br label %for.inc, !dbg !11676

if.end:                                           ; preds = %for.body
  %17 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !11678
  store i32 %17, i32* %j, align 4, !dbg !11679
  br label %while.cond, !dbg !11680

while.cond:                                       ; preds = %if.end34, %if.end
  %18 = load i32, i32* %j, align 4, !dbg !11681
  %dec = add nsw i32 %18, -1, !dbg !11681
  store i32 %dec, i32* %j, align 4, !dbg !11681
  %tobool12 = icmp ne i32 %18, 0, !dbg !11680
  br i1 %tobool12, label %while.body, label %while.end, !dbg !11680

while.body:                                       ; preds = %while.cond
  %19 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !11682
  %20 = load i32, i32* %j, align 4, !dbg !11685
  %idxprom13 = sext i32 %20 to i64, !dbg !11682
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %idxprom13, !dbg !11682
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !11682
  %tobool15 = icmp ne i8 %21, 0, !dbg !11682
  br i1 %tobool15, label %if.then16, label %if.end34, !dbg !11686

if.then16:                                        ; preds = %while.body
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !11687
  %23 = load i32, i32* %j, align 4, !dbg !11689
  %call17 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %22, i32 %23), !dbg !11690
  store %struct.MDeformWeight* %call17, %struct.MDeformWeight** %dw, align 8, !dbg !11691
  %24 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11692
  %tobool18 = icmp ne %struct.MDeformWeight* %24, null, !dbg !11692
  br i1 %tobool18, label %if.then19, label %if.end33, !dbg !11694

if.then19:                                        ; preds = %if.then16
  %25 = load float, float* %gain.addr, align 4, !dbg !11695
  %26 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11697
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %26, i32 0, i32 1, !dbg !11698
  %27 = load float, float* %weight, align 4, !dbg !11698
  %28 = load float, float* %offset.addr, align 4, !dbg !11699
  %add = fadd float %27, %28, !dbg !11700
  %mul = fmul float %25, %add, !dbg !11701
  %29 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11702
  %weight20 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %29, i32 0, i32 1, !dbg !11703
  store float %mul, float* %weight20, align 4, !dbg !11704
  %30 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11705
  %weight21 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %30, i32 0, i32 1, !dbg !11705
  %31 = load float, float* %weight21, align 4, !dbg !11705
  %cmp22 = fcmp olt float %31, 0.000000e+00, !dbg !11705
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !11708

if.then24:                                        ; preds = %if.then19
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11705
  %weight25 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %32, i32 0, i32 1, !dbg !11705
  store float 0.000000e+00, float* %weight25, align 4, !dbg !11705
  br label %if.end32, !dbg !11705

if.else:                                          ; preds = %if.then19
  %33 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11709
  %weight26 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %33, i32 0, i32 1, !dbg !11709
  %34 = load float, float* %weight26, align 4, !dbg !11709
  %cmp27 = fcmp ogt float %34, 1.000000e+00, !dbg !11709
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !11705

if.then29:                                        ; preds = %if.else
  %35 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11709
  %weight30 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %35, i32 0, i32 1, !dbg !11709
  store float 1.000000e+00, float* %weight30, align 4, !dbg !11709
  br label %if.end31, !dbg !11709

if.end31:                                         ; preds = %if.then29, %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then24
  br label %if.end33, !dbg !11711

if.end33:                                         ; preds = %if.end32, %if.then16
  br label %if.end34, !dbg !11712

if.end34:                                         ; preds = %if.end33, %while.body
  br label %while.cond, !dbg !11680, !llvm.loop !11713

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !11715

for.inc:                                          ; preds = %while.end, %if.then11
  %36 = load i32, i32* %i, align 4, !dbg !11716
  %inc = add nsw i32 %36, 1, !dbg !11716
  store i32 %inc, i32* %i, align 4, !dbg !11716
  br label %for.cond, !dbg !11717, !llvm.loop !11718

for.end:                                          ; preds = %for.cond
  %37 = load i8, i8* %use_mirror, align 1, !dbg !11720
  %conv35 = zext i8 %37 to i32, !dbg !11720
  %tobool36 = icmp ne i32 %conv35, 0, !dbg !11720
  br i1 %tobool36, label %land.lhs.true, label %if.end40, !dbg !11722

land.lhs.true:                                    ; preds = %for.end
  %38 = load i8, i8* %use_vert_sel, align 1, !dbg !11723
  %conv37 = zext i8 %38 to i32, !dbg !11723
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !11723
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !11724

if.then39:                                        ; preds = %land.lhs.true
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11725
  %40 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11727
  %41 = load i32, i32* %dvert_tot, align 4, !dbg !11728
  %42 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !11729
  %43 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !11730
  call void @ED_vgroup_parray_mirror_sync(%struct.Object* %39, %struct.MDeformVert** %40, i32 %41, i8* %42, i32 %43), !dbg !11731
  br label %if.end40, !dbg !11732

if.end40:                                         ; preds = %if.then39, %land.lhs.true, %for.end
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11733
  %45 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11734
  %46 = bitcast %struct.MDeformVert** %45 to i8*, !dbg !11734
  call void %44(i8* %46), !dbg !11733
  br label %if.end41, !dbg !11735

if.end41:                                         ; preds = %if.end40, %cond.end
  ret void, !dbg !11736
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %ob) #0 !dbg !11737 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11740
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 27, !dbg !11742
  %1 = load i32, i32* %mode, align 8, !dbg !11742
  %cmp = icmp eq i32 %1, 1, !dbg !11743
  br i1 %cmp, label %if.then, label %if.else, !dbg !11744

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !11745
  br label %return, !dbg !11745

if.else:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11747
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !11749
  %3 = load i16, i16* %type, align 8, !dbg !11749
  %conv = sext i16 %3 to i32, !dbg !11747
  %cmp1 = icmp eq i32 %conv, 1, !dbg !11750
  br i1 %cmp1, label %land.lhs.true, label %if.else5, !dbg !11751

land.lhs.true:                                    ; preds = %if.else
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11752
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !11753
  %5 = load i8*, i8** %data, align 8, !dbg !11753
  %6 = bitcast i8* %5 to %struct.Mesh*, !dbg !11754
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 46, !dbg !11755
  %7 = load i8, i8* %editflag, align 1, !dbg !11755
  %conv3 = zext i8 %7 to i32, !dbg !11756
  %and = and i32 %conv3, 32, !dbg !11757
  %tobool = icmp ne i32 %and, 0, !dbg !11757
  br i1 %tobool, label %if.then4, label %if.else5, !dbg !11758

if.then4:                                         ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !11759
  br label %return, !dbg !11759

if.else5:                                         ; preds = %land.lhs.true, %if.else
  store i8 0, i8* %retval, align 1, !dbg !11761
  br label %return, !dbg !11761

return:                                           ; preds = %if.else5, %if.then4, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !11763
  ret i8 %8, !dbg !11763
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @rna_vertex_group_with_single_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %r_free) #0 !dbg !11764 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11765, metadata !DIExpression()), !dbg !11766
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11767, metadata !DIExpression()), !dbg !11768
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !11769, metadata !DIExpression()), !dbg !11770
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !11771, metadata !DIExpression()), !dbg !11772
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11773
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11774
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11775
  %3 = load i8*, i8** %r_free.addr, align 8, !dbg !11776
  %call = call %struct.EnumPropertyItem* @ED_object_vgroup_selection_itemf_helper(%struct.bContext* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, i8* %3, i32 31), !dbg !11777
  ret %struct.EnumPropertyItem* %call, !dbg !11778
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @rna_vertex_group_select_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %r_free) #0 !dbg !11779 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11780, metadata !DIExpression()), !dbg !11781
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11782, metadata !DIExpression()), !dbg !11783
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !11784, metadata !DIExpression()), !dbg !11785
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !11786, metadata !DIExpression()), !dbg !11787
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11788
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11789
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11790
  %3 = load i8*, i8** %r_free.addr, align 8, !dbg !11791
  %call = call %struct.EnumPropertyItem* @ED_object_vgroup_selection_itemf_helper(%struct.bContext* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, i8* %3, i32 29), !dbg !11792
  ret %struct.EnumPropertyItem* %call, !dbg !11793
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_normalize(%struct.Object* %ob) #0 !dbg !11794 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %i = alloca i32, align 4
  %dvert_tot = alloca i32, align 4
  %def_nr = alloca i32, align 4
  %use_vert_sel = alloca i32, align 4
  %weight_max = alloca float, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11795, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !11797, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !11799, metadata !DIExpression()), !dbg !11800
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !11801, metadata !DIExpression()), !dbg !11802
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11802
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11803, metadata !DIExpression()), !dbg !11804
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !11805, metadata !DIExpression()), !dbg !11806
  store i32 0, i32* %dvert_tot, align 4, !dbg !11806
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !11807, metadata !DIExpression()), !dbg !11808
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11809
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 97, !dbg !11810
  %1 = load i16, i16* %actdef, align 2, !dbg !11810
  %conv = zext i16 %1 to i32, !dbg !11809
  %sub = sub nsw i32 %conv, 1, !dbg !11811
  store i32 %sub, i32* %def_nr, align 4, !dbg !11808
  call void @llvm.dbg.declare(metadata i32* %use_vert_sel, metadata !11812, metadata !DIExpression()), !dbg !11813
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11814
  %call = call zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %2), !dbg !11815
  %conv1 = zext i8 %call to i32, !dbg !11815
  store i32 %conv1, i32* %use_vert_sel, align 4, !dbg !11813
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11816
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 25, !dbg !11818
  %4 = load i32, i32* %def_nr, align 4, !dbg !11819
  %call2 = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %4), !dbg !11820
  %tobool = icmp ne i8* %call2, null, !dbg !11820
  br i1 %tobool, label %if.end, label %if.then, !dbg !11821

if.then:                                          ; preds = %entry
  br label %if.end49, !dbg !11822

if.end:                                           ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11824
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !11825
  %6 = load i8*, i8** %data, align 8, !dbg !11825
  %7 = bitcast i8* %6 to %struct.ID*, !dbg !11824
  %8 = load i32, i32* %use_vert_sel, align 4, !dbg !11826
  %conv3 = trunc i32 %8 to i8, !dbg !11826
  %call4 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %7, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext %conv3), !dbg !11827
  %9 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11828
  %tobool5 = icmp ne %struct.MDeformVert** %9, null, !dbg !11828
  br i1 %tobool5, label %if.then6, label %if.end49, !dbg !11830

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %weight_max, metadata !11831, metadata !DIExpression()), !dbg !11833
  store float 0.000000e+00, float* %weight_max, align 4, !dbg !11833
  store i32 0, i32* %i, align 4, !dbg !11834
  br label %for.cond, !dbg !11836

for.cond:                                         ; preds = %for.inc, %if.then6
  %10 = load i32, i32* %i, align 4, !dbg !11837
  %11 = load i32, i32* %dvert_tot, align 4, !dbg !11839
  %cmp = icmp slt i32 %10, %11, !dbg !11840
  br i1 %cmp, label %for.body, label %for.end, !dbg !11841

for.body:                                         ; preds = %for.cond
  %12 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11842
  %13 = load i32, i32* %i, align 4, !dbg !11845
  %idxprom = sext i32 %13 to i64, !dbg !11842
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %12, i64 %idxprom, !dbg !11842
  %14 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !11842
  store %struct.MDeformVert* %14, %struct.MDeformVert** %dv, align 8, !dbg !11846
  %tobool8 = icmp ne %struct.MDeformVert* %14, null, !dbg !11846
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !11847

if.then9:                                         ; preds = %for.body
  br label %for.inc, !dbg !11848

if.end10:                                         ; preds = %for.body
  %15 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !11850
  %16 = load i32, i32* %def_nr, align 4, !dbg !11851
  %call11 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %15, i32 %16), !dbg !11852
  store %struct.MDeformWeight* %call11, %struct.MDeformWeight** %dw, align 8, !dbg !11853
  %17 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11854
  %tobool12 = icmp ne %struct.MDeformWeight* %17, null, !dbg !11854
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !11856

if.then13:                                        ; preds = %if.end10
  %18 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11857
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %18, i32 0, i32 1, !dbg !11859
  %19 = load float, float* %weight, align 4, !dbg !11859
  %20 = load float, float* %weight_max, align 4, !dbg !11860
  %call14 = call float @max_ff(float %19, float %20), !dbg !11861
  store float %call14, float* %weight_max, align 4, !dbg !11862
  br label %if.end15, !dbg !11863

if.end15:                                         ; preds = %if.then13, %if.end10
  br label %for.inc, !dbg !11864

for.inc:                                          ; preds = %if.end15, %if.then9
  %21 = load i32, i32* %i, align 4, !dbg !11865
  %inc = add nsw i32 %21, 1, !dbg !11865
  store i32 %inc, i32* %i, align 4, !dbg !11865
  br label %for.cond, !dbg !11866, !llvm.loop !11867

for.end:                                          ; preds = %for.cond
  %22 = load float, float* %weight_max, align 4, !dbg !11869
  %cmp16 = fcmp ogt float %22, 0.000000e+00, !dbg !11871
  br i1 %cmp16, label %if.then18, label %if.end48, !dbg !11872

if.then18:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !11873
  br label %for.cond19, !dbg !11876

for.cond19:                                       ; preds = %for.inc45, %if.then18
  %23 = load i32, i32* %i, align 4, !dbg !11877
  %24 = load i32, i32* %dvert_tot, align 4, !dbg !11879
  %cmp20 = icmp slt i32 %23, %24, !dbg !11880
  br i1 %cmp20, label %for.body22, label %for.end47, !dbg !11881

for.body22:                                       ; preds = %for.cond19
  %25 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11882
  %26 = load i32, i32* %i, align 4, !dbg !11885
  %idxprom23 = sext i32 %26 to i64, !dbg !11882
  %arrayidx24 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %25, i64 %idxprom23, !dbg !11882
  %27 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx24, align 8, !dbg !11882
  store %struct.MDeformVert* %27, %struct.MDeformVert** %dv, align 8, !dbg !11886
  %tobool25 = icmp ne %struct.MDeformVert* %27, null, !dbg !11886
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !11887

if.then26:                                        ; preds = %for.body22
  br label %for.inc45, !dbg !11888

if.end27:                                         ; preds = %for.body22
  %28 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !11890
  %29 = load i32, i32* %def_nr, align 4, !dbg !11891
  %call28 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %28, i32 %29), !dbg !11892
  store %struct.MDeformWeight* %call28, %struct.MDeformWeight** %dw, align 8, !dbg !11893
  %30 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11894
  %tobool29 = icmp ne %struct.MDeformWeight* %30, null, !dbg !11894
  br i1 %tobool29, label %if.then30, label %if.end44, !dbg !11896

if.then30:                                        ; preds = %if.end27
  %31 = load float, float* %weight_max, align 4, !dbg !11897
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11899
  %weight31 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %32, i32 0, i32 1, !dbg !11900
  %33 = load float, float* %weight31, align 4, !dbg !11901
  %div = fdiv float %33, %31, !dbg !11901
  store float %div, float* %weight31, align 4, !dbg !11901
  %34 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11902
  %weight32 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %34, i32 0, i32 1, !dbg !11902
  %35 = load float, float* %weight32, align 4, !dbg !11902
  %cmp33 = fcmp olt float %35, 0.000000e+00, !dbg !11902
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !11905

if.then35:                                        ; preds = %if.then30
  %36 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11902
  %weight36 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %36, i32 0, i32 1, !dbg !11902
  store float 0.000000e+00, float* %weight36, align 4, !dbg !11902
  br label %if.end43, !dbg !11902

if.else:                                          ; preds = %if.then30
  %37 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11906
  %weight37 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %37, i32 0, i32 1, !dbg !11906
  %38 = load float, float* %weight37, align 4, !dbg !11906
  %cmp38 = fcmp ogt float %38, 1.000000e+00, !dbg !11906
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !11902

if.then40:                                        ; preds = %if.else
  %39 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !11906
  %weight41 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %39, i32 0, i32 1, !dbg !11906
  store float 1.000000e+00, float* %weight41, align 4, !dbg !11906
  br label %if.end42, !dbg !11906

if.end42:                                         ; preds = %if.then40, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then35
  br label %if.end44, !dbg !11908

if.end44:                                         ; preds = %if.end43, %if.end27
  br label %for.inc45, !dbg !11909

for.inc45:                                        ; preds = %if.end44, %if.then26
  %40 = load i32, i32* %i, align 4, !dbg !11910
  %inc46 = add nsw i32 %40, 1, !dbg !11910
  store i32 %inc46, i32* %i, align 4, !dbg !11910
  br label %for.cond19, !dbg !11911, !llvm.loop !11912

for.end47:                                        ; preds = %for.cond19
  br label %if.end48, !dbg !11914

if.end48:                                         ; preds = %for.end47, %for.end
  %41 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11915
  %42 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11916
  %43 = bitcast %struct.MDeformVert** %42 to i8*, !dbg !11916
  call void %41(i8* %43), !dbg !11915
  br label %if.end49, !dbg !11917

if.end49:                                         ; preds = %if.then, %if.end48, %if.end
  ret void, !dbg !11918
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !11919 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !11923, metadata !DIExpression()), !dbg !11924
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !11925, metadata !DIExpression()), !dbg !11926
  %0 = load float, float* %a.addr, align 4, !dbg !11927
  %1 = load float, float* %b.addr, align 4, !dbg !11928
  %cmp = fcmp ogt float %0, %1, !dbg !11929
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11930

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !11931
  br label %cond.end, !dbg !11930

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !11932
  br label %cond.end, !dbg !11930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !11930
  ret float %cond, !dbg !11933
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_normalize_all(%struct.Object* %ob, i8* %vgroup_validmap, i32 %vgroup_tot, i32 %subset_count, i8 zeroext %lock_active) #0 !dbg !11934 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %subset_count.addr = alloca i32, align 4
  %lock_active.addr = alloca i8, align 1
  %dv = alloca %struct.MDeformVert*, align 8
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %i = alloca i32, align 4
  %dvert_tot = alloca i32, align 4
  %def_nr = alloca i32, align 4
  %use_vert_sel = alloca i32, align 4
  %defbase_tot = alloca i32, align 4
  %lock_flags = alloca i8*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11937, metadata !DIExpression()), !dbg !11938
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !11939, metadata !DIExpression()), !dbg !11940
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !11941, metadata !DIExpression()), !dbg !11942
  store i32 %subset_count, i32* %subset_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subset_count.addr, metadata !11943, metadata !DIExpression()), !dbg !11944
  store i8 %lock_active, i8* %lock_active.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lock_active.addr, metadata !11945, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !11947, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !11949, metadata !DIExpression()), !dbg !11950
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11950
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11951, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !11953, metadata !DIExpression()), !dbg !11954
  store i32 0, i32* %dvert_tot, align 4, !dbg !11954
  call void @llvm.dbg.declare(metadata i32* %def_nr, metadata !11955, metadata !DIExpression()), !dbg !11956
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11957
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 97, !dbg !11958
  %1 = load i16, i16* %actdef, align 2, !dbg !11958
  %conv = zext i16 %1 to i32, !dbg !11957
  %sub = sub nsw i32 %conv, 1, !dbg !11959
  store i32 %sub, i32* %def_nr, align 4, !dbg !11956
  call void @llvm.dbg.declare(metadata i32* %use_vert_sel, metadata !11960, metadata !DIExpression()), !dbg !11961
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11962
  %call = call zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %2), !dbg !11963
  %conv1 = zext i8 %call to i32, !dbg !11963
  store i32 %conv1, i32* %use_vert_sel, align 4, !dbg !11961
  %3 = load i8, i8* %lock_active.addr, align 1, !dbg !11964
  %conv2 = zext i8 %3 to i32, !dbg !11964
  %tobool = icmp ne i32 %conv2, 0, !dbg !11964
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !11966

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11967
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 25, !dbg !11968
  %5 = load i32, i32* %def_nr, align 4, !dbg !11969
  %call3 = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %5), !dbg !11970
  %tobool4 = icmp ne i8* %call3, null, !dbg !11970
  br i1 %tobool4, label %lor.lhs.false, label %if.then, !dbg !11971

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %6 = load i32, i32* %subset_count.addr, align 4, !dbg !11972
  %cmp = icmp eq i32 %6, 0, !dbg !11973
  br i1 %cmp, label %if.then, label %if.end, !dbg !11974

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %if.end41, !dbg !11975

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11977
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !11978
  %8 = load i8*, i8** %data, align 8, !dbg !11978
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !11977
  %10 = load i32, i32* %use_vert_sel, align 4, !dbg !11979
  %conv6 = trunc i32 %10 to i8, !dbg !11979
  %call7 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %9, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext %conv6), !dbg !11980
  %11 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !11981
  %tobool8 = icmp ne %struct.MDeformVert** %11, null, !dbg !11981
  br i1 %tobool8, label %if.then9, label %if.end41, !dbg !11983

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %defbase_tot, metadata !11984, metadata !DIExpression()), !dbg !11986
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11987
  %defbase10 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 25, !dbg !11988
  %call11 = call i32 @BLI_countlist(%struct.ListBase* %defbase10), !dbg !11989
  store i32 %call11, i32* %defbase_tot, align 4, !dbg !11986
  call void @llvm.dbg.declare(metadata i8** %lock_flags, metadata !11990, metadata !DIExpression()), !dbg !11991
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11992
  %14 = load i32, i32* %defbase_tot, align 4, !dbg !11993
  %call12 = call i8* @BKE_objdef_lock_flags_get(%struct.Object* %13, i32 %14), !dbg !11994
  store i8* %call12, i8** %lock_flags, align 8, !dbg !11991
  %15 = load i8, i8* %lock_active.addr, align 1, !dbg !11995
  %conv13 = zext i8 %15 to i32, !dbg !11995
  %cmp14 = icmp eq i32 %conv13, 1, !dbg !11997
  br i1 %cmp14, label %land.lhs.true16, label %if.end23, !dbg !11998

land.lhs.true16:                                  ; preds = %if.then9
  %16 = load i8*, i8** %lock_flags, align 8, !dbg !11999
  %cmp17 = icmp ne i8* %16, null, !dbg !12000
  br i1 %cmp17, label %land.lhs.true19, label %if.end23, !dbg !12001

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %17 = load i32, i32* %def_nr, align 4, !dbg !12002
  %18 = load i32, i32* %defbase_tot, align 4, !dbg !12003
  %cmp20 = icmp slt i32 %17, %18, !dbg !12004
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !12005

if.then22:                                        ; preds = %land.lhs.true19
  %19 = load i8*, i8** %lock_flags, align 8, !dbg !12006
  %20 = load i32, i32* %def_nr, align 4, !dbg !12008
  %idxprom = sext i32 %20 to i64, !dbg !12006
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 %idxprom, !dbg !12006
  store i8 1, i8* %arrayidx, align 1, !dbg !12009
  br label %if.end23, !dbg !12010

if.end23:                                         ; preds = %if.then22, %land.lhs.true19, %land.lhs.true16, %if.then9
  store i32 0, i32* %i, align 4, !dbg !12011
  br label %for.cond, !dbg !12013

for.cond:                                         ; preds = %for.inc, %if.end23
  %21 = load i32, i32* %i, align 4, !dbg !12014
  %22 = load i32, i32* %dvert_tot, align 4, !dbg !12016
  %cmp24 = icmp slt i32 %21, %22, !dbg !12017
  br i1 %cmp24, label %for.body, label %for.end, !dbg !12018

for.body:                                         ; preds = %for.cond
  %23 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !12019
  %24 = load i32, i32* %i, align 4, !dbg !12022
  %idxprom26 = sext i32 %24 to i64, !dbg !12019
  %arrayidx27 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %23, i64 %idxprom26, !dbg !12019
  %25 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx27, align 8, !dbg !12019
  store %struct.MDeformVert* %25, %struct.MDeformVert** %dv, align 8, !dbg !12023
  %tobool28 = icmp ne %struct.MDeformVert* %25, null, !dbg !12023
  br i1 %tobool28, label %if.then29, label %if.end37, !dbg !12024

if.then29:                                        ; preds = %for.body
  %26 = load i8*, i8** %lock_flags, align 8, !dbg !12025
  %tobool30 = icmp ne i8* %26, null, !dbg !12025
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !12028

if.then31:                                        ; preds = %if.then29
  %27 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !12029
  %28 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !12031
  %29 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !12032
  %30 = load i8*, i8** %lock_flags, align 8, !dbg !12033
  %31 = load i32, i32* %defbase_tot, align 4, !dbg !12034
  call void @defvert_normalize_lock_map(%struct.MDeformVert* %27, i8* %28, i32 %29, i8* %30, i32 %31), !dbg !12035
  br label %if.end36, !dbg !12036

if.else:                                          ; preds = %if.then29
  %32 = load i8, i8* %lock_active.addr, align 1, !dbg !12037
  %tobool32 = icmp ne i8 %32, 0, !dbg !12037
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !12039

if.then33:                                        ; preds = %if.else
  %33 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !12040
  %34 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !12042
  %35 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !12043
  %36 = load i32, i32* %def_nr, align 4, !dbg !12044
  call void @defvert_normalize_lock_single(%struct.MDeformVert* %33, i8* %34, i32 %35, i32 %36), !dbg !12045
  br label %if.end35, !dbg !12046

if.else34:                                        ; preds = %if.else
  %37 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !12047
  %38 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !12049
  %39 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !12050
  call void @defvert_normalize_subset(%struct.MDeformVert* %37, i8* %38, i32 %39), !dbg !12051
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then33
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then31
  br label %if.end37, !dbg !12052

if.end37:                                         ; preds = %if.end36, %for.body
  br label %for.inc, !dbg !12053

for.inc:                                          ; preds = %if.end37
  %40 = load i32, i32* %i, align 4, !dbg !12054
  %inc = add nsw i32 %40, 1, !dbg !12054
  store i32 %inc, i32* %i, align 4, !dbg !12054
  br label %for.cond, !dbg !12055, !llvm.loop !12056

for.end:                                          ; preds = %for.cond
  %41 = load i8*, i8** %lock_flags, align 8, !dbg !12058
  %tobool38 = icmp ne i8* %41, null, !dbg !12058
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !12060

if.then39:                                        ; preds = %for.end
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12061
  %43 = load i8*, i8** %lock_flags, align 8, !dbg !12063
  call void %42(i8* %43), !dbg !12061
  br label %if.end40, !dbg !12064

if.end40:                                         ; preds = %if.then39, %for.end
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12065
  %45 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !12066
  %46 = bitcast %struct.MDeformVert** %45 to i8*, !dbg !12066
  call void %44(i8* %46), !dbg !12065
  br label %if.end41, !dbg !12067

if.end41:                                         ; preds = %if.then, %if.end40, %if.end
  ret void, !dbg !12068
}

declare dso_local i8* @BKE_objdef_lock_flags_get(%struct.Object*, i32) #2

declare dso_local void @defvert_normalize_lock_map(%struct.MDeformVert*, i8*, i32, i8*, i32) #2

declare dso_local void @defvert_normalize_lock_single(%struct.MDeformVert*, i8*, i32, i32) #2

declare dso_local void @defvert_normalize_subset(%struct.MDeformVert*, i8*, i32) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_fix(%struct.Scene* %scene, %struct.Object* %ob, float %distToBe, float %strength, float %cp) #0 !dbg !12069 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %distToBe.addr = alloca float, align 4
  %strength.addr = alloca float, align 4
  %cp.addr = alloca float, align 4
  %i = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %verts = alloca i32*, align 8
  %count = alloca i32, align 4
  %m = alloca %struct.MVert, align 4
  %p = alloca %struct.MVert*, align 8
  %k = alloca i32, align 4
  %dm = alloca %struct.DerivedMesh*, align 8
  %d = alloca float, align 4
  %mag = alloca float, align 4
  %coord = alloca [3 x float], align 4
  %norm = alloca [3 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12072, metadata !DIExpression()), !dbg !12073
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12074, metadata !DIExpression()), !dbg !12075
  store float %distToBe, float* %distToBe.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distToBe.addr, metadata !12076, metadata !DIExpression()), !dbg !12077
  store float %strength, float* %strength.addr, align 4
  call void @llvm.dbg.declare(metadata float* %strength.addr, metadata !12078, metadata !DIExpression()), !dbg !12079
  store float %cp, float* %cp.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cp.addr, metadata !12080, metadata !DIExpression()), !dbg !12081
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12082, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !12084, metadata !DIExpression()), !dbg !12085
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12086
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !12087
  %1 = load i8*, i8** %data, align 8, !dbg !12087
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !12086
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !12085
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !12088, metadata !DIExpression()), !dbg !12089
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12090
  %mvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 15, !dbg !12091
  %4 = load %struct.MVert*, %struct.MVert** %mvert1, align 8, !dbg !12091
  store %struct.MVert* %4, %struct.MVert** %mvert, align 8, !dbg !12089
  call void @llvm.dbg.declare(metadata i32** %verts, metadata !12092, metadata !DIExpression()), !dbg !12093
  store i32* null, i32** %verts, align 8, !dbg !12093
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12094
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !12096
  %6 = load i8, i8* %editflag, align 1, !dbg !12096
  %conv = zext i8 %6 to i32, !dbg !12094
  %and = and i32 %conv, 32, !dbg !12097
  %tobool = icmp ne i32 %and, 0, !dbg !12097
  br i1 %tobool, label %if.end, label %if.then, !dbg !12098

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !12099

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12100
  br label %for.cond, !dbg !12102

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !12103
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12105
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 26, !dbg !12106
  %9 = load i32, i32* %totvert, align 8, !dbg !12106
  %cmp = icmp slt i32 %7, %9, !dbg !12107
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12108

land.rhs:                                         ; preds = %for.cond
  %10 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12109
  %tobool3 = icmp ne %struct.MVert* %10, null, !dbg !12108
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %tobool3, %land.rhs ], !dbg !12110
  br i1 %11, label %for.body, label %for.end, !dbg !12111

for.body:                                         ; preds = %land.end
  %12 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12112
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %12, i32 0, i32 2, !dbg !12115
  %13 = load i8, i8* %flag, align 2, !dbg !12115
  %conv4 = zext i8 %13 to i32, !dbg !12112
  %and5 = and i32 %conv4, 1, !dbg !12116
  %tobool6 = icmp ne i32 %and5, 0, !dbg !12116
  br i1 %tobool6, label %if.then7, label %if.end35, !dbg !12117

if.then7:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %count, metadata !12118, metadata !DIExpression()), !dbg !12120
  store i32 0, i32* %count, align 4, !dbg !12120
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12121
  %15 = load i32, i32* %i, align 4, !dbg !12123
  %call = call i32* @getSurroundingVerts(%struct.Mesh* %14, i32 %15, i32* %count), !dbg !12124
  store i32* %call, i32** %verts, align 8, !dbg !12125
  %tobool8 = icmp ne i32* %call, null, !dbg !12125
  br i1 %tobool8, label %if.then9, label %if.end34, !dbg !12126

if.then9:                                         ; preds = %if.then7
  call void @llvm.dbg.declare(metadata %struct.MVert* %m, metadata !12127, metadata !DIExpression()), !dbg !12129
  call void @llvm.dbg.declare(metadata %struct.MVert** %p, metadata !12130, metadata !DIExpression()), !dbg !12131
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12132
  %17 = load i32, i32* %count, align 4, !dbg !12133
  %conv10 = sext i32 %17 to i64, !dbg !12134
  %mul = mul i64 20, %conv10, !dbg !12135
  %call11 = call i8* %16(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.193, i64 0, i64 0)), !dbg !12132
  %18 = bitcast i8* %call11 to %struct.MVert*, !dbg !12132
  store %struct.MVert* %18, %struct.MVert** %p, align 8, !dbg !12131
  call void @llvm.dbg.declare(metadata i32* %k, metadata !12136, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !12138, metadata !DIExpression()), !dbg !12139
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12140
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12141
  %21 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !12142
  %call12 = call %struct.DerivedMesh* @mesh_get_derived_deform(%struct.Scene* %19, %struct.Object* %20, i64 %21), !dbg !12143
  store %struct.DerivedMesh* %call12, %struct.DerivedMesh** %dm, align 8, !dbg !12139
  %22 = load i32, i32* %count, align 4, !dbg !12144
  store i32 %22, i32* %k, align 4, !dbg !12145
  br label %while.cond, !dbg !12146

while.cond:                                       ; preds = %while.body, %if.then9
  %23 = load i32, i32* %k, align 4, !dbg !12147
  %dec = add nsw i32 %23, -1, !dbg !12147
  store i32 %dec, i32* %k, align 4, !dbg !12147
  %tobool13 = icmp ne i32 %23, 0, !dbg !12146
  br i1 %tobool13, label %while.body, label %while.end, !dbg !12146

while.body:                                       ; preds = %while.cond
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12148
  %getVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 28, !dbg !12150
  %25 = load void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)** %getVert, align 8, !dbg !12150
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12151
  %27 = load i32*, i32** %verts, align 8, !dbg !12152
  %28 = load i32, i32* %k, align 4, !dbg !12153
  %idxprom = sext i32 %28 to i64, !dbg !12152
  %arrayidx = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !12152
  %29 = load i32, i32* %arrayidx, align 4, !dbg !12152
  call void %25(%struct.DerivedMesh* %26, i32 %29, %struct.MVert* %m), !dbg !12148
  %30 = load %struct.MVert*, %struct.MVert** %p, align 8, !dbg !12154
  %31 = load i32, i32* %k, align 4, !dbg !12155
  %idxprom14 = sext i32 %31 to i64, !dbg !12154
  %arrayidx15 = getelementptr inbounds %struct.MVert, %struct.MVert* %30, i64 %idxprom14, !dbg !12154
  %32 = bitcast %struct.MVert* %arrayidx15 to i8*, !dbg !12156
  %33 = bitcast %struct.MVert* %m to i8*, !dbg !12156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 20, i1 false), !dbg !12156
  br label %while.cond, !dbg !12146, !llvm.loop !12157

while.end:                                        ; preds = %while.cond
  %34 = load i32, i32* %count, align 4, !dbg !12159
  %cmp16 = icmp sge i32 %34, 3, !dbg !12161
  br i1 %cmp16, label %if.then18, label %if.end33, !dbg !12162

if.then18:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata float* %d, metadata !12163, metadata !DIExpression()), !dbg !12165
  call void @llvm.dbg.declare(metadata float* %mag, metadata !12166, metadata !DIExpression()), !dbg !12167
  call void @llvm.dbg.declare(metadata [3 x float]* %coord, metadata !12168, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.declare(metadata [3 x float]* %norm, metadata !12170, metadata !DIExpression()), !dbg !12171
  %35 = load %struct.MVert*, %struct.MVert** %p, align 8, !dbg !12172
  %36 = load i32, i32* %count, align 4, !dbg !12173
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %coord, i64 0, i64 0, !dbg !12174
  call void @getSingleCoordinate(%struct.MVert* %35, i32 %36, float* %arraydecay), !dbg !12175
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12176
  %getVert19 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 28, !dbg !12177
  %38 = load void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)** %getVert19, align 8, !dbg !12177
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12178
  %40 = load i32, i32* %i, align 4, !dbg !12179
  call void %38(%struct.DerivedMesh* %39, i32 %40, %struct.MVert* %m), !dbg !12176
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !12180
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %m, i32 0, i32 0, !dbg !12181
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12182
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %coord, i64 0, i64 0, !dbg !12183
  call void @sub_v3_v3v3(float* %arraydecay20, float* %arraydecay21, float* %arraydecay22), !dbg !12184
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !12185
  %call24 = call float @normalize_v3(float* %arraydecay23), !dbg !12186
  store float %call24, float* %mag, align 4, !dbg !12187
  %41 = load float, float* %mag, align 4, !dbg !12188
  %tobool25 = fcmp une float %41, 0.000000e+00, !dbg !12188
  br i1 %tobool25, label %if.then26, label %if.end32, !dbg !12190

if.then26:                                        ; preds = %if.then18
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !12191
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %coord, i64 0, i64 0, !dbg !12193
  %call29 = call float @dot_v3v3(float* %arraydecay27, float* %arraydecay28), !dbg !12194
  %fneg = fneg float %call29, !dbg !12195
  store float %fneg, float* %d, align 4, !dbg !12196
  %42 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12197
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12198
  %44 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12199
  %45 = load i32, i32* %i, align 4, !dbg !12200
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %norm, i64 0, i64 0, !dbg !12201
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %coord, i64 0, i64 0, !dbg !12202
  %46 = load float, float* %d, align 4, !dbg !12203
  %47 = load float, float* %distToBe.addr, align 4, !dbg !12204
  %48 = load float, float* %strength.addr, align 4, !dbg !12205
  %49 = load float, float* %cp.addr, align 4, !dbg !12206
  call void @moveCloserToDistanceFromPlane(%struct.Scene* %42, %struct.Object* %43, %struct.Mesh* %44, i32 %45, float* %arraydecay30, float* %arraydecay31, float %46, float %47, float %48, float %49), !dbg !12207
  br label %if.end32, !dbg !12208

if.end32:                                         ; preds = %if.then26, %if.then18
  br label %if.end33, !dbg !12209

if.end33:                                         ; preds = %if.end32, %while.end
  %50 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12210
  %51 = load i32*, i32** %verts, align 8, !dbg !12211
  %52 = bitcast i32* %51 to i8*, !dbg !12211
  call void %50(i8* %52), !dbg !12210
  %53 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12212
  %54 = load %struct.MVert*, %struct.MVert** %p, align 8, !dbg !12213
  %55 = bitcast %struct.MVert* %54 to i8*, !dbg !12213
  call void %53(i8* %55), !dbg !12212
  br label %if.end34, !dbg !12214

if.end34:                                         ; preds = %if.end33, %if.then7
  br label %if.end35, !dbg !12215

if.end35:                                         ; preds = %if.end34, %for.body
  br label %for.inc, !dbg !12216

for.inc:                                          ; preds = %if.end35
  %56 = load i32, i32* %i, align 4, !dbg !12217
  %inc = add nsw i32 %56, 1, !dbg !12217
  store i32 %inc, i32* %i, align 4, !dbg !12217
  %57 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !12218
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %57, i32 1, !dbg !12218
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !12218
  br label %for.cond, !dbg !12219, !llvm.loop !12220

for.end:                                          ; preds = %if.then, %land.end
  ret void, !dbg !12222
}

; Function Attrs: noinline nounwind uwtable
define internal i32* @getSurroundingVerts(%struct.Mesh* %me, i32 %vert, i32* %count) #0 !dbg !12223 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %vert.addr = alloca i32, align 4
  %count.addr = alloca i32*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %i = alloca i32, align 4
  %verts = alloca i32*, align 8
  %_verts_count = alloca i32, align 4
  %_verts_static = alloca i8*, align 8
  %j = alloca i32, align 4
  %first_l = alloca i32, align 4
  %ml = alloca %struct.MLoop*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !12226, metadata !DIExpression()), !dbg !12227
  store i32 %vert, i32* %vert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert.addr, metadata !12228, metadata !DIExpression()), !dbg !12229
  store i32* %count, i32** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %count.addr, metadata !12230, metadata !DIExpression()), !dbg !12231
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !12232, metadata !DIExpression()), !dbg !12235
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !12236
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 7, !dbg !12237
  %1 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !12237
  store %struct.MPoly* %1, %struct.MPoly** %mp, align 8, !dbg !12235
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12238, metadata !DIExpression()), !dbg !12239
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !12240
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 30, !dbg !12241
  %3 = load i32, i32* %totpoly, align 8, !dbg !12241
  store i32 %3, i32* %i, align 4, !dbg !12239
  call void @llvm.dbg.declare(metadata i32** %verts, metadata !12242, metadata !DIExpression()), !dbg !12243
  store i32* null, i32** %verts, align 8, !dbg !12243
  call void @llvm.dbg.declare(metadata i32* %_verts_count, metadata !12244, metadata !DIExpression()), !dbg !12245
  store i32 0, i32* %_verts_count, align 4, !dbg !12245
  call void @llvm.dbg.declare(metadata i8** %_verts_static, metadata !12246, metadata !DIExpression()), !dbg !12245
  store i8* null, i8** %_verts_static, align 8, !dbg !12245
  %4 = load i32*, i32** %verts, align 8, !dbg !12247
  %5 = bitcast i32* %4 to i8*, !dbg !12247
  %cmp = icmp eq i8* %5, null, !dbg !12247
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !12247

land.lhs.true:                                    ; preds = %entry
  %6 = load i8*, i8** %_verts_static, align 8, !dbg !12247
  %cmp1 = icmp ne i8* %6, null, !dbg !12247
  br i1 %cmp1, label %land.lhs.true2, label %cond.false, !dbg !12247

land.lhs.true2:                                   ; preds = %land.lhs.true
  %7 = load i32, i32* %_verts_count, align 4, !dbg !12247
  %add = add nsw i32 %7, 8, !dbg !12247
  %conv = sext i32 %add to i64, !dbg !12247
  %cmp3 = icmp uge i64 2, %conv, !dbg !12247
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !12247

cond.true:                                        ; preds = %land.lhs.true2
  %8 = load i8*, i8** %_verts_static, align 8, !dbg !12247
  %9 = bitcast i8* %8 to i32*, !dbg !12247
  store i32* %9, i32** %verts, align 8, !dbg !12247
  br label %cond.end25, !dbg !12247

cond.false:                                       ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %10 = load i32*, i32** %verts, align 8, !dbg !12247
  %11 = bitcast i32* %10 to i8*, !dbg !12247
  %12 = load i8*, i8** %_verts_static, align 8, !dbg !12247
  %cmp5 = icmp eq i8* %11, %12, !dbg !12247
  br i1 %cmp5, label %land.lhs.true7, label %cond.false11, !dbg !12247

land.lhs.true7:                                   ; preds = %cond.false
  %13 = load i32*, i32** %verts, align 8, !dbg !12247
  %14 = bitcast i32* %13 to i8*, !dbg !12247
  %cmp8 = icmp ne i8* %14, null, !dbg !12247
  br i1 %cmp8, label %cond.true10, label %cond.false11, !dbg !12247

cond.true10:                                      ; preds = %land.lhs.true7
  br label %cond.end16, !dbg !12247

cond.false11:                                     ; preds = %land.lhs.true7, %cond.false
  %15 = load i32*, i32** %verts, align 8, !dbg !12247
  %cmp12 = icmp eq i32* %15, null, !dbg !12247
  br i1 %cmp12, label %cond.true14, label %cond.false15, !dbg !12247

cond.true14:                                      ; preds = %cond.false11
  br label %cond.end, !dbg !12247

cond.false15:                                     ; preds = %cond.false11
  %16 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12247
  %17 = load i32*, i32** %verts, align 8, !dbg !12247
  %18 = bitcast i32* %17 to i8*, !dbg !12247
  %call = call i64 %16(i8* %18), !dbg !12247
  %div = udiv i64 %call, 4, !dbg !12247
  br label %cond.end, !dbg !12247

cond.end:                                         ; preds = %cond.false15, %cond.true14
  %cond = phi i64 [ 0, %cond.true14 ], [ %div, %cond.false15 ], !dbg !12247
  br label %cond.end16, !dbg !12247

cond.end16:                                       ; preds = %cond.end, %cond.true10
  %cond17 = phi i64 [ 2, %cond.true10 ], [ %cond, %cond.end ], !dbg !12247
  %19 = load i32, i32* %_verts_count, align 4, !dbg !12247
  %add18 = add nsw i32 %19, 8, !dbg !12247
  %conv19 = sext i32 %add18 to i64, !dbg !12247
  %cmp20 = icmp uge i64 %cond17, %conv19, !dbg !12247
  br i1 %cmp20, label %cond.true22, label %cond.false23, !dbg !12247

cond.true22:                                      ; preds = %cond.end16
  br label %cond.end24, !dbg !12247

cond.false23:                                     ; preds = %cond.end16
  %20 = bitcast i32** %verts to i8**, !dbg !12247
  %21 = load i8*, i8** %_verts_static, align 8, !dbg !12247
  %22 = load i32, i32* %_verts_count, align 4, !dbg !12247
  call void @_bli_array_grow_func(i8** %20, i8* %21, i32 4, i32 %22, i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.194, i64 0, i64 0)), !dbg !12247
  br label %cond.end24, !dbg !12247

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  br label %cond.end25, !dbg !12247

cond.end25:                                       ; preds = %cond.end24, %cond.true
  br label %while.cond, !dbg !12248

while.cond:                                       ; preds = %while.end169, %cond.end25
  %23 = load i32, i32* %i, align 4, !dbg !12249
  %dec = add nsw i32 %23, -1, !dbg !12249
  store i32 %dec, i32* %i, align 4, !dbg !12249
  %tobool = icmp ne i32 %23, 0, !dbg !12248
  br i1 %tobool, label %while.body, label %while.end171, !dbg !12248

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12250, metadata !DIExpression()), !dbg !12252
  %24 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !12253
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %24, i32 0, i32 1, !dbg !12254
  %25 = load i32, i32* %totloop, align 4, !dbg !12254
  store i32 %25, i32* %j, align 4, !dbg !12252
  call void @llvm.dbg.declare(metadata i32* %first_l, metadata !12255, metadata !DIExpression()), !dbg !12256
  %26 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !12257
  %totloop26 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %26, i32 0, i32 1, !dbg !12258
  %27 = load i32, i32* %totloop26, align 4, !dbg !12258
  %sub = sub nsw i32 %27, 1, !dbg !12259
  store i32 %sub, i32* %first_l, align 4, !dbg !12256
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !12260, metadata !DIExpression()), !dbg !12263
  %28 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !12264
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 9, !dbg !12265
  %29 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !12265
  %30 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !12266
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %30, i32 0, i32 0, !dbg !12267
  %31 = load i32, i32* %loopstart, align 4, !dbg !12267
  %idxprom = sext i32 %31 to i64, !dbg !12264
  %arrayidx = getelementptr inbounds %struct.MLoop, %struct.MLoop* %29, i64 %idxprom, !dbg !12264
  store %struct.MLoop* %arrayidx, %struct.MLoop** %ml, align 8, !dbg !12263
  br label %while.cond27, !dbg !12268

while.cond27:                                     ; preds = %if.end168, %while.body
  %32 = load i32, i32* %j, align 4, !dbg !12269
  %dec28 = add nsw i32 %32, -1, !dbg !12269
  store i32 %dec28, i32* %j, align 4, !dbg !12269
  %tobool29 = icmp ne i32 %32, 0, !dbg !12268
  br i1 %tobool29, label %while.body30, label %while.end169, !dbg !12268

while.body30:                                     ; preds = %while.cond27
  %33 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !12270
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %33, i32 0, i32 0, !dbg !12273
  %34 = load i32, i32* %v, align 4, !dbg !12273
  %35 = load i32, i32* %vert.addr, align 4, !dbg !12274
  %cmp31 = icmp eq i32 %34, %35, !dbg !12275
  br i1 %cmp31, label %if.then, label %if.end168, !dbg !12276

if.then:                                          ; preds = %while.body30
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12277, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.declare(metadata i32* %b, metadata !12280, metadata !DIExpression()), !dbg !12281
  call void @llvm.dbg.declare(metadata i32* %k, metadata !12282, metadata !DIExpression()), !dbg !12283
  %36 = load i32, i32* %j, align 4, !dbg !12284
  %37 = load i32, i32* %first_l, align 4, !dbg !12286
  %cmp33 = icmp eq i32 %36, %37, !dbg !12287
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !12288

if.then35:                                        ; preds = %if.then
  %38 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !12289
  %arrayidx36 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %38, i64 1, !dbg !12289
  %v37 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx36, i32 0, i32 0, !dbg !12291
  %39 = load i32, i32* %v37, align 4, !dbg !12291
  store i32 %39, i32* %a, align 4, !dbg !12292
  %40 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !12293
  %41 = load i32, i32* %j, align 4, !dbg !12294
  %idxprom38 = sext i32 %41 to i64, !dbg !12293
  %arrayidx39 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %40, i64 %idxprom38, !dbg !12293
  %v40 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx39, i32 0, i32 0, !dbg !12295
  %42 = load i32, i32* %v40, align 4, !dbg !12295
  store i32 %42, i32* %b, align 4, !dbg !12296
  br label %if.end54, !dbg !12297

if.else:                                          ; preds = %if.then
  %43 = load i32, i32* %j, align 4, !dbg !12298
  %tobool41 = icmp ne i32 %43, 0, !dbg !12298
  br i1 %tobool41, label %if.else49, label %if.then42, !dbg !12300

if.then42:                                        ; preds = %if.else
  %44 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !12301
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %44, i64 -1, !dbg !12303
  %v43 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %add.ptr, i32 0, i32 0, !dbg !12304
  %45 = load i32, i32* %v43, align 4, !dbg !12304
  store i32 %45, i32* %a, align 4, !dbg !12305
  %46 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !12306
  %mloop44 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %46, i32 0, i32 9, !dbg !12307
  %47 = load %struct.MLoop*, %struct.MLoop** %mloop44, align 8, !dbg !12307
  %48 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !12308
  %loopstart45 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %48, i32 0, i32 0, !dbg !12309
  %49 = load i32, i32* %loopstart45, align 4, !dbg !12309
  %idxprom46 = sext i32 %49 to i64, !dbg !12306
  %arrayidx47 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %47, i64 %idxprom46, !dbg !12306
  %v48 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx47, i32 0, i32 0, !dbg !12310
  %50 = load i32, i32* %v48, align 4, !dbg !12310
  store i32 %50, i32* %b, align 4, !dbg !12311
  br label %if.end, !dbg !12312

if.else49:                                        ; preds = %if.else
  %51 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !12313
  %add.ptr50 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %51, i64 -1, !dbg !12315
  %v51 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %add.ptr50, i32 0, i32 0, !dbg !12316
  %52 = load i32, i32* %v51, align 4, !dbg !12316
  store i32 %52, i32* %a, align 4, !dbg !12317
  %53 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !12318
  %add.ptr52 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %53, i64 1, !dbg !12319
  %v53 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %add.ptr52, i32 0, i32 0, !dbg !12320
  %54 = load i32, i32* %v53, align 4, !dbg !12320
  store i32 %54, i32* %b, align 4, !dbg !12321
  br label %if.end

if.end:                                           ; preds = %if.else49, %if.then42
  br label %if.end54

if.end54:                                         ; preds = %if.end, %if.then35
  %55 = load i32, i32* %_verts_count, align 4, !dbg !12322
  store i32 %55, i32* %k, align 4, !dbg !12323
  br label %while.cond55, !dbg !12324

while.cond55:                                     ; preds = %if.end77, %if.end54
  %56 = load i32, i32* %k, align 4, !dbg !12325
  %dec56 = add nsw i32 %56, -1, !dbg !12325
  store i32 %dec56, i32* %k, align 4, !dbg !12325
  %tobool57 = icmp ne i32 %56, 0, !dbg !12325
  br i1 %tobool57, label %land.rhs, label %land.end63, !dbg !12326

land.rhs:                                         ; preds = %while.cond55
  %57 = load i32, i32* %a, align 4, !dbg !12327
  %58 = load i32, i32* %b, align 4, !dbg !12328
  %cmp58 = icmp eq i32 %57, %58, !dbg !12329
  br i1 %cmp58, label %land.rhs60, label %land.end, !dbg !12330

land.rhs60:                                       ; preds = %land.rhs
  %59 = load i32, i32* %a, align 4, !dbg !12331
  %cmp61 = icmp eq i32 %59, -1, !dbg !12332
  br label %land.end

land.end:                                         ; preds = %land.rhs60, %land.rhs
  %60 = phi i1 [ false, %land.rhs ], [ %cmp61, %land.rhs60 ], !dbg !12333
  %lnot = xor i1 %60, true, !dbg !12334
  br label %land.end63

land.end63:                                       ; preds = %land.end, %while.cond55
  %61 = phi i1 [ false, %while.cond55 ], [ %lnot, %land.end ], !dbg !12333
  br i1 %61, label %while.body64, label %while.end, !dbg !12324

while.body64:                                     ; preds = %land.end63
  %62 = load i32*, i32** %verts, align 8, !dbg !12335
  %63 = load i32, i32* %k, align 4, !dbg !12338
  %idxprom65 = sext i32 %63 to i64, !dbg !12335
  %arrayidx66 = getelementptr inbounds i32, i32* %62, i64 %idxprom65, !dbg !12335
  %64 = load i32, i32* %arrayidx66, align 4, !dbg !12335
  %65 = load i32, i32* %a, align 4, !dbg !12339
  %cmp67 = icmp eq i32 %64, %65, !dbg !12340
  br i1 %cmp67, label %if.then69, label %if.else70, !dbg !12341

if.then69:                                        ; preds = %while.body64
  store i32 -1, i32* %a, align 4, !dbg !12342
  br label %if.end77, !dbg !12343

if.else70:                                        ; preds = %while.body64
  %66 = load i32*, i32** %verts, align 8, !dbg !12344
  %67 = load i32, i32* %k, align 4, !dbg !12346
  %idxprom71 = sext i32 %67 to i64, !dbg !12344
  %arrayidx72 = getelementptr inbounds i32, i32* %66, i64 %idxprom71, !dbg !12344
  %68 = load i32, i32* %arrayidx72, align 4, !dbg !12344
  %69 = load i32, i32* %b, align 4, !dbg !12347
  %cmp73 = icmp eq i32 %68, %69, !dbg !12348
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !12349

if.then75:                                        ; preds = %if.else70
  store i32 -1, i32* %b, align 4, !dbg !12350
  br label %if.end76, !dbg !12351

if.end76:                                         ; preds = %if.then75, %if.else70
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then69
  br label %while.cond55, !dbg !12324, !llvm.loop !12352

while.end:                                        ; preds = %land.end63
  %70 = load i32, i32* %a, align 4, !dbg !12354
  %cmp78 = icmp ne i32 %70, -1, !dbg !12356
  br i1 %cmp78, label %if.then80, label %if.end122, !dbg !12357

if.then80:                                        ; preds = %while.end
  %71 = load i32*, i32** %verts, align 8, !dbg !12358
  %72 = bitcast i32* %71 to i8*, !dbg !12358
  %cmp81 = icmp eq i8* %72, null, !dbg !12358
  br i1 %cmp81, label %land.lhs.true83, label %cond.false92, !dbg !12358

land.lhs.true83:                                  ; preds = %if.then80
  %73 = load i8*, i8** %_verts_static, align 8, !dbg !12358
  %cmp84 = icmp ne i8* %73, null, !dbg !12358
  br i1 %cmp84, label %land.lhs.true86, label %cond.false92, !dbg !12358

land.lhs.true86:                                  ; preds = %land.lhs.true83
  %74 = load i32, i32* %_verts_count, align 4, !dbg !12358
  %add87 = add nsw i32 %74, 1, !dbg !12358
  %conv88 = sext i32 %add87 to i64, !dbg !12358
  %cmp89 = icmp uge i64 2, %conv88, !dbg !12358
  br i1 %cmp89, label %cond.true91, label %cond.false92, !dbg !12358

cond.true91:                                      ; preds = %land.lhs.true86
  %75 = load i8*, i8** %_verts_static, align 8, !dbg !12358
  %76 = bitcast i8* %75 to i32*, !dbg !12358
  store i32* %76, i32** %verts, align 8, !dbg !12358
  br label %cond.end117, !dbg !12358

cond.false92:                                     ; preds = %land.lhs.true86, %land.lhs.true83, %if.then80
  %77 = load i32*, i32** %verts, align 8, !dbg !12358
  %78 = bitcast i32* %77 to i8*, !dbg !12358
  %79 = load i8*, i8** %_verts_static, align 8, !dbg !12358
  %cmp93 = icmp eq i8* %78, %79, !dbg !12358
  br i1 %cmp93, label %land.lhs.true95, label %cond.false99, !dbg !12358

land.lhs.true95:                                  ; preds = %cond.false92
  %80 = load i32*, i32** %verts, align 8, !dbg !12358
  %81 = bitcast i32* %80 to i8*, !dbg !12358
  %cmp96 = icmp ne i8* %81, null, !dbg !12358
  br i1 %cmp96, label %cond.true98, label %cond.false99, !dbg !12358

cond.true98:                                      ; preds = %land.lhs.true95
  br label %cond.end108, !dbg !12358

cond.false99:                                     ; preds = %land.lhs.true95, %cond.false92
  %82 = load i32*, i32** %verts, align 8, !dbg !12358
  %cmp100 = icmp eq i32* %82, null, !dbg !12358
  br i1 %cmp100, label %cond.true102, label %cond.false103, !dbg !12358

cond.true102:                                     ; preds = %cond.false99
  br label %cond.end106, !dbg !12358

cond.false103:                                    ; preds = %cond.false99
  %83 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12358
  %84 = load i32*, i32** %verts, align 8, !dbg !12358
  %85 = bitcast i32* %84 to i8*, !dbg !12358
  %call104 = call i64 %83(i8* %85), !dbg !12358
  %div105 = udiv i64 %call104, 4, !dbg !12358
  br label %cond.end106, !dbg !12358

cond.end106:                                      ; preds = %cond.false103, %cond.true102
  %cond107 = phi i64 [ 0, %cond.true102 ], [ %div105, %cond.false103 ], !dbg !12358
  br label %cond.end108, !dbg !12358

cond.end108:                                      ; preds = %cond.end106, %cond.true98
  %cond109 = phi i64 [ 2, %cond.true98 ], [ %cond107, %cond.end106 ], !dbg !12358
  %86 = load i32, i32* %_verts_count, align 4, !dbg !12358
  %add110 = add nsw i32 %86, 1, !dbg !12358
  %conv111 = sext i32 %add110 to i64, !dbg !12358
  %cmp112 = icmp uge i64 %cond109, %conv111, !dbg !12358
  br i1 %cmp112, label %cond.true114, label %cond.false115, !dbg !12358

cond.true114:                                     ; preds = %cond.end108
  br label %cond.end116, !dbg !12358

cond.false115:                                    ; preds = %cond.end108
  %87 = bitcast i32** %verts to i8**, !dbg !12358
  %88 = load i8*, i8** %_verts_static, align 8, !dbg !12358
  %89 = load i32, i32* %_verts_count, align 4, !dbg !12358
  call void @_bli_array_grow_func(i8** %87, i8* %88, i32 4, i32 %89, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.194, i64 0, i64 0)), !dbg !12358
  br label %cond.end116, !dbg !12358

cond.end116:                                      ; preds = %cond.false115, %cond.true114
  br label %cond.end117, !dbg !12358

cond.end117:                                      ; preds = %cond.end116, %cond.true91
  %90 = load i32, i32* %_verts_count, align 4, !dbg !12358
  %add118 = add nsw i32 %90, 1, !dbg !12358
  store i32 %add118, i32* %_verts_count, align 4, !dbg !12358
  %91 = load i32, i32* %a, align 4, !dbg !12358
  %92 = load i32*, i32** %verts, align 8, !dbg !12358
  %93 = load i32, i32* %_verts_count, align 4, !dbg !12358
  %sub119 = sub nsw i32 %93, 1, !dbg !12358
  %idxprom120 = sext i32 %sub119 to i64, !dbg !12358
  %arrayidx121 = getelementptr inbounds i32, i32* %92, i64 %idxprom120, !dbg !12358
  store i32 %91, i32* %arrayidx121, align 4, !dbg !12358
  br label %if.end122, !dbg !12358

if.end122:                                        ; preds = %cond.end117, %while.end
  %94 = load i32, i32* %b, align 4, !dbg !12359
  %cmp123 = icmp ne i32 %94, -1, !dbg !12361
  br i1 %cmp123, label %if.then125, label %if.end167, !dbg !12362

if.then125:                                       ; preds = %if.end122
  %95 = load i32*, i32** %verts, align 8, !dbg !12363
  %96 = bitcast i32* %95 to i8*, !dbg !12363
  %cmp126 = icmp eq i8* %96, null, !dbg !12363
  br i1 %cmp126, label %land.lhs.true128, label %cond.false137, !dbg !12363

land.lhs.true128:                                 ; preds = %if.then125
  %97 = load i8*, i8** %_verts_static, align 8, !dbg !12363
  %cmp129 = icmp ne i8* %97, null, !dbg !12363
  br i1 %cmp129, label %land.lhs.true131, label %cond.false137, !dbg !12363

land.lhs.true131:                                 ; preds = %land.lhs.true128
  %98 = load i32, i32* %_verts_count, align 4, !dbg !12363
  %add132 = add nsw i32 %98, 1, !dbg !12363
  %conv133 = sext i32 %add132 to i64, !dbg !12363
  %cmp134 = icmp uge i64 2, %conv133, !dbg !12363
  br i1 %cmp134, label %cond.true136, label %cond.false137, !dbg !12363

cond.true136:                                     ; preds = %land.lhs.true131
  %99 = load i8*, i8** %_verts_static, align 8, !dbg !12363
  %100 = bitcast i8* %99 to i32*, !dbg !12363
  store i32* %100, i32** %verts, align 8, !dbg !12363
  br label %cond.end162, !dbg !12363

cond.false137:                                    ; preds = %land.lhs.true131, %land.lhs.true128, %if.then125
  %101 = load i32*, i32** %verts, align 8, !dbg !12363
  %102 = bitcast i32* %101 to i8*, !dbg !12363
  %103 = load i8*, i8** %_verts_static, align 8, !dbg !12363
  %cmp138 = icmp eq i8* %102, %103, !dbg !12363
  br i1 %cmp138, label %land.lhs.true140, label %cond.false144, !dbg !12363

land.lhs.true140:                                 ; preds = %cond.false137
  %104 = load i32*, i32** %verts, align 8, !dbg !12363
  %105 = bitcast i32* %104 to i8*, !dbg !12363
  %cmp141 = icmp ne i8* %105, null, !dbg !12363
  br i1 %cmp141, label %cond.true143, label %cond.false144, !dbg !12363

cond.true143:                                     ; preds = %land.lhs.true140
  br label %cond.end153, !dbg !12363

cond.false144:                                    ; preds = %land.lhs.true140, %cond.false137
  %106 = load i32*, i32** %verts, align 8, !dbg !12363
  %cmp145 = icmp eq i32* %106, null, !dbg !12363
  br i1 %cmp145, label %cond.true147, label %cond.false148, !dbg !12363

cond.true147:                                     ; preds = %cond.false144
  br label %cond.end151, !dbg !12363

cond.false148:                                    ; preds = %cond.false144
  %107 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !12363
  %108 = load i32*, i32** %verts, align 8, !dbg !12363
  %109 = bitcast i32* %108 to i8*, !dbg !12363
  %call149 = call i64 %107(i8* %109), !dbg !12363
  %div150 = udiv i64 %call149, 4, !dbg !12363
  br label %cond.end151, !dbg !12363

cond.end151:                                      ; preds = %cond.false148, %cond.true147
  %cond152 = phi i64 [ 0, %cond.true147 ], [ %div150, %cond.false148 ], !dbg !12363
  br label %cond.end153, !dbg !12363

cond.end153:                                      ; preds = %cond.end151, %cond.true143
  %cond154 = phi i64 [ 2, %cond.true143 ], [ %cond152, %cond.end151 ], !dbg !12363
  %110 = load i32, i32* %_verts_count, align 4, !dbg !12363
  %add155 = add nsw i32 %110, 1, !dbg !12363
  %conv156 = sext i32 %add155 to i64, !dbg !12363
  %cmp157 = icmp uge i64 %cond154, %conv156, !dbg !12363
  br i1 %cmp157, label %cond.true159, label %cond.false160, !dbg !12363

cond.true159:                                     ; preds = %cond.end153
  br label %cond.end161, !dbg !12363

cond.false160:                                    ; preds = %cond.end153
  %111 = bitcast i32** %verts to i8**, !dbg !12363
  %112 = load i8*, i8** %_verts_static, align 8, !dbg !12363
  %113 = load i32, i32* %_verts_count, align 4, !dbg !12363
  call void @_bli_array_grow_func(i8** %111, i8* %112, i32 4, i32 %113, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.194, i64 0, i64 0)), !dbg !12363
  br label %cond.end161, !dbg !12363

cond.end161:                                      ; preds = %cond.false160, %cond.true159
  br label %cond.end162, !dbg !12363

cond.end162:                                      ; preds = %cond.end161, %cond.true136
  %114 = load i32, i32* %_verts_count, align 4, !dbg !12363
  %add163 = add nsw i32 %114, 1, !dbg !12363
  store i32 %add163, i32* %_verts_count, align 4, !dbg !12363
  %115 = load i32, i32* %b, align 4, !dbg !12363
  %116 = load i32*, i32** %verts, align 8, !dbg !12363
  %117 = load i32, i32* %_verts_count, align 4, !dbg !12363
  %sub164 = sub nsw i32 %117, 1, !dbg !12363
  %idxprom165 = sext i32 %sub164 to i64, !dbg !12363
  %arrayidx166 = getelementptr inbounds i32, i32* %116, i64 %idxprom165, !dbg !12363
  store i32 %115, i32* %arrayidx166, align 4, !dbg !12363
  br label %if.end167, !dbg !12363

if.end167:                                        ; preds = %cond.end162, %if.end122
  br label %while.end169, !dbg !12364

if.end168:                                        ; preds = %while.body30
  %118 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !12365
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %118, i32 1, !dbg !12365
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %ml, align 8, !dbg !12365
  br label %while.cond27, !dbg !12268, !llvm.loop !12366

while.end169:                                     ; preds = %if.end167, %while.cond27
  %119 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !12368
  %incdec.ptr170 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %119, i32 1, !dbg !12368
  store %struct.MPoly* %incdec.ptr170, %struct.MPoly** %mp, align 8, !dbg !12368
  br label %while.cond, !dbg !12248, !llvm.loop !12369

while.end171:                                     ; preds = %while.cond
  %120 = load i32, i32* %_verts_count, align 4, !dbg !12371
  %121 = load i32*, i32** %count.addr, align 8, !dbg !12372
  store i32 %120, i32* %121, align 4, !dbg !12373
  %122 = load i32*, i32** %verts, align 8, !dbg !12374
  ret i32* %122, !dbg !12375
}

declare dso_local %struct.DerivedMesh* @mesh_get_derived_deform(%struct.Scene*, %struct.Object*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @getSingleCoordinate(%struct.MVert* %points, i32 %count, float* %coord) #0 !dbg !12376 {
entry:
  %points.addr = alloca %struct.MVert*, align 8
  %count.addr = alloca i32, align 4
  %coord.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.MVert* %points, %struct.MVert** %points.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %points.addr, metadata !12379, metadata !DIExpression()), !dbg !12380
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !12381, metadata !DIExpression()), !dbg !12382
  store float* %coord, float** %coord.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coord.addr, metadata !12383, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12385, metadata !DIExpression()), !dbg !12386
  %0 = load float*, float** %coord.addr, align 8, !dbg !12387
  call void @zero_v3(float* %0), !dbg !12388
  store i32 0, i32* %i, align 4, !dbg !12389
  br label %for.cond, !dbg !12391

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !12392
  %2 = load i32, i32* %count.addr, align 4, !dbg !12394
  %cmp = icmp slt i32 %1, %2, !dbg !12395
  br i1 %cmp, label %for.body, label %for.end, !dbg !12396

for.body:                                         ; preds = %for.cond
  %3 = load float*, float** %coord.addr, align 8, !dbg !12397
  %4 = load %struct.MVert*, %struct.MVert** %points.addr, align 8, !dbg !12399
  %5 = load i32, i32* %i, align 4, !dbg !12400
  %idxprom = sext i32 %5 to i64, !dbg !12399
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %4, i64 %idxprom, !dbg !12399
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !12401
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12399
  call void @add_v3_v3(float* %3, float* %arraydecay), !dbg !12402
  br label %for.inc, !dbg !12403

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !12404
  %inc = add nsw i32 %6, 1, !dbg !12404
  store i32 %inc, i32* %i, align 4, !dbg !12404
  br label %for.cond, !dbg !12405, !llvm.loop !12406

for.end:                                          ; preds = %for.cond
  %7 = load float*, float** %coord.addr, align 8, !dbg !12408
  %8 = load i32, i32* %count.addr, align 4, !dbg !12409
  %conv = sitofp i32 %8 to float, !dbg !12409
  %div = fdiv float 1.000000e+00, %conv, !dbg !12410
  call void @mul_v3_fl(float* %7, float %div), !dbg !12411
  ret void, !dbg !12412
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !12413 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12417, metadata !DIExpression()), !dbg !12418
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12419, metadata !DIExpression()), !dbg !12420
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  %0 = load float*, float** %a.addr, align 8, !dbg !12423
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12423
  %1 = load float, float* %arrayidx, align 4, !dbg !12423
  %2 = load float*, float** %b.addr, align 8, !dbg !12424
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12424
  %3 = load float, float* %arrayidx1, align 4, !dbg !12424
  %sub = fsub float %1, %3, !dbg !12425
  %4 = load float*, float** %r.addr, align 8, !dbg !12426
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !12426
  store float %sub, float* %arrayidx2, align 4, !dbg !12427
  %5 = load float*, float** %a.addr, align 8, !dbg !12428
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !12428
  %6 = load float, float* %arrayidx3, align 4, !dbg !12428
  %7 = load float*, float** %b.addr, align 8, !dbg !12429
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !12429
  %8 = load float, float* %arrayidx4, align 4, !dbg !12429
  %sub5 = fsub float %6, %8, !dbg !12430
  %9 = load float*, float** %r.addr, align 8, !dbg !12431
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !12431
  store float %sub5, float* %arrayidx6, align 4, !dbg !12432
  %10 = load float*, float** %a.addr, align 8, !dbg !12433
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !12433
  %11 = load float, float* %arrayidx7, align 4, !dbg !12433
  %12 = load float*, float** %b.addr, align 8, !dbg !12434
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !12434
  %13 = load float, float* %arrayidx8, align 4, !dbg !12434
  %sub9 = fsub float %11, %13, !dbg !12435
  %14 = load float*, float** %r.addr, align 8, !dbg !12436
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !12436
  store float %sub9, float* %arrayidx10, align 4, !dbg !12437
  ret void, !dbg !12438
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !12439 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !12442, metadata !DIExpression()), !dbg !12443
  %0 = load float*, float** %n.addr, align 8, !dbg !12444
  %1 = load float*, float** %n.addr, align 8, !dbg !12445
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !12446
  ret float %call, !dbg !12447
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !12448 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12451, metadata !DIExpression()), !dbg !12452
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !12453, metadata !DIExpression()), !dbg !12454
  %0 = load float*, float** %a.addr, align 8, !dbg !12455
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12455
  %1 = load float, float* %arrayidx, align 4, !dbg !12455
  %2 = load float*, float** %b.addr, align 8, !dbg !12456
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12456
  %3 = load float, float* %arrayidx1, align 4, !dbg !12456
  %mul = fmul float %1, %3, !dbg !12457
  %4 = load float*, float** %a.addr, align 8, !dbg !12458
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12458
  %5 = load float, float* %arrayidx2, align 4, !dbg !12458
  %6 = load float*, float** %b.addr, align 8, !dbg !12459
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12459
  %7 = load float, float* %arrayidx3, align 4, !dbg !12459
  %mul4 = fmul float %5, %7, !dbg !12460
  %add = fadd float %mul, %mul4, !dbg !12461
  %8 = load float*, float** %a.addr, align 8, !dbg !12462
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12462
  %9 = load float, float* %arrayidx5, align 4, !dbg !12462
  %10 = load float*, float** %b.addr, align 8, !dbg !12463
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !12463
  %11 = load float, float* %arrayidx6, align 4, !dbg !12463
  %mul7 = fmul float %9, %11, !dbg !12464
  %add8 = fadd float %add, %mul7, !dbg !12465
  ret float %add8, !dbg !12466
}

; Function Attrs: noinline nounwind uwtable
define internal void @moveCloserToDistanceFromPlane(%struct.Scene* %scene, %struct.Object* %ob, %struct.Mesh* %me, i32 %index, float* %norm, float* %coord, float %d, float %distToBe, float %strength, float %cp) #0 !dbg !12467 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %index.addr = alloca i32, align 4
  %norm.addr = alloca float*, align 8
  %coord.addr = alloca float*, align 8
  %d.addr = alloca float, align 4
  %distToBe.addr = alloca float, align 4
  %strength.addr = alloca float, align 4
  %cp.addr = alloca float, align 4
  %dm = alloca %struct.DerivedMesh*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %m = alloca %struct.MVert, align 4
  %dvert = alloca %struct.MDeformVert*, align 8
  %totweight = alloca i32, align 4
  %oldw = alloca float, align 4
  %oldPos = alloca [3 x float], align 4
  %vc = alloca float, align 4
  %hc = alloca float, align 4
  %dist = alloca float, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %changes = alloca [2 x float]*, align 8
  %dists = alloca float*, align 8
  %upDown = alloca i32*, align 8
  %dwIndices = alloca i32*, align 8
  %distToStart = alloca float, align 4
  %bestIndex = alloca i32, align 4
  %wasChange = alloca i8, align 1
  %wasUp = alloca i8, align 1
  %lastIndex = alloca i32, align 4
  %originalDistToBe = alloca float, align 4
  %tf = alloca float, align 4
  %ti = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12470, metadata !DIExpression()), !dbg !12471
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12472, metadata !DIExpression()), !dbg !12473
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !12474, metadata !DIExpression()), !dbg !12475
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12476, metadata !DIExpression()), !dbg !12477
  store float* %norm, float** %norm.addr, align 8
  call void @llvm.dbg.declare(metadata float** %norm.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  store float* %coord, float** %coord.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coord.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  store float %d, float* %d.addr, align 4
  call void @llvm.dbg.declare(metadata float* %d.addr, metadata !12482, metadata !DIExpression()), !dbg !12483
  store float %distToBe, float* %distToBe.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distToBe.addr, metadata !12484, metadata !DIExpression()), !dbg !12485
  store float %strength, float* %strength.addr, align 4
  call void @llvm.dbg.declare(metadata float* %strength.addr, metadata !12486, metadata !DIExpression()), !dbg !12487
  store float %cp, float* %cp.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cp.addr, metadata !12488, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !12490, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !12492, metadata !DIExpression()), !dbg !12493
  call void @llvm.dbg.declare(metadata %struct.MVert* %m, metadata !12494, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !12496, metadata !DIExpression()), !dbg !12497
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !12498
  %dvert1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 17, !dbg !12499
  %1 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert1, align 8, !dbg !12499
  %2 = load i32, i32* %index.addr, align 4, !dbg !12500
  %idx.ext = sext i32 %2 to i64, !dbg !12501
  %add.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %1, i64 %idx.ext, !dbg !12501
  store %struct.MDeformVert* %add.ptr, %struct.MDeformVert** %dvert, align 8, !dbg !12497
  call void @llvm.dbg.declare(metadata i32* %totweight, metadata !12502, metadata !DIExpression()), !dbg !12503
  %3 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !12504
  %totweight2 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %3, i32 0, i32 1, !dbg !12505
  %4 = load i32, i32* %totweight2, align 8, !dbg !12505
  store i32 %4, i32* %totweight, align 4, !dbg !12503
  call void @llvm.dbg.declare(metadata float* %oldw, metadata !12506, metadata !DIExpression()), !dbg !12507
  store float 0.000000e+00, float* %oldw, align 4, !dbg !12507
  call void @llvm.dbg.declare(metadata [3 x float]* %oldPos, metadata !12508, metadata !DIExpression()), !dbg !12509
  %5 = bitcast [3 x float]* %oldPos to i8*, !dbg !12509
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 12, i1 false), !dbg !12509
  call void @llvm.dbg.declare(metadata float* %vc, metadata !12510, metadata !DIExpression()), !dbg !12511
  call void @llvm.dbg.declare(metadata float* %hc, metadata !12512, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.declare(metadata float* %dist, metadata !12514, metadata !DIExpression()), !dbg !12515
  store float 0.000000e+00, float* %dist, align 4, !dbg !12515
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12516, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.declare(metadata i32* %k, metadata !12518, metadata !DIExpression()), !dbg !12519
  call void @llvm.dbg.declare(metadata [2 x float]** %changes, metadata !12520, metadata !DIExpression()), !dbg !12522
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !12523
  %7 = load i32, i32* %totweight, align 4, !dbg !12524
  %conv = sext i32 %7 to i64, !dbg !12524
  %mul = mul i64 8, %conv, !dbg !12525
  %mul3 = mul i64 %mul, 2, !dbg !12526
  %call = call i8* %6(i64 %mul3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.195, i64 0, i64 0)), !dbg !12523
  %8 = bitcast i8* %call to [2 x float]*, !dbg !12523
  store [2 x float]* %8, [2 x float]** %changes, align 8, !dbg !12522
  call void @llvm.dbg.declare(metadata float** %dists, metadata !12527, metadata !DIExpression()), !dbg !12528
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !12529
  %10 = load i32, i32* %totweight, align 4, !dbg !12530
  %conv4 = sext i32 %10 to i64, !dbg !12530
  %mul5 = mul i64 4, %conv4, !dbg !12531
  %call6 = call i8* %9(i64 %mul5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.196, i64 0, i64 0)), !dbg !12529
  %11 = bitcast i8* %call6 to float*, !dbg !12529
  store float* %11, float** %dists, align 8, !dbg !12528
  call void @llvm.dbg.declare(metadata i32** %upDown, metadata !12532, metadata !DIExpression()), !dbg !12533
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12534
  %13 = load i32, i32* %totweight, align 4, !dbg !12535
  %conv7 = sext i32 %13 to i64, !dbg !12535
  %mul8 = mul i64 4, %conv7, !dbg !12536
  %call9 = call i8* %12(i64 %mul8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.197, i64 0, i64 0)), !dbg !12534
  %14 = bitcast i8* %call9 to i32*, !dbg !12534
  store i32* %14, i32** %upDown, align 8, !dbg !12533
  call void @llvm.dbg.declare(metadata i32** %dwIndices, metadata !12537, metadata !DIExpression()), !dbg !12538
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12539
  %16 = load i32, i32* %totweight, align 4, !dbg !12540
  %conv10 = sext i32 %16 to i64, !dbg !12540
  %mul11 = mul i64 4, %conv10, !dbg !12541
  %call12 = call i8* %15(i64 %mul11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.198, i64 0, i64 0)), !dbg !12539
  %17 = bitcast i8* %call12 to i32*, !dbg !12539
  store i32* %17, i32** %dwIndices, align 8, !dbg !12538
  call void @llvm.dbg.declare(metadata float* %distToStart, metadata !12542, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.declare(metadata i32* %bestIndex, metadata !12544, metadata !DIExpression()), !dbg !12545
  store i32 0, i32* %bestIndex, align 4, !dbg !12545
  call void @llvm.dbg.declare(metadata i8* %wasChange, metadata !12546, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.declare(metadata i8* %wasUp, metadata !12548, metadata !DIExpression()), !dbg !12549
  call void @llvm.dbg.declare(metadata i32* %lastIndex, metadata !12550, metadata !DIExpression()), !dbg !12551
  store i32 -1, i32* %lastIndex, align 4, !dbg !12551
  call void @llvm.dbg.declare(metadata float* %originalDistToBe, metadata !12552, metadata !DIExpression()), !dbg !12553
  %18 = load float, float* %distToBe.addr, align 4, !dbg !12554
  store float %18, float* %originalDistToBe, align 4, !dbg !12553
  br label %do.body, !dbg !12555

do.body:                                          ; preds = %land.end, %entry
  store i8 0, i8* %wasChange, align 1, !dbg !12556
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12558
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12559
  %call13 = call %struct.DerivedMesh* @dm_deform_recalc(%struct.Scene* %19, %struct.Object* %20), !dbg !12560
  store %struct.DerivedMesh* %call13, %struct.DerivedMesh** %dm, align 8, !dbg !12561
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12562
  %getVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 28, !dbg !12563
  %22 = load void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)** %getVert, align 8, !dbg !12563
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12564
  %24 = load i32, i32* %index.addr, align 4, !dbg !12565
  call void %22(%struct.DerivedMesh* %23, i32 %24, %struct.MVert* %m), !dbg !12562
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %oldPos, i64 0, i64 0, !dbg !12566
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %m, i32 0, i32 0, !dbg !12567
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12568
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay14), !dbg !12569
  %25 = load float*, float** %norm.addr, align 8, !dbg !12570
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %oldPos, i64 0, i64 0, !dbg !12571
  %call16 = call float @dot_v3v3(float* %25, float* %arraydecay15), !dbg !12572
  %26 = load float, float* %d.addr, align 4, !dbg !12573
  %add = fadd float %call16, %26, !dbg !12574
  store float %add, float* %distToStart, align 4, !dbg !12575
  %27 = load float, float* %distToBe.addr, align 4, !dbg !12576
  %28 = load float, float* %originalDistToBe, align 4, !dbg !12578
  %cmp = fcmp oeq float %27, %28, !dbg !12579
  br i1 %cmp, label %if.then, label %if.end, !dbg !12580

if.then:                                          ; preds = %do.body
  %29 = load float, float* %distToStart, align 4, !dbg !12581
  %30 = load float, float* %distToStart, align 4, !dbg !12583
  %31 = load float, float* %strength.addr, align 4, !dbg !12584
  %mul18 = fmul float %30, %31, !dbg !12585
  %sub = fsub float %29, %mul18, !dbg !12586
  %32 = load float, float* %distToBe.addr, align 4, !dbg !12587
  %add19 = fadd float %32, %sub, !dbg !12587
  store float %add19, float* %distToBe.addr, align 4, !dbg !12587
  br label %if.end, !dbg !12588

if.end:                                           ; preds = %if.then, %do.body
  store i32 0, i32* %i, align 4, !dbg !12589
  br label %for.cond, !dbg !12591

for.cond:                                         ; preds = %for.inc125, %if.end
  %33 = load i32, i32* %i, align 4, !dbg !12592
  %34 = load i32, i32* %totweight, align 4, !dbg !12594
  %cmp20 = icmp slt i32 %33, %34, !dbg !12595
  br i1 %cmp20, label %for.body, label %for.end127, !dbg !12596

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %i, align 4, !dbg !12597
  %36 = load i32*, i32** %dwIndices, align 8, !dbg !12599
  %37 = load i32, i32* %i, align 4, !dbg !12600
  %idxprom = sext i32 %37 to i64, !dbg !12599
  %arrayidx = getelementptr inbounds i32, i32* %36, i64 %idxprom, !dbg !12599
  store i32 %35, i32* %arrayidx, align 4, !dbg !12601
  %38 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !12602
  %dw22 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %38, i32 0, i32 0, !dbg !12603
  %39 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw22, align 8, !dbg !12603
  %40 = load i32, i32* %i, align 4, !dbg !12604
  %idx.ext23 = sext i32 %40 to i64, !dbg !12605
  %add.ptr24 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %39, i64 %idx.ext23, !dbg !12605
  store %struct.MDeformWeight* %add.ptr24, %struct.MDeformWeight** %dw, align 8, !dbg !12606
  store float 0.000000e+00, float* %hc, align 4, !dbg !12607
  store float 0.000000e+00, float* %vc, align 4, !dbg !12608
  %41 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12609
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %41, i32 0, i32 1, !dbg !12611
  %42 = load float, float* %weight, align 4, !dbg !12611
  %tobool = fcmp une float %42, 0.000000e+00, !dbg !12609
  br i1 %tobool, label %if.end34, label %if.then25, !dbg !12612

if.then25:                                        ; preds = %for.body
  %43 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12613
  %44 = load i32, i32* %i, align 4, !dbg !12615
  %idxprom26 = sext i32 %44 to i64, !dbg !12613
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %43, i64 %idxprom26, !dbg !12613
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx27, i64 0, i64 0, !dbg !12613
  store float 0.000000e+00, float* %arrayidx28, align 4, !dbg !12616
  %45 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12617
  %46 = load i32, i32* %i, align 4, !dbg !12618
  %idxprom29 = sext i32 %46 to i64, !dbg !12617
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %45, i64 %idxprom29, !dbg !12617
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx30, i64 0, i64 1, !dbg !12617
  store float 0.000000e+00, float* %arrayidx31, align 4, !dbg !12619
  %47 = load float, float* %distToStart, align 4, !dbg !12620
  %48 = load float*, float** %dists, align 8, !dbg !12621
  %49 = load i32, i32* %i, align 4, !dbg !12622
  %idxprom32 = sext i32 %49 to i64, !dbg !12621
  %arrayidx33 = getelementptr inbounds float, float* %48, i64 %idxprom32, !dbg !12621
  store float %47, float* %arrayidx33, align 4, !dbg !12623
  br label %for.inc125, !dbg !12624

if.end34:                                         ; preds = %for.body
  store i32 0, i32* %k, align 4, !dbg !12625
  br label %for.cond35, !dbg !12627

for.cond35:                                       ; preds = %for.inc, %if.end34
  %50 = load i32, i32* %k, align 4, !dbg !12628
  %cmp36 = icmp slt i32 %50, 2, !dbg !12630
  br i1 %cmp36, label %for.body38, label %for.end, !dbg !12631

for.body38:                                       ; preds = %for.cond35
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12632
  %tobool39 = icmp ne %struct.DerivedMesh* %51, null, !dbg !12632
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !12635

if.then40:                                        ; preds = %for.body38
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12636
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12638
  call void @dm_deform_clear(%struct.DerivedMesh* %52, %struct.Object* %53), !dbg !12639
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !12640
  br label %if.end41, !dbg !12641

if.end41:                                         ; preds = %if.then40, %for.body38
  %54 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12642
  %weight42 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %54, i32 0, i32 1, !dbg !12643
  %55 = load float, float* %weight42, align 4, !dbg !12643
  store float %55, float* %oldw, align 4, !dbg !12644
  %56 = load i32, i32* %k, align 4, !dbg !12645
  %tobool43 = icmp ne i32 %56, 0, !dbg !12645
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !12647

if.then44:                                        ; preds = %if.end41
  %57 = load float, float* %cp.addr, align 4, !dbg !12648
  %add45 = fadd float 1.000000e+00, %57, !dbg !12650
  %58 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12651
  %weight46 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %58, i32 0, i32 1, !dbg !12652
  %59 = load float, float* %weight46, align 4, !dbg !12653
  %mul47 = fmul float %59, %add45, !dbg !12653
  store float %mul47, float* %weight46, align 4, !dbg !12653
  br label %if.end50, !dbg !12654

if.else:                                          ; preds = %if.end41
  %60 = load float, float* %cp.addr, align 4, !dbg !12655
  %add48 = fadd float 1.000000e+00, %60, !dbg !12657
  %61 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12658
  %weight49 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %61, i32 0, i32 1, !dbg !12659
  %62 = load float, float* %weight49, align 4, !dbg !12660
  %div = fdiv float %62, %add48, !dbg !12660
  store float %div, float* %weight49, align 4, !dbg !12660
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then44
  %63 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12661
  %weight51 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %63, i32 0, i32 1, !dbg !12663
  %64 = load float, float* %weight51, align 4, !dbg !12663
  %65 = load float, float* %oldw, align 4, !dbg !12664
  %cmp52 = fcmp oeq float %64, %65, !dbg !12665
  br i1 %cmp52, label %if.then54, label %if.end63, !dbg !12666

if.then54:                                        ; preds = %if.end50
  %66 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12667
  %67 = load i32, i32* %i, align 4, !dbg !12669
  %idxprom55 = sext i32 %67 to i64, !dbg !12667
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %66, i64 %idxprom55, !dbg !12667
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx56, i64 0, i64 0, !dbg !12667
  store float 0.000000e+00, float* %arrayidx57, align 4, !dbg !12670
  %68 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12671
  %69 = load i32, i32* %i, align 4, !dbg !12672
  %idxprom58 = sext i32 %69 to i64, !dbg !12671
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %68, i64 %idxprom58, !dbg !12671
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx59, i64 0, i64 1, !dbg !12671
  store float 0.000000e+00, float* %arrayidx60, align 4, !dbg !12673
  %70 = load float, float* %distToStart, align 4, !dbg !12674
  %71 = load float*, float** %dists, align 8, !dbg !12675
  %72 = load i32, i32* %i, align 4, !dbg !12676
  %idxprom61 = sext i32 %72 to i64, !dbg !12675
  %arrayidx62 = getelementptr inbounds float, float* %71, i64 %idxprom61, !dbg !12675
  store float %70, float* %arrayidx62, align 4, !dbg !12677
  br label %for.end, !dbg !12678

if.end63:                                         ; preds = %if.end50
  %73 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12679
  %weight64 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %73, i32 0, i32 1, !dbg !12681
  %74 = load float, float* %weight64, align 4, !dbg !12681
  %cmp65 = fcmp ogt float %74, 1.000000e+00, !dbg !12682
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !12683

if.then67:                                        ; preds = %if.end63
  %75 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12684
  %weight68 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %75, i32 0, i32 1, !dbg !12686
  store float 1.000000e+00, float* %weight68, align 4, !dbg !12687
  br label %if.end69, !dbg !12688

if.end69:                                         ; preds = %if.then67, %if.end63
  %76 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12689
  %77 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12690
  %call70 = call %struct.DerivedMesh* @dm_deform_recalc(%struct.Scene* %76, %struct.Object* %77), !dbg !12691
  store %struct.DerivedMesh* %call70, %struct.DerivedMesh** %dm, align 8, !dbg !12692
  %78 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12693
  %getVert71 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %78, i32 0, i32 28, !dbg !12694
  %79 = load void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)** %getVert71, align 8, !dbg !12694
  %80 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12695
  %81 = load i32, i32* %index.addr, align 4, !dbg !12696
  call void %79(%struct.DerivedMesh* %80, i32 %81, %struct.MVert* %m), !dbg !12693
  %82 = load float*, float** %norm.addr, align 8, !dbg !12697
  %83 = load float, float* %d.addr, align 4, !dbg !12698
  %84 = load float*, float** %coord.addr, align 8, !dbg !12699
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %oldPos, i64 0, i64 0, !dbg !12700
  %85 = load float, float* %distToStart, align 4, !dbg !12701
  %co73 = getelementptr inbounds %struct.MVert, %struct.MVert* %m, i32 0, i32 0, !dbg !12702
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !12703
  %86 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12704
  %87 = load float*, float** %dists, align 8, !dbg !12705
  %88 = load i32, i32* %i, align 4, !dbg !12706
  call void @getVerticalAndHorizontalChange(float* %82, float %83, float* %84, float* %arraydecay72, float %85, float* %arraydecay74, [2 x float]* %86, float* %87, i32 %88), !dbg !12707
  %89 = load float, float* %oldw, align 4, !dbg !12708
  %90 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12709
  %weight75 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %90, i32 0, i32 1, !dbg !12710
  store float %89, float* %weight75, align 4, !dbg !12711
  %91 = load i32, i32* %k, align 4, !dbg !12712
  %tobool76 = icmp ne i32 %91, 0, !dbg !12712
  br i1 %tobool76, label %if.else86, label %if.then77, !dbg !12714

if.then77:                                        ; preds = %if.end69
  %92 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12715
  %93 = load i32, i32* %i, align 4, !dbg !12717
  %idxprom78 = sext i32 %93 to i64, !dbg !12715
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %92, i64 %idxprom78, !dbg !12715
  %arrayidx80 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx79, i64 0, i64 0, !dbg !12715
  %94 = load float, float* %arrayidx80, align 4, !dbg !12715
  store float %94, float* %vc, align 4, !dbg !12718
  %95 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12719
  %96 = load i32, i32* %i, align 4, !dbg !12720
  %idxprom81 = sext i32 %96 to i64, !dbg !12719
  %arrayidx82 = getelementptr inbounds [2 x float], [2 x float]* %95, i64 %idxprom81, !dbg !12719
  %arrayidx83 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx82, i64 0, i64 1, !dbg !12719
  %97 = load float, float* %arrayidx83, align 4, !dbg !12719
  store float %97, float* %hc, align 4, !dbg !12721
  %98 = load float*, float** %dists, align 8, !dbg !12722
  %99 = load i32, i32* %i, align 4, !dbg !12723
  %idxprom84 = sext i32 %99 to i64, !dbg !12722
  %arrayidx85 = getelementptr inbounds float, float* %98, i64 %idxprom84, !dbg !12722
  %100 = load float, float* %arrayidx85, align 4, !dbg !12722
  store float %100, float* %dist, align 4, !dbg !12724
  br label %if.end124, !dbg !12725

if.else86:                                        ; preds = %if.end69
  %101 = load float, float* %dist, align 4, !dbg !12726
  %102 = load float, float* %distToBe.addr, align 4, !dbg !12729
  %sub87 = fsub float %101, %102, !dbg !12730
  %103 = call float @llvm.fabs.f32(float %sub87), !dbg !12731
  %104 = load float*, float** %dists, align 8, !dbg !12732
  %105 = load i32, i32* %i, align 4, !dbg !12733
  %idxprom88 = sext i32 %105 to i64, !dbg !12732
  %arrayidx89 = getelementptr inbounds float, float* %104, i64 %idxprom88, !dbg !12732
  %106 = load float, float* %arrayidx89, align 4, !dbg !12732
  %107 = load float, float* %distToBe.addr, align 4, !dbg !12734
  %sub90 = fsub float %106, %107, !dbg !12735
  %108 = call float @llvm.fabs.f32(float %sub90), !dbg !12736
  %cmp91 = fcmp olt float %103, %108, !dbg !12737
  br i1 %cmp91, label %if.then93, label %if.else104, !dbg !12738

if.then93:                                        ; preds = %if.else86
  %109 = load i32*, i32** %upDown, align 8, !dbg !12739
  %110 = load i32, i32* %i, align 4, !dbg !12741
  %idxprom94 = sext i32 %110 to i64, !dbg !12739
  %arrayidx95 = getelementptr inbounds i32, i32* %109, i64 %idxprom94, !dbg !12739
  store i32 0, i32* %arrayidx95, align 4, !dbg !12742
  %111 = load float, float* %vc, align 4, !dbg !12743
  %112 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12744
  %113 = load i32, i32* %i, align 4, !dbg !12745
  %idxprom96 = sext i32 %113 to i64, !dbg !12744
  %arrayidx97 = getelementptr inbounds [2 x float], [2 x float]* %112, i64 %idxprom96, !dbg !12744
  %arrayidx98 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx97, i64 0, i64 0, !dbg !12744
  store float %111, float* %arrayidx98, align 4, !dbg !12746
  %114 = load float, float* %hc, align 4, !dbg !12747
  %115 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12748
  %116 = load i32, i32* %i, align 4, !dbg !12749
  %idxprom99 = sext i32 %116 to i64, !dbg !12748
  %arrayidx100 = getelementptr inbounds [2 x float], [2 x float]* %115, i64 %idxprom99, !dbg !12748
  %arrayidx101 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx100, i64 0, i64 1, !dbg !12748
  store float %114, float* %arrayidx101, align 4, !dbg !12750
  %117 = load float, float* %dist, align 4, !dbg !12751
  %118 = load float*, float** %dists, align 8, !dbg !12752
  %119 = load i32, i32* %i, align 4, !dbg !12753
  %idxprom102 = sext i32 %119 to i64, !dbg !12752
  %arrayidx103 = getelementptr inbounds float, float* %118, i64 %idxprom102, !dbg !12752
  store float %117, float* %arrayidx103, align 4, !dbg !12754
  br label %if.end107, !dbg !12755

if.else104:                                       ; preds = %if.else86
  %120 = load i32*, i32** %upDown, align 8, !dbg !12756
  %121 = load i32, i32* %i, align 4, !dbg !12758
  %idxprom105 = sext i32 %121 to i64, !dbg !12756
  %arrayidx106 = getelementptr inbounds i32, i32* %120, i64 %idxprom105, !dbg !12756
  store i32 1, i32* %arrayidx106, align 4, !dbg !12759
  br label %if.end107

if.end107:                                        ; preds = %if.else104, %if.then93
  %122 = load float*, float** %dists, align 8, !dbg !12760
  %123 = load i32, i32* %i, align 4, !dbg !12762
  %idxprom108 = sext i32 %123 to i64, !dbg !12760
  %arrayidx109 = getelementptr inbounds float, float* %122, i64 %idxprom108, !dbg !12760
  %124 = load float, float* %arrayidx109, align 4, !dbg !12760
  %125 = load float, float* %distToBe.addr, align 4, !dbg !12763
  %sub110 = fsub float %124, %125, !dbg !12764
  %126 = call float @llvm.fabs.f32(float %sub110), !dbg !12765
  %127 = load float, float* %distToStart, align 4, !dbg !12766
  %128 = load float, float* %distToBe.addr, align 4, !dbg !12767
  %sub111 = fsub float %127, %128, !dbg !12768
  %129 = call float @llvm.fabs.f32(float %sub111), !dbg !12769
  %cmp112 = fcmp ogt float %126, %129, !dbg !12770
  br i1 %cmp112, label %if.then114, label %if.end123, !dbg !12771

if.then114:                                       ; preds = %if.end107
  %130 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12772
  %131 = load i32, i32* %i, align 4, !dbg !12774
  %idxprom115 = sext i32 %131 to i64, !dbg !12772
  %arrayidx116 = getelementptr inbounds [2 x float], [2 x float]* %130, i64 %idxprom115, !dbg !12772
  %arrayidx117 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx116, i64 0, i64 0, !dbg !12772
  store float 0.000000e+00, float* %arrayidx117, align 4, !dbg !12775
  %132 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12776
  %133 = load i32, i32* %i, align 4, !dbg !12777
  %idxprom118 = sext i32 %133 to i64, !dbg !12776
  %arrayidx119 = getelementptr inbounds [2 x float], [2 x float]* %132, i64 %idxprom118, !dbg !12776
  %arrayidx120 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx119, i64 0, i64 1, !dbg !12776
  store float 0.000000e+00, float* %arrayidx120, align 4, !dbg !12778
  %134 = load float, float* %distToStart, align 4, !dbg !12779
  %135 = load float*, float** %dists, align 8, !dbg !12780
  %136 = load i32, i32* %i, align 4, !dbg !12781
  %idxprom121 = sext i32 %136 to i64, !dbg !12780
  %arrayidx122 = getelementptr inbounds float, float* %135, i64 %idxprom121, !dbg !12780
  store float %134, float* %arrayidx122, align 4, !dbg !12782
  br label %if.end123, !dbg !12783

if.end123:                                        ; preds = %if.then114, %if.end107
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then77
  br label %for.inc, !dbg !12784

for.inc:                                          ; preds = %if.end124
  %137 = load i32, i32* %k, align 4, !dbg !12785
  %inc = add nsw i32 %137, 1, !dbg !12785
  store i32 %inc, i32* %k, align 4, !dbg !12785
  br label %for.cond35, !dbg !12786, !llvm.loop !12787

for.end:                                          ; preds = %if.then54, %for.cond35
  br label %for.inc125, !dbg !12789

for.inc125:                                       ; preds = %for.end, %if.then25
  %138 = load i32, i32* %i, align 4, !dbg !12790
  %inc126 = add nsw i32 %138, 1, !dbg !12790
  store i32 %inc126, i32* %i, align 4, !dbg !12790
  br label %for.cond, !dbg !12791, !llvm.loop !12792

for.end127:                                       ; preds = %for.cond
  store i32 0, i32* %k, align 4, !dbg !12794
  br label %for.cond128, !dbg !12796

for.cond128:                                      ; preds = %for.inc200, %for.end127
  %139 = load i32, i32* %k, align 4, !dbg !12797
  %140 = load i32, i32* %totweight, align 4, !dbg !12799
  %cmp129 = icmp slt i32 %139, %140, !dbg !12800
  br i1 %cmp129, label %for.body131, label %for.end202, !dbg !12801

for.body131:                                      ; preds = %for.cond128
  call void @llvm.dbg.declare(metadata float* %tf, metadata !12802, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.declare(metadata i32* %ti, metadata !12805, metadata !DIExpression()), !dbg !12806
  %141 = load i32, i32* %k, align 4, !dbg !12807
  store i32 %141, i32* %bestIndex, align 4, !dbg !12808
  %142 = load i32, i32* %k, align 4, !dbg !12809
  %add132 = add nsw i32 %142, 1, !dbg !12811
  store i32 %add132, i32* %i, align 4, !dbg !12812
  br label %for.cond133, !dbg !12813

for.cond133:                                      ; preds = %for.inc145, %for.body131
  %143 = load i32, i32* %i, align 4, !dbg !12814
  %144 = load i32, i32* %totweight, align 4, !dbg !12816
  %cmp134 = icmp slt i32 %143, %144, !dbg !12817
  br i1 %cmp134, label %for.body136, label %for.end147, !dbg !12818

for.body136:                                      ; preds = %for.cond133
  %145 = load float*, float** %dists, align 8, !dbg !12819
  %146 = load i32, i32* %i, align 4, !dbg !12821
  %idxprom137 = sext i32 %146 to i64, !dbg !12819
  %arrayidx138 = getelementptr inbounds float, float* %145, i64 %idxprom137, !dbg !12819
  %147 = load float, float* %arrayidx138, align 4, !dbg !12819
  store float %147, float* %dist, align 4, !dbg !12822
  %148 = load float, float* %dist, align 4, !dbg !12823
  %149 = call float @llvm.fabs.f32(float %148), !dbg !12825
  %150 = load float*, float** %dists, align 8, !dbg !12826
  %151 = load i32, i32* %i, align 4, !dbg !12827
  %idxprom139 = sext i32 %151 to i64, !dbg !12826
  %arrayidx140 = getelementptr inbounds float, float* %150, i64 %idxprom139, !dbg !12826
  %152 = load float, float* %arrayidx140, align 4, !dbg !12826
  %153 = call float @llvm.fabs.f32(float %152), !dbg !12828
  %cmp141 = fcmp ogt float %149, %153, !dbg !12829
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !12830

if.then143:                                       ; preds = %for.body136
  %154 = load i32, i32* %i, align 4, !dbg !12831
  store i32 %154, i32* %bestIndex, align 4, !dbg !12833
  br label %if.end144, !dbg !12834

if.end144:                                        ; preds = %if.then143, %for.body136
  br label %for.inc145, !dbg !12835

for.inc145:                                       ; preds = %if.end144
  %155 = load i32, i32* %i, align 4, !dbg !12836
  %inc146 = add nsw i32 %155, 1, !dbg !12836
  store i32 %inc146, i32* %i, align 4, !dbg !12836
  br label %for.cond133, !dbg !12837, !llvm.loop !12838

for.end147:                                       ; preds = %for.cond133
  %156 = load i32, i32* %bestIndex, align 4, !dbg !12840
  %157 = load i32, i32* %k, align 4, !dbg !12842
  %cmp148 = icmp ne i32 %156, %157, !dbg !12843
  br i1 %cmp148, label %if.then150, label %if.end199, !dbg !12844

if.then150:                                       ; preds = %for.end147
  %158 = load i32*, i32** %upDown, align 8, !dbg !12845
  %159 = load i32, i32* %k, align 4, !dbg !12847
  %idxprom151 = sext i32 %159 to i64, !dbg !12845
  %arrayidx152 = getelementptr inbounds i32, i32* %158, i64 %idxprom151, !dbg !12845
  %160 = load i32, i32* %arrayidx152, align 4, !dbg !12845
  store i32 %160, i32* %ti, align 4, !dbg !12848
  %161 = load i32*, i32** %upDown, align 8, !dbg !12849
  %162 = load i32, i32* %bestIndex, align 4, !dbg !12850
  %idxprom153 = sext i32 %162 to i64, !dbg !12849
  %arrayidx154 = getelementptr inbounds i32, i32* %161, i64 %idxprom153, !dbg !12849
  %163 = load i32, i32* %arrayidx154, align 4, !dbg !12849
  %164 = load i32*, i32** %upDown, align 8, !dbg !12851
  %165 = load i32, i32* %k, align 4, !dbg !12852
  %idxprom155 = sext i32 %165 to i64, !dbg !12851
  %arrayidx156 = getelementptr inbounds i32, i32* %164, i64 %idxprom155, !dbg !12851
  store i32 %163, i32* %arrayidx156, align 4, !dbg !12853
  %166 = load i32, i32* %ti, align 4, !dbg !12854
  %167 = load i32*, i32** %upDown, align 8, !dbg !12855
  %168 = load i32, i32* %bestIndex, align 4, !dbg !12856
  %idxprom157 = sext i32 %168 to i64, !dbg !12855
  %arrayidx158 = getelementptr inbounds i32, i32* %167, i64 %idxprom157, !dbg !12855
  store i32 %166, i32* %arrayidx158, align 4, !dbg !12857
  %169 = load i32*, i32** %dwIndices, align 8, !dbg !12858
  %170 = load i32, i32* %k, align 4, !dbg !12859
  %idxprom159 = sext i32 %170 to i64, !dbg !12858
  %arrayidx160 = getelementptr inbounds i32, i32* %169, i64 %idxprom159, !dbg !12858
  %171 = load i32, i32* %arrayidx160, align 4, !dbg !12858
  store i32 %171, i32* %ti, align 4, !dbg !12860
  %172 = load i32*, i32** %dwIndices, align 8, !dbg !12861
  %173 = load i32, i32* %bestIndex, align 4, !dbg !12862
  %idxprom161 = sext i32 %173 to i64, !dbg !12861
  %arrayidx162 = getelementptr inbounds i32, i32* %172, i64 %idxprom161, !dbg !12861
  %174 = load i32, i32* %arrayidx162, align 4, !dbg !12861
  %175 = load i32*, i32** %dwIndices, align 8, !dbg !12863
  %176 = load i32, i32* %k, align 4, !dbg !12864
  %idxprom163 = sext i32 %176 to i64, !dbg !12863
  %arrayidx164 = getelementptr inbounds i32, i32* %175, i64 %idxprom163, !dbg !12863
  store i32 %174, i32* %arrayidx164, align 4, !dbg !12865
  %177 = load i32, i32* %ti, align 4, !dbg !12866
  %178 = load i32*, i32** %dwIndices, align 8, !dbg !12867
  %179 = load i32, i32* %bestIndex, align 4, !dbg !12868
  %idxprom165 = sext i32 %179 to i64, !dbg !12867
  %arrayidx166 = getelementptr inbounds i32, i32* %178, i64 %idxprom165, !dbg !12867
  store i32 %177, i32* %arrayidx166, align 4, !dbg !12869
  %180 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12870
  %181 = load i32, i32* %k, align 4, !dbg !12871
  %idxprom167 = sext i32 %181 to i64, !dbg !12870
  %arrayidx168 = getelementptr inbounds [2 x float], [2 x float]* %180, i64 %idxprom167, !dbg !12870
  %arrayidx169 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx168, i64 0, i64 0, !dbg !12870
  %182 = load float, float* %arrayidx169, align 4, !dbg !12870
  store float %182, float* %tf, align 4, !dbg !12872
  %183 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12873
  %184 = load i32, i32* %bestIndex, align 4, !dbg !12874
  %idxprom170 = sext i32 %184 to i64, !dbg !12873
  %arrayidx171 = getelementptr inbounds [2 x float], [2 x float]* %183, i64 %idxprom170, !dbg !12873
  %arrayidx172 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx171, i64 0, i64 0, !dbg !12873
  %185 = load float, float* %arrayidx172, align 4, !dbg !12873
  %186 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12875
  %187 = load i32, i32* %k, align 4, !dbg !12876
  %idxprom173 = sext i32 %187 to i64, !dbg !12875
  %arrayidx174 = getelementptr inbounds [2 x float], [2 x float]* %186, i64 %idxprom173, !dbg !12875
  %arrayidx175 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx174, i64 0, i64 0, !dbg !12875
  store float %185, float* %arrayidx175, align 4, !dbg !12877
  %188 = load float, float* %tf, align 4, !dbg !12878
  %189 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12879
  %190 = load i32, i32* %bestIndex, align 4, !dbg !12880
  %idxprom176 = sext i32 %190 to i64, !dbg !12879
  %arrayidx177 = getelementptr inbounds [2 x float], [2 x float]* %189, i64 %idxprom176, !dbg !12879
  %arrayidx178 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx177, i64 0, i64 0, !dbg !12879
  store float %188, float* %arrayidx178, align 4, !dbg !12881
  %191 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12882
  %192 = load i32, i32* %k, align 4, !dbg !12883
  %idxprom179 = sext i32 %192 to i64, !dbg !12882
  %arrayidx180 = getelementptr inbounds [2 x float], [2 x float]* %191, i64 %idxprom179, !dbg !12882
  %arrayidx181 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx180, i64 0, i64 1, !dbg !12882
  %193 = load float, float* %arrayidx181, align 4, !dbg !12882
  store float %193, float* %tf, align 4, !dbg !12884
  %194 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12885
  %195 = load i32, i32* %bestIndex, align 4, !dbg !12886
  %idxprom182 = sext i32 %195 to i64, !dbg !12885
  %arrayidx183 = getelementptr inbounds [2 x float], [2 x float]* %194, i64 %idxprom182, !dbg !12885
  %arrayidx184 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx183, i64 0, i64 1, !dbg !12885
  %196 = load float, float* %arrayidx184, align 4, !dbg !12885
  %197 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12887
  %198 = load i32, i32* %k, align 4, !dbg !12888
  %idxprom185 = sext i32 %198 to i64, !dbg !12887
  %arrayidx186 = getelementptr inbounds [2 x float], [2 x float]* %197, i64 %idxprom185, !dbg !12887
  %arrayidx187 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx186, i64 0, i64 1, !dbg !12887
  store float %196, float* %arrayidx187, align 4, !dbg !12889
  %199 = load float, float* %tf, align 4, !dbg !12890
  %200 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12891
  %201 = load i32, i32* %bestIndex, align 4, !dbg !12892
  %idxprom188 = sext i32 %201 to i64, !dbg !12891
  %arrayidx189 = getelementptr inbounds [2 x float], [2 x float]* %200, i64 %idxprom188, !dbg !12891
  %arrayidx190 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx189, i64 0, i64 1, !dbg !12891
  store float %199, float* %arrayidx190, align 4, !dbg !12893
  %202 = load float*, float** %dists, align 8, !dbg !12894
  %203 = load i32, i32* %k, align 4, !dbg !12895
  %idxprom191 = sext i32 %203 to i64, !dbg !12894
  %arrayidx192 = getelementptr inbounds float, float* %202, i64 %idxprom191, !dbg !12894
  %204 = load float, float* %arrayidx192, align 4, !dbg !12894
  store float %204, float* %tf, align 4, !dbg !12896
  %205 = load float*, float** %dists, align 8, !dbg !12897
  %206 = load i32, i32* %bestIndex, align 4, !dbg !12898
  %idxprom193 = sext i32 %206 to i64, !dbg !12897
  %arrayidx194 = getelementptr inbounds float, float* %205, i64 %idxprom193, !dbg !12897
  %207 = load float, float* %arrayidx194, align 4, !dbg !12897
  %208 = load float*, float** %dists, align 8, !dbg !12899
  %209 = load i32, i32* %k, align 4, !dbg !12900
  %idxprom195 = sext i32 %209 to i64, !dbg !12899
  %arrayidx196 = getelementptr inbounds float, float* %208, i64 %idxprom195, !dbg !12899
  store float %207, float* %arrayidx196, align 4, !dbg !12901
  %210 = load float, float* %tf, align 4, !dbg !12902
  %211 = load float*, float** %dists, align 8, !dbg !12903
  %212 = load i32, i32* %bestIndex, align 4, !dbg !12904
  %idxprom197 = sext i32 %212 to i64, !dbg !12903
  %arrayidx198 = getelementptr inbounds float, float* %211, i64 %idxprom197, !dbg !12903
  store float %210, float* %arrayidx198, align 4, !dbg !12905
  br label %if.end199, !dbg !12906

if.end199:                                        ; preds = %if.then150, %for.end147
  br label %for.inc200, !dbg !12907

for.inc200:                                       ; preds = %if.end199
  %213 = load i32, i32* %k, align 4, !dbg !12908
  %inc201 = add nsw i32 %213, 1, !dbg !12908
  store i32 %inc201, i32* %k, align 4, !dbg !12908
  br label %for.cond128, !dbg !12909, !llvm.loop !12910

for.end202:                                       ; preds = %for.cond128
  store i32 -1, i32* %bestIndex, align 4, !dbg !12912
  store i32 0, i32* %i, align 4, !dbg !12913
  br label %for.cond203, !dbg !12915

for.cond203:                                      ; preds = %for.inc218, %for.end202
  %214 = load i32, i32* %i, align 4, !dbg !12916
  %215 = load i32, i32* %totweight, align 4, !dbg !12918
  %cmp204 = icmp slt i32 %214, %215, !dbg !12919
  br i1 %cmp204, label %for.body206, label %for.end220, !dbg !12920

for.body206:                                      ; preds = %for.cond203
  %216 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12921
  %217 = load i32, i32* %i, align 4, !dbg !12924
  %idxprom207 = sext i32 %217 to i64, !dbg !12921
  %arrayidx208 = getelementptr inbounds [2 x float], [2 x float]* %216, i64 %idxprom207, !dbg !12921
  %arrayidx209 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx208, i64 0, i64 0, !dbg !12921
  %218 = load float, float* %arrayidx209, align 4, !dbg !12921
  %219 = call float @llvm.fabs.f32(float %218), !dbg !12925
  %220 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !12926
  %221 = load i32, i32* %i, align 4, !dbg !12927
  %idxprom210 = sext i32 %221 to i64, !dbg !12926
  %arrayidx211 = getelementptr inbounds [2 x float], [2 x float]* %220, i64 %idxprom210, !dbg !12926
  %arrayidx212 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx211, i64 0, i64 1, !dbg !12926
  %222 = load float, float* %arrayidx212, align 4, !dbg !12926
  %mul213 = fmul float %222, 2.000000e+00, !dbg !12928
  %223 = call float @llvm.fabs.f32(float %mul213), !dbg !12929
  %cmp214 = fcmp ogt float %219, %223, !dbg !12930
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !12931

if.then216:                                       ; preds = %for.body206
  %224 = load i32, i32* %i, align 4, !dbg !12932
  store i32 %224, i32* %bestIndex, align 4, !dbg !12934
  br label %for.end220, !dbg !12935

if.end217:                                        ; preds = %for.body206
  br label %for.inc218, !dbg !12936

for.inc218:                                       ; preds = %if.end217
  %225 = load i32, i32* %i, align 4, !dbg !12937
  %inc219 = add nsw i32 %225, 1, !dbg !12937
  store i32 %inc219, i32* %i, align 4, !dbg !12937
  br label %for.cond203, !dbg !12938, !llvm.loop !12939

for.end220:                                       ; preds = %if.then216, %for.cond203
  %226 = load i32, i32* %bestIndex, align 4, !dbg !12941
  %cmp221 = icmp ne i32 %226, -1, !dbg !12943
  br i1 %cmp221, label %if.then223, label %if.end270, !dbg !12944

if.then223:                                       ; preds = %for.end220
  store i8 1, i8* %wasChange, align 1, !dbg !12945
  %227 = load i32, i32* %lastIndex, align 4, !dbg !12947
  %cmp224 = icmp ne i32 %227, -1, !dbg !12949
  br i1 %cmp224, label %if.then226, label %if.end234, !dbg !12950

if.then226:                                       ; preds = %if.then223
  %228 = load i8, i8* %wasUp, align 1, !dbg !12951
  %conv227 = zext i8 %228 to i32, !dbg !12951
  %229 = load i32*, i32** %upDown, align 8, !dbg !12954
  %230 = load i32, i32* %bestIndex, align 4, !dbg !12955
  %idxprom228 = sext i32 %230 to i64, !dbg !12954
  %arrayidx229 = getelementptr inbounds i32, i32* %229, i64 %idxprom228, !dbg !12954
  %231 = load i32, i32* %arrayidx229, align 4, !dbg !12954
  %cmp230 = icmp ne i32 %conv227, %231, !dbg !12956
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !12957

if.then232:                                       ; preds = %if.then226
  store i8 0, i8* %wasChange, align 1, !dbg !12958
  br label %if.end233, !dbg !12960

if.end233:                                        ; preds = %if.then232, %if.then226
  br label %if.end234, !dbg !12961

if.end234:                                        ; preds = %if.end233, %if.then223
  %232 = load i32, i32* %bestIndex, align 4, !dbg !12962
  store i32 %232, i32* %lastIndex, align 4, !dbg !12963
  %233 = load i32*, i32** %upDown, align 8, !dbg !12964
  %234 = load i32, i32* %bestIndex, align 4, !dbg !12965
  %idxprom235 = sext i32 %234 to i64, !dbg !12964
  %arrayidx236 = getelementptr inbounds i32, i32* %233, i64 %idxprom235, !dbg !12964
  %235 = load i32, i32* %arrayidx236, align 4, !dbg !12964
  %conv237 = trunc i32 %235 to i8, !dbg !12964
  store i8 %conv237, i8* %wasUp, align 1, !dbg !12966
  %236 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !12967
  %dw238 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %236, i32 0, i32 0, !dbg !12968
  %237 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw238, align 8, !dbg !12968
  %238 = load i32*, i32** %dwIndices, align 8, !dbg !12969
  %239 = load i32, i32* %bestIndex, align 4, !dbg !12970
  %idxprom239 = sext i32 %239 to i64, !dbg !12969
  %arrayidx240 = getelementptr inbounds i32, i32* %238, i64 %idxprom239, !dbg !12969
  %240 = load i32, i32* %arrayidx240, align 4, !dbg !12969
  %idx.ext241 = sext i32 %240 to i64, !dbg !12971
  %add.ptr242 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %237, i64 %idx.ext241, !dbg !12971
  store %struct.MDeformWeight* %add.ptr242, %struct.MDeformWeight** %dw, align 8, !dbg !12972
  %241 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12973
  %weight243 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %241, i32 0, i32 1, !dbg !12974
  %242 = load float, float* %weight243, align 4, !dbg !12974
  store float %242, float* %oldw, align 4, !dbg !12975
  %243 = load i32*, i32** %upDown, align 8, !dbg !12976
  %244 = load i32, i32* %bestIndex, align 4, !dbg !12978
  %idxprom244 = sext i32 %244 to i64, !dbg !12976
  %arrayidx245 = getelementptr inbounds i32, i32* %243, i64 %idxprom244, !dbg !12976
  %245 = load i32, i32* %arrayidx245, align 4, !dbg !12976
  %tobool246 = icmp ne i32 %245, 0, !dbg !12976
  br i1 %tobool246, label %if.then247, label %if.else251, !dbg !12979

if.then247:                                       ; preds = %if.end234
  %246 = load float, float* %cp.addr, align 4, !dbg !12980
  %add248 = fadd float 1.000000e+00, %246, !dbg !12982
  %247 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12983
  %weight249 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %247, i32 0, i32 1, !dbg !12984
  %248 = load float, float* %weight249, align 4, !dbg !12985
  %mul250 = fmul float %248, %add248, !dbg !12985
  store float %mul250, float* %weight249, align 4, !dbg !12985
  br label %if.end255, !dbg !12986

if.else251:                                       ; preds = %if.end234
  %249 = load float, float* %cp.addr, align 4, !dbg !12987
  %add252 = fadd float 1.000000e+00, %249, !dbg !12989
  %250 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12990
  %weight253 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %250, i32 0, i32 1, !dbg !12991
  %251 = load float, float* %weight253, align 4, !dbg !12992
  %div254 = fdiv float %251, %add252, !dbg !12992
  store float %div254, float* %weight253, align 4, !dbg !12992
  br label %if.end255

if.end255:                                        ; preds = %if.else251, %if.then247
  %252 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12993
  %weight256 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %252, i32 0, i32 1, !dbg !12995
  %253 = load float, float* %weight256, align 4, !dbg !12995
  %cmp257 = fcmp ogt float %253, 1.000000e+00, !dbg !12996
  br i1 %cmp257, label %if.then259, label %if.end261, !dbg !12997

if.then259:                                       ; preds = %if.end255
  %254 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !12998
  %weight260 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %254, i32 0, i32 1, !dbg !13000
  store float 1.000000e+00, float* %weight260, align 4, !dbg !13001
  br label %if.end261, !dbg !13002

if.end261:                                        ; preds = %if.then259, %if.end255
  %255 = load float, float* %oldw, align 4, !dbg !13003
  %256 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13005
  %weight262 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %256, i32 0, i32 1, !dbg !13006
  %257 = load float, float* %weight262, align 4, !dbg !13006
  %cmp263 = fcmp oeq float %255, %257, !dbg !13007
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !13008

if.then265:                                       ; preds = %if.end261
  store i8 0, i8* %wasChange, align 1, !dbg !13009
  br label %if.end266, !dbg !13011

if.end266:                                        ; preds = %if.then265, %if.end261
  %258 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13012
  %tobool267 = icmp ne %struct.DerivedMesh* %258, null, !dbg !13012
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !13014

if.then268:                                       ; preds = %if.end266
  %259 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13015
  %260 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13017
  call void @dm_deform_clear(%struct.DerivedMesh* %259, %struct.Object* %260), !dbg !13018
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !13019
  br label %if.end269, !dbg !13020

if.end269:                                        ; preds = %if.then268, %if.end266
  br label %if.end270, !dbg !13021

if.end270:                                        ; preds = %if.end269, %for.end220
  br label %do.cond, !dbg !13022

do.cond:                                          ; preds = %if.end270
  %261 = load i8, i8* %wasChange, align 1, !dbg !13023
  %conv271 = zext i8 %261 to i32, !dbg !13023
  %tobool272 = icmp ne i32 %conv271, 0, !dbg !13023
  br i1 %tobool272, label %land.rhs, label %land.end, !dbg !13024

land.rhs:                                         ; preds = %do.cond
  %262 = load float, float* %distToStart, align 4, !dbg !13025
  %263 = load float, float* %distToBe.addr, align 4, !dbg !13026
  %sub273 = fsub float %262, %263, !dbg !13027
  %264 = load float, float* %distToStart, align 4, !dbg !13028
  %265 = load float, float* %distToBe.addr, align 4, !dbg !13029
  %sub274 = fsub float %264, %265, !dbg !13030
  %266 = call float @llvm.fabs.f32(float %sub274), !dbg !13031
  %div275 = fdiv float %sub273, %266, !dbg !13032
  %267 = load float*, float** %dists, align 8, !dbg !13033
  %268 = load i32, i32* %bestIndex, align 4, !dbg !13034
  %idxprom276 = sext i32 %268 to i64, !dbg !13033
  %arrayidx277 = getelementptr inbounds float, float* %267, i64 %idxprom276, !dbg !13033
  %269 = load float, float* %arrayidx277, align 4, !dbg !13033
  %270 = load float, float* %distToBe.addr, align 4, !dbg !13035
  %sub278 = fsub float %269, %270, !dbg !13036
  %271 = load float*, float** %dists, align 8, !dbg !13037
  %272 = load i32, i32* %bestIndex, align 4, !dbg !13038
  %idxprom279 = sext i32 %272 to i64, !dbg !13037
  %arrayidx280 = getelementptr inbounds float, float* %271, i64 %idxprom279, !dbg !13037
  %273 = load float, float* %arrayidx280, align 4, !dbg !13037
  %274 = load float, float* %distToBe.addr, align 4, !dbg !13039
  %sub281 = fsub float %273, %274, !dbg !13040
  %275 = call float @llvm.fabs.f32(float %sub281), !dbg !13041
  %div282 = fdiv float %sub278, %275, !dbg !13042
  %cmp283 = fcmp oeq float %div275, %div282, !dbg !13043
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %276 = phi i1 [ false, %do.cond ], [ %cmp283, %land.rhs ], !dbg !13044
  br i1 %276, label %do.body, label %do.end, !dbg !13022, !llvm.loop !13045

do.end:                                           ; preds = %land.end
  %277 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13047
  %278 = load i32*, i32** %upDown, align 8, !dbg !13048
  %279 = bitcast i32* %278 to i8*, !dbg !13048
  call void %277(i8* %279), !dbg !13047
  %280 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13049
  %281 = load [2 x float]*, [2 x float]** %changes, align 8, !dbg !13050
  %282 = bitcast [2 x float]* %281 to i8*, !dbg !13050
  call void %280(i8* %282), !dbg !13049
  %283 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13051
  %284 = load float*, float** %dists, align 8, !dbg !13052
  %285 = bitcast float* %284 to i8*, !dbg !13052
  call void %283(i8* %285), !dbg !13051
  %286 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13053
  %287 = load i32*, i32** %dwIndices, align 8, !dbg !13054
  %288 = bitcast i32* %287 to i8*, !dbg !13054
  call void %286(i8* %288), !dbg !13053
  ret void, !dbg !13055
}

declare dso_local void @_bli_array_grow_func(i8**, i8*, i32, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !13056 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13059, metadata !DIExpression()), !dbg !13060
  %0 = load float*, float** %r.addr, align 8, !dbg !13061
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13061
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !13062
  %1 = load float*, float** %r.addr, align 8, !dbg !13063
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !13063
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !13064
  %2 = load float*, float** %r.addr, align 8, !dbg !13065
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !13065
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !13066
  ret void, !dbg !13067
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !13068 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13071, metadata !DIExpression()), !dbg !13072
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13073, metadata !DIExpression()), !dbg !13074
  %0 = load float*, float** %a.addr, align 8, !dbg !13075
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13075
  %1 = load float, float* %arrayidx, align 4, !dbg !13075
  %2 = load float*, float** %r.addr, align 8, !dbg !13076
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13076
  %3 = load float, float* %arrayidx1, align 4, !dbg !13077
  %add = fadd float %3, %1, !dbg !13077
  store float %add, float* %arrayidx1, align 4, !dbg !13077
  %4 = load float*, float** %a.addr, align 8, !dbg !13078
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !13078
  %5 = load float, float* %arrayidx2, align 4, !dbg !13078
  %6 = load float*, float** %r.addr, align 8, !dbg !13079
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !13079
  %7 = load float, float* %arrayidx3, align 4, !dbg !13080
  %add4 = fadd float %7, %5, !dbg !13080
  store float %add4, float* %arrayidx3, align 4, !dbg !13080
  %8 = load float*, float** %a.addr, align 8, !dbg !13081
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !13081
  %9 = load float, float* %arrayidx5, align 4, !dbg !13081
  %10 = load float*, float** %r.addr, align 8, !dbg !13082
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !13082
  %11 = load float, float* %arrayidx6, align 4, !dbg !13083
  %add7 = fadd float %11, %9, !dbg !13083
  store float %add7, float* %arrayidx6, align 4, !dbg !13083
  ret void, !dbg !13084
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !13085 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13088, metadata !DIExpression()), !dbg !13089
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !13090, metadata !DIExpression()), !dbg !13091
  %0 = load float, float* %f.addr, align 4, !dbg !13092
  %1 = load float*, float** %r.addr, align 8, !dbg !13093
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !13093
  %2 = load float, float* %arrayidx, align 4, !dbg !13094
  %mul = fmul float %2, %0, !dbg !13094
  store float %mul, float* %arrayidx, align 4, !dbg !13094
  %3 = load float, float* %f.addr, align 4, !dbg !13095
  %4 = load float*, float** %r.addr, align 8, !dbg !13096
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !13096
  %5 = load float, float* %arrayidx1, align 4, !dbg !13097
  %mul2 = fmul float %5, %3, !dbg !13097
  store float %mul2, float* %arrayidx1, align 4, !dbg !13097
  %6 = load float, float* %f.addr, align 4, !dbg !13098
  %7 = load float*, float** %r.addr, align 8, !dbg !13099
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !13099
  %8 = load float, float* %arrayidx3, align 4, !dbg !13100
  %mul4 = fmul float %8, %6, !dbg !13100
  store float %mul4, float* %arrayidx3, align 4, !dbg !13100
  ret void, !dbg !13101
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !13102 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13105, metadata !DIExpression()), !dbg !13106
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13107, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.declare(metadata float* %d, metadata !13109, metadata !DIExpression()), !dbg !13110
  %0 = load float*, float** %a.addr, align 8, !dbg !13111
  %1 = load float*, float** %a.addr, align 8, !dbg !13112
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !13113
  store float %call, float* %d, align 4, !dbg !13110
  %2 = load float, float* %d, align 4, !dbg !13114
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !13116
  br i1 %cmp, label %if.then, label %if.else, !dbg !13117

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !13118
  %call1 = call float @sqrtf(float %3) #7, !dbg !13120
  store float %call1, float* %d, align 4, !dbg !13121
  %4 = load float*, float** %r.addr, align 8, !dbg !13122
  %5 = load float*, float** %a.addr, align 8, !dbg !13123
  %6 = load float, float* %d, align 4, !dbg !13124
  %div = fdiv float 1.000000e+00, %6, !dbg !13125
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !13126
  br label %if.end, !dbg !13127

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !13128
  call void @zero_v3(float* %7), !dbg !13130
  store float 0.000000e+00, float* %d, align 4, !dbg !13131
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !13132
  ret float %8, !dbg !13133
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !13134 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13137, metadata !DIExpression()), !dbg !13138
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13139, metadata !DIExpression()), !dbg !13140
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !13141, metadata !DIExpression()), !dbg !13142
  %0 = load float*, float** %a.addr, align 8, !dbg !13143
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13143
  %1 = load float, float* %arrayidx, align 4, !dbg !13143
  %2 = load float, float* %f.addr, align 4, !dbg !13144
  %mul = fmul float %1, %2, !dbg !13145
  %3 = load float*, float** %r.addr, align 8, !dbg !13146
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !13146
  store float %mul, float* %arrayidx1, align 4, !dbg !13147
  %4 = load float*, float** %a.addr, align 8, !dbg !13148
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !13148
  %5 = load float, float* %arrayidx2, align 4, !dbg !13148
  %6 = load float, float* %f.addr, align 4, !dbg !13149
  %mul3 = fmul float %5, %6, !dbg !13150
  %7 = load float*, float** %r.addr, align 8, !dbg !13151
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !13151
  store float %mul3, float* %arrayidx4, align 4, !dbg !13152
  %8 = load float*, float** %a.addr, align 8, !dbg !13153
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !13153
  %9 = load float, float* %arrayidx5, align 4, !dbg !13153
  %10 = load float, float* %f.addr, align 4, !dbg !13154
  %mul6 = fmul float %9, %10, !dbg !13155
  %11 = load float*, float** %r.addr, align 8, !dbg !13156
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !13156
  store float %mul6, float* %arrayidx7, align 4, !dbg !13157
  ret void, !dbg !13158
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @dm_deform_recalc(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !13159 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13162, metadata !DIExpression()), !dbg !13163
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13164, metadata !DIExpression()), !dbg !13165
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13166
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13167
  %2 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !13168
  %call = call %struct.DerivedMesh* @mesh_get_derived_deform(%struct.Scene* %0, %struct.Object* %1, i64 %2), !dbg !13169
  ret %struct.DerivedMesh* %call, !dbg !13170
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !13171 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13172, metadata !DIExpression()), !dbg !13173
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13174, metadata !DIExpression()), !dbg !13175
  %0 = load float*, float** %a.addr, align 8, !dbg !13176
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13176
  %1 = load float, float* %arrayidx, align 4, !dbg !13176
  %2 = load float*, float** %r.addr, align 8, !dbg !13177
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13177
  store float %1, float* %arrayidx1, align 4, !dbg !13178
  %3 = load float*, float** %a.addr, align 8, !dbg !13179
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !13179
  %4 = load float, float* %arrayidx2, align 4, !dbg !13179
  %5 = load float*, float** %r.addr, align 8, !dbg !13180
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !13180
  store float %4, float* %arrayidx3, align 4, !dbg !13181
  %6 = load float*, float** %a.addr, align 8, !dbg !13182
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !13182
  %7 = load float, float* %arrayidx4, align 4, !dbg !13182
  %8 = load float*, float** %r.addr, align 8, !dbg !13183
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !13183
  store float %7, float* %arrayidx5, align 4, !dbg !13184
  ret void, !dbg !13185
}

; Function Attrs: noinline nounwind uwtable
define internal void @dm_deform_clear(%struct.DerivedMesh* %dm, %struct.Object* %ob) #0 !dbg !13186 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !13189, metadata !DIExpression()), !dbg !13190
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13191, metadata !DIExpression()), !dbg !13192
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13193
  %derivedDeform = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 119, !dbg !13195
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform, align 8, !dbg !13195
  %tobool = icmp ne %struct.DerivedMesh* %1, null, !dbg !13193
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !13196

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13197
  %derivedDeform1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 119, !dbg !13198
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform1, align 8, !dbg !13198
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13199
  %cmp = icmp eq %struct.DerivedMesh* %3, %4, !dbg !13200
  br i1 %cmp, label %if.then, label %if.else, !dbg !13201

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13202
  %derivedDeform2 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 119, !dbg !13204
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform2, align 8, !dbg !13204
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 10, !dbg !13205
  store i32 1, i32* %needsFree, align 4, !dbg !13206
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13207
  %derivedDeform3 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 119, !dbg !13208
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform3, align 8, !dbg !13208
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 95, !dbg !13209
  %9 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !13209
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13210
  %derivedDeform4 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 119, !dbg !13211
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform4, align 8, !dbg !13211
  call void %9(%struct.DerivedMesh* %11), !dbg !13207
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13212
  %derivedDeform5 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 119, !dbg !13213
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %derivedDeform5, align 8, !dbg !13214
  br label %if.end10, !dbg !13215

if.else:                                          ; preds = %land.lhs.true, %entry
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13216
  %tobool6 = icmp ne %struct.DerivedMesh* %13, null, !dbg !13216
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !13218

if.then7:                                         ; preds = %if.else
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13219
  %needsFree8 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 10, !dbg !13221
  store i32 1, i32* %needsFree8, align 4, !dbg !13222
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13223
  %release9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 95, !dbg !13224
  %16 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release9, align 8, !dbg !13224
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13225
  call void %16(%struct.DerivedMesh* %17), !dbg !13223
  br label %if.end, !dbg !13226

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  ret void, !dbg !13227
}

; Function Attrs: noinline nounwind uwtable
define internal void @getVerticalAndHorizontalChange(float* %norm, float %d, float* %coord, float* %start, float %distToStart, float* %end, [2 x float]* %changes, float* %dists, i32 %index) #0 !dbg !13228 {
entry:
  %norm.addr = alloca float*, align 8
  %d.addr = alloca float, align 4
  %coord.addr = alloca float*, align 8
  %start.addr = alloca float*, align 8
  %distToStart.addr = alloca float, align 4
  %end.addr = alloca float*, align 8
  %changes.addr = alloca [2 x float]*, align 8
  %dists.addr = alloca float*, align 8
  %index.addr = alloca i32, align 4
  %projA = alloca [3 x float], align 4
  %projB = alloca [3 x float], align 4
  %plane = alloca [4 x float], align 16
  store float* %norm, float** %norm.addr, align 8
  call void @llvm.dbg.declare(metadata float** %norm.addr, metadata !13231, metadata !DIExpression()), !dbg !13232
  store float %d, float* %d.addr, align 4
  call void @llvm.dbg.declare(metadata float* %d.addr, metadata !13233, metadata !DIExpression()), !dbg !13234
  store float* %coord, float** %coord.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coord.addr, metadata !13235, metadata !DIExpression()), !dbg !13236
  store float* %start, float** %start.addr, align 8
  call void @llvm.dbg.declare(metadata float** %start.addr, metadata !13237, metadata !DIExpression()), !dbg !13238
  store float %distToStart, float* %distToStart.addr, align 4
  call void @llvm.dbg.declare(metadata float* %distToStart.addr, metadata !13239, metadata !DIExpression()), !dbg !13240
  store float* %end, float** %end.addr, align 8
  call void @llvm.dbg.declare(metadata float** %end.addr, metadata !13241, metadata !DIExpression()), !dbg !13242
  store [2 x float]* %changes, [2 x float]** %changes.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %changes.addr, metadata !13243, metadata !DIExpression()), !dbg !13244
  store float* %dists, float** %dists.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dists.addr, metadata !13245, metadata !DIExpression()), !dbg !13246
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13247, metadata !DIExpression()), !dbg !13248
  call void @llvm.dbg.declare(metadata [3 x float]* %projA, metadata !13249, metadata !DIExpression()), !dbg !13250
  call void @llvm.dbg.declare(metadata [3 x float]* %projB, metadata !13251, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.declare(metadata [4 x float]* %plane, metadata !13253, metadata !DIExpression()), !dbg !13254
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %plane, i64 0, i64 0, !dbg !13255
  %0 = load float*, float** %coord.addr, align 8, !dbg !13256
  %1 = load float*, float** %norm.addr, align 8, !dbg !13257
  call void @plane_from_point_normal_v3(float* %arraydecay, float* %0, float* %1), !dbg !13258
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %projA, i64 0, i64 0, !dbg !13259
  %arraydecay2 = getelementptr inbounds [4 x float], [4 x float]* %plane, i64 0, i64 0, !dbg !13260
  %2 = load float*, float** %start.addr, align 8, !dbg !13261
  call void @closest_to_plane_v3(float* %arraydecay1, float* %arraydecay2, float* %2), !dbg !13262
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %projB, i64 0, i64 0, !dbg !13263
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %plane, i64 0, i64 0, !dbg !13264
  %3 = load float*, float** %end.addr, align 8, !dbg !13265
  call void @closest_to_plane_v3(float* %arraydecay3, float* %arraydecay4, float* %3), !dbg !13266
  %4 = load float*, float** %norm.addr, align 8, !dbg !13267
  %5 = load float*, float** %end.addr, align 8, !dbg !13268
  %call = call float @dot_v3v3(float* %4, float* %5), !dbg !13269
  %6 = load float, float* %d.addr, align 4, !dbg !13270
  %add = fadd float %call, %6, !dbg !13271
  %7 = load float*, float** %dists.addr, align 8, !dbg !13272
  %8 = load i32, i32* %index.addr, align 4, !dbg !13273
  %idxprom = sext i32 %8 to i64, !dbg !13272
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !13272
  store float %add, float* %arrayidx, align 4, !dbg !13274
  %9 = load float*, float** %dists.addr, align 8, !dbg !13275
  %10 = load i32, i32* %index.addr, align 4, !dbg !13276
  %idxprom5 = sext i32 %10 to i64, !dbg !13275
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 %idxprom5, !dbg !13275
  %11 = load float, float* %arrayidx6, align 4, !dbg !13275
  %12 = load float, float* %distToStart.addr, align 4, !dbg !13277
  %sub = fsub float %11, %12, !dbg !13278
  %13 = load [2 x float]*, [2 x float]** %changes.addr, align 8, !dbg !13279
  %14 = load i32, i32* %index.addr, align 4, !dbg !13280
  %idxprom7 = sext i32 %14 to i64, !dbg !13279
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %13, i64 %idxprom7, !dbg !13279
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx8, i64 0, i64 0, !dbg !13279
  store float %sub, float* %arrayidx9, align 4, !dbg !13281
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %projA, i64 0, i64 0, !dbg !13282
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %projB, i64 0, i64 0, !dbg !13283
  %call12 = call float @len_v3v3(float* %arraydecay10, float* %arraydecay11), !dbg !13284
  %15 = load [2 x float]*, [2 x float]** %changes.addr, align 8, !dbg !13285
  %16 = load i32, i32* %index.addr, align 4, !dbg !13286
  %idxprom13 = sext i32 %16 to i64, !dbg !13285
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %15, i64 %idxprom13, !dbg !13285
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx14, i64 0, i64 1, !dbg !13285
  store float %call12, float* %arrayidx15, align 4, !dbg !13287
  ret void, !dbg !13288
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local void @plane_from_point_normal_v3(float*, float*, float*) #2

declare dso_local void @closest_to_plane_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !13289 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13290, metadata !DIExpression()), !dbg !13291
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !13292, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !13294, metadata !DIExpression()), !dbg !13295
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !13296
  %0 = load float*, float** %b.addr, align 8, !dbg !13297
  %1 = load float*, float** %a.addr, align 8, !dbg !13298
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !13299
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !13300
  %call = call float @len_v3(float* %arraydecay1), !dbg !13301
  ret float %call, !dbg !13302
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !13303 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13306, metadata !DIExpression()), !dbg !13307
  %0 = load float*, float** %a.addr, align 8, !dbg !13308
  %1 = load float*, float** %a.addr, align 8, !dbg !13309
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !13310
  %call1 = call float @sqrtf(float %call) #7, !dbg !13311
  ret float %call1, !dbg !13312
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_lock_all(%struct.Object* %ob, i32 %action) #0 !dbg !13313 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %action.addr = alloca i32, align 4
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13314, metadata !DIExpression()), !dbg !13315
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !13316, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !13318, metadata !DIExpression()), !dbg !13319
  %0 = load i32, i32* %action.addr, align 4, !dbg !13320
  %cmp = icmp eq i32 %0, 0, !dbg !13322
  br i1 %cmp, label %if.then, label %if.end3, !dbg !13323

if.then:                                          ; preds = %entry
  store i32 1, i32* %action.addr, align 4, !dbg !13324
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13326
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 25, !dbg !13328
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase, i32 0, i32 0, !dbg !13329
  %2 = load i8*, i8** %first, align 8, !dbg !13329
  %3 = bitcast i8* %2 to %struct.bDeformGroup*, !dbg !13326
  store %struct.bDeformGroup* %3, %struct.bDeformGroup** %dg, align 8, !dbg !13330
  br label %for.cond, !dbg !13331

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !13332
  %tobool = icmp ne %struct.bDeformGroup* %4, null, !dbg !13334
  br i1 %tobool, label %for.body, label %for.end, !dbg !13334

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !13335
  %flag = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %5, i32 0, i32 3, !dbg !13338
  %6 = load i8, i8* %flag, align 8, !dbg !13338
  %conv = zext i8 %6 to i32, !dbg !13335
  %and = and i32 %conv, 1, !dbg !13339
  %tobool1 = icmp ne i32 %and, 0, !dbg !13339
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !13340

if.then2:                                         ; preds = %for.body
  store i32 2, i32* %action.addr, align 4, !dbg !13341
  br label %for.end, !dbg !13343

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !13344

for.inc:                                          ; preds = %if.end
  %7 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !13345
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %7, i32 0, i32 0, !dbg !13346
  %8 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !13346
  store %struct.bDeformGroup* %8, %struct.bDeformGroup** %dg, align 8, !dbg !13347
  br label %for.cond, !dbg !13348, !llvm.loop !13349

for.end:                                          ; preds = %if.then2, %for.cond
  br label %if.end3, !dbg !13351

if.end3:                                          ; preds = %for.end, %entry
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13352
  %defbase4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 25, !dbg !13354
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase4, i32 0, i32 0, !dbg !13355
  %10 = load i8*, i8** %first5, align 8, !dbg !13355
  %11 = bitcast i8* %10 to %struct.bDeformGroup*, !dbg !13352
  store %struct.bDeformGroup* %11, %struct.bDeformGroup** %dg, align 8, !dbg !13356
  br label %for.cond6, !dbg !13357

for.cond6:                                        ; preds = %for.inc21, %if.end3
  %12 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !13358
  %tobool7 = icmp ne %struct.bDeformGroup* %12, null, !dbg !13360
  br i1 %tobool7, label %for.body8, label %for.end23, !dbg !13360

for.body8:                                        ; preds = %for.cond6
  %13 = load i32, i32* %action.addr, align 4, !dbg !13361
  switch i32 %13, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb12
    i32 3, label %sw.bb17
  ], !dbg !13363

sw.bb:                                            ; preds = %for.body8
  %14 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !13364
  %flag9 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %14, i32 0, i32 3, !dbg !13366
  %15 = load i8, i8* %flag9, align 8, !dbg !13367
  %conv10 = zext i8 %15 to i32, !dbg !13367
  %or = or i32 %conv10, 1, !dbg !13367
  %conv11 = trunc i32 %or to i8, !dbg !13367
  store i8 %conv11, i8* %flag9, align 8, !dbg !13367
  br label %sw.epilog, !dbg !13368

sw.bb12:                                          ; preds = %for.body8
  %16 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !13369
  %flag13 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %16, i32 0, i32 3, !dbg !13370
  %17 = load i8, i8* %flag13, align 8, !dbg !13371
  %conv14 = zext i8 %17 to i32, !dbg !13371
  %and15 = and i32 %conv14, -2, !dbg !13371
  %conv16 = trunc i32 %and15 to i8, !dbg !13371
  store i8 %conv16, i8* %flag13, align 8, !dbg !13371
  br label %sw.epilog, !dbg !13372

sw.bb17:                                          ; preds = %for.body8
  %18 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !13373
  %flag18 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %18, i32 0, i32 3, !dbg !13374
  %19 = load i8, i8* %flag18, align 8, !dbg !13375
  %conv19 = zext i8 %19 to i32, !dbg !13375
  %xor = xor i32 %conv19, 1, !dbg !13375
  %conv20 = trunc i32 %xor to i8, !dbg !13375
  store i8 %conv20, i8* %flag18, align 8, !dbg !13375
  br label %sw.epilog, !dbg !13376

sw.epilog:                                        ; preds = %for.body8, %sw.bb17, %sw.bb12, %sw.bb
  br label %for.inc21, !dbg !13377

for.inc21:                                        ; preds = %sw.epilog
  %20 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !13378
  %next22 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %20, i32 0, i32 0, !dbg !13379
  %21 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next22, align 8, !dbg !13379
  store %struct.bDeformGroup* %21, %struct.bDeformGroup** %dg, align 8, !dbg !13380
  br label %for.cond6, !dbg !13381, !llvm.loop !13382

for.end23:                                        ; preds = %for.cond6
  ret void, !dbg !13384
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_invert_subset(%struct.Object* %ob, i8* %vgroup_validmap, i32 %vgroup_tot, i32 %UNUSED_subset_count, i8 zeroext %auto_assign, i8 zeroext %auto_remove) #0 !dbg !13385 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %UNUSED_subset_count.addr = alloca i32, align 4
  %auto_assign.addr = alloca i8, align 1
  %auto_remove.addr = alloca i8, align 1
  %dw = alloca %struct.MDeformWeight*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %i = alloca i32, align 4
  %dvert_tot = alloca i32, align 4
  %use_vert_sel = alloca i8, align 1
  %use_mirror = alloca i8, align 1
  %j = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13388, metadata !DIExpression()), !dbg !13389
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !13390, metadata !DIExpression()), !dbg !13391
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !13392, metadata !DIExpression()), !dbg !13393
  store i32 %UNUSED_subset_count, i32* %UNUSED_subset_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_subset_count.addr, metadata !13394, metadata !DIExpression()), !dbg !13395
  store i8 %auto_assign, i8* %auto_assign.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %auto_assign.addr, metadata !13396, metadata !DIExpression()), !dbg !13397
  store i8 %auto_remove, i8* %auto_remove.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %auto_remove.addr, metadata !13398, metadata !DIExpression()), !dbg !13399
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !13400, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !13402, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !13404, metadata !DIExpression()), !dbg !13405
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13405
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13406, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !13408, metadata !DIExpression()), !dbg !13409
  store i32 0, i32* %dvert_tot, align 4, !dbg !13409
  call void @llvm.dbg.declare(metadata i8* %use_vert_sel, metadata !13410, metadata !DIExpression()), !dbg !13411
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13412
  %call = call zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %0), !dbg !13413
  store i8 %call, i8* %use_vert_sel, align 1, !dbg !13411
  call void @llvm.dbg.declare(metadata i8* %use_mirror, metadata !13414, metadata !DIExpression()), !dbg !13415
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13416
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !13417
  %2 = load i16, i16* %type, align 8, !dbg !13417
  %conv = sext i16 %2 to i32, !dbg !13416
  %cmp = icmp eq i32 %conv, 1, !dbg !13418
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13419

cond.true:                                        ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13420
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !13421
  %4 = load i8*, i8** %data, align 8, !dbg !13421
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !13422
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !13423
  %6 = load i8, i8* %editflag, align 1, !dbg !13423
  %conv2 = zext i8 %6 to i32, !dbg !13424
  %and = and i32 %conv2, 1, !dbg !13425
  %cmp3 = icmp ne i32 %and, 0, !dbg !13426
  %conv4 = zext i1 %cmp3 to i32, !dbg !13426
  br label %cond.end, !dbg !13419

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13419

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ 0, %cond.false ], !dbg !13419
  %conv5 = trunc i32 %cond to i8, !dbg !13419
  store i8 %conv5, i8* %use_mirror, align 1, !dbg !13415
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13427
  %data6 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !13428
  %8 = load i8*, i8** %data6, align 8, !dbg !13428
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !13427
  %10 = load i8, i8* %use_vert_sel, align 1, !dbg !13429
  %call7 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %9, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext %10), !dbg !13430
  %11 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13431
  %tobool = icmp ne %struct.MDeformVert** %11, null, !dbg !13431
  br i1 %tobool, label %if.then, label %if.end49, !dbg !13433

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !13434
  br label %for.cond, !dbg !13437

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !13438
  %13 = load i32, i32* %dvert_tot, align 4, !dbg !13440
  %cmp8 = icmp slt i32 %12, %13, !dbg !13441
  br i1 %cmp8, label %for.body, label %for.end, !dbg !13442

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13443, metadata !DIExpression()), !dbg !13445
  %14 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13446
  %15 = load i32, i32* %i, align 4, !dbg !13448
  %idxprom = sext i32 %15 to i64, !dbg !13446
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %14, i64 %idxprom, !dbg !13446
  %16 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !13446
  store %struct.MDeformVert* %16, %struct.MDeformVert** %dv, align 8, !dbg !13449
  %tobool10 = icmp ne %struct.MDeformVert* %16, null, !dbg !13449
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !13450

if.then11:                                        ; preds = %for.body
  br label %for.inc, !dbg !13451

if.end:                                           ; preds = %for.body
  %17 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !13453
  store i32 %17, i32* %j, align 4, !dbg !13454
  br label %while.cond, !dbg !13455

while.cond:                                       ; preds = %if.end39, %if.end
  %18 = load i32, i32* %j, align 4, !dbg !13456
  %dec = add nsw i32 %18, -1, !dbg !13456
  store i32 %dec, i32* %j, align 4, !dbg !13456
  %tobool12 = icmp ne i32 %18, 0, !dbg !13455
  br i1 %tobool12, label %while.body, label %while.end, !dbg !13455

while.body:                                       ; preds = %while.cond
  %19 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !13457
  %20 = load i32, i32* %j, align 4, !dbg !13460
  %idxprom13 = sext i32 %20 to i64, !dbg !13457
  %arrayidx14 = getelementptr inbounds i8, i8* %19, i64 %idxprom13, !dbg !13457
  %21 = load i8, i8* %arrayidx14, align 1, !dbg !13457
  %tobool15 = icmp ne i8 %21, 0, !dbg !13457
  br i1 %tobool15, label %if.then16, label %if.end39, !dbg !13461

if.then16:                                        ; preds = %while.body
  %22 = load i8, i8* %auto_assign.addr, align 1, !dbg !13462
  %tobool17 = icmp ne i8 %22, 0, !dbg !13462
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !13465

if.then18:                                        ; preds = %if.then16
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !13466
  %24 = load i32, i32* %j, align 4, !dbg !13468
  %call19 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %23, i32 %24), !dbg !13469
  store %struct.MDeformWeight* %call19, %struct.MDeformWeight** %dw, align 8, !dbg !13470
  br label %if.end21, !dbg !13471

if.else:                                          ; preds = %if.then16
  %25 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !13472
  %26 = load i32, i32* %j, align 4, !dbg !13474
  %call20 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %25, i32 %26), !dbg !13475
  store %struct.MDeformWeight* %call20, %struct.MDeformWeight** %dw, align 8, !dbg !13476
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  %27 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13477
  %tobool22 = icmp ne %struct.MDeformWeight* %27, null, !dbg !13477
  br i1 %tobool22, label %if.then23, label %if.end38, !dbg !13479

if.then23:                                        ; preds = %if.end21
  %28 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13480
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %28, i32 0, i32 1, !dbg !13482
  %29 = load float, float* %weight, align 4, !dbg !13482
  %sub = fsub float 1.000000e+00, %29, !dbg !13483
  %30 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13484
  %weight24 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %30, i32 0, i32 1, !dbg !13485
  store float %sub, float* %weight24, align 4, !dbg !13486
  %31 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13487
  %weight25 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %31, i32 0, i32 1, !dbg !13487
  %32 = load float, float* %weight25, align 4, !dbg !13487
  %cmp26 = fcmp olt float %32, 0.000000e+00, !dbg !13487
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !13490

if.then28:                                        ; preds = %if.then23
  %33 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13487
  %weight29 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %33, i32 0, i32 1, !dbg !13487
  store float 0.000000e+00, float* %weight29, align 4, !dbg !13487
  br label %if.end37, !dbg !13487

if.else30:                                        ; preds = %if.then23
  %34 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13491
  %weight31 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %34, i32 0, i32 1, !dbg !13491
  %35 = load float, float* %weight31, align 4, !dbg !13491
  %cmp32 = fcmp ogt float %35, 1.000000e+00, !dbg !13491
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !13487

if.then34:                                        ; preds = %if.else30
  %36 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13491
  %weight35 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %36, i32 0, i32 1, !dbg !13491
  store float 1.000000e+00, float* %weight35, align 4, !dbg !13491
  br label %if.end36, !dbg !13491

if.end36:                                         ; preds = %if.then34, %if.else30
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then28
  br label %if.end38, !dbg !13493

if.end38:                                         ; preds = %if.end37, %if.end21
  br label %if.end39, !dbg !13494

if.end39:                                         ; preds = %if.end38, %while.body
  br label %while.cond, !dbg !13455, !llvm.loop !13495

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !13497

for.inc:                                          ; preds = %while.end, %if.then11
  %37 = load i32, i32* %i, align 4, !dbg !13498
  %inc = add nsw i32 %37, 1, !dbg !13498
  store i32 %inc, i32* %i, align 4, !dbg !13498
  br label %for.cond, !dbg !13499, !llvm.loop !13500

for.end:                                          ; preds = %for.cond
  %38 = load i8, i8* %use_mirror, align 1, !dbg !13502
  %conv40 = zext i8 %38 to i32, !dbg !13502
  %tobool41 = icmp ne i32 %conv40, 0, !dbg !13502
  br i1 %tobool41, label %land.lhs.true, label %if.end45, !dbg !13504

land.lhs.true:                                    ; preds = %for.end
  %39 = load i8, i8* %use_vert_sel, align 1, !dbg !13505
  %conv42 = zext i8 %39 to i32, !dbg !13505
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !13505
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !13506

if.then44:                                        ; preds = %land.lhs.true
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13507
  %41 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13509
  %42 = load i32, i32* %dvert_tot, align 4, !dbg !13510
  %43 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !13511
  %44 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !13512
  call void @ED_vgroup_parray_mirror_sync(%struct.Object* %40, %struct.MDeformVert** %41, i32 %42, i8* %43, i32 %44), !dbg !13513
  br label %if.end45, !dbg !13514

if.end45:                                         ; preds = %if.then44, %land.lhs.true, %for.end
  %45 = load i8, i8* %auto_remove.addr, align 1, !dbg !13515
  %tobool46 = icmp ne i8 %45, 0, !dbg !13515
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !13517

if.then47:                                        ; preds = %if.end45
  %46 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13518
  %47 = load i32, i32* %dvert_tot, align 4, !dbg !13520
  %48 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !13521
  %49 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !13522
  call void @ED_vgroup_parray_remove_zero(%struct.MDeformVert** %46, i32 %47, i8* %48, i32 %49, float 0.000000e+00, i8 zeroext 0), !dbg !13523
  br label %if.end48, !dbg !13524

if.end48:                                         ; preds = %if.then47, %if.end45
  %50 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13525
  %51 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13526
  %52 = bitcast %struct.MDeformVert** %51 to i8*, !dbg !13526
  call void %50(i8* %52), !dbg !13525
  br label %if.end49, !dbg !13527

if.end49:                                         ; preds = %if.end48, %cond.end
  ret void, !dbg !13528
}

declare dso_local void @CTX_wm_operator_poll_msg_set(%struct.bContext*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_blend_subset(%struct.Object* %ob, i8* %vgroup_validmap, i32 %vgroup_tot, i32 %subset_count, float %fac) #0 !dbg !13529 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %subset_count.addr = alloca i32, align 4
  %fac.addr = alloca float, align 4
  %ifac = alloca float, align 4
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %i = alloca i32, align 4
  %dvert_tot = alloca i32, align 4
  %vgroup_subset_map = alloca i32*, align 8
  %vgroup_subset_weights = alloca float*, align 8
  %use_mirror = alloca i8, align 1
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  %emap = alloca %struct.MeshElemMap*, align 8
  %emap_mem = alloca i32*, align 8
  %_dv_stack_stack = alloca %struct.LinkNode*, align 8
  %_dv_stack_free = alloca %struct.LinkNode*, align 8
  %_dv_stack_temp = alloca %struct.LinkNode*, align 8
  %_dv_stack_type = alloca %struct.MDeformVert*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %dv_stack_tot = alloca i32, align 4
  %j = alloca i32, align 4
  %v = alloca %struct.BMVert*, align 8
  %eiter = alloca %struct.BMIter, align 8
  %e = alloca %struct.BMEdge*, align 8
  %v_other = alloca %struct.BMVert*, align 8
  %i_other = alloca i32, align 4
  %v55 = alloca %struct.MVert*, align 8
  %e68 = alloca %struct.MEdge*, align 8
  %i_other76 = alloca i32, align 4
  %v_other84 = alloca %struct.MVert*, align 8
  %dv_mul = alloca float, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13532, metadata !DIExpression()), !dbg !13533
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !13534, metadata !DIExpression()), !dbg !13535
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !13536, metadata !DIExpression()), !dbg !13537
  store i32 %subset_count, i32* %subset_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subset_count.addr, metadata !13538, metadata !DIExpression()), !dbg !13539
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !13540, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.declare(metadata float* %ifac, metadata !13542, metadata !DIExpression()), !dbg !13543
  %0 = load float, float* %fac.addr, align 4, !dbg !13544
  %sub = fsub float 1.000000e+00, %0, !dbg !13545
  store float %sub, float* %ifac, align 4, !dbg !13543
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !13546, metadata !DIExpression()), !dbg !13547
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13547
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13548, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !13550, metadata !DIExpression()), !dbg !13551
  store i32 0, i32* %dvert_tot, align 4, !dbg !13551
  call void @llvm.dbg.declare(metadata i32** %vgroup_subset_map, metadata !13552, metadata !DIExpression()), !dbg !13553
  %1 = load i32, i32* %subset_count.addr, align 4, !dbg !13554
  %conv = sext i32 %1 to i64, !dbg !13554
  %mul = mul i64 4, %conv, !dbg !13554
  %2 = alloca i8, i64 %mul, align 16, !dbg !13554
  %3 = bitcast i8* %2 to i32*, !dbg !13554
  store i32* %3, i32** %vgroup_subset_map, align 8, !dbg !13553
  call void @llvm.dbg.declare(metadata float** %vgroup_subset_weights, metadata !13555, metadata !DIExpression()), !dbg !13556
  %4 = load i32, i32* %subset_count.addr, align 4, !dbg !13557
  %conv1 = sext i32 %4 to i64, !dbg !13557
  %mul2 = mul i64 4, %conv1, !dbg !13557
  %5 = alloca i8, i64 %mul2, align 16, !dbg !13557
  %6 = bitcast i8* %5 to float*, !dbg !13557
  store float* %6, float** %vgroup_subset_weights, align 8, !dbg !13556
  call void @llvm.dbg.declare(metadata i8* %use_mirror, metadata !13558, metadata !DIExpression()), !dbg !13559
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13560
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !13561
  %8 = load i16, i16* %type, align 8, !dbg !13561
  %conv3 = sext i16 %8 to i32, !dbg !13560
  %cmp = icmp eq i32 %conv3, 1, !dbg !13562
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13563

cond.true:                                        ; preds = %entry
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13564
  %data = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 19, !dbg !13565
  %10 = load i8*, i8** %data, align 8, !dbg !13565
  %11 = bitcast i8* %10 to %struct.Mesh*, !dbg !13566
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 46, !dbg !13567
  %12 = load i8, i8* %editflag, align 1, !dbg !13567
  %conv5 = zext i8 %12 to i32, !dbg !13568
  %and = and i32 %conv5, 1, !dbg !13569
  %cmp6 = icmp ne i32 %and, 0, !dbg !13570
  %conv7 = zext i1 %cmp6 to i32, !dbg !13570
  br label %cond.end, !dbg !13563

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13563

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ 0, %cond.false ], !dbg !13563
  %conv8 = trunc i32 %cond to i8, !dbg !13563
  store i8 %conv8, i8* %use_mirror, align 1, !dbg !13559
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !13571, metadata !DIExpression()), !dbg !13572
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13573
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %13), !dbg !13574
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !13572
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !13575, metadata !DIExpression()), !dbg !13576
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13577
  %tobool = icmp ne %struct.BMEditMesh* %14, null, !dbg !13577
  br i1 %tobool, label %cond.true9, label %cond.false11, !dbg !13577

cond.true9:                                       ; preds = %cond.end
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13578
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !13579
  %16 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !13579
  br label %cond.end12, !dbg !13577

cond.false11:                                     ; preds = %cond.end
  br label %cond.end12, !dbg !13577

cond.end12:                                       ; preds = %cond.false11, %cond.true9
  %cond13 = phi %struct.BMesh* [ %16, %cond.true9 ], [ null, %cond.false11 ], !dbg !13577
  store %struct.BMesh* %cond13, %struct.BMesh** %bm, align 8, !dbg !13576
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !13580, metadata !DIExpression()), !dbg !13581
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13582
  %tobool14 = icmp ne %struct.BMEditMesh* %17, null, !dbg !13582
  br i1 %tobool14, label %cond.true15, label %cond.false16, !dbg !13582

cond.true15:                                      ; preds = %cond.end12
  br label %cond.end18, !dbg !13582

cond.false16:                                     ; preds = %cond.end12
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13583
  %data17 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 19, !dbg !13584
  %19 = load i8*, i8** %data17, align 8, !dbg !13584
  br label %cond.end18, !dbg !13582

cond.end18:                                       ; preds = %cond.false16, %cond.true15
  %cond19 = phi i8* [ null, %cond.true15 ], [ %19, %cond.false16 ], !dbg !13582
  %20 = bitcast i8* %cond19 to %struct.Mesh*, !dbg !13582
  store %struct.Mesh* %20, %struct.Mesh** %me, align 8, !dbg !13581
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %emap, metadata !13585, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.declare(metadata i32** %emap_mem, metadata !13589, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %_dv_stack_stack, metadata !13591, metadata !DIExpression()), !dbg !13594
  store %struct.LinkNode* null, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13594
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %_dv_stack_free, metadata !13595, metadata !DIExpression()), !dbg !13594
  store %struct.LinkNode* null, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13594
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %_dv_stack_temp, metadata !13596, metadata !DIExpression()), !dbg !13594
  store %struct.LinkNode* null, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13594
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %_dv_stack_type, metadata !13597, metadata !DIExpression()), !dbg !13594
  %21 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !13598
  %22 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !13599
  %23 = load i32*, i32** %vgroup_subset_map, align 8, !dbg !13600
  call void @ED_vgroup_subset_to_index_array(i8* %21, i32 %22, i32* %23), !dbg !13601
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13602
  %data20 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 19, !dbg !13603
  %25 = load i8*, i8** %data20, align 8, !dbg !13603
  %26 = bitcast i8* %25 to %struct.ID*, !dbg !13602
  %call21 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %26, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext 0), !dbg !13604
  %27 = load float*, float** %vgroup_subset_weights, align 8, !dbg !13605
  %28 = bitcast float* %27 to i8*, !dbg !13606
  %29 = load i32, i32* %subset_count.addr, align 4, !dbg !13607
  %conv22 = sext i32 %29 to i64, !dbg !13607
  %mul23 = mul i64 4, %conv22, !dbg !13608
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 %mul23, i1 false), !dbg !13606
  %30 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13609
  %tobool24 = icmp ne %struct.BMesh* %30, null, !dbg !13609
  br i1 %tobool24, label %if.then, label %if.else, !dbg !13611

if.then:                                          ; preds = %cond.end18
  %31 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13612
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %31, i8 zeroext 1), !dbg !13614
  store %struct.MeshElemMap* null, %struct.MeshElemMap** %emap, align 8, !dbg !13615
  store i32* null, i32** %emap_mem, align 8, !dbg !13616
  br label %if.end, !dbg !13617

if.else:                                          ; preds = %cond.end18
  %32 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13618
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 16, !dbg !13620
  %33 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !13620
  %34 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13621
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %34, i32 0, i32 26, !dbg !13622
  %35 = load i32, i32* %totvert, align 8, !dbg !13622
  %36 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13623
  %totedge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 27, !dbg !13624
  %37 = load i32, i32* %totedge, align 4, !dbg !13624
  call void @BKE_mesh_vert_edge_map_create(%struct.MeshElemMap** %emap, i32** %emap_mem, %struct.MEdge* %33, i32 %35, i32 %37), !dbg !13625
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !13626
  br label %for.cond, !dbg !13628

for.cond:                                         ; preds = %for.inc182, %if.end
  %38 = load i32, i32* %i, align 4, !dbg !13629
  %39 = load i32, i32* %dvert_tot, align 4, !dbg !13631
  %cmp25 = icmp slt i32 %38, %39, !dbg !13632
  br i1 %cmp25, label %for.body, label %for.end184, !dbg !13633

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !13634, metadata !DIExpression()), !dbg !13636
  call void @llvm.dbg.declare(metadata i32* %dv_stack_tot, metadata !13637, metadata !DIExpression()), !dbg !13638
  store i32 0, i32* %dv_stack_tot, align 4, !dbg !13638
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13639, metadata !DIExpression()), !dbg !13640
  %40 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13641
  %tobool27 = icmp ne %struct.BMesh* %40, null, !dbg !13641
  br i1 %tobool27, label %if.then28, label %if.else54, !dbg !13643

if.then28:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !13644, metadata !DIExpression()), !dbg !13646
  %41 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13647
  %42 = load i32, i32* %i, align 4, !dbg !13648
  %call29 = call %struct.BMVert* @BM_vert_at_index(%struct.BMesh* %41, i32 %42), !dbg !13649
  store %struct.BMVert* %call29, %struct.BMVert** %v, align 8, !dbg !13646
  %43 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13650
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %43, i32 0, i32 0, !dbg !13650
  %call30 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !13650
  %tobool31 = icmp ne i8 %call30, 0, !dbg !13650
  br i1 %tobool31, label %if.then32, label %if.end53, !dbg !13652

if.then32:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.BMIter* %eiter, metadata !13653, metadata !DIExpression()), !dbg !13655
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !13656, metadata !DIExpression()), !dbg !13657
  %44 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13658
  %45 = bitcast %struct.BMVert* %44 to i8*, !dbg !13658
  %call33 = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* null, i8 zeroext 4, i8* %45), !dbg !13658
  %46 = bitcast i8* %call33 to %struct.BMEdge*, !dbg !13658
  store %struct.BMEdge* %46, %struct.BMEdge** %e, align 8, !dbg !13658
  br label %for.cond34, !dbg !13658

for.cond34:                                       ; preds = %for.inc, %if.then32
  %47 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13660
  %tobool35 = icmp ne %struct.BMEdge* %47, null, !dbg !13658
  br i1 %tobool35, label %for.body36, label %for.end, !dbg !13658

for.body36:                                       ; preds = %for.cond34
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_other, metadata !13662, metadata !DIExpression()), !dbg !13664
  %48 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13665
  %49 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13666
  %call37 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %48, %struct.BMVert* %49), !dbg !13667
  store %struct.BMVert* %call37, %struct.BMVert** %v_other, align 8, !dbg !13664
  call void @llvm.dbg.declare(metadata i32* %i_other, metadata !13668, metadata !DIExpression()), !dbg !13669
  %50 = load %struct.BMVert*, %struct.BMVert** %v_other, align 8, !dbg !13670
  %head38 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %50, i32 0, i32 0, !dbg !13670
  %call39 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head38), !dbg !13670
  store i32 %call39, i32* %i_other, align 4, !dbg !13669
  %51 = load %struct.BMVert*, %struct.BMVert** %v_other, align 8, !dbg !13671
  %head40 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %51, i32 0, i32 0, !dbg !13671
  %call41 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head40, i8 zeroext 1), !dbg !13671
  %conv42 = zext i8 %call41 to i32, !dbg !13671
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !13673
  br i1 %cmp43, label %if.then45, label %if.end51, !dbg !13674

if.then45:                                        ; preds = %for.body36
  %52 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13675
  %53 = load i32, i32* %i_other, align 4, !dbg !13677
  %idxprom = sext i32 %53 to i64, !dbg !13675
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %52, i64 %idxprom, !dbg !13675
  %54 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !13675
  store %struct.MDeformVert* %54, %struct.MDeformVert** %dv, align 8, !dbg !13678
  %55 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13679
  %tobool46 = icmp ne %struct.LinkNode* %55, null, !dbg !13679
  br i1 %tobool46, label %if.then47, label %if.else48, !dbg !13682

if.then47:                                        ; preds = %if.then45
  %56 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13683
  store %struct.LinkNode* %56, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13683
  %57 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13683
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %57, i32 0, i32 0, !dbg !13683
  %58 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !13683
  store %struct.LinkNode* %58, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13683
  br label %if.end49, !dbg !13683

if.else48:                                        ; preds = %if.then45
  %59 = alloca i8, i64 16, align 16, !dbg !13685
  %60 = bitcast i8* %59 to %struct.LinkNode*, !dbg !13685
  store %struct.LinkNode* %60, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13685
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  %61 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13682
  %62 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13682
  %next50 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %62, i32 0, i32 0, !dbg !13682
  store %struct.LinkNode* %61, %struct.LinkNode** %next50, align 8, !dbg !13682
  %63 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !13682
  %64 = bitcast %struct.MDeformVert* %63 to i8*, !dbg !13682
  %65 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13682
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %65, i32 0, i32 1, !dbg !13682
  store i8* %64, i8** %link, align 8, !dbg !13682
  %66 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13682
  store %struct.LinkNode* %66, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13682
  %67 = load i32, i32* %dv_stack_tot, align 4, !dbg !13687
  %inc = add nsw i32 %67, 1, !dbg !13687
  store i32 %inc, i32* %dv_stack_tot, align 4, !dbg !13687
  br label %if.end51, !dbg !13688

if.end51:                                         ; preds = %if.end49, %for.body36
  br label %for.inc, !dbg !13689

for.inc:                                          ; preds = %if.end51
  %call52 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !13660
  %68 = bitcast i8* %call52 to %struct.BMEdge*, !dbg !13660
  store %struct.BMEdge* %68, %struct.BMEdge** %e, align 8, !dbg !13660
  br label %for.cond34, !dbg !13660, !llvm.loop !13690

for.end:                                          ; preds = %for.cond34
  br label %if.end53, !dbg !13692

if.end53:                                         ; preds = %for.end, %if.then28
  br label %if.end109, !dbg !13693

if.else54:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MVert** %v55, metadata !13694, metadata !DIExpression()), !dbg !13696
  %69 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13697
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %69, i32 0, i32 15, !dbg !13698
  %70 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !13698
  %71 = load i32, i32* %i, align 4, !dbg !13699
  %idxprom56 = sext i32 %71 to i64, !dbg !13697
  %arrayidx57 = getelementptr inbounds %struct.MVert, %struct.MVert* %70, i64 %idxprom56, !dbg !13697
  store %struct.MVert* %arrayidx57, %struct.MVert** %v55, align 8, !dbg !13696
  %72 = load %struct.MVert*, %struct.MVert** %v55, align 8, !dbg !13700
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i32 0, i32 2, !dbg !13702
  %73 = load i8, i8* %flag, align 2, !dbg !13702
  %conv58 = zext i8 %73 to i32, !dbg !13700
  %and59 = and i32 %conv58, 1, !dbg !13703
  %tobool60 = icmp ne i32 %and59, 0, !dbg !13703
  br i1 %tobool60, label %if.then61, label %if.end108, !dbg !13704

if.then61:                                        ; preds = %if.else54
  store i32 0, i32* %j, align 4, !dbg !13705
  br label %for.cond62, !dbg !13708

for.cond62:                                       ; preds = %for.inc105, %if.then61
  %74 = load i32, i32* %j, align 4, !dbg !13709
  %75 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap, align 8, !dbg !13711
  %76 = load i32, i32* %i, align 4, !dbg !13712
  %idxprom63 = sext i32 %76 to i64, !dbg !13711
  %arrayidx64 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %75, i64 %idxprom63, !dbg !13711
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx64, i32 0, i32 1, !dbg !13713
  %77 = load i32, i32* %count, align 8, !dbg !13713
  %cmp65 = icmp slt i32 %74, %77, !dbg !13714
  br i1 %cmp65, label %for.body67, label %for.end107, !dbg !13715

for.body67:                                       ; preds = %for.cond62
  call void @llvm.dbg.declare(metadata %struct.MEdge** %e68, metadata !13716, metadata !DIExpression()), !dbg !13720
  %78 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13721
  %medge69 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %78, i32 0, i32 16, !dbg !13722
  %79 = load %struct.MEdge*, %struct.MEdge** %medge69, align 8, !dbg !13722
  %80 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap, align 8, !dbg !13723
  %81 = load i32, i32* %i, align 4, !dbg !13724
  %idxprom70 = sext i32 %81 to i64, !dbg !13723
  %arrayidx71 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %80, i64 %idxprom70, !dbg !13723
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx71, i32 0, i32 0, !dbg !13725
  %82 = load i32*, i32** %indices, align 8, !dbg !13725
  %83 = load i32, i32* %j, align 4, !dbg !13726
  %idxprom72 = sext i32 %83 to i64, !dbg !13723
  %arrayidx73 = getelementptr inbounds i32, i32* %82, i64 %idxprom72, !dbg !13723
  %84 = load i32, i32* %arrayidx73, align 4, !dbg !13723
  %idxprom74 = sext i32 %84 to i64, !dbg !13721
  %arrayidx75 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %79, i64 %idxprom74, !dbg !13721
  store %struct.MEdge* %arrayidx75, %struct.MEdge** %e68, align 8, !dbg !13720
  call void @llvm.dbg.declare(metadata i32* %i_other76, metadata !13727, metadata !DIExpression()), !dbg !13728
  %85 = load %struct.MEdge*, %struct.MEdge** %e68, align 8, !dbg !13729
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %85, i32 0, i32 0, !dbg !13730
  %86 = load i32, i32* %v1, align 4, !dbg !13730
  %87 = load i32, i32* %i, align 4, !dbg !13731
  %cmp77 = icmp eq i32 %86, %87, !dbg !13732
  br i1 %cmp77, label %cond.true79, label %cond.false80, !dbg !13729

cond.true79:                                      ; preds = %for.body67
  %88 = load %struct.MEdge*, %struct.MEdge** %e68, align 8, !dbg !13733
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %88, i32 0, i32 1, !dbg !13734
  %89 = load i32, i32* %v2, align 4, !dbg !13734
  br label %cond.end82, !dbg !13729

cond.false80:                                     ; preds = %for.body67
  %90 = load %struct.MEdge*, %struct.MEdge** %e68, align 8, !dbg !13735
  %v181 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %90, i32 0, i32 0, !dbg !13736
  %91 = load i32, i32* %v181, align 4, !dbg !13736
  br label %cond.end82, !dbg !13729

cond.end82:                                       ; preds = %cond.false80, %cond.true79
  %cond83 = phi i32 [ %89, %cond.true79 ], [ %91, %cond.false80 ], !dbg !13729
  store i32 %cond83, i32* %i_other76, align 4, !dbg !13728
  call void @llvm.dbg.declare(metadata %struct.MVert** %v_other84, metadata !13737, metadata !DIExpression()), !dbg !13738
  %92 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13739
  %mvert85 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %92, i32 0, i32 15, !dbg !13740
  %93 = load %struct.MVert*, %struct.MVert** %mvert85, align 8, !dbg !13740
  %94 = load i32, i32* %i_other76, align 4, !dbg !13741
  %idxprom86 = sext i32 %94 to i64, !dbg !13739
  %arrayidx87 = getelementptr inbounds %struct.MVert, %struct.MVert* %93, i64 %idxprom86, !dbg !13739
  store %struct.MVert* %arrayidx87, %struct.MVert** %v_other84, align 8, !dbg !13738
  %95 = load %struct.MVert*, %struct.MVert** %v_other84, align 8, !dbg !13742
  %flag88 = getelementptr inbounds %struct.MVert, %struct.MVert* %95, i32 0, i32 2, !dbg !13744
  %96 = load i8, i8* %flag88, align 2, !dbg !13744
  %conv89 = zext i8 %96 to i32, !dbg !13742
  %and90 = and i32 %conv89, 1, !dbg !13745
  %cmp91 = icmp eq i32 %and90, 0, !dbg !13746
  br i1 %cmp91, label %if.then93, label %if.end104, !dbg !13747

if.then93:                                        ; preds = %cond.end82
  %97 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13748
  %98 = load i32, i32* %i_other76, align 4, !dbg !13750
  %idxprom94 = sext i32 %98 to i64, !dbg !13748
  %arrayidx95 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %97, i64 %idxprom94, !dbg !13748
  %99 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx95, align 8, !dbg !13748
  store %struct.MDeformVert* %99, %struct.MDeformVert** %dv, align 8, !dbg !13751
  %100 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13752
  %tobool96 = icmp ne %struct.LinkNode* %100, null, !dbg !13752
  br i1 %tobool96, label %if.then97, label %if.else99, !dbg !13755

if.then97:                                        ; preds = %if.then93
  %101 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13756
  store %struct.LinkNode* %101, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13756
  %102 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13756
  %next98 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %102, i32 0, i32 0, !dbg !13756
  %103 = load %struct.LinkNode*, %struct.LinkNode** %next98, align 8, !dbg !13756
  store %struct.LinkNode* %103, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13756
  br label %if.end100, !dbg !13756

if.else99:                                        ; preds = %if.then93
  %104 = alloca i8, i64 16, align 16, !dbg !13758
  %105 = bitcast i8* %104 to %struct.LinkNode*, !dbg !13758
  store %struct.LinkNode* %105, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13758
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.then97
  %106 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13755
  %107 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13755
  %next101 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %107, i32 0, i32 0, !dbg !13755
  store %struct.LinkNode* %106, %struct.LinkNode** %next101, align 8, !dbg !13755
  %108 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !13755
  %109 = bitcast %struct.MDeformVert* %108 to i8*, !dbg !13755
  %110 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13755
  %link102 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %110, i32 0, i32 1, !dbg !13755
  store i8* %109, i8** %link102, align 8, !dbg !13755
  %111 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13755
  store %struct.LinkNode* %111, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13755
  %112 = load i32, i32* %dv_stack_tot, align 4, !dbg !13760
  %inc103 = add nsw i32 %112, 1, !dbg !13760
  store i32 %inc103, i32* %dv_stack_tot, align 4, !dbg !13760
  br label %if.end104, !dbg !13761

if.end104:                                        ; preds = %if.end100, %cond.end82
  br label %for.inc105, !dbg !13762

for.inc105:                                       ; preds = %if.end104
  %113 = load i32, i32* %j, align 4, !dbg !13763
  %inc106 = add nsw i32 %113, 1, !dbg !13763
  store i32 %inc106, i32* %j, align 4, !dbg !13763
  br label %for.cond62, !dbg !13764, !llvm.loop !13765

for.end107:                                       ; preds = %for.cond62
  br label %if.end108, !dbg !13767

if.end108:                                        ; preds = %for.end107, %if.else54
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end53
  %114 = load i32, i32* %dv_stack_tot, align 4, !dbg !13768
  %tobool110 = icmp ne i32 %114, 0, !dbg !13768
  br i1 %tobool110, label %if.then111, label %if.end181, !dbg !13770

if.then111:                                       ; preds = %if.end109
  call void @llvm.dbg.declare(metadata float* %dv_mul, metadata !13771, metadata !DIExpression()), !dbg !13773
  %115 = load i32, i32* %dv_stack_tot, align 4, !dbg !13774
  %conv112 = sitofp i32 %115 to float, !dbg !13775
  %div = fdiv float 1.000000e+00, %conv112, !dbg !13776
  store float %div, float* %dv_mul, align 4, !dbg !13773
  br label %while.cond, !dbg !13777

while.cond:                                       ; preds = %for.end134, %if.then111
  %116 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13778
  %tobool113 = icmp ne %struct.LinkNode* %116, null, !dbg !13778
  br i1 %tobool113, label %cond.true114, label %cond.false118, !dbg !13778

cond.true114:                                     ; preds = %while.cond
  %117 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13778
  %next115 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %117, i32 0, i32 0, !dbg !13778
  %118 = load %struct.LinkNode*, %struct.LinkNode** %next115, align 8, !dbg !13778
  store %struct.LinkNode* %118, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13778
  %119 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13778
  %120 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13778
  %next116 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %120, i32 0, i32 0, !dbg !13778
  store %struct.LinkNode* %119, %struct.LinkNode** %next116, align 8, !dbg !13778
  %121 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13778
  store %struct.LinkNode* %121, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13778
  %122 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_temp, align 8, !dbg !13778
  store %struct.LinkNode* %122, %struct.LinkNode** %_dv_stack_stack, align 8, !dbg !13778
  %123 = load %struct.LinkNode*, %struct.LinkNode** %_dv_stack_free, align 8, !dbg !13778
  %link117 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %123, i32 0, i32 1, !dbg !13778
  %124 = load i8*, i8** %link117, align 8, !dbg !13778
  br label %cond.end119, !dbg !13778

cond.false118:                                    ; preds = %while.cond
  br label %cond.end119, !dbg !13778

cond.end119:                                      ; preds = %cond.false118, %cond.true114
  %cond120 = phi i8* [ %124, %cond.true114 ], [ null, %cond.false118 ], !dbg !13778
  %125 = bitcast i8* %cond120 to %struct.MDeformVert*, !dbg !13778
  store %struct.MDeformVert* %125, %struct.MDeformVert** %dv, align 8, !dbg !13779
  %tobool121 = icmp ne %struct.MDeformVert* %125, null, !dbg !13777
  br i1 %tobool121, label %while.body, label %while.end, !dbg !13777

while.body:                                       ; preds = %cond.end119
  store i32 0, i32* %j, align 4, !dbg !13780
  br label %for.cond122, !dbg !13783

for.cond122:                                      ; preds = %for.inc132, %while.body
  %126 = load i32, i32* %j, align 4, !dbg !13784
  %127 = load i32, i32* %subset_count.addr, align 4, !dbg !13786
  %cmp123 = icmp slt i32 %126, %127, !dbg !13787
  br i1 %cmp123, label %for.body125, label %for.end134, !dbg !13788

for.body125:                                      ; preds = %for.cond122
  %128 = load float, float* %dv_mul, align 4, !dbg !13789
  %129 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !13791
  %130 = load i32*, i32** %vgroup_subset_map, align 8, !dbg !13792
  %131 = load i32, i32* %j, align 4, !dbg !13793
  %idxprom126 = sext i32 %131 to i64, !dbg !13792
  %arrayidx127 = getelementptr inbounds i32, i32* %130, i64 %idxprom126, !dbg !13792
  %132 = load i32, i32* %arrayidx127, align 4, !dbg !13792
  %call128 = call float @defvert_find_weight(%struct.MDeformVert* %129, i32 %132), !dbg !13794
  %mul129 = fmul float %128, %call128, !dbg !13795
  %133 = load float*, float** %vgroup_subset_weights, align 8, !dbg !13796
  %134 = load i32, i32* %j, align 4, !dbg !13797
  %idxprom130 = sext i32 %134 to i64, !dbg !13796
  %arrayidx131 = getelementptr inbounds float, float* %133, i64 %idxprom130, !dbg !13796
  %135 = load float, float* %arrayidx131, align 4, !dbg !13798
  %add = fadd float %135, %mul129, !dbg !13798
  store float %add, float* %arrayidx131, align 4, !dbg !13798
  br label %for.inc132, !dbg !13799

for.inc132:                                       ; preds = %for.body125
  %136 = load i32, i32* %j, align 4, !dbg !13800
  %inc133 = add nsw i32 %136, 1, !dbg !13800
  store i32 %inc133, i32* %j, align 4, !dbg !13800
  br label %for.cond122, !dbg !13801, !llvm.loop !13802

for.end134:                                       ; preds = %for.cond122
  br label %while.cond, !dbg !13777, !llvm.loop !13804

while.end:                                        ; preds = %cond.end119
  %137 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13806
  %138 = load i32, i32* %i, align 4, !dbg !13807
  %idxprom135 = sext i32 %138 to i64, !dbg !13806
  %arrayidx136 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %137, i64 %idxprom135, !dbg !13806
  %139 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx136, align 8, !dbg !13806
  store %struct.MDeformVert* %139, %struct.MDeformVert** %dv, align 8, !dbg !13808
  store i32 0, i32* %j, align 4, !dbg !13809
  br label %for.cond137, !dbg !13811

for.cond137:                                      ; preds = %for.inc178, %while.end
  %140 = load i32, i32* %j, align 4, !dbg !13812
  %141 = load i32, i32* %subset_count.addr, align 4, !dbg !13814
  %cmp138 = icmp slt i32 %140, %141, !dbg !13815
  br i1 %cmp138, label %for.body140, label %for.end180, !dbg !13816

for.body140:                                      ; preds = %for.cond137
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !13817, metadata !DIExpression()), !dbg !13819
  %142 = load float*, float** %vgroup_subset_weights, align 8, !dbg !13820
  %143 = load i32, i32* %j, align 4, !dbg !13822
  %idxprom141 = sext i32 %143 to i64, !dbg !13820
  %arrayidx142 = getelementptr inbounds float, float* %142, i64 %idxprom141, !dbg !13820
  %144 = load float, float* %arrayidx142, align 4, !dbg !13820
  %cmp143 = fcmp ogt float %144, 0.000000e+00, !dbg !13823
  br i1 %cmp143, label %if.then145, label %if.else149, !dbg !13824

if.then145:                                       ; preds = %for.body140
  %145 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !13825
  %146 = load i32*, i32** %vgroup_subset_map, align 8, !dbg !13827
  %147 = load i32, i32* %j, align 4, !dbg !13828
  %idxprom146 = sext i32 %147 to i64, !dbg !13827
  %arrayidx147 = getelementptr inbounds i32, i32* %146, i64 %idxprom146, !dbg !13827
  %148 = load i32, i32* %arrayidx147, align 4, !dbg !13827
  %call148 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %145, i32 %148), !dbg !13829
  store %struct.MDeformWeight* %call148, %struct.MDeformWeight** %dw, align 8, !dbg !13830
  br label %if.end153, !dbg !13831

if.else149:                                       ; preds = %for.body140
  %149 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !13832
  %150 = load i32*, i32** %vgroup_subset_map, align 8, !dbg !13834
  %151 = load i32, i32* %j, align 4, !dbg !13835
  %idxprom150 = sext i32 %151 to i64, !dbg !13834
  %arrayidx151 = getelementptr inbounds i32, i32* %150, i64 %idxprom150, !dbg !13834
  %152 = load i32, i32* %arrayidx151, align 4, !dbg !13834
  %call152 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %149, i32 %152), !dbg !13836
  store %struct.MDeformWeight* %call152, %struct.MDeformWeight** %dw, align 8, !dbg !13837
  br label %if.end153

if.end153:                                        ; preds = %if.else149, %if.then145
  %153 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13838
  %tobool154 = icmp ne %struct.MDeformWeight* %153, null, !dbg !13838
  br i1 %tobool154, label %if.then155, label %if.end175, !dbg !13840

if.then155:                                       ; preds = %if.end153
  %154 = load float, float* %fac.addr, align 4, !dbg !13841
  %155 = load float*, float** %vgroup_subset_weights, align 8, !dbg !13843
  %156 = load i32, i32* %j, align 4, !dbg !13844
  %idxprom156 = sext i32 %156 to i64, !dbg !13843
  %arrayidx157 = getelementptr inbounds float, float* %155, i64 %idxprom156, !dbg !13843
  %157 = load float, float* %arrayidx157, align 4, !dbg !13843
  %mul158 = fmul float %154, %157, !dbg !13845
  %158 = load float, float* %ifac, align 4, !dbg !13846
  %159 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13847
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %159, i32 0, i32 1, !dbg !13848
  %160 = load float, float* %weight, align 4, !dbg !13848
  %mul159 = fmul float %158, %160, !dbg !13849
  %add160 = fadd float %mul158, %mul159, !dbg !13850
  %161 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13851
  %weight161 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %161, i32 0, i32 1, !dbg !13852
  store float %add160, float* %weight161, align 4, !dbg !13853
  %162 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13854
  %weight162 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %162, i32 0, i32 1, !dbg !13854
  %163 = load float, float* %weight162, align 4, !dbg !13854
  %cmp163 = fcmp olt float %163, 0.000000e+00, !dbg !13854
  br i1 %cmp163, label %if.then165, label %if.else167, !dbg !13857

if.then165:                                       ; preds = %if.then155
  %164 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13854
  %weight166 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %164, i32 0, i32 1, !dbg !13854
  store float 0.000000e+00, float* %weight166, align 4, !dbg !13854
  br label %if.end174, !dbg !13854

if.else167:                                       ; preds = %if.then155
  %165 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13858
  %weight168 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %165, i32 0, i32 1, !dbg !13858
  %166 = load float, float* %weight168, align 4, !dbg !13858
  %cmp169 = fcmp ogt float %166, 1.000000e+00, !dbg !13858
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !13854

if.then171:                                       ; preds = %if.else167
  %167 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !13858
  %weight172 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %167, i32 0, i32 1, !dbg !13858
  store float 1.000000e+00, float* %weight172, align 4, !dbg !13858
  br label %if.end173, !dbg !13858

if.end173:                                        ; preds = %if.then171, %if.else167
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  br label %if.end175, !dbg !13860

if.end175:                                        ; preds = %if.end174, %if.end153
  %168 = load float*, float** %vgroup_subset_weights, align 8, !dbg !13861
  %169 = load i32, i32* %j, align 4, !dbg !13862
  %idxprom176 = sext i32 %169 to i64, !dbg !13861
  %arrayidx177 = getelementptr inbounds float, float* %168, i64 %idxprom176, !dbg !13861
  store float 0.000000e+00, float* %arrayidx177, align 4, !dbg !13863
  br label %for.inc178, !dbg !13864

for.inc178:                                       ; preds = %if.end175
  %170 = load i32, i32* %j, align 4, !dbg !13865
  %inc179 = add nsw i32 %170, 1, !dbg !13865
  store i32 %inc179, i32* %j, align 4, !dbg !13865
  br label %for.cond137, !dbg !13866, !llvm.loop !13867

for.end180:                                       ; preds = %for.cond137
  br label %if.end181, !dbg !13869

if.end181:                                        ; preds = %for.end180, %if.end109
  br label %for.inc182, !dbg !13870

for.inc182:                                       ; preds = %if.end181
  %171 = load i32, i32* %i, align 4, !dbg !13871
  %inc183 = add nsw i32 %171, 1, !dbg !13871
  store i32 %inc183, i32* %i, align 4, !dbg !13871
  br label %for.cond, !dbg !13872, !llvm.loop !13873

for.end184:                                       ; preds = %for.cond
  %172 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13875
  %tobool185 = icmp ne %struct.BMesh* %172, null, !dbg !13875
  br i1 %tobool185, label %if.then186, label %if.else187, !dbg !13877

if.then186:                                       ; preds = %for.end184
  br label %if.end188, !dbg !13878

if.else187:                                       ; preds = %for.end184
  %173 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13880
  %174 = load %struct.MeshElemMap*, %struct.MeshElemMap** %emap, align 8, !dbg !13882
  %175 = bitcast %struct.MeshElemMap* %174 to i8*, !dbg !13882
  call void %173(i8* %175), !dbg !13880
  %176 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13883
  %177 = load i32*, i32** %emap_mem, align 8, !dbg !13884
  %178 = bitcast i32* %177 to i8*, !dbg !13884
  call void %176(i8* %178), !dbg !13883
  br label %if.end188

if.end188:                                        ; preds = %if.else187, %if.then186
  %179 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13885
  %tobool189 = icmp ne %struct.MDeformVert** %179, null, !dbg !13885
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !13887

if.then190:                                       ; preds = %if.end188
  %180 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13888
  %181 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13889
  %182 = bitcast %struct.MDeformVert** %181 to i8*, !dbg !13889
  call void %180(i8* %182), !dbg !13888
  br label %if.end191, !dbg !13888

if.end191:                                        ; preds = %if.then190, %if.end188
  %183 = load i8, i8* %use_mirror, align 1, !dbg !13890
  %tobool192 = icmp ne i8 %183, 0, !dbg !13890
  br i1 %tobool192, label %if.then193, label %if.end199, !dbg !13892

if.then193:                                       ; preds = %if.end191
  %184 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13893
  %data194 = getelementptr inbounds %struct.Object, %struct.Object* %184, i32 0, i32 19, !dbg !13895
  %185 = load i8*, i8** %data194, align 8, !dbg !13895
  %186 = bitcast i8* %185 to %struct.ID*, !dbg !13893
  %call195 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %186, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext 1), !dbg !13896
  %187 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13897
  %188 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13898
  %189 = load i32, i32* %dvert_tot, align 4, !dbg !13899
  %190 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !13900
  %191 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !13901
  call void @ED_vgroup_parray_mirror_sync(%struct.Object* %187, %struct.MDeformVert** %188, i32 %189, i8* %190, i32 %191), !dbg !13902
  %192 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13903
  %tobool196 = icmp ne %struct.MDeformVert** %192, null, !dbg !13903
  br i1 %tobool196, label %if.then197, label %if.end198, !dbg !13905

if.then197:                                       ; preds = %if.then193
  %193 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13906
  %194 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13907
  %195 = bitcast %struct.MDeformVert** %194 to i8*, !dbg !13907
  call void %193(i8* %195), !dbg !13906
  br label %if.end198, !dbg !13906

if.end198:                                        ; preds = %if.then197, %if.then193
  br label %if.end199, !dbg !13908

if.end199:                                        ; preds = %if.end198, %if.end191
  ret void, !dbg !13909
}

declare dso_local void @BKE_mesh_vert_edge_map_create(%struct.MeshElemMap**, i32**, %struct.MEdge*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %e, %struct.BMVert* %v) #0 !dbg !13910 {
entry:
  %retval = alloca %struct.BMVert*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !13916, metadata !DIExpression()), !dbg !13917
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !13918, metadata !DIExpression()), !dbg !13919
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !13920
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 2, !dbg !13922
  %1 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !13922
  %2 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !13923
  %cmp = icmp eq %struct.BMVert* %1, %2, !dbg !13924
  br i1 %cmp, label %if.then, label %if.else, !dbg !13925

if.then:                                          ; preds = %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !13926
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %3, i32 0, i32 3, !dbg !13928
  %4 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !13928
  store %struct.BMVert* %4, %struct.BMVert** %retval, align 8, !dbg !13929
  br label %return, !dbg !13929

if.else:                                          ; preds = %entry
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !13930
  %v21 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %5, i32 0, i32 3, !dbg !13932
  %6 = load %struct.BMVert*, %struct.BMVert** %v21, align 8, !dbg !13932
  %7 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !13933
  %cmp2 = icmp eq %struct.BMVert* %6, %7, !dbg !13934
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !13935

if.then3:                                         ; preds = %if.else
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !13936
  %v14 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %8, i32 0, i32 2, !dbg !13938
  %9 = load %struct.BMVert*, %struct.BMVert** %v14, align 8, !dbg !13938
  store %struct.BMVert* %9, %struct.BMVert** %retval, align 8, !dbg !13939
  br label %return, !dbg !13939

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  store %struct.BMVert* null, %struct.BMVert** %retval, align 8, !dbg !13940
  br label %return, !dbg !13940

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %10 = load %struct.BMVert*, %struct.BMVert** %retval, align 8, !dbg !13941
  ret %struct.BMVert* %10, !dbg !13941
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !13942 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !13945, metadata !DIExpression()), !dbg !13946
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !13947
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !13948
  %1 = load i32, i32* %index, align 8, !dbg !13948
  ret i32 %1, !dbg !13949
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_clean_subset(%struct.Object* %ob, i8* %vgroup_validmap, i32 %vgroup_tot, i32 %UNUSED_subset_count, float %epsilon, i8 zeroext %keep_single) #0 !dbg !13950 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %UNUSED_subset_count.addr = alloca i32, align 4
  %epsilon.addr = alloca float, align 4
  %keep_single.addr = alloca i8, align 1
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %dvert_tot = alloca i32, align 4
  %use_vert_sel = alloca i8, align 1
  %use_mirror = alloca i8, align 1
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13953, metadata !DIExpression()), !dbg !13954
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !13955, metadata !DIExpression()), !dbg !13956
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !13957, metadata !DIExpression()), !dbg !13958
  store i32 %UNUSED_subset_count, i32* %UNUSED_subset_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_subset_count.addr, metadata !13959, metadata !DIExpression()), !dbg !13960
  store float %epsilon, float* %epsilon.addr, align 4
  call void @llvm.dbg.declare(metadata float* %epsilon.addr, metadata !13961, metadata !DIExpression()), !dbg !13962
  store i8 %keep_single, i8* %keep_single.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %keep_single.addr, metadata !13963, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !13965, metadata !DIExpression()), !dbg !13966
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13966
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !13967, metadata !DIExpression()), !dbg !13968
  store i32 0, i32* %dvert_tot, align 4, !dbg !13968
  call void @llvm.dbg.declare(metadata i8* %use_vert_sel, metadata !13969, metadata !DIExpression()), !dbg !13970
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13971
  %call = call zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %0), !dbg !13972
  store i8 %call, i8* %use_vert_sel, align 1, !dbg !13970
  call void @llvm.dbg.declare(metadata i8* %use_mirror, metadata !13973, metadata !DIExpression()), !dbg !13974
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13975
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !13976
  %2 = load i16, i16* %type, align 8, !dbg !13976
  %conv = sext i16 %2 to i32, !dbg !13975
  %cmp = icmp eq i32 %conv, 1, !dbg !13977
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13978

cond.true:                                        ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13979
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !13980
  %4 = load i8*, i8** %data, align 8, !dbg !13980
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !13981
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !13982
  %6 = load i8, i8* %editflag, align 1, !dbg !13982
  %conv2 = zext i8 %6 to i32, !dbg !13983
  %and = and i32 %conv2, 1, !dbg !13984
  %cmp3 = icmp ne i32 %and, 0, !dbg !13985
  %conv4 = zext i1 %cmp3 to i32, !dbg !13985
  br label %cond.end, !dbg !13978

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13978

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ 0, %cond.false ], !dbg !13978
  %conv5 = trunc i32 %cond to i8, !dbg !13978
  store i8 %conv5, i8* %use_mirror, align 1, !dbg !13974
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13986
  %data6 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !13987
  %8 = load i8*, i8** %data6, align 8, !dbg !13987
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !13986
  %10 = load i8, i8* %use_vert_sel, align 1, !dbg !13988
  %call7 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %9, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext %10), !dbg !13989
  %11 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !13990
  %tobool = icmp ne %struct.MDeformVert** %11, null, !dbg !13990
  br i1 %tobool, label %if.then, label %if.end13, !dbg !13992

if.then:                                          ; preds = %cond.end
  %12 = load i8, i8* %use_mirror, align 1, !dbg !13993
  %conv8 = zext i8 %12 to i32, !dbg !13993
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !13993
  br i1 %tobool9, label %land.lhs.true, label %if.end, !dbg !13996

land.lhs.true:                                    ; preds = %if.then
  %13 = load i8, i8* %use_vert_sel, align 1, !dbg !13997
  %conv10 = zext i8 %13 to i32, !dbg !13997
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !13997
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !13998

if.then12:                                        ; preds = %land.lhs.true
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13999
  %15 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14001
  %16 = load i32, i32* %dvert_tot, align 4, !dbg !14002
  call void @ED_vgroup_parray_mirror_assign(%struct.Object* %14, %struct.MDeformVert** %15, i32 %16), !dbg !14003
  br label %if.end, !dbg !14004

if.end:                                           ; preds = %if.then12, %land.lhs.true, %if.then
  %17 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14005
  %18 = load i32, i32* %dvert_tot, align 4, !dbg !14006
  %19 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !14007
  %20 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !14008
  %21 = load float, float* %epsilon.addr, align 4, !dbg !14009
  %22 = load i8, i8* %keep_single.addr, align 1, !dbg !14010
  call void @ED_vgroup_parray_remove_zero(%struct.MDeformVert** %17, i32 %18, i8* %19, i32 %20, float %21, i8 zeroext %22), !dbg !14011
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14012
  %24 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14013
  %25 = bitcast %struct.MDeformVert** %24 to i8*, !dbg !14013
  call void %23(i8* %25), !dbg !14012
  br label %if.end13, !dbg !14014

if.end13:                                         ; preds = %if.end, %cond.end
  ret void, !dbg !14015
}

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_quantize_subset(%struct.Object* %ob, i8* %vgroup_validmap, i32 %vgroup_tot, i32 %UNUSED_subset_count, i32 %steps) #0 !dbg !14016 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %UNUSED_subset_count.addr = alloca i32, align 4
  %steps.addr = alloca i32, align 4
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %dvert_tot = alloca i32, align 4
  %use_vert_sel = alloca i8, align 1
  %use_mirror = alloca i8, align 1
  %steps_fl = alloca float, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %i = alloca i32, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  %j = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14019, metadata !DIExpression()), !dbg !14020
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !14021, metadata !DIExpression()), !dbg !14022
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !14023, metadata !DIExpression()), !dbg !14024
  store i32 %UNUSED_subset_count, i32* %UNUSED_subset_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_subset_count.addr, metadata !14025, metadata !DIExpression()), !dbg !14026
  store i32 %steps, i32* %steps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %steps.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !14029, metadata !DIExpression()), !dbg !14030
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14030
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !14031, metadata !DIExpression()), !dbg !14032
  store i32 0, i32* %dvert_tot, align 4, !dbg !14032
  call void @llvm.dbg.declare(metadata i8* %use_vert_sel, metadata !14033, metadata !DIExpression()), !dbg !14034
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14035
  %call = call zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %0), !dbg !14036
  store i8 %call, i8* %use_vert_sel, align 1, !dbg !14034
  call void @llvm.dbg.declare(metadata i8* %use_mirror, metadata !14037, metadata !DIExpression()), !dbg !14038
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14039
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !14040
  %2 = load i16, i16* %type, align 8, !dbg !14040
  %conv = sext i16 %2 to i32, !dbg !14039
  %cmp = icmp eq i32 %conv, 1, !dbg !14041
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14042

cond.true:                                        ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14043
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !14044
  %4 = load i8*, i8** %data, align 8, !dbg !14044
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !14045
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !14046
  %6 = load i8, i8* %editflag, align 1, !dbg !14046
  %conv2 = zext i8 %6 to i32, !dbg !14047
  %and = and i32 %conv2, 1, !dbg !14048
  %cmp3 = icmp ne i32 %and, 0, !dbg !14049
  %conv4 = zext i1 %cmp3 to i32, !dbg !14049
  br label %cond.end, !dbg !14042

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14042

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ 0, %cond.false ], !dbg !14042
  %conv5 = trunc i32 %cond to i8, !dbg !14042
  store i8 %conv5, i8* %use_mirror, align 1, !dbg !14038
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14050
  %data6 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !14051
  %8 = load i8*, i8** %data6, align 8, !dbg !14051
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !14050
  %10 = load i8, i8* %use_vert_sel, align 1, !dbg !14052
  %call7 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %9, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext %10), !dbg !14053
  %11 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14054
  %tobool = icmp ne %struct.MDeformVert** %11, null, !dbg !14054
  br i1 %tobool, label %if.then, label %if.end50, !dbg !14056

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata float* %steps_fl, metadata !14057, metadata !DIExpression()), !dbg !14059
  %12 = load i32, i32* %steps.addr, align 4, !dbg !14060
  %conv8 = sitofp i32 %12 to float, !dbg !14060
  store float %conv8, float* %steps_fl, align 4, !dbg !14059
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !14061, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14063, metadata !DIExpression()), !dbg !14064
  %13 = load i8, i8* %use_mirror, align 1, !dbg !14065
  %conv9 = zext i8 %13 to i32, !dbg !14065
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !14065
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !14067

land.lhs.true:                                    ; preds = %if.then
  %14 = load i8, i8* %use_vert_sel, align 1, !dbg !14068
  %conv11 = zext i8 %14 to i32, !dbg !14068
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !14068
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !14069

if.then13:                                        ; preds = %land.lhs.true
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14070
  %16 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14072
  %17 = load i32, i32* %dvert_tot, align 4, !dbg !14073
  call void @ED_vgroup_parray_mirror_assign(%struct.Object* %15, %struct.MDeformVert** %16, i32 %17), !dbg !14074
  br label %if.end, !dbg !14075

if.end:                                           ; preds = %if.then13, %land.lhs.true, %if.then
  store i32 0, i32* %i, align 4, !dbg !14076
  br label %for.cond, !dbg !14078

for.cond:                                         ; preds = %for.inc47, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !14079
  %19 = load i32, i32* %dvert_tot, align 4, !dbg !14081
  %cmp14 = icmp slt i32 %18, %19, !dbg !14082
  br i1 %cmp14, label %for.body, label %for.end49, !dbg !14083

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !14084, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14087, metadata !DIExpression()), !dbg !14088
  %20 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14089
  %21 = load i32, i32* %i, align 4, !dbg !14091
  %idxprom = sext i32 %21 to i64, !dbg !14089
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %20, i64 %idxprom, !dbg !14089
  %22 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !14089
  store %struct.MDeformVert* %22, %struct.MDeformVert** %dv, align 8, !dbg !14092
  %tobool16 = icmp ne %struct.MDeformVert* %22, null, !dbg !14092
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !14093

if.then17:                                        ; preds = %for.body
  br label %for.inc47, !dbg !14094

if.end18:                                         ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !14096
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14098
  %dw19 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %23, i32 0, i32 0, !dbg !14099
  %24 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw19, align 8, !dbg !14099
  store %struct.MDeformWeight* %24, %struct.MDeformWeight** %dw, align 8, !dbg !14100
  br label %for.cond20, !dbg !14101

for.cond20:                                       ; preds = %for.inc, %if.end18
  %25 = load i32, i32* %j, align 4, !dbg !14102
  %26 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14104
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %26, i32 0, i32 1, !dbg !14105
  %27 = load i32, i32* %totweight, align 8, !dbg !14105
  %cmp21 = icmp slt i32 %25, %27, !dbg !14106
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !14107

for.body23:                                       ; preds = %for.cond20
  %28 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14108
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %28, i32 0, i32 0, !dbg !14111
  %29 = load i32, i32* %def_nr, align 4, !dbg !14111
  %30 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !14112
  %cmp24 = icmp slt i32 %29, %30, !dbg !14113
  br i1 %cmp24, label %land.lhs.true26, label %if.end46, !dbg !14114

land.lhs.true26:                                  ; preds = %for.body23
  %31 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !14115
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14116
  %def_nr27 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %32, i32 0, i32 0, !dbg !14117
  %33 = load i32, i32* %def_nr27, align 4, !dbg !14117
  %idxprom28 = sext i32 %33 to i64, !dbg !14115
  %arrayidx29 = getelementptr inbounds i8, i8* %31, i64 %idxprom28, !dbg !14115
  %34 = load i8, i8* %arrayidx29, align 1, !dbg !14115
  %conv30 = zext i8 %34 to i32, !dbg !14115
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !14115
  br i1 %tobool31, label %if.then32, label %if.end46, !dbg !14118

if.then32:                                        ; preds = %land.lhs.true26
  %35 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14119
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %35, i32 0, i32 1, !dbg !14121
  %36 = load float, float* %weight, align 4, !dbg !14121
  %37 = load float, float* %steps_fl, align 4, !dbg !14122
  %mul = fmul float %36, %37, !dbg !14123
  %add = fadd float %mul, 5.000000e-01, !dbg !14124
  %38 = call float @llvm.floor.f32(float %add), !dbg !14125
  %39 = load float, float* %steps_fl, align 4, !dbg !14126
  %div = fdiv float %38, %39, !dbg !14127
  %40 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14128
  %weight33 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %40, i32 0, i32 1, !dbg !14129
  store float %div, float* %weight33, align 4, !dbg !14130
  %41 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14131
  %weight34 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %41, i32 0, i32 1, !dbg !14131
  %42 = load float, float* %weight34, align 4, !dbg !14131
  %cmp35 = fcmp olt float %42, 0.000000e+00, !dbg !14131
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !14134

if.then37:                                        ; preds = %if.then32
  %43 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14131
  %weight38 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %43, i32 0, i32 1, !dbg !14131
  store float 0.000000e+00, float* %weight38, align 4, !dbg !14131
  br label %if.end45, !dbg !14131

if.else:                                          ; preds = %if.then32
  %44 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14135
  %weight39 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %44, i32 0, i32 1, !dbg !14135
  %45 = load float, float* %weight39, align 4, !dbg !14135
  %cmp40 = fcmp ogt float %45, 1.000000e+00, !dbg !14135
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !14131

if.then42:                                        ; preds = %if.else
  %46 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14135
  %weight43 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %46, i32 0, i32 1, !dbg !14135
  store float 1.000000e+00, float* %weight43, align 4, !dbg !14135
  br label %if.end44, !dbg !14135

if.end44:                                         ; preds = %if.then42, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then37
  br label %if.end46, !dbg !14137

if.end46:                                         ; preds = %if.end45, %land.lhs.true26, %for.body23
  br label %for.inc, !dbg !14138

for.inc:                                          ; preds = %if.end46
  %47 = load i32, i32* %j, align 4, !dbg !14139
  %inc = add nsw i32 %47, 1, !dbg !14139
  store i32 %inc, i32* %j, align 4, !dbg !14139
  %48 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14140
  %incdec.ptr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %48, i32 1, !dbg !14140
  store %struct.MDeformWeight* %incdec.ptr, %struct.MDeformWeight** %dw, align 8, !dbg !14140
  br label %for.cond20, !dbg !14141, !llvm.loop !14142

for.end:                                          ; preds = %for.cond20
  br label %for.inc47, !dbg !14144

for.inc47:                                        ; preds = %for.end, %if.then17
  %49 = load i32, i32* %i, align 4, !dbg !14145
  %inc48 = add nsw i32 %49, 1, !dbg !14145
  store i32 %inc48, i32* %i, align 4, !dbg !14145
  br label %for.cond, !dbg !14146, !llvm.loop !14147

for.end49:                                        ; preds = %for.cond
  %50 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14149
  %51 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14150
  %52 = bitcast %struct.MDeformVert** %51 to i8*, !dbg !14150
  call void %50(i8* %52), !dbg !14149
  br label %if.end50, !dbg !14151

if.end50:                                         ; preds = %for.end49, %cond.end
  ret void, !dbg !14152
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @vgroup_limit_total_subset(%struct.Object* %ob, i8* %vgroup_validmap, i32 %vgroup_tot, i32 %subset_count, i32 %max_weights) #0 !dbg !14153 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vgroup_validmap.addr = alloca i8*, align 8
  %vgroup_tot.addr = alloca i32, align 4
  %subset_count.addr = alloca i32, align 4
  %max_weights.addr = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %dvert_array = alloca %struct.MDeformVert**, align 8
  %i = alloca i32, align 4
  %dvert_tot = alloca i32, align 4
  %use_vert_sel = alloca i32, align 4
  %remove_tot = alloca i32, align 4
  %num_to_drop = alloca i32, align 4
  %dw_temp = alloca %struct.MDeformWeight*, align 8
  %bone_count = alloca i32, align 4
  %non_bone_count = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14156, metadata !DIExpression()), !dbg !14157
  store i8* %vgroup_validmap, i8** %vgroup_validmap.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap.addr, metadata !14158, metadata !DIExpression()), !dbg !14159
  store i32 %vgroup_tot, i32* %vgroup_tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot.addr, metadata !14160, metadata !DIExpression()), !dbg !14161
  store i32 %subset_count, i32* %subset_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subset_count.addr, metadata !14162, metadata !DIExpression()), !dbg !14163
  store i32 %max_weights, i32* %max_weights.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_weights.addr, metadata !14164, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !14166, metadata !DIExpression()), !dbg !14167
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dvert_array, metadata !14168, metadata !DIExpression()), !dbg !14169
  store %struct.MDeformVert** null, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14169
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14170, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !14172, metadata !DIExpression()), !dbg !14173
  store i32 0, i32* %dvert_tot, align 4, !dbg !14173
  call void @llvm.dbg.declare(metadata i32* %use_vert_sel, metadata !14174, metadata !DIExpression()), !dbg !14175
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14176
  %call = call zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %0), !dbg !14177
  %conv = zext i8 %call to i32, !dbg !14177
  store i32 %conv, i32* %use_vert_sel, align 4, !dbg !14175
  call void @llvm.dbg.declare(metadata i32* %remove_tot, metadata !14178, metadata !DIExpression()), !dbg !14179
  store i32 0, i32* %remove_tot, align 4, !dbg !14179
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14180
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !14181
  %2 = load i8*, i8** %data, align 8, !dbg !14181
  %3 = bitcast i8* %2 to %struct.ID*, !dbg !14180
  %4 = load i32, i32* %use_vert_sel, align 4, !dbg !14182
  %conv1 = trunc i32 %4 to i8, !dbg !14182
  %call2 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %3, %struct.MDeformVert*** %dvert_array, i32* %dvert_tot, i8 zeroext %conv1), !dbg !14183
  %5 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14184
  %tobool = icmp ne %struct.MDeformVert** %5, null, !dbg !14184
  br i1 %tobool, label %if.then, label %if.end66, !dbg !14186

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %num_to_drop, metadata !14187, metadata !DIExpression()), !dbg !14189
  store i32 0, i32* %num_to_drop, align 4, !dbg !14189
  store i32 0, i32* %i, align 4, !dbg !14190
  br label %for.cond, !dbg !14192

for.cond:                                         ; preds = %for.inc63, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !14193
  %7 = load i32, i32* %dvert_tot, align 4, !dbg !14195
  %cmp = icmp slt i32 %6, %7, !dbg !14196
  br i1 %cmp, label %for.body, label %for.end65, !dbg !14197

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_temp, metadata !14198, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.declare(metadata i32* %bone_count, metadata !14201, metadata !DIExpression()), !dbg !14202
  store i32 0, i32* %bone_count, align 4, !dbg !14202
  call void @llvm.dbg.declare(metadata i32* %non_bone_count, metadata !14203, metadata !DIExpression()), !dbg !14204
  store i32 0, i32* %non_bone_count, align 4, !dbg !14204
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14205, metadata !DIExpression()), !dbg !14206
  %8 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14207
  %9 = load i32, i32* %i, align 4, !dbg !14209
  %idxprom = sext i32 %9 to i64, !dbg !14207
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %8, i64 %idxprom, !dbg !14207
  %10 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !14207
  store %struct.MDeformVert* %10, %struct.MDeformVert** %dv, align 8, !dbg !14210
  %tobool4 = icmp ne %struct.MDeformVert* %10, null, !dbg !14210
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !14211

if.then5:                                         ; preds = %for.body
  br label %for.inc63, !dbg !14212

if.end:                                           ; preds = %for.body
  %11 = load i32, i32* %subset_count.addr, align 4, !dbg !14214
  %12 = load i32, i32* %max_weights.addr, align 4, !dbg !14215
  %sub = sub nsw i32 %11, %12, !dbg !14216
  store i32 %sub, i32* %num_to_drop, align 4, !dbg !14217
  %13 = load i32, i32* %num_to_drop, align 4, !dbg !14218
  %cmp6 = icmp sgt i32 %13, 0, !dbg !14220
  br i1 %cmp6, label %if.then8, label %if.end62, !dbg !14221

if.then8:                                         ; preds = %if.end
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !14222
  %15 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14224
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %15, i32 0, i32 1, !dbg !14225
  %16 = load i32, i32* %totweight, align 8, !dbg !14225
  %conv9 = sext i32 %16 to i64, !dbg !14224
  %mul = mul i64 8, %conv9, !dbg !14226
  %call10 = call i8* %14(i64 %mul, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.vgroup_limit_total_subset, i64 0, i64 0)), !dbg !14222
  %17 = bitcast i8* %call10 to %struct.MDeformWeight*, !dbg !14222
  store %struct.MDeformWeight* %17, %struct.MDeformWeight** %dw_temp, align 8, !dbg !14227
  store i32 0, i32* %bone_count, align 4, !dbg !14228
  store i32 0, i32* %non_bone_count, align 4, !dbg !14229
  store i32 0, i32* %j, align 4, !dbg !14230
  br label %for.cond11, !dbg !14232

for.cond11:                                       ; preds = %for.inc, %if.then8
  %18 = load i32, i32* %j, align 4, !dbg !14233
  %19 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14235
  %totweight12 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %19, i32 0, i32 1, !dbg !14236
  %20 = load i32, i32* %totweight12, align 8, !dbg !14236
  %cmp13 = icmp slt i32 %18, %20, !dbg !14237
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !14238

for.body15:                                       ; preds = %for.cond11
  %21 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14239
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %21, i32 0, i32 0, !dbg !14239
  %22 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !14239
  %23 = load i32, i32* %j, align 4, !dbg !14239
  %idxprom16 = sext i32 %23 to i64, !dbg !14239
  %arrayidx17 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %22, i64 %idxprom16, !dbg !14239
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx17, i32 0, i32 0, !dbg !14239
  %24 = load i32, i32* %def_nr, align 4, !dbg !14239
  %25 = load i32, i32* %vgroup_tot.addr, align 4, !dbg !14239
  %cmp18 = icmp slt i32 %24, %25, !dbg !14239
  br i1 %cmp18, label %land.lhs.true, label %if.else, !dbg !14242

land.lhs.true:                                    ; preds = %for.body15
  %26 = load i8*, i8** %vgroup_validmap.addr, align 8, !dbg !14243
  %27 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14244
  %dw20 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %27, i32 0, i32 0, !dbg !14245
  %28 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw20, align 8, !dbg !14245
  %29 = load i32, i32* %j, align 4, !dbg !14246
  %idxprom21 = sext i32 %29 to i64, !dbg !14244
  %arrayidx22 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %28, i64 %idxprom21, !dbg !14244
  %def_nr23 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %arrayidx22, i32 0, i32 0, !dbg !14247
  %30 = load i32, i32* %def_nr23, align 4, !dbg !14247
  %idxprom24 = sext i32 %30 to i64, !dbg !14243
  %arrayidx25 = getelementptr inbounds i8, i8* %26, i64 %idxprom24, !dbg !14243
  %31 = load i8, i8* %arrayidx25, align 1, !dbg !14243
  %conv26 = zext i8 %31 to i32, !dbg !14243
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !14243
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !14248

if.then28:                                        ; preds = %land.lhs.true
  %32 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_temp, align 8, !dbg !14249
  %33 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14251
  %totweight29 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %33, i32 0, i32 1, !dbg !14252
  %34 = load i32, i32* %totweight29, align 8, !dbg !14252
  %sub30 = sub nsw i32 %34, 1, !dbg !14253
  %35 = load i32, i32* %bone_count, align 4, !dbg !14254
  %sub31 = sub nsw i32 %sub30, %35, !dbg !14255
  %idxprom32 = sext i32 %sub31 to i64, !dbg !14249
  %arrayidx33 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %32, i64 %idxprom32, !dbg !14249
  %36 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14256
  %dw34 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %36, i32 0, i32 0, !dbg !14257
  %37 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw34, align 8, !dbg !14257
  %38 = load i32, i32* %j, align 4, !dbg !14258
  %idxprom35 = sext i32 %38 to i64, !dbg !14256
  %arrayidx36 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %37, i64 %idxprom35, !dbg !14256
  %39 = bitcast %struct.MDeformWeight* %arrayidx33 to i8*, !dbg !14256
  %40 = bitcast %struct.MDeformWeight* %arrayidx36 to i8*, !dbg !14256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 8, i1 false), !dbg !14256
  %41 = load i32, i32* %bone_count, align 4, !dbg !14259
  %add = add nsw i32 %41, 1, !dbg !14259
  store i32 %add, i32* %bone_count, align 4, !dbg !14259
  br label %if.end43, !dbg !14260

if.else:                                          ; preds = %land.lhs.true, %for.body15
  %42 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_temp, align 8, !dbg !14261
  %43 = load i32, i32* %non_bone_count, align 4, !dbg !14263
  %idxprom37 = sext i32 %43 to i64, !dbg !14261
  %arrayidx38 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %42, i64 %idxprom37, !dbg !14261
  %44 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14264
  %dw39 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %44, i32 0, i32 0, !dbg !14265
  %45 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw39, align 8, !dbg !14265
  %46 = load i32, i32* %j, align 4, !dbg !14266
  %idxprom40 = sext i32 %46 to i64, !dbg !14264
  %arrayidx41 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %45, i64 %idxprom40, !dbg !14264
  %47 = bitcast %struct.MDeformWeight* %arrayidx38 to i8*, !dbg !14264
  %48 = bitcast %struct.MDeformWeight* %arrayidx41 to i8*, !dbg !14264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 8, i1 false), !dbg !14264
  %49 = load i32, i32* %non_bone_count, align 4, !dbg !14267
  %add42 = add nsw i32 %49, 1, !dbg !14267
  store i32 %add42, i32* %non_bone_count, align 4, !dbg !14267
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then28
  br label %for.inc, !dbg !14268

for.inc:                                          ; preds = %if.end43
  %50 = load i32, i32* %j, align 4, !dbg !14269
  %inc = add nsw i32 %50, 1, !dbg !14269
  store i32 %inc, i32* %j, align 4, !dbg !14269
  br label %for.cond11, !dbg !14270, !llvm.loop !14271

for.end:                                          ; preds = %for.cond11
  %51 = load i32, i32* %bone_count, align 4, !dbg !14273
  %52 = load i32, i32* %max_weights.addr, align 4, !dbg !14274
  %sub44 = sub nsw i32 %51, %52, !dbg !14275
  store i32 %sub44, i32* %num_to_drop, align 4, !dbg !14276
  %53 = load i32, i32* %num_to_drop, align 4, !dbg !14277
  %cmp45 = icmp sgt i32 %53, 0, !dbg !14279
  br i1 %cmp45, label %if.then47, label %if.else60, !dbg !14280

if.then47:                                        ; preds = %for.end
  %54 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_temp, align 8, !dbg !14281
  %55 = load i32, i32* %non_bone_count, align 4, !dbg !14283
  %idxprom48 = sext i32 %55 to i64, !dbg !14281
  %arrayidx49 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %54, i64 %idxprom48, !dbg !14281
  %56 = bitcast %struct.MDeformWeight* %arrayidx49 to i8*, !dbg !14284
  %57 = load i32, i32* %bone_count, align 4, !dbg !14285
  %conv50 = sext i32 %57 to i64, !dbg !14285
  call void @qsort(i8* %56, i64 %conv50, i64 8, i32 (i8*, i8*)* @inv_cmp_mdef_vert_weights), !dbg !14286
  %58 = load i32, i32* %num_to_drop, align 4, !dbg !14287
  %59 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14288
  %totweight51 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %59, i32 0, i32 1, !dbg !14289
  %60 = load i32, i32* %totweight51, align 8, !dbg !14290
  %sub52 = sub nsw i32 %60, %58, !dbg !14290
  store i32 %sub52, i32* %totweight51, align 8, !dbg !14290
  %61 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14291
  %62 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14292
  %dw53 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %62, i32 0, i32 0, !dbg !14293
  %63 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw53, align 8, !dbg !14293
  %64 = bitcast %struct.MDeformWeight* %63 to i8*, !dbg !14292
  call void %61(i8* %64), !dbg !14291
  %65 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !14294
  %66 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_temp, align 8, !dbg !14294
  %67 = bitcast %struct.MDeformWeight* %66 to i8*, !dbg !14294
  %68 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14294
  %totweight54 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %68, i32 0, i32 1, !dbg !14294
  %69 = load i32, i32* %totweight54, align 8, !dbg !14294
  %conv55 = sext i32 %69 to i64, !dbg !14294
  %mul56 = mul i64 8, %conv55, !dbg !14294
  %call57 = call i8* %65(i8* %67, i64 %mul56, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.vgroup_limit_total_subset, i64 0, i64 0)), !dbg !14294
  %70 = bitcast i8* %call57 to %struct.MDeformWeight*, !dbg !14294
  %71 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !14295
  %dw58 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %71, i32 0, i32 0, !dbg !14296
  store %struct.MDeformWeight* %70, %struct.MDeformWeight** %dw58, align 8, !dbg !14297
  %72 = load i32, i32* %num_to_drop, align 4, !dbg !14298
  %73 = load i32, i32* %remove_tot, align 4, !dbg !14299
  %add59 = add nsw i32 %73, %72, !dbg !14299
  store i32 %add59, i32* %remove_tot, align 4, !dbg !14299
  br label %if.end61, !dbg !14300

if.else60:                                        ; preds = %for.end
  %74 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14301
  %75 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_temp, align 8, !dbg !14303
  %76 = bitcast %struct.MDeformWeight* %75 to i8*, !dbg !14303
  call void %74(i8* %76), !dbg !14301
  br label %if.end61

if.end61:                                         ; preds = %if.else60, %if.then47
  br label %if.end62, !dbg !14304

if.end62:                                         ; preds = %if.end61, %if.end
  br label %for.inc63, !dbg !14305

for.inc63:                                        ; preds = %if.end62, %if.then5
  %77 = load i32, i32* %i, align 4, !dbg !14306
  %inc64 = add nsw i32 %77, 1, !dbg !14306
  store i32 %inc64, i32* %i, align 4, !dbg !14306
  br label %for.cond, !dbg !14307, !llvm.loop !14308

for.end65:                                        ; preds = %for.cond
  %78 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14310
  %79 = load %struct.MDeformVert**, %struct.MDeformVert*** %dvert_array, align 8, !dbg !14311
  %80 = bitcast %struct.MDeformVert** %79 to i8*, !dbg !14311
  call void %78(i8* %80), !dbg !14310
  br label %if.end66, !dbg !14312

if.end66:                                         ; preds = %for.end65, %entry
  %81 = load i32, i32* %remove_tot, align 4, !dbg !14313
  ret i32 %81, !dbg !14314
}

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @inv_cmp_mdef_vert_weights(i8* %a1, i8* %a2) #0 !dbg !14315 {
entry:
  %retval = alloca i32, align 4
  %a1.addr = alloca i8*, align 8
  %a2.addr = alloca i8*, align 8
  %dw1 = alloca %struct.MDeformWeight*, align 8
  %dw2 = alloca %struct.MDeformWeight*, align 8
  store i8* %a1, i8** %a1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a1.addr, metadata !14320, metadata !DIExpression()), !dbg !14321
  store i8* %a2, i8** %a2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a2.addr, metadata !14322, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw1, metadata !14324, metadata !DIExpression()), !dbg !14327
  %0 = load i8*, i8** %a1.addr, align 8, !dbg !14328
  %1 = bitcast i8* %0 to %struct.MDeformWeight*, !dbg !14328
  store %struct.MDeformWeight* %1, %struct.MDeformWeight** %dw1, align 8, !dbg !14327
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw2, metadata !14329, metadata !DIExpression()), !dbg !14330
  %2 = load i8*, i8** %a2.addr, align 8, !dbg !14331
  %3 = bitcast i8* %2 to %struct.MDeformWeight*, !dbg !14331
  store %struct.MDeformWeight* %3, %struct.MDeformWeight** %dw2, align 8, !dbg !14330
  %4 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !14332
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %4, i32 0, i32 1, !dbg !14334
  %5 = load float, float* %weight, align 4, !dbg !14334
  %6 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw2, align 8, !dbg !14335
  %weight1 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %6, i32 0, i32 1, !dbg !14336
  %7 = load float, float* %weight1, align 4, !dbg !14336
  %cmp = fcmp olt float %5, %7, !dbg !14337
  br i1 %cmp, label %if.then, label %if.else, !dbg !14338

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !14339
  br label %return, !dbg !14339

if.else:                                          ; preds = %entry
  %8 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw1, align 8, !dbg !14340
  %weight2 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %8, i32 0, i32 1, !dbg !14342
  %9 = load float, float* %weight2, align 4, !dbg !14342
  %10 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw2, align 8, !dbg !14343
  %weight3 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %10, i32 0, i32 1, !dbg !14344
  %11 = load float, float* %weight3, align 4, !dbg !14344
  %cmp4 = fcmp ogt float %9, %11, !dbg !14345
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !14346

if.then5:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !14347
  br label %return, !dbg !14347

if.else6:                                         ; preds = %if.else
  %cmp7 = icmp ult %struct.MDeformWeight** %dw1, %dw2, !dbg !14348
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !14350

if.then8:                                         ; preds = %if.else6
  store i32 1, i32* %retval, align 4, !dbg !14351
  br label %return, !dbg !14351

if.else9:                                         ; preds = %if.else6
  store i32 -1, i32* %retval, align 4, !dbg !14352
  br label %return, !dbg !14352

return:                                           ; preds = %if.else9, %if.then8, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !14353
  ret i32 %12, !dbg !14353
}

declare dso_local void @ED_mesh_report_mirror(%struct.wmOperator*, i32, i32) #2

declare dso_local i32 @CTX_data_selected_editable_objects(%struct.bContext*, %struct.ListBase*) #2

declare dso_local %struct.bDeformGroup* @defgroup_find_name(%struct.Object*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ed_vgroup_transfer_weight(%struct.Object* %ob_dst, %struct.Object* %ob_src, %struct.bDeformGroup* %dg_src, %struct.Scene* %scene, i32 %method, i32 %replace_mode, %struct.wmOperator* %op) #0 !dbg !14354 {
entry:
  %retval = alloca i8, align 1
  %ob_dst.addr = alloca %struct.Object*, align 8
  %ob_src.addr = alloca %struct.Object*, align 8
  %dg_src.addr = alloca %struct.bDeformGroup*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %method.addr = alloca i32, align 4
  %replace_mode.addr = alloca i32, align 4
  %op.addr = alloca %struct.wmOperator*, align 8
  %dg_dst = alloca %struct.bDeformGroup*, align 8
  %me_dst = alloca %struct.Mesh*, align 8
  %dmesh_src = alloca %struct.DerivedMesh*, align 8
  %tree_mesh_vertices_src = alloca %struct.BVHTreeFromMesh, align 8
  %tree_mesh_faces_src = alloca %struct.BVHTreeFromMesh, align 8
  %dv_array_src = alloca %struct.MDeformVert**, align 8
  %dv_array_dst = alloca %struct.MDeformVert**, align 8
  %dv_src = alloca %struct.MDeformVert**, align 8
  %dv_dst = alloca %struct.MDeformVert**, align 8
  %mv_dst = alloca %struct.MVert*, align 8
  %mv_src = alloca %struct.MVert*, align 8
  %mface_src = alloca %struct.MFace*, align 8
  %mf = alloca %struct.MFace*, align 8
  %nearest = alloca %struct.BVHTreeNearest, align 4
  %dw_dst = alloca %struct.MDeformWeight*, align 8
  %dw_src = alloca %struct.MDeformWeight*, align 8
  %dv_tot_src = alloca i32, align 4
  %dv_tot_dst = alloca i32, align 4
  %i = alloca i32, align 4
  %v_index = alloca i32, align 4
  %index_dst = alloca i32, align 4
  %index_src = alloca i32, align 4
  %index_nearest = alloca i32, align 4
  %index_nearest_vertex = alloca i32, align 4
  %f_index = alloca i32, align 4
  %weight = alloca float, align 4
  %tmp_weight = alloca [4 x float], align 16
  %tmp_co = alloca [3 x float], align 4
  %normal = alloca [3 x float], align 4
  %tmp_mat = alloca [4 x [4 x float]], align 16
  %dist_v1 = alloca float, align 4
  %dist_v2 = alloca float, align 4
  %dist_v3 = alloca float, align 4
  %dist_v4 = alloca float, align 4
  %use_vert_sel = alloca i32, align 4
  %is_dg_dst_new = alloca i8, align 1
  store %struct.Object* %ob_dst, %struct.Object** %ob_dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_dst.addr, metadata !14357, metadata !DIExpression()), !dbg !14358
  store %struct.Object* %ob_src, %struct.Object** %ob_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_src.addr, metadata !14359, metadata !DIExpression()), !dbg !14360
  store %struct.bDeformGroup* %dg_src, %struct.bDeformGroup** %dg_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg_src.addr, metadata !14361, metadata !DIExpression()), !dbg !14362
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14363, metadata !DIExpression()), !dbg !14364
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !14365, metadata !DIExpression()), !dbg !14366
  store i32 %replace_mode, i32* %replace_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %replace_mode.addr, metadata !14367, metadata !DIExpression()), !dbg !14368
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !14369, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg_dst, metadata !14371, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me_dst, metadata !14373, metadata !DIExpression()), !dbg !14374
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dmesh_src, metadata !14375, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.declare(metadata %struct.BVHTreeFromMesh* %tree_mesh_vertices_src, metadata !14377, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.declare(metadata %struct.BVHTreeFromMesh* %tree_mesh_faces_src, metadata !14429, metadata !DIExpression()), !dbg !14430
  %0 = bitcast %struct.BVHTreeFromMesh* %tree_mesh_faces_src to i8*, !dbg !14430
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 72, i1 false), !dbg !14430
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dv_array_src, metadata !14431, metadata !DIExpression()), !dbg !14432
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dv_array_dst, metadata !14433, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dv_src, metadata !14435, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.declare(metadata %struct.MDeformVert*** %dv_dst, metadata !14437, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv_dst, metadata !14439, metadata !DIExpression()), !dbg !14440
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv_src, metadata !14441, metadata !DIExpression()), !dbg !14442
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface_src, metadata !14443, metadata !DIExpression()), !dbg !14446
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !14447, metadata !DIExpression()), !dbg !14448
  call void @llvm.dbg.declare(metadata %struct.BVHTreeNearest* %nearest, metadata !14449, metadata !DIExpression()), !dbg !14450
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_dst, metadata !14451, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw_src, metadata !14453, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.declare(metadata i32* %dv_tot_src, metadata !14455, metadata !DIExpression()), !dbg !14456
  call void @llvm.dbg.declare(metadata i32* %dv_tot_dst, metadata !14457, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14459, metadata !DIExpression()), !dbg !14460
  call void @llvm.dbg.declare(metadata i32* %v_index, metadata !14461, metadata !DIExpression()), !dbg !14462
  call void @llvm.dbg.declare(metadata i32* %index_dst, metadata !14463, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.declare(metadata i32* %index_src, metadata !14465, metadata !DIExpression()), !dbg !14466
  call void @llvm.dbg.declare(metadata i32* %index_nearest, metadata !14467, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.declare(metadata i32* %index_nearest_vertex, metadata !14469, metadata !DIExpression()), !dbg !14470
  call void @llvm.dbg.declare(metadata i32* %f_index, metadata !14471, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.declare(metadata float* %weight, metadata !14473, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.declare(metadata [4 x float]* %tmp_weight, metadata !14475, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp_co, metadata !14477, metadata !DIExpression()), !dbg !14478
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !14479, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmp_mat, metadata !14481, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.declare(metadata float* %dist_v1, metadata !14483, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.declare(metadata float* %dist_v2, metadata !14485, metadata !DIExpression()), !dbg !14486
  call void @llvm.dbg.declare(metadata float* %dist_v3, metadata !14487, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.declare(metadata float* %dist_v4, metadata !14489, metadata !DIExpression()), !dbg !14490
  call void @llvm.dbg.declare(metadata i32* %use_vert_sel, metadata !14491, metadata !DIExpression()), !dbg !14492
  %1 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !14493
  %call = call zeroext i8 @vertex_group_use_vert_sel(%struct.Object* %1), !dbg !14494
  %conv = zext i8 %call to i32, !dbg !14494
  store i32 %conv, i32* %use_vert_sel, align 4, !dbg !14492
  call void @llvm.dbg.declare(metadata i8* %is_dg_dst_new, metadata !14495, metadata !DIExpression()), !dbg !14496
  store i8 0, i8* %is_dg_dst_new, align 1, !dbg !14496
  %2 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !14497
  %3 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_src.addr, align 8, !dbg !14499
  %name = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %3, i32 0, i32 2, !dbg !14500
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !14499
  %call1 = call %struct.bDeformGroup* @defgroup_find_name(%struct.Object* %2, i8* %arraydecay), !dbg !14501
  store %struct.bDeformGroup* %call1, %struct.bDeformGroup** %dg_dst, align 8, !dbg !14502
  %cmp = icmp eq %struct.bDeformGroup* %call1, null, !dbg !14503
  br i1 %cmp, label %if.then, label %if.end, !dbg !14504

if.then:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !14505
  %5 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_src.addr, align 8, !dbg !14507
  %name3 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %5, i32 0, i32 2, !dbg !14508
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %name3, i64 0, i64 0, !dbg !14507
  %call5 = call %struct.bDeformGroup* @BKE_defgroup_new(%struct.Object* %4, i8* %arraydecay4), !dbg !14509
  store %struct.bDeformGroup* %call5, %struct.bDeformGroup** %dg_dst, align 8, !dbg !14510
  store i8 1, i8* %is_dg_dst_new, align 1, !dbg !14511
  br label %if.end, !dbg !14512

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14513
  %7 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !14514
  %8 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !14515
  %or = or i64 %8, 4, !dbg !14516
  %call6 = call %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene* %6, %struct.Object* %7, i64 %or), !dbg !14517
  store %struct.DerivedMesh* %call6, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14518
  %9 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !14519
  %data = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 19, !dbg !14520
  %10 = load i8*, i8** %data, align 8, !dbg !14520
  %11 = bitcast i8* %10 to %struct.Mesh*, !dbg !14519
  store %struct.Mesh* %11, %struct.Mesh** %me_dst, align 8, !dbg !14521
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14522
  %call7 = call zeroext i8 @ed_vgroup_dm_parray_alloc(%struct.DerivedMesh* %12, %struct.MDeformVert*** %dv_array_src, i32* %dv_tot_src), !dbg !14524
  %tobool = icmp ne i8 %call7, 0, !dbg !14524
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !14525

if.then8:                                         ; preds = %if.end
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !14526
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 8, !dbg !14528
  %14 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !14528
  call void @BKE_report(%struct.ReportList* %14, i32 32, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.219, i64 0, i64 0)), !dbg !14529
  store i8 0, i8* %retval, align 1, !dbg !14530
  br label %return, !dbg !14530

if.end9:                                          ; preds = %if.end
  %15 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14531
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 17, !dbg !14533
  %16 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14533
  %tobool10 = icmp ne %struct.MDeformVert* %16, null, !dbg !14531
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !14534

if.then11:                                        ; preds = %if.end9
  %17 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14535
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 0, !dbg !14536
  %call12 = call zeroext i8 @ED_vgroup_data_create(%struct.ID* %id), !dbg !14537
  br label %if.end13, !dbg !14537

if.end13:                                         ; preds = %if.then11, %if.end9
  %18 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14538
  %id14 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 0, !dbg !14539
  %19 = load i32, i32* %use_vert_sel, align 4, !dbg !14540
  %conv15 = trunc i32 %19 to i8, !dbg !14540
  %call16 = call zeroext i8 @ED_vgroup_parray_alloc(%struct.ID* %id14, %struct.MDeformVert*** %dv_array_dst, i32* %dv_tot_dst, i8 zeroext %conv15), !dbg !14541
  %20 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !14542
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 25, !dbg !14543
  %21 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_src.addr, align 8, !dbg !14544
  %22 = bitcast %struct.bDeformGroup* %21 to i8*, !dbg !14544
  %call17 = call i32 @BLI_findindex(%struct.ListBase* %defbase, i8* %22), !dbg !14545
  store i32 %call17, i32* %index_src, align 4, !dbg !14546
  %23 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !14547
  %defbase18 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 25, !dbg !14548
  %24 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_dst, align 8, !dbg !14549
  %25 = bitcast %struct.bDeformGroup* %24 to i8*, !dbg !14549
  %call19 = call i32 @BLI_findindex(%struct.ListBase* %defbase18, i8* %25), !dbg !14550
  store i32 %call19, i32* %index_dst, align 4, !dbg !14551
  %26 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14552
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 15, !dbg !14553
  %27 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14553
  store %struct.MVert* %27, %struct.MVert** %mv_dst, align 8, !dbg !14554
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14555
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 31, !dbg !14556
  %29 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !14556
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14557
  %call20 = call %struct.MVert* %29(%struct.DerivedMesh* %30), !dbg !14555
  store %struct.MVert* %call20, %struct.MVert** %mv_src, align 8, !dbg !14558
  %31 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !14559
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 50, !dbg !14560
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !14559
  %32 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !14561
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 47, !dbg !14562
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !14561
  %call23 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay21, [4 x float]* %arraydecay22), !dbg !14563
  %arraydecay24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmp_mat, i64 0, i64 0, !dbg !14564
  %33 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !14565
  %imat25 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 50, !dbg !14566
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat25, i64 0, i64 0, !dbg !14565
  %34 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !14567
  %obmat27 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 47, !dbg !14568
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat27, i64 0, i64 0, !dbg !14567
  call void @mul_m4_m4m4([4 x float]* %arraydecay24, [4 x float]* %arraydecay26, [4 x float]* %arraydecay28), !dbg !14569
  %35 = load i32, i32* %replace_mode.addr, align 4, !dbg !14570
  %cmp29 = icmp eq i32 %35, 1, !dbg !14572
  br i1 %cmp29, label %if.then31, label %if.end42, !dbg !14573

if.then31:                                        ; preds = %if.end13
  store i32 0, i32* %i, align 4, !dbg !14574
  %36 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !14577
  store %struct.MDeformVert** %36, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14578
  br label %for.cond, !dbg !14579

for.cond:                                         ; preds = %for.inc, %if.then31
  %37 = load i32, i32* %i, align 4, !dbg !14580
  %38 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14582
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %38, i32 0, i32 26, !dbg !14583
  %39 = load i32, i32* %totvert, align 8, !dbg !14583
  %cmp32 = icmp slt i32 %37, %39, !dbg !14584
  br i1 %cmp32, label %for.body, label %for.end, !dbg !14585

for.body:                                         ; preds = %for.cond
  %40 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14586
  %41 = load %struct.MDeformVert*, %struct.MDeformVert** %40, align 8, !dbg !14589
  %cmp34 = icmp eq %struct.MDeformVert* %41, null, !dbg !14590
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !14591

if.then36:                                        ; preds = %for.body
  br label %for.inc, !dbg !14592

if.end37:                                         ; preds = %for.body
  %42 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14593
  %43 = load %struct.MDeformVert*, %struct.MDeformVert** %42, align 8, !dbg !14594
  %44 = load i32, i32* %index_dst, align 4, !dbg !14595
  %call38 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %43, i32 %44), !dbg !14596
  store %struct.MDeformWeight* %call38, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14597
  %45 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14598
  %tobool39 = icmp ne %struct.MDeformWeight* %45, null, !dbg !14598
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !14600

if.then40:                                        ; preds = %if.end37
  %46 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14601
  %47 = load %struct.MDeformVert*, %struct.MDeformVert** %46, align 8, !dbg !14602
  %48 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14603
  call void @defvert_remove_group(%struct.MDeformVert* %47, %struct.MDeformWeight* %48), !dbg !14604
  br label %if.end41, !dbg !14604

if.end41:                                         ; preds = %if.then40, %if.end37
  br label %for.inc, !dbg !14605

for.inc:                                          ; preds = %if.end41, %if.then36
  %49 = load i32, i32* %i, align 4, !dbg !14606
  %inc = add nsw i32 %49, 1, !dbg !14606
  store i32 %inc, i32* %i, align 4, !dbg !14606
  %50 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14607
  %incdec.ptr = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %50, i32 1, !dbg !14607
  store %struct.MDeformVert** %incdec.ptr, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14607
  br label %for.cond, !dbg !14608, !llvm.loop !14609

for.end:                                          ; preds = %for.cond
  br label %if.end42, !dbg !14611

if.end42:                                         ; preds = %for.end, %if.end13
  %51 = load i32, i32* %method.addr, align 4, !dbg !14612
  switch i32 %51, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb93
    i32 3, label %sw.bb125
    i32 4, label %sw.bb217
  ], !dbg !14613

sw.bb:                                            ; preds = %if.end42
  %52 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !14614
  %53 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !14617
  %cmp43 = icmp eq %struct.Object* %52, %53, !dbg !14618
  br i1 %cmp43, label %if.then56, label %lor.lhs.false, !dbg !14619

lor.lhs.false:                                    ; preds = %sw.bb
  %54 = load i32, i32* %dv_tot_dst, align 4, !dbg !14620
  %cmp45 = icmp eq i32 %54, 0, !dbg !14621
  br i1 %cmp45, label %if.then56, label %lor.lhs.false47, !dbg !14622

lor.lhs.false47:                                  ; preds = %lor.lhs.false
  %55 = load i32, i32* %dv_tot_dst, align 4, !dbg !14623
  %56 = load i32, i32* %dv_tot_src, align 4, !dbg !14624
  %cmp48 = icmp ne i32 %55, %56, !dbg !14625
  br i1 %cmp48, label %if.then56, label %lor.lhs.false50, !dbg !14626

lor.lhs.false50:                                  ; preds = %lor.lhs.false47
  %57 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !14627
  %cmp51 = icmp eq %struct.MDeformVert** %57, null, !dbg !14628
  br i1 %cmp51, label %if.then56, label %lor.lhs.false53, !dbg !14629

lor.lhs.false53:                                  ; preds = %lor.lhs.false50
  %58 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !14630
  %cmp54 = icmp eq %struct.MDeformVert** %58, null, !dbg !14631
  br i1 %cmp54, label %if.then56, label %if.end67, !dbg !14632

if.then56:                                        ; preds = %lor.lhs.false53, %lor.lhs.false50, %lor.lhs.false47, %lor.lhs.false, %sw.bb
  %59 = load i8, i8* %is_dg_dst_new, align 1, !dbg !14633
  %tobool57 = icmp ne i8 %59, 0, !dbg !14633
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !14636

if.then58:                                        ; preds = %if.then56
  %60 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !14637
  %61 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg_dst, align 8, !dbg !14639
  call void @ED_vgroup_delete(%struct.Object* %60, %struct.bDeformGroup* %61), !dbg !14640
  br label %if.end59, !dbg !14641

if.end59:                                         ; preds = %if.then58, %if.then56
  %62 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !14642
  %tobool60 = icmp ne %struct.MDeformVert** %62, null, !dbg !14642
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !14644

if.then61:                                        ; preds = %if.end59
  %63 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14645
  %64 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !14646
  %65 = bitcast %struct.MDeformVert** %64 to i8*, !dbg !14646
  call void %63(i8* %65), !dbg !14645
  br label %if.end62, !dbg !14645

if.end62:                                         ; preds = %if.then61, %if.end59
  %66 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !14647
  %tobool63 = icmp ne %struct.MDeformVert** %66, null, !dbg !14647
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !14649

if.then64:                                        ; preds = %if.end62
  %67 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14650
  %68 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !14651
  %69 = bitcast %struct.MDeformVert** %68 to i8*, !dbg !14651
  call void %67(i8* %69), !dbg !14650
  br label %if.end65, !dbg !14650

if.end65:                                         ; preds = %if.then64, %if.end62
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14652
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %70, i32 0, i32 95, !dbg !14653
  %71 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !14653
  %72 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14654
  call void %71(%struct.DerivedMesh* %72), !dbg !14652
  %73 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !14655
  %reports66 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %73, i32 0, i32 8, !dbg !14656
  %74 = load %struct.ReportList*, %struct.ReportList** %reports66, align 8, !dbg !14656
  call void @BKE_report(%struct.ReportList* %74, i32 32, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.220, i64 0, i64 0)), !dbg !14657
  store i8 0, i8* %retval, align 1, !dbg !14658
  br label %return, !dbg !14658

if.end67:                                         ; preds = %lor.lhs.false53
  store i32 0, i32* %i, align 4, !dbg !14659
  %75 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !14661
  store %struct.MDeformVert** %75, %struct.MDeformVert*** %dv_src, align 8, !dbg !14662
  %76 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !14663
  store %struct.MDeformVert** %76, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14664
  br label %for.cond68, !dbg !14665

for.cond68:                                       ; preds = %for.inc86, %if.end67
  %77 = load i32, i32* %i, align 4, !dbg !14666
  %78 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14668
  %totvert69 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %78, i32 0, i32 26, !dbg !14669
  %79 = load i32, i32* %totvert69, align 8, !dbg !14669
  %cmp70 = icmp slt i32 %77, %79, !dbg !14670
  br i1 %cmp70, label %for.body72, label %for.end92, !dbg !14671

for.body72:                                       ; preds = %for.cond68
  %80 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14672
  %81 = load %struct.MDeformVert*, %struct.MDeformVert** %80, align 8, !dbg !14675
  %cmp73 = icmp eq %struct.MDeformVert* %81, null, !dbg !14676
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !14677

if.then75:                                        ; preds = %for.body72
  br label %for.inc86, !dbg !14678

if.end76:                                         ; preds = %for.body72
  %82 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_src, align 8, !dbg !14680
  %83 = load %struct.MDeformVert*, %struct.MDeformVert** %82, align 8, !dbg !14681
  %84 = load i32, i32* %index_src, align 4, !dbg !14682
  %call77 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %83, i32 %84), !dbg !14683
  store %struct.MDeformWeight* %call77, %struct.MDeformWeight** %dw_src, align 8, !dbg !14684
  %85 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !14685
  %tobool78 = icmp ne %struct.MDeformWeight* %85, null, !dbg !14685
  br i1 %tobool78, label %land.lhs.true, label %if.end85, !dbg !14687

land.lhs.true:                                    ; preds = %if.end76
  %86 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !14688
  %weight79 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %86, i32 0, i32 1, !dbg !14689
  %87 = load float, float* %weight79, align 4, !dbg !14689
  %tobool80 = fcmp une float %87, 0.000000e+00, !dbg !14688
  br i1 %tobool80, label %if.then81, label %if.end85, !dbg !14690

if.then81:                                        ; preds = %land.lhs.true
  %88 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14691
  %89 = load %struct.MDeformVert*, %struct.MDeformVert** %88, align 8, !dbg !14693
  %90 = load i32, i32* %index_dst, align 4, !dbg !14694
  %call82 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %89, i32 %90), !dbg !14695
  store %struct.MDeformWeight* %call82, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14696
  %91 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14697
  %weight83 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %91, i32 0, i32 1, !dbg !14698
  %92 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !14699
  %weight84 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %92, i32 0, i32 1, !dbg !14700
  %93 = load float, float* %weight84, align 4, !dbg !14700
  %94 = load i32, i32* %replace_mode.addr, align 4, !dbg !14701
  call void @vgroup_transfer_weight(float* %weight83, float %93, i32 %94), !dbg !14702
  br label %if.end85, !dbg !14703

if.end85:                                         ; preds = %if.then81, %land.lhs.true, %if.end76
  br label %for.inc86, !dbg !14704

for.inc86:                                        ; preds = %if.end85, %if.then75
  %95 = load i32, i32* %i, align 4, !dbg !14705
  %inc87 = add nsw i32 %95, 1, !dbg !14705
  store i32 %inc87, i32* %i, align 4, !dbg !14705
  %96 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14706
  %incdec.ptr88 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %96, i32 1, !dbg !14706
  store %struct.MDeformVert** %incdec.ptr88, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14706
  %97 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_src, align 8, !dbg !14707
  %incdec.ptr89 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %97, i32 1, !dbg !14707
  store %struct.MDeformVert** %incdec.ptr89, %struct.MDeformVert*** %dv_src, align 8, !dbg !14707
  %98 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14708
  %incdec.ptr90 = getelementptr inbounds %struct.MVert, %struct.MVert* %98, i32 1, !dbg !14708
  store %struct.MVert* %incdec.ptr90, %struct.MVert** %mv_src, align 8, !dbg !14708
  %99 = load %struct.MVert*, %struct.MVert** %mv_dst, align 8, !dbg !14709
  %incdec.ptr91 = getelementptr inbounds %struct.MVert, %struct.MVert* %99, i32 1, !dbg !14709
  store %struct.MVert* %incdec.ptr91, %struct.MVert** %mv_dst, align 8, !dbg !14709
  br label %for.cond68, !dbg !14710, !llvm.loop !14711

for.end92:                                        ; preds = %for.cond68
  br label %sw.epilog, !dbg !14713

sw.bb93:                                          ; preds = %if.end42
  %100 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14714
  %call94 = call %struct.BVHTree* @bvhtree_from_mesh_verts(%struct.BVHTreeFromMesh* %tree_mesh_vertices_src, %struct.DerivedMesh* %100, float 0x3E80000000000000, i32 2, i32 6), !dbg !14715
  store i32 0, i32* %i, align 4, !dbg !14716
  %101 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !14718
  store %struct.MDeformVert** %101, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14719
  br label %for.cond95, !dbg !14720

for.cond95:                                       ; preds = %for.inc120, %sw.bb93
  %102 = load i32, i32* %i, align 4, !dbg !14721
  %103 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14723
  %totvert96 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %103, i32 0, i32 26, !dbg !14724
  %104 = load i32, i32* %totvert96, align 8, !dbg !14724
  %cmp97 = icmp slt i32 %102, %104, !dbg !14725
  br i1 %cmp97, label %for.body99, label %for.end124, !dbg !14726

for.body99:                                       ; preds = %for.cond95
  %105 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14727
  %106 = load %struct.MDeformVert*, %struct.MDeformVert** %105, align 8, !dbg !14730
  %cmp100 = icmp eq %struct.MDeformVert* %106, null, !dbg !14731
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !14732

if.then102:                                       ; preds = %for.body99
  br label %for.inc120, !dbg !14733

if.end103:                                        ; preds = %for.body99
  %dist_sq = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 3, !dbg !14735
  store float 0x47EFFFFFE0000000, float* %dist_sq, align 4, !dbg !14736
  %index = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !14737
  store i32 -1, i32* %index, align 4, !dbg !14738
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14739
  %arraydecay105 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmp_mat, i64 0, i64 0, !dbg !14740
  %107 = load %struct.MVert*, %struct.MVert** %mv_dst, align 8, !dbg !14741
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %107, i32 0, i32 0, !dbg !14742
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14741
  call void @mul_v3_m4v3(float* %arraydecay104, [4 x float]* %arraydecay105, float* %arraydecay106), !dbg !14743
  %tree = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %tree_mesh_vertices_src, i32 0, i32 0, !dbg !14744
  %108 = load %struct.BVHTree*, %struct.BVHTree** %tree, align 8, !dbg !14744
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14745
  %nearest_callback = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %tree_mesh_vertices_src, i32 0, i32 1, !dbg !14746
  %109 = load void (i8*, i32, float*, %struct.BVHTreeNearest*)*, void (i8*, i32, float*, %struct.BVHTreeNearest*)** %nearest_callback, align 8, !dbg !14746
  %110 = bitcast %struct.BVHTreeFromMesh* %tree_mesh_vertices_src to i8*, !dbg !14747
  %call108 = call i32 @BLI_bvhtree_find_nearest(%struct.BVHTree* %108, float* %arraydecay107, %struct.BVHTreeNearest* %nearest, void (i8*, i32, float*, %struct.BVHTreeNearest*)* %109, i8* %110), !dbg !14748
  %111 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !14749
  %index109 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !14750
  %112 = load i32, i32* %index109, align 4, !dbg !14750
  %idxprom = sext i32 %112 to i64, !dbg !14749
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %111, i64 %idxprom, !dbg !14749
  %113 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx, align 8, !dbg !14749
  %114 = load i32, i32* %index_src, align 4, !dbg !14751
  %call110 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %113, i32 %114), !dbg !14752
  store %struct.MDeformWeight* %call110, %struct.MDeformWeight** %dw_src, align 8, !dbg !14753
  %115 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !14754
  %tobool111 = icmp ne %struct.MDeformWeight* %115, null, !dbg !14754
  br i1 %tobool111, label %land.lhs.true112, label %if.end119, !dbg !14756

land.lhs.true112:                                 ; preds = %if.end103
  %116 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !14757
  %weight113 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %116, i32 0, i32 1, !dbg !14758
  %117 = load float, float* %weight113, align 4, !dbg !14758
  %tobool114 = fcmp une float %117, 0.000000e+00, !dbg !14757
  br i1 %tobool114, label %if.then115, label %if.end119, !dbg !14759

if.then115:                                       ; preds = %land.lhs.true112
  %118 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14760
  %119 = load %struct.MDeformVert*, %struct.MDeformVert** %118, align 8, !dbg !14762
  %120 = load i32, i32* %index_dst, align 4, !dbg !14763
  %call116 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %119, i32 %120), !dbg !14764
  store %struct.MDeformWeight* %call116, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14765
  %121 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14766
  %weight117 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %121, i32 0, i32 1, !dbg !14767
  %122 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !14768
  %weight118 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %122, i32 0, i32 1, !dbg !14769
  %123 = load float, float* %weight118, align 4, !dbg !14769
  %124 = load i32, i32* %replace_mode.addr, align 4, !dbg !14770
  call void @vgroup_transfer_weight(float* %weight117, float %123, i32 %124), !dbg !14771
  br label %if.end119, !dbg !14772

if.end119:                                        ; preds = %if.then115, %land.lhs.true112, %if.end103
  br label %for.inc120, !dbg !14773

for.inc120:                                       ; preds = %if.end119, %if.then102
  %125 = load i32, i32* %i, align 4, !dbg !14774
  %inc121 = add nsw i32 %125, 1, !dbg !14774
  store i32 %inc121, i32* %i, align 4, !dbg !14774
  %126 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14775
  %incdec.ptr122 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %126, i32 1, !dbg !14775
  store %struct.MDeformVert** %incdec.ptr122, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14775
  %127 = load %struct.MVert*, %struct.MVert** %mv_dst, align 8, !dbg !14776
  %incdec.ptr123 = getelementptr inbounds %struct.MVert, %struct.MVert* %127, i32 1, !dbg !14776
  store %struct.MVert* %incdec.ptr123, %struct.MVert** %mv_dst, align 8, !dbg !14776
  br label %for.cond95, !dbg !14777, !llvm.loop !14778

for.end124:                                       ; preds = %for.cond95
  call void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh* %tree_mesh_vertices_src), !dbg !14780
  br label %sw.epilog, !dbg !14781

sw.bb125:                                         ; preds = %if.end42
  %128 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14782
  call void @DM_ensure_tessface(%struct.DerivedMesh* %128), !dbg !14783
  %129 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14784
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %129, i32 0, i32 33, !dbg !14785
  %130 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !14785
  %131 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14786
  %call126 = call %struct.MFace* %130(%struct.DerivedMesh* %131), !dbg !14784
  store %struct.MFace* %call126, %struct.MFace** %mface_src, align 8, !dbg !14787
  %132 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14788
  %call127 = call %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh* %tree_mesh_faces_src, %struct.DerivedMesh* %132, float 0x3E80000000000000, i32 2, i32 6), !dbg !14789
  store i32 0, i32* %i, align 4, !dbg !14790
  %133 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !14792
  store %struct.MDeformVert** %133, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14793
  br label %for.cond128, !dbg !14794

for.cond128:                                      ; preds = %for.inc212, %sw.bb125
  %134 = load i32, i32* %i, align 4, !dbg !14795
  %135 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14797
  %totvert129 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %135, i32 0, i32 26, !dbg !14798
  %136 = load i32, i32* %totvert129, align 8, !dbg !14798
  %cmp130 = icmp slt i32 %134, %136, !dbg !14799
  br i1 %cmp130, label %for.body132, label %for.end216, !dbg !14800

for.body132:                                      ; preds = %for.cond128
  %137 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14801
  %138 = load %struct.MDeformVert*, %struct.MDeformVert** %137, align 8, !dbg !14804
  %cmp133 = icmp eq %struct.MDeformVert* %138, null, !dbg !14805
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !14806

if.then135:                                       ; preds = %for.body132
  br label %for.inc212, !dbg !14807

if.end136:                                        ; preds = %for.body132
  %dist_sq137 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 3, !dbg !14809
  store float 0x47EFFFFFE0000000, float* %dist_sq137, align 4, !dbg !14810
  %index138 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !14811
  store i32 -1, i32* %index138, align 4, !dbg !14812
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14813
  %arraydecay140 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmp_mat, i64 0, i64 0, !dbg !14814
  %139 = load %struct.MVert*, %struct.MVert** %mv_dst, align 8, !dbg !14815
  %co141 = getelementptr inbounds %struct.MVert, %struct.MVert* %139, i32 0, i32 0, !dbg !14816
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %co141, i64 0, i64 0, !dbg !14815
  call void @mul_v3_m4v3(float* %arraydecay139, [4 x float]* %arraydecay140, float* %arraydecay142), !dbg !14817
  %tree143 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %tree_mesh_faces_src, i32 0, i32 0, !dbg !14818
  %140 = load %struct.BVHTree*, %struct.BVHTree** %tree143, align 8, !dbg !14818
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14819
  %nearest_callback145 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %tree_mesh_faces_src, i32 0, i32 1, !dbg !14820
  %141 = load void (i8*, i32, float*, %struct.BVHTreeNearest*)*, void (i8*, i32, float*, %struct.BVHTreeNearest*)** %nearest_callback145, align 8, !dbg !14820
  %142 = bitcast %struct.BVHTreeFromMesh* %tree_mesh_faces_src to i8*, !dbg !14821
  %call146 = call i32 @BLI_bvhtree_find_nearest(%struct.BVHTree* %140, float* %arraydecay144, %struct.BVHTreeNearest* %nearest, void (i8*, i32, float*, %struct.BVHTreeNearest*)* %141, i8* %142), !dbg !14822
  %index147 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !14823
  %143 = load i32, i32* %index147, align 4, !dbg !14823
  store i32 %143, i32* %index_nearest, align 4, !dbg !14824
  %144 = load %struct.MFace*, %struct.MFace** %mface_src, align 8, !dbg !14825
  %145 = load i32, i32* %index_nearest, align 4, !dbg !14826
  %idxprom148 = sext i32 %145 to i64, !dbg !14825
  %arrayidx149 = getelementptr inbounds %struct.MFace, %struct.MFace* %144, i64 %idxprom148, !dbg !14825
  store %struct.MFace* %arrayidx149, %struct.MFace** %mf, align 8, !dbg !14827
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !14828
  %146 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14829
  %147 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14830
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %147, i32 0, i32 0, !dbg !14831
  %148 = load i32, i32* %v1, align 4, !dbg !14831
  %idxprom151 = zext i32 %148 to i64, !dbg !14829
  %arrayidx152 = getelementptr inbounds %struct.MVert, %struct.MVert* %146, i64 %idxprom151, !dbg !14829
  %co153 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx152, i32 0, i32 0, !dbg !14832
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %co153, i64 0, i64 0, !dbg !14829
  %149 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14833
  %150 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14834
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %150, i32 0, i32 1, !dbg !14835
  %151 = load i32, i32* %v2, align 4, !dbg !14835
  %idxprom155 = zext i32 %151 to i64, !dbg !14833
  %arrayidx156 = getelementptr inbounds %struct.MVert, %struct.MVert* %149, i64 %idxprom155, !dbg !14833
  %co157 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx156, i32 0, i32 0, !dbg !14836
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %co157, i64 0, i64 0, !dbg !14833
  %152 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14837
  %153 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14838
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %153, i32 0, i32 2, !dbg !14839
  %154 = load i32, i32* %v3, align 4, !dbg !14839
  %idxprom159 = zext i32 %154 to i64, !dbg !14837
  %arrayidx160 = getelementptr inbounds %struct.MVert, %struct.MVert* %152, i64 %idxprom159, !dbg !14837
  %co161 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx160, i32 0, i32 0, !dbg !14840
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %co161, i64 0, i64 0, !dbg !14837
  %call163 = call float @normal_tri_v3(float* %arraydecay150, float* %arraydecay154, float* %arraydecay158, float* %arraydecay162), !dbg !14841
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14842
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !14843
  %155 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14844
  %156 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14845
  %v1166 = getelementptr inbounds %struct.MFace, %struct.MFace* %156, i32 0, i32 0, !dbg !14846
  %157 = load i32, i32* %v1166, align 4, !dbg !14846
  %idxprom167 = zext i32 %157 to i64, !dbg !14844
  %arrayidx168 = getelementptr inbounds %struct.MVert, %struct.MVert* %155, i64 %idxprom167, !dbg !14844
  %co169 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx168, i32 0, i32 0, !dbg !14847
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %co169, i64 0, i64 0, !dbg !14844
  call void @project_v3_plane(float* %arraydecay164, float* %arraydecay165, float* %arraydecay170), !dbg !14848
  %arraydecay171 = getelementptr inbounds [4 x float], [4 x float]* %tmp_weight, i64 0, i64 0, !dbg !14849
  %158 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14850
  %159 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14851
  %v1172 = getelementptr inbounds %struct.MFace, %struct.MFace* %159, i32 0, i32 0, !dbg !14852
  %160 = load i32, i32* %v1172, align 4, !dbg !14852
  %idxprom173 = zext i32 %160 to i64, !dbg !14850
  %arrayidx174 = getelementptr inbounds %struct.MVert, %struct.MVert* %158, i64 %idxprom173, !dbg !14850
  %co175 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx174, i32 0, i32 0, !dbg !14853
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %co175, i64 0, i64 0, !dbg !14850
  %161 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14854
  %162 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14855
  %v2177 = getelementptr inbounds %struct.MFace, %struct.MFace* %162, i32 0, i32 1, !dbg !14856
  %163 = load i32, i32* %v2177, align 4, !dbg !14856
  %idxprom178 = zext i32 %163 to i64, !dbg !14854
  %arrayidx179 = getelementptr inbounds %struct.MVert, %struct.MVert* %161, i64 %idxprom178, !dbg !14854
  %co180 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx179, i32 0, i32 0, !dbg !14857
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %co180, i64 0, i64 0, !dbg !14854
  %164 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14858
  %165 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14859
  %v3182 = getelementptr inbounds %struct.MFace, %struct.MFace* %165, i32 0, i32 2, !dbg !14860
  %166 = load i32, i32* %v3182, align 4, !dbg !14860
  %idxprom183 = zext i32 %166 to i64, !dbg !14858
  %arrayidx184 = getelementptr inbounds %struct.MVert, %struct.MVert* %164, i64 %idxprom183, !dbg !14858
  %co185 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx184, i32 0, i32 0, !dbg !14861
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %co185, i64 0, i64 0, !dbg !14858
  %167 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14862
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %167, i32 0, i32 3, !dbg !14863
  %168 = load i32, i32* %v4, align 4, !dbg !14863
  %tobool187 = icmp ne i32 %168, 0, !dbg !14862
  br i1 %tobool187, label %cond.true, label %cond.false, !dbg !14862

cond.true:                                        ; preds = %if.end136
  %169 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14864
  %170 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14865
  %v4188 = getelementptr inbounds %struct.MFace, %struct.MFace* %170, i32 0, i32 3, !dbg !14866
  %171 = load i32, i32* %v4188, align 4, !dbg !14866
  %idxprom189 = zext i32 %171 to i64, !dbg !14864
  %arrayidx190 = getelementptr inbounds %struct.MVert, %struct.MVert* %169, i64 %idxprom189, !dbg !14864
  %co191 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx190, i32 0, i32 0, !dbg !14867
  %arraydecay192 = getelementptr inbounds [3 x float], [3 x float]* %co191, i64 0, i64 0, !dbg !14864
  br label %cond.end, !dbg !14862

cond.false:                                       ; preds = %if.end136
  br label %cond.end, !dbg !14862

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay192, %cond.true ], [ null, %cond.false ], !dbg !14862
  %arraydecay193 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14868
  call void @interp_weights_face_v3(float* %arraydecay171, float* %arraydecay176, float* %arraydecay181, float* %arraydecay186, float* %cond, float* %arraydecay193), !dbg !14869
  %172 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14870
  %v4194 = getelementptr inbounds %struct.MFace, %struct.MFace* %172, i32 0, i32 3, !dbg !14871
  %173 = load i32, i32* %v4194, align 4, !dbg !14871
  %tobool195 = icmp ne i32 %173, 0, !dbg !14870
  %174 = zext i1 %tobool195 to i64, !dbg !14870
  %cond196 = select i1 %tobool195, i32 3, i32 2, !dbg !14870
  store i32 %cond196, i32* %f_index, align 4, !dbg !14872
  store float 0.000000e+00, float* %weight, align 4, !dbg !14873
  br label %do.body, !dbg !14874

do.body:                                          ; preds = %do.cond, %cond.end
  %175 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14875
  %v1197 = getelementptr inbounds %struct.MFace, %struct.MFace* %175, i32 0, i32 0, !dbg !14877
  %176 = load i32, i32* %f_index, align 4, !dbg !14878
  %idxprom198 = zext i32 %176 to i64, !dbg !14879
  %arrayidx199 = getelementptr inbounds i32, i32* %v1197, i64 %idxprom198, !dbg !14879
  %177 = load i32, i32* %arrayidx199, align 4, !dbg !14879
  store i32 %177, i32* %v_index, align 4, !dbg !14880
  %178 = load i32, i32* %f_index, align 4, !dbg !14881
  %idxprom200 = zext i32 %178 to i64, !dbg !14882
  %arrayidx201 = getelementptr inbounds [4 x float], [4 x float]* %tmp_weight, i64 0, i64 %idxprom200, !dbg !14882
  %179 = load float, float* %arrayidx201, align 4, !dbg !14882
  %180 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !14883
  %181 = load i32, i32* %v_index, align 4, !dbg !14884
  %idxprom202 = sext i32 %181 to i64, !dbg !14883
  %arrayidx203 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %180, i64 %idxprom202, !dbg !14883
  %182 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx203, align 8, !dbg !14883
  %183 = load i32, i32* %index_src, align 4, !dbg !14885
  %call204 = call float @defvert_find_weight(%struct.MDeformVert* %182, i32 %183), !dbg !14886
  %mul = fmul float %179, %call204, !dbg !14887
  %184 = load float, float* %weight, align 4, !dbg !14888
  %add = fadd float %184, %mul, !dbg !14888
  store float %add, float* %weight, align 4, !dbg !14888
  br label %do.cond, !dbg !14889

do.cond:                                          ; preds = %do.body
  %185 = load i32, i32* %f_index, align 4, !dbg !14890
  %dec = add i32 %185, -1, !dbg !14890
  store i32 %dec, i32* %f_index, align 4, !dbg !14890
  %tobool205 = icmp ne i32 %185, 0, !dbg !14889
  br i1 %tobool205, label %do.body, label %do.end, !dbg !14889, !llvm.loop !14891

do.end:                                           ; preds = %do.cond
  %186 = load float, float* %weight, align 4, !dbg !14893
  %cmp206 = fcmp ogt float %186, 0.000000e+00, !dbg !14895
  br i1 %cmp206, label %if.then208, label %if.end211, !dbg !14896

if.then208:                                       ; preds = %do.end
  %187 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14897
  %188 = load %struct.MDeformVert*, %struct.MDeformVert** %187, align 8, !dbg !14899
  %189 = load i32, i32* %index_dst, align 4, !dbg !14900
  %call209 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %188, i32 %189), !dbg !14901
  store %struct.MDeformWeight* %call209, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14902
  %190 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_dst, align 8, !dbg !14903
  %weight210 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %190, i32 0, i32 1, !dbg !14904
  %191 = load float, float* %weight, align 4, !dbg !14905
  %192 = load i32, i32* %replace_mode.addr, align 4, !dbg !14906
  call void @vgroup_transfer_weight(float* %weight210, float %191, i32 %192), !dbg !14907
  br label %if.end211, !dbg !14908

if.end211:                                        ; preds = %if.then208, %do.end
  br label %for.inc212, !dbg !14909

for.inc212:                                       ; preds = %if.end211, %if.then135
  %193 = load i32, i32* %i, align 4, !dbg !14910
  %inc213 = add nsw i32 %193, 1, !dbg !14910
  store i32 %inc213, i32* %i, align 4, !dbg !14910
  %194 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14911
  %incdec.ptr214 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %194, i32 1, !dbg !14911
  store %struct.MDeformVert** %incdec.ptr214, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14911
  %195 = load %struct.MVert*, %struct.MVert** %mv_dst, align 8, !dbg !14912
  %incdec.ptr215 = getelementptr inbounds %struct.MVert, %struct.MVert* %195, i32 1, !dbg !14912
  store %struct.MVert* %incdec.ptr215, %struct.MVert** %mv_dst, align 8, !dbg !14912
  br label %for.cond128, !dbg !14913, !llvm.loop !14914

for.end216:                                       ; preds = %for.cond128
  call void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh* %tree_mesh_faces_src), !dbg !14916
  br label %sw.epilog, !dbg !14917

sw.bb217:                                         ; preds = %if.end42
  %196 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14918
  call void @DM_ensure_tessface(%struct.DerivedMesh* %196), !dbg !14919
  %197 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14920
  %getTessFaceArray218 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %197, i32 0, i32 33, !dbg !14921
  %198 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray218, align 8, !dbg !14921
  %199 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14922
  %call219 = call %struct.MFace* %198(%struct.DerivedMesh* %199), !dbg !14920
  store %struct.MFace* %call219, %struct.MFace** %mface_src, align 8, !dbg !14923
  %200 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !14924
  %call220 = call %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh* %tree_mesh_faces_src, %struct.DerivedMesh* %200, float 0x3E80000000000000, i32 2, i32 6), !dbg !14925
  store i32 0, i32* %i, align 4, !dbg !14926
  %201 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !14928
  store %struct.MDeformVert** %201, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14929
  br label %for.cond221, !dbg !14930

for.cond221:                                      ; preds = %for.inc316, %sw.bb217
  %202 = load i32, i32* %i, align 4, !dbg !14931
  %203 = load %struct.Mesh*, %struct.Mesh** %me_dst, align 8, !dbg !14933
  %totvert222 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %203, i32 0, i32 26, !dbg !14934
  %204 = load i32, i32* %totvert222, align 8, !dbg !14934
  %cmp223 = icmp slt i32 %202, %204, !dbg !14935
  br i1 %cmp223, label %for.body225, label %for.end320, !dbg !14936

for.body225:                                      ; preds = %for.cond221
  %205 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !14937
  %206 = load %struct.MDeformVert*, %struct.MDeformVert** %205, align 8, !dbg !14940
  %cmp226 = icmp eq %struct.MDeformVert* %206, null, !dbg !14941
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !14942

if.then228:                                       ; preds = %for.body225
  br label %for.inc316, !dbg !14943

if.end229:                                        ; preds = %for.body225
  %dist_sq230 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 3, !dbg !14945
  store float 0x47EFFFFFE0000000, float* %dist_sq230, align 4, !dbg !14946
  %index231 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !14947
  store i32 -1, i32* %index231, align 4, !dbg !14948
  %arraydecay232 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14949
  %arraydecay233 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmp_mat, i64 0, i64 0, !dbg !14950
  %207 = load %struct.MVert*, %struct.MVert** %mv_dst, align 8, !dbg !14951
  %co234 = getelementptr inbounds %struct.MVert, %struct.MVert* %207, i32 0, i32 0, !dbg !14952
  %arraydecay235 = getelementptr inbounds [3 x float], [3 x float]* %co234, i64 0, i64 0, !dbg !14951
  call void @mul_v3_m4v3(float* %arraydecay232, [4 x float]* %arraydecay233, float* %arraydecay235), !dbg !14953
  %tree236 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %tree_mesh_faces_src, i32 0, i32 0, !dbg !14954
  %208 = load %struct.BVHTree*, %struct.BVHTree** %tree236, align 8, !dbg !14954
  %arraydecay237 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14955
  %nearest_callback238 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %tree_mesh_faces_src, i32 0, i32 1, !dbg !14956
  %209 = load void (i8*, i32, float*, %struct.BVHTreeNearest*)*, void (i8*, i32, float*, %struct.BVHTreeNearest*)** %nearest_callback238, align 8, !dbg !14956
  %210 = bitcast %struct.BVHTreeFromMesh* %tree_mesh_faces_src to i8*, !dbg !14957
  %call239 = call i32 @BLI_bvhtree_find_nearest(%struct.BVHTree* %208, float* %arraydecay237, %struct.BVHTreeNearest* %nearest, void (i8*, i32, float*, %struct.BVHTreeNearest*)* %209, i8* %210), !dbg !14958
  %index240 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !14959
  %211 = load i32, i32* %index240, align 4, !dbg !14959
  store i32 %211, i32* %index_nearest, align 4, !dbg !14960
  %212 = load %struct.MFace*, %struct.MFace** %mface_src, align 8, !dbg !14961
  %213 = load i32, i32* %index_nearest, align 4, !dbg !14962
  %idxprom241 = sext i32 %213 to i64, !dbg !14961
  %arrayidx242 = getelementptr inbounds %struct.MFace, %struct.MFace* %212, i64 %idxprom241, !dbg !14961
  store %struct.MFace* %arrayidx242, %struct.MFace** %mf, align 8, !dbg !14963
  %arraydecay243 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14964
  %214 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14965
  %215 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14966
  %v1244 = getelementptr inbounds %struct.MFace, %struct.MFace* %215, i32 0, i32 0, !dbg !14967
  %216 = load i32, i32* %v1244, align 4, !dbg !14967
  %idxprom245 = zext i32 %216 to i64, !dbg !14965
  %arrayidx246 = getelementptr inbounds %struct.MVert, %struct.MVert* %214, i64 %idxprom245, !dbg !14965
  %co247 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx246, i32 0, i32 0, !dbg !14968
  %arraydecay248 = getelementptr inbounds [3 x float], [3 x float]* %co247, i64 0, i64 0, !dbg !14965
  %call249 = call float @len_squared_v3v3(float* %arraydecay243, float* %arraydecay248), !dbg !14969
  store float %call249, float* %dist_v1, align 4, !dbg !14970
  %arraydecay250 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14971
  %217 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14972
  %218 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14973
  %v2251 = getelementptr inbounds %struct.MFace, %struct.MFace* %218, i32 0, i32 1, !dbg !14974
  %219 = load i32, i32* %v2251, align 4, !dbg !14974
  %idxprom252 = zext i32 %219 to i64, !dbg !14972
  %arrayidx253 = getelementptr inbounds %struct.MVert, %struct.MVert* %217, i64 %idxprom252, !dbg !14972
  %co254 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx253, i32 0, i32 0, !dbg !14975
  %arraydecay255 = getelementptr inbounds [3 x float], [3 x float]* %co254, i64 0, i64 0, !dbg !14972
  %call256 = call float @len_squared_v3v3(float* %arraydecay250, float* %arraydecay255), !dbg !14976
  store float %call256, float* %dist_v2, align 4, !dbg !14977
  %arraydecay257 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !14978
  %220 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !14979
  %221 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14980
  %v3258 = getelementptr inbounds %struct.MFace, %struct.MFace* %221, i32 0, i32 2, !dbg !14981
  %222 = load i32, i32* %v3258, align 4, !dbg !14981
  %idxprom259 = zext i32 %222 to i64, !dbg !14979
  %arrayidx260 = getelementptr inbounds %struct.MVert, %struct.MVert* %220, i64 %idxprom259, !dbg !14979
  %co261 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx260, i32 0, i32 0, !dbg !14982
  %arraydecay262 = getelementptr inbounds [3 x float], [3 x float]* %co261, i64 0, i64 0, !dbg !14979
  %call263 = call float @len_squared_v3v3(float* %arraydecay257, float* %arraydecay262), !dbg !14983
  store float %call263, float* %dist_v3, align 4, !dbg !14984
  %223 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14985
  %v4264 = getelementptr inbounds %struct.MFace, %struct.MFace* %223, i32 0, i32 3, !dbg !14986
  %224 = load i32, i32* %v4264, align 4, !dbg !14986
  %tobool265 = icmp ne i32 %224, 0, !dbg !14985
  %225 = zext i1 %tobool265 to i64, !dbg !14985
  %cond266 = select i1 %tobool265, i32 3, i32 2, !dbg !14985
  store i32 %cond266, i32* %f_index, align 4, !dbg !14987
  %226 = load float, float* %dist_v1, align 4, !dbg !14988
  %227 = load float, float* %dist_v2, align 4, !dbg !14990
  %cmp267 = fcmp olt float %226, %227, !dbg !14991
  br i1 %cmp267, label %land.lhs.true269, label %if.else, !dbg !14992

land.lhs.true269:                                 ; preds = %if.end229
  %228 = load float, float* %dist_v1, align 4, !dbg !14993
  %229 = load float, float* %dist_v3, align 4, !dbg !14994
  %cmp270 = fcmp olt float %228, %229, !dbg !14995
  br i1 %cmp270, label %if.then272, label %if.else, !dbg !14996

if.then272:                                       ; preds = %land.lhs.true269
  %230 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14997
  %v1273 = getelementptr inbounds %struct.MFace, %struct.MFace* %230, i32 0, i32 0, !dbg !14998
  %231 = load i32, i32* %v1273, align 4, !dbg !14998
  store i32 %231, i32* %index_nearest_vertex, align 4, !dbg !14999
  br label %if.end281, !dbg !15000

if.else:                                          ; preds = %land.lhs.true269, %if.end229
  %232 = load float, float* %dist_v2, align 4, !dbg !15001
  %233 = load float, float* %dist_v3, align 4, !dbg !15003
  %cmp274 = fcmp olt float %232, %233, !dbg !15004
  br i1 %cmp274, label %if.then276, label %if.else278, !dbg !15005

if.then276:                                       ; preds = %if.else
  %234 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15006
  %v2277 = getelementptr inbounds %struct.MFace, %struct.MFace* %234, i32 0, i32 1, !dbg !15007
  %235 = load i32, i32* %v2277, align 4, !dbg !15007
  store i32 %235, i32* %index_nearest_vertex, align 4, !dbg !15008
  br label %if.end280, !dbg !15009

if.else278:                                       ; preds = %if.else
  %236 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15010
  %v3279 = getelementptr inbounds %struct.MFace, %struct.MFace* %236, i32 0, i32 2, !dbg !15011
  %237 = load i32, i32* %v3279, align 4, !dbg !15011
  store i32 %237, i32* %index_nearest_vertex, align 4, !dbg !15012
  br label %if.end280

if.end280:                                        ; preds = %if.else278, %if.then276
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then272
  %238 = load i32, i32* %f_index, align 4, !dbg !15013
  %cmp282 = icmp eq i32 %238, 3, !dbg !15015
  br i1 %cmp282, label %if.then284, label %if.end303, !dbg !15016

if.then284:                                       ; preds = %if.end281
  %arraydecay285 = getelementptr inbounds [3 x float], [3 x float]* %tmp_co, i64 0, i64 0, !dbg !15017
  %239 = load %struct.MVert*, %struct.MVert** %mv_src, align 8, !dbg !15019
  %240 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15020
  %v4286 = getelementptr inbounds %struct.MFace, %struct.MFace* %240, i32 0, i32 3, !dbg !15021
  %241 = load i32, i32* %v4286, align 4, !dbg !15021
  %idxprom287 = zext i32 %241 to i64, !dbg !15019
  %arrayidx288 = getelementptr inbounds %struct.MVert, %struct.MVert* %239, i64 %idxprom287, !dbg !15019
  %co289 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx288, i32 0, i32 0, !dbg !15022
  %arraydecay290 = getelementptr inbounds [3 x float], [3 x float]* %co289, i64 0, i64 0, !dbg !15019
  %call291 = call float @len_squared_v3v3(float* %arraydecay285, float* %arraydecay290), !dbg !15023
  store float %call291, float* %dist_v4, align 4, !dbg !15024
  %242 = load float, float* %dist_v4, align 4, !dbg !15025
  %243 = load float, float* %dist_v1, align 4, !dbg !15027
  %cmp292 = fcmp olt float %242, %243, !dbg !15028
  br i1 %cmp292, label %land.lhs.true294, label %if.end302, !dbg !15029

land.lhs.true294:                                 ; preds = %if.then284
  %244 = load float, float* %dist_v4, align 4, !dbg !15030
  %245 = load float, float* %dist_v2, align 4, !dbg !15031
  %cmp295 = fcmp olt float %244, %245, !dbg !15032
  br i1 %cmp295, label %land.lhs.true297, label %if.end302, !dbg !15033

land.lhs.true297:                                 ; preds = %land.lhs.true294
  %246 = load float, float* %dist_v4, align 4, !dbg !15034
  %247 = load float, float* %dist_v3, align 4, !dbg !15035
  %cmp298 = fcmp olt float %246, %247, !dbg !15036
  br i1 %cmp298, label %if.then300, label %if.end302, !dbg !15037

if.then300:                                       ; preds = %land.lhs.true297
  %248 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15038
  %v4301 = getelementptr inbounds %struct.MFace, %struct.MFace* %248, i32 0, i32 3, !dbg !15040
  %249 = load i32, i32* %v4301, align 4, !dbg !15040
  store i32 %249, i32* %index_nearest_vertex, align 4, !dbg !15041
  br label %if.end302, !dbg !15042

if.end302:                                        ; preds = %if.then300, %land.lhs.true297, %land.lhs.true294, %if.then284
  br label %if.end303, !dbg !15043

if.end303:                                        ; preds = %if.end302, %if.end281
  %250 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !15044
  %251 = load i32, i32* %index_nearest_vertex, align 4, !dbg !15045
  %idxprom304 = sext i32 %251 to i64, !dbg !15044
  %arrayidx305 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %250, i64 %idxprom304, !dbg !15044
  %252 = load %struct.MDeformVert*, %struct.MDeformVert** %arrayidx305, align 8, !dbg !15044
  %253 = load i32, i32* %index_src, align 4, !dbg !15046
  %call306 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %252, i32 %253), !dbg !15047
  store %struct.MDeformWeight* %call306, %struct.MDeformWeight** %dw_src, align 8, !dbg !15048
  %254 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !15049
  %tobool307 = icmp ne %struct.MDeformWeight* %254, null, !dbg !15049
  br i1 %tobool307, label %land.lhs.true308, label %if.end315, !dbg !15051

land.lhs.true308:                                 ; preds = %if.end303
  %255 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !15052
  %weight309 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %255, i32 0, i32 1, !dbg !15053
  %256 = load float, float* %weight309, align 4, !dbg !15053
  %tobool310 = fcmp une float %256, 0.000000e+00, !dbg !15052
  br i1 %tobool310, label %if.then311, label %if.end315, !dbg !15054

if.then311:                                       ; preds = %land.lhs.true308
  %257 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !15055
  %258 = load %struct.MDeformVert*, %struct.MDeformVert** %257, align 8, !dbg !15057
  %259 = load i32, i32* %index_dst, align 4, !dbg !15058
  %call312 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %258, i32 %259), !dbg !15059
  store %struct.MDeformWeight* %call312, %struct.MDeformWeight** %dw_dst, align 8, !dbg !15060
  %260 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_dst, align 8, !dbg !15061
  %weight313 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %260, i32 0, i32 1, !dbg !15062
  %261 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw_src, align 8, !dbg !15063
  %weight314 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %261, i32 0, i32 1, !dbg !15064
  %262 = load float, float* %weight314, align 4, !dbg !15064
  %263 = load i32, i32* %replace_mode.addr, align 4, !dbg !15065
  call void @vgroup_transfer_weight(float* %weight313, float %262, i32 %263), !dbg !15066
  br label %if.end315, !dbg !15067

if.end315:                                        ; preds = %if.then311, %land.lhs.true308, %if.end303
  br label %for.inc316, !dbg !15068

for.inc316:                                       ; preds = %if.end315, %if.then228
  %264 = load i32, i32* %i, align 4, !dbg !15069
  %inc317 = add nsw i32 %264, 1, !dbg !15069
  store i32 %inc317, i32* %i, align 4, !dbg !15069
  %265 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_dst, align 8, !dbg !15070
  %incdec.ptr318 = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %265, i32 1, !dbg !15070
  store %struct.MDeformVert** %incdec.ptr318, %struct.MDeformVert*** %dv_dst, align 8, !dbg !15070
  %266 = load %struct.MVert*, %struct.MVert** %mv_dst, align 8, !dbg !15071
  %incdec.ptr319 = getelementptr inbounds %struct.MVert, %struct.MVert* %266, i32 1, !dbg !15071
  store %struct.MVert* %incdec.ptr319, %struct.MVert** %mv_dst, align 8, !dbg !15071
  br label %for.cond221, !dbg !15072, !llvm.loop !15073

for.end320:                                       ; preds = %for.cond221
  call void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh* %tree_mesh_faces_src), !dbg !15075
  br label %sw.epilog, !dbg !15076

sw.default:                                       ; preds = %if.end42
  br label %sw.epilog, !dbg !15077

sw.epilog:                                        ; preds = %sw.default, %for.end320, %for.end216, %for.end124, %for.end92
  %267 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !15078
  %tobool321 = icmp ne %struct.MDeformVert** %267, null, !dbg !15078
  br i1 %tobool321, label %if.then322, label %if.end323, !dbg !15080

if.then322:                                       ; preds = %sw.epilog
  %268 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15081
  %269 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_src, align 8, !dbg !15082
  %270 = bitcast %struct.MDeformVert** %269 to i8*, !dbg !15082
  call void %268(i8* %270), !dbg !15081
  br label %if.end323, !dbg !15081

if.end323:                                        ; preds = %if.then322, %sw.epilog
  %271 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !15083
  %tobool324 = icmp ne %struct.MDeformVert** %271, null, !dbg !15083
  br i1 %tobool324, label %if.then325, label %if.end326, !dbg !15085

if.then325:                                       ; preds = %if.end323
  %272 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15086
  %273 = load %struct.MDeformVert**, %struct.MDeformVert*** %dv_array_dst, align 8, !dbg !15087
  %274 = bitcast %struct.MDeformVert** %273 to i8*, !dbg !15087
  call void %272(i8* %274), !dbg !15086
  br label %if.end326, !dbg !15086

if.end326:                                        ; preds = %if.then325, %if.end323
  %275 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !15088
  %release327 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %275, i32 0, i32 95, !dbg !15089
  %276 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release327, align 8, !dbg !15089
  %277 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dmesh_src, align 8, !dbg !15090
  call void %276(%struct.DerivedMesh* %277), !dbg !15088
  store i8 1, i8* %retval, align 1, !dbg !15091
  br label %return, !dbg !15091

return:                                           ; preds = %if.end326, %if.end65, %if.then8
  %278 = load i8, i8* %retval, align 1, !dbg !15092
  ret i8 %278, !dbg !15092
}

declare dso_local %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene*, %struct.Object*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ed_vgroup_dm_parray_alloc(%struct.DerivedMesh* %dm, %struct.MDeformVert*** %dvert_arr, i32* %dvert_tot) #0 !dbg !15093 {
entry:
  %retval = alloca i8, align 1
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %dvert_arr.addr = alloca %struct.MDeformVert***, align 8
  %dvert_tot.addr = alloca i32*, align 8
  %dvert = alloca %struct.MDeformVert*, align 8
  %i = alloca i32, align 4
  %totvert = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !15096, metadata !DIExpression()), !dbg !15097
  store %struct.MDeformVert*** %dvert_arr, %struct.MDeformVert**** %dvert_arr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDeformVert**** %dvert_arr.addr, metadata !15098, metadata !DIExpression()), !dbg !15099
  store i32* %dvert_tot, i32** %dvert_tot.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dvert_tot.addr, metadata !15100, metadata !DIExpression()), !dbg !15101
  %0 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !15102
  store i32 0, i32* %0, align 4, !dbg !15103
  %1 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !15104
  store %struct.MDeformVert** null, %struct.MDeformVert*** %1, align 8, !dbg !15105
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15106
  %tobool = icmp ne %struct.DerivedMesh* %2, null, !dbg !15106
  br i1 %tobool, label %if.then, label %if.end6, !dbg !15108

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !15109, metadata !DIExpression()), !dbg !15111
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15112
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 50, !dbg !15113
  %4 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !15113
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15114
  %call = call i8* %4(%struct.DerivedMesh* %5, i32 2), !dbg !15112
  %6 = bitcast i8* %call to %struct.MDeformVert*, !dbg !15112
  store %struct.MDeformVert* %6, %struct.MDeformVert** %dvert, align 8, !dbg !15111
  %7 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15115
  %tobool1 = icmp ne %struct.MDeformVert* %7, null, !dbg !15115
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !15117

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15118, metadata !DIExpression()), !dbg !15120
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !15121, metadata !DIExpression()), !dbg !15122
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15123
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 23, !dbg !15124
  %9 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !15124
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15125
  %call3 = call i32 %9(%struct.DerivedMesh* %10), !dbg !15123
  store i32 %call3, i32* %totvert, align 4, !dbg !15122
  %11 = load i32, i32* %totvert, align 4, !dbg !15126
  %12 = load i32*, i32** %dvert_tot.addr, align 8, !dbg !15127
  store i32 %11, i32* %12, align 4, !dbg !15128
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !15129
  %14 = load i32, i32* %totvert, align 4, !dbg !15130
  %conv = sext i32 %14 to i64, !dbg !15130
  %mul = mul i64 8, %conv, !dbg !15131
  %call4 = call i8* %13(i64 %mul, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)), !dbg !15129
  %15 = bitcast i8* %call4 to %struct.MDeformVert**, !dbg !15129
  %16 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !15132
  store %struct.MDeformVert** %15, %struct.MDeformVert*** %16, align 8, !dbg !15133
  store i32 0, i32* %i, align 4, !dbg !15134
  br label %for.cond, !dbg !15136

for.cond:                                         ; preds = %for.inc, %if.then2
  %17 = load i32, i32* %i, align 4, !dbg !15137
  %18 = load i32, i32* %totvert, align 4, !dbg !15139
  %cmp = icmp slt i32 %17, %18, !dbg !15140
  br i1 %cmp, label %for.body, label %for.end, !dbg !15141

for.body:                                         ; preds = %for.cond
  %19 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15142
  %20 = load i32, i32* %i, align 4, !dbg !15144
  %idx.ext = sext i32 %20 to i64, !dbg !15145
  %add.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %19, i64 %idx.ext, !dbg !15145
  %21 = load %struct.MDeformVert***, %struct.MDeformVert**** %dvert_arr.addr, align 8, !dbg !15146
  %22 = load %struct.MDeformVert**, %struct.MDeformVert*** %21, align 8, !dbg !15147
  %23 = load i32, i32* %i, align 4, !dbg !15148
  %idxprom = sext i32 %23 to i64, !dbg !15149
  %arrayidx = getelementptr inbounds %struct.MDeformVert*, %struct.MDeformVert** %22, i64 %idxprom, !dbg !15149
  store %struct.MDeformVert* %add.ptr, %struct.MDeformVert** %arrayidx, align 8, !dbg !15150
  br label %for.inc, !dbg !15151

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !15152
  %inc = add nsw i32 %24, 1, !dbg !15152
  store i32 %inc, i32* %i, align 4, !dbg !15152
  br label %for.cond, !dbg !15153, !llvm.loop !15154

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !15156
  br label %return, !dbg !15156

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !15157

if.end6:                                          ; preds = %if.end, %entry
  store i8 0, i8* %retval, align 1, !dbg !15158
  br label %return, !dbg !15158

return:                                           ; preds = %if.end6, %for.end
  %25 = load i8, i8* %retval, align 1, !dbg !15159
  ret i8 %25, !dbg !15159
}

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_transfer_weight(float* %r_weight_dst, float %weight_src, i32 %replace_mode) #0 !dbg !15160 {
entry:
  %r_weight_dst.addr = alloca float*, align 8
  %weight_src.addr = alloca float, align 4
  %replace_mode.addr = alloca i32, align 4
  store float* %r_weight_dst, float** %r_weight_dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_weight_dst.addr, metadata !15164, metadata !DIExpression()), !dbg !15165
  store float %weight_src, float* %weight_src.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight_src.addr, metadata !15166, metadata !DIExpression()), !dbg !15167
  store i32 %replace_mode, i32* %replace_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %replace_mode.addr, metadata !15168, metadata !DIExpression()), !dbg !15169
  %0 = load i32, i32* %replace_mode.addr, align 4, !dbg !15170
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
  ], !dbg !15171

sw.bb:                                            ; preds = %entry
  %1 = load float, float* %weight_src.addr, align 4, !dbg !15172
  %2 = load float*, float** %r_weight_dst.addr, align 8, !dbg !15174
  store float %1, float* %2, align 4, !dbg !15175
  br label %sw.epilog, !dbg !15176

sw.bb1:                                           ; preds = %entry
  %3 = load float*, float** %r_weight_dst.addr, align 8, !dbg !15177
  %4 = load float, float* %3, align 4, !dbg !15179
  %cmp = fcmp oeq float %4, 0.000000e+00, !dbg !15180
  br i1 %cmp, label %if.then, label %if.end, !dbg !15181

if.then:                                          ; preds = %sw.bb1
  %5 = load float, float* %weight_src.addr, align 4, !dbg !15182
  %6 = load float*, float** %r_weight_dst.addr, align 8, !dbg !15184
  store float %5, float* %6, align 4, !dbg !15185
  br label %if.end, !dbg !15186

if.end:                                           ; preds = %if.then, %sw.bb1
  br label %sw.epilog, !dbg !15187

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !15188

sw.epilog:                                        ; preds = %sw.default, %if.end, %sw.bb
  ret void, !dbg !15189
}

declare dso_local %struct.BVHTree* @bvhtree_from_mesh_verts(%struct.BVHTreeFromMesh*, %struct.DerivedMesh*, float, i32, i32) #2

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

declare dso_local i32 @BLI_bvhtree_find_nearest(%struct.BVHTree*, float*, %struct.BVHTreeNearest*, void (i8*, i32, float*, %struct.BVHTreeNearest*)*, i8*) #2

declare dso_local void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh*) #2

declare dso_local void @DM_ensure_tessface(%struct.DerivedMesh*) #2

declare dso_local %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh*, %struct.DerivedMesh*, float, i32, i32) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

declare dso_local void @project_v3_plane(float*, float*, float*) #2

declare dso_local void @interp_weights_face_v3(float*, float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !15190 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15191, metadata !DIExpression()), !dbg !15192
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !15193, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !15195, metadata !DIExpression()), !dbg !15196
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !15197
  %0 = load float*, float** %b.addr, align 8, !dbg !15198
  %1 = load float*, float** %a.addr, align 8, !dbg !15199
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !15200
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !15201
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !15202
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !15203
  ret float %call, !dbg !15204
}

declare dso_local void @RNA_enum_item_add(%struct.EnumPropertyItem**, i32*, %struct.EnumPropertyItem*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @vgroup_init_remap(%struct.Object* %ob) #0 !dbg !15205 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %def = alloca %struct.bDeformGroup*, align 8
  %defbase_tot = alloca i32, align 4
  %name_array = alloca i8*, align 8
  %name = alloca i8*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15208, metadata !DIExpression()), !dbg !15209
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %def, metadata !15210, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.declare(metadata i32* %defbase_tot, metadata !15212, metadata !DIExpression()), !dbg !15213
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15214
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !15215
  %call = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !15216
  store i32 %call, i32* %defbase_tot, align 4, !dbg !15213
  call void @llvm.dbg.declare(metadata i8** %name_array, metadata !15217, metadata !DIExpression()), !dbg !15218
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !15219
  %2 = load i32, i32* %defbase_tot, align 4, !dbg !15220
  %conv = sext i32 %2 to i64, !dbg !15220
  %mul = mul i64 64, %conv, !dbg !15221
  %call1 = call i8* %1(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.243, i64 0, i64 0)), !dbg !15219
  store i8* %call1, i8** %name_array, align 8, !dbg !15218
  call void @llvm.dbg.declare(metadata i8** %name, metadata !15222, metadata !DIExpression()), !dbg !15223
  %3 = load i8*, i8** %name_array, align 8, !dbg !15224
  store i8* %3, i8** %name, align 8, !dbg !15225
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15226
  %defbase2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 25, !dbg !15228
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase2, i32 0, i32 0, !dbg !15229
  %5 = load i8*, i8** %first, align 8, !dbg !15229
  %6 = bitcast i8* %5 to %struct.bDeformGroup*, !dbg !15226
  store %struct.bDeformGroup* %6, %struct.bDeformGroup** %def, align 8, !dbg !15230
  br label %for.cond, !dbg !15231

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !15232
  %tobool = icmp ne %struct.bDeformGroup* %7, null, !dbg !15234
  br i1 %tobool, label %for.body, label %for.end, !dbg !15234

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %name, align 8, !dbg !15235
  %9 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !15237
  %name3 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %9, i32 0, i32 2, !dbg !15238
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name3, i64 0, i64 0, !dbg !15237
  %call4 = call i8* @BLI_strncpy(i8* %8, i8* %arraydecay, i64 64), !dbg !15239
  %10 = load i8*, i8** %name, align 8, !dbg !15240
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 64, !dbg !15240
  store i8* %add.ptr, i8** %name, align 8, !dbg !15240
  br label %for.inc, !dbg !15241

for.inc:                                          ; preds = %for.body
  %11 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !15242
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %11, i32 0, i32 0, !dbg !15243
  %12 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !15243
  store %struct.bDeformGroup* %12, %struct.bDeformGroup** %def, align 8, !dbg !15244
  br label %for.cond, !dbg !15245, !llvm.loop !15246

for.end:                                          ; preds = %for.cond
  %13 = load i8*, i8** %name_array, align 8, !dbg !15248
  ret i8* %13, !dbg !15249
}

declare dso_local void @BLI_sortlist(%struct.ListBase*, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @vgroup_sort_name(i8* %def_a_ptr, i8* %def_b_ptr) #0 !dbg !15250 {
entry:
  %def_a_ptr.addr = alloca i8*, align 8
  %def_b_ptr.addr = alloca i8*, align 8
  %def_a = alloca %struct.bDeformGroup*, align 8
  %def_b = alloca %struct.bDeformGroup*, align 8
  store i8* %def_a_ptr, i8** %def_a_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %def_a_ptr.addr, metadata !15251, metadata !DIExpression()), !dbg !15252
  store i8* %def_b_ptr, i8** %def_b_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %def_b_ptr.addr, metadata !15253, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %def_a, metadata !15255, metadata !DIExpression()), !dbg !15258
  %0 = load i8*, i8** %def_a_ptr.addr, align 8, !dbg !15259
  %1 = bitcast i8* %0 to %struct.bDeformGroup*, !dbg !15259
  store %struct.bDeformGroup* %1, %struct.bDeformGroup** %def_a, align 8, !dbg !15258
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %def_b, metadata !15260, metadata !DIExpression()), !dbg !15261
  %2 = load i8*, i8** %def_b_ptr.addr, align 8, !dbg !15262
  %3 = bitcast i8* %2 to %struct.bDeformGroup*, !dbg !15262
  store %struct.bDeformGroup* %3, %struct.bDeformGroup** %def_b, align 8, !dbg !15261
  %4 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def_a, align 8, !dbg !15263
  %name = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %4, i32 0, i32 2, !dbg !15264
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !15263
  %5 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def_b, align 8, !dbg !15265
  %name1 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %5, i32 0, i32 2, !dbg !15266
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %name1, i64 0, i64 0, !dbg !15265
  %call = call i32 @BLI_natstrcmp(i8* %arraydecay, i8* %arraydecay2), !dbg !15267
  ret i32 %call, !dbg !15268
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_sort_bone_hierarchy(%struct.Object* %ob, %struct.ListBase* %bonebase) #0 !dbg !15269 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %bonebase.addr = alloca %struct.ListBase*, align 8
  %armobj = alloca %struct.Object*, align 8
  %armature = alloca %struct.bArmature*, align 8
  %bone = alloca %struct.Bone*, align 8
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15272, metadata !DIExpression()), !dbg !15273
  store %struct.ListBase* %bonebase, %struct.ListBase** %bonebase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %bonebase.addr, metadata !15274, metadata !DIExpression()), !dbg !15275
  %0 = load %struct.ListBase*, %struct.ListBase** %bonebase.addr, align 8, !dbg !15276
  %cmp = icmp eq %struct.ListBase* %0, null, !dbg !15278
  br i1 %cmp, label %if.then, label %if.end4, !dbg !15279

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Object** %armobj, metadata !15280, metadata !DIExpression()), !dbg !15282
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15283
  %call = call %struct.Object* @modifiers_isDeformedByArmature(%struct.Object* %1), !dbg !15284
  store %struct.Object* %call, %struct.Object** %armobj, align 8, !dbg !15282
  %2 = load %struct.Object*, %struct.Object** %armobj, align 8, !dbg !15285
  %cmp1 = icmp ne %struct.Object* %2, null, !dbg !15287
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !15288

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bArmature** %armature, metadata !15289, metadata !DIExpression()), !dbg !15293
  %3 = load %struct.Object*, %struct.Object** %armobj, align 8, !dbg !15294
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !15295
  %4 = load i8*, i8** %data, align 8, !dbg !15295
  %5 = bitcast i8* %4 to %struct.bArmature*, !dbg !15294
  store %struct.bArmature* %5, %struct.bArmature** %armature, align 8, !dbg !15293
  %6 = load %struct.bArmature*, %struct.bArmature** %armature, align 8, !dbg !15296
  %bonebase3 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %6, i32 0, i32 2, !dbg !15297
  store %struct.ListBase* %bonebase3, %struct.ListBase** %bonebase.addr, align 8, !dbg !15298
  br label %if.end, !dbg !15299

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !15300

if.end4:                                          ; preds = %if.end, %entry
  %7 = load %struct.ListBase*, %struct.ListBase** %bonebase.addr, align 8, !dbg !15301
  %cmp5 = icmp ne %struct.ListBase* %7, null, !dbg !15303
  br i1 %cmp5, label %if.then6, label %if.end12, !dbg !15304

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !15305, metadata !DIExpression()), !dbg !15307
  %8 = load %struct.ListBase*, %struct.ListBase** %bonebase.addr, align 8, !dbg !15308
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %8, i32 0, i32 1, !dbg !15310
  %9 = load i8*, i8** %last, align 8, !dbg !15310
  %10 = bitcast i8* %9 to %struct.Bone*, !dbg !15308
  store %struct.Bone* %10, %struct.Bone** %bone, align 8, !dbg !15311
  br label %for.cond, !dbg !15312

for.cond:                                         ; preds = %for.inc, %if.then6
  %11 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !15313
  %tobool = icmp ne %struct.Bone* %11, null, !dbg !15315
  br i1 %tobool, label %for.body, label %for.end, !dbg !15315

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !15316, metadata !DIExpression()), !dbg !15318
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15319
  %13 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !15320
  %name = getelementptr inbounds %struct.Bone, %struct.Bone* %13, i32 0, i32 5, !dbg !15321
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !15320
  %call7 = call %struct.bDeformGroup* @defgroup_find_name(%struct.Object* %12, i8* %arraydecay), !dbg !15322
  store %struct.bDeformGroup* %call7, %struct.bDeformGroup** %dg, align 8, !dbg !15318
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15323
  %15 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !15324
  %childbase = getelementptr inbounds %struct.Bone, %struct.Bone* %15, i32 0, i32 4, !dbg !15325
  call void @vgroup_sort_bone_hierarchy(%struct.Object* %14, %struct.ListBase* %childbase), !dbg !15326
  %16 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !15327
  %cmp8 = icmp ne %struct.bDeformGroup* %16, null, !dbg !15329
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !15330

if.then9:                                         ; preds = %for.body
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15331
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 25, !dbg !15333
  %18 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !15334
  %19 = bitcast %struct.bDeformGroup* %18 to i8*, !dbg !15334
  call void @BLI_remlink(%struct.ListBase* %defbase, i8* %19), !dbg !15335
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15336
  %defbase10 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 25, !dbg !15337
  %21 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !15338
  %22 = bitcast %struct.bDeformGroup* %21 to i8*, !dbg !15338
  call void @BLI_addhead(%struct.ListBase* %defbase10, i8* %22), !dbg !15339
  br label %if.end11, !dbg !15340

if.end11:                                         ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !15341

for.inc:                                          ; preds = %if.end11
  %23 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !15342
  %prev = getelementptr inbounds %struct.Bone, %struct.Bone* %23, i32 0, i32 1, !dbg !15343
  %24 = load %struct.Bone*, %struct.Bone** %prev, align 8, !dbg !15343
  store %struct.Bone* %24, %struct.Bone** %bone, align 8, !dbg !15344
  br label %for.cond, !dbg !15345, !llvm.loop !15346

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !15348

if.end12:                                         ; preds = %for.end, %if.end4
  ret void, !dbg !15349
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @vgroup_do_remap(%struct.Object* %ob, i8* %name_array, %struct.wmOperator* %op) #0 !dbg !15350 {
entry:
  %retval = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %name_array.addr = alloca i8*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %dvert = alloca %struct.MDeformVert*, align 8
  %def = alloca %struct.bDeformGroup*, align 8
  %defbase_tot = alloca i32, align 4
  %sort_map_update = alloca i32*, align 8
  %sort_map = alloca i32*, align 8
  %name = alloca i8*, align 8
  %i = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %dvert_tot = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15353, metadata !DIExpression()), !dbg !15354
  store i8* %name_array, i8** %name_array.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name_array.addr, metadata !15355, metadata !DIExpression()), !dbg !15356
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !15357, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !15359, metadata !DIExpression()), !dbg !15360
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert, align 8, !dbg !15360
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %def, metadata !15361, metadata !DIExpression()), !dbg !15362
  call void @llvm.dbg.declare(metadata i32* %defbase_tot, metadata !15363, metadata !DIExpression()), !dbg !15364
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15365
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !15366
  %call = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !15367
  store i32 %call, i32* %defbase_tot, align 4, !dbg !15364
  call void @llvm.dbg.declare(metadata i32** %sort_map_update, metadata !15368, metadata !DIExpression()), !dbg !15369
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !15370
  %2 = load i32, i32* %defbase_tot, align 4, !dbg !15371
  %add = add nsw i32 %2, 1, !dbg !15372
  %conv = sext i32 %add to i64, !dbg !15373
  %mul = mul i64 4, %conv, !dbg !15374
  %call1 = call i8* %1(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.243, i64 0, i64 0)), !dbg !15370
  %3 = bitcast i8* %call1 to i32*, !dbg !15370
  store i32* %3, i32** %sort_map_update, align 8, !dbg !15369
  call void @llvm.dbg.declare(metadata i32** %sort_map, metadata !15375, metadata !DIExpression()), !dbg !15376
  %4 = load i32*, i32** %sort_map_update, align 8, !dbg !15377
  %add.ptr = getelementptr inbounds i32, i32* %4, i64 1, !dbg !15378
  store i32* %add.ptr, i32** %sort_map, align 8, !dbg !15376
  call void @llvm.dbg.declare(metadata i8** %name, metadata !15379, metadata !DIExpression()), !dbg !15380
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15381, metadata !DIExpression()), !dbg !15382
  %5 = load i8*, i8** %name_array.addr, align 8, !dbg !15383
  store i8* %5, i8** %name, align 8, !dbg !15384
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15385
  %defbase2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 25, !dbg !15387
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase2, i32 0, i32 0, !dbg !15388
  %7 = load i8*, i8** %first, align 8, !dbg !15388
  %8 = bitcast i8* %7 to %struct.bDeformGroup*, !dbg !15385
  store %struct.bDeformGroup* %8, %struct.bDeformGroup** %def, align 8, !dbg !15389
  store i32 0, i32* %i, align 4, !dbg !15390
  br label %for.cond, !dbg !15391

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !15392
  %tobool = icmp ne %struct.bDeformGroup* %9, null, !dbg !15394
  br i1 %tobool, label %for.body, label %for.end, !dbg !15394

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15395
  %defbase3 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 25, !dbg !15397
  %11 = load i8*, i8** %name, align 8, !dbg !15398
  %call4 = call i32 @BLI_findstringindex(%struct.ListBase* %defbase3, i8* %11, i32 16), !dbg !15399
  %12 = load i32*, i32** %sort_map, align 8, !dbg !15400
  %13 = load i32, i32* %i, align 4, !dbg !15401
  %idxprom = sext i32 %13 to i64, !dbg !15400
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !15400
  store i32 %call4, i32* %arrayidx, align 4, !dbg !15402
  %14 = load i8*, i8** %name, align 8, !dbg !15403
  %add.ptr5 = getelementptr inbounds i8, i8* %14, i64 64, !dbg !15403
  store i8* %add.ptr5, i8** %name, align 8, !dbg !15403
  br label %for.inc, !dbg !15404

for.inc:                                          ; preds = %for.body
  %15 = load %struct.bDeformGroup*, %struct.bDeformGroup** %def, align 8, !dbg !15405
  %next = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %15, i32 0, i32 0, !dbg !15406
  %16 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next, align 8, !dbg !15406
  store %struct.bDeformGroup* %16, %struct.bDeformGroup** %def, align 8, !dbg !15407
  %17 = load i32, i32* %i, align 4, !dbg !15408
  %inc = add nsw i32 %17, 1, !dbg !15408
  store i32 %inc, i32* %i, align 4, !dbg !15408
  br label %for.cond, !dbg !15409, !llvm.loop !15410

for.end:                                          ; preds = %for.cond
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15412
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 27, !dbg !15414
  %19 = load i32, i32* %mode, align 8, !dbg !15414
  %cmp = icmp eq i32 %19, 1, !dbg !15415
  br i1 %cmp, label %if.then, label %if.else29, !dbg !15416

if.then:                                          ; preds = %for.end
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15417
  %type = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 3, !dbg !15420
  %21 = load i16, i16* %type, align 8, !dbg !15420
  %conv7 = sext i16 %21 to i32, !dbg !15417
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !15421
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !15422

if.then10:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !15423, metadata !DIExpression()), !dbg !15425
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15426
  %call11 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %22), !dbg !15427
  store %struct.BMEditMesh* %call11, %struct.BMEditMesh** %em, align 8, !dbg !15425
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !15428, metadata !DIExpression()), !dbg !15429
  %23 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15430
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %23, i32 0, i32 0, !dbg !15431
  %24 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !15431
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %24, i32 0, i32 24, !dbg !15432
  %call12 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !15433
  store i32 %call12, i32* %cd_dvert_offset, align 4, !dbg !15429
  %25 = load i32, i32* %cd_dvert_offset, align 4, !dbg !15434
  %cmp13 = icmp ne i32 %25, -1, !dbg !15436
  br i1 %cmp13, label %if.then15, label %if.end27, !dbg !15437

if.then15:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !15438, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !15441, metadata !DIExpression()), !dbg !15442
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15443
  %bm16 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %26, i32 0, i32 0, !dbg !15443
  %27 = load %struct.BMesh*, %struct.BMesh** %bm16, align 8, !dbg !15443
  %call17 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %27, i8 zeroext 1, i8* null), !dbg !15443
  %28 = bitcast i8* %call17 to %struct.BMVert*, !dbg !15443
  store %struct.BMVert* %28, %struct.BMVert** %eve, align 8, !dbg !15443
  br label %for.cond18, !dbg !15443

for.cond18:                                       ; preds = %for.inc24, %if.then15
  %29 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15445
  %tobool19 = icmp ne %struct.BMVert* %29, null, !dbg !15443
  br i1 %tobool19, label %for.body20, label %for.end26, !dbg !15443

for.body20:                                       ; preds = %for.cond18
  %30 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15447
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %30, i32 0, i32 0, !dbg !15447
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !15447
  %31 = load i8*, i8** %data, align 8, !dbg !15447
  %32 = load i32, i32* %cd_dvert_offset, align 4, !dbg !15447
  %idx.ext = sext i32 %32 to i64, !dbg !15447
  %add.ptr21 = getelementptr inbounds i8, i8* %31, i64 %idx.ext, !dbg !15447
  %33 = bitcast i8* %add.ptr21 to %struct.MDeformVert*, !dbg !15447
  store %struct.MDeformVert* %33, %struct.MDeformVert** %dvert, align 8, !dbg !15449
  %34 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15450
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %34, i32 0, i32 1, !dbg !15452
  %35 = load i32, i32* %totweight, align 8, !dbg !15452
  %tobool22 = icmp ne i32 %35, 0, !dbg !15450
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !15453

if.then23:                                        ; preds = %for.body20
  %36 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15454
  %37 = load i32*, i32** %sort_map, align 8, !dbg !15456
  %38 = load i32, i32* %defbase_tot, align 4, !dbg !15457
  call void @defvert_remap(%struct.MDeformVert* %36, i32* %37, i32 %38), !dbg !15458
  br label %if.end, !dbg !15459

if.end:                                           ; preds = %if.then23, %for.body20
  br label %for.inc24, !dbg !15460

for.inc24:                                        ; preds = %if.end
  %call25 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !15445
  %39 = bitcast i8* %call25 to %struct.BMVert*, !dbg !15445
  store %struct.BMVert* %39, %struct.BMVert** %eve, align 8, !dbg !15445
  br label %for.cond18, !dbg !15445, !llvm.loop !15461

for.end26:                                        ; preds = %for.cond18
  br label %if.end27, !dbg !15463

if.end27:                                         ; preds = %for.end26, %if.then10
  br label %if.end28, !dbg !15464

if.else:                                          ; preds = %if.then
  %40 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !15465
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %40, i32 0, i32 8, !dbg !15467
  %41 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !15467
  call void @BKE_report(%struct.ReportList* %41, i32 32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.244, i64 0, i64 0)), !dbg !15468
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15469
  %43 = load i32*, i32** %sort_map_update, align 8, !dbg !15470
  %44 = bitcast i32* %43 to i8*, !dbg !15470
  call void %42(i8* %44), !dbg !15469
  store i32 2, i32* %retval, align 4, !dbg !15471
  br label %return, !dbg !15471

if.end28:                                         ; preds = %if.end27
  br label %if.end40, !dbg !15472

if.else29:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %dvert_tot, metadata !15473, metadata !DIExpression()), !dbg !15475
  store i32 0, i32* %dvert_tot, align 4, !dbg !15475
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15476
  %data30 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 19, !dbg !15477
  %46 = load i8*, i8** %data30, align 8, !dbg !15477
  %47 = bitcast i8* %46 to %struct.ID*, !dbg !15476
  %call31 = call zeroext i8 @ED_vgroup_array_get(%struct.ID* %47, %struct.MDeformVert** %dvert, i32* %dvert_tot), !dbg !15478
  %48 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15479
  %tobool32 = icmp ne %struct.MDeformVert* %48, null, !dbg !15479
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !15481

if.then33:                                        ; preds = %if.else29
  br label %while.cond, !dbg !15482

while.cond:                                       ; preds = %if.end38, %if.then33
  %49 = load i32, i32* %dvert_tot, align 4, !dbg !15484
  %dec = add nsw i32 %49, -1, !dbg !15484
  store i32 %dec, i32* %dvert_tot, align 4, !dbg !15484
  %tobool34 = icmp ne i32 %49, 0, !dbg !15482
  br i1 %tobool34, label %while.body, label %while.end, !dbg !15482

while.body:                                       ; preds = %while.cond
  %50 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15485
  %totweight35 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %50, i32 0, i32 1, !dbg !15488
  %51 = load i32, i32* %totweight35, align 8, !dbg !15488
  %tobool36 = icmp ne i32 %51, 0, !dbg !15485
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !15489

if.then37:                                        ; preds = %while.body
  %52 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15490
  %53 = load i32*, i32** %sort_map, align 8, !dbg !15491
  %54 = load i32, i32* %defbase_tot, align 4, !dbg !15492
  call void @defvert_remap(%struct.MDeformVert* %52, i32* %53, i32 %54), !dbg !15493
  br label %if.end38, !dbg !15493

if.end38:                                         ; preds = %if.then37, %while.body
  %55 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15494
  %incdec.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %55, i32 1, !dbg !15494
  store %struct.MDeformVert* %incdec.ptr, %struct.MDeformVert** %dvert, align 8, !dbg !15494
  br label %while.cond, !dbg !15482, !llvm.loop !15495

while.end:                                        ; preds = %while.cond
  br label %if.end39, !dbg !15497

if.end39:                                         ; preds = %while.end, %if.else29
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end28
  store i32 0, i32* %i, align 4, !dbg !15498
  br label %for.cond41, !dbg !15500

for.cond41:                                       ; preds = %for.inc48, %if.end40
  %56 = load i32, i32* %i, align 4, !dbg !15501
  %57 = load i32, i32* %defbase_tot, align 4, !dbg !15503
  %cmp42 = icmp slt i32 %56, %57, !dbg !15504
  br i1 %cmp42, label %for.body44, label %for.end50, !dbg !15505

for.body44:                                       ; preds = %for.cond41
  %58 = load i32*, i32** %sort_map, align 8, !dbg !15506
  %59 = load i32, i32* %i, align 4, !dbg !15507
  %idxprom45 = sext i32 %59 to i64, !dbg !15506
  %arrayidx46 = getelementptr inbounds i32, i32* %58, i64 %idxprom45, !dbg !15506
  %60 = load i32, i32* %arrayidx46, align 4, !dbg !15508
  %inc47 = add nsw i32 %60, 1, !dbg !15508
  store i32 %inc47, i32* %arrayidx46, align 4, !dbg !15508
  br label %for.inc48, !dbg !15506

for.inc48:                                        ; preds = %for.body44
  %61 = load i32, i32* %i, align 4, !dbg !15509
  %inc49 = add nsw i32 %61, 1, !dbg !15509
  store i32 %inc49, i32* %i, align 4, !dbg !15509
  br label %for.cond41, !dbg !15510, !llvm.loop !15511

for.end50:                                        ; preds = %for.cond41
  %62 = load i32*, i32** %sort_map_update, align 8, !dbg !15513
  %arrayidx51 = getelementptr inbounds i32, i32* %62, i64 0, !dbg !15513
  store i32 0, i32* %arrayidx51, align 4, !dbg !15514
  %63 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15515
  %64 = load i32*, i32** %sort_map_update, align 8, !dbg !15516
  call void @vgroup_remap_update_users(%struct.Object* %63, i32* %64), !dbg !15517
  %65 = load i32*, i32** %sort_map_update, align 8, !dbg !15518
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15519
  %actdef = getelementptr inbounds %struct.Object, %struct.Object* %66, i32 0, i32 97, !dbg !15520
  %67 = load i16, i16* %actdef, align 2, !dbg !15520
  %idxprom52 = zext i16 %67 to i64, !dbg !15518
  %arrayidx53 = getelementptr inbounds i32, i32* %65, i64 %idxprom52, !dbg !15518
  %68 = load i32, i32* %arrayidx53, align 4, !dbg !15518
  %conv54 = trunc i32 %68 to i16, !dbg !15518
  %69 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15521
  %actdef55 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 97, !dbg !15522
  store i16 %conv54, i16* %actdef55, align 2, !dbg !15523
  %70 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15524
  %71 = load i32*, i32** %sort_map_update, align 8, !dbg !15525
  %72 = bitcast i32* %71 to i8*, !dbg !15525
  call void %70(i8* %72), !dbg !15524
  store i32 4, i32* %retval, align 4, !dbg !15526
  br label %return, !dbg !15526

return:                                           ; preds = %for.end50, %if.else
  %73 = load i32, i32* %retval, align 4, !dbg !15527
  ret i32 %73, !dbg !15527
}

declare dso_local i32 @BLI_natstrcmp(i8*, i8*) #2

declare dso_local %struct.Object* @modifiers_isDeformedByArmature(%struct.Object*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #2

declare dso_local i32 @BLI_findstringindex(%struct.ListBase*, i8*, i32) #2

declare dso_local void @defvert_remap(%struct.MDeformVert*, i32*, i32) #2

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @check_vertex_group_accessible(%struct.wmOperator* %op, %struct.Object* %ob, i32 %def_nr) #0 !dbg !15528 {
entry:
  %retval = alloca i8, align 1
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %def_nr.addr = alloca i32, align 4
  %dg = alloca %struct.bDeformGroup*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !15531, metadata !DIExpression()), !dbg !15532
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15533, metadata !DIExpression()), !dbg !15534
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !15535, metadata !DIExpression()), !dbg !15536
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !15537, metadata !DIExpression()), !dbg !15538
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15539
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 25, !dbg !15540
  %1 = load i32, i32* %def_nr.addr, align 4, !dbg !15541
  %call = call i8* @BLI_findlink(%struct.ListBase* %defbase, i32 %1), !dbg !15542
  %2 = bitcast i8* %call to %struct.bDeformGroup*, !dbg !15542
  store %struct.bDeformGroup* %2, %struct.bDeformGroup** %dg, align 8, !dbg !15538
  %3 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !15543
  %tobool = icmp ne %struct.bDeformGroup* %3, null, !dbg !15543
  br i1 %tobool, label %if.end, label %if.then, !dbg !15545

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !15546
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 8, !dbg !15548
  %5 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !15548
  call void @BKE_report(%struct.ReportList* %5, i32 32, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.245, i64 0, i64 0)), !dbg !15549
  store i8 0, i8* %retval, align 1, !dbg !15550
  br label %return, !dbg !15550

if.end:                                           ; preds = %entry
  %6 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !15551
  %flag = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %6, i32 0, i32 3, !dbg !15553
  %7 = load i8, i8* %flag, align 8, !dbg !15553
  %conv = zext i8 %7 to i32, !dbg !15551
  %and = and i32 %conv, 1, !dbg !15554
  %tobool1 = icmp ne i32 %and, 0, !dbg !15554
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !15555

if.then2:                                         ; preds = %if.end
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !15556
  %reports3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 8, !dbg !15558
  %9 = load %struct.ReportList*, %struct.ReportList** %reports3, align 8, !dbg !15558
  call void @BKE_report(%struct.ReportList* %9, i32 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.246, i64 0, i64 0)), !dbg !15559
  store i8 0, i8* %retval, align 1, !dbg !15560
  br label %return, !dbg !15560

if.end4:                                          ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !15561
  br label %return, !dbg !15561

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !15562
  ret i8 %10, !dbg !15562
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_copy_active_to_sel_single(%struct.Object* %ob, i32 %def_nr) #0 !dbg !15563 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %def_nr.addr = alloca i32, align 4
  %dvert_act = alloca %struct.MDeformVert*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %weight_act = alloca float, align 4
  %i = alloca i32, align 4
  %cd_dvert_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eve_act = alloca %struct.BMVert*, align 8
  %dv = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  %dv30 = alloca %struct.MDeformVert*, align 8
  %v_act = alloca i32, align 4
  %dw48 = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15566, metadata !DIExpression()), !dbg !15567
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !15568, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_act, metadata !15570, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !15572, metadata !DIExpression()), !dbg !15573
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15574
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !15575
  %1 = load i8*, i8** %data, align 8, !dbg !15575
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !15574
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !15573
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !15576, metadata !DIExpression()), !dbg !15577
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15578
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 20, !dbg !15579
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !15579
  store %struct.BMEditMesh* %4, %struct.BMEditMesh** %em, align 8, !dbg !15577
  call void @llvm.dbg.declare(metadata float* %weight_act, metadata !15580, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15582, metadata !DIExpression()), !dbg !15583
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15584
  %tobool = icmp ne %struct.BMEditMesh* %5, null, !dbg !15584
  br i1 %tobool, label %if.then, label %if.else, !dbg !15586

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !15587, metadata !DIExpression()), !dbg !15589
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15590
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !15591
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !15591
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 24, !dbg !15592
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !15593
  store i32 %call, i32* %cd_dvert_offset, align 4, !dbg !15589
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !15594, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !15596, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_act, metadata !15598, metadata !DIExpression()), !dbg !15599
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15600
  %call1 = call %struct.MDeformVert* @ED_mesh_active_dvert_get_em(%struct.Object* %8, %struct.BMVert** %eve_act), !dbg !15601
  store %struct.MDeformVert* %call1, %struct.MDeformVert** %dvert_act, align 8, !dbg !15602
  %9 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15603
  %cmp = icmp eq %struct.MDeformVert* %9, null, !dbg !15605
  br i1 %cmp, label %if.then2, label %if.end, !dbg !15606

if.then2:                                         ; preds = %if.then
  br label %if.end70, !dbg !15607

if.end:                                           ; preds = %if.then
  %10 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15609
  %11 = load i32, i32* %def_nr.addr, align 4, !dbg !15610
  %call3 = call float @defvert_find_weight(%struct.MDeformVert* %10, i32 %11), !dbg !15611
  store float %call3, float* %weight_act, align 4, !dbg !15612
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15613
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !15613
  %13 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !15613
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %13, i8 zeroext 1, i8* null), !dbg !15613
  %14 = bitcast i8* %call5 to %struct.BMVert*, !dbg !15613
  store %struct.BMVert* %14, %struct.BMVert** %eve, align 8, !dbg !15613
  store i32 0, i32* %i, align 4, !dbg !15613
  br label %for.cond, !dbg !15613

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15615
  %tobool6 = icmp ne %struct.BMVert* %15, null, !dbg !15613
  br i1 %tobool6, label %for.body, label %for.end, !dbg !15613

for.body:                                         ; preds = %for.cond
  %16 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15617
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 0, !dbg !15617
  %call7 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !15617
  %conv = zext i8 %call7 to i32, !dbg !15617
  %tobool8 = icmp ne i32 %conv, 0, !dbg !15617
  br i1 %tobool8, label %land.lhs.true, label %if.end22, !dbg !15620

land.lhs.true:                                    ; preds = %for.body
  %17 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15621
  %18 = load %struct.BMVert*, %struct.BMVert** %eve_act, align 8, !dbg !15622
  %cmp9 = icmp ne %struct.BMVert* %17, %18, !dbg !15623
  br i1 %cmp9, label %if.then11, label %if.end22, !dbg !15624

if.then11:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !15625, metadata !DIExpression()), !dbg !15627
  %19 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15628
  %head12 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 0, !dbg !15628
  %data13 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head12, i32 0, i32 0, !dbg !15628
  %20 = load i8*, i8** %data13, align 8, !dbg !15628
  %21 = load i32, i32* %cd_dvert_offset, align 4, !dbg !15628
  %idx.ext = sext i32 %21 to i64, !dbg !15628
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !15628
  %22 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !15628
  store %struct.MDeformVert* %22, %struct.MDeformVert** %dv, align 8, !dbg !15627
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !15629, metadata !DIExpression()), !dbg !15630
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !15631
  %24 = load i32, i32* %def_nr.addr, align 4, !dbg !15632
  %call14 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %23, i32 %24), !dbg !15633
  store %struct.MDeformWeight* %call14, %struct.MDeformWeight** %dw, align 8, !dbg !15630
  %25 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !15634
  %tobool15 = icmp ne %struct.MDeformWeight* %25, null, !dbg !15634
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !15636

if.then16:                                        ; preds = %if.then11
  %26 = load float, float* %weight_act, align 4, !dbg !15637
  %27 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !15639
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %27, i32 0, i32 1, !dbg !15640
  store float %26, float* %weight, align 4, !dbg !15641
  %28 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15642
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 46, !dbg !15644
  %29 = load i8, i8* %editflag, align 1, !dbg !15644
  %conv17 = zext i8 %29 to i32, !dbg !15642
  %and = and i32 %conv17, 1, !dbg !15645
  %tobool18 = icmp ne i32 %and, 0, !dbg !15645
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !15646

if.then19:                                        ; preds = %if.then16
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15647
  %31 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15649
  %32 = load i32, i32* %i, align 4, !dbg !15650
  %33 = load i32, i32* %cd_dvert_offset, align 4, !dbg !15651
  call void @ED_mesh_defvert_mirror_update_em(%struct.Object* %30, %struct.BMVert* %31, i32 -1, i32 %32, i32 %33), !dbg !15652
  br label %if.end20, !dbg !15653

if.end20:                                         ; preds = %if.then19, %if.then16
  br label %if.end21, !dbg !15654

if.end21:                                         ; preds = %if.end20, %if.then11
  br label %if.end22, !dbg !15655

if.end22:                                         ; preds = %if.end21, %land.lhs.true, %for.body
  br label %for.inc, !dbg !15656

for.inc:                                          ; preds = %if.end22
  %call23 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !15615
  %34 = bitcast i8* %call23 to %struct.BMVert*, !dbg !15615
  store %struct.BMVert* %34, %struct.BMVert** %eve, align 8, !dbg !15615
  %35 = load i32, i32* %i, align 4, !dbg !15615
  %inc = add nsw i32 %35, 1, !dbg !15615
  store i32 %inc, i32* %i, align 4, !dbg !15615
  br label %for.cond, !dbg !15615, !llvm.loop !15657

for.end:                                          ; preds = %for.cond
  %36 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15659
  %editflag24 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 46, !dbg !15661
  %37 = load i8, i8* %editflag24, align 1, !dbg !15661
  %conv25 = zext i8 %37 to i32, !dbg !15659
  %and26 = and i32 %conv25, 1, !dbg !15662
  %tobool27 = icmp ne i32 %and26, 0, !dbg !15662
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !15663

if.then28:                                        ; preds = %for.end
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15664
  %39 = load %struct.BMVert*, %struct.BMVert** %eve_act, align 8, !dbg !15666
  %40 = load i32, i32* %cd_dvert_offset, align 4, !dbg !15667
  call void @ED_mesh_defvert_mirror_update_em(%struct.Object* %38, %struct.BMVert* %39, i32 -1, i32 -1, i32 %40), !dbg !15668
  br label %if.end29, !dbg !15669

if.end29:                                         ; preds = %if.then28, %for.end
  br label %if.end70, !dbg !15670

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv30, metadata !15671, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.declare(metadata i32* %v_act, metadata !15674, metadata !DIExpression()), !dbg !15675
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15676
  %call31 = call %struct.MDeformVert* @ED_mesh_active_dvert_get_ob(%struct.Object* %41, i32* %v_act), !dbg !15677
  store %struct.MDeformVert* %call31, %struct.MDeformVert** %dvert_act, align 8, !dbg !15678
  %42 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15679
  %cmp32 = icmp eq %struct.MDeformVert* %42, null, !dbg !15681
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !15682

if.then34:                                        ; preds = %if.else
  br label %if.end70, !dbg !15683

if.end35:                                         ; preds = %if.else
  %43 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15685
  %44 = load i32, i32* %def_nr.addr, align 4, !dbg !15686
  %call36 = call float @defvert_find_weight(%struct.MDeformVert* %43, i32 %44), !dbg !15687
  store float %call36, float* %weight_act, align 4, !dbg !15688
  %45 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15689
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %45, i32 0, i32 17, !dbg !15690
  %46 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15690
  store %struct.MDeformVert* %46, %struct.MDeformVert** %dv30, align 8, !dbg !15691
  store i32 0, i32* %i, align 4, !dbg !15692
  br label %for.cond37, !dbg !15694

for.cond37:                                       ; preds = %for.inc61, %if.end35
  %47 = load i32, i32* %i, align 4, !dbg !15695
  %48 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15697
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %48, i32 0, i32 26, !dbg !15698
  %49 = load i32, i32* %totvert, align 8, !dbg !15698
  %cmp38 = icmp slt i32 %47, %49, !dbg !15699
  br i1 %cmp38, label %for.body40, label %for.end63, !dbg !15700

for.body40:                                       ; preds = %for.cond37
  %50 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15701
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %50, i32 0, i32 15, !dbg !15704
  %51 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15704
  %52 = load i32, i32* %i, align 4, !dbg !15705
  %idxprom = sext i32 %52 to i64, !dbg !15701
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %51, i64 %idxprom, !dbg !15701
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 2, !dbg !15706
  %53 = load i8, i8* %flag, align 2, !dbg !15706
  %conv41 = zext i8 %53 to i32, !dbg !15701
  %and42 = and i32 %conv41, 1, !dbg !15707
  %tobool43 = icmp ne i32 %and42, 0, !dbg !15707
  br i1 %tobool43, label %land.lhs.true44, label %if.end60, !dbg !15708

land.lhs.true44:                                  ; preds = %for.body40
  %54 = load %struct.MDeformVert*, %struct.MDeformVert** %dv30, align 8, !dbg !15709
  %55 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15710
  %cmp45 = icmp ne %struct.MDeformVert* %54, %55, !dbg !15711
  br i1 %cmp45, label %if.then47, label %if.end60, !dbg !15712

if.then47:                                        ; preds = %land.lhs.true44
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw48, metadata !15713, metadata !DIExpression()), !dbg !15715
  %56 = load %struct.MDeformVert*, %struct.MDeformVert** %dv30, align 8, !dbg !15716
  %57 = load i32, i32* %def_nr.addr, align 4, !dbg !15717
  %call49 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %56, i32 %57), !dbg !15718
  store %struct.MDeformWeight* %call49, %struct.MDeformWeight** %dw48, align 8, !dbg !15715
  %58 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw48, align 8, !dbg !15719
  %tobool50 = icmp ne %struct.MDeformWeight* %58, null, !dbg !15719
  br i1 %tobool50, label %if.then51, label %if.end59, !dbg !15721

if.then51:                                        ; preds = %if.then47
  %59 = load float, float* %weight_act, align 4, !dbg !15722
  %60 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw48, align 8, !dbg !15724
  %weight52 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %60, i32 0, i32 1, !dbg !15725
  store float %59, float* %weight52, align 4, !dbg !15726
  %61 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15727
  %editflag53 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %61, i32 0, i32 46, !dbg !15729
  %62 = load i8, i8* %editflag53, align 1, !dbg !15729
  %conv54 = zext i8 %62 to i32, !dbg !15727
  %and55 = and i32 %conv54, 1, !dbg !15730
  %tobool56 = icmp ne i32 %and55, 0, !dbg !15730
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !15731

if.then57:                                        ; preds = %if.then51
  %63 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15732
  %64 = load i32, i32* %i, align 4, !dbg !15734
  call void @ED_mesh_defvert_mirror_update_ob(%struct.Object* %63, i32 -1, i32 %64), !dbg !15735
  br label %if.end58, !dbg !15736

if.end58:                                         ; preds = %if.then57, %if.then51
  br label %if.end59, !dbg !15737

if.end59:                                         ; preds = %if.end58, %if.then47
  br label %if.end60, !dbg !15738

if.end60:                                         ; preds = %if.end59, %land.lhs.true44, %for.body40
  br label %for.inc61, !dbg !15739

for.inc61:                                        ; preds = %if.end60
  %65 = load i32, i32* %i, align 4, !dbg !15740
  %inc62 = add nsw i32 %65, 1, !dbg !15740
  store i32 %inc62, i32* %i, align 4, !dbg !15740
  %66 = load %struct.MDeformVert*, %struct.MDeformVert** %dv30, align 8, !dbg !15741
  %incdec.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %66, i32 1, !dbg !15741
  store %struct.MDeformVert* %incdec.ptr, %struct.MDeformVert** %dv30, align 8, !dbg !15741
  br label %for.cond37, !dbg !15742, !llvm.loop !15743

for.end63:                                        ; preds = %for.cond37
  %67 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15745
  %editflag64 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %67, i32 0, i32 46, !dbg !15747
  %68 = load i8, i8* %editflag64, align 1, !dbg !15747
  %conv65 = zext i8 %68 to i32, !dbg !15745
  %and66 = and i32 %conv65, 1, !dbg !15748
  %tobool67 = icmp ne i32 %and66, 0, !dbg !15748
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !15749

if.then68:                                        ; preds = %for.end63
  %69 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15750
  %70 = load i32, i32* %v_act, align 4, !dbg !15752
  call void @ED_mesh_defvert_mirror_update_ob(%struct.Object* %69, i32 -1, i32 %70), !dbg !15753
  br label %if.end69, !dbg !15754

if.end69:                                         ; preds = %if.then68, %for.end63
  br label %if.end70

if.end70:                                         ; preds = %if.then2, %if.then34, %if.end69, %if.end29
  ret void, !dbg !15755
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_remove_weight(%struct.Object* %ob, i32 %def_nr) #0 !dbg !15756 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %def_nr.addr = alloca i32, align 4
  %dvert_act = alloca %struct.MDeformVert*, align 8
  %dw = alloca %struct.MDeformWeight*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15757, metadata !DIExpression()), !dbg !15758
  store i32 %def_nr, i32* %def_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_nr.addr, metadata !15759, metadata !DIExpression()), !dbg !15760
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_act, metadata !15761, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !15763, metadata !DIExpression()), !dbg !15764
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15765
  %call = call %struct.MDeformVert* @ED_mesh_active_dvert_get_only(%struct.Object* %0), !dbg !15766
  store %struct.MDeformVert* %call, %struct.MDeformVert** %dvert_act, align 8, !dbg !15767
  %1 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15768
  %2 = load i32, i32* %def_nr.addr, align 4, !dbg !15769
  %call1 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %1, i32 %2), !dbg !15770
  store %struct.MDeformWeight* %call1, %struct.MDeformWeight** %dw, align 8, !dbg !15771
  %3 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15772
  %4 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !15773
  call void @defvert_remove_group(%struct.MDeformVert* %3, %struct.MDeformWeight* %4), !dbg !15774
  ret void, !dbg !15775
}

declare dso_local %struct.MDeformVert* @ED_mesh_active_dvert_get_only(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_normalize_active(%struct.Object* %ob, i32 %subset_type) #0 !dbg !15776 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %subset_type.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %eve_act = alloca %struct.BMVert*, align 8
  %v_act = alloca i32, align 4
  %dvert_act = alloca %struct.MDeformVert*, align 8
  %subset_count = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  %cd_dvert_offset = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15779, metadata !DIExpression()), !dbg !15780
  store i32 %subset_type, i32* %subset_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subset_type.addr, metadata !15781, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !15783, metadata !DIExpression()), !dbg !15784
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15785
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !15786
  %1 = load i8*, i8** %data, align 8, !dbg !15786
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !15785
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !15784
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !15787, metadata !DIExpression()), !dbg !15788
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15789
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 20, !dbg !15790
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !15790
  store %struct.BMEditMesh* %4, %struct.BMEditMesh** %em, align 8, !dbg !15788
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_act, metadata !15791, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.declare(metadata i32* %v_act, metadata !15793, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_act, metadata !15795, metadata !DIExpression()), !dbg !15796
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !15797, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !15799, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !15801, metadata !DIExpression()), !dbg !15802
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15803
  %tobool = icmp ne %struct.BMEditMesh* %5, null, !dbg !15803
  br i1 %tobool, label %if.then, label %if.else, !dbg !15805

if.then:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15806
  %call = call %struct.MDeformVert* @ED_mesh_active_dvert_get_em(%struct.Object* %6, %struct.BMVert** %eve_act), !dbg !15808
  store %struct.MDeformVert* %call, %struct.MDeformVert** %dvert_act, align 8, !dbg !15809
  br label %if.end, !dbg !15810

if.else:                                          ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15811
  %call1 = call %struct.MDeformVert* @ED_mesh_active_dvert_get_ob(%struct.Object* %7, i32* %v_act), !dbg !15813
  store %struct.MDeformVert* %call1, %struct.MDeformVert** %dvert_act, align 8, !dbg !15814
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15815
  %cmp = icmp eq %struct.MDeformVert* %8, null, !dbg !15817
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !15818

if.then2:                                         ; preds = %if.end
  br label %if.end12, !dbg !15819

if.end3:                                          ; preds = %if.end
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15821
  %10 = load i32, i32* %subset_type.addr, align 4, !dbg !15822
  %call4 = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %9, i32 %10, i32* %vgroup_tot, i32* %subset_count), !dbg !15823
  store i8* %call4, i8** %vgroup_validmap, align 8, !dbg !15824
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15825
  %12 = load i8*, i8** %vgroup_validmap, align 8, !dbg !15826
  %13 = load i32, i32* %vgroup_tot, align 4, !dbg !15827
  call void @defvert_normalize_subset(%struct.MDeformVert* %11, i8* %12, i32 %13), !dbg !15828
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15829
  %15 = load i8*, i8** %vgroup_validmap, align 8, !dbg !15830
  call void %14(i8* %15), !dbg !15829
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15831
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 46, !dbg !15833
  %17 = load i8, i8* %editflag, align 1, !dbg !15833
  %conv = zext i8 %17 to i32, !dbg !15831
  %and = and i32 %conv, 1, !dbg !15834
  %tobool5 = icmp ne i32 %and, 0, !dbg !15834
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !15835

if.then6:                                         ; preds = %if.end3
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15836
  %tobool7 = icmp ne %struct.BMEditMesh* %18, null, !dbg !15836
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !15839

if.then8:                                         ; preds = %if.then6
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !15840, metadata !DIExpression()), !dbg !15842
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15843
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !15844
  %20 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !15844
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %20, i32 0, i32 24, !dbg !15845
  %call9 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !15846
  store i32 %call9, i32* %cd_dvert_offset, align 4, !dbg !15842
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15847
  %22 = load %struct.BMVert*, %struct.BMVert** %eve_act, align 8, !dbg !15848
  %23 = load i32, i32* %cd_dvert_offset, align 4, !dbg !15849
  call void @ED_mesh_defvert_mirror_update_em(%struct.Object* %21, %struct.BMVert* %22, i32 -1, i32 -1, i32 %23), !dbg !15850
  br label %if.end11, !dbg !15851

if.else10:                                        ; preds = %if.then6
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15852
  %25 = load i32, i32* %v_act, align 4, !dbg !15854
  call void @ED_mesh_defvert_mirror_update_ob(%struct.Object* %24, i32 -1, i32 %25), !dbg !15855
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then8
  br label %if.end12, !dbg !15856

if.end12:                                         ; preds = %if.then2, %if.end11, %if.end3
  ret void, !dbg !15857
}

; Function Attrs: noinline nounwind uwtable
define internal void @vgroup_copy_active_to_sel(%struct.Object* %ob, i32 %subset_type) #0 !dbg !15858 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %subset_type.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %dvert_act = alloca %struct.MDeformVert*, align 8
  %i = alloca i32, align 4
  %vgroup_tot = alloca i32, align 4
  %subset_count = alloca i32, align 4
  %vgroup_validmap = alloca i8*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %eve_act = alloca %struct.BMVert*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %dv20 = alloca %struct.MDeformVert*, align 8
  %v_act = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15859, metadata !DIExpression()), !dbg !15860
  store i32 %subset_type, i32* %subset_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subset_type.addr, metadata !15861, metadata !DIExpression()), !dbg !15862
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !15863, metadata !DIExpression()), !dbg !15864
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15865
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !15866
  %1 = load i8*, i8** %data, align 8, !dbg !15866
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !15865
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !15864
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !15867, metadata !DIExpression()), !dbg !15868
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15869
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 20, !dbg !15870
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !15870
  store %struct.BMEditMesh* %4, %struct.BMEditMesh** %em, align 8, !dbg !15868
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert_act, metadata !15871, metadata !DIExpression()), !dbg !15872
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15873, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.declare(metadata i32* %vgroup_tot, metadata !15875, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.declare(metadata i32* %subset_count, metadata !15877, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.declare(metadata i8** %vgroup_validmap, metadata !15879, metadata !DIExpression()), !dbg !15880
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15881
  %6 = load i32, i32* %subset_type.addr, align 4, !dbg !15882
  %call = call i8* @ED_vgroup_subset_from_select_type(%struct.Object* %5, i32 %6, i32* %vgroup_tot, i32* %subset_count), !dbg !15883
  store i8* %call, i8** %vgroup_validmap, align 8, !dbg !15880
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15884
  %tobool = icmp ne %struct.BMEditMesh* %7, null, !dbg !15884
  br i1 %tobool, label %if.then, label %if.else, !dbg !15886

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !15887, metadata !DIExpression()), !dbg !15889
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !15890, metadata !DIExpression()), !dbg !15891
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve_act, metadata !15892, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !15894, metadata !DIExpression()), !dbg !15895
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15896
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !15897
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !15897
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 24, !dbg !15898
  %call1 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !15899
  store i32 %call1, i32* %cd_dvert_offset, align 4, !dbg !15895
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15900
  %call2 = call %struct.MDeformVert* @ED_mesh_active_dvert_get_em(%struct.Object* %10, %struct.BMVert** %eve_act), !dbg !15901
  store %struct.MDeformVert* %call2, %struct.MDeformVert** %dvert_act, align 8, !dbg !15902
  %11 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15903
  %tobool3 = icmp ne %struct.MDeformVert* %11, null, !dbg !15903
  br i1 %tobool3, label %if.then4, label %if.end19, !dbg !15905

if.then4:                                         ; preds = %if.then
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15906
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !15906
  %13 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !15906
  %call6 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %13, i8 zeroext 1, i8* null), !dbg !15906
  %14 = bitcast i8* %call6 to %struct.BMVert*, !dbg !15906
  store %struct.BMVert* %14, %struct.BMVert** %eve, align 8, !dbg !15906
  store i32 0, i32* %i, align 4, !dbg !15906
  br label %for.cond, !dbg !15906

for.cond:                                         ; preds = %for.inc, %if.then4
  %15 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15909
  %tobool7 = icmp ne %struct.BMVert* %15, null, !dbg !15906
  br i1 %tobool7, label %for.body, label %for.end, !dbg !15906

for.body:                                         ; preds = %for.cond
  %16 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15911
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 0, !dbg !15911
  %call8 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !15911
  %conv = zext i8 %call8 to i32, !dbg !15911
  %tobool9 = icmp ne i32 %conv, 0, !dbg !15911
  br i1 %tobool9, label %land.lhs.true, label %if.end17, !dbg !15914

land.lhs.true:                                    ; preds = %for.body
  %17 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15915
  %18 = load %struct.BMVert*, %struct.BMVert** %eve_act, align 8, !dbg !15916
  %cmp = icmp ne %struct.BMVert* %17, %18, !dbg !15917
  br i1 %cmp, label %if.then11, label %if.end17, !dbg !15918

if.then11:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !15919, metadata !DIExpression()), !dbg !15921
  %19 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15922
  %head12 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 0, !dbg !15922
  %data13 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head12, i32 0, i32 0, !dbg !15922
  %20 = load i8*, i8** %data13, align 8, !dbg !15922
  %21 = load i32, i32* %cd_dvert_offset, align 4, !dbg !15922
  %idx.ext = sext i32 %21 to i64, !dbg !15922
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !15922
  %22 = bitcast i8* %add.ptr to %struct.MDeformVert*, !dbg !15922
  store %struct.MDeformVert* %22, %struct.MDeformVert** %dv, align 8, !dbg !15921
  %23 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !15923
  %24 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15924
  %25 = load i8*, i8** %vgroup_validmap, align 8, !dbg !15925
  %26 = load i32, i32* %vgroup_tot, align 4, !dbg !15926
  call void @defvert_copy_subset(%struct.MDeformVert* %23, %struct.MDeformVert* %24, i8* %25, i32 %26), !dbg !15927
  %27 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15928
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 46, !dbg !15930
  %28 = load i8, i8* %editflag, align 1, !dbg !15930
  %conv14 = zext i8 %28 to i32, !dbg !15928
  %and = and i32 %conv14, 1, !dbg !15931
  %tobool15 = icmp ne i32 %and, 0, !dbg !15931
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !15932

if.then16:                                        ; preds = %if.then11
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15933
  %30 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !15935
  %31 = load i32, i32* %i, align 4, !dbg !15936
  %32 = load i32, i32* %cd_dvert_offset, align 4, !dbg !15937
  call void @ED_mesh_defvert_mirror_update_em(%struct.Object* %29, %struct.BMVert* %30, i32 -1, i32 %31, i32 %32), !dbg !15938
  br label %if.end, !dbg !15939

if.end:                                           ; preds = %if.then16, %if.then11
  br label %if.end17, !dbg !15940

if.end17:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !15941

for.inc:                                          ; preds = %if.end17
  %call18 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !15909
  %33 = bitcast i8* %call18 to %struct.BMVert*, !dbg !15909
  store %struct.BMVert* %33, %struct.BMVert** %eve, align 8, !dbg !15909
  %34 = load i32, i32* %i, align 4, !dbg !15909
  %inc = add nsw i32 %34, 1, !dbg !15909
  store i32 %inc, i32* %i, align 4, !dbg !15909
  br label %for.cond, !dbg !15909, !llvm.loop !15942

for.end:                                          ; preds = %for.cond
  br label %if.end19, !dbg !15944

if.end19:                                         ; preds = %for.end, %if.then
  br label %if.end46, !dbg !15945

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv20, metadata !15946, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.declare(metadata i32* %v_act, metadata !15949, metadata !DIExpression()), !dbg !15950
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15951
  %call21 = call %struct.MDeformVert* @ED_mesh_active_dvert_get_ob(%struct.Object* %35, i32* %v_act), !dbg !15952
  store %struct.MDeformVert* %call21, %struct.MDeformVert** %dvert_act, align 8, !dbg !15953
  %36 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15954
  %tobool22 = icmp ne %struct.MDeformVert* %36, null, !dbg !15954
  br i1 %tobool22, label %if.then23, label %if.end45, !dbg !15956

if.then23:                                        ; preds = %if.else
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15957
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 17, !dbg !15959
  %38 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !15959
  store %struct.MDeformVert* %38, %struct.MDeformVert** %dv20, align 8, !dbg !15960
  store i32 0, i32* %i, align 4, !dbg !15961
  br label %for.cond24, !dbg !15963

for.cond24:                                       ; preds = %for.inc42, %if.then23
  %39 = load i32, i32* %i, align 4, !dbg !15964
  %40 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15966
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %40, i32 0, i32 26, !dbg !15967
  %41 = load i32, i32* %totvert, align 8, !dbg !15967
  %cmp25 = icmp slt i32 %39, %41, !dbg !15968
  br i1 %cmp25, label %for.body27, label %for.end44, !dbg !15969

for.body27:                                       ; preds = %for.cond24
  %42 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15970
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 15, !dbg !15973
  %43 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15973
  %44 = load i32, i32* %i, align 4, !dbg !15974
  %idxprom = sext i32 %44 to i64, !dbg !15970
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %43, i64 %idxprom, !dbg !15970
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 2, !dbg !15975
  %45 = load i8, i8* %flag, align 2, !dbg !15975
  %conv28 = zext i8 %45 to i32, !dbg !15970
  %and29 = and i32 %conv28, 1, !dbg !15976
  %tobool30 = icmp ne i32 %and29, 0, !dbg !15976
  br i1 %tobool30, label %land.lhs.true31, label %if.end41, !dbg !15977

land.lhs.true31:                                  ; preds = %for.body27
  %46 = load %struct.MDeformVert*, %struct.MDeformVert** %dv20, align 8, !dbg !15978
  %47 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15979
  %cmp32 = icmp ne %struct.MDeformVert* %46, %47, !dbg !15980
  br i1 %cmp32, label %if.then34, label %if.end41, !dbg !15981

if.then34:                                        ; preds = %land.lhs.true31
  %48 = load %struct.MDeformVert*, %struct.MDeformVert** %dv20, align 8, !dbg !15982
  %49 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert_act, align 8, !dbg !15984
  %50 = load i8*, i8** %vgroup_validmap, align 8, !dbg !15985
  %51 = load i32, i32* %vgroup_tot, align 4, !dbg !15986
  call void @defvert_copy_subset(%struct.MDeformVert* %48, %struct.MDeformVert* %49, i8* %50, i32 %51), !dbg !15987
  %52 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15988
  %editflag35 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %52, i32 0, i32 46, !dbg !15990
  %53 = load i8, i8* %editflag35, align 1, !dbg !15990
  %conv36 = zext i8 %53 to i32, !dbg !15988
  %and37 = and i32 %conv36, 1, !dbg !15991
  %tobool38 = icmp ne i32 %and37, 0, !dbg !15991
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !15992

if.then39:                                        ; preds = %if.then34
  %54 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15993
  %55 = load i32, i32* %i, align 4, !dbg !15995
  call void @ED_mesh_defvert_mirror_update_ob(%struct.Object* %54, i32 -1, i32 %55), !dbg !15996
  br label %if.end40, !dbg !15997

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !15998

if.end41:                                         ; preds = %if.end40, %land.lhs.true31, %for.body27
  br label %for.inc42, !dbg !15999

for.inc42:                                        ; preds = %if.end41
  %56 = load i32, i32* %i, align 4, !dbg !16000
  %inc43 = add nsw i32 %56, 1, !dbg !16000
  store i32 %inc43, i32* %i, align 4, !dbg !16000
  %57 = load %struct.MDeformVert*, %struct.MDeformVert** %dv20, align 8, !dbg !16001
  %incdec.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %57, i32 1, !dbg !16001
  store %struct.MDeformVert* %incdec.ptr, %struct.MDeformVert** %dv20, align 8, !dbg !16001
  br label %for.cond24, !dbg !16002, !llvm.loop !16003

for.end44:                                        ; preds = %for.cond24
  br label %if.end45, !dbg !16005

if.end45:                                         ; preds = %for.end44, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end19
  %58 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16006
  %59 = load i8*, i8** %vgroup_validmap, align 8, !dbg !16007
  call void %58(i8* %59), !dbg !16006
  ret void, !dbg !16008
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3865, !3866, !3867}
!llvm.ident = !{!3868}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "WT_vertex_group_select_item", scope: !2, file: !3, line: 795, type: !3858, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1225, globals: !3599, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/object/object_vgroup.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !44, !57, !68, !74, !80, !88, !95, !139, !156, !166, !172, !180, !187, !221, !227, !236, !267, !271, !277, !281, !285, !338, !344, !353, !364, !375}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !34, line: 666, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43}
!36 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!40 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!41 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!42 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!43 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 339, baseType: !7, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!46 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!52 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!53 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!54 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!55 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!56 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !58, line: 94, baseType: !7, size: 32, elements: !59)
!58 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!59 = !{!60, !61, !62, !63, !64, !65, !66, !67}
!60 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!65 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!66 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!67 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !58, line: 116, baseType: !7, size: 32, elements: !69)
!69 = !{!70, !71, !72, !73}
!70 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!73 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !58, line: 131, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!77 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!78 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!79 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !58, line: 123, baseType: !7, size: 32, elements: !81)
!81 = !{!82, !83, !84, !85, !86, !87}
!82 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!83 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!84 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!85 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!86 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!87 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 182, baseType: !7, size: 32, elements: !89)
!89 = !{!90, !91, !92, !93, !94}
!90 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!93 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !96, line: 76, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138}
!98 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!113 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!114 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!115 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!116 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!117 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!118 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!119 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!120 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!121 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!122 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!123 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!124 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!125 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!126 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!127 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!128 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!129 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!130 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!131 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!132 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!133 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!134 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!135 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!136 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!137 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!138 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !140, line: 57, baseType: !7, size: 32, elements: !141)
!140 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!141 = !{!142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155}
!142 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!143 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!144 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!145 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!146 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!147 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!148 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!149 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!150 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!151 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!152 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!153 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!154 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!155 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !157, line: 260, baseType: !7, size: 32, elements: !158)
!157 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!158 = !{!159, !160, !161, !162, !163, !164, !165}
!159 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!162 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!163 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!164 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!165 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !157, line: 249, baseType: !7, size: 32, elements: !167)
!167 = !{!168, !169, !170, !171}
!168 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!169 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!170 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!171 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eVGroupSelect", file: !173, line: 1622, baseType: !7, size: 32, elements: !174)
!173 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!174 = !{!175, !176, !177, !178, !179}
!175 = !DIEnumerator(name: "WT_VGROUP_ALL", value: 0, isUnsigned: true)
!176 = !DIEnumerator(name: "WT_VGROUP_ACTIVE", value: 1, isUnsigned: true)
!177 = !DIEnumerator(name: "WT_VGROUP_BONE_SELECT", value: 2, isUnsigned: true)
!178 = !DIEnumerator(name: "WT_VGROUP_BONE_DEFORM", value: 3, isUnsigned: true)
!179 = !DIEnumerator(name: "WT_VGROUP_BONE_DEFORM_OFF", value: 4, isUnsigned: true)
!180 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !181, line: 304, baseType: !7, size: 32, elements: !182)
!181 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!182 = !{!183, !184, !185, !186}
!183 = !DIEnumerator(name: "ME_VERT_TMP_TAG", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "ME_HIDE", value: 16, isUnsigned: true)
!185 = !DIEnumerator(name: "ME_VERT_MERGED", value: 64, isUnsigned: true)
!186 = !DIEnumerator(name: "ME_VERT_PBVH_UPDATE", value: 128, isUnsigned: true)
!187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !188, line: 151, baseType: !7, size: 32, elements: !189)
!188 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!189 = !{!190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!190 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!191 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!192 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!193 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!194 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!195 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!196 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!198 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!199 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!200 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!201 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!202 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!203 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!204 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!205 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!206 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!207 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!208 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!209 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!210 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!211 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!212 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!213 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!214 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!215 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!216 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!217 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!218 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!219 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!220 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 2089, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226}
!223 = !DIEnumerator(name: "VGROUP_TOGGLE", value: 0, isUnsigned: true)
!224 = !DIEnumerator(name: "VGROUP_LOCK", value: 1, isUnsigned: true)
!225 = !DIEnumerator(name: "VGROUP_UNLOCK", value: 2, isUnsigned: true)
!226 = !DIEnumerator(name: "VGROUP_INVERT", value: 3, isUnsigned: true)
!227 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyType", file: !188, line: 71, baseType: !7, size: 32, elements: !228)
!228 = !{!229, !230, !231, !232, !233, !234, !235}
!229 = !DIEnumerator(name: "PROP_BOOLEAN", value: 0, isUnsigned: true)
!230 = !DIEnumerator(name: "PROP_INT", value: 1, isUnsigned: true)
!231 = !DIEnumerator(name: "PROP_FLOAT", value: 2, isUnsigned: true)
!232 = !DIEnumerator(name: "PROP_STRING", value: 3, isUnsigned: true)
!233 = !DIEnumerator(name: "PROP_ENUM", value: 4, isUnsigned: true)
!234 = !DIEnumerator(name: "PROP_POINTER", value: 5, isUnsigned: true)
!235 = !DIEnumerator(name: "PROP_COLLECTION", value: 6, isUnsigned: true)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !188, line: 107, baseType: !7, size: 32, elements: !237)
!237 = !{!238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266}
!238 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!239 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!240 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!241 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!242 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!243 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!244 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!245 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!246 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!247 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!248 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!249 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!250 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!251 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!252 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!253 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!254 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!255 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!256 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!257 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!258 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!259 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!260 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!261 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!262 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!263 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!264 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!265 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!266 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!267 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WT_VertexGroupMode", file: !3, line: 750, baseType: !7, size: 32, elements: !268)
!268 = !{!269, !270}
!269 = !DIEnumerator(name: "WT_REPLACE_ACTIVE_VERTEX_GROUP", value: 1, isUnsigned: true)
!270 = !DIEnumerator(name: "WT_REPLACE_ALL_VERTEX_GROUPS", value: 2, isUnsigned: true)
!271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WT_Method", file: !3, line: 755, baseType: !7, size: 32, elements: !272)
!272 = !{!273, !274, !275, !276}
!273 = !DIEnumerator(name: "WT_BY_INDEX", value: 1, isUnsigned: true)
!274 = !DIEnumerator(name: "WT_BY_NEAREST_VERTEX", value: 2, isUnsigned: true)
!275 = !DIEnumerator(name: "WT_BY_NEAREST_FACE", value: 3, isUnsigned: true)
!276 = !DIEnumerator(name: "WT_BY_NEAREST_VERTEX_IN_FACE", value: 4, isUnsigned: true)
!277 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WT_ReplaceMode", file: !3, line: 762, baseType: !7, size: 32, elements: !278)
!278 = !{!279, !280}
!279 = !DIEnumerator(name: "WT_REPLACE_ALL_WEIGHTS", value: 1, isUnsigned: true)
!280 = !DIEnumerator(name: "WT_REPLACE_EMPTY_WEIGHTS", value: 2, isUnsigned: true)
!281 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 4363, baseType: !7, size: 32, elements: !282)
!282 = !{!283, !284}
!283 = !DIEnumerator(name: "SORT_TYPE_NAME", value: 0, isUnsigned: true)
!284 = !DIEnumerator(name: "SORT_TYPE_BONEHIERARCHY", value: 1, isUnsigned: true)
!285 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !286, line: 35, baseType: !7, size: 32, elements: !287)
!286 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!287 = !{!288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337}
!288 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!289 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!290 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!291 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!292 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!293 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!294 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!295 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!296 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!297 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!298 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!299 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!300 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!301 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!302 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!303 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!304 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!305 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!306 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!307 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!308 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!309 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!310 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!311 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!312 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!313 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!314 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!315 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!316 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!317 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!318 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!319 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!320 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!321 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!322 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!323 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!324 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!325 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!326 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!327 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!328 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!329 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!330 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!331 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!332 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!333 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!334 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!335 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!336 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!337 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 519, baseType: !7, size: 32, elements: !339)
!339 = !{!340, !341, !342, !343}
!340 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!342 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!343 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!344 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !345, line: 351, baseType: !7, size: 32, elements: !346)
!345 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!346 = !{!347, !348, !349, !350, !351, !352}
!347 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!348 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!349 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!350 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!351 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!352 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !286, line: 88, baseType: !354, size: 32, elements: !355)
!354 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!355 = !{!356, !357, !358, !359, !360, !361, !362, !363}
!356 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!357 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!358 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!359 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!360 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!361 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!362 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!363 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!364 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !345, line: 67, baseType: !7, size: 32, elements: !365)
!365 = !{!366, !367, !368, !369, !370, !371, !372, !373, !374}
!366 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!367 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!368 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!369 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!370 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!371 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!372 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!373 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!374 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!375 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !376, line: 40, baseType: !7, size: 32, elements: !377)
!376 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!377 = !{!378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224}
!378 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!924 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!925 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!926 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!927 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!928 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!929 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!930 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!931 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!932 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!933 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!934 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!935 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!936 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!937 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!938 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!939 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!940 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!941 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!942 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!943 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!944 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!945 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!946 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!947 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!948 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!949 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!950 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!951 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!952 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!953 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!954 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!955 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!956 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!957 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!958 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!959 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!960 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!961 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!962 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!963 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!964 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!965 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!966 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!967 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!968 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!969 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!970 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!971 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!972 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!973 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!974 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!975 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!976 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!977 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!978 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!979 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!980 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!981 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!982 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!983 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!984 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!985 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!986 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!987 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!988 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!989 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!990 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!991 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!992 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!993 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!994 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!995 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!996 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!997 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!998 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!999 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!1000 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!1001 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!1002 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!1003 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!1004 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!1005 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!1006 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!1007 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!1008 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!1009 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!1010 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!1011 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!1012 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!1013 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!1014 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!1015 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!1016 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!1017 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!1018 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!1019 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!1020 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!1021 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!1022 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!1023 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!1024 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!1025 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!1026 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!1027 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!1028 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!1029 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!1030 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!1031 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!1032 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!1033 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!1034 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!1035 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!1036 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!1037 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!1038 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!1039 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!1040 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!1041 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!1042 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!1043 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!1044 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!1045 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!1046 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!1047 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!1048 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!1049 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!1050 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!1051 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!1052 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!1053 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!1054 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!1055 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!1056 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!1057 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!1058 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!1059 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!1060 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!1061 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!1062 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!1063 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!1064 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!1065 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!1066 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!1067 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!1068 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!1069 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!1070 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!1071 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!1072 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!1073 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!1074 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!1075 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!1076 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!1077 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!1078 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!1079 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!1080 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!1081 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!1082 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!1083 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!1084 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!1085 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!1086 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!1087 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!1088 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!1089 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!1090 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!1091 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!1092 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!1093 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!1094 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!1095 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!1096 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!1097 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!1098 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!1099 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!1100 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!1101 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!1102 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!1103 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!1104 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!1105 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!1106 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!1107 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!1108 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!1109 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!1110 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!1111 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!1112 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!1113 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!1114 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!1115 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!1116 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!1117 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!1118 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!1119 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!1120 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!1121 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!1122 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!1123 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!1124 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!1125 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!1126 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!1127 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!1128 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!1129 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!1130 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!1131 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!1132 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!1133 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!1134 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!1135 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!1136 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!1137 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!1138 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!1139 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!1140 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!1141 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!1142 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!1143 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!1144 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!1145 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!1146 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!1147 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!1148 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!1149 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!1150 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!1151 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!1152 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!1153 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!1154 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!1155 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!1156 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!1157 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!1158 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!1159 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!1160 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!1161 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!1162 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!1163 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!1164 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!1165 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!1166 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!1167 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!1168 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!1169 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!1170 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!1171 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!1172 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!1173 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!1174 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!1175 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!1176 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!1177 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!1178 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!1179 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!1180 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!1181 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!1182 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!1183 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!1184 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!1185 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!1186 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!1187 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!1188 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!1189 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!1190 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!1191 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!1192 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!1193 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!1194 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!1195 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!1196 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!1197 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!1198 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!1199 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!1200 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!1201 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!1202 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!1203 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!1204 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!1205 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!1206 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!1207 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!1208 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!1209 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!1210 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!1211 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!1212 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!1213 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!1214 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!1215 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!1216 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!1217 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!1218 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!1219 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!1220 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!1221 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!1222 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!1223 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!1224 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!1225 = !{!1226, !1227, !1368, !1381, !1382, !1383, !3490, !3491, !3495, !1627, !1688, !1692, !1670, !3499, !3522, !3597, !1733, !1320}
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !1229, line: 72, baseType: !1230)
!1229 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !1229, line: 52, size: 2240, elements: !1231)
!1231 = !{!1232, !1302, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1321, !1322, !1323, !1324, !1325, !1326, !1340, !1343, !1346, !1358, !1359}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1230, file: !1229, line: 53, baseType: !1233, size: 960)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1234, line: 130, baseType: !1235)
!1234 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1234, line: 117, size: 960, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1241, !1261, !1265, !1267, !1268, !1269, !1270}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1235, file: !1234, line: 118, baseType: !1226, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1235, file: !1234, line: 118, baseType: !1226, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1235, file: !1234, line: 119, baseType: !1240, size: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1235, file: !1234, line: 120, baseType: !1242, size: 64, offset: 192)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1234, line: 136, size: 17600, elements: !1244)
!1244 = !{!1245, !1246, !1248, !1251, !1256, !1257, !1258}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1243, file: !1234, line: 137, baseType: !1233, size: 960)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1243, file: !1234, line: 138, baseType: !1247, size: 64, offset: 960)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1243, file: !1234, line: 139, baseType: !1249, size: 64, offset: 1024)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1234, line: 43, flags: DIFlagFwdDecl)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1243, file: !1234, line: 140, baseType: !1252, size: 8192, offset: 1088)
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 8192, elements: !1254)
!1253 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1254 = !{!1255}
!1255 = !DISubrange(count: 1024)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1243, file: !1234, line: 141, baseType: !1252, size: 8192, offset: 9280)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1243, file: !1234, line: 148, baseType: !1242, size: 64, offset: 17472)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1243, file: !1234, line: 150, baseType: !1259, size: 64, offset: 17536)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1234, line: 45, flags: DIFlagFwdDecl)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1235, file: !1234, line: 121, baseType: !1262, size: 528, offset: 256)
!1262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 528, elements: !1263)
!1263 = !{!1264}
!1264 = !DISubrange(count: 66)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1235, file: !1234, line: 126, baseType: !1266, size: 16, offset: 784)
!1266 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1235, file: !1234, line: 127, baseType: !354, size: 32, offset: 800)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1235, file: !1234, line: 128, baseType: !354, size: 32, offset: 832)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1235, file: !1234, line: 128, baseType: !354, size: 32, offset: 864)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1235, file: !1234, line: 129, baseType: !1271, size: 64, offset: 896)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1234, line: 75, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1234, line: 62, size: 1024, elements: !1274)
!1274 = !{!1275, !1277, !1278, !1279, !1280, !1281, !1285, !1286, !1300, !1301}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1273, file: !1234, line: 63, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1273, file: !1234, line: 63, baseType: !1276, size: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1273, file: !1234, line: 64, baseType: !1253, size: 8, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1273, file: !1234, line: 64, baseType: !1253, size: 8, offset: 136)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1273, file: !1234, line: 65, baseType: !1266, size: 16, offset: 144)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1273, file: !1234, line: 66, baseType: !1282, size: 512, offset: 160)
!1282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 512, elements: !1283)
!1283 = !{!1284}
!1284 = !DISubrange(count: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1273, file: !1234, line: 67, baseType: !354, size: 32, offset: 672)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1273, file: !1234, line: 69, baseType: !1287, size: 256, offset: 704)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1234, line: 60, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1234, line: 48, size: 256, elements: !1289)
!1289 = !{!1290, !1291, !1298, !1299}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1288, file: !1234, line: 49, baseType: !1226, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1288, file: !1234, line: 58, baseType: !1292, size: 128, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1293, line: 71, baseType: !1294)
!1293 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1293, line: 69, size: 128, elements: !1295)
!1295 = !{!1296, !1297}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1294, file: !1293, line: 70, baseType: !1226, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1294, file: !1293, line: 70, baseType: !1226, size: 64, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1288, file: !1234, line: 59, baseType: !354, size: 32, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1288, file: !1234, line: 59, baseType: !354, size: 32, offset: 224)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1273, file: !1234, line: 70, baseType: !354, size: 32, offset: 960)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1273, file: !1234, line: 74, baseType: !354, size: 32, offset: 992)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1230, file: !1229, line: 54, baseType: !1303, size: 64, offset: 960)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1305, line: 48, flags: DIFlagFwdDecl)
!1305 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !1230, file: !1229, line: 56, baseType: !1266, size: 16, offset: 1024)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !1230, file: !1229, line: 56, baseType: !1266, size: 16, offset: 1040)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !1230, file: !1229, line: 56, baseType: !1266, size: 16, offset: 1056)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1230, file: !1229, line: 56, baseType: !1266, size: 16, offset: 1072)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !1230, file: !1229, line: 57, baseType: !1266, size: 16, offset: 1088)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !1230, file: !1229, line: 57, baseType: !1266, size: 16, offset: 1104)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !1230, file: !1229, line: 57, baseType: !1266, size: 16, offset: 1120)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1230, file: !1229, line: 57, baseType: !1266, size: 16, offset: 1136)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !1230, file: !1229, line: 58, baseType: !1253, size: 8, offset: 1152)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !1230, file: !1229, line: 58, baseType: !1253, size: 8, offset: 1160)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !1230, file: !1229, line: 58, baseType: !1253, size: 8, offset: 1168)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1230, file: !1229, line: 58, baseType: !1253, size: 8, offset: 1176)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !1230, file: !1229, line: 59, baseType: !354, size: 32, offset: 1184)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !1230, file: !1229, line: 61, baseType: !1320, size: 32, offset: 1216)
!1320 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1230, file: !1229, line: 61, baseType: !1320, size: 32, offset: 1248)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !1230, file: !1229, line: 61, baseType: !1320, size: 32, offset: 1280)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !1230, file: !1229, line: 61, baseType: !1320, size: 32, offset: 1312)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !1230, file: !1229, line: 61, baseType: !1320, size: 32, offset: 1344)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1230, file: !1229, line: 61, baseType: !1320, size: 32, offset: 1376)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1230, file: !1229, line: 63, baseType: !1327, size: 64, offset: 1408)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !1305, line: 136, size: 288, elements: !1329)
!1329 = !{!1330, !1334, !1335, !1336, !1337, !1338, !1339}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1328, file: !1305, line: 137, baseType: !1331, size: 128)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 128, elements: !1332)
!1332 = !{!1333}
!1333 = !DISubrange(count: 4)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1328, file: !1305, line: 138, baseType: !1320, size: 32, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1328, file: !1305, line: 138, baseType: !1320, size: 32, offset: 160)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1328, file: !1305, line: 139, baseType: !1266, size: 16, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1328, file: !1305, line: 139, baseType: !1266, size: 16, offset: 208)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1328, file: !1305, line: 140, baseType: !1320, size: 32, offset: 224)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1328, file: !1305, line: 140, baseType: !1320, size: 32, offset: 256)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1230, file: !1229, line: 65, baseType: !1341, size: 64, offset: 1472)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1305, line: 44, flags: DIFlagFwdDecl)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1230, file: !1229, line: 66, baseType: !1344, size: 64, offset: 1536)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !1305, line: 45, flags: DIFlagFwdDecl)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !1230, file: !1229, line: 68, baseType: !1347, size: 64, offset: 1600)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !181, line: 59, size: 128, elements: !1349)
!1349 = !{!1350, !1356, !1357}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1348, file: !181, line: 60, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !181, line: 54, size: 64, elements: !1353)
!1353 = !{!1354, !1355}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1352, file: !181, line: 55, baseType: !354, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1352, file: !181, line: 56, baseType: !1320, size: 32, offset: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1348, file: !181, line: 61, baseType: !354, size: 32, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1348, file: !181, line: 62, baseType: !354, size: 32, offset: 96)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !1230, file: !1229, line: 69, baseType: !1282, size: 512, offset: 1664)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !1230, file: !1229, line: 71, baseType: !1360, size: 64, offset: 2176)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !1229, line: 44, size: 128, elements: !1362)
!1362 = !{!1363, !1365, !1366}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !1361, file: !1229, line: 45, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1361, file: !1229, line: 47, baseType: !354, size: 32, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1361, file: !1229, line: 49, baseType: !1367, size: 32, offset: 96)
!1367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 32, elements: !1332)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDeformGroup", file: !34, line: 68, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDeformGroup", file: !34, line: 63, size: 704, elements: !1371)
!1371 = !{!1372, !1374, !1375, !1376, !1377}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1370, file: !34, line: 64, baseType: !1373, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1370, file: !34, line: 64, baseType: !1373, size: 64, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1370, file: !34, line: 65, baseType: !1282, size: 512, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1370, file: !34, line: 67, baseType: !1253, size: 8, offset: 640)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1370, file: !34, line: 67, baseType: !1378, size: 56, offset: 648)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 56, elements: !1379)
!1379 = !{!1380}
!1380 = !DISubrange(count: 7)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !1385, line: 133, baseType: !1386)
!1385 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !1385, line: 58, size: 11008, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1401, !1402, !1403, !1407, !1413, !1422, !1512, !1518, !1525, !1533, !1544, !1557, !1570, !1581, !1590, !1591, !1599, !1601, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1386, file: !1385, line: 59, baseType: !1233, size: 960)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1386, file: !1385, line: 60, baseType: !1303, size: 64, offset: 960)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1386, file: !1385, line: 62, baseType: !1391, size: 64, offset: 1024)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !34, line: 97, size: 832, elements: !1393)
!1393 = !{!1394, !1399, !1400}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1392, file: !34, line: 98, baseType: !1395, size: 768)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 768, elements: !1396)
!1396 = !{!1397, !1398}
!1397 = !DISubrange(count: 8)
!1398 = !DISubrange(count: 3)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1392, file: !34, line: 99, baseType: !354, size: 32, offset: 768)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1392, file: !34, line: 99, baseType: !354, size: 32, offset: 800)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1386, file: !1385, line: 64, baseType: !1341, size: 64, offset: 1088)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1386, file: !1385, line: 65, baseType: !1344, size: 64, offset: 1152)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1386, file: !1385, line: 66, baseType: !1404, size: 64, offset: 1216)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !1305, line: 46, flags: DIFlagFwdDecl)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !1386, file: !1385, line: 67, baseType: !1408, size: 64, offset: 1280)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !181, line: 154, size: 64, elements: !1410)
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1409, file: !181, line: 155, baseType: !354, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1409, file: !181, line: 156, baseType: !354, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !1386, file: !1385, line: 71, baseType: !1414, size: 64, offset: 1344)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !181, line: 79, size: 96, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420, !1421}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !1415, file: !181, line: 81, baseType: !354, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1415, file: !181, line: 82, baseType: !354, size: 32, offset: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1415, file: !181, line: 83, baseType: !1266, size: 16, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1415, file: !181, line: 84, baseType: !1253, size: 8, offset: 80)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1415, file: !181, line: 84, baseType: !1253, size: 8, offset: 88)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !1386, file: !1385, line: 72, baseType: !1423, size: 64, offset: 1408)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !181, line: 93, size: 128, elements: !1425)
!1425 = !{!1426, !1507, !1508, !1509, !1510, !1511}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1424, file: !181, line: 94, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1429, line: 77, size: 15424, elements: !1430)
!1429 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1430 = !{!1431, !1432, !1433, !1436, !1439, !1442, !1445, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1464, !1465, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1499, !1500, !1501}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1428, file: !1429, line: 78, baseType: !1233, size: 960)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1428, file: !1429, line: 80, baseType: !1252, size: 8192, offset: 960)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1428, file: !1429, line: 82, baseType: !1434, size: 64, offset: 9152)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1429, line: 43, flags: DIFlagFwdDecl)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1428, file: !1429, line: 83, baseType: !1437, size: 64, offset: 9216)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1234, line: 46, flags: DIFlagFwdDecl)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1428, file: !1429, line: 86, baseType: !1440, size: 64, offset: 9280)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1429, line: 41, flags: DIFlagFwdDecl)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1428, file: !1429, line: 87, baseType: !1443, size: 64, offset: 9344)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1429, line: 44, flags: DIFlagFwdDecl)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1428, file: !1429, line: 89, baseType: !1446, size: 512, offset: 9408)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1443, size: 512, elements: !1447)
!1447 = !{!1397}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1428, file: !1429, line: 90, baseType: !1266, size: 16, offset: 9920)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1428, file: !1429, line: 90, baseType: !1266, size: 16, offset: 9936)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1428, file: !1429, line: 92, baseType: !1266, size: 16, offset: 9952)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1428, file: !1429, line: 92, baseType: !1266, size: 16, offset: 9968)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1428, file: !1429, line: 93, baseType: !1266, size: 16, offset: 9984)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1428, file: !1429, line: 93, baseType: !1266, size: 16, offset: 10000)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1428, file: !1429, line: 94, baseType: !354, size: 32, offset: 10016)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1428, file: !1429, line: 97, baseType: !1266, size: 16, offset: 10048)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1428, file: !1429, line: 97, baseType: !1266, size: 16, offset: 10064)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1428, file: !1429, line: 98, baseType: !1266, size: 16, offset: 10080)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1428, file: !1429, line: 98, baseType: !1266, size: 16, offset: 10096)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1428, file: !1429, line: 99, baseType: !1266, size: 16, offset: 10112)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1428, file: !1429, line: 99, baseType: !1266, size: 16, offset: 10128)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1428, file: !1429, line: 100, baseType: !7, size: 32, offset: 10144)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1428, file: !1429, line: 101, baseType: !1463, size: 64, offset: 10176)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1428, file: !1429, line: 103, baseType: !1259, size: 64, offset: 10240)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1428, file: !1429, line: 104, baseType: !1466, size: 64, offset: 10304)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1234, line: 159, size: 448, elements: !1468)
!1468 = !{!1469, !1473, !1474, !1476, !1477, !1479}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1467, file: !1234, line: 161, baseType: !1470, size: 64)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1471)
!1471 = !{!1472}
!1472 = !DISubrange(count: 2)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1467, file: !1234, line: 162, baseType: !1470, size: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1467, file: !1234, line: 163, baseType: !1475, size: 32, offset: 128)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 32, elements: !1471)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1467, file: !1234, line: 164, baseType: !1475, size: 32, offset: 160)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1467, file: !1234, line: 165, baseType: !1478, size: 128, offset: 192)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1463, size: 128, elements: !1471)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1467, file: !1234, line: 166, baseType: !1480, size: 128, offset: 320)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1437, size: 128, elements: !1471)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1428, file: !1429, line: 107, baseType: !1320, size: 32, offset: 10368)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1428, file: !1429, line: 108, baseType: !354, size: 32, offset: 10400)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1428, file: !1429, line: 109, baseType: !1266, size: 16, offset: 10432)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1428, file: !1429, line: 110, baseType: !1266, size: 16, offset: 10448)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1428, file: !1429, line: 113, baseType: !354, size: 32, offset: 10464)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1428, file: !1429, line: 113, baseType: !354, size: 32, offset: 10496)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1428, file: !1429, line: 114, baseType: !1253, size: 8, offset: 10528)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1428, file: !1429, line: 114, baseType: !1253, size: 8, offset: 10536)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1428, file: !1429, line: 115, baseType: !1266, size: 16, offset: 10544)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1428, file: !1429, line: 116, baseType: !1331, size: 128, offset: 10560)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1428, file: !1429, line: 119, baseType: !1320, size: 32, offset: 10688)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1428, file: !1429, line: 119, baseType: !1320, size: 32, offset: 10720)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1428, file: !1429, line: 122, baseType: !1494, size: 512, offset: 10752)
!1494 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1495, line: 182, baseType: !1496)
!1495 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1495, line: 180, size: 512, elements: !1497)
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1496, file: !1495, line: 181, baseType: !1282, size: 512)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1428, file: !1429, line: 123, baseType: !1253, size: 8, offset: 11264)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1428, file: !1429, line: 125, baseType: !1378, size: 56, offset: 11272)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1428, file: !1429, line: 126, baseType: !1502, size: 4096, offset: 11328)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1503, size: 4096, elements: !1447)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1429, line: 69, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1429, line: 67, size: 512, elements: !1505)
!1505 = !{!1506}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1504, file: !1429, line: 68, baseType: !1282, size: 512)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1424, file: !181, line: 95, baseType: !1253, size: 8, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1424, file: !181, line: 95, baseType: !1253, size: 8, offset: 72)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1424, file: !181, line: 96, baseType: !1266, size: 16, offset: 80)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1424, file: !181, line: 96, baseType: !1266, size: 16, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1424, file: !181, line: 96, baseType: !1266, size: 16, offset: 112)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !1386, file: !1385, line: 73, baseType: !1513, size: 64, offset: 1472)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !181, line: 88, size: 64, elements: !1515)
!1515 = !{!1516, !1517}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1514, file: !181, line: 89, baseType: !7, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1514, file: !181, line: 90, baseType: !7, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !1386, file: !1385, line: 74, baseType: !1519, size: 64, offset: 1536)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !181, line: 109, size: 96, elements: !1521)
!1521 = !{!1522, !1524}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1520, file: !181, line: 110, baseType: !1523, size: 64)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 64, elements: !1471)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1520, file: !181, line: 111, baseType: !354, size: 32, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !1386, file: !1385, line: 75, baseType: !1526, size: 64, offset: 1600)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !181, line: 129, size: 32, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1527, file: !181, line: 130, baseType: !1253, size: 8)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1527, file: !181, line: 130, baseType: !1253, size: 8, offset: 8)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1527, file: !181, line: 130, baseType: !1253, size: 8, offset: 16)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1527, file: !181, line: 130, baseType: !1253, size: 8, offset: 24)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !1386, file: !1385, line: 80, baseType: !1534, size: 64, offset: 1664)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !181, line: 42, size: 160, elements: !1536)
!1536 = !{!1537, !1538, !1539, !1540, !1541, !1542, !1543}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1535, file: !181, line: 43, baseType: !7, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1535, file: !181, line: 43, baseType: !7, size: 32, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1535, file: !181, line: 43, baseType: !7, size: 32, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1535, file: !181, line: 43, baseType: !7, size: 32, offset: 96)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1535, file: !181, line: 44, baseType: !1266, size: 16, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !1535, file: !181, line: 45, baseType: !1253, size: 8, offset: 144)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1535, file: !181, line: 45, baseType: !1253, size: 8, offset: 152)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !1386, file: !1385, line: 81, baseType: !1545, size: 64, offset: 1728)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !181, line: 160, size: 384, elements: !1547)
!1547 = !{!1548, !1551, !1552, !1553, !1554, !1555, !1556}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1546, file: !181, line: 161, baseType: !1549, size: 256)
!1549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 256, elements: !1550)
!1550 = !{!1333, !1472}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1546, file: !181, line: 162, baseType: !1427, size: 64, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1546, file: !181, line: 163, baseType: !1253, size: 8, offset: 320)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1546, file: !181, line: 163, baseType: !1253, size: 8, offset: 328)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1546, file: !181, line: 164, baseType: !1266, size: 16, offset: 336)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1546, file: !181, line: 164, baseType: !1266, size: 16, offset: 352)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1546, file: !181, line: 164, baseType: !1266, size: 16, offset: 368)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !1386, file: !1385, line: 82, baseType: !1558, size: 64, offset: 1792)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !1385, line: 136, size: 512, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1565, !1566, !1567, !1568, !1569}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1559, file: !1385, line: 137, baseType: !1226, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1559, file: !1385, line: 138, baseType: !1549, size: 256, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1559, file: !1385, line: 139, baseType: !1564, size: 128, offset: 320)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1332)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1559, file: !1385, line: 140, baseType: !1253, size: 8, offset: 448)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1559, file: !1385, line: 140, baseType: !1253, size: 8, offset: 456)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1559, file: !1385, line: 141, baseType: !1266, size: 16, offset: 464)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1559, file: !1385, line: 141, baseType: !1266, size: 16, offset: 480)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1559, file: !1385, line: 141, baseType: !1266, size: 16, offset: 496)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !1386, file: !1385, line: 83, baseType: !1571, size: 64, offset: 1856)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !181, line: 65, size: 160, elements: !1573)
!1573 = !{!1574, !1577, !1579, !1580}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1572, file: !181, line: 66, baseType: !1575, size: 96)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 96, elements: !1576)
!1576 = !{!1398}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1572, file: !181, line: 67, baseType: !1578, size: 48, offset: 96)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 48, elements: !1576)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1572, file: !181, line: 68, baseType: !1253, size: 8, offset: 144)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1572, file: !181, line: 68, baseType: !1253, size: 8, offset: 152)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !1386, file: !1385, line: 84, baseType: !1582, size: 64, offset: 1920)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !181, line: 48, size: 96, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1583, file: !181, line: 49, baseType: !7, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1583, file: !181, line: 49, baseType: !7, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !1583, file: !181, line: 50, baseType: !1253, size: 8, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1583, file: !181, line: 50, baseType: !1253, size: 8, offset: 72)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1583, file: !181, line: 51, baseType: !1266, size: 16, offset: 80)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !1386, file: !1385, line: 85, baseType: !1347, size: 64, offset: 1984)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !1386, file: !1385, line: 89, baseType: !1592, size: 64, offset: 2048)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !181, line: 74, size: 32, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1593, file: !181, line: 75, baseType: !1253, size: 8)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1593, file: !181, line: 75, baseType: !1253, size: 8, offset: 8)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1593, file: !181, line: 75, baseType: !1253, size: 8, offset: 16)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1593, file: !181, line: 75, baseType: !1253, size: 8, offset: 24)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !1386, file: !1385, line: 90, baseType: !1600, size: 64, offset: 2112)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !1386, file: !1385, line: 93, baseType: !1602, size: 64, offset: 2176)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !1604, line: 54, size: 896, elements: !1605)
!1604 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1605 = !{!1606, !1800, !1801, !1802, !1805, !1806, !3430, !3431, !3434, !3436, !3437, !3438, !3439, !3440, !3441, !3442}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !1603, file: !1604, line: 55, baseType: !1607, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !157, line: 186, size: 8064, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1622, !1623, !1624, !1625, !1686, !1690, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1756, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1608, file: !157, line: 187, baseType: !354, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !1608, file: !157, line: 187, baseType: !354, size: 32, offset: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1608, file: !157, line: 187, baseType: !354, size: 32, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !1608, file: !157, line: 187, baseType: !354, size: 32, offset: 96)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !1608, file: !157, line: 188, baseType: !354, size: 32, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !1608, file: !157, line: 188, baseType: !354, size: 32, offset: 160)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !1608, file: !157, line: 188, baseType: !354, size: 32, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !1608, file: !157, line: 193, baseType: !1253, size: 8, offset: 224)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !1608, file: !157, line: 197, baseType: !1253, size: 8, offset: 232)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !1608, file: !157, line: 201, baseType: !1620, size: 64, offset: 256)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !96, line: 71, flags: DIFlagFwdDecl)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !1608, file: !157, line: 201, baseType: !1620, size: 64, offset: 320)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !1608, file: !157, line: 201, baseType: !1620, size: 64, offset: 384)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !1608, file: !157, line: 201, baseType: !1620, size: 64, offset: 448)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1608, file: !157, line: 208, baseType: !1626, size: 64, offset: 512)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !157, line: 103, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !157, line: 90, size: 448, elements: !1630)
!1630 = !{!1631, !1640, !1645, !1646, !1647}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1629, file: !157, line: 91, baseType: !1632, size: 128)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !157, line: 82, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !157, line: 64, size: 128, elements: !1634)
!1634 = !{!1635, !1636, !1637, !1638, !1639}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1633, file: !157, line: 65, baseType: !1226, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1633, file: !157, line: 66, baseType: !354, size: 32, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !1633, file: !157, line: 73, baseType: !1253, size: 8, offset: 96)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !1633, file: !157, line: 74, baseType: !1253, size: 8, offset: 104)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !1633, file: !157, line: 80, baseType: !1253, size: 8, offset: 112)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1629, file: !157, line: 92, baseType: !1641, size: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !157, line: 180, size: 16, elements: !1643)
!1643 = !{!1644}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1642, file: !157, line: 181, baseType: !1266, size: 16)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1629, file: !157, line: 94, baseType: !1575, size: 96, offset: 192)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1629, file: !157, line: 95, baseType: !1575, size: 96, offset: 288)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1629, file: !157, line: 102, baseType: !1648, size: 64, offset: 384)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !157, line: 110, size: 640, elements: !1650)
!1650 = !{!1651, !1652, !1653, !1655, !1656, !1679, !1685}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1649, file: !157, line: 111, baseType: !1632, size: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1649, file: !157, line: 112, baseType: !1641, size: 64, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1649, file: !157, line: 114, baseType: !1654, size: 64, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1649, file: !157, line: 114, baseType: !1654, size: 64, offset: 256)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1649, file: !157, line: 118, baseType: !1657, size: 64, offset: 320)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !157, line: 125, size: 576, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663, !1675, !1676, !1677, !1678}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1658, file: !157, line: 126, baseType: !1632, size: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1658, file: !157, line: 129, baseType: !1654, size: 64, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1658, file: !157, line: 130, baseType: !1648, size: 64, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1658, file: !157, line: 131, baseType: !1664, size: 64, offset: 256)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !157, line: 164, size: 448, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1672, !1673, !1674}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1665, file: !157, line: 165, baseType: !1632, size: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1665, file: !157, line: 166, baseType: !1641, size: 64, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !1665, file: !157, line: 172, baseType: !1670, size: 64, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !157, line: 140, baseType: !1658)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1665, file: !157, line: 174, baseType: !354, size: 32, offset: 256)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1665, file: !157, line: 175, baseType: !1575, size: 96, offset: 288)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1665, file: !157, line: 176, baseType: !1266, size: 16, offset: 384)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !1658, file: !157, line: 135, baseType: !1657, size: 64, offset: 320)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !1658, file: !157, line: 135, baseType: !1657, size: 64, offset: 384)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1658, file: !157, line: 139, baseType: !1657, size: 64, offset: 448)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1658, file: !157, line: 139, baseType: !1657, size: 64, offset: 512)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !1649, file: !157, line: 122, baseType: !1680, size: 128, offset: 384)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !157, line: 108, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !157, line: 106, size: 128, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1681, file: !157, line: 107, baseType: !1648, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1681, file: !157, line: 107, baseType: !1648, size: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !1649, file: !157, line: 122, baseType: !1680, size: 128, offset: 512)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !1608, file: !157, line: 209, baseType: !1687, size: 64, offset: 576)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !157, line: 123, baseType: !1649)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !1608, file: !157, line: 210, baseType: !1691, size: 64, offset: 640)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !157, line: 178, baseType: !1665)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !1608, file: !157, line: 213, baseType: !354, size: 32, offset: 704)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !1608, file: !157, line: 214, baseType: !354, size: 32, offset: 736)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !1608, file: !157, line: 215, baseType: !354, size: 32, offset: 768)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !1608, file: !157, line: 218, baseType: !1620, size: 64, offset: 832)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !1608, file: !157, line: 218, baseType: !1620, size: 64, offset: 896)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !1608, file: !157, line: 218, baseType: !1620, size: 64, offset: 960)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !1608, file: !157, line: 220, baseType: !354, size: 32, offset: 1024)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !1608, file: !157, line: 221, baseType: !1702, size: 64, offset: 1088)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !58, line: 190, size: 10496, elements: !1704)
!1704 = !{!1705, !1741, !1742, !1748, !1752, !1753, !1755}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !1703, file: !58, line: 191, baseType: !1706, size: 5120)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1707, size: 5120, elements: !1739)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !58, line: 147, size: 320, elements: !1708)
!1708 = !{!1709, !1712, !1714, !1724, !1725}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !1707, file: !58, line: 148, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !1707, file: !58, line: 149, baseType: !1713, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !58, line: 112, baseType: !57)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !1707, file: !58, line: 150, baseType: !1715, size: 32, offset: 96)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !58, line: 142, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !58, line: 138, size: 32, elements: !1717)
!1717 = !{!1718, !1720, !1722}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1716, file: !58, line: 139, baseType: !1719, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !58, line: 122, baseType: !68)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1716, file: !58, line: 140, baseType: !1721, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !58, line: 136, baseType: !74)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1716, file: !58, line: 141, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !58, line: 130, baseType: !80)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1707, file: !58, line: 152, baseType: !354, size: 32, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1707, file: !58, line: 162, baseType: !1726, size: 128, offset: 192)
!1726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1707, file: !58, line: 155, size: 128, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1732, !1734}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1726, file: !58, line: 156, baseType: !354, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1726, file: !58, line: 157, baseType: !1320, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1726, file: !58, line: 158, baseType: !1226, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1726, file: !58, line: 159, baseType: !1575, size: 96)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1726, file: !58, line: 160, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1726, file: !58, line: 161, baseType: !1735, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1737, line: 48, baseType: !1738)
!1737 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1738 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1305, line: 51, flags: DIFlagFwdDecl)
!1739 = !{!1740}
!1740 = !DISubrange(count: 16)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !1703, file: !58, line: 192, baseType: !1706, size: 5120, offset: 5120)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1703, file: !58, line: 193, baseType: !1743, size: 64, offset: 10240)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{null, !1746, !1702}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !157, line: 246, baseType: !1608)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !1703, file: !58, line: 194, baseType: !1749, size: 64, offset: 10304)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !1751, line: 38, flags: DIFlagFwdDecl)
!1751 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1703, file: !58, line: 195, baseType: !354, size: 32, offset: 10368)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !1703, file: !58, line: 196, baseType: !1754, size: 32, offset: 10400)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !58, line: 188, baseType: !88)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1703, file: !58, line: 197, baseType: !354, size: 32, offset: 10432)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1608, file: !157, line: 223, baseType: !1757, size: 1600, offset: 1152)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !96, line: 73, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !96, line: 64, size: 1600, elements: !1759)
!1759 = !{!1760, !1775, !1779, !1780, !1781, !1782, !1783}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1758, file: !96, line: 65, baseType: !1761, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !96, line: 53, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !96, line: 42, size: 832, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1763, file: !96, line: 43, baseType: !354, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1763, file: !96, line: 44, baseType: !354, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1763, file: !96, line: 45, baseType: !354, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1763, file: !96, line: 46, baseType: !354, size: 32, offset: 96)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !1763, file: !96, line: 47, baseType: !354, size: 32, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !1763, file: !96, line: 48, baseType: !354, size: 32, offset: 160)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !1763, file: !96, line: 49, baseType: !354, size: 32, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1763, file: !96, line: 50, baseType: !354, size: 32, offset: 224)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1763, file: !96, line: 51, baseType: !1282, size: 512, offset: 256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1763, file: !96, line: 52, baseType: !1226, size: 64, offset: 768)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !1758, file: !96, line: 66, baseType: !1776, size: 1312, offset: 64)
!1776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 1312, elements: !1777)
!1777 = !{!1778}
!1778 = !DISubrange(count: 41)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !1758, file: !96, line: 69, baseType: !354, size: 32, offset: 1376)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !1758, file: !96, line: 69, baseType: !354, size: 32, offset: 1408)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !1758, file: !96, line: 70, baseType: !354, size: 32, offset: 1440)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1758, file: !96, line: 71, baseType: !1620, size: 64, offset: 1472)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1758, file: !96, line: 72, baseType: !1784, size: 64, offset: 1536)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !96, line: 59, baseType: !1786)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !96, line: 57, size: 8192, elements: !1787)
!1787 = !{!1788}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1786, file: !96, line: 58, baseType: !1252, size: 8192)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !1608, file: !157, line: 223, baseType: !1757, size: 1600, offset: 2752)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !1608, file: !157, line: 223, baseType: !1757, size: 1600, offset: 4352)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !1608, file: !157, line: 223, baseType: !1757, size: 1600, offset: 5952)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1608, file: !157, line: 233, baseType: !1266, size: 16, offset: 7552)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1608, file: !157, line: 236, baseType: !354, size: 32, offset: 7584)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !1608, file: !157, line: 238, baseType: !354, size: 32, offset: 7616)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !1608, file: !157, line: 238, baseType: !354, size: 32, offset: 7648)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !1608, file: !157, line: 239, baseType: !1292, size: 128, offset: 7680)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !1608, file: !157, line: 241, baseType: !1692, size: 64, offset: 7808)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !1608, file: !157, line: 243, baseType: !1292, size: 128, offset: 7872)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !1608, file: !157, line: 245, baseType: !1226, size: 64, offset: 8000)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !1603, file: !1604, line: 58, baseType: !1602, size: 64, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !1603, file: !1604, line: 59, baseType: !354, size: 32, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !1603, file: !1604, line: 63, baseType: !1803, size: 64, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1657, size: 192, elements: !1576)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !1603, file: !1604, line: 64, baseType: !354, size: 32, offset: 256)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1603, file: !1604, line: 67, baseType: !1807, size: 64, offset: 320)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1830, !1833, !1835, !1836, !1838, !1839, !1840, !1841, !1847, !1852, !1853, !1857, !1858, !1859, !1860, !1861, !1865, !1869, !1873, !1877, !1881, !1885, !1889, !1893, !1897, !1901, !1905, !1909, !1913, !1914, !1915, !1916, !1917, !1918, !1922, !1923, !1924, !1925, !1929, !1930, !1931, !1932, !1933, !1938, !1939, !1940, !1941, !1942, !1946, !1947, !1948, !1949, !1950, !1957, !1968, !1973, !1979, !1989, !1994, !2005, !2012, !2019, !2023, !2028, !2032, !2037, !2038, !2039, !3350, !3356, !3357, !3358, !3362, !3363, !3372, !3387, !3391, !3399, !3403, !3407, !3411, !3419, !3429}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !1808, file: !6, line: 180, baseType: !1757, size: 1600)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !1808, file: !6, line: 180, baseType: !1757, size: 1600, offset: 1600)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !1808, file: !6, line: 180, baseType: !1757, size: 1600, offset: 3200)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !1808, file: !6, line: 180, baseType: !1757, size: 1600, offset: 4800)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !1808, file: !6, line: 180, baseType: !1757, size: 1600, offset: 6400)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !1808, file: !6, line: 181, baseType: !354, size: 32, offset: 8000)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !1808, file: !6, line: 181, baseType: !354, size: 32, offset: 8032)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !1808, file: !6, line: 181, baseType: !354, size: 32, offset: 8064)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !1808, file: !6, line: 181, baseType: !354, size: 32, offset: 8096)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !1808, file: !6, line: 181, baseType: !354, size: 32, offset: 8128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !1808, file: !6, line: 182, baseType: !354, size: 32, offset: 8160)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !1808, file: !6, line: 183, baseType: !354, size: 32, offset: 8192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !1808, file: !6, line: 184, baseType: !1823, size: 64, offset: 8256)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !1824, line: 124, baseType: !1825)
!1824 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !1751, line: 45, size: 128, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1826, file: !1751, line: 46, baseType: !1825, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1826, file: !1751, line: 47, baseType: !1226, size: 64, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !1808, file: !6, line: 185, baseType: !1831, size: 64, offset: 8320)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !6, line: 97, flags: DIFlagFwdDecl)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1808, file: !6, line: 186, baseType: !1834, size: 32, offset: 8384)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !1808, file: !6, line: 187, baseType: !1320, size: 32, offset: 8416)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !1808, file: !6, line: 188, baseType: !1837, size: 32, offset: 8448)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !1808, file: !6, line: 189, baseType: !354, size: 32, offset: 8480)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1808, file: !6, line: 190, baseType: !1404, size: 64, offset: 8512)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !1808, file: !6, line: 193, baseType: !1253, size: 8, offset: 8576)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !1808, file: !6, line: 196, baseType: !1842, size: 64, offset: 8640)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{null, !1845}
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !1808)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !1808, file: !6, line: 199, baseType: !1848, size: 64, offset: 8704)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{null, !1845, !1851}
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1320)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !1808, file: !6, line: 202, baseType: !1842, size: 64, offset: 8768)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !1808, file: !6, line: 207, baseType: !1854, size: 64, offset: 8832)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!354, !1845}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !1808, file: !6, line: 208, baseType: !1854, size: 64, offset: 8896)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !1808, file: !6, line: 209, baseType: !1854, size: 64, offset: 8960)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !1808, file: !6, line: 210, baseType: !1854, size: 64, offset: 9024)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !1808, file: !6, line: 211, baseType: !1854, size: 64, offset: 9088)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !1808, file: !6, line: 218, baseType: !1862, size: 64, offset: 9152)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{null, !1845, !354, !1571}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !1808, file: !6, line: 219, baseType: !1866, size: 64, offset: 9216)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{null, !1845, !354, !1582}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !1808, file: !6, line: 220, baseType: !1870, size: 64, offset: 9280)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{null, !1845, !354, !1534}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !1808, file: !6, line: 227, baseType: !1874, size: 64, offset: 9344)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!1571, !1845}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !1808, file: !6, line: 228, baseType: !1878, size: 64, offset: 9408)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!1582, !1845}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !1808, file: !6, line: 229, baseType: !1882, size: 64, offset: 9472)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!1534, !1845}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !1808, file: !6, line: 230, baseType: !1886, size: 64, offset: 9536)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!1513, !1845}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !1808, file: !6, line: 231, baseType: !1890, size: 64, offset: 9600)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!1414, !1845}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !1808, file: !6, line: 236, baseType: !1894, size: 64, offset: 9664)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{null, !1845, !1571}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !1808, file: !6, line: 237, baseType: !1898, size: 64, offset: 9728)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = !DISubroutineType(types: !1900)
!1900 = !{null, !1845, !1582}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !1808, file: !6, line: 238, baseType: !1902, size: 64, offset: 9792)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{null, !1845, !1534}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !1808, file: !6, line: 239, baseType: !1906, size: 64, offset: 9856)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{null, !1845, !1513}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !1808, file: !6, line: 240, baseType: !1910, size: 64, offset: 9920)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{null, !1845, !1414}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !1808, file: !6, line: 245, baseType: !1874, size: 64, offset: 9984)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !1808, file: !6, line: 246, baseType: !1878, size: 64, offset: 10048)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !1808, file: !6, line: 247, baseType: !1882, size: 64, offset: 10112)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !1808, file: !6, line: 248, baseType: !1886, size: 64, offset: 10176)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !1808, file: !6, line: 249, baseType: !1890, size: 64, offset: 10240)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !1808, file: !6, line: 255, baseType: !1919, size: 64, offset: 10304)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!1226, !1845, !354, !354}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !1808, file: !6, line: 256, baseType: !1919, size: 64, offset: 10368)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !1808, file: !6, line: 257, baseType: !1919, size: 64, offset: 10432)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !1808, file: !6, line: 258, baseType: !1919, size: 64, offset: 10496)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !1808, file: !6, line: 264, baseType: !1926, size: 64, offset: 10560)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!1226, !1845, !354}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !1808, file: !6, line: 265, baseType: !1926, size: 64, offset: 10624)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !1808, file: !6, line: 266, baseType: !1926, size: 64, offset: 10688)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !1808, file: !6, line: 267, baseType: !1926, size: 64, offset: 10752)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !1808, file: !6, line: 268, baseType: !1926, size: 64, offset: 10816)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !1808, file: !6, line: 272, baseType: !1934, size: 64, offset: 10880)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!1937, !1845}
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !1808, file: !6, line: 273, baseType: !1934, size: 64, offset: 10944)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !1808, file: !6, line: 274, baseType: !1934, size: 64, offset: 11008)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !1808, file: !6, line: 275, baseType: !1934, size: 64, offset: 11072)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !1808, file: !6, line: 276, baseType: !1934, size: 64, offset: 11136)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !1808, file: !6, line: 279, baseType: !1943, size: 64, offset: 11200)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{null, !1845, !354, !1937, !354}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !1808, file: !6, line: 280, baseType: !1943, size: 64, offset: 11264)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !1808, file: !6, line: 281, baseType: !1943, size: 64, offset: 11328)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !1808, file: !6, line: 284, baseType: !1854, size: 64, offset: 11392)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !1808, file: !6, line: 285, baseType: !1854, size: 64, offset: 11456)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !1808, file: !6, line: 286, baseType: !1951, size: 64, offset: 11520)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!1954, !1845}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !6, line: 82, flags: DIFlagFwdDecl)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !1808, file: !6, line: 287, baseType: !1958, size: 64, offset: 11584)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!1961, !1845}
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !1964)
!1964 = !{!1965, !1967}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1963, file: !6, line: 118, baseType: !1966, size: 128)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 128, elements: !1332)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1963, file: !6, line: 119, baseType: !1966, size: 128, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !1808, file: !6, line: 288, baseType: !1969, size: 64, offset: 11648)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{!1972, !1845}
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !1808, file: !6, line: 289, baseType: !1974, size: 64, offset: 11712)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{null, !1845, !1977}
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !6, line: 83, flags: DIFlagFwdDecl)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !1808, file: !6, line: 290, baseType: !1980, size: 64, offset: 11776)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!1983, !1845}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !1986)
!1986 = !{!1987, !1988}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1985, file: !6, line: 124, baseType: !1266, size: 16)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1985, file: !6, line: 125, baseType: !1253, size: 8, offset: 16)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !1808, file: !6, line: 291, baseType: !1990, size: 64, offset: 11840)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{!1993, !1845}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !1808, file: !6, line: 299, baseType: !1995, size: 64, offset: 11904)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{null, !1845, !1998, !1226, !2004}
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{null, !1226, !354, !2001, !2001, !2002}
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1266)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !1808, file: !6, line: 309, baseType: !2006, size: 64, offset: 11968)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{null, !1845, !2009, !1226}
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{null, !1226, !354, !2001, !2001}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !1808, file: !6, line: 317, baseType: !2013, size: 64, offset: 12032)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{null, !1845, !2016, !1226, !2004}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{null, !1226, !354, !354, !2001, !2001}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !1808, file: !6, line: 327, baseType: !2020, size: 64, offset: 12096)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1845, !2009, !1226, !2004}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !1808, file: !6, line: 337, baseType: !2024, size: 64, offset: 12160)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{null, !1845, !2027, !2027}
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !1808, file: !6, line: 344, baseType: !2029, size: 64, offset: 12224)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{null, !1845, !354, !2027}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !1808, file: !6, line: 347, baseType: !2033, size: 64, offset: 12288)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{null, !1845, !2036}
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !1808, file: !6, line: 350, baseType: !2029, size: 64, offset: 12352)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !1808, file: !6, line: 351, baseType: !2029, size: 64, offset: 12416)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !1808, file: !6, line: 355, baseType: !2040, size: 64, offset: 12480)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DISubroutineType(types: !2042)
!2042 = !{!2043, !2050, !1845}
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !2046, line: 96, size: 128, elements: !2047)
!2046 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !2045, file: !2046, line: 97, baseType: !1972, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2045, file: !2046, line: 98, baseType: !354, size: 32, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !34, line: 115, size: 11392, elements: !2052)
!2052 = !{!2053, !2054, !2055, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2085, !2086, !2126, !2127, !2130, !2131, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !3191, !3307, !3308, !3309, !3310, !3311, !3312, !3315, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3328, !3331, !3334, !3335, !3338, !3339}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2051, file: !34, line: 116, baseType: !1233, size: 960)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2051, file: !34, line: 117, baseType: !1303, size: 64, offset: 960)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2051, file: !34, line: 119, baseType: !2056, size: 64, offset: 1024)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !34, line: 57, flags: DIFlagFwdDecl)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2051, file: !34, line: 121, baseType: !1266, size: 16, offset: 1088)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !2051, file: !34, line: 121, baseType: !1266, size: 16, offset: 1104)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !2051, file: !34, line: 122, baseType: !354, size: 32, offset: 1120)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !2051, file: !34, line: 122, baseType: !354, size: 32, offset: 1152)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !2051, file: !34, line: 122, baseType: !354, size: 32, offset: 1184)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !2051, file: !34, line: 123, baseType: !1282, size: 512, offset: 1216)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2051, file: !34, line: 124, baseType: !2050, size: 64, offset: 1728)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !2051, file: !34, line: 124, baseType: !2050, size: 64, offset: 1792)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2051, file: !34, line: 127, baseType: !2050, size: 64, offset: 1856)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !2051, file: !34, line: 127, baseType: !2050, size: 64, offset: 1920)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !2051, file: !34, line: 127, baseType: !2050, size: 64, offset: 1984)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2051, file: !34, line: 128, baseType: !1341, size: 64, offset: 2048)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2051, file: !34, line: 130, baseType: !1391, size: 64, offset: 2112)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2051, file: !34, line: 131, baseType: !2072, size: 64, offset: 2176)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !2074, line: 486, size: 1600, elements: !2075)
!2074 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2075 = !{!2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2073, file: !2074, line: 487, baseType: !1233, size: 960)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !2073, file: !2074, line: 489, baseType: !1292, size: 128, offset: 960)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !2073, file: !2074, line: 490, baseType: !1292, size: 128, offset: 1088)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2073, file: !2074, line: 491, baseType: !1292, size: 128, offset: 1216)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2073, file: !2074, line: 492, baseType: !1292, size: 128, offset: 1344)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2073, file: !2074, line: 494, baseType: !354, size: 32, offset: 1472)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !2073, file: !2074, line: 495, baseType: !354, size: 32, offset: 1504)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !2073, file: !2074, line: 497, baseType: !354, size: 32, offset: 1536)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2073, file: !2074, line: 498, baseType: !354, size: 32, offset: 1568)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !2051, file: !34, line: 132, baseType: !2072, size: 64, offset: 2240)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !2051, file: !34, line: 133, baseType: !2087, size: 64, offset: 2304)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !2074, line: 334, size: 1728, elements: !2089)
!2089 = !{!2090, !2091, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2125}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !2088, file: !2074, line: 335, baseType: !1292, size: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !2088, file: !2074, line: 336, baseType: !2092, size: 64, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2088, file: !2074, line: 338, baseType: !1266, size: 16, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2088, file: !2074, line: 338, baseType: !1266, size: 16, offset: 208)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !2088, file: !2074, line: 339, baseType: !7, size: 32, offset: 224)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2088, file: !2074, line: 340, baseType: !354, size: 32, offset: 256)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2088, file: !2074, line: 342, baseType: !1320, size: 32, offset: 288)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !2088, file: !2074, line: 343, baseType: !1575, size: 96, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !2088, file: !2074, line: 344, baseType: !1575, size: 96, offset: 416)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !2088, file: !2074, line: 347, baseType: !1292, size: 128, offset: 512)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !2088, file: !2074, line: 349, baseType: !354, size: 32, offset: 640)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !2088, file: !2074, line: 350, baseType: !354, size: 32, offset: 672)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !2088, file: !2074, line: 351, baseType: !1226, size: 64, offset: 704)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !2088, file: !2074, line: 352, baseType: !1226, size: 64, offset: 768)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !2088, file: !2074, line: 354, baseType: !2106, size: 384, offset: 832)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !2074, line: 116, baseType: !2107)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !2074, line: 94, size: 384, elements: !2108)
!2108 = !{!2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !2107, file: !2074, line: 96, baseType: !354, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !2107, file: !2074, line: 96, baseType: !354, size: 32, offset: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !2107, file: !2074, line: 97, baseType: !354, size: 32, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !2107, file: !2074, line: 97, baseType: !354, size: 32, offset: 96)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !2107, file: !2074, line: 99, baseType: !1266, size: 16, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !2107, file: !2074, line: 100, baseType: !1266, size: 16, offset: 144)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !2107, file: !2074, line: 102, baseType: !1266, size: 16, offset: 160)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2107, file: !2074, line: 105, baseType: !1266, size: 16, offset: 176)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !2107, file: !2074, line: 108, baseType: !1266, size: 16, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !2107, file: !2074, line: 109, baseType: !1266, size: 16, offset: 208)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !2107, file: !2074, line: 111, baseType: !1266, size: 16, offset: 224)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !2107, file: !2074, line: 112, baseType: !1266, size: 16, offset: 240)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !2107, file: !2074, line: 114, baseType: !354, size: 32, offset: 256)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !2107, file: !2074, line: 114, baseType: !354, size: 32, offset: 288)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !2107, file: !2074, line: 115, baseType: !354, size: 32, offset: 320)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !2107, file: !2074, line: 115, baseType: !354, size: 32, offset: 352)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !2088, file: !2074, line: 355, baseType: !1282, size: 512, offset: 1216)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2051, file: !34, line: 134, baseType: !1226, size: 64, offset: 2368)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2051, file: !34, line: 136, baseType: !2128, size: 64, offset: 2432)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !34, line: 58, flags: DIFlagFwdDecl)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !2051, file: !34, line: 138, baseType: !2106, size: 384, offset: 2496)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !2051, file: !34, line: 139, baseType: !2132, size: 64, offset: 2880)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !2074, line: 80, baseType: !2134)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !2074, line: 72, size: 192, elements: !2135)
!2135 = !{!2136, !2143, !2144, !2145, !2146}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2134, file: !2074, line: 73, baseType: !2137, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !2074, line: 59, baseType: !2139)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !2074, line: 56, size: 128, elements: !2140)
!2140 = !{!2141, !2142}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2139, file: !2074, line: 57, baseType: !1575, size: 96)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2139, file: !2074, line: 58, baseType: !354, size: 32, offset: 96)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2134, file: !2074, line: 74, baseType: !354, size: 32, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2134, file: !2074, line: 76, baseType: !354, size: 32, offset: 96)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2134, file: !2074, line: 77, baseType: !354, size: 32, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2134, file: !2074, line: 79, baseType: !354, size: 32, offset: 160)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !2051, file: !34, line: 141, baseType: !1292, size: 128, offset: 2944)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !2051, file: !34, line: 142, baseType: !1292, size: 128, offset: 3072)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !2051, file: !34, line: 143, baseType: !1292, size: 128, offset: 3200)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !2051, file: !34, line: 144, baseType: !1292, size: 128, offset: 3328)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2051, file: !34, line: 146, baseType: !354, size: 32, offset: 3456)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !2051, file: !34, line: 147, baseType: !354, size: 32, offset: 3488)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2051, file: !34, line: 150, baseType: !1404, size: 64, offset: 3520)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !2051, file: !34, line: 151, baseType: !1381, size: 64, offset: 3584)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2051, file: !34, line: 152, baseType: !354, size: 32, offset: 3648)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !2051, file: !34, line: 153, baseType: !354, size: 32, offset: 3680)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2051, file: !34, line: 156, baseType: !1575, size: 96, offset: 3712)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !2051, file: !34, line: 156, baseType: !1575, size: 96, offset: 3808)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !2051, file: !34, line: 156, baseType: !1575, size: 96, offset: 3904)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2051, file: !34, line: 157, baseType: !1575, size: 96, offset: 4000)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !2051, file: !34, line: 158, baseType: !1575, size: 96, offset: 4096)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !2051, file: !34, line: 159, baseType: !1575, size: 96, offset: 4192)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2051, file: !34, line: 160, baseType: !1575, size: 96, offset: 4288)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !2051, file: !34, line: 160, baseType: !1575, size: 96, offset: 4384)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !2051, file: !34, line: 161, baseType: !1331, size: 128, offset: 4480)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !2051, file: !34, line: 161, baseType: !1331, size: 128, offset: 4608)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !2051, file: !34, line: 162, baseType: !1575, size: 96, offset: 4736)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !2051, file: !34, line: 162, baseType: !1575, size: 96, offset: 4832)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !2051, file: !34, line: 163, baseType: !1320, size: 32, offset: 4928)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !2051, file: !34, line: 163, baseType: !1320, size: 32, offset: 4960)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !2051, file: !34, line: 164, baseType: !2172, size: 512, offset: 4992)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 512, elements: !2173)
!2173 = !{!1333, !1333}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !2051, file: !34, line: 165, baseType: !2172, size: 512, offset: 5504)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !2051, file: !34, line: 166, baseType: !2172, size: 512, offset: 6016)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2051, file: !34, line: 167, baseType: !2172, size: 512, offset: 6528)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !2051, file: !34, line: 176, baseType: !2172, size: 512, offset: 7040)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2051, file: !34, line: 178, baseType: !7, size: 32, offset: 7552)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2051, file: !34, line: 180, baseType: !1266, size: 16, offset: 7584)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !2051, file: !34, line: 181, baseType: !1266, size: 16, offset: 7600)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !2051, file: !34, line: 183, baseType: !1266, size: 16, offset: 7616)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !2051, file: !34, line: 183, baseType: !1266, size: 16, offset: 7632)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !2051, file: !34, line: 184, baseType: !1266, size: 16, offset: 7648)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !2051, file: !34, line: 184, baseType: !1266, size: 16, offset: 7664)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !2051, file: !34, line: 185, baseType: !1266, size: 16, offset: 7680)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !2051, file: !34, line: 186, baseType: !1266, size: 16, offset: 7696)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !2051, file: !34, line: 187, baseType: !1266, size: 16, offset: 7712)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !2051, file: !34, line: 188, baseType: !1253, size: 8, offset: 7728)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !2051, file: !34, line: 189, baseType: !1253, size: 8, offset: 7736)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !2051, file: !34, line: 192, baseType: !354, size: 32, offset: 7744)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !2051, file: !34, line: 192, baseType: !354, size: 32, offset: 7776)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !2051, file: !34, line: 192, baseType: !354, size: 32, offset: 7808)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !2051, file: !34, line: 192, baseType: !354, size: 32, offset: 7840)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2051, file: !34, line: 194, baseType: !354, size: 32, offset: 7872)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !2051, file: !34, line: 202, baseType: !1320, size: 32, offset: 7904)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !2051, file: !34, line: 202, baseType: !1320, size: 32, offset: 7936)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !2051, file: !34, line: 202, baseType: !1320, size: 32, offset: 7968)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !2051, file: !34, line: 211, baseType: !1320, size: 32, offset: 8000)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !2051, file: !34, line: 212, baseType: !1320, size: 32, offset: 8032)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2051, file: !34, line: 213, baseType: !1320, size: 32, offset: 8064)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !2051, file: !34, line: 214, baseType: !1320, size: 32, offset: 8096)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !2051, file: !34, line: 215, baseType: !1320, size: 32, offset: 8128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !2051, file: !34, line: 216, baseType: !1320, size: 32, offset: 8160)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !2051, file: !34, line: 219, baseType: !1320, size: 32, offset: 8192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !2051, file: !34, line: 220, baseType: !1320, size: 32, offset: 8224)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !2051, file: !34, line: 221, baseType: !1320, size: 32, offset: 8256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !2051, file: !34, line: 224, baseType: !2208, size: 16, offset: 8288)
!2208 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !2051, file: !34, line: 224, baseType: !2208, size: 16, offset: 8304)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !2051, file: !34, line: 226, baseType: !1266, size: 16, offset: 8320)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !2051, file: !34, line: 228, baseType: !1253, size: 8, offset: 8336)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !2051, file: !34, line: 229, baseType: !1253, size: 8, offset: 8344)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !2051, file: !34, line: 231, baseType: !1266, size: 16, offset: 8352)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !2051, file: !34, line: 232, baseType: !1253, size: 8, offset: 8368)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !2051, file: !34, line: 233, baseType: !1253, size: 8, offset: 8376)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !2051, file: !34, line: 234, baseType: !1320, size: 32, offset: 8384)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !2051, file: !34, line: 235, baseType: !1320, size: 32, offset: 8416)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2051, file: !34, line: 237, baseType: !1292, size: 128, offset: 8448)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !2051, file: !34, line: 238, baseType: !1292, size: 128, offset: 8576)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !2051, file: !34, line: 239, baseType: !1292, size: 128, offset: 8704)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !2051, file: !34, line: 240, baseType: !1292, size: 128, offset: 8832)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !2051, file: !34, line: 242, baseType: !1320, size: 32, offset: 8960)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2051, file: !34, line: 244, baseType: !1266, size: 16, offset: 8992)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !2051, file: !34, line: 245, baseType: !2208, size: 16, offset: 9008)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2051, file: !34, line: 246, baseType: !1331, size: 128, offset: 9024)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !2051, file: !34, line: 248, baseType: !354, size: 32, offset: 9152)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !2051, file: !34, line: 249, baseType: !354, size: 32, offset: 9184)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !2051, file: !34, line: 251, baseType: !2229, size: 64, offset: 9216)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !2231, line: 215, size: 960, elements: !2232)
!2231 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2232 = !{!2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2230, file: !2231, line: 216, baseType: !354, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !2230, file: !2231, line: 217, baseType: !1320, size: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !2230, file: !2231, line: 218, baseType: !1320, size: 32, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2230, file: !2231, line: 219, baseType: !1320, size: 32, offset: 96)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !2230, file: !2231, line: 221, baseType: !354, size: 32, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !2230, file: !2231, line: 222, baseType: !354, size: 32, offset: 160)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !2230, file: !2231, line: 223, baseType: !354, size: 32, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !2230, file: !2231, line: 224, baseType: !354, size: 32, offset: 224)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !2230, file: !2231, line: 226, baseType: !1320, size: 32, offset: 256)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !2230, file: !2231, line: 227, baseType: !1320, size: 32, offset: 288)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !2230, file: !2231, line: 228, baseType: !1320, size: 32, offset: 320)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !2230, file: !2231, line: 229, baseType: !1320, size: 32, offset: 352)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !2230, file: !2231, line: 231, baseType: !1320, size: 32, offset: 384)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !2230, file: !2231, line: 232, baseType: !1320, size: 32, offset: 416)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !2230, file: !2231, line: 233, baseType: !1320, size: 32, offset: 448)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !2230, file: !2231, line: 234, baseType: !1320, size: 32, offset: 480)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !2230, file: !2231, line: 236, baseType: !1320, size: 32, offset: 512)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !2230, file: !2231, line: 237, baseType: !1320, size: 32, offset: 544)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !2230, file: !2231, line: 238, baseType: !1320, size: 32, offset: 576)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !2230, file: !2231, line: 239, baseType: !1320, size: 32, offset: 608)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !2230, file: !2231, line: 241, baseType: !1320, size: 32, offset: 640)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !2230, file: !2231, line: 242, baseType: !1320, size: 32, offset: 672)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !2230, file: !2231, line: 243, baseType: !1320, size: 32, offset: 704)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !2230, file: !2231, line: 244, baseType: !1320, size: 32, offset: 736)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !2230, file: !2231, line: 246, baseType: !1320, size: 32, offset: 768)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !2230, file: !2231, line: 247, baseType: !1320, size: 32, offset: 800)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !2230, file: !2231, line: 248, baseType: !354, size: 32, offset: 832)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !2230, file: !2231, line: 249, baseType: !354, size: 32, offset: 864)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !2230, file: !2231, line: 250, baseType: !1320, size: 32, offset: 896)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2230, file: !2231, line: 251, baseType: !1320, size: 32, offset: 928)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !2051, file: !34, line: 253, baseType: !1253, size: 8, offset: 9280)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2051, file: !34, line: 254, baseType: !1253, size: 8, offset: 9288)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !2051, file: !34, line: 255, baseType: !1266, size: 16, offset: 9296)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !2051, file: !34, line: 256, baseType: !1575, size: 96, offset: 9312)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !2051, file: !34, line: 258, baseType: !1292, size: 128, offset: 9408)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !2051, file: !34, line: 259, baseType: !1292, size: 128, offset: 9536)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !2051, file: !34, line: 260, baseType: !1292, size: 128, offset: 9664)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !2051, file: !34, line: 261, baseType: !1292, size: 128, offset: 9792)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2051, file: !34, line: 263, baseType: !2272, size: 64, offset: 9920)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !2231, line: 61, size: 1280, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !3185, !3188, !3189, !3190}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2273, file: !2231, line: 62, baseType: !354, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !2273, file: !2231, line: 63, baseType: !1266, size: 16, offset: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !2273, file: !2231, line: 64, baseType: !1266, size: 16, offset: 48)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !2273, file: !2231, line: 65, baseType: !1266, size: 16, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !2273, file: !2231, line: 66, baseType: !1266, size: 16, offset: 80)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !2273, file: !2231, line: 67, baseType: !1266, size: 16, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !2273, file: !2231, line: 68, baseType: !1266, size: 16, offset: 112)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !2273, file: !2231, line: 68, baseType: !1266, size: 16, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !2273, file: !2231, line: 69, baseType: !1266, size: 16, offset: 144)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !2273, file: !2231, line: 72, baseType: !1320, size: 32, offset: 160)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !2273, file: !2231, line: 73, baseType: !1320, size: 32, offset: 192)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !2273, file: !2231, line: 74, baseType: !1320, size: 32, offset: 224)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !2273, file: !2231, line: 77, baseType: !1320, size: 32, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !2273, file: !2231, line: 80, baseType: !1320, size: 32, offset: 288)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !2273, file: !2231, line: 81, baseType: !1320, size: 32, offset: 320)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !2273, file: !2231, line: 82, baseType: !1320, size: 32, offset: 352)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !2273, file: !2231, line: 83, baseType: !1320, size: 32, offset: 384)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !2273, file: !2231, line: 84, baseType: !1320, size: 32, offset: 416)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !2273, file: !2231, line: 85, baseType: !1320, size: 32, offset: 448)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !2273, file: !2231, line: 88, baseType: !1320, size: 32, offset: 480)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !2273, file: !2231, line: 89, baseType: !1320, size: 32, offset: 512)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !2273, file: !2231, line: 90, baseType: !1320, size: 32, offset: 544)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !2273, file: !2231, line: 91, baseType: !1320, size: 32, offset: 576)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !2273, file: !2231, line: 92, baseType: !1320, size: 32, offset: 608)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !2273, file: !2231, line: 93, baseType: !1320, size: 32, offset: 640)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !2273, file: !2231, line: 95, baseType: !1320, size: 32, offset: 672)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !2273, file: !2231, line: 98, baseType: !1320, size: 32, offset: 704)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !2273, file: !2231, line: 99, baseType: !1320, size: 32, offset: 736)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !2273, file: !2231, line: 100, baseType: !1320, size: 32, offset: 768)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !2273, file: !2231, line: 103, baseType: !1320, size: 32, offset: 800)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !2273, file: !2231, line: 103, baseType: !1320, size: 32, offset: 832)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !2273, file: !2231, line: 104, baseType: !1320, size: 32, offset: 864)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !2273, file: !2231, line: 104, baseType: !1320, size: 32, offset: 896)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !2273, file: !2231, line: 104, baseType: !1320, size: 32, offset: 928)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !2273, file: !2231, line: 104, baseType: !1320, size: 32, offset: 960)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !2273, file: !2231, line: 107, baseType: !1320, size: 32, offset: 992)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2273, file: !2231, line: 108, baseType: !2312, size: 64, offset: 1024)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !2314, line: 202, size: 3328, elements: !2315)
!2314 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2315 = !{!2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !3075, !3076, !3077, !3078, !3099, !3125, !3126, !3155, !3175, !3183, !3184}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2313, file: !2314, line: 203, baseType: !1233, size: 960)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2313, file: !2314, line: 204, baseType: !1303, size: 64, offset: 960)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2313, file: !2314, line: 206, baseType: !1320, size: 32, offset: 1024)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2313, file: !2314, line: 206, baseType: !1320, size: 32, offset: 1056)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2313, file: !2314, line: 207, baseType: !1320, size: 32, offset: 1088)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2313, file: !2314, line: 207, baseType: !1320, size: 32, offset: 1120)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2313, file: !2314, line: 207, baseType: !1320, size: 32, offset: 1152)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2313, file: !2314, line: 207, baseType: !1320, size: 32, offset: 1184)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2313, file: !2314, line: 207, baseType: !1320, size: 32, offset: 1216)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2313, file: !2314, line: 207, baseType: !1320, size: 32, offset: 1248)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2313, file: !2314, line: 208, baseType: !1320, size: 32, offset: 1280)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2313, file: !2314, line: 208, baseType: !1320, size: 32, offset: 1312)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2313, file: !2314, line: 211, baseType: !1320, size: 32, offset: 1344)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2313, file: !2314, line: 211, baseType: !1320, size: 32, offset: 1376)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2313, file: !2314, line: 211, baseType: !1320, size: 32, offset: 1408)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2313, file: !2314, line: 211, baseType: !1320, size: 32, offset: 1440)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2313, file: !2314, line: 211, baseType: !1320, size: 32, offset: 1472)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2313, file: !2314, line: 214, baseType: !1320, size: 32, offset: 1504)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2313, file: !2314, line: 214, baseType: !1320, size: 32, offset: 1536)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2313, file: !2314, line: 217, baseType: !1320, size: 32, offset: 1568)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2313, file: !2314, line: 218, baseType: !1320, size: 32, offset: 1600)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2313, file: !2314, line: 219, baseType: !1320, size: 32, offset: 1632)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2313, file: !2314, line: 220, baseType: !1320, size: 32, offset: 1664)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2313, file: !2314, line: 221, baseType: !1320, size: 32, offset: 1696)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2313, file: !2314, line: 222, baseType: !1266, size: 16, offset: 1728)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2313, file: !2314, line: 222, baseType: !1266, size: 16, offset: 1744)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2313, file: !2314, line: 224, baseType: !1266, size: 16, offset: 1760)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2313, file: !2314, line: 224, baseType: !1266, size: 16, offset: 1776)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2313, file: !2314, line: 227, baseType: !1266, size: 16, offset: 1792)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2313, file: !2314, line: 227, baseType: !1266, size: 16, offset: 1808)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2313, file: !2314, line: 229, baseType: !1266, size: 16, offset: 1824)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2313, file: !2314, line: 229, baseType: !1266, size: 16, offset: 1840)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2313, file: !2314, line: 230, baseType: !1266, size: 16, offset: 1856)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2313, file: !2314, line: 230, baseType: !1266, size: 16, offset: 1872)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2313, file: !2314, line: 232, baseType: !1320, size: 32, offset: 1888)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2313, file: !2314, line: 232, baseType: !1320, size: 32, offset: 1920)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2313, file: !2314, line: 232, baseType: !1320, size: 32, offset: 1952)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2313, file: !2314, line: 232, baseType: !1320, size: 32, offset: 1984)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2313, file: !2314, line: 233, baseType: !354, size: 32, offset: 2016)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2313, file: !2314, line: 234, baseType: !354, size: 32, offset: 2048)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2313, file: !2314, line: 235, baseType: !1266, size: 16, offset: 2080)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2313, file: !2314, line: 235, baseType: !1266, size: 16, offset: 2096)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2313, file: !2314, line: 236, baseType: !1266, size: 16, offset: 2112)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2313, file: !2314, line: 239, baseType: !1266, size: 16, offset: 2128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2313, file: !2314, line: 240, baseType: !354, size: 32, offset: 2144)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2313, file: !2314, line: 241, baseType: !354, size: 32, offset: 2176)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2313, file: !2314, line: 241, baseType: !354, size: 32, offset: 2208)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2313, file: !2314, line: 241, baseType: !354, size: 32, offset: 2240)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2313, file: !2314, line: 243, baseType: !1320, size: 32, offset: 2272)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2313, file: !2314, line: 243, baseType: !1320, size: 32, offset: 2304)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2313, file: !2314, line: 244, baseType: !1320, size: 32, offset: 2336)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2313, file: !2314, line: 246, baseType: !2368, size: 320, offset: 2368)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1429, line: 50, size: 320, elements: !2369)
!2369 = !{!2370, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2368, file: !1429, line: 51, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !173, line: 1216, size: 39680, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2380, !2381, !2382, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2408, !2411, !2414, !2628, !2631, !2931, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2953, !2954, !2955, !2956, !2957, !2965, !3031, !3038, !3039, !3046, !3049, !3055, !3056, !3057, !3058, !3059}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2372, file: !173, line: 1217, baseType: !1233, size: 960)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2372, file: !173, line: 1218, baseType: !1303, size: 64, offset: 960)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2372, file: !173, line: 1220, baseType: !2050, size: 64, offset: 1024)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2372, file: !173, line: 1221, baseType: !2378, size: 64, offset: 1088)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !173, line: 52, flags: DIFlagFwdDecl)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2372, file: !173, line: 1223, baseType: !2371, size: 64, offset: 1152)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2372, file: !173, line: 1225, baseType: !1292, size: 128, offset: 1216)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !2372, file: !173, line: 1226, baseType: !2383, size: 64, offset: 1344)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !173, line: 69, size: 320, elements: !2385)
!2385 = !{!2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2384, file: !173, line: 70, baseType: !2383, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2384, file: !173, line: 70, baseType: !2383, size: 64, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2384, file: !173, line: 71, baseType: !7, size: 32, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !2384, file: !173, line: 71, baseType: !7, size: 32, offset: 160)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2384, file: !173, line: 72, baseType: !354, size: 32, offset: 192)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !2384, file: !173, line: 73, baseType: !1266, size: 16, offset: 224)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !2384, file: !173, line: 73, baseType: !1266, size: 16, offset: 240)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2384, file: !173, line: 74, baseType: !2050, size: 64, offset: 256)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !2372, file: !173, line: 1227, baseType: !2050, size: 64, offset: 1408)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2372, file: !173, line: 1229, baseType: !1575, size: 96, offset: 1472)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !2372, file: !173, line: 1230, baseType: !1575, size: 96, offset: 1568)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !2372, file: !173, line: 1231, baseType: !1575, size: 96, offset: 1664)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !2372, file: !173, line: 1231, baseType: !1575, size: 96, offset: 1760)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2372, file: !173, line: 1233, baseType: !7, size: 32, offset: 1856)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !2372, file: !173, line: 1234, baseType: !354, size: 32, offset: 1888)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !2372, file: !173, line: 1235, baseType: !7, size: 32, offset: 1920)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2372, file: !173, line: 1237, baseType: !1266, size: 16, offset: 1952)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2372, file: !173, line: 1239, baseType: !1253, size: 8, offset: 1968)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2372, file: !173, line: 1240, baseType: !2405, size: 8, offset: 1976)
!2405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 8, elements: !2406)
!2406 = !{!2407}
!2407 = !DISubrange(count: 1)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2372, file: !173, line: 1242, baseType: !2409, size: 64, offset: 1984)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !2314, line: 248, flags: DIFlagFwdDecl)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !2372, file: !173, line: 1244, baseType: !2412, size: 64, offset: 2048)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !173, line: 59, flags: DIFlagFwdDecl)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !2372, file: !173, line: 1246, baseType: !2415, size: 64, offset: 2112)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !173, line: 1067, size: 5184, elements: !2417)
!2417 = !{!2418, !2446, !2447, !2462, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2484, !2500, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2611}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2416, file: !173, line: 1068, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !173, line: 934, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !173, line: 925, size: 576, elements: !2422)
!2422 = !{!2423, !2440, !2441, !2442, !2443, !2444, !2445}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2421, file: !173, line: 926, baseType: !2424, size: 320)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !173, line: 830, baseType: !2425)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !173, line: 813, size: 320, elements: !2426)
!2426 = !{!2427, !2430, !2433, !2434, !2437, !2438, !2439}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2425, file: !173, line: 814, baseType: !2428, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64)
!2429 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !173, line: 51, flags: DIFlagFwdDecl)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2425, file: !173, line: 815, baseType: !2431, size: 64, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !173, line: 815, flags: DIFlagFwdDecl)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2425, file: !173, line: 818, baseType: !1226, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2425, file: !173, line: 819, baseType: !2435, size: 32, offset: 192)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2436, size: 32, elements: !1332)
!2436 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2425, file: !173, line: 822, baseType: !354, size: 32, offset: 224)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2425, file: !173, line: 826, baseType: !354, size: 32, offset: 256)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2425, file: !173, line: 829, baseType: !354, size: 32, offset: 288)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2421, file: !173, line: 928, baseType: !1266, size: 16, offset: 320)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2421, file: !173, line: 928, baseType: !1266, size: 16, offset: 336)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2421, file: !173, line: 929, baseType: !354, size: 32, offset: 352)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2421, file: !173, line: 930, baseType: !1463, size: 64, offset: 384)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2421, file: !173, line: 931, baseType: !1347, size: 64, offset: 448)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2421, file: !173, line: 933, baseType: !1226, size: 64, offset: 512)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2416, file: !173, line: 1069, baseType: !2419, size: 64, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2416, file: !173, line: 1070, baseType: !2448, size: 64, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !173, line: 916, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !173, line: 891, size: 704, elements: !2451)
!2451 = !{!2452, !2453, !2454, !2456, !2457, !2458, !2459, !2460, !2461}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2450, file: !173, line: 892, baseType: !2424, size: 320)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2450, file: !173, line: 896, baseType: !354, size: 32, offset: 320)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2450, file: !173, line: 900, baseType: !2455, size: 96, offset: 352)
!2455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 96, elements: !1576)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2450, file: !173, line: 903, baseType: !1320, size: 32, offset: 448)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2450, file: !173, line: 906, baseType: !354, size: 32, offset: 480)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2450, file: !173, line: 909, baseType: !1320, size: 32, offset: 512)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2450, file: !173, line: 912, baseType: !1320, size: 32, offset: 544)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2450, file: !173, line: 914, baseType: !2050, size: 64, offset: 576)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2450, file: !173, line: 915, baseType: !1226, size: 64, offset: 640)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2416, file: !173, line: 1071, baseType: !2463, size: 64, offset: 192)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !173, line: 920, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !173, line: 918, size: 320, elements: !2466)
!2466 = !{!2467}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2465, file: !173, line: 919, baseType: !2424, size: 320)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2416, file: !173, line: 1075, baseType: !1320, size: 32, offset: 256)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2416, file: !173, line: 1077, baseType: !1320, size: 32, offset: 288)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2416, file: !173, line: 1078, baseType: !1320, size: 32, offset: 320)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2416, file: !173, line: 1079, baseType: !1266, size: 16, offset: 352)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2416, file: !173, line: 1082, baseType: !1266, size: 16, offset: 368)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2416, file: !173, line: 1085, baseType: !1253, size: 8, offset: 384)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2416, file: !173, line: 1086, baseType: !1253, size: 8, offset: 392)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2416, file: !173, line: 1087, baseType: !1253, size: 8, offset: 400)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2416, file: !173, line: 1088, baseType: !1253, size: 8, offset: 408)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2416, file: !173, line: 1090, baseType: !1320, size: 32, offset: 416)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2416, file: !173, line: 1093, baseType: !1266, size: 16, offset: 448)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2416, file: !173, line: 1096, baseType: !1253, size: 8, offset: 464)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2416, file: !173, line: 1098, baseType: !2481, size: 40, offset: 472)
!2481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 40, elements: !2482)
!2482 = !{!2483}
!2483 = !DISubrange(count: 5)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2416, file: !173, line: 1101, baseType: !2485, size: 832, offset: 512)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !173, line: 836, size: 832, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2485, file: !173, line: 837, baseType: !2424, size: 320)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2485, file: !173, line: 839, baseType: !1266, size: 16, offset: 320)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2485, file: !173, line: 839, baseType: !1266, size: 16, offset: 336)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2485, file: !173, line: 842, baseType: !1266, size: 16, offset: 352)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2485, file: !173, line: 842, baseType: !1266, size: 16, offset: 368)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2485, file: !173, line: 843, baseType: !1475, size: 32, offset: 384)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2485, file: !173, line: 845, baseType: !354, size: 32, offset: 416)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2485, file: !173, line: 847, baseType: !1226, size: 64, offset: 448)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2485, file: !173, line: 848, baseType: !1427, size: 64, offset: 512)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2485, file: !173, line: 849, baseType: !1427, size: 64, offset: 576)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2485, file: !173, line: 850, baseType: !1427, size: 64, offset: 640)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2485, file: !173, line: 851, baseType: !1575, size: 96, offset: 704)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2485, file: !173, line: 852, baseType: !1320, size: 32, offset: 800)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2416, file: !173, line: 1104, baseType: !2501, size: 1344, offset: 1344)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !173, line: 867, size: 1344, elements: !2502)
!2502 = !{!2503, !2504, !2505, !2506, !2507, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2501, file: !173, line: 868, baseType: !1266, size: 16)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2501, file: !173, line: 869, baseType: !1266, size: 16, offset: 16)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2501, file: !173, line: 870, baseType: !1266, size: 16, offset: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2501, file: !173, line: 871, baseType: !1266, size: 16, offset: 48)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2501, file: !173, line: 873, baseType: !2508, size: 896, offset: 64)
!2508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2509, size: 896, elements: !1379)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !173, line: 864, baseType: !2510)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !173, line: 859, size: 128, elements: !2511)
!2511 = !{!2512, !2513, !2514, !2515, !2516, !2517}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2510, file: !173, line: 860, baseType: !1266, size: 16)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2510, file: !173, line: 861, baseType: !1266, size: 16, offset: 16)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2510, file: !173, line: 861, baseType: !1266, size: 16, offset: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2510, file: !173, line: 861, baseType: !1266, size: 16, offset: 48)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2510, file: !173, line: 862, baseType: !354, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2510, file: !173, line: 863, baseType: !1320, size: 32, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2501, file: !173, line: 874, baseType: !1226, size: 64, offset: 960)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2501, file: !173, line: 876, baseType: !1320, size: 32, offset: 1024)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2501, file: !173, line: 876, baseType: !1320, size: 32, offset: 1056)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2501, file: !173, line: 878, baseType: !354, size: 32, offset: 1088)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2501, file: !173, line: 879, baseType: !354, size: 32, offset: 1120)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2501, file: !173, line: 881, baseType: !354, size: 32, offset: 1152)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2501, file: !173, line: 881, baseType: !354, size: 32, offset: 1184)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2501, file: !173, line: 883, baseType: !2371, size: 64, offset: 1216)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2501, file: !173, line: 884, baseType: !2050, size: 64, offset: 1280)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2416, file: !173, line: 1107, baseType: !1320, size: 32, offset: 2688)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2416, file: !173, line: 1110, baseType: !1320, size: 32, offset: 2720)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2416, file: !173, line: 1113, baseType: !1266, size: 16, offset: 2752)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2416, file: !173, line: 1113, baseType: !1266, size: 16, offset: 2768)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2416, file: !173, line: 1116, baseType: !1253, size: 8, offset: 2784)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2416, file: !173, line: 1117, baseType: !2405, size: 8, offset: 2792)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2416, file: !173, line: 1120, baseType: !1266, size: 16, offset: 2800)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2416, file: !173, line: 1121, baseType: !1320, size: 32, offset: 2816)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2416, file: !173, line: 1122, baseType: !1320, size: 32, offset: 2848)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2416, file: !173, line: 1123, baseType: !1320, size: 32, offset: 2880)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2416, file: !173, line: 1124, baseType: !1320, size: 32, offset: 2912)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2416, file: !173, line: 1125, baseType: !1320, size: 32, offset: 2944)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2416, file: !173, line: 1126, baseType: !1320, size: 32, offset: 2976)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2416, file: !173, line: 1127, baseType: !1320, size: 32, offset: 3008)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2416, file: !173, line: 1128, baseType: !1320, size: 32, offset: 3040)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2416, file: !173, line: 1129, baseType: !1320, size: 32, offset: 3072)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2416, file: !173, line: 1130, baseType: !1320, size: 32, offset: 3104)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2416, file: !173, line: 1131, baseType: !1266, size: 16, offset: 3136)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2416, file: !173, line: 1132, baseType: !1253, size: 8, offset: 3152)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2416, file: !173, line: 1133, baseType: !1253, size: 8, offset: 3160)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2416, file: !173, line: 1134, baseType: !2548, size: 24, offset: 3168)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 24, elements: !1576)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2416, file: !173, line: 1135, baseType: !1253, size: 8, offset: 3192)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2416, file: !173, line: 1138, baseType: !2050, size: 64, offset: 3200)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2416, file: !173, line: 1139, baseType: !1253, size: 8, offset: 3264)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2416, file: !173, line: 1140, baseType: !1253, size: 8, offset: 3272)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2416, file: !173, line: 1141, baseType: !1253, size: 8, offset: 3280)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2416, file: !173, line: 1142, baseType: !1253, size: 8, offset: 3288)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2416, file: !173, line: 1143, baseType: !1253, size: 8, offset: 3296)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2416, file: !173, line: 1144, baseType: !2557, size: 64, offset: 3304)
!2557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 64, elements: !1447)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2416, file: !173, line: 1145, baseType: !2557, size: 64, offset: 3368)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2416, file: !173, line: 1148, baseType: !1253, size: 8, offset: 3432)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2416, file: !173, line: 1149, baseType: !1253, size: 8, offset: 3440)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2416, file: !173, line: 1152, baseType: !1253, size: 8, offset: 3448)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2416, file: !173, line: 1152, baseType: !1253, size: 8, offset: 3456)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2416, file: !173, line: 1153, baseType: !1253, size: 8, offset: 3464)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2416, file: !173, line: 1154, baseType: !1266, size: 16, offset: 3472)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2416, file: !173, line: 1154, baseType: !1266, size: 16, offset: 3488)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2416, file: !173, line: 1155, baseType: !1266, size: 16, offset: 3504)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2416, file: !173, line: 1155, baseType: !1266, size: 16, offset: 3520)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2416, file: !173, line: 1156, baseType: !1253, size: 8, offset: 3536)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2416, file: !173, line: 1157, baseType: !1253, size: 8, offset: 3544)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2416, file: !173, line: 1159, baseType: !1253, size: 8, offset: 3552)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2416, file: !173, line: 1160, baseType: !1253, size: 8, offset: 3560)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2416, file: !173, line: 1161, baseType: !1253, size: 8, offset: 3568)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2416, file: !173, line: 1162, baseType: !1253, size: 8, offset: 3576)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2416, file: !173, line: 1165, baseType: !354, size: 32, offset: 3584)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2416, file: !173, line: 1166, baseType: !354, size: 32, offset: 3616)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2416, file: !173, line: 1167, baseType: !354, size: 32, offset: 3648)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2416, file: !173, line: 1168, baseType: !354, size: 32, offset: 3680)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2416, file: !173, line: 1171, baseType: !1266, size: 16, offset: 3712)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2416, file: !173, line: 1171, baseType: !1266, size: 16, offset: 3728)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2416, file: !173, line: 1172, baseType: !354, size: 32, offset: 3744)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2416, file: !173, line: 1173, baseType: !1320, size: 32, offset: 3776)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2416, file: !173, line: 1174, baseType: !1320, size: 32, offset: 3808)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2416, file: !173, line: 1177, baseType: !2584, size: 1024, offset: 3840)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !173, line: 963, size: 1024, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2609, !2610}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2584, file: !173, line: 965, baseType: !354, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2584, file: !173, line: 968, baseType: !1320, size: 32, offset: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2584, file: !173, line: 971, baseType: !1320, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2584, file: !173, line: 974, baseType: !1320, size: 32, offset: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2584, file: !173, line: 977, baseType: !1575, size: 96, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2584, file: !173, line: 979, baseType: !1575, size: 96, offset: 224)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2584, file: !173, line: 982, baseType: !354, size: 32, offset: 320)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2584, file: !173, line: 987, baseType: !1523, size: 64, offset: 352)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2584, file: !173, line: 989, baseType: !1320, size: 32, offset: 416)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2584, file: !173, line: 994, baseType: !354, size: 32, offset: 448)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2584, file: !173, line: 995, baseType: !354, size: 32, offset: 480)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2584, file: !173, line: 997, baseType: !1253, size: 8, offset: 512)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2584, file: !173, line: 998, baseType: !1378, size: 56, offset: 520)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2584, file: !173, line: 1000, baseType: !1320, size: 32, offset: 576)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2584, file: !173, line: 1003, baseType: !1523, size: 64, offset: 608)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2584, file: !173, line: 1006, baseType: !354, size: 32, offset: 672)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2584, file: !173, line: 1009, baseType: !1320, size: 32, offset: 704)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2584, file: !173, line: 1012, baseType: !1523, size: 64, offset: 736)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2584, file: !173, line: 1015, baseType: !1523, size: 64, offset: 800)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2584, file: !173, line: 1018, baseType: !354, size: 32, offset: 864)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2584, file: !173, line: 1019, baseType: !2607, size: 64, offset: 896)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !173, line: 63, flags: DIFlagFwdDecl)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2584, file: !173, line: 1023, baseType: !1320, size: 32, offset: 960)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2584, file: !173, line: 1024, baseType: !354, size: 32, offset: 992)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2416, file: !173, line: 1179, baseType: !2612, size: 320, offset: 4864)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !173, line: 1043, size: 320, elements: !2613)
!2613 = !{!2614, !2615, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2612, file: !173, line: 1044, baseType: !1253, size: 8)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2612, file: !173, line: 1045, baseType: !2616, size: 16, offset: 8)
!2616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 16, elements: !1471)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2612, file: !173, line: 1048, baseType: !1253, size: 8, offset: 24)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2612, file: !173, line: 1049, baseType: !1320, size: 32, offset: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2612, file: !173, line: 1049, baseType: !1320, size: 32, offset: 64)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2612, file: !173, line: 1052, baseType: !1320, size: 32, offset: 96)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2612, file: !173, line: 1052, baseType: !1320, size: 32, offset: 128)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2612, file: !173, line: 1053, baseType: !1253, size: 8, offset: 160)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2612, file: !173, line: 1054, baseType: !2548, size: 24, offset: 168)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2612, file: !173, line: 1057, baseType: !1320, size: 32, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2612, file: !173, line: 1057, baseType: !1320, size: 32, offset: 224)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2612, file: !173, line: 1060, baseType: !1320, size: 32, offset: 256)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2612, file: !173, line: 1060, baseType: !1320, size: 32, offset: 288)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2372, file: !173, line: 1247, baseType: !2629, size: 64, offset: 2176)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !173, line: 60, flags: DIFlagFwdDecl)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2372, file: !173, line: 1251, baseType: !2632, size: 31872, offset: 2240)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !173, line: 403, size: 31872, elements: !2633)
!2633 = !{!2634, !2717, !2737, !2746, !2766, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2907, !2908, !2909, !2913, !2929, !2930}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2632, file: !173, line: 404, baseType: !2635, size: 1984)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !173, line: 259, size: 1984, elements: !2636)
!2636 = !{!2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2654, !2712}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2635, file: !173, line: 260, baseType: !1253, size: 8)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2635, file: !173, line: 263, baseType: !1253, size: 8, offset: 8)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2635, file: !173, line: 266, baseType: !1253, size: 8, offset: 16)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2635, file: !173, line: 267, baseType: !1253, size: 8, offset: 24)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2635, file: !173, line: 269, baseType: !1253, size: 8, offset: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2635, file: !173, line: 270, baseType: !1253, size: 8, offset: 40)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2635, file: !173, line: 276, baseType: !1253, size: 8, offset: 48)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2635, file: !173, line: 279, baseType: !1253, size: 8, offset: 56)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2635, file: !173, line: 280, baseType: !1266, size: 16, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2635, file: !173, line: 280, baseType: !1266, size: 16, offset: 80)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2635, file: !173, line: 281, baseType: !1320, size: 32, offset: 96)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2635, file: !173, line: 284, baseType: !1253, size: 8, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2635, file: !173, line: 285, baseType: !1253, size: 8, offset: 136)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2635, file: !173, line: 287, baseType: !2651, size: 48, offset: 144)
!2651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 48, elements: !2652)
!2652 = !{!2653}
!2653 = !DISubrange(count: 6)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2635, file: !173, line: 290, baseType: !2655, size: 1280, offset: 192)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1495, line: 174, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1495, line: 166, size: 1280, elements: !2657)
!2657 = !{!2658, !2659, !2660, !2661, !2662, !2663, !2664, !2711}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2656, file: !1495, line: 167, baseType: !354, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2656, file: !1495, line: 167, baseType: !354, size: 32, offset: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2656, file: !1495, line: 168, baseType: !1282, size: 512, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2656, file: !1495, line: 169, baseType: !1282, size: 512, offset: 576)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2656, file: !1495, line: 170, baseType: !1320, size: 32, offset: 1088)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2656, file: !1495, line: 171, baseType: !1320, size: 32, offset: 1120)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2656, file: !1495, line: 172, baseType: !2665, size: 64, offset: 1152)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1495, line: 72, size: 3072, elements: !2667)
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2681, !2682, !2707, !2708, !2709, !2710}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2666, file: !1495, line: 73, baseType: !354, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2666, file: !1495, line: 73, baseType: !354, size: 32, offset: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2666, file: !1495, line: 74, baseType: !354, size: 32, offset: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2666, file: !1495, line: 75, baseType: !354, size: 32, offset: 96)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2666, file: !1495, line: 77, baseType: !2673, size: 128, offset: 128)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !2674, line: 95, baseType: !2675)
!2674 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !2674, line: 92, size: 128, elements: !2676)
!2676 = !{!2677, !2678, !2679, !2680}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2675, file: !2674, line: 93, baseType: !1320, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2675, file: !2674, line: 93, baseType: !1320, size: 32, offset: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2675, file: !2674, line: 94, baseType: !1320, size: 32, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2675, file: !2674, line: 94, baseType: !1320, size: 32, offset: 96)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2666, file: !1495, line: 77, baseType: !2673, size: 128, offset: 256)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2666, file: !1495, line: 79, baseType: !2683, size: 2304, offset: 384)
!2683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2684, size: 2304, elements: !1332)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1495, line: 67, baseType: !2685)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1495, line: 55, size: 576, elements: !2686)
!2686 = !{!2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2703, !2704, !2705, !2706}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2685, file: !1495, line: 56, baseType: !1266, size: 16)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2685, file: !1495, line: 56, baseType: !1266, size: 16, offset: 16)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2685, file: !1495, line: 58, baseType: !1320, size: 32, offset: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2685, file: !1495, line: 59, baseType: !1320, size: 32, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2685, file: !1495, line: 59, baseType: !1320, size: 32, offset: 96)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2685, file: !1495, line: 60, baseType: !1523, size: 64, offset: 128)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2685, file: !1495, line: 60, baseType: !1523, size: 64, offset: 192)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2685, file: !1495, line: 61, baseType: !2695, size: 64, offset: 256)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1495, line: 47, baseType: !2697)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1495, line: 44, size: 96, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2697, file: !1495, line: 45, baseType: !1320, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2697, file: !1495, line: 45, baseType: !1320, size: 32, offset: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2697, file: !1495, line: 46, baseType: !1266, size: 16, offset: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2697, file: !1495, line: 46, baseType: !1266, size: 16, offset: 80)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2685, file: !1495, line: 62, baseType: !2695, size: 64, offset: 320)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2685, file: !1495, line: 64, baseType: !2695, size: 64, offset: 384)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2685, file: !1495, line: 65, baseType: !1523, size: 64, offset: 448)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2685, file: !1495, line: 66, baseType: !1523, size: 64, offset: 512)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2666, file: !1495, line: 80, baseType: !1575, size: 96, offset: 2688)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2666, file: !1495, line: 80, baseType: !1575, size: 96, offset: 2784)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2666, file: !1495, line: 81, baseType: !1575, size: 96, offset: 2880)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2666, file: !1495, line: 83, baseType: !1575, size: 96, offset: 2976)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2656, file: !1495, line: 173, baseType: !1226, size: 64, offset: 1216)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2635, file: !173, line: 291, baseType: !2713, size: 512, offset: 1472)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1495, line: 178, baseType: !2714)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1495, line: 176, size: 512, elements: !2715)
!2715 = !{!2716}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2714, file: !1495, line: 177, baseType: !1282, size: 512)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2632, file: !173, line: 406, baseType: !2718, size: 64, offset: 1984)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !173, line: 80, size: 1472, elements: !2720)
!2720 = !{!2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2719, file: !173, line: 81, baseType: !1226, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2719, file: !173, line: 82, baseType: !1226, size: 64, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2719, file: !173, line: 83, baseType: !7, size: 32, offset: 128)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2719, file: !173, line: 84, baseType: !7, size: 32, offset: 160)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2719, file: !173, line: 86, baseType: !7, size: 32, offset: 192)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2719, file: !173, line: 87, baseType: !7, size: 32, offset: 224)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2719, file: !173, line: 88, baseType: !7, size: 32, offset: 256)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2719, file: !173, line: 89, baseType: !7, size: 32, offset: 288)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2719, file: !173, line: 90, baseType: !7, size: 32, offset: 320)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2719, file: !173, line: 91, baseType: !7, size: 32, offset: 352)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2719, file: !173, line: 92, baseType: !7, size: 32, offset: 384)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2719, file: !173, line: 93, baseType: !7, size: 32, offset: 416)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2719, file: !173, line: 95, baseType: !2734, size: 1024, offset: 448)
!2734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 1024, elements: !2735)
!2735 = !{!2736}
!2736 = !DISubrange(count: 128)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2632, file: !173, line: 407, baseType: !2738, size: 64, offset: 2048)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !173, line: 98, size: 1216, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2739, file: !173, line: 100, baseType: !1226, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2739, file: !173, line: 101, baseType: !1226, size: 64, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2739, file: !173, line: 103, baseType: !7, size: 32, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2739, file: !173, line: 104, baseType: !7, size: 32, offset: 160)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2739, file: !173, line: 106, baseType: !2734, size: 1024, offset: 192)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2632, file: !173, line: 408, baseType: !2747, size: 512, offset: 2112)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !173, line: 109, size: 512, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2747, file: !173, line: 111, baseType: !354, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2747, file: !173, line: 112, baseType: !354, size: 32, offset: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2747, file: !173, line: 115, baseType: !354, size: 32, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2747, file: !173, line: 116, baseType: !354, size: 32, offset: 96)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2747, file: !173, line: 117, baseType: !354, size: 32, offset: 128)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2747, file: !173, line: 118, baseType: !354, size: 32, offset: 160)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2747, file: !173, line: 119, baseType: !354, size: 32, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2747, file: !173, line: 120, baseType: !354, size: 32, offset: 224)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2747, file: !173, line: 121, baseType: !354, size: 32, offset: 256)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2747, file: !173, line: 122, baseType: !354, size: 32, offset: 288)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2747, file: !173, line: 125, baseType: !354, size: 32, offset: 320)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2747, file: !173, line: 126, baseType: !354, size: 32, offset: 352)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2747, file: !173, line: 127, baseType: !1266, size: 16, offset: 384)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2747, file: !173, line: 128, baseType: !1266, size: 16, offset: 400)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2747, file: !173, line: 129, baseType: !354, size: 32, offset: 416)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2747, file: !173, line: 130, baseType: !354, size: 32, offset: 448)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2747, file: !173, line: 131, baseType: !354, size: 32, offset: 480)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2632, file: !173, line: 409, baseType: !2767, size: 576, offset: 2624)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !173, line: 134, size: 576, elements: !2768)
!2768 = !{!2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2767, file: !173, line: 135, baseType: !354, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2767, file: !173, line: 136, baseType: !354, size: 32, offset: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2767, file: !173, line: 137, baseType: !354, size: 32, offset: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2767, file: !173, line: 138, baseType: !354, size: 32, offset: 96)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2767, file: !173, line: 139, baseType: !354, size: 32, offset: 128)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2767, file: !173, line: 140, baseType: !354, size: 32, offset: 160)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2767, file: !173, line: 141, baseType: !354, size: 32, offset: 192)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2767, file: !173, line: 142, baseType: !354, size: 32, offset: 224)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2767, file: !173, line: 143, baseType: !1320, size: 32, offset: 256)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2767, file: !173, line: 144, baseType: !354, size: 32, offset: 288)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2767, file: !173, line: 145, baseType: !354, size: 32, offset: 320)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2767, file: !173, line: 147, baseType: !354, size: 32, offset: 352)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2767, file: !173, line: 148, baseType: !354, size: 32, offset: 384)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2767, file: !173, line: 149, baseType: !354, size: 32, offset: 416)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2767, file: !173, line: 150, baseType: !354, size: 32, offset: 448)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2767, file: !173, line: 151, baseType: !354, size: 32, offset: 480)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2767, file: !173, line: 152, baseType: !1271, size: 64, offset: 512)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2632, file: !173, line: 411, baseType: !354, size: 32, offset: 3200)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2632, file: !173, line: 411, baseType: !354, size: 32, offset: 3232)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2632, file: !173, line: 411, baseType: !354, size: 32, offset: 3264)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2632, file: !173, line: 412, baseType: !1320, size: 32, offset: 3296)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2632, file: !173, line: 413, baseType: !354, size: 32, offset: 3328)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2632, file: !173, line: 413, baseType: !354, size: 32, offset: 3360)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2632, file: !173, line: 415, baseType: !354, size: 32, offset: 3392)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2632, file: !173, line: 415, baseType: !354, size: 32, offset: 3424)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2632, file: !173, line: 416, baseType: !1266, size: 16, offset: 3456)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2632, file: !173, line: 416, baseType: !1266, size: 16, offset: 3472)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2632, file: !173, line: 418, baseType: !1320, size: 32, offset: 3488)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2632, file: !173, line: 418, baseType: !1320, size: 32, offset: 3520)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2632, file: !173, line: 421, baseType: !1320, size: 32, offset: 3552)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2632, file: !173, line: 421, baseType: !1320, size: 32, offset: 3584)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2632, file: !173, line: 421, baseType: !1320, size: 32, offset: 3616)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2632, file: !173, line: 425, baseType: !1266, size: 16, offset: 3648)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2632, file: !173, line: 425, baseType: !1266, size: 16, offset: 3664)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2632, file: !173, line: 425, baseType: !1266, size: 16, offset: 3680)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2632, file: !173, line: 426, baseType: !1266, size: 16, offset: 3696)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2632, file: !173, line: 428, baseType: !1266, size: 16, offset: 3712)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2632, file: !173, line: 428, baseType: !1266, size: 16, offset: 3728)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2632, file: !173, line: 431, baseType: !354, size: 32, offset: 3744)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2632, file: !173, line: 433, baseType: !1266, size: 16, offset: 3776)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2632, file: !173, line: 435, baseType: !1266, size: 16, offset: 3792)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2632, file: !173, line: 437, baseType: !1266, size: 16, offset: 3808)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2632, file: !173, line: 439, baseType: !1266, size: 16, offset: 3824)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2632, file: !173, line: 441, baseType: !1266, size: 16, offset: 3840)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2632, file: !173, line: 443, baseType: !1266, size: 16, offset: 3856)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2632, file: !173, line: 449, baseType: !354, size: 32, offset: 3872)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2632, file: !173, line: 453, baseType: !354, size: 32, offset: 3904)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2632, file: !173, line: 458, baseType: !1266, size: 16, offset: 3936)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2632, file: !173, line: 462, baseType: !1266, size: 16, offset: 3952)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2632, file: !173, line: 467, baseType: !354, size: 32, offset: 3968)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2632, file: !173, line: 467, baseType: !354, size: 32, offset: 4000)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2632, file: !173, line: 469, baseType: !1266, size: 16, offset: 4032)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2632, file: !173, line: 469, baseType: !1266, size: 16, offset: 4048)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2632, file: !173, line: 469, baseType: !1266, size: 16, offset: 4064)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2632, file: !173, line: 469, baseType: !1266, size: 16, offset: 4080)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2632, file: !173, line: 474, baseType: !1266, size: 16, offset: 4096)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2632, file: !173, line: 475, baseType: !1253, size: 8, offset: 4112)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2632, file: !173, line: 476, baseType: !1253, size: 8, offset: 4120)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2632, file: !173, line: 481, baseType: !354, size: 32, offset: 4128)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2632, file: !173, line: 486, baseType: !354, size: 32, offset: 4160)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2632, file: !173, line: 491, baseType: !354, size: 32, offset: 4192)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2632, file: !173, line: 496, baseType: !1266, size: 16, offset: 4224)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2632, file: !173, line: 498, baseType: !1266, size: 16, offset: 4240)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2632, file: !173, line: 501, baseType: !1266, size: 16, offset: 4256)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2632, file: !173, line: 502, baseType: !1266, size: 16, offset: 4272)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2632, file: !173, line: 508, baseType: !1266, size: 16, offset: 4288)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2632, file: !173, line: 513, baseType: !1266, size: 16, offset: 4304)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2632, file: !173, line: 515, baseType: !1266, size: 16, offset: 4320)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2632, file: !173, line: 515, baseType: !1266, size: 16, offset: 4336)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2632, file: !173, line: 519, baseType: !2673, size: 128, offset: 4352)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2632, file: !173, line: 519, baseType: !2673, size: 128, offset: 4480)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2632, file: !173, line: 520, baseType: !2841, size: 128, offset: 4608)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !2674, line: 89, baseType: !2842)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !2674, line: 86, size: 128, elements: !2843)
!2843 = !{!2844, !2845, !2846, !2847}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2842, file: !2674, line: 87, baseType: !354, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2842, file: !2674, line: 87, baseType: !354, size: 32, offset: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2842, file: !2674, line: 88, baseType: !354, size: 32, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2842, file: !2674, line: 88, baseType: !354, size: 32, offset: 96)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2632, file: !173, line: 523, baseType: !1292, size: 128, offset: 4736)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2632, file: !173, line: 524, baseType: !1266, size: 16, offset: 4864)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2632, file: !173, line: 527, baseType: !1266, size: 16, offset: 4880)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2632, file: !173, line: 532, baseType: !1320, size: 32, offset: 4896)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2632, file: !173, line: 532, baseType: !1320, size: 32, offset: 4928)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2632, file: !173, line: 534, baseType: !1320, size: 32, offset: 4960)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2632, file: !173, line: 538, baseType: !1320, size: 32, offset: 4992)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2632, file: !173, line: 542, baseType: !354, size: 32, offset: 5024)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2632, file: !173, line: 545, baseType: !1320, size: 32, offset: 5056)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2632, file: !173, line: 545, baseType: !1320, size: 32, offset: 5088)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2632, file: !173, line: 545, baseType: !1320, size: 32, offset: 5120)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2632, file: !173, line: 548, baseType: !1320, size: 32, offset: 5152)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2632, file: !173, line: 551, baseType: !1266, size: 16, offset: 5184)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2632, file: !173, line: 551, baseType: !1266, size: 16, offset: 5200)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2632, file: !173, line: 551, baseType: !1266, size: 16, offset: 5216)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2632, file: !173, line: 551, baseType: !1266, size: 16, offset: 5232)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2632, file: !173, line: 552, baseType: !1266, size: 16, offset: 5248)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2632, file: !173, line: 552, baseType: !1266, size: 16, offset: 5264)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2632, file: !173, line: 553, baseType: !1320, size: 32, offset: 5280)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2632, file: !173, line: 553, baseType: !1320, size: 32, offset: 5312)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2632, file: !173, line: 554, baseType: !1266, size: 16, offset: 5344)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2632, file: !173, line: 554, baseType: !1266, size: 16, offset: 5360)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2632, file: !173, line: 555, baseType: !1320, size: 32, offset: 5376)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2632, file: !173, line: 555, baseType: !1320, size: 32, offset: 5408)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2632, file: !173, line: 558, baseType: !1252, size: 8192, offset: 5440)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2632, file: !173, line: 561, baseType: !354, size: 32, offset: 13632)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2632, file: !173, line: 562, baseType: !1266, size: 16, offset: 13664)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2632, file: !173, line: 562, baseType: !1266, size: 16, offset: 13680)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2632, file: !173, line: 565, baseType: !2877, size: 6144, offset: 13696)
!2877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 6144, elements: !2878)
!2878 = !{!2879}
!2879 = !DISubrange(count: 768)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2632, file: !173, line: 568, baseType: !1331, size: 128, offset: 19840)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2632, file: !173, line: 569, baseType: !1331, size: 128, offset: 19968)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2632, file: !173, line: 572, baseType: !1253, size: 8, offset: 20096)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2632, file: !173, line: 573, baseType: !1253, size: 8, offset: 20104)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2632, file: !173, line: 574, baseType: !1253, size: 8, offset: 20112)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2632, file: !173, line: 575, baseType: !2481, size: 40, offset: 20120)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2632, file: !173, line: 578, baseType: !354, size: 32, offset: 20160)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2632, file: !173, line: 579, baseType: !1266, size: 16, offset: 20192)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2632, file: !173, line: 580, baseType: !1266, size: 16, offset: 20208)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2632, file: !173, line: 581, baseType: !1320, size: 32, offset: 20224)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2632, file: !173, line: 582, baseType: !1320, size: 32, offset: 20256)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2632, file: !173, line: 585, baseType: !1266, size: 16, offset: 20288)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2632, file: !173, line: 585, baseType: !1266, size: 16, offset: 20304)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2632, file: !173, line: 586, baseType: !1320, size: 32, offset: 20320)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2632, file: !173, line: 589, baseType: !1266, size: 16, offset: 20352)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2632, file: !173, line: 589, baseType: !1266, size: 16, offset: 20368)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2632, file: !173, line: 590, baseType: !354, size: 32, offset: 20384)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2632, file: !173, line: 593, baseType: !1266, size: 16, offset: 20416)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2632, file: !173, line: 593, baseType: !1266, size: 16, offset: 20432)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2632, file: !173, line: 594, baseType: !1266, size: 16, offset: 20448)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2632, file: !173, line: 594, baseType: !1266, size: 16, offset: 20464)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2632, file: !173, line: 595, baseType: !1320, size: 32, offset: 20480)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2632, file: !173, line: 596, baseType: !1320, size: 32, offset: 20512)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2632, file: !173, line: 597, baseType: !2904, size: 64, offset: 20544)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2906, line: 44, flags: DIFlagFwdDecl)
!2906 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2632, file: !173, line: 600, baseType: !354, size: 32, offset: 20608)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2632, file: !173, line: 601, baseType: !1320, size: 32, offset: 20640)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2632, file: !173, line: 604, baseType: !2910, size: 256, offset: 20672)
!2910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 256, elements: !2911)
!2911 = !{!2912}
!2912 = !DISubrange(count: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2632, file: !173, line: 607, baseType: !2914, size: 10880, offset: 20928)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !173, line: 364, size: 10880, elements: !2915)
!2915 = !{!2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2914, file: !173, line: 365, baseType: !2635, size: 1984)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2914, file: !173, line: 367, baseType: !1252, size: 8192, offset: 1984)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2914, file: !173, line: 369, baseType: !1266, size: 16, offset: 10176)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2914, file: !173, line: 369, baseType: !1266, size: 16, offset: 10192)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2914, file: !173, line: 370, baseType: !1266, size: 16, offset: 10208)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2914, file: !173, line: 370, baseType: !1266, size: 16, offset: 10224)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2914, file: !173, line: 372, baseType: !1320, size: 32, offset: 10240)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2914, file: !173, line: 373, baseType: !1320, size: 32, offset: 10272)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2914, file: !173, line: 375, baseType: !2548, size: 24, offset: 10304)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2914, file: !173, line: 376, baseType: !1253, size: 8, offset: 10328)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2914, file: !173, line: 378, baseType: !1253, size: 8, offset: 10336)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2914, file: !173, line: 379, baseType: !2548, size: 24, offset: 10344)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2914, file: !173, line: 381, baseType: !1282, size: 512, offset: 10368)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2632, file: !173, line: 609, baseType: !354, size: 32, offset: 31808)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2632, file: !173, line: 610, baseType: !354, size: 32, offset: 31840)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !2372, file: !173, line: 1252, baseType: !2932, size: 256, offset: 34112)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !173, line: 158, size: 256, elements: !2933)
!2933 = !{!2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2932, file: !173, line: 159, baseType: !354, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2932, file: !173, line: 160, baseType: !1320, size: 32, offset: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2932, file: !173, line: 161, baseType: !1320, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2932, file: !173, line: 162, baseType: !1320, size: 32, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2932, file: !173, line: 163, baseType: !354, size: 32, offset: 128)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2932, file: !173, line: 164, baseType: !1266, size: 16, offset: 160)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2932, file: !173, line: 165, baseType: !1266, size: 16, offset: 176)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2932, file: !173, line: 166, baseType: !1320, size: 32, offset: 192)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2932, file: !173, line: 167, baseType: !1320, size: 32, offset: 224)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2372, file: !173, line: 1254, baseType: !1292, size: 128, offset: 34368)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !2372, file: !173, line: 1255, baseType: !1292, size: 128, offset: 34496)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !2372, file: !173, line: 1257, baseType: !1226, size: 64, offset: 34624)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !2372, file: !173, line: 1258, baseType: !1226, size: 64, offset: 34688)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !2372, file: !173, line: 1259, baseType: !1226, size: 64, offset: 34752)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !2372, file: !173, line: 1260, baseType: !1226, size: 64, offset: 34816)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !2372, file: !173, line: 1262, baseType: !1226, size: 64, offset: 34880)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !2372, file: !173, line: 1265, baseType: !2951, size: 64, offset: 34944)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !173, line: 1265, flags: DIFlagFwdDecl)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !2372, file: !173, line: 1266, baseType: !1266, size: 16, offset: 35008)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2372, file: !173, line: 1267, baseType: !1266, size: 16, offset: 35024)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !2372, file: !173, line: 1270, baseType: !354, size: 32, offset: 35040)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !2372, file: !173, line: 1271, baseType: !1292, size: 128, offset: 35072)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2372, file: !173, line: 1274, baseType: !2958, size: 128, offset: 35200)
!2958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !173, line: 650, size: 128, elements: !2959)
!2959 = !{!2960, !2961, !2962, !2963, !2964}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2958, file: !173, line: 651, baseType: !1575, size: 96)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2958, file: !173, line: 652, baseType: !1253, size: 8, offset: 96)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2958, file: !173, line: 652, baseType: !1253, size: 8, offset: 104)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2958, file: !173, line: 652, baseType: !1253, size: 8, offset: 112)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2958, file: !173, line: 652, baseType: !1253, size: 8, offset: 120)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !2372, file: !173, line: 1275, baseType: !2966, size: 1472, offset: 35328)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !173, line: 676, size: 1472, elements: !2967)
!2967 = !{!2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2989, !2990, !2991, !2992, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2966, file: !173, line: 679, baseType: !2958, size: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2966, file: !173, line: 680, baseType: !1266, size: 16, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2966, file: !173, line: 680, baseType: !1266, size: 16, offset: 144)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2966, file: !173, line: 680, baseType: !1266, size: 16, offset: 160)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2966, file: !173, line: 680, baseType: !1266, size: 16, offset: 176)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2966, file: !173, line: 681, baseType: !1266, size: 16, offset: 192)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2966, file: !173, line: 681, baseType: !1266, size: 16, offset: 208)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2966, file: !173, line: 681, baseType: !1266, size: 16, offset: 224)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2966, file: !173, line: 681, baseType: !1266, size: 16, offset: 240)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2966, file: !173, line: 682, baseType: !1266, size: 16, offset: 256)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2966, file: !173, line: 682, baseType: !1578, size: 48, offset: 272)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2966, file: !173, line: 685, baseType: !2980, size: 192, offset: 320)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !173, line: 633, size: 192, elements: !2981)
!2981 = !{!2982, !2983, !2984, !2985, !2986, !2987, !2988}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2980, file: !173, line: 634, baseType: !1266, size: 16)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2980, file: !173, line: 634, baseType: !1266, size: 16, offset: 16)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2980, file: !173, line: 635, baseType: !1266, size: 16, offset: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2980, file: !173, line: 635, baseType: !1266, size: 16, offset: 48)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2980, file: !173, line: 636, baseType: !1320, size: 32, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2980, file: !173, line: 636, baseType: !1320, size: 32, offset: 96)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2980, file: !173, line: 637, baseType: !2904, size: 64, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2966, file: !173, line: 686, baseType: !1266, size: 16, offset: 512)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2966, file: !173, line: 686, baseType: !1266, size: 16, offset: 528)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2966, file: !173, line: 687, baseType: !1320, size: 32, offset: 544)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2966, file: !173, line: 688, baseType: !2993, size: 448, offset: 576)
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !173, line: 674, baseType: !2994)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !173, line: 659, size: 448, elements: !2995)
!2995 = !{!2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2994, file: !173, line: 660, baseType: !1320, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2994, file: !173, line: 661, baseType: !1320, size: 32, offset: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2994, file: !173, line: 662, baseType: !1320, size: 32, offset: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2994, file: !173, line: 663, baseType: !1320, size: 32, offset: 96)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2994, file: !173, line: 664, baseType: !1320, size: 32, offset: 128)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2994, file: !173, line: 665, baseType: !1320, size: 32, offset: 160)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2994, file: !173, line: 666, baseType: !1320, size: 32, offset: 192)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2994, file: !173, line: 667, baseType: !1320, size: 32, offset: 224)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2994, file: !173, line: 668, baseType: !1320, size: 32, offset: 256)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2994, file: !173, line: 669, baseType: !1320, size: 32, offset: 288)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2994, file: !173, line: 670, baseType: !354, size: 32, offset: 320)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2994, file: !173, line: 671, baseType: !1320, size: 32, offset: 352)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2994, file: !173, line: 672, baseType: !1320, size: 32, offset: 384)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2994, file: !173, line: 673, baseType: !1266, size: 16, offset: 416)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2994, file: !173, line: 673, baseType: !1266, size: 16, offset: 432)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2966, file: !173, line: 692, baseType: !1320, size: 32, offset: 1024)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2966, file: !173, line: 697, baseType: !1320, size: 32, offset: 1056)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2966, file: !173, line: 703, baseType: !354, size: 32, offset: 1088)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2966, file: !173, line: 704, baseType: !1266, size: 16, offset: 1120)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2966, file: !173, line: 704, baseType: !1266, size: 16, offset: 1136)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2966, file: !173, line: 705, baseType: !1266, size: 16, offset: 1152)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2966, file: !173, line: 706, baseType: !1266, size: 16, offset: 1168)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2966, file: !173, line: 707, baseType: !1266, size: 16, offset: 1184)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2966, file: !173, line: 708, baseType: !1266, size: 16, offset: 1200)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2966, file: !173, line: 709, baseType: !1266, size: 16, offset: 1216)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2966, file: !173, line: 709, baseType: !1266, size: 16, offset: 1232)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2966, file: !173, line: 709, baseType: !1266, size: 16, offset: 1248)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2966, file: !173, line: 709, baseType: !1266, size: 16, offset: 1264)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2966, file: !173, line: 710, baseType: !1266, size: 16, offset: 1280)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2966, file: !173, line: 711, baseType: !1266, size: 16, offset: 1296)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2966, file: !173, line: 712, baseType: !1320, size: 32, offset: 1312)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2966, file: !173, line: 713, baseType: !1320, size: 32, offset: 1344)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2966, file: !173, line: 713, baseType: !1320, size: 32, offset: 1376)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2966, file: !173, line: 713, baseType: !1320, size: 32, offset: 1408)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2966, file: !173, line: 713, baseType: !1320, size: 32, offset: 1440)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !2372, file: !173, line: 1278, baseType: !3032, size: 64, offset: 36800)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !173, line: 1197, size: 64, elements: !3033)
!3033 = !{!3034, !3035, !3036, !3037}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3032, file: !173, line: 1199, baseType: !1320, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3032, file: !173, line: 1200, baseType: !1253, size: 8, offset: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3032, file: !173, line: 1201, baseType: !1253, size: 8, offset: 40)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3032, file: !173, line: 1202, baseType: !1266, size: 16, offset: 48)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2372, file: !173, line: 1281, baseType: !2128, size: 64, offset: 36864)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !2372, file: !173, line: 1284, baseType: !3040, size: 192, offset: 36928)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !173, line: 1208, size: 192, elements: !3041)
!3041 = !{!3042, !3043, !3044, !3045}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3040, file: !173, line: 1209, baseType: !1575, size: 96)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3040, file: !173, line: 1210, baseType: !354, size: 32, offset: 96)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3040, file: !173, line: 1210, baseType: !354, size: 32, offset: 128)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3040, file: !173, line: 1210, baseType: !354, size: 32, offset: 160)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2372, file: !173, line: 1287, baseType: !3047, size: 64, offset: 37120)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !173, line: 62, flags: DIFlagFwdDecl)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !2372, file: !173, line: 1289, baseType: !3050, size: 64, offset: 37184)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !3051, line: 27, baseType: !3052)
!3051 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!3052 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !3053, line: 45, baseType: !3054)
!3053 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!3054 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !2372, file: !173, line: 1290, baseType: !3050, size: 64, offset: 37248)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2372, file: !173, line: 1293, baseType: !2655, size: 1280, offset: 37312)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2372, file: !173, line: 1294, baseType: !2713, size: 512, offset: 38592)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !2372, file: !173, line: 1295, baseType: !1494, size: 512, offset: 39104)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !2372, file: !173, line: 1298, baseType: !3060, size: 64, offset: 39616)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !173, line: 1298, flags: DIFlagFwdDecl)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2368, file: !1429, line: 53, baseType: !354, size: 32, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2368, file: !1429, line: 54, baseType: !354, size: 32, offset: 96)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2368, file: !1429, line: 55, baseType: !354, size: 32, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2368, file: !1429, line: 55, baseType: !354, size: 32, offset: 160)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2368, file: !1429, line: 56, baseType: !1253, size: 8, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !2368, file: !1429, line: 56, baseType: !1253, size: 8, offset: 200)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2368, file: !1429, line: 57, baseType: !1253, size: 8, offset: 208)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2368, file: !1429, line: 57, baseType: !1253, size: 8, offset: 216)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !2368, file: !1429, line: 59, baseType: !1266, size: 16, offset: 224)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2368, file: !1429, line: 59, baseType: !1266, size: 16, offset: 240)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2368, file: !1429, line: 59, baseType: !1266, size: 16, offset: 256)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2368, file: !1429, line: 61, baseType: !1266, size: 16, offset: 272)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2368, file: !1429, line: 63, baseType: !354, size: 32, offset: 288)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2313, file: !2314, line: 248, baseType: !2409, size: 64, offset: 2688)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2313, file: !2314, line: 249, baseType: !1341, size: 64, offset: 2752)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2313, file: !2314, line: 250, baseType: !1427, size: 64, offset: 2816)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2313, file: !2314, line: 251, baseType: !3079, size: 64, offset: 2880)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !2314, line: 113, size: 6208, elements: !3081)
!3081 = !{!3082, !3083, !3084, !3085, !3086, !3087, !3088}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3080, file: !2314, line: 114, baseType: !1266, size: 16)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3080, file: !2314, line: 114, baseType: !1266, size: 16, offset: 16)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !3080, file: !2314, line: 115, baseType: !1253, size: 8, offset: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !3080, file: !2314, line: 115, baseType: !1253, size: 8, offset: 40)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !3080, file: !2314, line: 116, baseType: !1253, size: 8, offset: 48)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3080, file: !2314, line: 117, baseType: !2405, size: 8, offset: 56)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3080, file: !2314, line: 119, baseType: !3089, size: 6144, offset: 64)
!3089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3090, size: 6144, elements: !2911)
!3090 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !2314, line: 109, baseType: !3091)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !2314, line: 106, size: 192, elements: !3092)
!3092 = !{!3093, !3094, !3095, !3096, !3097, !3098}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3091, file: !2314, line: 107, baseType: !1320, size: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3091, file: !2314, line: 107, baseType: !1320, size: 32, offset: 32)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3091, file: !2314, line: 107, baseType: !1320, size: 32, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3091, file: !2314, line: 107, baseType: !1320, size: 32, offset: 96)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3091, file: !2314, line: 107, baseType: !1320, size: 32, offset: 128)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3091, file: !2314, line: 108, baseType: !354, size: 32, offset: 160)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2313, file: !2314, line: 252, baseType: !3100, size: 64, offset: 2944)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !2314, line: 122, size: 1600, elements: !3102)
!3102 = !{!3103, !3104, !3105, !3109, !3110, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3101, file: !2314, line: 123, baseType: !2050, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3101, file: !2314, line: 124, baseType: !1427, size: 64, offset: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !3101, file: !2314, line: 125, baseType: !3106, size: 384, offset: 128)
!3106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3107, size: 384, elements: !2652)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1495, line: 136, flags: DIFlagFwdDecl)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3101, file: !2314, line: 126, baseType: !2172, size: 512, offset: 512)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !3101, file: !2314, line: 127, baseType: !3111, size: 288, offset: 1024)
!3111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 288, elements: !3112)
!3112 = !{!1398, !1398}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3101, file: !2314, line: 128, baseType: !1266, size: 16, offset: 1312)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !3101, file: !2314, line: 128, baseType: !1266, size: 16, offset: 1328)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !3101, file: !2314, line: 129, baseType: !1320, size: 32, offset: 1344)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !3101, file: !2314, line: 129, baseType: !1320, size: 32, offset: 1376)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !3101, file: !2314, line: 130, baseType: !1320, size: 32, offset: 1408)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !3101, file: !2314, line: 131, baseType: !7, size: 32, offset: 1440)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !3101, file: !2314, line: 132, baseType: !1266, size: 16, offset: 1472)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3101, file: !2314, line: 132, baseType: !1266, size: 16, offset: 1488)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3101, file: !2314, line: 133, baseType: !354, size: 32, offset: 1504)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !3101, file: !2314, line: 133, baseType: !354, size: 32, offset: 1536)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3101, file: !2314, line: 134, baseType: !1266, size: 16, offset: 1568)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !3101, file: !2314, line: 134, baseType: !1266, size: 16, offset: 1584)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2313, file: !2314, line: 253, baseType: !1466, size: 64, offset: 3008)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2313, file: !2314, line: 254, baseType: !3127, size: 64, offset: 3072)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !2314, line: 137, size: 832, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3128, file: !2314, line: 138, baseType: !1266, size: 16)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !3128, file: !2314, line: 140, baseType: !1266, size: 16, offset: 16)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !3128, file: !2314, line: 141, baseType: !1320, size: 32, offset: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3128, file: !2314, line: 142, baseType: !1320, size: 32, offset: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3128, file: !2314, line: 143, baseType: !1266, size: 16, offset: 96)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !3128, file: !2314, line: 144, baseType: !1266, size: 16, offset: 112)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !3128, file: !2314, line: 145, baseType: !354, size: 32, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !3128, file: !2314, line: 147, baseType: !354, size: 32, offset: 160)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3128, file: !2314, line: 149, baseType: !2050, size: 64, offset: 192)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3128, file: !2314, line: 150, baseType: !354, size: 32, offset: 256)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !3128, file: !2314, line: 151, baseType: !1266, size: 16, offset: 288)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !3128, file: !2314, line: 152, baseType: !1266, size: 16, offset: 304)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !3128, file: !2314, line: 154, baseType: !1226, size: 64, offset: 320)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !3128, file: !2314, line: 155, baseType: !2027, size: 64, offset: 384)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !3128, file: !2314, line: 157, baseType: !1320, size: 32, offset: 448)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !3128, file: !2314, line: 158, baseType: !1266, size: 16, offset: 480)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !3128, file: !2314, line: 159, baseType: !1266, size: 16, offset: 496)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !3128, file: !2314, line: 160, baseType: !1266, size: 16, offset: 512)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !3128, file: !2314, line: 161, baseType: !1578, size: 48, offset: 528)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !3128, file: !2314, line: 162, baseType: !1320, size: 32, offset: 576)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !3128, file: !2314, line: 164, baseType: !1320, size: 32, offset: 608)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !3128, file: !2314, line: 164, baseType: !1320, size: 32, offset: 640)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !3128, file: !2314, line: 164, baseType: !1320, size: 32, offset: 672)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !3128, file: !2314, line: 165, baseType: !3079, size: 64, offset: 704)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !3128, file: !2314, line: 167, baseType: !2665, size: 64, offset: 768)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2313, file: !2314, line: 255, baseType: !3156, size: 64, offset: 3136)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !2314, line: 170, size: 8704, elements: !3158)
!3158 = !{!3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !3157, file: !2314, line: 171, baseType: !2455, size: 96)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !3157, file: !2314, line: 172, baseType: !354, size: 32, offset: 96)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !3157, file: !2314, line: 173, baseType: !1266, size: 16, offset: 128)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3157, file: !2314, line: 174, baseType: !1266, size: 16, offset: 144)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !3157, file: !2314, line: 175, baseType: !1266, size: 16, offset: 160)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !3157, file: !2314, line: 176, baseType: !1266, size: 16, offset: 176)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !3157, file: !2314, line: 177, baseType: !1266, size: 16, offset: 192)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3157, file: !2314, line: 178, baseType: !1266, size: 16, offset: 208)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !3157, file: !2314, line: 179, baseType: !354, size: 32, offset: 224)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3157, file: !2314, line: 181, baseType: !2050, size: 64, offset: 256)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !3157, file: !2314, line: 182, baseType: !1320, size: 32, offset: 320)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !3157, file: !2314, line: 183, baseType: !354, size: 32, offset: 352)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !3157, file: !2314, line: 184, baseType: !1252, size: 8192, offset: 384)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !3157, file: !2314, line: 187, baseType: !2027, size: 64, offset: 8576)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !3157, file: !2314, line: 188, baseType: !354, size: 32, offset: 8640)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3157, file: !2314, line: 189, baseType: !354, size: 32, offset: 8672)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2313, file: !2314, line: 256, baseType: !3176, size: 64, offset: 3200)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !2314, line: 193, size: 640, elements: !3178)
!3178 = !{!3179, !3180, !3181, !3182}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3177, file: !2314, line: 194, baseType: !2050, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !3177, file: !2314, line: 195, baseType: !1282, size: 512, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3177, file: !2314, line: 197, baseType: !354, size: 32, offset: 576)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3177, file: !2314, line: 198, baseType: !354, size: 32, offset: 608)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2313, file: !2314, line: 258, baseType: !1253, size: 8, offset: 3264)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2313, file: !2314, line: 259, baseType: !1378, size: 56, offset: 3272)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !2273, file: !2231, line: 111, baseType: !3186, size: 64, offset: 1088)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !2231, line: 111, flags: DIFlagFwdDecl)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !2273, file: !2231, line: 112, baseType: !1320, size: 32, offset: 1152)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2273, file: !2231, line: 113, baseType: !354, size: 32, offset: 1184)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !2273, file: !2231, line: 115, baseType: !2050, size: 64, offset: 1216)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2051, file: !34, line: 264, baseType: !3192, size: 64, offset: 9984)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !2231, line: 268, size: 3776, elements: !3194)
!3194 = !{!3195, !3196, !3197, !3200, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3252, !3253, !3254, !3286, !3287, !3303, !3304, !3305, !3306}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3193, file: !2231, line: 270, baseType: !354, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !3193, file: !2231, line: 270, baseType: !354, size: 32, offset: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !3193, file: !2231, line: 271, baseType: !3198, size: 64, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !2231, line: 271, flags: DIFlagFwdDecl)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !3193, file: !2231, line: 272, baseType: !3201, size: 64, offset: 128)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !2231, line: 272, flags: DIFlagFwdDecl)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3193, file: !2231, line: 273, baseType: !1253, size: 8, offset: 192)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !3193, file: !2231, line: 274, baseType: !1253, size: 8, offset: 200)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !3193, file: !2231, line: 275, baseType: !1266, size: 16, offset: 208)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !3193, file: !2231, line: 280, baseType: !1320, size: 32, offset: 224)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !3193, file: !2231, line: 281, baseType: !1282, size: 512, offset: 256)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !3193, file: !2231, line: 285, baseType: !1320, size: 32, offset: 768)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !3193, file: !2231, line: 286, baseType: !1320, size: 32, offset: 800)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !3193, file: !2231, line: 287, baseType: !1320, size: 32, offset: 832)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !3193, file: !2231, line: 288, baseType: !1320, size: 32, offset: 864)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !3193, file: !2231, line: 291, baseType: !1320, size: 32, offset: 896)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !3193, file: !2231, line: 292, baseType: !1320, size: 32, offset: 928)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !3193, file: !2231, line: 293, baseType: !1320, size: 32, offset: 960)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !3193, file: !2231, line: 294, baseType: !1320, size: 32, offset: 992)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !3193, file: !2231, line: 295, baseType: !1320, size: 32, offset: 1024)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !3193, file: !2231, line: 296, baseType: !1266, size: 16, offset: 1056)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !3193, file: !2231, line: 297, baseType: !1282, size: 512, offset: 1072)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !3193, file: !2231, line: 301, baseType: !1266, size: 16, offset: 1584)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !3193, file: !2231, line: 304, baseType: !1320, size: 32, offset: 1600)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !3193, file: !2231, line: 305, baseType: !1320, size: 32, offset: 1632)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !3193, file: !2231, line: 306, baseType: !1282, size: 512, offset: 1664)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !3193, file: !2231, line: 312, baseType: !354, size: 32, offset: 2176)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !3193, file: !2231, line: 312, baseType: !354, size: 32, offset: 2208)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3193, file: !2231, line: 313, baseType: !354, size: 32, offset: 2240)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !3193, file: !2231, line: 314, baseType: !1266, size: 16, offset: 2272)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !3193, file: !2231, line: 314, baseType: !1266, size: 16, offset: 2288)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3193, file: !2231, line: 317, baseType: !3229, size: 64, offset: 2304)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !2231, line: 213, baseType: !3232)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !2231, line: 211, size: 128, elements: !3233)
!3233 = !{!3234}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3232, file: !2231, line: 212, baseType: !1331, size: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !3193, file: !2231, line: 318, baseType: !354, size: 32, offset: 2368)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !3193, file: !2231, line: 318, baseType: !354, size: 32, offset: 2400)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !3193, file: !2231, line: 320, baseType: !1320, size: 32, offset: 2432)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !3193, file: !2231, line: 323, baseType: !1320, size: 32, offset: 2464)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !3193, file: !2231, line: 324, baseType: !1320, size: 32, offset: 2496)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !3193, file: !2231, line: 325, baseType: !1320, size: 32, offset: 2528)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !3193, file: !2231, line: 326, baseType: !1266, size: 16, offset: 2560)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !3193, file: !2231, line: 327, baseType: !1266, size: 16, offset: 2576)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !3193, file: !2231, line: 328, baseType: !1266, size: 16, offset: 2592)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !3193, file: !2231, line: 329, baseType: !1266, size: 16, offset: 2608)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !3193, file: !2231, line: 330, baseType: !1266, size: 16, offset: 2624)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !3193, file: !2231, line: 331, baseType: !1266, size: 16, offset: 2640)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !3193, file: !2231, line: 332, baseType: !1266, size: 16, offset: 2656)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !3193, file: !2231, line: 332, baseType: !1266, size: 16, offset: 2672)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !3193, file: !2231, line: 335, baseType: !3250, size: 64, offset: 2688)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !2231, line: 335, flags: DIFlagFwdDecl)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !3193, file: !2231, line: 336, baseType: !1320, size: 32, offset: 2752)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !3193, file: !2231, line: 337, baseType: !1320, size: 32, offset: 2784)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !3193, file: !2231, line: 339, baseType: !3255, size: 64, offset: 2816)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !2231, line: 170, size: 10560, elements: !3257)
!3257 = !{!3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3282}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3256, file: !2231, line: 171, baseType: !3255, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3256, file: !2231, line: 171, baseType: !3255, size: 64, offset: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3256, file: !2231, line: 172, baseType: !354, size: 32, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3256, file: !2231, line: 174, baseType: !354, size: 32, offset: 160)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !3256, file: !2231, line: 186, baseType: !354, size: 32, offset: 192)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !3256, file: !2231, line: 187, baseType: !354, size: 32, offset: 224)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !3256, file: !2231, line: 188, baseType: !354, size: 32, offset: 256)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !3256, file: !2231, line: 189, baseType: !354, size: 32, offset: 288)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !3256, file: !2231, line: 190, baseType: !354, size: 32, offset: 320)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !3256, file: !2231, line: 191, baseType: !354, size: 32, offset: 352)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3256, file: !2231, line: 192, baseType: !354, size: 32, offset: 384)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3256, file: !2231, line: 195, baseType: !354, size: 32, offset: 416)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3256, file: !2231, line: 196, baseType: !354, size: 32, offset: 448)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !3256, file: !2231, line: 197, baseType: !1266, size: 16, offset: 480)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3256, file: !2231, line: 197, baseType: !1266, size: 16, offset: 496)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3256, file: !2231, line: 199, baseType: !1282, size: 512, offset: 512)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !3256, file: !2231, line: 200, baseType: !1282, size: 512, offset: 1024)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3256, file: !2231, line: 201, baseType: !1282, size: 512, offset: 1536)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !3256, file: !2231, line: 202, baseType: !1252, size: 8192, offset: 2048)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !3256, file: !2231, line: 203, baseType: !1381, size: 64, offset: 10240)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !3256, file: !2231, line: 205, baseType: !1294, size: 128, offset: 10304)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !3256, file: !2231, line: 207, baseType: !3280, size: 64, offset: 10432)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !2231, line: 207, flags: DIFlagFwdDecl)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !3256, file: !2231, line: 208, baseType: !3283, size: 64, offset: 10496)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{null, !3280}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3193, file: !2231, line: 340, baseType: !1294, size: 128, offset: 2880)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !3193, file: !2231, line: 342, baseType: !3288, size: 64, offset: 3008)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !2231, line: 118, size: 640, elements: !3290)
!3290 = !{!3291, !3295, !3299, !3300, !3301, !3302}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3289, file: !2231, line: 119, baseType: !3292, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !3294, line: 105, flags: DIFlagFwdDecl)
!3294 = !DIFile(filename: "blender/source/blender/makesdna/DNA_cloth_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3289, file: !2231, line: 121, baseType: !3296, size: 448, offset: 64)
!3296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 448, elements: !3297)
!3297 = !{!3298}
!3298 = !DISubrange(count: 14)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !3289, file: !2231, line: 122, baseType: !1320, size: 32, offset: 512)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3289, file: !2231, line: 123, baseType: !1266, size: 16, offset: 544)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3289, file: !2231, line: 123, baseType: !1578, size: 48, offset: 560)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3289, file: !2231, line: 124, baseType: !354, size: 32, offset: 608)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !3193, file: !2231, line: 344, baseType: !1575, size: 96, offset: 3072)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !3193, file: !2231, line: 345, baseType: !3111, size: 288, offset: 3168)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !3193, file: !2231, line: 346, baseType: !3111, size: 288, offset: 3456)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !3193, file: !2231, line: 348, baseType: !354, size: 32, offset: 3744)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !2051, file: !34, line: 265, baseType: !3292, size: 64, offset: 10048)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !2051, file: !34, line: 267, baseType: !1253, size: 8, offset: 10112)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !2051, file: !34, line: 268, baseType: !1253, size: 8, offset: 10120)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2051, file: !34, line: 269, baseType: !1266, size: 16, offset: 10128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !2051, file: !34, line: 270, baseType: !1320, size: 32, offset: 10144)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !2051, file: !34, line: 272, baseType: !3313, size: 64, offset: 10176)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !286, line: 732, flags: DIFlagFwdDecl)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !2051, file: !34, line: 275, baseType: !3316, size: 64, offset: 10240)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !34, line: 275, flags: DIFlagFwdDecl)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !2051, file: !34, line: 277, baseType: !1807, size: 64, offset: 10304)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !2051, file: !34, line: 277, baseType: !1807, size: 64, offset: 10368)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !2051, file: !34, line: 278, baseType: !3050, size: 64, offset: 10432)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !2051, file: !34, line: 279, baseType: !3050, size: 64, offset: 10496)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2051, file: !34, line: 280, baseType: !7, size: 32, offset: 10560)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !2051, file: !34, line: 281, baseType: !7, size: 32, offset: 10592)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !2051, file: !34, line: 283, baseType: !1292, size: 128, offset: 10624)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !2051, file: !34, line: 284, baseType: !1292, size: 128, offset: 10752)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !2051, file: !34, line: 285, baseType: !3327, size: 64, offset: 10880)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !2051, file: !34, line: 287, baseType: !3329, size: 64, offset: 10944)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !34, line: 59, flags: DIFlagFwdDecl)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !2051, file: !34, line: 288, baseType: !3332, size: 64, offset: 11008)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !34, line: 288, flags: DIFlagFwdDecl)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !2051, file: !34, line: 290, baseType: !1523, size: 64, offset: 11072)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2051, file: !34, line: 291, baseType: !3336, size: 64, offset: 11136)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 64)
!3337 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1429, line: 65, baseType: !2368)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !2051, file: !34, line: 293, baseType: !1292, size: 128, offset: 11200)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !2051, file: !34, line: 294, baseType: !3340, size: 64, offset: 11328)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !34, line: 113, baseType: !3342)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !34, line: 108, size: 256, elements: !3343)
!3343 = !{!3344, !3346, !3347, !3348, !3349}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3342, file: !34, line: 109, baseType: !3345, size: 64)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3342, file: !34, line: 109, baseType: !3345, size: 64, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3342, file: !34, line: 110, baseType: !2050, size: 64, offset: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3342, file: !34, line: 111, baseType: !354, size: 32, offset: 192)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !3342, file: !34, line: 112, baseType: !1320, size: 32, offset: 224)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !1808, file: !6, line: 359, baseType: !3351, size: 64, offset: 12544)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!3354, !2050, !1845}
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !1808, file: !6, line: 364, baseType: !1842, size: 64, offset: 12608)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !1808, file: !6, line: 367, baseType: !1842, size: 64, offset: 12672)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !1808, file: !6, line: 373, baseType: !3359, size: 64, offset: 12736)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{null, !1845, !2436, !2436}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !1808, file: !6, line: 376, baseType: !1842, size: 64, offset: 12800)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !1808, file: !6, line: 385, baseType: !3364, size: 64, offset: 12864)
!3364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3365, size: 64)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{null, !1845, !3367, !2436, !3368}
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!3368 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !3369)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{!354, !354, !1226}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !1808, file: !6, line: 391, baseType: !3373, size: 64, offset: 12928)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{null, !1845, !3376, !3382, !1226, !3386}
!3376 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !3377)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 64)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!3380, !1545, !3381, !354}
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!3381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2436)
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !3383)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!354, !1226, !354, !354}
!3386 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !1808, file: !6, line: 400, baseType: !3388, size: 64, offset: 12992)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{null, !1845, !3368}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !1808, file: !6, line: 415, baseType: !3392, size: 64, offset: 13056)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{null, !1845, !3395, !3368, !3382, !1226, !3386}
!3395 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !3396)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!3380, !1226, !354}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !1808, file: !6, line: 425, baseType: !3400, size: 64, offset: 13120)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{null, !1845, !3395, !3382, !1226, !3386}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !1808, file: !6, line: 435, baseType: !3404, size: 64, offset: 13184)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{null, !1845, !3368, !3395, !1226}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !1808, file: !6, line: 444, baseType: !3408, size: 64, offset: 13248)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DISubroutineType(types: !3410)
!3410 = !{null, !1845, !3395, !1226}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !1808, file: !6, line: 455, baseType: !3412, size: 64, offset: 13312)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DISubroutineType(types: !3414)
!3414 = !{null, !1845, !3395, !3415, !1226}
!3415 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !3416)
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DISubroutineType(types: !3418)
!3418 = !{null, !1226, !354, !1320}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !1808, file: !6, line: 464, baseType: !3420, size: 64, offset: 13376)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DISubroutineType(types: !3422)
!3422 = !{null, !1845, !3423, !3426, !1226}
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{null, !1226, !354, !1226}
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!2436, !1226, !354}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1808, file: !6, line: 470, baseType: !1842, size: 64, offset: 13440)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !1603, file: !1604, line: 67, baseType: !1807, size: 64, offset: 384)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1603, file: !1604, line: 68, baseType: !3432, size: 64, offset: 448)
!3432 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !3433, line: 48, baseType: !3050)
!3433 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !1603, file: !1604, line: 69, baseType: !3435, size: 64, offset: 512)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !1603, file: !1604, line: 70, baseType: !354, size: 32, offset: 576)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !1603, file: !1604, line: 71, baseType: !3435, size: 64, offset: 640)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !1603, file: !1604, line: 72, baseType: !354, size: 32, offset: 704)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1603, file: !1604, line: 75, baseType: !1266, size: 16, offset: 736)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1603, file: !1604, line: 76, baseType: !1266, size: 16, offset: 752)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1603, file: !1604, line: 79, baseType: !2050, size: 64, offset: 768)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !1603, file: !1604, line: 82, baseType: !354, size: 32, offset: 832)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1386, file: !1385, line: 95, baseType: !1758, size: 1600, offset: 2240)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !1386, file: !1385, line: 95, baseType: !1758, size: 1600, offset: 3840)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !1386, file: !1385, line: 95, baseType: !1758, size: 1600, offset: 5440)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !1386, file: !1385, line: 98, baseType: !1758, size: 1600, offset: 7040)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !1386, file: !1385, line: 98, baseType: !1758, size: 1600, offset: 8640)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1386, file: !1385, line: 101, baseType: !354, size: 32, offset: 10240)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !1386, file: !1385, line: 101, baseType: !354, size: 32, offset: 10272)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !1386, file: !1385, line: 101, baseType: !354, size: 32, offset: 10304)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !1386, file: !1385, line: 101, baseType: !354, size: 32, offset: 10336)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !1386, file: !1385, line: 104, baseType: !354, size: 32, offset: 10368)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1386, file: !1385, line: 104, baseType: !354, size: 32, offset: 10400)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !1386, file: !1385, line: 111, baseType: !354, size: 32, offset: 10432)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1386, file: !1385, line: 114, baseType: !1575, size: 96, offset: 10464)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1386, file: !1385, line: 115, baseType: !1575, size: 96, offset: 10560)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1386, file: !1385, line: 116, baseType: !1575, size: 96, offset: 10656)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !1386, file: !1385, line: 118, baseType: !354, size: 32, offset: 10752)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1386, file: !1385, line: 119, baseType: !1266, size: 16, offset: 10784)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1386, file: !1385, line: 119, baseType: !1266, size: 16, offset: 10800)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1386, file: !1385, line: 120, baseType: !1320, size: 32, offset: 10816)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1386, file: !1385, line: 121, baseType: !354, size: 32, offset: 10848)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !1386, file: !1385, line: 124, baseType: !1253, size: 8, offset: 10880)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1386, file: !1385, line: 124, baseType: !1253, size: 8, offset: 10888)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !1386, file: !1385, line: 126, baseType: !1253, size: 8, offset: 10896)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !1386, file: !1385, line: 126, baseType: !1253, size: 8, offset: 10904)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !1386, file: !1385, line: 127, baseType: !1253, size: 8, offset: 10912)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1386, file: !1385, line: 128, baseType: !1253, size: 8, offset: 10920)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1386, file: !1385, line: 130, baseType: !1266, size: 16, offset: 10928)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !1386, file: !1385, line: 132, baseType: !3471, size: 64, offset: 10944)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !181, line: 233, size: 3584, elements: !3473)
!3473 = !{!3474, !3475, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !3472, file: !181, line: 234, baseType: !1292, size: 128)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !3472, file: !181, line: 235, baseType: !3476, size: 64, offset: 128)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !181, line: 69, baseType: !1572)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !3472, file: !181, line: 237, baseType: !2436, size: 8, offset: 192)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3472, file: !181, line: 237, baseType: !2436, size: 8, offset: 200)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !3472, file: !181, line: 237, baseType: !2436, size: 8, offset: 208)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !3472, file: !181, line: 237, baseType: !2436, size: 8, offset: 216)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !3472, file: !181, line: 237, baseType: !2436, size: 8, offset: 224)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !3472, file: !181, line: 237, baseType: !2436, size: 8, offset: 232)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !3472, file: !181, line: 238, baseType: !2436, size: 8, offset: 240)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3472, file: !181, line: 238, baseType: !2436, size: 8, offset: 248)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3472, file: !181, line: 241, baseType: !1757, size: 1600, offset: 256)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3472, file: !181, line: 242, baseType: !1757, size: 1600, offset: 1856)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !3472, file: !181, line: 243, baseType: !1382, size: 64, offset: 3456)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !3472, file: !181, line: 244, baseType: !1381, size: 64, offset: 3520)
!3490 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !140, line: 79, baseType: !139)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !140, line: 158, baseType: !3492)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{null, !1226}
!3495 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !140, line: 159, baseType: !3496)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!1226, !1226}
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExplodeModifierData", file: !286, line: 715, baseType: !3501)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExplodeModifierData", file: !286, line: 708, size: 1536, elements: !3502)
!3502 = !{!3503, !3517, !3518, !3519, !3520, !3521}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3501, file: !286, line: 709, baseType: !3504, size: 896)
!3504 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !286, line: 110, baseType: !3505)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !286, line: 99, size: 896, elements: !3506)
!3506 = !{!3507, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3505, file: !286, line: 100, baseType: !3508, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3505, file: !286, line: 100, baseType: !3508, size: 64, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3505, file: !286, line: 102, baseType: !354, size: 32, offset: 128)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3505, file: !286, line: 102, baseType: !354, size: 32, offset: 160)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !3505, file: !286, line: 103, baseType: !354, size: 32, offset: 192)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3505, file: !286, line: 103, baseType: !354, size: 32, offset: 224)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3505, file: !286, line: 104, baseType: !1282, size: 512, offset: 256)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3505, file: !286, line: 107, baseType: !2371, size: 64, offset: 768)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3505, file: !286, line: 109, baseType: !1381, size: 64, offset: 832)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "facepa", scope: !3501, file: !286, line: 711, baseType: !1972, size: 64, offset: 896)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3501, file: !286, line: 712, baseType: !1266, size: 16, offset: 960)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !3501, file: !286, line: 712, baseType: !1266, size: 16, offset: 976)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "protect", scope: !3501, file: !286, line: 713, baseType: !1320, size: 32, offset: 992)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !3501, file: !286, line: 714, baseType: !1282, size: 512, offset: 1024)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClothModifierData", file: !286, line: 566, baseType: !3524)
!3524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !286, line: 557, size: 1344, elements: !3525)
!3525 = !{!3526, !3527, !3528, !3531, !3577, !3595, !3596}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3524, file: !286, line: 558, baseType: !3504, size: 896)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3524, file: !286, line: 560, baseType: !2371, size: 64, offset: 896)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !3524, file: !286, line: 561, baseType: !3529, size: 64, offset: 960)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !286, line: 561, flags: DIFlagFwdDecl)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !3524, file: !286, line: 562, baseType: !3532, size: 64, offset: 1024)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 64)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !3294, line: 47, size: 1344, elements: !3534)
!3534 = !{!3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !3533, file: !3294, line: 48, baseType: !1825, size: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !3533, file: !3294, line: 49, baseType: !1320, size: 32, offset: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "Cdis", scope: !3533, file: !3294, line: 50, baseType: !1320, size: 32, offset: 96)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "Cvi", scope: !3533, file: !3294, line: 51, baseType: !1320, size: 32, offset: 128)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3533, file: !3294, line: 52, baseType: !1575, size: 96, offset: 160)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !3533, file: !3294, line: 53, baseType: !1320, size: 32, offset: 256)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !3533, file: !3294, line: 54, baseType: !1320, size: 32, offset: 288)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "structural", scope: !3533, file: !3294, line: 55, baseType: !1320, size: 32, offset: 320)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !3533, file: !3294, line: 56, baseType: !1320, size: 32, offset: 352)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "bending", scope: !3533, file: !3294, line: 57, baseType: !1320, size: 32, offset: 384)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "max_bend", scope: !3533, file: !3294, line: 58, baseType: !1320, size: 32, offset: 416)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "max_struct", scope: !3533, file: !3294, line: 59, baseType: !1320, size: 32, offset: 448)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "max_shear", scope: !3533, file: !3294, line: 60, baseType: !1320, size: 32, offset: 480)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "max_sewing", scope: !3533, file: !3294, line: 61, baseType: !1320, size: 32, offset: 512)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "avg_spring_len", scope: !3533, file: !3294, line: 62, baseType: !1320, size: 32, offset: 544)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "timescale", scope: !3533, file: !3294, line: 63, baseType: !1320, size: 32, offset: 576)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !3533, file: !3294, line: 64, baseType: !1320, size: 32, offset: 608)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "eff_force_scale", scope: !3533, file: !3294, line: 65, baseType: !1320, size: 32, offset: 640)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "eff_wind_scale", scope: !3533, file: !3294, line: 66, baseType: !1320, size: 32, offset: 672)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "sim_time_old", scope: !3533, file: !3294, line: 67, baseType: !1320, size: 32, offset: 704)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !3533, file: !3294, line: 68, baseType: !1320, size: 32, offset: 736)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !3533, file: !3294, line: 69, baseType: !1320, size: 32, offset: 768)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !3533, file: !3294, line: 70, baseType: !1320, size: 32, offset: 800)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "velocity_smooth", scope: !3533, file: !3294, line: 71, baseType: !1320, size: 32, offset: 832)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "collider_friction", scope: !3533, file: !3294, line: 72, baseType: !1320, size: 32, offset: 864)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "vel_damping", scope: !3533, file: !3294, line: 73, baseType: !1320, size: 32, offset: 896)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_min", scope: !3533, file: !3294, line: 74, baseType: !1320, size: 32, offset: 928)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_max", scope: !3533, file: !3294, line: 75, baseType: !1320, size: 32, offset: 960)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "stepsPerFrame", scope: !3533, file: !3294, line: 77, baseType: !354, size: 32, offset: 992)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3533, file: !3294, line: 78, baseType: !354, size: 32, offset: 1024)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "preroll", scope: !3533, file: !3294, line: 79, baseType: !354, size: 32, offset: 1056)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "maxspringlen", scope: !3533, file: !3294, line: 80, baseType: !354, size: 32, offset: 1088)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "solver_type", scope: !3533, file: !3294, line: 81, baseType: !1266, size: 16, offset: 1120)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_bend", scope: !3533, file: !3294, line: 82, baseType: !1266, size: 16, offset: 1136)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_mass", scope: !3533, file: !3294, line: 83, baseType: !1266, size: 16, offset: 1152)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_struct", scope: !3533, file: !3294, line: 84, baseType: !1266, size: 16, offset: 1168)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_shrink", scope: !3533, file: !3294, line: 85, baseType: !1266, size: 16, offset: 1184)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "shapekey_rest", scope: !3533, file: !3294, line: 86, baseType: !1266, size: 16, offset: 1200)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "presets", scope: !3533, file: !3294, line: 87, baseType: !1266, size: 16, offset: 1216)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3533, file: !3294, line: 88, baseType: !1266, size: 16, offset: 1232)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3533, file: !3294, line: 89, baseType: !1367, size: 32, offset: 1248)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !3533, file: !3294, line: 91, baseType: !3288, size: 64, offset: 1280)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !3524, file: !286, line: 563, baseType: !3578, size: 64, offset: 1088)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !3294, line: 95, size: 448, elements: !3580)
!3580 = !{!3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "collision_list", scope: !3579, file: !3294, line: 96, baseType: !1825, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "epsilon", scope: !3579, file: !3294, line: 97, baseType: !1320, size: 32, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "self_friction", scope: !3579, file: !3294, line: 98, baseType: !1320, size: 32, offset: 96)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !3579, file: !3294, line: 99, baseType: !1320, size: 32, offset: 128)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "selfepsilon", scope: !3579, file: !3294, line: 100, baseType: !1320, size: 32, offset: 160)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "repel_force", scope: !3579, file: !3294, line: 101, baseType: !1320, size: 32, offset: 192)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "distance_repel", scope: !3579, file: !3294, line: 101, baseType: !1320, size: 32, offset: 224)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3579, file: !3294, line: 102, baseType: !354, size: 32, offset: 256)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "self_loop_count", scope: !3579, file: !3294, line: 103, baseType: !1266, size: 16, offset: 288)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "loop_count", scope: !3579, file: !3294, line: 104, baseType: !1266, size: 16, offset: 304)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3579, file: !3294, line: 105, baseType: !3292, size: 64, offset: 320)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_selfcol", scope: !3579, file: !3294, line: 106, baseType: !1266, size: 16, offset: 384)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3579, file: !3294, line: 107, baseType: !1266, size: 16, offset: 400)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3579, file: !3294, line: 108, baseType: !354, size: 32, offset: 416)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !3524, file: !286, line: 564, baseType: !3255, size: 64, offset: 1152)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3524, file: !286, line: 565, baseType: !1294, size: 128, offset: 1216)
!3597 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3598, line: 46, baseType: !3054)
!3598 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!3599 = !{!3600, !3853, !0, !3856, !3859, !3861, !3863}
!3600 = !DIGlobalVariableExpression(var: !3601, expr: !DIExpression())
!3601 = distinct !DIGlobalVariable(name: "vgroup_sort_type", scope: !3602, file: !3, line: 4403, type: !3844, isLocal: true, isDefinition: true)
!3602 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_sort", scope: !3, file: !3, line: 4401, type: !3603, scopeLine: 4402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{null, !3605}
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !3607, line: 568, baseType: !3608)
!3607 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !3607, line: 508, size: 1536, elements: !3609)
!3609 = !{!3610, !3611, !3612, !3613, !3614, !3769, !3773, !3779, !3783, !3784, !3788, !3789, !3790, !3791, !3795, !3796, !3811, !3812, !3816, !3842}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3608, file: !3607, line: 509, baseType: !1710, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3608, file: !3607, line: 510, baseType: !1710, size: 64, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3608, file: !3607, line: 511, baseType: !1710, size: 64, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3608, file: !3607, line: 512, baseType: !1710, size: 64, offset: 192)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3608, file: !3607, line: 518, baseType: !3615, size: 64, offset: 256)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!354, !3618, !3620}
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !188, line: 44, flags: DIFlagFwdDecl)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !345, line: 328, size: 1344, elements: !3622)
!3622 = !{!3623, !3624, !3625, !3626, !3627, !3629, !3630, !3631, !3643, !3762, !3763, !3764, !3767, !3768}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3621, file: !345, line: 329, baseType: !3620, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3621, file: !345, line: 329, baseType: !3620, size: 64, offset: 64)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3621, file: !345, line: 332, baseType: !1282, size: 512, offset: 128)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3621, file: !345, line: 333, baseType: !1271, size: 64, offset: 640)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3621, file: !345, line: 336, baseType: !3628, size: 64, offset: 704)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3621, file: !345, line: 337, baseType: !1226, size: 64, offset: 768)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3621, file: !345, line: 338, baseType: !1226, size: 64, offset: 832)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3621, file: !345, line: 340, baseType: !3632, size: 64, offset: 896)
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !188, line: 55, size: 192, elements: !3634)
!3634 = !{!3635, !3639, !3642}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3633, file: !188, line: 58, baseType: !3636, size: 64)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3633, file: !188, line: 56, size: 64, elements: !3637)
!3637 = !{!3638}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3636, file: !188, line: 57, baseType: !1226, size: 64)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3633, file: !188, line: 60, baseType: !3640, size: 64, offset: 64)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !188, line: 41, flags: DIFlagFwdDecl)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3633, file: !188, line: 61, baseType: !1226, size: 64, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3621, file: !345, line: 341, baseType: !3644, size: 64, offset: 960)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !345, line: 106, size: 320, elements: !3646)
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3645, file: !345, line: 107, baseType: !1292, size: 128)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3645, file: !345, line: 108, baseType: !354, size: 32, offset: 128)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3645, file: !345, line: 109, baseType: !354, size: 32, offset: 160)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3645, file: !345, line: 110, baseType: !354, size: 32, offset: 192)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3645, file: !345, line: 110, baseType: !354, size: 32, offset: 224)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3645, file: !345, line: 111, baseType: !3653, size: 64, offset: 256)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !3607, line: 490, size: 768, elements: !3655)
!3655 = !{!3656, !3657, !3658, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3654, file: !3607, line: 491, baseType: !3653, size: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3654, file: !3607, line: 491, baseType: !3653, size: 64, offset: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !3654, file: !3607, line: 493, baseType: !3659, size: 64, offset: 128)
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !345, line: 169, size: 2048, elements: !3661)
!3661 = !{!3662, !3663, !3664, !3665, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3728, !3731, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3660, file: !345, line: 170, baseType: !3659, size: 64)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3660, file: !345, line: 170, baseType: !3659, size: 64, offset: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !3660, file: !345, line: 172, baseType: !1226, size: 64, offset: 128)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3660, file: !345, line: 174, baseType: !3666, size: 64, offset: 192)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !3668, line: 41, flags: DIFlagFwdDecl)
!3668 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !3660, file: !345, line: 175, baseType: !3666, size: 64, offset: 256)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !3660, file: !345, line: 176, baseType: !1282, size: 512, offset: 320)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !3660, file: !345, line: 178, baseType: !1266, size: 16, offset: 832)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !3660, file: !345, line: 178, baseType: !1266, size: 16, offset: 848)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3660, file: !345, line: 178, baseType: !1266, size: 16, offset: 864)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3660, file: !345, line: 178, baseType: !1266, size: 16, offset: 880)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !3660, file: !345, line: 179, baseType: !1266, size: 16, offset: 896)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !3660, file: !345, line: 180, baseType: !1266, size: 16, offset: 912)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3660, file: !345, line: 181, baseType: !1266, size: 16, offset: 928)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3660, file: !345, line: 182, baseType: !1266, size: 16, offset: 944)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !3660, file: !345, line: 183, baseType: !1266, size: 16, offset: 960)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !3660, file: !345, line: 184, baseType: !1266, size: 16, offset: 976)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !3660, file: !345, line: 185, baseType: !1266, size: 16, offset: 992)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !3660, file: !345, line: 186, baseType: !1266, size: 16, offset: 1008)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3660, file: !345, line: 188, baseType: !354, size: 32, offset: 1024)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !3660, file: !345, line: 190, baseType: !1266, size: 16, offset: 1056)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !3660, file: !345, line: 191, baseType: !1266, size: 16, offset: 1072)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !3660, file: !345, line: 194, baseType: !3687, size: 64, offset: 1088)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !3607, line: 421, size: 960, elements: !3689)
!3689 = !{!3690, !3691, !3692, !3693, !3694, !3695, !3696, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3724, !3725, !3726, !3727}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3688, file: !3607, line: 422, baseType: !3687, size: 64)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3688, file: !3607, line: 422, baseType: !3687, size: 64, offset: 64)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3688, file: !3607, line: 424, baseType: !1266, size: 16, offset: 128)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3688, file: !3607, line: 425, baseType: !1266, size: 16, offset: 144)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3688, file: !3607, line: 426, baseType: !354, size: 32, offset: 160)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3688, file: !3607, line: 426, baseType: !354, size: 32, offset: 192)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3688, file: !3607, line: 427, baseType: !3697, size: 64, offset: 224)
!3697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 64, elements: !1471)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !3688, file: !3607, line: 428, baseType: !2651, size: 48, offset: 288)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !3688, file: !3607, line: 431, baseType: !1253, size: 8, offset: 336)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3688, file: !3607, line: 432, baseType: !1253, size: 8, offset: 344)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !3688, file: !3607, line: 435, baseType: !1266, size: 16, offset: 352)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !3688, file: !3607, line: 436, baseType: !1266, size: 16, offset: 368)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !3688, file: !3607, line: 437, baseType: !354, size: 32, offset: 384)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !3688, file: !3607, line: 437, baseType: !354, size: 32, offset: 416)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !3688, file: !3607, line: 438, baseType: !3706, size: 64, offset: 448)
!3706 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !3688, file: !3607, line: 439, baseType: !354, size: 32, offset: 512)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !3688, file: !3607, line: 439, baseType: !354, size: 32, offset: 544)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3688, file: !3607, line: 442, baseType: !1266, size: 16, offset: 576)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !3688, file: !3607, line: 442, baseType: !1266, size: 16, offset: 592)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3688, file: !3607, line: 442, baseType: !1266, size: 16, offset: 608)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !3688, file: !3607, line: 442, baseType: !1266, size: 16, offset: 624)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !3688, file: !3607, line: 443, baseType: !1266, size: 16, offset: 640)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !3688, file: !3607, line: 446, baseType: !1266, size: 16, offset: 656)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !3688, file: !3607, line: 449, baseType: !1710, size: 64, offset: 704)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !3688, file: !3607, line: 452, baseType: !3717, size: 64, offset: 768)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !3607, line: 463, size: 128, elements: !3719)
!3719 = !{!3720, !3721, !3722, !3723}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !3718, file: !3607, line: 464, baseType: !354, size: 32)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !3718, file: !3607, line: 465, baseType: !1320, size: 32, offset: 32)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !3718, file: !3607, line: 466, baseType: !1320, size: 32, offset: 64)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !3718, file: !3607, line: 467, baseType: !1320, size: 32, offset: 96)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3688, file: !3607, line: 455, baseType: !1266, size: 16, offset: 832)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !3688, file: !3607, line: 456, baseType: !1266, size: 16, offset: 848)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3688, file: !3607, line: 457, baseType: !354, size: 32, offset: 864)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3688, file: !3607, line: 458, baseType: !1226, size: 64, offset: 896)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !3660, file: !345, line: 196, baseType: !3729, size: 64, offset: 1152)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !345, line: 55, flags: DIFlagFwdDecl)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !3660, file: !345, line: 198, baseType: !3732, size: 64, offset: 1216)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !3607, line: 398, size: 448, elements: !3734)
!3734 = !{!3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3733, file: !3607, line: 399, baseType: !3732, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3733, file: !3607, line: 399, baseType: !3732, size: 64, offset: 64)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3733, file: !3607, line: 400, baseType: !354, size: 32, offset: 128)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3733, file: !3607, line: 401, baseType: !354, size: 32, offset: 160)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3733, file: !3607, line: 402, baseType: !354, size: 32, offset: 192)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3733, file: !3607, line: 403, baseType: !354, size: 32, offset: 224)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3733, file: !3607, line: 404, baseType: !354, size: 32, offset: 256)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3733, file: !3607, line: 405, baseType: !354, size: 32, offset: 288)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3733, file: !3607, line: 407, baseType: !1226, size: 64, offset: 320)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3733, file: !3607, line: 414, baseType: !1226, size: 64, offset: 384)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !3660, file: !345, line: 200, baseType: !354, size: 32, offset: 1280)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !3660, file: !345, line: 200, baseType: !354, size: 32, offset: 1312)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !3660, file: !345, line: 201, baseType: !1226, size: 64, offset: 1344)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3660, file: !345, line: 203, baseType: !1292, size: 128, offset: 1408)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3660, file: !345, line: 204, baseType: !1292, size: 128, offset: 1536)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !3660, file: !345, line: 205, baseType: !1292, size: 128, offset: 1664)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !3660, file: !345, line: 207, baseType: !1292, size: 128, offset: 1792)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !3660, file: !345, line: 208, baseType: !1292, size: 128, offset: 1920)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !3654, file: !3607, line: 495, baseType: !3706, size: 64, offset: 192)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3654, file: !3607, line: 496, baseType: !354, size: 32, offset: 256)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3654, file: !3607, line: 497, baseType: !1226, size: 64, offset: 320)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3654, file: !3607, line: 499, baseType: !3706, size: 64, offset: 384)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3654, file: !3607, line: 500, baseType: !3706, size: 64, offset: 448)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !3654, file: !3607, line: 502, baseType: !3706, size: 64, offset: 512)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !3654, file: !3607, line: 503, baseType: !3706, size: 64, offset: 576)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3654, file: !3607, line: 504, baseType: !3706, size: 64, offset: 640)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !3654, file: !3607, line: 505, baseType: !354, size: 32, offset: 704)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3621, file: !345, line: 343, baseType: !1292, size: 128, offset: 1024)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3621, file: !345, line: 344, baseType: !3620, size: 64, offset: 1152)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3621, file: !345, line: 345, baseType: !3765, size: 64, offset: 1216)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !345, line: 61, flags: DIFlagFwdDecl)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3621, file: !345, line: 346, baseType: !1266, size: 16, offset: 1280)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3621, file: !345, line: 346, baseType: !1578, size: 48, offset: 1296)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3608, file: !3607, line: 524, baseType: !3770, size: 64, offset: 320)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{!2436, !3618, !3620}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3608, file: !3607, line: 530, baseType: !3774, size: 64, offset: 384)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!354, !3618, !3620, !3777}
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3688)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3608, file: !3607, line: 531, baseType: !3780, size: 64, offset: 448)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{null, !3618, !3620}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3608, file: !3607, line: 532, baseType: !3774, size: 64, offset: 512)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3608, file: !3607, line: 536, baseType: !3785, size: 64, offset: 576)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!354, !3618}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3608, file: !3607, line: 539, baseType: !3780, size: 64, offset: 640)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3608, file: !3607, line: 542, baseType: !3640, size: 64, offset: 704)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3608, file: !3607, line: 545, baseType: !1276, size: 64, offset: 768)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3608, file: !3607, line: 549, baseType: !3792, size: 64, offset: 832)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !188, line: 333, baseType: !3794)
!3794 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !188, line: 39, flags: DIFlagFwdDecl)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3608, file: !3607, line: 552, baseType: !1292, size: 128, offset: 896)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3608, file: !3607, line: 555, baseType: !3797, size: 64, offset: 1024)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !345, line: 281, size: 1088, elements: !3799)
!3799 = !{!3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3798, file: !345, line: 282, baseType: !3797, size: 64)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3798, file: !345, line: 282, baseType: !3797, size: 64, offset: 64)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3798, file: !345, line: 284, baseType: !1292, size: 128, offset: 128)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3798, file: !345, line: 285, baseType: !1292, size: 128, offset: 256)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3798, file: !345, line: 287, baseType: !1282, size: 512, offset: 384)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3798, file: !345, line: 288, baseType: !1266, size: 16, offset: 896)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3798, file: !345, line: 289, baseType: !1266, size: 16, offset: 912)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3798, file: !345, line: 291, baseType: !1266, size: 16, offset: 928)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3798, file: !345, line: 292, baseType: !1266, size: 16, offset: 944)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3798, file: !345, line: 295, baseType: !3785, size: 64, offset: 960)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3798, file: !345, line: 296, baseType: !1226, size: 64, offset: 1024)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3608, file: !3607, line: 559, baseType: !1226, size: 64, offset: 1088)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3608, file: !3607, line: 560, baseType: !3813, size: 64, offset: 1152)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!354, !3618, !3628}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3608, file: !3607, line: 563, baseType: !3817, size: 256, offset: 1216)
!3817 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !188, line: 436, baseType: !3818)
!3818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !188, line: 430, size: 256, elements: !3819)
!3819 = !{!3820, !3821, !3824, !3840}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3818, file: !188, line: 431, baseType: !1226, size: 64)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3818, file: !188, line: 432, baseType: !3822, size: 64, offset: 64)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !188, line: 417, baseType: !3641)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3818, file: !188, line: 433, baseType: !3825, size: 64, offset: 128)
!3825 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !188, line: 408, baseType: !3826)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!354, !3618, !3632, !3829, !3831}
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !188, line: 38, flags: DIFlagFwdDecl)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !188, line: 348, baseType: !3833)
!3833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !188, line: 337, size: 256, elements: !3834)
!3834 = !{!3835, !3836, !3837, !3838, !3839}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3833, file: !188, line: 339, baseType: !1226, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3833, file: !188, line: 342, baseType: !3829, size: 64, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !3833, file: !188, line: 345, baseType: !354, size: 32, offset: 128)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !3833, file: !188, line: 347, baseType: !354, size: 32, offset: 160)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !3833, file: !188, line: 347, baseType: !354, size: 32, offset: 192)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3818, file: !188, line: 434, baseType: !3841, size: 64, offset: 192)
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !188, line: 409, baseType: !3492)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3608, file: !3607, line: 566, baseType: !1266, size: 16, offset: 1472)
!3843 = !{}
!3844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3845, size: 960, elements: !1576)
!3845 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !188, line: 308, baseType: !3846)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !188, line: 302, size: 320, elements: !3847)
!3847 = !{!3848, !3849, !3850, !3851, !3852}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3846, file: !188, line: 303, baseType: !354, size: 32)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3846, file: !188, line: 304, baseType: !1710, size: 64, offset: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3846, file: !188, line: 305, baseType: !354, size: 32, offset: 128)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3846, file: !188, line: 306, baseType: !1710, size: 64, offset: 192)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3846, file: !188, line: 307, baseType: !1710, size: 64, offset: 256)
!3853 = !DIGlobalVariableExpression(var: !3854, expr: !DIExpression())
!3854 = distinct !DIGlobalVariable(name: "vgroup_slot_move", scope: !3855, file: !3, line: 4464, type: !3844, isLocal: true, isDefinition: true)
!3855 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_move", scope: !3, file: !3, line: 4462, type: !3603, scopeLine: 4463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!3856 = !DIGlobalVariableExpression(var: !3857, expr: !DIExpression())
!3857 = distinct !DIGlobalVariable(name: "vgroup_lock_actions", scope: !2, file: !3, line: 2096, type: !3858, isLocal: true, isDefinition: true)
!3858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3845, size: 1600, elements: !2482)
!3859 = !DIGlobalVariableExpression(var: !3860, expr: !DIExpression())
!3860 = distinct !DIGlobalVariable(name: "WT_vertex_group_mode_item", scope: !2, file: !3, line: 767, type: !3844, isLocal: true, isDefinition: true)
!3861 = !DIGlobalVariableExpression(var: !3862, expr: !DIExpression())
!3862 = distinct !DIGlobalVariable(name: "WT_method_item", scope: !2, file: !3, line: 775, type: !3858, isLocal: true, isDefinition: true)
!3863 = !DIGlobalVariableExpression(var: !3864, expr: !DIExpression())
!3864 = distinct !DIGlobalVariable(name: "WT_replace_mode_item", scope: !2, file: !3, line: 787, type: !3844, isLocal: true, isDefinition: true)
!3865 = !{i32 7, !"Dwarf Version", i32 4}
!3866 = !{i32 2, !"Debug Info Version", i32 3}
!3867 = !{i32 1, !"wchar_size", i32 4}
!3868 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3869 = distinct !DISubprogram(name: "ED_vgroup_sync_from_pose", scope: !3, file: !3, line: 113, type: !3870, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!2436, !3872}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !34, line: 295, baseType: !2051)
!3874 = !DILocalVariable(name: "ob", arg: 1, scope: !3869, file: !3, line: 113, type: !3872)
!3875 = !DILocation(line: 113, column: 39, scope: !3869)
!3876 = !DILocalVariable(name: "armobj", scope: !3869, file: !3, line: 115, type: !3872)
!3877 = !DILocation(line: 115, column: 10, scope: !3869)
!3878 = !DILocation(line: 115, column: 48, scope: !3869)
!3879 = !DILocation(line: 115, column: 19, scope: !3869)
!3880 = !DILocation(line: 116, column: 6, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 116, column: 6)
!3882 = !DILocation(line: 116, column: 13, scope: !3881)
!3883 = !DILocation(line: 116, column: 17, scope: !3881)
!3884 = !DILocation(line: 116, column: 25, scope: !3881)
!3885 = !DILocation(line: 116, column: 30, scope: !3881)
!3886 = !DILocation(line: 116, column: 6, scope: !3869)
!3887 = !DILocalVariable(name: "arm", scope: !3888, file: !3, line: 117, type: !3889)
!3888 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 116, column: 47)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !3891, line: 78, size: 2048, elements: !3892)
!3891 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3892 = !{!3893, !3894, !3895, !3896, !3897, !3898, !3933, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3890, file: !3891, line: 79, baseType: !1233, size: 960)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3890, file: !3891, line: 80, baseType: !1303, size: 64, offset: 960)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !3890, file: !3891, line: 82, baseType: !1292, size: 128, offset: 1024)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !3890, file: !3891, line: 83, baseType: !1292, size: 128, offset: 1152)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !3890, file: !3891, line: 84, baseType: !3327, size: 64, offset: 1280)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !3890, file: !3891, line: 92, baseType: !3899, size: 64, offset: 1344)
!3899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3900, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !3891, line: 76, baseType: !3901)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !3891, line: 48, size: 2624, elements: !3902)
!3902 = !{!3903, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3901, file: !3891, line: 49, baseType: !3904, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3901, file: !3891, line: 49, baseType: !3904, size: 64, offset: 64)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3901, file: !3891, line: 50, baseType: !1271, size: 64, offset: 128)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3901, file: !3891, line: 51, baseType: !3904, size: 64, offset: 192)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !3901, file: !3891, line: 52, baseType: !1292, size: 128, offset: 256)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3901, file: !3891, line: 53, baseType: !1282, size: 512, offset: 384)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !3901, file: !3891, line: 55, baseType: !1320, size: 32, offset: 896)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3901, file: !3891, line: 56, baseType: !1575, size: 96, offset: 928)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3901, file: !3891, line: 57, baseType: !1575, size: 96, offset: 1024)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !3901, file: !3891, line: 58, baseType: !3111, size: 288, offset: 1120)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3901, file: !3891, line: 60, baseType: !354, size: 32, offset: 1408)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !3901, file: !3891, line: 62, baseType: !1575, size: 96, offset: 1440)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !3901, file: !3891, line: 63, baseType: !1575, size: 96, offset: 1536)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !3901, file: !3891, line: 64, baseType: !2172, size: 512, offset: 1632)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !3901, file: !3891, line: 65, baseType: !1320, size: 32, offset: 2144)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3901, file: !3891, line: 67, baseType: !1320, size: 32, offset: 2176)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3901, file: !3891, line: 67, baseType: !1320, size: 32, offset: 2208)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !3901, file: !3891, line: 68, baseType: !1320, size: 32, offset: 2240)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3901, file: !3891, line: 68, baseType: !1320, size: 32, offset: 2272)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !3901, file: !3891, line: 68, baseType: !1320, size: 32, offset: 2304)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !3901, file: !3891, line: 69, baseType: !1320, size: 32, offset: 2336)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !3901, file: !3891, line: 69, baseType: !1320, size: 32, offset: 2368)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !3901, file: !3891, line: 70, baseType: !1320, size: 32, offset: 2400)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !3901, file: !3891, line: 70, baseType: !1320, size: 32, offset: 2432)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3901, file: !3891, line: 72, baseType: !1575, size: 96, offset: 2464)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3901, file: !3891, line: 73, baseType: !354, size: 32, offset: 2560)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !3901, file: !3891, line: 74, baseType: !1266, size: 16, offset: 2592)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3901, file: !3891, line: 75, baseType: !3932, size: 16, offset: 2608)
!3932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 16, elements: !2406)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !3890, file: !3891, line: 93, baseType: !3934, size: 64, offset: 1408)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !3668, line: 57, flags: DIFlagFwdDecl)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !3890, file: !3891, line: 95, baseType: !1226, size: 64, offset: 1472)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3890, file: !3891, line: 97, baseType: !354, size: 32, offset: 1536)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !3890, file: !3891, line: 98, baseType: !354, size: 32, offset: 1568)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !3890, file: !3891, line: 99, baseType: !354, size: 32, offset: 1600)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3890, file: !3891, line: 100, baseType: !354, size: 32, offset: 1632)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !3890, file: !3891, line: 101, baseType: !1266, size: 16, offset: 1664)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !3890, file: !3891, line: 102, baseType: !1266, size: 16, offset: 1680)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !3890, file: !3891, line: 104, baseType: !7, size: 32, offset: 1696)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !3890, file: !3891, line: 105, baseType: !7, size: 32, offset: 1728)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !3890, file: !3891, line: 105, baseType: !7, size: 32, offset: 1760)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !3890, file: !3891, line: 108, baseType: !1266, size: 16, offset: 1792)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !3890, file: !3891, line: 108, baseType: !1266, size: 16, offset: 1808)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !3890, file: !3891, line: 109, baseType: !1266, size: 16, offset: 1824)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !3890, file: !3891, line: 109, baseType: !1266, size: 16, offset: 1840)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !3890, file: !3891, line: 110, baseType: !354, size: 32, offset: 1856)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !3890, file: !3891, line: 110, baseType: !354, size: 32, offset: 1888)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !3890, file: !3891, line: 111, baseType: !354, size: 32, offset: 1920)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !3890, file: !3891, line: 111, baseType: !354, size: 32, offset: 1952)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !3890, file: !3891, line: 112, baseType: !354, size: 32, offset: 1984)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !3890, file: !3891, line: 112, baseType: !354, size: 32, offset: 2016)
!3956 = !DILocation(line: 117, column: 21, scope: !3888)
!3957 = !DILocation(line: 117, column: 27, scope: !3888)
!3958 = !DILocation(line: 117, column: 35, scope: !3888)
!3959 = !DILocation(line: 118, column: 7, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 118, column: 7)
!3961 = !DILocation(line: 118, column: 12, scope: !3960)
!3962 = !DILocation(line: 118, column: 7, scope: !3888)
!3963 = !DILocalVariable(name: "def_num", scope: !3964, file: !3, line: 119, type: !354)
!3964 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 118, column: 22)
!3965 = !DILocation(line: 119, column: 8, scope: !3964)
!3966 = !DILocation(line: 119, column: 38, scope: !3964)
!3967 = !DILocation(line: 119, column: 42, scope: !3964)
!3968 = !DILocation(line: 119, column: 47, scope: !3964)
!3969 = !DILocation(line: 119, column: 57, scope: !3964)
!3970 = !DILocation(line: 119, column: 18, scope: !3964)
!3971 = !DILocation(line: 120, column: 8, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 120, column: 8)
!3973 = !DILocation(line: 120, column: 16, scope: !3972)
!3974 = !DILocation(line: 120, column: 8, scope: !3964)
!3975 = !DILocation(line: 121, column: 18, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 120, column: 23)
!3977 = !DILocation(line: 121, column: 26, scope: !3976)
!3978 = !DILocation(line: 121, column: 5, scope: !3976)
!3979 = !DILocation(line: 121, column: 9, scope: !3976)
!3980 = !DILocation(line: 121, column: 16, scope: !3976)
!3981 = !DILocation(line: 122, column: 5, scope: !3976)
!3982 = !DILocation(line: 124, column: 3, scope: !3964)
!3983 = !DILocation(line: 125, column: 2, scope: !3888)
!3984 = !DILocation(line: 126, column: 2, scope: !3869)
!3985 = !DILocation(line: 127, column: 1, scope: !3869)
!3986 = distinct !DISubprogram(name: "ED_vgroup_object_is_edit_mode", scope: !3, file: !3, line: 129, type: !3870, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!3987 = !DILocalVariable(name: "ob", arg: 1, scope: !3986, file: !3, line: 129, type: !3872)
!3988 = !DILocation(line: 129, column: 44, scope: !3986)
!3989 = !DILocation(line: 131, column: 6, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 131, column: 6)
!3991 = !DILocation(line: 131, column: 10, scope: !3990)
!3992 = !DILocation(line: 131, column: 15, scope: !3990)
!3993 = !DILocation(line: 131, column: 6, scope: !3986)
!3994 = !DILocation(line: 132, column: 36, scope: !3990)
!3995 = !DILocation(line: 132, column: 11, scope: !3990)
!3996 = !DILocation(line: 132, column: 40, scope: !3990)
!3997 = !DILocation(line: 132, column: 10, scope: !3990)
!3998 = !DILocation(line: 132, column: 3, scope: !3990)
!3999 = !DILocation(line: 133, column: 11, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 133, column: 11)
!4001 = !DILocation(line: 133, column: 15, scope: !4000)
!4002 = !DILocation(line: 133, column: 20, scope: !4000)
!4003 = !DILocation(line: 133, column: 11, scope: !3990)
!4004 = !DILocation(line: 134, column: 23, scope: !4000)
!4005 = !DILocation(line: 134, column: 27, scope: !4000)
!4006 = !DILocation(line: 134, column: 12, scope: !4000)
!4007 = !DILocation(line: 134, column: 34, scope: !4000)
!4008 = !DILocation(line: 134, column: 43, scope: !4000)
!4009 = !DILocation(line: 134, column: 10, scope: !4000)
!4010 = !DILocation(line: 134, column: 3, scope: !4000)
!4011 = !DILocation(line: 136, column: 2, scope: !3986)
!4012 = !DILocation(line: 137, column: 1, scope: !3986)
!4013 = distinct !DISubprogram(name: "ED_vgroup_add_name", scope: !3, file: !3, line: 139, type: !4014, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!1373, !3872, !1710}
!4016 = !DILocalVariable(name: "ob", arg: 1, scope: !4013, file: !3, line: 139, type: !3872)
!4017 = !DILocation(line: 139, column: 42, scope: !4013)
!4018 = !DILocalVariable(name: "name", arg: 2, scope: !4013, file: !3, line: 139, type: !1710)
!4019 = !DILocation(line: 139, column: 58, scope: !4013)
!4020 = !DILocalVariable(name: "defgroup", scope: !4013, file: !3, line: 141, type: !1368)
!4021 = !DILocation(line: 141, column: 16, scope: !4013)
!4022 = !DILocation(line: 143, column: 7, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 143, column: 6)
!4024 = !DILocation(line: 143, column: 10, scope: !4023)
!4025 = !DILocation(line: 143, column: 14, scope: !4023)
!4026 = !DILocation(line: 143, column: 6, scope: !4013)
!4027 = !DILocation(line: 144, column: 3, scope: !4023)
!4028 = !DILocation(line: 146, column: 30, scope: !4013)
!4029 = !DILocation(line: 146, column: 34, scope: !4013)
!4030 = !DILocation(line: 146, column: 13, scope: !4013)
!4031 = !DILocation(line: 146, column: 11, scope: !4013)
!4032 = !DILocation(line: 148, column: 30, scope: !4013)
!4033 = !DILocation(line: 148, column: 34, scope: !4013)
!4034 = !DILocation(line: 148, column: 15, scope: !4013)
!4035 = !DILocation(line: 148, column: 2, scope: !4013)
!4036 = !DILocation(line: 148, column: 6, scope: !4013)
!4037 = !DILocation(line: 148, column: 13, scope: !4013)
!4038 = !DILocation(line: 150, column: 9, scope: !4013)
!4039 = !DILocation(line: 150, column: 2, scope: !4013)
!4040 = !DILocation(line: 151, column: 1, scope: !4013)
!4041 = distinct !DISubprogram(name: "ED_vgroup_add", scope: !3, file: !3, line: 153, type: !4042, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!1373, !3872}
!4044 = !DILocalVariable(name: "ob", arg: 1, scope: !4041, file: !3, line: 153, type: !3872)
!4045 = !DILocation(line: 153, column: 37, scope: !4041)
!4046 = !DILocation(line: 155, column: 28, scope: !4041)
!4047 = !DILocation(line: 155, column: 9, scope: !4041)
!4048 = !DILocation(line: 155, column: 2, scope: !4041)
!4049 = distinct !DISubprogram(name: "ED_vgroup_delete", scope: !3, file: !3, line: 158, type: !4050, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{null, !3872, !1368}
!4052 = !DILocalVariable(name: "ob", arg: 1, scope: !4049, file: !3, line: 158, type: !3872)
!4053 = !DILocation(line: 158, column: 31, scope: !4049)
!4054 = !DILocalVariable(name: "defgroup", arg: 2, scope: !4049, file: !3, line: 158, type: !1368)
!4055 = !DILocation(line: 158, column: 49, scope: !4049)
!4056 = !DILocation(line: 162, column: 36, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 162, column: 6)
!4058 = !DILocation(line: 162, column: 6, scope: !4057)
!4059 = !DILocation(line: 162, column: 6, scope: !4049)
!4060 = !DILocation(line: 163, column: 27, scope: !4057)
!4061 = !DILocation(line: 163, column: 31, scope: !4057)
!4062 = !DILocation(line: 163, column: 3, scope: !4057)
!4063 = !DILocation(line: 165, column: 29, scope: !4057)
!4064 = !DILocation(line: 165, column: 33, scope: !4057)
!4065 = !DILocation(line: 165, column: 3, scope: !4057)
!4066 = !DILocation(line: 166, column: 1, scope: !4049)
!4067 = distinct !DISubprogram(name: "vgroup_delete_edit_mode", scope: !3, file: !3, line: 2912, type: !4050, scopeLine: 2913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4068 = !DILocalVariable(name: "ob", arg: 1, scope: !4067, file: !3, line: 2912, type: !3872)
!4069 = !DILocation(line: 2912, column: 45, scope: !4067)
!4070 = !DILocalVariable(name: "dg", arg: 2, scope: !4067, file: !3, line: 2912, type: !1368)
!4071 = !DILocation(line: 2912, column: 63, scope: !4067)
!4072 = !DILocalVariable(name: "i", scope: !4067, file: !3, line: 2914, type: !354)
!4073 = !DILocation(line: 2914, column: 6, scope: !4067)
!4074 = !DILocalVariable(name: "dg_index", scope: !4067, file: !3, line: 2915, type: !4075)
!4075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !354)
!4076 = !DILocation(line: 2915, column: 12, scope: !4067)
!4077 = !DILocation(line: 2915, column: 38, scope: !4067)
!4078 = !DILocation(line: 2915, column: 42, scope: !4067)
!4079 = !DILocation(line: 2915, column: 51, scope: !4067)
!4080 = !DILocation(line: 2915, column: 23, scope: !4067)
!4081 = !DILocation(line: 2920, column: 33, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 2920, column: 6)
!4083 = !DILocation(line: 2920, column: 43, scope: !4082)
!4084 = !DILocation(line: 2920, column: 6, scope: !4082)
!4085 = !DILocation(line: 2920, column: 47, scope: !4082)
!4086 = !DILocation(line: 2920, column: 6, scope: !4067)
!4087 = !DILocation(line: 2922, column: 2, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 2920, column: 57)
!4089 = !DILocation(line: 2924, column: 11, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 2924, column: 11)
!4091 = !DILocation(line: 2924, column: 15, scope: !4090)
!4092 = !DILocation(line: 2924, column: 20, scope: !4090)
!4093 = !DILocation(line: 2924, column: 11, scope: !4082)
!4094 = !DILocalVariable(name: "me", scope: !4095, file: !3, line: 2925, type: !1383)
!4095 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 2924, column: 32)
!4096 = !DILocation(line: 2925, column: 9, scope: !4095)
!4097 = !DILocation(line: 2925, column: 14, scope: !4095)
!4098 = !DILocation(line: 2925, column: 18, scope: !4095)
!4099 = !DILocalVariable(name: "em", scope: !4095, file: !3, line: 2926, type: !4100)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !1604, line: 83, baseType: !1603)
!4102 = !DILocation(line: 2926, column: 15, scope: !4095)
!4103 = !DILocation(line: 2926, column: 20, scope: !4095)
!4104 = !DILocation(line: 2926, column: 24, scope: !4095)
!4105 = !DILocalVariable(name: "cd_dvert_offset", scope: !4095, file: !3, line: 2927, type: !4075)
!4106 = !DILocation(line: 2927, column: 13, scope: !4095)
!4107 = !DILocation(line: 2927, column: 54, scope: !4095)
!4108 = !DILocation(line: 2927, column: 58, scope: !4095)
!4109 = !DILocation(line: 2927, column: 62, scope: !4095)
!4110 = !DILocation(line: 2927, column: 31, scope: !4095)
!4111 = !DILocalVariable(name: "iter", scope: !4095, file: !3, line: 2929, type: !4112)
!4112 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !140, line: 186, baseType: !4113)
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !140, line: 164, size: 512, elements: !4114)
!4114 = !{!4115, !4195, !4196, !4197, !4198}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4113, file: !140, line: 179, baseType: !4116, size: 320)
!4116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4113, file: !140, line: 166, size: 320, elements: !4117)
!4117 = !{!4118, !4133, !4139, !4147, !4155, !4161, !4167, !4173, !4177, !4183, !4189}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !4116, file: !140, line: 167, baseType: !4119, size: 192)
!4119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !140, line: 113, size: 192, elements: !4120)
!4120 = !{!4121}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !4119, file: !140, line: 114, baseType: !4122, size: 192)
!4122 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !4123, line: 80, baseType: !4124)
!4123 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !4123, line: 76, size: 192, elements: !4125)
!4125 = !{!4126, !4129, !4132}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !4124, file: !4123, line: 77, baseType: !4127, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !4123, line: 47, baseType: !1621)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !4124, file: !4123, line: 78, baseType: !4130, size: 64, offset: 64)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !4123, line: 45, flags: DIFlagFwdDecl)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !4124, file: !4123, line: 79, baseType: !7, size: 32, offset: 128)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !4116, file: !140, line: 169, baseType: !4134, size: 192)
!4134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !140, line: 116, size: 192, elements: !4135)
!4135 = !{!4136, !4137, !4138}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4134, file: !140, line: 117, baseType: !1627, size: 64)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !4134, file: !140, line: 118, baseType: !1688, size: 64, offset: 64)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !4134, file: !140, line: 118, baseType: !1688, size: 64, offset: 128)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !4116, file: !140, line: 170, baseType: !4140, size: 320)
!4140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !140, line: 120, size: 320, elements: !4141)
!4141 = !{!4142, !4143, !4144, !4145, !4146}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4140, file: !140, line: 121, baseType: !1627, size: 64)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4140, file: !140, line: 122, baseType: !1670, size: 64, offset: 64)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4140, file: !140, line: 122, baseType: !1670, size: 64, offset: 128)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !4140, file: !140, line: 123, baseType: !1688, size: 64, offset: 192)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !4140, file: !140, line: 123, baseType: !1688, size: 64, offset: 256)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !4116, file: !140, line: 171, baseType: !4148, size: 320)
!4148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !140, line: 125, size: 320, elements: !4149)
!4149 = !{!4150, !4151, !4152, !4153, !4154}
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4148, file: !140, line: 126, baseType: !1627, size: 64)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4148, file: !140, line: 127, baseType: !1670, size: 64, offset: 64)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4148, file: !140, line: 127, baseType: !1670, size: 64, offset: 128)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !4148, file: !140, line: 128, baseType: !1688, size: 64, offset: 192)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !4148, file: !140, line: 128, baseType: !1688, size: 64, offset: 256)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !4116, file: !140, line: 172, baseType: !4156, size: 192)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !140, line: 130, size: 192, elements: !4157)
!4157 = !{!4158, !4159, !4160}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4156, file: !140, line: 131, baseType: !1688, size: 64)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4156, file: !140, line: 132, baseType: !1670, size: 64, offset: 64)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4156, file: !140, line: 132, baseType: !1670, size: 64, offset: 128)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !4116, file: !140, line: 173, baseType: !4162, size: 192)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !140, line: 134, size: 192, elements: !4163)
!4163 = !{!4164, !4165, !4166}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !4162, file: !140, line: 135, baseType: !1670, size: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4162, file: !140, line: 136, baseType: !1670, size: 64, offset: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4162, file: !140, line: 136, baseType: !1670, size: 64, offset: 128)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !4116, file: !140, line: 174, baseType: !4168, size: 192)
!4168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !140, line: 138, size: 192, elements: !4169)
!4169 = !{!4170, !4171, !4172}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4168, file: !140, line: 139, baseType: !1688, size: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4168, file: !140, line: 140, baseType: !1670, size: 64, offset: 64)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4168, file: !140, line: 140, baseType: !1670, size: 64, offset: 128)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !4116, file: !140, line: 175, baseType: !4174, size: 64)
!4174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !140, line: 142, size: 64, elements: !4175)
!4175 = !{!4176}
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4174, file: !140, line: 143, baseType: !1688, size: 64)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !4116, file: !140, line: 176, baseType: !4178, size: 192)
!4178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !140, line: 145, size: 192, elements: !4179)
!4179 = !{!4180, !4181, !4182}
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4178, file: !140, line: 146, baseType: !1692, size: 64)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4178, file: !140, line: 147, baseType: !1670, size: 64, offset: 64)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4178, file: !140, line: 147, baseType: !1670, size: 64, offset: 128)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !4116, file: !140, line: 177, baseType: !4184, size: 192)
!4184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !140, line: 149, size: 192, elements: !4185)
!4185 = !{!4186, !4187, !4188}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4184, file: !140, line: 150, baseType: !1692, size: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4184, file: !140, line: 151, baseType: !1670, size: 64, offset: 64)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4184, file: !140, line: 151, baseType: !1670, size: 64, offset: 128)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !4116, file: !140, line: 178, baseType: !4190, size: 192)
!4190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !140, line: 153, size: 192, elements: !4191)
!4191 = !{!4192, !4193, !4194}
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4190, file: !140, line: 154, baseType: !1692, size: 64)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4190, file: !140, line: 155, baseType: !1670, size: 64, offset: 64)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4190, file: !140, line: 155, baseType: !1670, size: 64, offset: 128)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !4113, file: !140, line: 181, baseType: !3491, size: 64, offset: 320)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !4113, file: !140, line: 182, baseType: !3495, size: 64, offset: 384)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4113, file: !140, line: 184, baseType: !354, size: 32, offset: 448)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !4113, file: !140, line: 185, baseType: !1253, size: 8, offset: 480)
!4199 = !DILocation(line: 2929, column: 10, scope: !4095)
!4200 = !DILocalVariable(name: "eve", scope: !4095, file: !3, line: 2930, type: !1627)
!4201 = !DILocation(line: 2930, column: 11, scope: !4095)
!4202 = !DILocalVariable(name: "dvert", scope: !4095, file: !3, line: 2931, type: !4203)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !181, line: 63, baseType: !1348)
!4205 = !DILocation(line: 2931, column: 16, scope: !4095)
!4206 = !DILocation(line: 2933, column: 3, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 2933, column: 3)
!4208 = !DILocation(line: 2933, column: 3, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 2933, column: 3)
!4210 = !DILocation(line: 2934, column: 12, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 2933, column: 55)
!4212 = !DILocation(line: 2934, column: 10, scope: !4211)
!4213 = !DILocation(line: 2936, column: 8, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 2936, column: 8)
!4215 = !DILocation(line: 2936, column: 8, scope: !4211)
!4216 = !DILocation(line: 2937, column: 12, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 2937, column: 5)
!4218 = !DILocation(line: 2937, column: 10, scope: !4217)
!4219 = !DILocation(line: 2937, column: 17, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 2937, column: 5)
!4221 = !DILocation(line: 2937, column: 21, scope: !4220)
!4222 = !DILocation(line: 2937, column: 28, scope: !4220)
!4223 = !DILocation(line: 2937, column: 19, scope: !4220)
!4224 = !DILocation(line: 2937, column: 5, scope: !4217)
!4225 = !DILocation(line: 2938, column: 10, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 2938, column: 10)
!4227 = !DILocation(line: 2938, column: 17, scope: !4226)
!4228 = !DILocation(line: 2938, column: 20, scope: !4226)
!4229 = !DILocation(line: 2938, column: 23, scope: !4226)
!4230 = !DILocation(line: 2938, column: 32, scope: !4226)
!4231 = !DILocation(line: 2938, column: 30, scope: !4226)
!4232 = !DILocation(line: 2938, column: 10, scope: !4220)
!4233 = !DILocation(line: 2939, column: 7, scope: !4226)
!4234 = !DILocation(line: 2939, column: 14, scope: !4226)
!4235 = !DILocation(line: 2939, column: 17, scope: !4226)
!4236 = !DILocation(line: 2939, column: 20, scope: !4226)
!4237 = !DILocation(line: 2939, column: 26, scope: !4226)
!4238 = !DILocation(line: 2937, column: 40, scope: !4220)
!4239 = !DILocation(line: 2937, column: 5, scope: !4220)
!4240 = distinct !{!4240, !4224, !4241}
!4241 = !DILocation(line: 2939, column: 26, scope: !4217)
!4242 = !DILocation(line: 2940, column: 3, scope: !4211)
!4243 = distinct !{!4243, !4206, !4244}
!4244 = !DILocation(line: 2940, column: 3, scope: !4207)
!4245 = !DILocation(line: 2941, column: 2, scope: !4095)
!4246 = !DILocation(line: 2942, column: 11, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 2942, column: 11)
!4248 = !DILocation(line: 2942, column: 15, scope: !4247)
!4249 = !DILocation(line: 2942, column: 20, scope: !4247)
!4250 = !DILocation(line: 2942, column: 11, scope: !4090)
!4251 = !DILocalVariable(name: "lt", scope: !4252, file: !3, line: 2943, type: !1227)
!4252 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 2942, column: 35)
!4253 = !DILocation(line: 2943, column: 12, scope: !4252)
!4254 = !DILocation(line: 2943, column: 37, scope: !4252)
!4255 = !DILocation(line: 2943, column: 17, scope: !4252)
!4256 = !DILocalVariable(name: "bp", scope: !4252, file: !3, line: 2944, type: !4257)
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4258 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !1305, line: 141, baseType: !1328)
!4259 = !DILocation(line: 2944, column: 11, scope: !4252)
!4260 = !DILocalVariable(name: "dvert", scope: !4252, file: !3, line: 2945, type: !4203)
!4261 = !DILocation(line: 2945, column: 16, scope: !4252)
!4262 = !DILocation(line: 2945, column: 24, scope: !4252)
!4263 = !DILocation(line: 2945, column: 28, scope: !4252)
!4264 = !DILocalVariable(name: "a", scope: !4252, file: !3, line: 2946, type: !354)
!4265 = !DILocation(line: 2946, column: 7, scope: !4252)
!4266 = !DILocalVariable(name: "tot", scope: !4252, file: !3, line: 2946, type: !354)
!4267 = !DILocation(line: 2946, column: 10, scope: !4252)
!4268 = !DILocation(line: 2948, column: 7, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 2948, column: 7)
!4270 = !DILocation(line: 2948, column: 7, scope: !4252)
!4271 = !DILocation(line: 2949, column: 10, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 2948, column: 14)
!4273 = !DILocation(line: 2949, column: 14, scope: !4272)
!4274 = !DILocation(line: 2949, column: 22, scope: !4272)
!4275 = !DILocation(line: 2949, column: 26, scope: !4272)
!4276 = !DILocation(line: 2949, column: 20, scope: !4272)
!4277 = !DILocation(line: 2949, column: 34, scope: !4272)
!4278 = !DILocation(line: 2949, column: 38, scope: !4272)
!4279 = !DILocation(line: 2949, column: 32, scope: !4272)
!4280 = !DILocation(line: 2949, column: 8, scope: !4272)
!4281 = !DILocation(line: 2950, column: 11, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 2950, column: 4)
!4283 = !DILocation(line: 2950, column: 21, scope: !4282)
!4284 = !DILocation(line: 2950, column: 25, scope: !4282)
!4285 = !DILocation(line: 2950, column: 19, scope: !4282)
!4286 = !DILocation(line: 2950, column: 9, scope: !4282)
!4287 = !DILocation(line: 2950, column: 30, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4282, file: !3, line: 2950, column: 4)
!4289 = !DILocation(line: 2950, column: 34, scope: !4288)
!4290 = !DILocation(line: 2950, column: 32, scope: !4288)
!4291 = !DILocation(line: 2950, column: 4, scope: !4282)
!4292 = !DILocation(line: 2951, column: 12, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 2951, column: 5)
!4294 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 2950, column: 59)
!4295 = !DILocation(line: 2951, column: 10, scope: !4293)
!4296 = !DILocation(line: 2951, column: 17, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 2951, column: 5)
!4298 = !DILocation(line: 2951, column: 21, scope: !4297)
!4299 = !DILocation(line: 2951, column: 28, scope: !4297)
!4300 = !DILocation(line: 2951, column: 19, scope: !4297)
!4301 = !DILocation(line: 2951, column: 5, scope: !4293)
!4302 = !DILocation(line: 2952, column: 10, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !3, line: 2952, column: 10)
!4304 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 2951, column: 44)
!4305 = !DILocation(line: 2952, column: 17, scope: !4303)
!4306 = !DILocation(line: 2952, column: 20, scope: !4303)
!4307 = !DILocation(line: 2952, column: 23, scope: !4303)
!4308 = !DILocation(line: 2952, column: 32, scope: !4303)
!4309 = !DILocation(line: 2952, column: 30, scope: !4303)
!4310 = !DILocation(line: 2952, column: 10, scope: !4304)
!4311 = !DILocation(line: 2953, column: 7, scope: !4303)
!4312 = !DILocation(line: 2953, column: 14, scope: !4303)
!4313 = !DILocation(line: 2953, column: 17, scope: !4303)
!4314 = !DILocation(line: 2953, column: 20, scope: !4303)
!4315 = !DILocation(line: 2953, column: 26, scope: !4303)
!4316 = !DILocation(line: 2954, column: 5, scope: !4304)
!4317 = !DILocation(line: 2951, column: 40, scope: !4297)
!4318 = !DILocation(line: 2951, column: 5, scope: !4297)
!4319 = distinct !{!4319, !4301, !4320}
!4320 = !DILocation(line: 2954, column: 5, scope: !4293)
!4321 = !DILocation(line: 2955, column: 4, scope: !4294)
!4322 = !DILocation(line: 2950, column: 40, scope: !4288)
!4323 = !DILocation(line: 2950, column: 46, scope: !4288)
!4324 = !DILocation(line: 2950, column: 55, scope: !4288)
!4325 = !DILocation(line: 2950, column: 4, scope: !4288)
!4326 = distinct !{!4326, !4291, !4327}
!4327 = !DILocation(line: 2955, column: 4, scope: !4282)
!4328 = !DILocation(line: 2956, column: 3, scope: !4272)
!4329 = !DILocation(line: 2957, column: 2, scope: !4252)
!4330 = !DILocation(line: 2959, column: 29, scope: !4067)
!4331 = !DILocation(line: 2959, column: 33, scope: !4067)
!4332 = !DILocation(line: 2959, column: 42, scope: !4067)
!4333 = !DILocation(line: 2959, column: 2, scope: !4067)
!4334 = !DILocation(line: 2962, column: 17, scope: !4067)
!4335 = !DILocation(line: 2962, column: 21, scope: !4067)
!4336 = !DILocation(line: 2962, column: 30, scope: !4067)
!4337 = !DILocation(line: 2962, column: 2, scope: !4067)
!4338 = !DILocation(line: 2965, column: 6, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 2965, column: 6)
!4340 = !DILocation(line: 2965, column: 10, scope: !4339)
!4341 = !DILocation(line: 2965, column: 19, scope: !4339)
!4342 = !DILocation(line: 2965, column: 17, scope: !4339)
!4343 = !DILocation(line: 2965, column: 6, scope: !4067)
!4344 = !DILocation(line: 2966, column: 3, scope: !4339)
!4345 = !DILocation(line: 2966, column: 7, scope: !4339)
!4346 = !DILocation(line: 2966, column: 13, scope: !4339)
!4347 = !DILocation(line: 2967, column: 6, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 2967, column: 6)
!4349 = !DILocation(line: 2967, column: 10, scope: !4348)
!4350 = !DILocation(line: 2967, column: 17, scope: !4348)
!4351 = !DILocation(line: 2967, column: 21, scope: !4348)
!4352 = !DILocation(line: 2967, column: 24, scope: !4348)
!4353 = !DILocation(line: 2967, column: 28, scope: !4348)
!4354 = !DILocation(line: 2967, column: 36, scope: !4348)
!4355 = !DILocation(line: 2967, column: 6, scope: !4067)
!4356 = !DILocation(line: 2968, column: 3, scope: !4348)
!4357 = !DILocation(line: 2968, column: 7, scope: !4348)
!4358 = !DILocation(line: 2968, column: 14, scope: !4348)
!4359 = !DILocation(line: 2971, column: 29, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 2971, column: 6)
!4361 = !DILocation(line: 2971, column: 33, scope: !4360)
!4362 = !DILocation(line: 2971, column: 6, scope: !4360)
!4363 = !DILocation(line: 2971, column: 6, scope: !4067)
!4364 = !DILocation(line: 2972, column: 7, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 2972, column: 7)
!4366 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 2971, column: 43)
!4367 = !DILocation(line: 2972, column: 11, scope: !4365)
!4368 = !DILocation(line: 2972, column: 16, scope: !4365)
!4369 = !DILocation(line: 2972, column: 7, scope: !4366)
!4370 = !DILocalVariable(name: "me", scope: !4371, file: !3, line: 2973, type: !1383)
!4371 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 2972, column: 28)
!4372 = !DILocation(line: 2973, column: 10, scope: !4371)
!4373 = !DILocation(line: 2973, column: 15, scope: !4371)
!4374 = !DILocation(line: 2973, column: 19, scope: !4371)
!4375 = !DILocation(line: 2974, column: 34, scope: !4371)
!4376 = !DILocation(line: 2974, column: 38, scope: !4371)
!4377 = !DILocation(line: 2974, column: 61, scope: !4371)
!4378 = !DILocation(line: 2974, column: 65, scope: !4371)
!4379 = !DILocation(line: 2974, column: 4, scope: !4371)
!4380 = !DILocation(line: 2975, column: 4, scope: !4371)
!4381 = !DILocation(line: 2975, column: 8, scope: !4371)
!4382 = !DILocation(line: 2975, column: 14, scope: !4371)
!4383 = !DILocation(line: 2976, column: 3, scope: !4371)
!4384 = !DILocation(line: 2977, column: 12, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 2977, column: 12)
!4386 = !DILocation(line: 2977, column: 16, scope: !4385)
!4387 = !DILocation(line: 2977, column: 21, scope: !4385)
!4388 = !DILocation(line: 2977, column: 12, scope: !4365)
!4389 = !DILocalVariable(name: "lt", scope: !4390, file: !3, line: 2978, type: !1227)
!4390 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 2977, column: 36)
!4391 = !DILocation(line: 2978, column: 13, scope: !4390)
!4392 = !DILocation(line: 2978, column: 38, scope: !4390)
!4393 = !DILocation(line: 2978, column: 18, scope: !4390)
!4394 = !DILocation(line: 2979, column: 8, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 2979, column: 8)
!4396 = !DILocation(line: 2979, column: 12, scope: !4395)
!4397 = !DILocation(line: 2979, column: 8, scope: !4390)
!4398 = !DILocation(line: 2980, column: 5, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 2979, column: 19)
!4400 = !DILocation(line: 2980, column: 15, scope: !4399)
!4401 = !DILocation(line: 2980, column: 19, scope: !4399)
!4402 = !DILocation(line: 2981, column: 5, scope: !4399)
!4403 = !DILocation(line: 2981, column: 9, scope: !4399)
!4404 = !DILocation(line: 2981, column: 15, scope: !4399)
!4405 = !DILocation(line: 2982, column: 4, scope: !4399)
!4406 = !DILocation(line: 2983, column: 3, scope: !4390)
!4407 = !DILocation(line: 2984, column: 2, scope: !4366)
!4408 = !DILocation(line: 2985, column: 1, scope: !4067)
!4409 = distinct !DISubprogram(name: "vgroup_delete_object_mode", scope: !3, file: !3, line: 2781, type: !4050, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4410 = !DILocalVariable(name: "ob", arg: 1, scope: !4409, file: !3, line: 2781, type: !3872)
!4411 = !DILocation(line: 2781, column: 47, scope: !4409)
!4412 = !DILocalVariable(name: "dg", arg: 2, scope: !4409, file: !3, line: 2781, type: !1368)
!4413 = !DILocation(line: 2781, column: 65, scope: !4409)
!4414 = !DILocalVariable(name: "dvert_array", scope: !4409, file: !3, line: 2783, type: !4203)
!4415 = !DILocation(line: 2783, column: 15, scope: !4409)
!4416 = !DILocalVariable(name: "dvert_tot", scope: !4409, file: !3, line: 2784, type: !354)
!4417 = !DILocation(line: 2784, column: 6, scope: !4409)
!4418 = !DILocalVariable(name: "def_nr", scope: !4409, file: !3, line: 2785, type: !4075)
!4419 = !DILocation(line: 2785, column: 12, scope: !4409)
!4420 = !DILocation(line: 2785, column: 36, scope: !4409)
!4421 = !DILocation(line: 2785, column: 40, scope: !4409)
!4422 = !DILocation(line: 2785, column: 49, scope: !4409)
!4423 = !DILocation(line: 2785, column: 21, scope: !4409)
!4424 = !DILocation(line: 2789, column: 22, scope: !4409)
!4425 = !DILocation(line: 2789, column: 26, scope: !4409)
!4426 = !DILocation(line: 2789, column: 2, scope: !4409)
!4427 = !DILocation(line: 2791, column: 6, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 2791, column: 6)
!4429 = !DILocation(line: 2791, column: 6, scope: !4409)
!4430 = !DILocalVariable(name: "i", scope: !4431, file: !3, line: 2792, type: !354)
!4431 = distinct !DILexicalBlock(scope: !4428, file: !3, line: 2791, column: 19)
!4432 = !DILocation(line: 2792, column: 7, scope: !4431)
!4433 = !DILocalVariable(name: "j", scope: !4431, file: !3, line: 2792, type: !354)
!4434 = !DILocation(line: 2792, column: 10, scope: !4431)
!4435 = !DILocalVariable(name: "dv", scope: !4431, file: !3, line: 2793, type: !4203)
!4436 = !DILocation(line: 2793, column: 16, scope: !4431)
!4437 = !DILocation(line: 2794, column: 10, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 2794, column: 3)
!4439 = !DILocation(line: 2794, column: 20, scope: !4438)
!4440 = !DILocation(line: 2794, column: 18, scope: !4438)
!4441 = !DILocation(line: 2794, column: 8, scope: !4438)
!4442 = !DILocation(line: 2794, column: 33, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 2794, column: 3)
!4444 = !DILocation(line: 2794, column: 37, scope: !4443)
!4445 = !DILocation(line: 2794, column: 35, scope: !4443)
!4446 = !DILocation(line: 2794, column: 3, scope: !4438)
!4447 = !DILocalVariable(name: "dw", scope: !4448, file: !3, line: 2795, type: !4449)
!4448 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 2794, column: 59)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformWeight", file: !181, line: 57, baseType: !1352)
!4451 = !DILocation(line: 2795, column: 19, scope: !4448)
!4452 = !DILocation(line: 2797, column: 28, scope: !4448)
!4453 = !DILocation(line: 2797, column: 32, scope: !4448)
!4454 = !DILocation(line: 2797, column: 9, scope: !4448)
!4455 = !DILocation(line: 2797, column: 7, scope: !4448)
!4456 = !DILocation(line: 2798, column: 25, scope: !4448)
!4457 = !DILocation(line: 2798, column: 29, scope: !4448)
!4458 = !DILocation(line: 2798, column: 4, scope: !4448)
!4459 = !DILocation(line: 2801, column: 11, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 2801, column: 4)
!4461 = !DILocation(line: 2801, column: 9, scope: !4460)
!4462 = !DILocation(line: 2801, column: 16, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 2801, column: 4)
!4464 = !DILocation(line: 2801, column: 20, scope: !4463)
!4465 = !DILocation(line: 2801, column: 24, scope: !4463)
!4466 = !DILocation(line: 2801, column: 18, scope: !4463)
!4467 = !DILocation(line: 2801, column: 4, scope: !4460)
!4468 = !DILocation(line: 2802, column: 9, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !3, line: 2802, column: 9)
!4470 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 2801, column: 40)
!4471 = !DILocation(line: 2802, column: 13, scope: !4469)
!4472 = !DILocation(line: 2802, column: 16, scope: !4469)
!4473 = !DILocation(line: 2802, column: 19, scope: !4469)
!4474 = !DILocation(line: 2802, column: 28, scope: !4469)
!4475 = !DILocation(line: 2802, column: 26, scope: !4469)
!4476 = !DILocation(line: 2802, column: 9, scope: !4470)
!4477 = !DILocation(line: 2803, column: 6, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 2802, column: 36)
!4479 = !DILocation(line: 2803, column: 10, scope: !4478)
!4480 = !DILocation(line: 2803, column: 13, scope: !4478)
!4481 = !DILocation(line: 2803, column: 16, scope: !4478)
!4482 = !DILocation(line: 2803, column: 22, scope: !4478)
!4483 = !DILocation(line: 2804, column: 5, scope: !4478)
!4484 = !DILocation(line: 2805, column: 4, scope: !4470)
!4485 = !DILocation(line: 2801, column: 36, scope: !4463)
!4486 = !DILocation(line: 2801, column: 4, scope: !4463)
!4487 = distinct !{!4487, !4467, !4488}
!4488 = !DILocation(line: 2805, column: 4, scope: !4460)
!4489 = !DILocation(line: 2807, column: 3, scope: !4448)
!4490 = !DILocation(line: 2794, column: 49, scope: !4443)
!4491 = !DILocation(line: 2794, column: 55, scope: !4443)
!4492 = !DILocation(line: 2794, column: 3, scope: !4443)
!4493 = distinct !{!4493, !4446, !4494}
!4494 = !DILocation(line: 2807, column: 3, scope: !4438)
!4495 = !DILocation(line: 2808, column: 2, scope: !4431)
!4496 = !DILocation(line: 2810, column: 29, scope: !4409)
!4497 = !DILocation(line: 2810, column: 33, scope: !4409)
!4498 = !DILocation(line: 2810, column: 40, scope: !4409)
!4499 = !DILocation(line: 2810, column: 2, scope: !4409)
!4500 = !DILocation(line: 2813, column: 17, scope: !4409)
!4501 = !DILocation(line: 2813, column: 21, scope: !4409)
!4502 = !DILocation(line: 2813, column: 30, scope: !4409)
!4503 = !DILocation(line: 2813, column: 2, scope: !4409)
!4504 = !DILocation(line: 2816, column: 6, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 2816, column: 6)
!4506 = !DILocation(line: 2816, column: 10, scope: !4505)
!4507 = !DILocation(line: 2816, column: 19, scope: !4505)
!4508 = !DILocation(line: 2816, column: 17, scope: !4505)
!4509 = !DILocation(line: 2816, column: 6, scope: !4409)
!4510 = !DILocation(line: 2817, column: 3, scope: !4505)
!4511 = !DILocation(line: 2817, column: 7, scope: !4505)
!4512 = !DILocation(line: 2817, column: 13, scope: !4505)
!4513 = !DILocation(line: 2818, column: 6, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 2818, column: 6)
!4515 = !DILocation(line: 2818, column: 10, scope: !4514)
!4516 = !DILocation(line: 2818, column: 17, scope: !4514)
!4517 = !DILocation(line: 2818, column: 21, scope: !4514)
!4518 = !DILocation(line: 2818, column: 24, scope: !4514)
!4519 = !DILocation(line: 2818, column: 28, scope: !4514)
!4520 = !DILocation(line: 2818, column: 36, scope: !4514)
!4521 = !DILocation(line: 2818, column: 6, scope: !4409)
!4522 = !DILocation(line: 2819, column: 3, scope: !4514)
!4523 = !DILocation(line: 2819, column: 7, scope: !4514)
!4524 = !DILocation(line: 2819, column: 14, scope: !4514)
!4525 = !DILocation(line: 2822, column: 29, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 2822, column: 6)
!4527 = !DILocation(line: 2822, column: 33, scope: !4526)
!4528 = !DILocation(line: 2822, column: 6, scope: !4526)
!4529 = !DILocation(line: 2822, column: 6, scope: !4409)
!4530 = !DILocation(line: 2823, column: 7, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 2823, column: 7)
!4532 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2822, column: 43)
!4533 = !DILocation(line: 2823, column: 11, scope: !4531)
!4534 = !DILocation(line: 2823, column: 16, scope: !4531)
!4535 = !DILocation(line: 2823, column: 7, scope: !4532)
!4536 = !DILocalVariable(name: "me", scope: !4537, file: !3, line: 2824, type: !1383)
!4537 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2823, column: 28)
!4538 = !DILocation(line: 2824, column: 10, scope: !4537)
!4539 = !DILocation(line: 2824, column: 15, scope: !4537)
!4540 = !DILocation(line: 2824, column: 19, scope: !4537)
!4541 = !DILocation(line: 2825, column: 34, scope: !4537)
!4542 = !DILocation(line: 2825, column: 38, scope: !4537)
!4543 = !DILocation(line: 2825, column: 61, scope: !4537)
!4544 = !DILocation(line: 2825, column: 65, scope: !4537)
!4545 = !DILocation(line: 2825, column: 4, scope: !4537)
!4546 = !DILocation(line: 2826, column: 4, scope: !4537)
!4547 = !DILocation(line: 2826, column: 8, scope: !4537)
!4548 = !DILocation(line: 2826, column: 14, scope: !4537)
!4549 = !DILocation(line: 2827, column: 3, scope: !4537)
!4550 = !DILocation(line: 2828, column: 12, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 2828, column: 12)
!4552 = !DILocation(line: 2828, column: 16, scope: !4551)
!4553 = !DILocation(line: 2828, column: 21, scope: !4551)
!4554 = !DILocation(line: 2828, column: 12, scope: !4531)
!4555 = !DILocalVariable(name: "lt", scope: !4556, file: !3, line: 2829, type: !1227)
!4556 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 2828, column: 36)
!4557 = !DILocation(line: 2829, column: 13, scope: !4556)
!4558 = !DILocation(line: 2829, column: 18, scope: !4556)
!4559 = !DILocation(line: 2829, column: 22, scope: !4556)
!4560 = !DILocation(line: 2830, column: 8, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 2830, column: 8)
!4562 = !DILocation(line: 2830, column: 12, scope: !4561)
!4563 = !DILocation(line: 2830, column: 8, scope: !4556)
!4564 = !DILocation(line: 2831, column: 5, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 2830, column: 19)
!4566 = !DILocation(line: 2831, column: 15, scope: !4565)
!4567 = !DILocation(line: 2831, column: 19, scope: !4565)
!4568 = !DILocation(line: 2832, column: 5, scope: !4565)
!4569 = !DILocation(line: 2832, column: 9, scope: !4565)
!4570 = !DILocation(line: 2832, column: 15, scope: !4565)
!4571 = !DILocation(line: 2833, column: 4, scope: !4565)
!4572 = !DILocation(line: 2834, column: 3, scope: !4556)
!4573 = !DILocation(line: 2835, column: 2, scope: !4532)
!4574 = !DILocation(line: 2836, column: 1, scope: !4409)
!4575 = distinct !DISubprogram(name: "ED_vgroup_clear", scope: !3, file: !3, line: 168, type: !4576, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{null, !3872}
!4578 = !DILocalVariable(name: "ob", arg: 1, scope: !4575, file: !3, line: 168, type: !3872)
!4579 = !DILocation(line: 168, column: 30, scope: !4575)
!4580 = !DILocalVariable(name: "dg", scope: !4575, file: !3, line: 170, type: !1368)
!4581 = !DILocation(line: 170, column: 16, scope: !4575)
!4582 = !DILocation(line: 170, column: 37, scope: !4575)
!4583 = !DILocation(line: 170, column: 41, scope: !4575)
!4584 = !DILocation(line: 170, column: 49, scope: !4575)
!4585 = !DILocation(line: 170, column: 21, scope: !4575)
!4586 = !DILocalVariable(name: "edit_mode", scope: !4575, file: !3, line: 171, type: !354)
!4587 = !DILocation(line: 171, column: 6, scope: !4575)
!4588 = !DILocation(line: 171, column: 48, scope: !4575)
!4589 = !DILocation(line: 171, column: 18, scope: !4575)
!4590 = !DILocation(line: 173, column: 2, scope: !4575)
!4591 = !DILocation(line: 173, column: 9, scope: !4575)
!4592 = !DILocalVariable(name: "next_dg", scope: !4593, file: !3, line: 174, type: !1368)
!4593 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 173, column: 13)
!4594 = !DILocation(line: 174, column: 17, scope: !4593)
!4595 = !DILocation(line: 174, column: 27, scope: !4593)
!4596 = !DILocation(line: 174, column: 31, scope: !4593)
!4597 = !DILocation(line: 176, column: 7, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 176, column: 7)
!4599 = !DILocation(line: 176, column: 7, scope: !4593)
!4600 = !DILocation(line: 177, column: 28, scope: !4598)
!4601 = !DILocation(line: 177, column: 32, scope: !4598)
!4602 = !DILocation(line: 177, column: 4, scope: !4598)
!4603 = !DILocation(line: 179, column: 30, scope: !4598)
!4604 = !DILocation(line: 179, column: 34, scope: !4598)
!4605 = !DILocation(line: 179, column: 4, scope: !4598)
!4606 = !DILocation(line: 181, column: 8, scope: !4593)
!4607 = !DILocation(line: 181, column: 6, scope: !4593)
!4608 = distinct !{!4608, !4590, !4609}
!4609 = !DILocation(line: 182, column: 2, scope: !4575)
!4610 = !DILocation(line: 183, column: 1, scope: !4575)
!4611 = distinct !DISubprogram(name: "ED_vgroup_data_create", scope: !3, file: !3, line: 185, type: !4612, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!2436, !1247}
!4614 = !DILocalVariable(name: "id", arg: 1, scope: !4611, file: !3, line: 185, type: !1247)
!4615 = !DILocation(line: 185, column: 32, scope: !4611)
!4616 = !DILocation(line: 189, column: 6, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 189, column: 6)
!4618 = !DILocation(line: 189, column: 19, scope: !4617)
!4619 = !DILocation(line: 189, column: 6, scope: !4611)
!4620 = !DILocalVariable(name: "me", scope: !4621, file: !3, line: 190, type: !1383)
!4621 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 189, column: 29)
!4622 = !DILocation(line: 190, column: 9, scope: !4621)
!4623 = !DILocation(line: 190, column: 22, scope: !4621)
!4624 = !DILocation(line: 190, column: 14, scope: !4621)
!4625 = !DILocation(line: 191, column: 37, scope: !4621)
!4626 = !DILocation(line: 191, column: 41, scope: !4621)
!4627 = !DILocation(line: 191, column: 81, scope: !4621)
!4628 = !DILocation(line: 191, column: 85, scope: !4621)
!4629 = !DILocation(line: 191, column: 15, scope: !4621)
!4630 = !DILocation(line: 191, column: 3, scope: !4621)
!4631 = !DILocation(line: 191, column: 7, scope: !4621)
!4632 = !DILocation(line: 191, column: 13, scope: !4621)
!4633 = !DILocation(line: 192, column: 3, scope: !4621)
!4634 = !DILocation(line: 194, column: 11, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 194, column: 11)
!4636 = !DILocation(line: 194, column: 24, scope: !4635)
!4637 = !DILocation(line: 194, column: 11, scope: !4617)
!4638 = !DILocalVariable(name: "lt", scope: !4639, file: !3, line: 195, type: !1227)
!4639 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 194, column: 34)
!4640 = !DILocation(line: 195, column: 12, scope: !4639)
!4641 = !DILocation(line: 195, column: 28, scope: !4639)
!4642 = !DILocation(line: 195, column: 17, scope: !4639)
!4643 = !DILocation(line: 196, column: 15, scope: !4639)
!4644 = !DILocation(line: 196, column: 49, scope: !4639)
!4645 = !DILocation(line: 196, column: 53, scope: !4639)
!4646 = !DILocation(line: 196, column: 47, scope: !4639)
!4647 = !DILocation(line: 196, column: 61, scope: !4639)
!4648 = !DILocation(line: 196, column: 65, scope: !4639)
!4649 = !DILocation(line: 196, column: 59, scope: !4639)
!4650 = !DILocation(line: 196, column: 73, scope: !4639)
!4651 = !DILocation(line: 196, column: 77, scope: !4639)
!4652 = !DILocation(line: 196, column: 71, scope: !4639)
!4653 = !DILocation(line: 196, column: 3, scope: !4639)
!4654 = !DILocation(line: 196, column: 7, scope: !4639)
!4655 = !DILocation(line: 196, column: 13, scope: !4639)
!4656 = !DILocation(line: 197, column: 3, scope: !4639)
!4657 = !DILocation(line: 200, column: 3, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 199, column: 7)
!4659 = !DILocation(line: 202, column: 1, scope: !4611)
!4660 = distinct !DISubprogram(name: "ED_vgroup_data_clamp_range", scope: !3, file: !3, line: 207, type: !4661, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{null, !1247, !4075}
!4663 = !DILocalVariable(name: "id", arg: 1, scope: !4660, file: !3, line: 207, type: !1247)
!4664 = !DILocation(line: 207, column: 37, scope: !4660)
!4665 = !DILocalVariable(name: "total", arg: 2, scope: !4660, file: !3, line: 207, type: !4075)
!4666 = !DILocation(line: 207, column: 51, scope: !4660)
!4667 = !DILocalVariable(name: "dvert_arr", scope: !4660, file: !3, line: 209, type: !4668)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4669 = !DILocation(line: 209, column: 16, scope: !4660)
!4670 = !DILocalVariable(name: "dvert_tot", scope: !4660, file: !3, line: 210, type: !354)
!4671 = !DILocation(line: 210, column: 6, scope: !4660)
!4672 = !DILocation(line: 212, column: 29, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 212, column: 6)
!4674 = !DILocation(line: 212, column: 6, scope: !4673)
!4675 = !DILocation(line: 212, column: 6, scope: !4660)
!4676 = !DILocalVariable(name: "i", scope: !4677, file: !3, line: 213, type: !354)
!4677 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 212, column: 65)
!4678 = !DILocation(line: 213, column: 7, scope: !4677)
!4679 = !DILocation(line: 214, column: 10, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 214, column: 3)
!4681 = !DILocation(line: 214, column: 8, scope: !4680)
!4682 = !DILocation(line: 214, column: 15, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 214, column: 3)
!4684 = !DILocation(line: 214, column: 19, scope: !4683)
!4685 = !DILocation(line: 214, column: 17, scope: !4683)
!4686 = !DILocation(line: 214, column: 3, scope: !4680)
!4687 = !DILocalVariable(name: "dv", scope: !4688, file: !3, line: 215, type: !4203)
!4688 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 214, column: 35)
!4689 = !DILocation(line: 215, column: 17, scope: !4688)
!4690 = !DILocation(line: 215, column: 22, scope: !4688)
!4691 = !DILocation(line: 215, column: 32, scope: !4688)
!4692 = !DILocalVariable(name: "j", scope: !4688, file: !3, line: 216, type: !354)
!4693 = !DILocation(line: 216, column: 8, scope: !4688)
!4694 = !DILocation(line: 217, column: 11, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4688, file: !3, line: 217, column: 4)
!4696 = !DILocation(line: 217, column: 9, scope: !4695)
!4697 = !DILocation(line: 217, column: 16, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 217, column: 4)
!4699 = !DILocation(line: 217, column: 20, scope: !4698)
!4700 = !DILocation(line: 217, column: 24, scope: !4698)
!4701 = !DILocation(line: 217, column: 18, scope: !4698)
!4702 = !DILocation(line: 217, column: 4, scope: !4695)
!4703 = !DILocation(line: 218, column: 9, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 218, column: 9)
!4705 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 217, column: 40)
!4706 = !DILocation(line: 218, column: 13, scope: !4704)
!4707 = !DILocation(line: 218, column: 16, scope: !4704)
!4708 = !DILocation(line: 218, column: 19, scope: !4704)
!4709 = !DILocation(line: 218, column: 29, scope: !4704)
!4710 = !DILocation(line: 218, column: 26, scope: !4704)
!4711 = !DILocation(line: 218, column: 9, scope: !4705)
!4712 = !DILocation(line: 219, column: 27, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 218, column: 36)
!4714 = !DILocation(line: 219, column: 32, scope: !4713)
!4715 = !DILocation(line: 219, column: 36, scope: !4713)
!4716 = !DILocation(line: 219, column: 39, scope: !4713)
!4717 = !DILocation(line: 219, column: 6, scope: !4713)
!4718 = !DILocation(line: 220, column: 7, scope: !4713)
!4719 = !DILocation(line: 221, column: 5, scope: !4713)
!4720 = !DILocation(line: 222, column: 4, scope: !4705)
!4721 = !DILocation(line: 217, column: 36, scope: !4698)
!4722 = !DILocation(line: 217, column: 4, scope: !4698)
!4723 = distinct !{!4723, !4702, !4724}
!4724 = !DILocation(line: 222, column: 4, scope: !4695)
!4725 = !DILocation(line: 223, column: 3, scope: !4688)
!4726 = !DILocation(line: 214, column: 31, scope: !4683)
!4727 = !DILocation(line: 214, column: 3, scope: !4683)
!4728 = distinct !{!4728, !4686, !4729}
!4729 = !DILocation(line: 223, column: 3, scope: !4680)
!4730 = !DILocation(line: 224, column: 2, scope: !4677)
!4731 = !DILocation(line: 225, column: 1, scope: !4660)
!4732 = distinct !DISubprogram(name: "ED_vgroup_parray_alloc", scope: !3, file: !3, line: 227, type: !4733, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{!2436, !1247, !4735, !1972, !3381}
!4735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4736 = !DILocalVariable(name: "id", arg: 1, scope: !4732, file: !3, line: 227, type: !1247)
!4737 = !DILocation(line: 227, column: 33, scope: !4732)
!4738 = !DILocalVariable(name: "dvert_arr", arg: 2, scope: !4732, file: !3, line: 227, type: !4735)
!4739 = !DILocation(line: 227, column: 52, scope: !4732)
!4740 = !DILocalVariable(name: "dvert_tot", arg: 3, scope: !4732, file: !3, line: 227, type: !1972)
!4741 = !DILocation(line: 227, column: 68, scope: !4732)
!4742 = !DILocalVariable(name: "use_vert_sel", arg: 4, scope: !4732, file: !3, line: 227, type: !3381)
!4743 = !DILocation(line: 227, column: 90, scope: !4732)
!4744 = !DILocation(line: 229, column: 3, scope: !4732)
!4745 = !DILocation(line: 229, column: 13, scope: !4732)
!4746 = !DILocation(line: 230, column: 3, scope: !4732)
!4747 = !DILocation(line: 230, column: 13, scope: !4732)
!4748 = !DILocation(line: 232, column: 6, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 232, column: 6)
!4750 = !DILocation(line: 232, column: 6, scope: !4732)
!4751 = !DILocation(line: 233, column: 11, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 232, column: 10)
!4753 = !DILocation(line: 233, column: 3, scope: !4752)
!4754 = !DILocalVariable(name: "me", scope: !4755, file: !3, line: 236, type: !1383)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 235, column: 4)
!4756 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 233, column: 25)
!4757 = !DILocation(line: 236, column: 11, scope: !4755)
!4758 = !DILocation(line: 236, column: 24, scope: !4755)
!4759 = !DILocation(line: 236, column: 16, scope: !4755)
!4760 = !DILocation(line: 238, column: 9, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 238, column: 9)
!4762 = !DILocation(line: 238, column: 13, scope: !4761)
!4763 = !DILocation(line: 238, column: 9, scope: !4755)
!4764 = !DILocalVariable(name: "em", scope: !4765, file: !3, line: 239, type: !4100)
!4765 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 238, column: 26)
!4766 = !DILocation(line: 239, column: 18, scope: !4765)
!4767 = !DILocation(line: 239, column: 23, scope: !4765)
!4768 = !DILocation(line: 239, column: 27, scope: !4765)
!4769 = !DILocalVariable(name: "bm", scope: !4765, file: !3, line: 240, type: !1746)
!4770 = !DILocation(line: 240, column: 13, scope: !4765)
!4771 = !DILocation(line: 240, column: 18, scope: !4765)
!4772 = !DILocation(line: 240, column: 22, scope: !4765)
!4773 = !DILocalVariable(name: "cd_dvert_offset", scope: !4765, file: !3, line: 241, type: !4075)
!4774 = !DILocation(line: 241, column: 16, scope: !4765)
!4775 = !DILocation(line: 241, column: 58, scope: !4765)
!4776 = !DILocation(line: 241, column: 62, scope: !4765)
!4777 = !DILocation(line: 241, column: 35, scope: !4765)
!4778 = !DILocalVariable(name: "iter", scope: !4765, file: !3, line: 242, type: !4112)
!4779 = !DILocation(line: 242, column: 13, scope: !4765)
!4780 = !DILocalVariable(name: "eve", scope: !4765, file: !3, line: 243, type: !1627)
!4781 = !DILocation(line: 243, column: 14, scope: !4765)
!4782 = !DILocalVariable(name: "i", scope: !4765, file: !3, line: 244, type: !354)
!4783 = !DILocation(line: 244, column: 10, scope: !4765)
!4784 = !DILocation(line: 246, column: 10, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 246, column: 10)
!4786 = !DILocation(line: 246, column: 26, scope: !4785)
!4787 = !DILocation(line: 246, column: 10, scope: !4765)
!4788 = !DILocation(line: 247, column: 7, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 246, column: 33)
!4790 = !DILocation(line: 250, column: 10, scope: !4765)
!4791 = !DILocation(line: 250, column: 14, scope: !4765)
!4792 = !DILocation(line: 250, column: 18, scope: !4765)
!4793 = !DILocation(line: 250, column: 8, scope: !4765)
!4794 = !DILocation(line: 252, column: 19, scope: !4765)
!4795 = !DILocation(line: 252, column: 48, scope: !4765)
!4796 = !DILocation(line: 252, column: 46, scope: !4765)
!4797 = !DILocation(line: 252, column: 7, scope: !4765)
!4798 = !DILocation(line: 252, column: 17, scope: !4765)
!4799 = !DILocation(line: 253, column: 19, scope: !4765)
!4800 = !DILocation(line: 253, column: 7, scope: !4765)
!4801 = !DILocation(line: 253, column: 17, scope: !4765)
!4802 = !DILocation(line: 255, column: 8, scope: !4765)
!4803 = !DILocation(line: 256, column: 10, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 256, column: 10)
!4805 = !DILocation(line: 256, column: 10, scope: !4765)
!4806 = !DILocation(line: 257, column: 7, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 257, column: 7)
!4808 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 256, column: 24)
!4809 = !DILocation(line: 257, column: 7, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 257, column: 7)
!4811 = !DILocation(line: 258, column: 26, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 257, column: 59)
!4813 = !DILocation(line: 259, column: 26, scope: !4812)
!4814 = !DILocation(line: 258, column: 10, scope: !4812)
!4815 = !DILocation(line: 258, column: 9, scope: !4812)
!4816 = !DILocation(line: 258, column: 21, scope: !4812)
!4817 = !DILocation(line: 258, column: 8, scope: !4812)
!4818 = !DILocation(line: 258, column: 24, scope: !4812)
!4819 = !DILocation(line: 260, column: 9, scope: !4812)
!4820 = !DILocation(line: 261, column: 7, scope: !4812)
!4821 = distinct !{!4821, !4806, !4822}
!4822 = !DILocation(line: 261, column: 7, scope: !4807)
!4823 = !DILocation(line: 262, column: 6, scope: !4808)
!4824 = !DILocation(line: 264, column: 7, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 264, column: 7)
!4826 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 263, column: 11)
!4827 = !DILocation(line: 264, column: 7, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 264, column: 7)
!4829 = !DILocation(line: 265, column: 26, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 264, column: 59)
!4831 = !DILocation(line: 265, column: 10, scope: !4830)
!4832 = !DILocation(line: 265, column: 9, scope: !4830)
!4833 = !DILocation(line: 265, column: 21, scope: !4830)
!4834 = !DILocation(line: 265, column: 8, scope: !4830)
!4835 = !DILocation(line: 265, column: 24, scope: !4830)
!4836 = !DILocation(line: 266, column: 9, scope: !4830)
!4837 = !DILocation(line: 267, column: 7, scope: !4830)
!4838 = distinct !{!4838, !4824, !4839}
!4839 = !DILocation(line: 267, column: 7, scope: !4825)
!4840 = !DILocation(line: 270, column: 6, scope: !4765)
!4841 = !DILocation(line: 272, column: 14, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 272, column: 14)
!4843 = !DILocation(line: 272, column: 18, scope: !4842)
!4844 = !DILocation(line: 272, column: 14, scope: !4761)
!4845 = !DILocalVariable(name: "mvert", scope: !4846, file: !3, line: 273, type: !3476)
!4846 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 272, column: 25)
!4847 = !DILocation(line: 273, column: 13, scope: !4846)
!4848 = !DILocation(line: 273, column: 21, scope: !4846)
!4849 = !DILocation(line: 273, column: 25, scope: !4846)
!4850 = !DILocalVariable(name: "dvert", scope: !4846, file: !3, line: 274, type: !4203)
!4851 = !DILocation(line: 274, column: 19, scope: !4846)
!4852 = !DILocation(line: 274, column: 27, scope: !4846)
!4853 = !DILocation(line: 274, column: 31, scope: !4846)
!4854 = !DILocalVariable(name: "i", scope: !4846, file: !3, line: 275, type: !354)
!4855 = !DILocation(line: 275, column: 10, scope: !4846)
!4856 = !DILocation(line: 277, column: 19, scope: !4846)
!4857 = !DILocation(line: 277, column: 23, scope: !4846)
!4858 = !DILocation(line: 277, column: 7, scope: !4846)
!4859 = !DILocation(line: 277, column: 17, scope: !4846)
!4860 = !DILocation(line: 278, column: 19, scope: !4846)
!4861 = !DILocation(line: 278, column: 48, scope: !4846)
!4862 = !DILocation(line: 278, column: 52, scope: !4846)
!4863 = !DILocation(line: 278, column: 46, scope: !4846)
!4864 = !DILocation(line: 278, column: 7, scope: !4846)
!4865 = !DILocation(line: 278, column: 17, scope: !4846)
!4866 = !DILocation(line: 280, column: 10, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 280, column: 10)
!4868 = !DILocation(line: 280, column: 10, scope: !4846)
!4869 = !DILocation(line: 281, column: 14, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 281, column: 7)
!4871 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 280, column: 24)
!4872 = !DILocation(line: 281, column: 12, scope: !4870)
!4873 = !DILocation(line: 281, column: 19, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 281, column: 7)
!4875 = !DILocation(line: 281, column: 23, scope: !4874)
!4876 = !DILocation(line: 281, column: 27, scope: !4874)
!4877 = !DILocation(line: 281, column: 21, scope: !4874)
!4878 = !DILocation(line: 281, column: 7, scope: !4870)
!4879 = !DILocation(line: 282, column: 27, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 281, column: 41)
!4881 = !DILocation(line: 282, column: 33, scope: !4880)
!4882 = !DILocation(line: 282, column: 36, scope: !4880)
!4883 = !DILocation(line: 282, column: 41, scope: !4880)
!4884 = !DILocation(line: 282, column: 26, scope: !4880)
!4885 = !DILocation(line: 283, column: 27, scope: !4880)
!4886 = !DILocation(line: 283, column: 33, scope: !4880)
!4887 = !DILocation(line: 282, column: 10, scope: !4880)
!4888 = !DILocation(line: 282, column: 9, scope: !4880)
!4889 = !DILocation(line: 282, column: 21, scope: !4880)
!4890 = !DILocation(line: 282, column: 8, scope: !4880)
!4891 = !DILocation(line: 282, column: 24, scope: !4880)
!4892 = !DILocation(line: 284, column: 7, scope: !4880)
!4893 = !DILocation(line: 281, column: 37, scope: !4874)
!4894 = !DILocation(line: 281, column: 7, scope: !4874)
!4895 = distinct !{!4895, !4878, !4896}
!4896 = !DILocation(line: 284, column: 7, scope: !4870)
!4897 = !DILocation(line: 285, column: 6, scope: !4871)
!4898 = !DILocation(line: 287, column: 14, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 287, column: 7)
!4900 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 286, column: 11)
!4901 = !DILocation(line: 287, column: 12, scope: !4899)
!4902 = !DILocation(line: 287, column: 19, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 287, column: 7)
!4904 = !DILocation(line: 287, column: 23, scope: !4903)
!4905 = !DILocation(line: 287, column: 27, scope: !4903)
!4906 = !DILocation(line: 287, column: 21, scope: !4903)
!4907 = !DILocation(line: 287, column: 7, scope: !4899)
!4908 = !DILocation(line: 288, column: 26, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 287, column: 41)
!4910 = !DILocation(line: 288, column: 30, scope: !4909)
!4911 = !DILocation(line: 288, column: 38, scope: !4909)
!4912 = !DILocation(line: 288, column: 36, scope: !4909)
!4913 = !DILocation(line: 288, column: 10, scope: !4909)
!4914 = !DILocation(line: 288, column: 9, scope: !4909)
!4915 = !DILocation(line: 288, column: 21, scope: !4909)
!4916 = !DILocation(line: 288, column: 8, scope: !4909)
!4917 = !DILocation(line: 288, column: 24, scope: !4909)
!4918 = !DILocation(line: 289, column: 7, scope: !4909)
!4919 = !DILocation(line: 287, column: 37, scope: !4903)
!4920 = !DILocation(line: 287, column: 7, scope: !4903)
!4921 = distinct !{!4921, !4907, !4922}
!4922 = !DILocation(line: 289, column: 7, scope: !4899)
!4923 = !DILocation(line: 292, column: 6, scope: !4846)
!4924 = !DILocation(line: 294, column: 5, scope: !4755)
!4925 = !DILocalVariable(name: "i", scope: !4926, file: !3, line: 298, type: !354)
!4926 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 297, column: 4)
!4927 = !DILocation(line: 298, column: 9, scope: !4926)
!4928 = !DILocalVariable(name: "lt", scope: !4926, file: !3, line: 300, type: !1227)
!4929 = !DILocation(line: 300, column: 14, scope: !4926)
!4930 = !DILocation(line: 300, column: 30, scope: !4926)
!4931 = !DILocation(line: 300, column: 19, scope: !4926)
!4932 = !DILocation(line: 301, column: 11, scope: !4926)
!4933 = !DILocation(line: 301, column: 15, scope: !4926)
!4934 = !DILocation(line: 301, column: 10, scope: !4926)
!4935 = !DILocation(line: 301, column: 27, scope: !4926)
!4936 = !DILocation(line: 301, column: 31, scope: !4926)
!4937 = !DILocation(line: 301, column: 41, scope: !4926)
!4938 = !DILocation(line: 301, column: 48, scope: !4926)
!4939 = !DILocation(line: 301, column: 8, scope: !4926)
!4940 = !DILocation(line: 303, column: 9, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 303, column: 9)
!4942 = !DILocation(line: 303, column: 13, scope: !4941)
!4943 = !DILocation(line: 303, column: 9, scope: !4926)
!4944 = !DILocalVariable(name: "def", scope: !4945, file: !3, line: 304, type: !4257)
!4945 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 303, column: 20)
!4946 = !DILocation(line: 304, column: 14, scope: !4945)
!4947 = !DILocation(line: 304, column: 20, scope: !4945)
!4948 = !DILocation(line: 304, column: 24, scope: !4945)
!4949 = !DILocation(line: 305, column: 19, scope: !4945)
!4950 = !DILocation(line: 305, column: 23, scope: !4945)
!4951 = !DILocation(line: 305, column: 31, scope: !4945)
!4952 = !DILocation(line: 305, column: 35, scope: !4945)
!4953 = !DILocation(line: 305, column: 29, scope: !4945)
!4954 = !DILocation(line: 305, column: 43, scope: !4945)
!4955 = !DILocation(line: 305, column: 47, scope: !4945)
!4956 = !DILocation(line: 305, column: 41, scope: !4945)
!4957 = !DILocation(line: 305, column: 7, scope: !4945)
!4958 = !DILocation(line: 305, column: 17, scope: !4945)
!4959 = !DILocation(line: 306, column: 19, scope: !4945)
!4960 = !DILocation(line: 306, column: 50, scope: !4945)
!4961 = !DILocation(line: 306, column: 49, scope: !4945)
!4962 = !DILocation(line: 306, column: 48, scope: !4945)
!4963 = !DILocation(line: 306, column: 46, scope: !4945)
!4964 = !DILocation(line: 306, column: 7, scope: !4945)
!4965 = !DILocation(line: 306, column: 17, scope: !4945)
!4966 = !DILocation(line: 308, column: 10, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 308, column: 10)
!4968 = !DILocation(line: 308, column: 10, scope: !4945)
!4969 = !DILocation(line: 309, column: 14, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 309, column: 7)
!4971 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 308, column: 24)
!4972 = !DILocation(line: 309, column: 12, scope: !4970)
!4973 = !DILocation(line: 309, column: 19, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 309, column: 7)
!4975 = !DILocation(line: 309, column: 24, scope: !4974)
!4976 = !DILocation(line: 309, column: 23, scope: !4974)
!4977 = !DILocation(line: 309, column: 21, scope: !4974)
!4978 = !DILocation(line: 309, column: 7, scope: !4970)
!4979 = !DILocation(line: 310, column: 27, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 309, column: 40)
!4981 = !DILocation(line: 310, column: 32, scope: !4980)
!4982 = !DILocation(line: 310, column: 35, scope: !4980)
!4983 = !DILocation(line: 310, column: 26, scope: !4980)
!4984 = !DILocation(line: 311, column: 28, scope: !4980)
!4985 = !DILocation(line: 311, column: 32, scope: !4980)
!4986 = !DILocation(line: 311, column: 38, scope: !4980)
!4987 = !DILocation(line: 310, column: 10, scope: !4980)
!4988 = !DILocation(line: 310, column: 9, scope: !4980)
!4989 = !DILocation(line: 310, column: 21, scope: !4980)
!4990 = !DILocation(line: 310, column: 8, scope: !4980)
!4991 = !DILocation(line: 310, column: 24, scope: !4980)
!4992 = !DILocation(line: 312, column: 7, scope: !4980)
!4993 = !DILocation(line: 309, column: 36, scope: !4974)
!4994 = !DILocation(line: 309, column: 7, scope: !4974)
!4995 = distinct !{!4995, !4978, !4996}
!4996 = !DILocation(line: 312, column: 7, scope: !4970)
!4997 = !DILocation(line: 313, column: 6, scope: !4971)
!4998 = !DILocation(line: 315, column: 14, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 315, column: 7)
!5000 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 314, column: 11)
!5001 = !DILocation(line: 315, column: 12, scope: !4999)
!5002 = !DILocation(line: 315, column: 19, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 315, column: 7)
!5004 = !DILocation(line: 315, column: 24, scope: !5003)
!5005 = !DILocation(line: 315, column: 23, scope: !5003)
!5006 = !DILocation(line: 315, column: 21, scope: !5003)
!5007 = !DILocation(line: 315, column: 7, scope: !4999)
!5008 = !DILocation(line: 316, column: 26, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 315, column: 40)
!5010 = !DILocation(line: 316, column: 30, scope: !5009)
!5011 = !DILocation(line: 316, column: 38, scope: !5009)
!5012 = !DILocation(line: 316, column: 36, scope: !5009)
!5013 = !DILocation(line: 316, column: 10, scope: !5009)
!5014 = !DILocation(line: 316, column: 9, scope: !5009)
!5015 = !DILocation(line: 316, column: 21, scope: !5009)
!5016 = !DILocation(line: 316, column: 8, scope: !5009)
!5017 = !DILocation(line: 316, column: 24, scope: !5009)
!5018 = !DILocation(line: 317, column: 7, scope: !5009)
!5019 = !DILocation(line: 315, column: 36, scope: !5003)
!5020 = !DILocation(line: 315, column: 7, scope: !5003)
!5021 = distinct !{!5021, !5007, !5022}
!5022 = !DILocation(line: 317, column: 7, scope: !4999)
!5023 = !DILocation(line: 320, column: 6, scope: !4945)
!5024 = !DILocation(line: 322, column: 5, scope: !4926)
!5025 = !DILocation(line: 325, column: 2, scope: !4752)
!5026 = !DILocation(line: 327, column: 2, scope: !4732)
!5027 = !DILocation(line: 328, column: 1, scope: !4732)
!5028 = distinct !DISubprogram(name: "BM_iter_new", scope: !5029, file: !5029, line: 172, type: !5030, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5029 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5030 = !DISubroutineType(types: !5031)
!5031 = !{!1226, !5032, !1746, !1711, !1226}
!5032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!5033 = !DILocalVariable(name: "iter", arg: 1, scope: !5028, file: !5029, line: 172, type: !5032)
!5034 = !DILocation(line: 172, column: 38, scope: !5028)
!5035 = !DILocalVariable(name: "bm", arg: 2, scope: !5028, file: !5029, line: 172, type: !1746)
!5036 = !DILocation(line: 172, column: 51, scope: !5028)
!5037 = !DILocalVariable(name: "itype", arg: 3, scope: !5028, file: !5029, line: 172, type: !1711)
!5038 = !DILocation(line: 172, column: 66, scope: !5028)
!5039 = !DILocalVariable(name: "data", arg: 4, scope: !5028, file: !5029, line: 172, type: !1226)
!5040 = !DILocation(line: 172, column: 79, scope: !5028)
!5041 = !DILocation(line: 174, column: 6, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5028, file: !5029, line: 174, column: 6)
!5043 = !DILocation(line: 174, column: 6, scope: !5028)
!5044 = !DILocation(line: 175, column: 23, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5042, file: !5029, line: 174, column: 51)
!5046 = !DILocation(line: 175, column: 10, scope: !5045)
!5047 = !DILocation(line: 175, column: 3, scope: !5045)
!5048 = !DILocation(line: 178, column: 3, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5042, file: !5029, line: 177, column: 7)
!5050 = !DILocation(line: 180, column: 1, scope: !5028)
!5051 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !5052, file: !5052, line: 42, type: !5053, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5052 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!1253, !5055, !1711}
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!5057 = !DILocalVariable(name: "head", arg: 1, scope: !5051, file: !5052, line: 42, type: !5055)
!5058 = !DILocation(line: 42, column: 52, scope: !5051)
!5059 = !DILocalVariable(name: "hflag", arg: 2, scope: !5051, file: !5052, line: 42, type: !1711)
!5060 = !DILocation(line: 42, column: 69, scope: !5051)
!5061 = !DILocation(line: 44, column: 9, scope: !5051)
!5062 = !DILocation(line: 44, column: 15, scope: !5051)
!5063 = !DILocation(line: 44, column: 23, scope: !5051)
!5064 = !DILocation(line: 44, column: 21, scope: !5051)
!5065 = !DILocation(line: 44, column: 2, scope: !5051)
!5066 = distinct !DISubprogram(name: "BM_iter_step", scope: !5029, file: !5029, line: 40, type: !5067, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!1226, !5032}
!5069 = !DILocalVariable(name: "iter", arg: 1, scope: !5066, file: !5029, line: 40, type: !5032)
!5070 = !DILocation(line: 40, column: 39, scope: !5066)
!5071 = !DILocation(line: 42, column: 9, scope: !5066)
!5072 = !DILocation(line: 42, column: 15, scope: !5066)
!5073 = !DILocation(line: 42, column: 20, scope: !5066)
!5074 = !DILocation(line: 42, column: 2, scope: !5066)
!5075 = distinct !DISubprogram(name: "ED_vgroup_parray_mirror_sync", scope: !3, file: !3, line: 361, type: !5076, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5076 = !DISubroutineType(types: !5077)
!5077 = !{null, !3872, !4668, !4075, !5078, !4075}
!5078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!5079 = !DILocalVariable(name: "ob", arg: 1, scope: !5075, file: !3, line: 361, type: !3872)
!5080 = !DILocation(line: 361, column: 43, scope: !5075)
!5081 = !DILocalVariable(name: "dvert_array", arg: 2, scope: !5075, file: !3, line: 362, type: !4668)
!5082 = !DILocation(line: 362, column: 49, scope: !5075)
!5083 = !DILocalVariable(name: "dvert_tot", arg: 3, scope: !5075, file: !3, line: 362, type: !4075)
!5084 = !DILocation(line: 362, column: 72, scope: !5075)
!5085 = !DILocalVariable(name: "vgroup_validmap", arg: 4, scope: !5075, file: !3, line: 363, type: !5078)
!5086 = !DILocation(line: 363, column: 47, scope: !5075)
!5087 = !DILocalVariable(name: "vgroup_tot", arg: 5, scope: !5075, file: !3, line: 363, type: !4075)
!5088 = !DILocation(line: 363, column: 74, scope: !5075)
!5089 = !DILocalVariable(name: "em", scope: !5075, file: !3, line: 365, type: !4100)
!5090 = !DILocation(line: 365, column: 14, scope: !5075)
!5091 = !DILocation(line: 365, column: 44, scope: !5075)
!5092 = !DILocation(line: 365, column: 19, scope: !5075)
!5093 = !DILocalVariable(name: "dvert_array_all", scope: !5075, file: !3, line: 366, type: !4668)
!5094 = !DILocation(line: 366, column: 16, scope: !5075)
!5095 = !DILocalVariable(name: "dvert_tot_all", scope: !5075, file: !3, line: 367, type: !354)
!5096 = !DILocation(line: 367, column: 6, scope: !5075)
!5097 = !DILocalVariable(name: "i", scope: !5075, file: !3, line: 368, type: !354)
!5098 = !DILocation(line: 368, column: 6, scope: !5075)
!5099 = !DILocation(line: 371, column: 29, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 371, column: 6)
!5101 = !DILocation(line: 371, column: 33, scope: !5100)
!5102 = !DILocation(line: 371, column: 6, scope: !5100)
!5103 = !DILocation(line: 371, column: 80, scope: !5100)
!5104 = !DILocation(line: 371, column: 6, scope: !5075)
!5105 = !DILocation(line: 373, column: 3, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 371, column: 90)
!5107 = !DILocation(line: 375, column: 6, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 375, column: 6)
!5109 = !DILocation(line: 375, column: 6, scope: !5075)
!5110 = !DILocation(line: 376, column: 29, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 375, column: 10)
!5112 = !DILocation(line: 376, column: 33, scope: !5111)
!5113 = !DILocation(line: 376, column: 3, scope: !5111)
!5114 = !DILocation(line: 377, column: 2, scope: !5111)
!5115 = !DILocation(line: 379, column: 9, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 379, column: 2)
!5117 = !DILocation(line: 379, column: 7, scope: !5116)
!5118 = !DILocation(line: 379, column: 14, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 379, column: 2)
!5120 = !DILocation(line: 379, column: 18, scope: !5119)
!5121 = !DILocation(line: 379, column: 16, scope: !5119)
!5122 = !DILocation(line: 379, column: 2, scope: !5116)
!5123 = !DILocation(line: 380, column: 7, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 380, column: 7)
!5125 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 379, column: 34)
!5126 = !DILocation(line: 380, column: 19, scope: !5124)
!5127 = !DILocation(line: 380, column: 22, scope: !5124)
!5128 = !DILocation(line: 380, column: 7, scope: !5125)
!5129 = !DILocalVariable(name: "i_sel", scope: !5130, file: !3, line: 382, type: !354)
!5130 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 380, column: 31)
!5131 = !DILocation(line: 382, column: 8, scope: !5130)
!5132 = !DILocation(line: 382, column: 40, scope: !5130)
!5133 = !DILocation(line: 382, column: 44, scope: !5130)
!5134 = !DILocation(line: 382, column: 16, scope: !5130)
!5135 = !DILocation(line: 383, column: 9, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 383, column: 8)
!5137 = !DILocation(line: 383, column: 15, scope: !5136)
!5138 = !DILocation(line: 383, column: 22, scope: !5136)
!5139 = !DILocation(line: 383, column: 26, scope: !5136)
!5140 = !DILocation(line: 383, column: 35, scope: !5136)
!5141 = !DILocation(line: 383, column: 32, scope: !5136)
!5142 = !DILocation(line: 383, column: 38, scope: !5136)
!5143 = !DILocation(line: 383, column: 42, scope: !5136)
!5144 = !DILocation(line: 383, column: 54, scope: !5136)
!5145 = !DILocation(line: 383, column: 41, scope: !5136)
!5146 = !DILocation(line: 383, column: 8, scope: !5130)
!5147 = !DILocalVariable(name: "dv_src", scope: !5148, file: !3, line: 385, type: !4203)
!5148 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 383, column: 63)
!5149 = !DILocation(line: 385, column: 18, scope: !5148)
!5150 = !DILocation(line: 385, column: 27, scope: !5148)
!5151 = !DILocation(line: 385, column: 39, scope: !5148)
!5152 = !DILocalVariable(name: "dv_dst", scope: !5148, file: !3, line: 386, type: !4203)
!5153 = !DILocation(line: 386, column: 18, scope: !5148)
!5154 = !DILocation(line: 386, column: 27, scope: !5148)
!5155 = !DILocation(line: 386, column: 43, scope: !5148)
!5156 = !DILocation(line: 388, column: 25, scope: !5148)
!5157 = !DILocation(line: 388, column: 33, scope: !5148)
!5158 = !DILocation(line: 388, column: 41, scope: !5148)
!5159 = !DILocation(line: 388, column: 58, scope: !5148)
!5160 = !DILocation(line: 388, column: 5, scope: !5148)
!5161 = !DILocation(line: 390, column: 22, scope: !5148)
!5162 = !DILocation(line: 390, column: 38, scope: !5148)
!5163 = !DILocation(line: 390, column: 5, scope: !5148)
!5164 = !DILocation(line: 390, column: 17, scope: !5148)
!5165 = !DILocation(line: 390, column: 20, scope: !5148)
!5166 = !DILocation(line: 391, column: 4, scope: !5148)
!5167 = !DILocation(line: 392, column: 3, scope: !5130)
!5168 = !DILocation(line: 393, column: 2, scope: !5125)
!5169 = !DILocation(line: 379, column: 30, scope: !5119)
!5170 = !DILocation(line: 379, column: 2, scope: !5119)
!5171 = distinct !{!5171, !5122, !5172}
!5172 = !DILocation(line: 393, column: 2, scope: !5116)
!5173 = !DILocation(line: 395, column: 2, scope: !5075)
!5174 = !DILocation(line: 395, column: 12, scope: !5075)
!5175 = !DILocation(line: 396, column: 1, scope: !5075)
!5176 = distinct !DISubprogram(name: "ED_vgroup_parray_mirror_assign", scope: !3, file: !3, line: 403, type: !5177, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{null, !3872, !4668, !4075}
!5179 = !DILocalVariable(name: "ob", arg: 1, scope: !5176, file: !3, line: 403, type: !3872)
!5180 = !DILocation(line: 403, column: 45, scope: !5176)
!5181 = !DILocalVariable(name: "dvert_array", arg: 2, scope: !5176, file: !3, line: 404, type: !4668)
!5182 = !DILocation(line: 404, column: 51, scope: !5176)
!5183 = !DILocalVariable(name: "dvert_tot", arg: 3, scope: !5176, file: !3, line: 404, type: !4075)
!5184 = !DILocation(line: 404, column: 74, scope: !5176)
!5185 = !DILocalVariable(name: "em", scope: !5176, file: !3, line: 406, type: !4100)
!5186 = !DILocation(line: 406, column: 14, scope: !5176)
!5187 = !DILocation(line: 406, column: 44, scope: !5176)
!5188 = !DILocation(line: 406, column: 19, scope: !5176)
!5189 = !DILocalVariable(name: "dvert_array_all", scope: !5176, file: !3, line: 407, type: !4668)
!5190 = !DILocation(line: 407, column: 16, scope: !5176)
!5191 = !DILocalVariable(name: "dvert_tot_all", scope: !5176, file: !3, line: 408, type: !354)
!5192 = !DILocation(line: 408, column: 6, scope: !5176)
!5193 = !DILocalVariable(name: "i", scope: !5176, file: !3, line: 409, type: !354)
!5194 = !DILocation(line: 409, column: 6, scope: !5176)
!5195 = !DILocation(line: 412, column: 29, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 412, column: 6)
!5197 = !DILocation(line: 412, column: 33, scope: !5196)
!5198 = !DILocation(line: 412, column: 6, scope: !5196)
!5199 = !DILocation(line: 412, column: 80, scope: !5196)
!5200 = !DILocation(line: 412, column: 6, scope: !5176)
!5201 = !DILocation(line: 414, column: 3, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 412, column: 90)
!5203 = !DILocation(line: 417, column: 6, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 417, column: 6)
!5205 = !DILocation(line: 417, column: 6, scope: !5176)
!5206 = !DILocation(line: 418, column: 29, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 417, column: 10)
!5208 = !DILocation(line: 418, column: 33, scope: !5207)
!5209 = !DILocation(line: 418, column: 3, scope: !5207)
!5210 = !DILocation(line: 419, column: 2, scope: !5207)
!5211 = !DILocation(line: 421, column: 9, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 421, column: 2)
!5213 = !DILocation(line: 421, column: 7, scope: !5212)
!5214 = !DILocation(line: 421, column: 14, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 421, column: 2)
!5216 = !DILocation(line: 421, column: 18, scope: !5215)
!5217 = !DILocation(line: 421, column: 16, scope: !5215)
!5218 = !DILocation(line: 421, column: 2, scope: !5212)
!5219 = !DILocation(line: 422, column: 7, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 422, column: 7)
!5221 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 421, column: 34)
!5222 = !DILocation(line: 422, column: 19, scope: !5220)
!5223 = !DILocation(line: 422, column: 22, scope: !5220)
!5224 = !DILocation(line: 422, column: 7, scope: !5221)
!5225 = !DILocalVariable(name: "i_sel", scope: !5226, file: !3, line: 424, type: !354)
!5226 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 422, column: 31)
!5227 = !DILocation(line: 424, column: 8, scope: !5226)
!5228 = !DILocation(line: 424, column: 40, scope: !5226)
!5229 = !DILocation(line: 424, column: 44, scope: !5226)
!5230 = !DILocation(line: 424, column: 16, scope: !5226)
!5231 = !DILocation(line: 425, column: 9, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 425, column: 8)
!5233 = !DILocation(line: 425, column: 15, scope: !5232)
!5234 = !DILocation(line: 425, column: 22, scope: !5232)
!5235 = !DILocation(line: 425, column: 26, scope: !5232)
!5236 = !DILocation(line: 425, column: 35, scope: !5232)
!5237 = !DILocation(line: 425, column: 32, scope: !5232)
!5238 = !DILocation(line: 425, column: 38, scope: !5232)
!5239 = !DILocation(line: 425, column: 42, scope: !5232)
!5240 = !DILocation(line: 425, column: 54, scope: !5232)
!5241 = !DILocation(line: 425, column: 41, scope: !5232)
!5242 = !DILocation(line: 425, column: 8, scope: !5226)
!5243 = !DILocation(line: 427, column: 22, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 425, column: 63)
!5245 = !DILocation(line: 427, column: 38, scope: !5244)
!5246 = !DILocation(line: 427, column: 5, scope: !5244)
!5247 = !DILocation(line: 427, column: 17, scope: !5244)
!5248 = !DILocation(line: 427, column: 20, scope: !5244)
!5249 = !DILocation(line: 428, column: 4, scope: !5244)
!5250 = !DILocation(line: 429, column: 3, scope: !5226)
!5251 = !DILocation(line: 430, column: 2, scope: !5221)
!5252 = !DILocation(line: 421, column: 30, scope: !5215)
!5253 = !DILocation(line: 421, column: 2, scope: !5215)
!5254 = distinct !{!5254, !5218, !5255}
!5255 = !DILocation(line: 430, column: 2, scope: !5212)
!5256 = !DILocation(line: 432, column: 2, scope: !5176)
!5257 = !DILocation(line: 432, column: 12, scope: !5176)
!5258 = !DILocation(line: 433, column: 1, scope: !5176)
!5259 = distinct !DISubprogram(name: "ED_vgroup_parray_remove_zero", scope: !3, file: !3, line: 435, type: !5260, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{null, !4668, !4075, !5078, !4075, !1851, !3381}
!5262 = !DILocalVariable(name: "dvert_array", arg: 1, scope: !5259, file: !3, line: 435, type: !4668)
!5263 = !DILocation(line: 435, column: 49, scope: !5259)
!5264 = !DILocalVariable(name: "dvert_tot", arg: 2, scope: !5259, file: !3, line: 435, type: !4075)
!5265 = !DILocation(line: 435, column: 72, scope: !5259)
!5266 = !DILocalVariable(name: "vgroup_validmap", arg: 3, scope: !5259, file: !3, line: 436, type: !5078)
!5267 = !DILocation(line: 436, column: 47, scope: !5259)
!5268 = !DILocalVariable(name: "vgroup_tot", arg: 4, scope: !5259, file: !3, line: 436, type: !4075)
!5269 = !DILocation(line: 436, column: 74, scope: !5259)
!5270 = !DILocalVariable(name: "epsilon", arg: 5, scope: !5259, file: !3, line: 437, type: !1851)
!5271 = !DILocation(line: 437, column: 47, scope: !5259)
!5272 = !DILocalVariable(name: "keep_single", arg: 6, scope: !5259, file: !3, line: 437, type: !3381)
!5273 = !DILocation(line: 437, column: 67, scope: !5259)
!5274 = !DILocalVariable(name: "dv", scope: !5259, file: !3, line: 439, type: !4203)
!5275 = !DILocation(line: 439, column: 15, scope: !5259)
!5276 = !DILocalVariable(name: "i", scope: !5259, file: !3, line: 440, type: !354)
!5277 = !DILocation(line: 440, column: 6, scope: !5259)
!5278 = !DILocation(line: 442, column: 9, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 442, column: 2)
!5280 = !DILocation(line: 442, column: 7, scope: !5279)
!5281 = !DILocation(line: 442, column: 14, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 442, column: 2)
!5283 = !DILocation(line: 442, column: 18, scope: !5282)
!5284 = !DILocation(line: 442, column: 16, scope: !5282)
!5285 = !DILocation(line: 442, column: 2, scope: !5279)
!5286 = !DILocalVariable(name: "j", scope: !5287, file: !3, line: 443, type: !354)
!5287 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 442, column: 34)
!5288 = !DILocation(line: 443, column: 7, scope: !5287)
!5289 = !DILocation(line: 446, column: 14, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 446, column: 7)
!5291 = !DILocation(line: 446, column: 26, scope: !5290)
!5292 = !DILocation(line: 446, column: 12, scope: !5290)
!5293 = !DILocation(line: 446, column: 7, scope: !5287)
!5294 = !DILocation(line: 447, column: 4, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 446, column: 31)
!5296 = !DILocation(line: 450, column: 7, scope: !5287)
!5297 = !DILocation(line: 450, column: 11, scope: !5287)
!5298 = !DILocation(line: 450, column: 5, scope: !5287)
!5299 = !DILocation(line: 452, column: 3, scope: !5287)
!5300 = !DILocation(line: 452, column: 11, scope: !5287)
!5301 = !DILocalVariable(name: "dw", scope: !5302, file: !3, line: 453, type: !4449)
!5302 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 452, column: 15)
!5303 = !DILocation(line: 453, column: 19, scope: !5302)
!5304 = !DILocation(line: 455, column: 8, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 455, column: 8)
!5306 = !DILocation(line: 455, column: 20, scope: !5305)
!5307 = !DILocation(line: 455, column: 23, scope: !5305)
!5308 = !DILocation(line: 455, column: 27, scope: !5305)
!5309 = !DILocation(line: 455, column: 37, scope: !5305)
!5310 = !DILocation(line: 455, column: 8, scope: !5302)
!5311 = !DILocation(line: 456, column: 5, scope: !5305)
!5312 = !DILocation(line: 458, column: 9, scope: !5302)
!5313 = !DILocation(line: 458, column: 13, scope: !5302)
!5314 = !DILocation(line: 458, column: 18, scope: !5302)
!5315 = !DILocation(line: 458, column: 16, scope: !5302)
!5316 = !DILocation(line: 458, column: 7, scope: !5302)
!5317 = !DILocation(line: 459, column: 9, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 459, column: 8)
!5319 = !DILocation(line: 459, column: 13, scope: !5318)
!5320 = !DILocation(line: 459, column: 22, scope: !5318)
!5321 = !DILocation(line: 459, column: 20, scope: !5318)
!5322 = !DILocation(line: 459, column: 34, scope: !5318)
!5323 = !DILocation(line: 459, column: 37, scope: !5318)
!5324 = !DILocation(line: 459, column: 53, scope: !5318)
!5325 = !DILocation(line: 459, column: 57, scope: !5318)
!5326 = !DILocation(line: 459, column: 8, scope: !5302)
!5327 = !DILocation(line: 460, column: 9, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 460, column: 9)
!5329 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 459, column: 66)
!5330 = !DILocation(line: 460, column: 13, scope: !5328)
!5331 = !DILocation(line: 460, column: 23, scope: !5328)
!5332 = !DILocation(line: 460, column: 20, scope: !5328)
!5333 = !DILocation(line: 460, column: 9, scope: !5329)
!5334 = !DILocation(line: 461, column: 27, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 460, column: 32)
!5336 = !DILocation(line: 461, column: 31, scope: !5335)
!5337 = !DILocation(line: 461, column: 6, scope: !5335)
!5338 = !DILocation(line: 462, column: 5, scope: !5335)
!5339 = !DILocation(line: 463, column: 4, scope: !5329)
!5340 = distinct !{!5340, !5299, !5341}
!5341 = !DILocation(line: 464, column: 3, scope: !5287)
!5342 = !DILocation(line: 465, column: 2, scope: !5287)
!5343 = !DILocation(line: 442, column: 30, scope: !5282)
!5344 = !DILocation(line: 442, column: 2, scope: !5282)
!5345 = distinct !{!5345, !5285, !5346}
!5346 = !DILocation(line: 465, column: 2, scope: !5279)
!5347 = !DILocation(line: 466, column: 1, scope: !5259)
!5348 = distinct !DISubprogram(name: "ED_vgroup_array_get", scope: !3, file: !3, line: 469, type: !5349, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{!2436, !1247, !4668, !1972}
!5351 = !DILocalVariable(name: "id", arg: 1, scope: !5348, file: !3, line: 469, type: !1247)
!5352 = !DILocation(line: 469, column: 30, scope: !5348)
!5353 = !DILocalVariable(name: "dvert_arr", arg: 2, scope: !5348, file: !3, line: 469, type: !4668)
!5354 = !DILocation(line: 469, column: 48, scope: !5348)
!5355 = !DILocalVariable(name: "dvert_tot", arg: 3, scope: !5348, file: !3, line: 469, type: !1972)
!5356 = !DILocation(line: 469, column: 64, scope: !5348)
!5357 = !DILocation(line: 471, column: 6, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 471, column: 6)
!5359 = !DILocation(line: 471, column: 6, scope: !5348)
!5360 = !DILocation(line: 472, column: 11, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 471, column: 10)
!5362 = !DILocation(line: 472, column: 3, scope: !5361)
!5363 = !DILocalVariable(name: "me", scope: !5364, file: !3, line: 475, type: !1383)
!5364 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 474, column: 4)
!5365 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 472, column: 25)
!5366 = !DILocation(line: 475, column: 11, scope: !5364)
!5367 = !DILocation(line: 475, column: 24, scope: !5364)
!5368 = !DILocation(line: 475, column: 16, scope: !5364)
!5369 = !DILocation(line: 476, column: 18, scope: !5364)
!5370 = !DILocation(line: 476, column: 22, scope: !5364)
!5371 = !DILocation(line: 476, column: 6, scope: !5364)
!5372 = !DILocation(line: 476, column: 16, scope: !5364)
!5373 = !DILocation(line: 477, column: 18, scope: !5364)
!5374 = !DILocation(line: 477, column: 22, scope: !5364)
!5375 = !DILocation(line: 477, column: 6, scope: !5364)
!5376 = !DILocation(line: 477, column: 16, scope: !5364)
!5377 = !DILocation(line: 478, column: 5, scope: !5364)
!5378 = !DILocalVariable(name: "lt", scope: !5379, file: !3, line: 482, type: !1227)
!5379 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 481, column: 4)
!5380 = !DILocation(line: 482, column: 14, scope: !5379)
!5381 = !DILocation(line: 482, column: 30, scope: !5379)
!5382 = !DILocation(line: 482, column: 19, scope: !5379)
!5383 = !DILocation(line: 483, column: 11, scope: !5379)
!5384 = !DILocation(line: 483, column: 15, scope: !5379)
!5385 = !DILocation(line: 483, column: 10, scope: !5379)
!5386 = !DILocation(line: 483, column: 27, scope: !5379)
!5387 = !DILocation(line: 483, column: 31, scope: !5379)
!5388 = !DILocation(line: 483, column: 41, scope: !5379)
!5389 = !DILocation(line: 483, column: 48, scope: !5379)
!5390 = !DILocation(line: 483, column: 8, scope: !5379)
!5391 = !DILocation(line: 484, column: 18, scope: !5379)
!5392 = !DILocation(line: 484, column: 22, scope: !5379)
!5393 = !DILocation(line: 484, column: 6, scope: !5379)
!5394 = !DILocation(line: 484, column: 16, scope: !5379)
!5395 = !DILocation(line: 485, column: 18, scope: !5379)
!5396 = !DILocation(line: 485, column: 22, scope: !5379)
!5397 = !DILocation(line: 485, column: 30, scope: !5379)
!5398 = !DILocation(line: 485, column: 34, scope: !5379)
!5399 = !DILocation(line: 485, column: 28, scope: !5379)
!5400 = !DILocation(line: 485, column: 42, scope: !5379)
!5401 = !DILocation(line: 485, column: 46, scope: !5379)
!5402 = !DILocation(line: 485, column: 40, scope: !5379)
!5403 = !DILocation(line: 485, column: 6, scope: !5379)
!5404 = !DILocation(line: 485, column: 16, scope: !5379)
!5405 = !DILocation(line: 486, column: 5, scope: !5379)
!5406 = !DILocation(line: 489, column: 2, scope: !5361)
!5407 = !DILocation(line: 491, column: 3, scope: !5348)
!5408 = !DILocation(line: 491, column: 13, scope: !5348)
!5409 = !DILocation(line: 492, column: 3, scope: !5348)
!5410 = !DILocation(line: 492, column: 13, scope: !5348)
!5411 = !DILocation(line: 493, column: 2, scope: !5348)
!5412 = !DILocation(line: 494, column: 1, scope: !5348)
!5413 = distinct !DISubprogram(name: "ED_vgroup_array_copy", scope: !3, file: !3, line: 497, type: !5414, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5414 = !DISubroutineType(types: !5415)
!5415 = !{!2436, !3872, !3872}
!5416 = !DILocalVariable(name: "ob", arg: 1, scope: !5413, file: !3, line: 497, type: !3872)
!5417 = !DILocation(line: 497, column: 35, scope: !5413)
!5418 = !DILocalVariable(name: "ob_from", arg: 2, scope: !5413, file: !3, line: 497, type: !3872)
!5419 = !DILocation(line: 497, column: 47, scope: !5413)
!5420 = !DILocalVariable(name: "dvert_array_from", scope: !5413, file: !3, line: 499, type: !4668)
!5421 = !DILocation(line: 499, column: 16, scope: !5413)
!5422 = !DILocalVariable(name: "dvf", scope: !5413, file: !3, line: 499, type: !4668)
!5423 = !DILocation(line: 499, column: 36, scope: !5413)
!5424 = !DILocalVariable(name: "dvert_array", scope: !5413, file: !3, line: 500, type: !4668)
!5425 = !DILocation(line: 500, column: 16, scope: !5413)
!5426 = !DILocalVariable(name: "dv", scope: !5413, file: !3, line: 500, type: !4668)
!5427 = !DILocation(line: 500, column: 31, scope: !5413)
!5428 = !DILocalVariable(name: "dvert_tot_from", scope: !5413, file: !3, line: 501, type: !354)
!5429 = !DILocation(line: 501, column: 6, scope: !5413)
!5430 = !DILocalVariable(name: "dvert_tot", scope: !5413, file: !3, line: 502, type: !354)
!5431 = !DILocation(line: 502, column: 6, scope: !5413)
!5432 = !DILocalVariable(name: "i", scope: !5413, file: !3, line: 503, type: !354)
!5433 = !DILocation(line: 503, column: 6, scope: !5413)
!5434 = !DILocalVariable(name: "defbase_tot_from", scope: !5413, file: !3, line: 504, type: !354)
!5435 = !DILocation(line: 504, column: 6, scope: !5413)
!5436 = !DILocation(line: 504, column: 40, scope: !5413)
!5437 = !DILocation(line: 504, column: 49, scope: !5413)
!5438 = !DILocation(line: 504, column: 25, scope: !5413)
!5439 = !DILocalVariable(name: "defbase_tot", scope: !5413, file: !3, line: 505, type: !354)
!5440 = !DILocation(line: 505, column: 6, scope: !5413)
!5441 = !DILocation(line: 505, column: 35, scope: !5413)
!5442 = !DILocation(line: 505, column: 39, scope: !5413)
!5443 = !DILocation(line: 505, column: 20, scope: !5413)
!5444 = !DILocalVariable(name: "new_vgroup", scope: !5413, file: !3, line: 506, type: !2436)
!5445 = !DILocation(line: 506, column: 7, scope: !5413)
!5446 = !DILocation(line: 508, column: 6, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 508, column: 6)
!5448 = !DILocation(line: 508, column: 12, scope: !5447)
!5449 = !DILocation(line: 508, column: 9, scope: !5447)
!5450 = !DILocation(line: 508, column: 6, scope: !5413)
!5451 = !DILocation(line: 509, column: 3, scope: !5447)
!5452 = !DILocation(line: 511, column: 25, scope: !5413)
!5453 = !DILocation(line: 511, column: 34, scope: !5413)
!5454 = !DILocation(line: 511, column: 2, scope: !5413)
!5455 = !DILocation(line: 512, column: 25, scope: !5413)
!5456 = !DILocation(line: 512, column: 29, scope: !5413)
!5457 = !DILocation(line: 512, column: 2, scope: !5413)
!5458 = !DILocation(line: 514, column: 7, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 514, column: 6)
!5460 = !DILocation(line: 514, column: 19, scope: !5459)
!5461 = !DILocation(line: 514, column: 28, scope: !5459)
!5462 = !DILocation(line: 514, column: 32, scope: !5459)
!5463 = !DILocation(line: 514, column: 49, scope: !5459)
!5464 = !DILocation(line: 514, column: 58, scope: !5459)
!5465 = !DILocation(line: 514, column: 83, scope: !5459)
!5466 = !DILocation(line: 514, column: 87, scope: !5459)
!5467 = !DILocation(line: 514, column: 61, scope: !5459)
!5468 = !DILocation(line: 514, column: 6, scope: !5413)
!5469 = !DILocation(line: 515, column: 26, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 514, column: 94)
!5471 = !DILocation(line: 515, column: 30, scope: !5470)
!5472 = !DILocation(line: 515, column: 3, scope: !5470)
!5473 = !DILocation(line: 516, column: 14, scope: !5470)
!5474 = !DILocation(line: 517, column: 2, scope: !5470)
!5475 = !DILocation(line: 519, column: 6, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 519, column: 6)
!5477 = !DILocation(line: 519, column: 16, scope: !5476)
!5478 = !DILocation(line: 519, column: 21, scope: !5476)
!5479 = !DILocation(line: 519, column: 25, scope: !5476)
!5480 = !DILocation(line: 519, column: 38, scope: !5476)
!5481 = !DILocation(line: 519, column: 35, scope: !5476)
!5482 = !DILocation(line: 519, column: 54, scope: !5476)
!5483 = !DILocation(line: 519, column: 57, scope: !5476)
!5484 = !DILocation(line: 519, column: 74, scope: !5476)
!5485 = !DILocation(line: 519, column: 82, scope: !5476)
!5486 = !DILocation(line: 519, column: 85, scope: !5476)
!5487 = !DILocation(line: 519, column: 97, scope: !5476)
!5488 = !DILocation(line: 519, column: 6, scope: !5413)
!5489 = !DILocation(line: 521, column: 7, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 521, column: 7)
!5491 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 519, column: 106)
!5492 = !DILocation(line: 521, column: 7, scope: !5491)
!5493 = !DILocation(line: 521, column: 20, scope: !5490)
!5494 = !DILocation(line: 521, column: 30, scope: !5490)
!5495 = !DILocation(line: 522, column: 7, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 522, column: 7)
!5497 = !DILocation(line: 522, column: 7, scope: !5491)
!5498 = !DILocation(line: 522, column: 25, scope: !5496)
!5499 = !DILocation(line: 522, column: 35, scope: !5496)
!5500 = !DILocation(line: 524, column: 7, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 524, column: 7)
!5502 = !DILocation(line: 524, column: 18, scope: !5501)
!5503 = !DILocation(line: 524, column: 7, scope: !5491)
!5504 = !DILocation(line: 526, column: 22, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 524, column: 27)
!5506 = !DILocation(line: 526, column: 4, scope: !5505)
!5507 = !DILocation(line: 527, column: 3, scope: !5505)
!5508 = !DILocation(line: 530, column: 11, scope: !5491)
!5509 = !DILocation(line: 530, column: 24, scope: !5491)
!5510 = !DILocation(line: 530, column: 21, scope: !5491)
!5511 = !DILocation(line: 530, column: 10, scope: !5491)
!5512 = !DILocation(line: 530, column: 3, scope: !5491)
!5513 = !DILocation(line: 534, column: 17, scope: !5413)
!5514 = !DILocation(line: 534, column: 21, scope: !5413)
!5515 = !DILocation(line: 534, column: 2, scope: !5413)
!5516 = !DILocation(line: 535, column: 21, scope: !5413)
!5517 = !DILocation(line: 535, column: 25, scope: !5413)
!5518 = !DILocation(line: 535, column: 35, scope: !5413)
!5519 = !DILocation(line: 535, column: 44, scope: !5413)
!5520 = !DILocation(line: 535, column: 2, scope: !5413)
!5521 = !DILocation(line: 536, column: 15, scope: !5413)
!5522 = !DILocation(line: 536, column: 24, scope: !5413)
!5523 = !DILocation(line: 536, column: 2, scope: !5413)
!5524 = !DILocation(line: 536, column: 6, scope: !5413)
!5525 = !DILocation(line: 536, column: 13, scope: !5413)
!5526 = !DILocation(line: 538, column: 6, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 538, column: 6)
!5528 = !DILocation(line: 538, column: 25, scope: !5527)
!5529 = !DILocation(line: 538, column: 23, scope: !5527)
!5530 = !DILocation(line: 538, column: 6, scope: !5413)
!5531 = !DILocalVariable(name: "remap", scope: !5532, file: !3, line: 540, type: !1972)
!5532 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 538, column: 38)
!5533 = !DILocation(line: 540, column: 8, scope: !5532)
!5534 = !DILocation(line: 540, column: 16, scope: !5532)
!5535 = !DILocation(line: 540, column: 43, scope: !5532)
!5536 = !DILocation(line: 540, column: 55, scope: !5532)
!5537 = !DILocation(line: 540, column: 42, scope: !5532)
!5538 = !DILocation(line: 540, column: 40, scope: !5532)
!5539 = !DILocation(line: 541, column: 10, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 541, column: 3)
!5541 = !DILocation(line: 541, column: 8, scope: !5540)
!5542 = !DILocation(line: 541, column: 15, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 541, column: 3)
!5544 = !DILocation(line: 541, column: 20, scope: !5543)
!5545 = !DILocation(line: 541, column: 17, scope: !5543)
!5546 = !DILocation(line: 541, column: 3, scope: !5540)
!5547 = !DILocation(line: 541, column: 54, scope: !5543)
!5548 = !DILocation(line: 541, column: 43, scope: !5543)
!5549 = !DILocation(line: 541, column: 49, scope: !5543)
!5550 = !DILocation(line: 541, column: 52, scope: !5543)
!5551 = !DILocation(line: 541, column: 39, scope: !5543)
!5552 = !DILocation(line: 541, column: 3, scope: !5543)
!5553 = distinct !{!5553, !5546, !5554}
!5554 = !DILocation(line: 541, column: 54, scope: !5540)
!5555 = !DILocation(line: 542, column: 3, scope: !5532)
!5556 = !DILocation(line: 542, column: 10, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 542, column: 3)
!5558 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 542, column: 3)
!5559 = !DILocation(line: 542, column: 15, scope: !5557)
!5560 = !DILocation(line: 542, column: 12, scope: !5557)
!5561 = !DILocation(line: 542, column: 3, scope: !5558)
!5562 = !DILocation(line: 542, column: 33, scope: !5557)
!5563 = !DILocation(line: 542, column: 39, scope: !5557)
!5564 = !DILocation(line: 542, column: 42, scope: !5557)
!5565 = !DILocation(line: 542, column: 29, scope: !5557)
!5566 = !DILocation(line: 542, column: 3, scope: !5557)
!5567 = distinct !{!5567, !5561, !5568}
!5568 = !DILocation(line: 542, column: 44, scope: !5558)
!5569 = !DILocation(line: 544, column: 29, scope: !5532)
!5570 = !DILocation(line: 544, column: 33, scope: !5532)
!5571 = !DILocation(line: 544, column: 3, scope: !5532)
!5572 = !DILocation(line: 545, column: 3, scope: !5532)
!5573 = !DILocation(line: 545, column: 13, scope: !5532)
!5574 = !DILocation(line: 546, column: 2, scope: !5532)
!5575 = !DILocation(line: 548, column: 8, scope: !5413)
!5576 = !DILocation(line: 548, column: 6, scope: !5413)
!5577 = !DILocation(line: 549, column: 7, scope: !5413)
!5578 = !DILocation(line: 549, column: 5, scope: !5413)
!5579 = !DILocation(line: 551, column: 9, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 551, column: 2)
!5581 = !DILocation(line: 551, column: 7, scope: !5580)
!5582 = !DILocation(line: 551, column: 14, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 551, column: 2)
!5584 = !DILocation(line: 551, column: 18, scope: !5583)
!5585 = !DILocation(line: 551, column: 16, scope: !5583)
!5586 = !DILocation(line: 551, column: 2, scope: !5580)
!5587 = !DILocation(line: 552, column: 9, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 552, column: 7)
!5589 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 551, column: 47)
!5590 = !DILocation(line: 552, column: 8, scope: !5588)
!5591 = !DILocation(line: 552, column: 14, scope: !5588)
!5592 = !DILocation(line: 552, column: 7, scope: !5588)
!5593 = !DILocation(line: 552, column: 7, scope: !5589)
!5594 = !DILocation(line: 553, column: 4, scope: !5588)
!5595 = !DILocation(line: 553, column: 16, scope: !5588)
!5596 = !DILocation(line: 553, column: 15, scope: !5588)
!5597 = !DILocation(line: 553, column: 21, scope: !5588)
!5598 = !DILocation(line: 553, column: 14, scope: !5588)
!5599 = !DILocation(line: 555, column: 6, scope: !5589)
!5600 = !DILocation(line: 555, column: 5, scope: !5589)
!5601 = !DILocation(line: 555, column: 15, scope: !5589)
!5602 = !DILocation(line: 555, column: 14, scope: !5589)
!5603 = !DILocation(line: 555, column: 12, scope: !5589)
!5604 = !DILocation(line: 557, column: 9, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 557, column: 7)
!5606 = !DILocation(line: 557, column: 8, scope: !5605)
!5607 = !DILocation(line: 557, column: 14, scope: !5605)
!5608 = !DILocation(line: 557, column: 7, scope: !5605)
!5609 = !DILocation(line: 557, column: 7, scope: !5589)
!5610 = !DILocation(line: 558, column: 16, scope: !5605)
!5611 = !DILocation(line: 558, column: 32, scope: !5605)
!5612 = !DILocation(line: 558, column: 31, scope: !5605)
!5613 = !DILocation(line: 558, column: 37, scope: !5605)
!5614 = !DILocation(line: 558, column: 30, scope: !5605)
!5615 = !DILocation(line: 558, column: 6, scope: !5605)
!5616 = !DILocation(line: 558, column: 5, scope: !5605)
!5617 = !DILocation(line: 558, column: 11, scope: !5605)
!5618 = !DILocation(line: 558, column: 14, scope: !5605)
!5619 = !DILocation(line: 558, column: 4, scope: !5605)
!5620 = !DILocation(line: 559, column: 2, scope: !5589)
!5621 = !DILocation(line: 551, column: 30, scope: !5583)
!5622 = !DILocation(line: 551, column: 37, scope: !5583)
!5623 = !DILocation(line: 551, column: 43, scope: !5583)
!5624 = !DILocation(line: 551, column: 2, scope: !5583)
!5625 = distinct !{!5625, !5586, !5626}
!5626 = !DILocation(line: 559, column: 2, scope: !5580)
!5627 = !DILocation(line: 561, column: 2, scope: !5413)
!5628 = !DILocation(line: 561, column: 12, scope: !5413)
!5629 = !DILocation(line: 562, column: 2, scope: !5413)
!5630 = !DILocation(line: 562, column: 12, scope: !5413)
!5631 = !DILocation(line: 564, column: 2, scope: !5413)
!5632 = !DILocation(line: 565, column: 1, scope: !5413)
!5633 = distinct !DISubprogram(name: "vgroup_delete_all", scope: !3, file: !3, line: 2999, type: !4576, scopeLine: 3000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5634 = !DILocalVariable(name: "ob", arg: 1, scope: !5633, file: !3, line: 2999, type: !3872)
!5635 = !DILocation(line: 2999, column: 39, scope: !5633)
!5636 = !DILocation(line: 3002, column: 6, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 3002, column: 6)
!5638 = !DILocation(line: 3002, column: 10, scope: !5637)
!5639 = !DILocation(line: 3002, column: 15, scope: !5637)
!5640 = !DILocation(line: 3002, column: 6, scope: !5633)
!5641 = !DILocalVariable(name: "me", scope: !5642, file: !3, line: 3003, type: !1383)
!5642 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 3002, column: 27)
!5643 = !DILocation(line: 3003, column: 9, scope: !5642)
!5644 = !DILocation(line: 3003, column: 14, scope: !5642)
!5645 = !DILocation(line: 3003, column: 18, scope: !5642)
!5646 = !DILocation(line: 3004, column: 33, scope: !5642)
!5647 = !DILocation(line: 3004, column: 37, scope: !5642)
!5648 = !DILocation(line: 3004, column: 60, scope: !5642)
!5649 = !DILocation(line: 3004, column: 64, scope: !5642)
!5650 = !DILocation(line: 3004, column: 3, scope: !5642)
!5651 = !DILocation(line: 3005, column: 3, scope: !5642)
!5652 = !DILocation(line: 3005, column: 7, scope: !5642)
!5653 = !DILocation(line: 3005, column: 13, scope: !5642)
!5654 = !DILocation(line: 3006, column: 2, scope: !5642)
!5655 = !DILocation(line: 3007, column: 11, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 3007, column: 11)
!5657 = !DILocation(line: 3007, column: 15, scope: !5656)
!5658 = !DILocation(line: 3007, column: 20, scope: !5656)
!5659 = !DILocation(line: 3007, column: 11, scope: !5637)
!5660 = !DILocalVariable(name: "lt", scope: !5661, file: !3, line: 3008, type: !1227)
!5661 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 3007, column: 35)
!5662 = !DILocation(line: 3008, column: 12, scope: !5661)
!5663 = !DILocation(line: 3008, column: 37, scope: !5661)
!5664 = !DILocation(line: 3008, column: 17, scope: !5661)
!5665 = !DILocation(line: 3009, column: 7, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 3009, column: 7)
!5667 = !DILocation(line: 3009, column: 11, scope: !5666)
!5668 = !DILocation(line: 3009, column: 7, scope: !5661)
!5669 = !DILocation(line: 3010, column: 4, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3009, column: 18)
!5671 = !DILocation(line: 3010, column: 14, scope: !5670)
!5672 = !DILocation(line: 3010, column: 18, scope: !5670)
!5673 = !DILocation(line: 3011, column: 4, scope: !5670)
!5674 = !DILocation(line: 3011, column: 8, scope: !5670)
!5675 = !DILocation(line: 3011, column: 14, scope: !5670)
!5676 = !DILocation(line: 3012, column: 3, scope: !5670)
!5677 = !DILocation(line: 3013, column: 2, scope: !5661)
!5678 = !DILocation(line: 3016, column: 17, scope: !5633)
!5679 = !DILocation(line: 3016, column: 21, scope: !5633)
!5680 = !DILocation(line: 3016, column: 2, scope: !5633)
!5681 = !DILocation(line: 3019, column: 2, scope: !5633)
!5682 = !DILocation(line: 3019, column: 6, scope: !5633)
!5683 = !DILocation(line: 3019, column: 13, scope: !5633)
!5684 = !DILocation(line: 3020, column: 1, scope: !5633)
!5685 = distinct !DISubprogram(name: "vgroup_remap_update_users", scope: !3, file: !3, line: 2728, type: !5686, scopeLine: 2729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{null, !3872, !1972}
!5688 = !DILocalVariable(name: "ob", arg: 1, scope: !5685, file: !3, line: 2728, type: !3872)
!5689 = !DILocation(line: 2728, column: 47, scope: !5685)
!5690 = !DILocalVariable(name: "map", arg: 2, scope: !5685, file: !3, line: 2728, type: !1972)
!5691 = !DILocation(line: 2728, column: 56, scope: !5685)
!5692 = !DILocalVariable(name: "emd", scope: !5685, file: !3, line: 2730, type: !3499)
!5693 = !DILocation(line: 2730, column: 23, scope: !5685)
!5694 = !DILocalVariable(name: "md", scope: !5685, file: !3, line: 2731, type: !5695)
!5695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!5696 = !DILocation(line: 2731, column: 16, scope: !5685)
!5697 = !DILocalVariable(name: "psys", scope: !5685, file: !3, line: 2732, type: !5698)
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !5700, line: 314, baseType: !5701)
!5700 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !5700, line: 253, size: 5248, elements: !5702)
!5702 = !{!5703, !5705, !5706, !5962, !6019, !6031, !6032, !6033, !6037, !6038, !6039, !6040, !6042, !6043, !6044, !6045, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6066, !6067, !6070, !6074, !6075, !6076, !6077, !6078, !6079, !6081, !6089, !6090, !6091, !6094, !6097, !6100, !6101}
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5701, file: !5700, line: 257, baseType: !5704, size: 64)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5701, file: !5700, line: 257, baseType: !5704, size: 64, offset: 64)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5701, file: !5700, line: 259, baseType: !5707, size: 64, offset: 128)
!5707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5708, size: 64)
!5708 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !5700, line: 251, baseType: !5709)
!5709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !5700, line: 153, size: 6400, elements: !5710)
!5710 = !{!5711, !5712, !5713, !5741, !5762, !5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819, !5820, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836, !5837, !5838, !5839, !5840, !5841, !5842, !5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5952, !5953, !5954, !5955, !5956, !5957, !5958, !5959, !5960, !5961}
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5709, file: !5700, line: 154, baseType: !1233, size: 960)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5709, file: !5700, line: 155, baseType: !1303, size: 64, offset: 960)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !5709, file: !5700, line: 157, baseType: !5714, size: 64, offset: 1024)
!5714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5715, size: 64)
!5715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !5716, line: 189, size: 832, elements: !5717)
!5716 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5717 = !{!5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740}
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !5715, file: !5716, line: 190, baseType: !354, size: 32)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !5715, file: !5716, line: 190, baseType: !354, size: 32, offset: 32)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !5715, file: !5716, line: 192, baseType: !1320, size: 32, offset: 64)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !5715, file: !5716, line: 192, baseType: !1320, size: 32, offset: 96)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !5715, file: !5716, line: 193, baseType: !1320, size: 32, offset: 128)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !5715, file: !5716, line: 193, baseType: !1320, size: 32, offset: 160)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !5715, file: !5716, line: 195, baseType: !1320, size: 32, offset: 192)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !5715, file: !5716, line: 195, baseType: !1320, size: 32, offset: 224)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !5715, file: !5716, line: 196, baseType: !1320, size: 32, offset: 256)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !5715, file: !5716, line: 196, baseType: !1320, size: 32, offset: 288)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !5715, file: !5716, line: 196, baseType: !1320, size: 32, offset: 320)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !5715, file: !5716, line: 199, baseType: !1320, size: 32, offset: 352)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !5715, file: !5716, line: 199, baseType: !1320, size: 32, offset: 384)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !5715, file: !5716, line: 200, baseType: !1320, size: 32, offset: 416)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !5715, file: !5716, line: 200, baseType: !1320, size: 32, offset: 448)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !5715, file: !5716, line: 201, baseType: !1320, size: 32, offset: 480)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !5715, file: !5716, line: 204, baseType: !1320, size: 32, offset: 512)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !5715, file: !5716, line: 204, baseType: !1320, size: 32, offset: 544)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !5715, file: !5716, line: 205, baseType: !1320, size: 32, offset: 576)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !5715, file: !5716, line: 205, baseType: !1320, size: 32, offset: 608)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !5715, file: !5716, line: 206, baseType: !1320, size: 32, offset: 640)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !5715, file: !5716, line: 207, baseType: !1320, size: 32, offset: 672)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !5715, file: !5716, line: 209, baseType: !1294, size: 128, offset: 704)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !5709, file: !5700, line: 158, baseType: !5742, size: 64, offset: 1088)
!5742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5743, size: 64)
!5743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !5700, line: 127, size: 544, elements: !5744)
!5744 = !{!5745, !5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5755, !5756, !5757, !5758, !5759, !5760, !5761}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !5743, file: !5700, line: 129, baseType: !1320, size: 32)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !5743, file: !5700, line: 129, baseType: !1320, size: 32, offset: 32)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !5743, file: !5700, line: 129, baseType: !1320, size: 32, offset: 64)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !5743, file: !5700, line: 130, baseType: !1320, size: 32, offset: 96)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !5743, file: !5700, line: 130, baseType: !1320, size: 32, offset: 128)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !5743, file: !5700, line: 131, baseType: !1320, size: 32, offset: 160)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !5743, file: !5700, line: 131, baseType: !1320, size: 32, offset: 192)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !5743, file: !5700, line: 132, baseType: !1320, size: 32, offset: 224)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !5743, file: !5700, line: 132, baseType: !1320, size: 32, offset: 256)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !5743, file: !5700, line: 133, baseType: !1320, size: 32, offset: 288)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !5743, file: !5700, line: 133, baseType: !1320, size: 32, offset: 320)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !5743, file: !5700, line: 133, baseType: !1320, size: 32, offset: 352)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !5743, file: !5700, line: 134, baseType: !1320, size: 32, offset: 384)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5743, file: !5700, line: 135, baseType: !354, size: 32, offset: 416)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !5743, file: !5700, line: 135, baseType: !354, size: 32, offset: 448)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !5743, file: !5700, line: 136, baseType: !1266, size: 16, offset: 480)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5743, file: !5700, line: 137, baseType: !1578, size: 48, offset: 496)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !5709, file: !5700, line: 160, baseType: !3288, size: 64, offset: 1152)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5709, file: !5700, line: 162, baseType: !354, size: 32, offset: 1216)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !5709, file: !5700, line: 162, baseType: !354, size: 32, offset: 1248)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5709, file: !5700, line: 163, baseType: !1266, size: 16, offset: 1280)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !5709, file: !5700, line: 163, baseType: !1266, size: 16, offset: 1296)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !5709, file: !5700, line: 163, baseType: !1266, size: 16, offset: 1312)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !5709, file: !5700, line: 163, baseType: !1266, size: 16, offset: 1328)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !5709, file: !5700, line: 165, baseType: !1266, size: 16, offset: 1344)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !5709, file: !5700, line: 165, baseType: !1266, size: 16, offset: 1360)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !5709, file: !5700, line: 165, baseType: !1266, size: 16, offset: 1376)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !5709, file: !5700, line: 165, baseType: !1266, size: 16, offset: 1392)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !5709, file: !5700, line: 166, baseType: !354, size: 32, offset: 1408)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5709, file: !5700, line: 166, baseType: !354, size: 32, offset: 1440)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !5709, file: !5700, line: 167, baseType: !1266, size: 16, offset: 1472)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !5709, file: !5700, line: 167, baseType: !1266, size: 16, offset: 1488)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !5709, file: !5700, line: 167, baseType: !1266, size: 16, offset: 1504)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5709, file: !5700, line: 167, baseType: !1266, size: 16, offset: 1520)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !5709, file: !5700, line: 168, baseType: !1266, size: 16, offset: 1536)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !5709, file: !5700, line: 168, baseType: !1266, size: 16, offset: 1552)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !5709, file: !5700, line: 168, baseType: !1266, size: 16, offset: 1568)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !5709, file: !5700, line: 170, baseType: !1266, size: 16, offset: 1584)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !5709, file: !5700, line: 170, baseType: !1266, size: 16, offset: 1600)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !5709, file: !5700, line: 171, baseType: !1266, size: 16, offset: 1616)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !5709, file: !5700, line: 171, baseType: !1266, size: 16, offset: 1632)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !5709, file: !5700, line: 174, baseType: !1266, size: 16, offset: 1648)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !5709, file: !5700, line: 174, baseType: !1266, size: 16, offset: 1664)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !5709, file: !5700, line: 176, baseType: !1266, size: 16, offset: 1680)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !5709, file: !5700, line: 176, baseType: !1266, size: 16, offset: 1696)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !5709, file: !5700, line: 176, baseType: !1266, size: 16, offset: 1712)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !5709, file: !5700, line: 176, baseType: !1266, size: 16, offset: 1728)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !5709, file: !5700, line: 177, baseType: !1266, size: 16, offset: 1744)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !5709, file: !5700, line: 178, baseType: !1266, size: 16, offset: 1760)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !5709, file: !5700, line: 178, baseType: !1266, size: 16, offset: 1776)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !5709, file: !5700, line: 181, baseType: !1266, size: 16, offset: 1792)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !5709, file: !5700, line: 181, baseType: !1266, size: 16, offset: 1808)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !5709, file: !5700, line: 181, baseType: !1266, size: 16, offset: 1824)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !5709, file: !5700, line: 181, baseType: !1266, size: 16, offset: 1840)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !5709, file: !5700, line: 182, baseType: !1320, size: 32, offset: 1856)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !5709, file: !5700, line: 182, baseType: !1320, size: 32, offset: 1888)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !5709, file: !5700, line: 182, baseType: !1523, size: 64, offset: 1920)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !5709, file: !5700, line: 182, baseType: !1523, size: 64, offset: 1984)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !5709, file: !5700, line: 182, baseType: !1320, size: 32, offset: 2048)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !5709, file: !5700, line: 182, baseType: !1320, size: 32, offset: 2080)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !5709, file: !5700, line: 185, baseType: !1320, size: 32, offset: 2112)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !5709, file: !5700, line: 188, baseType: !1266, size: 16, offset: 2144)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !5709, file: !5700, line: 188, baseType: !1266, size: 16, offset: 2160)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !5709, file: !5700, line: 189, baseType: !1320, size: 32, offset: 2176)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !5709, file: !5700, line: 189, baseType: !1320, size: 32, offset: 2208)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !5709, file: !5700, line: 190, baseType: !1320, size: 32, offset: 2240)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !5709, file: !5700, line: 193, baseType: !1320, size: 32, offset: 2272)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5709, file: !5700, line: 193, baseType: !1320, size: 32, offset: 2304)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !5709, file: !5700, line: 193, baseType: !1320, size: 32, offset: 2336)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !5709, file: !5700, line: 193, baseType: !1320, size: 32, offset: 2368)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !5709, file: !5700, line: 194, baseType: !1320, size: 32, offset: 2400)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !5709, file: !5700, line: 194, baseType: !1320, size: 32, offset: 2432)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !5709, file: !5700, line: 195, baseType: !1320, size: 32, offset: 2464)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !5709, file: !5700, line: 195, baseType: !1320, size: 32, offset: 2496)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !5709, file: !5700, line: 195, baseType: !1320, size: 32, offset: 2528)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !5709, file: !5700, line: 195, baseType: !5821, size: 32, offset: 2560)
!5821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 32, elements: !2406)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !5709, file: !5700, line: 196, baseType: !354, size: 32, offset: 2592)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !5709, file: !5700, line: 196, baseType: !354, size: 32, offset: 2624)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !5709, file: !5700, line: 196, baseType: !354, size: 32, offset: 2656)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !5709, file: !5700, line: 196, baseType: !354, size: 32, offset: 2688)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !5709, file: !5700, line: 197, baseType: !1266, size: 16, offset: 2720)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !5709, file: !5700, line: 197, baseType: !1578, size: 48, offset: 2736)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !5709, file: !5700, line: 200, baseType: !1320, size: 32, offset: 2784)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !5709, file: !5700, line: 200, baseType: !1320, size: 32, offset: 2816)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !5709, file: !5700, line: 200, baseType: !1320, size: 32, offset: 2848)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !5709, file: !5700, line: 200, baseType: !1320, size: 32, offset: 2880)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !5709, file: !5700, line: 200, baseType: !1320, size: 32, offset: 2912)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !5709, file: !5700, line: 200, baseType: !1320, size: 32, offset: 2944)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !5709, file: !5700, line: 200, baseType: !1320, size: 32, offset: 2976)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !5709, file: !5700, line: 201, baseType: !1575, size: 96, offset: 3008)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !5709, file: !5700, line: 202, baseType: !1320, size: 32, offset: 3104)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !5709, file: !5700, line: 202, baseType: !1320, size: 32, offset: 3136)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !5709, file: !5700, line: 202, baseType: !1320, size: 32, offset: 3168)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !5709, file: !5700, line: 202, baseType: !1320, size: 32, offset: 3200)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !5709, file: !5700, line: 204, baseType: !1320, size: 32, offset: 3232)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5709, file: !5700, line: 204, baseType: !1320, size: 32, offset: 3264)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !5709, file: !5700, line: 204, baseType: !1320, size: 32, offset: 3296)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !5709, file: !5700, line: 206, baseType: !1575, size: 96, offset: 3328)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !5709, file: !5700, line: 206, baseType: !1320, size: 32, offset: 3424)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !5709, file: !5700, line: 206, baseType: !1320, size: 32, offset: 3456)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !5709, file: !5700, line: 206, baseType: !1320, size: 32, offset: 3488)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !5709, file: !5700, line: 208, baseType: !1320, size: 32, offset: 3520)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !5709, file: !5700, line: 210, baseType: !354, size: 32, offset: 3552)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !5709, file: !5700, line: 210, baseType: !354, size: 32, offset: 3584)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !5709, file: !5700, line: 211, baseType: !1320, size: 32, offset: 3616)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !5709, file: !5700, line: 211, baseType: !1320, size: 32, offset: 3648)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !5709, file: !5700, line: 211, baseType: !1320, size: 32, offset: 3680)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !5709, file: !5700, line: 212, baseType: !1320, size: 32, offset: 3712)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !5709, file: !5700, line: 212, baseType: !1320, size: 32, offset: 3744)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !5709, file: !5700, line: 214, baseType: !1320, size: 32, offset: 3776)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !5709, file: !5700, line: 214, baseType: !1320, size: 32, offset: 3808)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !5709, file: !5700, line: 216, baseType: !1320, size: 32, offset: 3840)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !5709, file: !5700, line: 216, baseType: !1320, size: 32, offset: 3872)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !5709, file: !5700, line: 216, baseType: !1320, size: 32, offset: 3904)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !5709, file: !5700, line: 216, baseType: !1320, size: 32, offset: 3936)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !5709, file: !5700, line: 217, baseType: !1320, size: 32, offset: 3968)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !5709, file: !5700, line: 219, baseType: !1320, size: 32, offset: 4000)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !5709, file: !5700, line: 219, baseType: !1320, size: 32, offset: 4032)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !5709, file: !5700, line: 220, baseType: !1320, size: 32, offset: 4064)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !5709, file: !5700, line: 220, baseType: !1320, size: 32, offset: 4096)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !5709, file: !5700, line: 220, baseType: !1320, size: 32, offset: 4128)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !5709, file: !5700, line: 221, baseType: !1320, size: 32, offset: 4160)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !5709, file: !5700, line: 221, baseType: !1320, size: 32, offset: 4192)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !5709, file: !5700, line: 223, baseType: !1320, size: 32, offset: 4224)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !5709, file: !5700, line: 223, baseType: !1320, size: 32, offset: 4256)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !5709, file: !5700, line: 225, baseType: !1320, size: 32, offset: 4288)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !5709, file: !5700, line: 226, baseType: !1320, size: 32, offset: 4320)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !5709, file: !5700, line: 226, baseType: !1320, size: 32, offset: 4352)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !5709, file: !5700, line: 228, baseType: !1320, size: 32, offset: 4384)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !5709, file: !5700, line: 230, baseType: !1523, size: 64, offset: 4416)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !5709, file: !5700, line: 231, baseType: !1320, size: 32, offset: 4480)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !5709, file: !5700, line: 231, baseType: !1320, size: 32, offset: 4512)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !5709, file: !5700, line: 232, baseType: !354, size: 32, offset: 4544)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !5709, file: !5700, line: 234, baseType: !354, size: 32, offset: 4576)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !5709, file: !5700, line: 236, baseType: !5881, size: 1152, offset: 4608)
!5881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5882, size: 1152, elements: !5950)
!5882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5883, size: 64)
!5883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !2314, line: 57, size: 2496, elements: !5884)
!5884 = !{!5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5917, !5918, !5919, !5920, !5921, !5922, !5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949}
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !5883, file: !2314, line: 59, baseType: !1266, size: 16)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !5883, file: !2314, line: 59, baseType: !1266, size: 16, offset: 16)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !5883, file: !2314, line: 59, baseType: !1266, size: 16, offset: 32)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !5883, file: !2314, line: 59, baseType: !1266, size: 16, offset: 48)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5883, file: !2314, line: 60, baseType: !2050, size: 64, offset: 64)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !5883, file: !2314, line: 61, baseType: !2312, size: 64, offset: 128)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !5883, file: !2314, line: 62, baseType: !1282, size: 512, offset: 192)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !5883, file: !2314, line: 64, baseType: !1253, size: 8, offset: 704)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !5883, file: !2314, line: 64, baseType: !1253, size: 8, offset: 712)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !5883, file: !2314, line: 64, baseType: !1253, size: 8, offset: 720)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !5883, file: !2314, line: 64, baseType: !1253, size: 8, offset: 728)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !5883, file: !2314, line: 65, baseType: !1575, size: 96, offset: 736)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5883, file: !2314, line: 65, baseType: !1575, size: 96, offset: 832)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !5883, file: !2314, line: 65, baseType: !1320, size: 32, offset: 928)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !5883, file: !2314, line: 67, baseType: !1266, size: 16, offset: 960)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !5883, file: !2314, line: 67, baseType: !1266, size: 16, offset: 976)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !5883, file: !2314, line: 67, baseType: !1266, size: 16, offset: 992)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !5883, file: !2314, line: 67, baseType: !1266, size: 16, offset: 1008)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !5883, file: !2314, line: 68, baseType: !1266, size: 16, offset: 1024)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !5883, file: !2314, line: 68, baseType: !1266, size: 16, offset: 1040)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !5883, file: !2314, line: 69, baseType: !1253, size: 8, offset: 1056)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5883, file: !2314, line: 69, baseType: !1378, size: 56, offset: 1064)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5883, file: !2314, line: 70, baseType: !1320, size: 32, offset: 1120)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5883, file: !2314, line: 70, baseType: !1320, size: 32, offset: 1152)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5883, file: !2314, line: 70, baseType: !1320, size: 32, offset: 1184)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !5883, file: !2314, line: 70, baseType: !1320, size: 32, offset: 1216)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !5883, file: !2314, line: 71, baseType: !1320, size: 32, offset: 1248)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !5883, file: !2314, line: 71, baseType: !1320, size: 32, offset: 1280)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !5883, file: !2314, line: 74, baseType: !1320, size: 32, offset: 1312)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !5883, file: !2314, line: 74, baseType: !1320, size: 32, offset: 1344)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !5883, file: !2314, line: 77, baseType: !1320, size: 32, offset: 1376)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !5883, file: !2314, line: 77, baseType: !1320, size: 32, offset: 1408)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !5883, file: !2314, line: 77, baseType: !1320, size: 32, offset: 1440)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !5883, file: !2314, line: 78, baseType: !1320, size: 32, offset: 1472)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !5883, file: !2314, line: 78, baseType: !1320, size: 32, offset: 1504)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !5883, file: !2314, line: 78, baseType: !1320, size: 32, offset: 1536)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !5883, file: !2314, line: 79, baseType: !1320, size: 32, offset: 1568)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !5883, file: !2314, line: 79, baseType: !1320, size: 32, offset: 1600)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !5883, file: !2314, line: 79, baseType: !1320, size: 32, offset: 1632)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !5883, file: !2314, line: 79, baseType: !1320, size: 32, offset: 1664)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !5883, file: !2314, line: 80, baseType: !1320, size: 32, offset: 1696)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !5883, file: !2314, line: 80, baseType: !1320, size: 32, offset: 1728)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !5883, file: !2314, line: 80, baseType: !1320, size: 32, offset: 1760)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !5883, file: !2314, line: 81, baseType: !1320, size: 32, offset: 1792)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !5883, file: !2314, line: 81, baseType: !1320, size: 32, offset: 1824)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !5883, file: !2314, line: 81, baseType: !1320, size: 32, offset: 1856)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !5883, file: !2314, line: 82, baseType: !1320, size: 32, offset: 1888)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !5883, file: !2314, line: 82, baseType: !1320, size: 32, offset: 1920)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !5883, file: !2314, line: 82, baseType: !1320, size: 32, offset: 1952)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !5883, file: !2314, line: 85, baseType: !1320, size: 32, offset: 1984)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !5883, file: !2314, line: 85, baseType: !1320, size: 32, offset: 2016)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !5883, file: !2314, line: 85, baseType: !1320, size: 32, offset: 2048)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !5883, file: !2314, line: 85, baseType: !1320, size: 32, offset: 2080)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !5883, file: !2314, line: 86, baseType: !1320, size: 32, offset: 2112)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !5883, file: !2314, line: 86, baseType: !1320, size: 32, offset: 2144)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !5883, file: !2314, line: 86, baseType: !1320, size: 32, offset: 2176)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !5883, file: !2314, line: 86, baseType: !1320, size: 32, offset: 2208)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !5883, file: !2314, line: 87, baseType: !1320, size: 32, offset: 2240)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !5883, file: !2314, line: 87, baseType: !1320, size: 32, offset: 2272)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !5883, file: !2314, line: 87, baseType: !1320, size: 32, offset: 2304)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !5883, file: !2314, line: 87, baseType: !1320, size: 32, offset: 2336)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !5883, file: !2314, line: 90, baseType: !1320, size: 32, offset: 2368)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !5883, file: !2314, line: 93, baseType: !1320, size: 32, offset: 2400)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !5883, file: !2314, line: 93, baseType: !1320, size: 32, offset: 2432)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !5883, file: !2314, line: 93, baseType: !1320, size: 32, offset: 2464)
!5950 = !{!5951}
!5951 = !DISubrange(count: 18)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !5709, file: !5700, line: 238, baseType: !3292, size: 64, offset: 5760)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !5709, file: !5700, line: 239, baseType: !1294, size: 128, offset: 5824)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !5709, file: !5700, line: 240, baseType: !3292, size: 64, offset: 5952)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !5709, file: !5700, line: 241, baseType: !2050, size: 64, offset: 6016)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !5709, file: !5700, line: 242, baseType: !2050, size: 64, offset: 6080)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5709, file: !5700, line: 243, baseType: !1341, size: 64, offset: 6144)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !5709, file: !5700, line: 244, baseType: !2272, size: 64, offset: 6208)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !5709, file: !5700, line: 245, baseType: !2272, size: 64, offset: 6272)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !5709, file: !5700, line: 248, baseType: !1266, size: 16, offset: 6336)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5709, file: !5700, line: 249, baseType: !1578, size: 48, offset: 6352)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !5701, file: !5700, line: 261, baseType: !5963, size: 64, offset: 192)
!5963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5964, size: 64)
!5964 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !5700, line: 125, baseType: !5965)
!5965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !5700, line: 95, size: 1600, elements: !5966)
!5966 = !{!5967, !5976, !5977, !5987, !5989, !6005, !6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017, !6018}
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5965, file: !5700, line: 96, baseType: !5968, size: 448)
!5968 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !5700, line: 55, baseType: !5969)
!5969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !5700, line: 49, size: 448, elements: !5970)
!5970 = !{!5971, !5972, !5973, !5974, !5975}
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !5969, file: !5700, line: 50, baseType: !1575, size: 96)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !5969, file: !5700, line: 51, baseType: !1575, size: 96, offset: 96)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !5969, file: !5700, line: 52, baseType: !1331, size: 128, offset: 192)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !5969, file: !5700, line: 53, baseType: !1575, size: 96, offset: 320)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5969, file: !5700, line: 54, baseType: !1320, size: 32, offset: 416)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !5965, file: !5700, line: 98, baseType: !5968, size: 448, offset: 448)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !5965, file: !5700, line: 100, baseType: !5978, size: 64, offset: 896)
!5978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5979, size: 64)
!5979 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !5700, line: 47, baseType: !5980)
!5980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !5700, line: 41, size: 192, elements: !5981)
!5981 = !{!5982, !5983, !5984, !5985, !5986}
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !5980, file: !5700, line: 42, baseType: !1575, size: 96)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5980, file: !5700, line: 43, baseType: !1320, size: 32, offset: 96)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5980, file: !5700, line: 44, baseType: !1320, size: 32, offset: 128)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !5980, file: !5700, line: 45, baseType: !1266, size: 16, offset: 160)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5980, file: !5700, line: 46, baseType: !1266, size: 16, offset: 176)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !5965, file: !5700, line: 102, baseType: !5988, size: 64, offset: 960)
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5968, size: 64)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !5965, file: !5700, line: 104, baseType: !5990, size: 64, offset: 1024)
!5990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5991, size: 64)
!5991 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !5700, line: 63, baseType: !5992)
!5992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !5700, line: 57, size: 448, elements: !5993)
!5993 = !{!5994, !5995, !6002, !6003, !6004}
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !5992, file: !5700, line: 58, baseType: !2050, size: 64)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5992, file: !5700, line: 59, baseType: !5996, size: 160, offset: 64)
!5996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !5716, line: 109, size: 160, elements: !5997)
!5997 = !{!5998, !5999, !6000, !6001}
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !5996, file: !5716, line: 110, baseType: !1320, size: 32)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !5996, file: !5716, line: 110, baseType: !1575, size: 96, offset: 32)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !5996, file: !5716, line: 111, baseType: !1266, size: 16, offset: 128)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5996, file: !5716, line: 111, baseType: !1266, size: 16, offset: 144)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !5992, file: !5700, line: 60, baseType: !1575, size: 96, offset: 224)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !5992, file: !5700, line: 61, baseType: !1575, size: 96, offset: 320)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !5992, file: !5700, line: 62, baseType: !1320, size: 32, offset: 416)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !5965, file: !5700, line: 106, baseType: !354, size: 32, offset: 1088)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5965, file: !5700, line: 108, baseType: !1320, size: 32, offset: 1120)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !5965, file: !5700, line: 108, baseType: !1320, size: 32, offset: 1152)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !5965, file: !5700, line: 109, baseType: !1320, size: 32, offset: 1184)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5965, file: !5700, line: 111, baseType: !354, size: 32, offset: 1216)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !5965, file: !5700, line: 112, baseType: !354, size: 32, offset: 1248)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !5965, file: !5700, line: 114, baseType: !1331, size: 128, offset: 1280)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !5965, file: !5700, line: 114, baseType: !1320, size: 32, offset: 1408)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5965, file: !5700, line: 117, baseType: !1320, size: 32, offset: 1440)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !5965, file: !5700, line: 119, baseType: !1320, size: 32, offset: 1472)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5965, file: !5700, line: 120, baseType: !354, size: 32, offset: 1504)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !5965, file: !5700, line: 122, baseType: !354, size: 32, offset: 1536)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5965, file: !5700, line: 123, baseType: !1266, size: 16, offset: 1568)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !5965, file: !5700, line: 124, baseType: !1266, size: 16, offset: 1584)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5701, file: !5700, line: 262, baseType: !6020, size: 64, offset: 256)
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 64)
!6021 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !5700, line: 77, baseType: !6022)
!6022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !5700, line: 71, size: 512, elements: !6023)
!6023 = !{!6024, !6025, !6026, !6027, !6028, !6029, !6030}
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6022, file: !5700, line: 72, baseType: !354, size: 32)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6022, file: !5700, line: 72, baseType: !354, size: 32, offset: 32)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !6022, file: !5700, line: 73, baseType: !1966, size: 128, offset: 64)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !6022, file: !5700, line: 74, baseType: !1331, size: 128, offset: 192)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !6022, file: !5700, line: 75, baseType: !1331, size: 128, offset: 320)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !6022, file: !5700, line: 75, baseType: !1320, size: 32, offset: 448)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !6022, file: !5700, line: 76, baseType: !1320, size: 32, offset: 480)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !5701, file: !5700, line: 264, baseType: !3280, size: 64, offset: 320)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !5701, file: !5700, line: 265, baseType: !3283, size: 64, offset: 384)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !5701, file: !5700, line: 267, baseType: !6034, size: 64, offset: 448)
!6034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6035, size: 64)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !5700, line: 267, flags: DIFlagFwdDecl)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !5701, file: !5700, line: 268, baseType: !6034, size: 64, offset: 512)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !5701, file: !5700, line: 269, baseType: !1292, size: 128, offset: 576)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !5701, file: !5700, line: 269, baseType: !1292, size: 128, offset: 704)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !5701, file: !5700, line: 271, baseType: !6041, size: 64, offset: 832)
!6041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !5701, file: !5700, line: 272, baseType: !1807, size: 64, offset: 896)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !5701, file: !5700, line: 272, baseType: !1807, size: 64, offset: 960)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !5701, file: !5700, line: 274, baseType: !2050, size: 64, offset: 1024)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !5701, file: !5700, line: 276, baseType: !6046, size: 64, offset: 1088)
!6046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6047, size: 64)
!6047 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !5700, line: 276, flags: DIFlagFwdDecl)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5701, file: !5700, line: 278, baseType: !2050, size: 64, offset: 1152)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !5701, file: !5700, line: 280, baseType: !1294, size: 128, offset: 1216)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5701, file: !5700, line: 282, baseType: !1282, size: 512, offset: 1344)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !5701, file: !5700, line: 284, baseType: !2172, size: 512, offset: 1856)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !5701, file: !5700, line: 285, baseType: !1320, size: 32, offset: 2368)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !5701, file: !5700, line: 285, baseType: !1320, size: 32, offset: 2400)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !5701, file: !5700, line: 285, baseType: !1320, size: 32, offset: 2432)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5701, file: !5700, line: 286, baseType: !354, size: 32, offset: 2464)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !5701, file: !5700, line: 286, baseType: !354, size: 32, offset: 2496)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5701, file: !5700, line: 287, baseType: !354, size: 32, offset: 2528)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !5701, file: !5700, line: 287, baseType: !354, size: 32, offset: 2560)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !5701, file: !5700, line: 287, baseType: !354, size: 32, offset: 2592)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !5701, file: !5700, line: 287, baseType: !354, size: 32, offset: 2624)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !5701, file: !5700, line: 287, baseType: !354, size: 32, offset: 2656)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !5701, file: !5700, line: 287, baseType: !354, size: 32, offset: 2688)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !5701, file: !5700, line: 288, baseType: !1266, size: 16, offset: 2720)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !5701, file: !5700, line: 288, baseType: !1266, size: 16, offset: 2736)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !5701, file: !5700, line: 288, baseType: !1266, size: 16, offset: 2752)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !5701, file: !5700, line: 288, baseType: !1266, size: 16, offset: 2768)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !5701, file: !5700, line: 290, baseType: !6068, size: 1536, offset: 2784)
!6068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, size: 1536, elements: !6069)
!6069 = !{!1398, !1284}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !5701, file: !5700, line: 293, baseType: !6071, size: 192, offset: 4320)
!6071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1266, size: 192, elements: !6072)
!6072 = !{!6073}
!6073 = !DISubrange(count: 12)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !5701, file: !5700, line: 293, baseType: !1266, size: 16, offset: 4512)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !5701, file: !5700, line: 293, baseType: !1266, size: 16, offset: 4528)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !5701, file: !5700, line: 296, baseType: !1226, size: 64, offset: 4544)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !5701, file: !5700, line: 299, baseType: !3255, size: 64, offset: 4608)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !5701, file: !5700, line: 300, baseType: !1294, size: 128, offset: 4672)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !5701, file: !5700, line: 302, baseType: !6080, size: 64, offset: 4800)
!6080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !5701, file: !5700, line: 304, baseType: !6082, size: 64, offset: 4864)
!6082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6083, size: 64)
!6083 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !5700, line: 68, baseType: !6084)
!6084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !5700, line: 65, size: 128, elements: !6085)
!6085 = !{!6086, !6087, !6088}
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !6084, file: !5700, line: 66, baseType: !1320, size: 32)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !6084, file: !5700, line: 67, baseType: !1470, size: 64, offset: 32)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !6084, file: !5700, line: 67, baseType: !7, size: 32, offset: 96)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !5701, file: !5700, line: 305, baseType: !354, size: 32, offset: 4928)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !5701, file: !5700, line: 305, baseType: !354, size: 32, offset: 4960)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !5701, file: !5700, line: 307, baseType: !6092, size: 64, offset: 4992)
!6092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6093, size: 64)
!6093 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !5700, line: 307, flags: DIFlagFwdDecl)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !5701, file: !5700, line: 308, baseType: !6095, size: 64, offset: 5056)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !286, line: 583, flags: DIFlagFwdDecl)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !5701, file: !5700, line: 310, baseType: !6098, size: 64, offset: 5120)
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6099, size: 64)
!6099 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !5700, line: 310, flags: DIFlagFwdDecl)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !5701, file: !5700, line: 312, baseType: !1320, size: 32, offset: 5184)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !5701, file: !5700, line: 313, baseType: !1320, size: 32, offset: 5216)
!6102 = !DILocation(line: 2732, column: 18, scope: !5685)
!6103 = !DILocalVariable(name: "clmd", scope: !5685, file: !3, line: 2733, type: !3522)
!6104 = !DILocation(line: 2733, column: 21, scope: !5685)
!6105 = !DILocalVariable(name: "clsim", scope: !5685, file: !3, line: 2734, type: !6106)
!6106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6107, size: 64)
!6107 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClothSimSettings", file: !3294, line: 92, baseType: !3533)
!6108 = !DILocation(line: 2734, column: 20, scope: !5685)
!6109 = !DILocalVariable(name: "a", scope: !5685, file: !3, line: 2735, type: !354)
!6110 = !DILocation(line: 2735, column: 6, scope: !5685)
!6111 = !DILocation(line: 2740, column: 6, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 2740, column: 6)
!6113 = !DILocation(line: 2740, column: 10, scope: !6112)
!6114 = !DILocation(line: 2740, column: 6, scope: !5685)
!6115 = !DILocation(line: 2741, column: 25, scope: !6112)
!6116 = !DILocation(line: 2741, column: 29, scope: !6112)
!6117 = !DILocation(line: 2741, column: 33, scope: !6112)
!6118 = !DILocation(line: 2741, column: 39, scope: !6112)
!6119 = !DILocation(line: 2741, column: 3, scope: !6112)
!6120 = !DILocation(line: 2741, column: 7, scope: !6112)
!6121 = !DILocation(line: 2741, column: 13, scope: !6112)
!6122 = !DILocation(line: 2741, column: 23, scope: !6112)
!6123 = !DILocation(line: 2743, column: 12, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 2743, column: 2)
!6125 = !DILocation(line: 2743, column: 16, scope: !6124)
!6126 = !DILocation(line: 2743, column: 26, scope: !6124)
!6127 = !DILocation(line: 2743, column: 10, scope: !6124)
!6128 = !DILocation(line: 2743, column: 7, scope: !6124)
!6129 = !DILocation(line: 2743, column: 33, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 2743, column: 2)
!6131 = !DILocation(line: 2743, column: 2, scope: !6124)
!6132 = !DILocation(line: 2744, column: 7, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 2744, column: 7)
!6134 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2743, column: 52)
!6135 = !DILocation(line: 2744, column: 11, scope: !6133)
!6136 = !DILocation(line: 2744, column: 16, scope: !6133)
!6137 = !DILocation(line: 2744, column: 7, scope: !6134)
!6138 = !DILocation(line: 2745, column: 33, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 2744, column: 42)
!6140 = !DILocation(line: 2745, column: 10, scope: !6139)
!6141 = !DILocation(line: 2745, column: 8, scope: !6139)
!6142 = !DILocation(line: 2746, column: 18, scope: !6139)
!6143 = !DILocation(line: 2746, column: 22, scope: !6139)
!6144 = !DILocation(line: 2746, column: 27, scope: !6139)
!6145 = !DILocation(line: 2746, column: 4, scope: !6139)
!6146 = !DILocation(line: 2746, column: 9, scope: !6139)
!6147 = !DILocation(line: 2746, column: 16, scope: !6139)
!6148 = !DILocation(line: 2747, column: 3, scope: !6139)
!6149 = !DILocation(line: 2748, column: 12, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 2748, column: 12)
!6151 = !DILocation(line: 2748, column: 16, scope: !6150)
!6152 = !DILocation(line: 2748, column: 21, scope: !6150)
!6153 = !DILocation(line: 2748, column: 12, scope: !6133)
!6154 = !DILocation(line: 2749, column: 32, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 2748, column: 45)
!6156 = !DILocation(line: 2749, column: 11, scope: !6155)
!6157 = !DILocation(line: 2749, column: 9, scope: !6155)
!6158 = !DILocation(line: 2750, column: 12, scope: !6155)
!6159 = !DILocation(line: 2750, column: 18, scope: !6155)
!6160 = !DILocation(line: 2750, column: 10, scope: !6155)
!6161 = !DILocation(line: 2752, column: 8, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6155, file: !3, line: 2752, column: 8)
!6163 = !DILocation(line: 2752, column: 8, scope: !6155)
!6164 = !DILocation(line: 2753, column: 26, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 2752, column: 15)
!6166 = !DILocation(line: 2753, column: 30, scope: !6165)
!6167 = !DILocation(line: 2753, column: 37, scope: !6165)
!6168 = !DILocation(line: 2753, column: 5, scope: !6165)
!6169 = !DILocation(line: 2753, column: 12, scope: !6165)
!6170 = !DILocation(line: 2753, column: 24, scope: !6165)
!6171 = !DILocation(line: 2754, column: 26, scope: !6165)
!6172 = !DILocation(line: 2754, column: 30, scope: !6165)
!6173 = !DILocation(line: 2754, column: 37, scope: !6165)
!6174 = !DILocation(line: 2754, column: 5, scope: !6165)
!6175 = !DILocation(line: 2754, column: 12, scope: !6165)
!6176 = !DILocation(line: 2754, column: 24, scope: !6165)
!6177 = !DILocation(line: 2755, column: 28, scope: !6165)
!6178 = !DILocation(line: 2755, column: 32, scope: !6165)
!6179 = !DILocation(line: 2755, column: 39, scope: !6165)
!6180 = !DILocation(line: 2755, column: 5, scope: !6165)
!6181 = !DILocation(line: 2755, column: 12, scope: !6165)
!6182 = !DILocation(line: 2755, column: 26, scope: !6165)
!6183 = !DILocation(line: 2756, column: 4, scope: !6165)
!6184 = !DILocation(line: 2757, column: 3, scope: !6155)
!6185 = !DILocation(line: 2758, column: 2, scope: !6134)
!6186 = !DILocation(line: 2743, column: 42, scope: !6130)
!6187 = !DILocation(line: 2743, column: 46, scope: !6130)
!6188 = !DILocation(line: 2743, column: 40, scope: !6130)
!6189 = !DILocation(line: 2743, column: 2, scope: !6130)
!6190 = distinct !{!6190, !6131, !6191}
!6191 = !DILocation(line: 2758, column: 2, scope: !6124)
!6192 = !DILocation(line: 2760, column: 14, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 2760, column: 2)
!6194 = !DILocation(line: 2760, column: 18, scope: !6193)
!6195 = !DILocation(line: 2760, column: 33, scope: !6193)
!6196 = !DILocation(line: 2760, column: 12, scope: !6193)
!6197 = !DILocation(line: 2760, column: 7, scope: !6193)
!6198 = !DILocation(line: 2760, column: 40, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 2760, column: 2)
!6200 = !DILocation(line: 2760, column: 2, scope: !6193)
!6201 = !DILocation(line: 2761, column: 10, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 2761, column: 3)
!6203 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 2760, column: 65)
!6204 = !DILocation(line: 2761, column: 8, scope: !6202)
!6205 = !DILocation(line: 2761, column: 15, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 2761, column: 3)
!6207 = !DILocation(line: 2761, column: 17, scope: !6206)
!6208 = !DILocation(line: 2761, column: 3, scope: !6202)
!6209 = !DILocation(line: 2762, column: 22, scope: !6206)
!6210 = !DILocation(line: 2762, column: 26, scope: !6206)
!6211 = !DILocation(line: 2762, column: 32, scope: !6206)
!6212 = !DILocation(line: 2762, column: 39, scope: !6206)
!6213 = !DILocation(line: 2762, column: 4, scope: !6206)
!6214 = !DILocation(line: 2762, column: 10, scope: !6206)
!6215 = !DILocation(line: 2762, column: 17, scope: !6206)
!6216 = !DILocation(line: 2762, column: 20, scope: !6206)
!6217 = !DILocation(line: 2761, column: 33, scope: !6206)
!6218 = !DILocation(line: 2761, column: 3, scope: !6206)
!6219 = distinct !{!6219, !6208, !6220}
!6220 = !DILocation(line: 2762, column: 41, scope: !6202)
!6221 = !DILocation(line: 2763, column: 2, scope: !6203)
!6222 = !DILocation(line: 2760, column: 53, scope: !6199)
!6223 = !DILocation(line: 2760, column: 59, scope: !6199)
!6224 = !DILocation(line: 2760, column: 51, scope: !6199)
!6225 = !DILocation(line: 2760, column: 2, scope: !6199)
!6226 = distinct !{!6226, !6200, !6227}
!6227 = !DILocation(line: 2763, column: 2, scope: !6193)
!6228 = !DILocation(line: 2764, column: 1, scope: !5685)
!6229 = distinct !DISubprogram(name: "ED_vgroup_vert_active_mirror", scope: !3, file: !3, line: 626, type: !6230, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{null, !3872, !354}
!6232 = !DILocalVariable(name: "ob", arg: 1, scope: !6229, file: !3, line: 626, type: !3872)
!6233 = !DILocation(line: 626, column: 43, scope: !6229)
!6234 = !DILocalVariable(name: "def_nr", arg: 2, scope: !6229, file: !3, line: 626, type: !354)
!6235 = !DILocation(line: 626, column: 51, scope: !6229)
!6236 = !DILocalVariable(name: "me", scope: !6229, file: !3, line: 628, type: !1383)
!6237 = !DILocation(line: 628, column: 8, scope: !6229)
!6238 = !DILocation(line: 628, column: 13, scope: !6229)
!6239 = !DILocation(line: 628, column: 17, scope: !6229)
!6240 = !DILocalVariable(name: "em", scope: !6229, file: !3, line: 629, type: !4100)
!6241 = !DILocation(line: 629, column: 14, scope: !6229)
!6242 = !DILocation(line: 629, column: 19, scope: !6229)
!6243 = !DILocation(line: 629, column: 23, scope: !6229)
!6244 = !DILocalVariable(name: "dvert_act", scope: !6229, file: !3, line: 630, type: !4203)
!6245 = !DILocation(line: 630, column: 15, scope: !6229)
!6246 = !DILocation(line: 632, column: 6, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 632, column: 6)
!6248 = !DILocation(line: 632, column: 10, scope: !6247)
!6249 = !DILocation(line: 632, column: 19, scope: !6247)
!6250 = !DILocation(line: 632, column: 6, scope: !6229)
!6251 = !DILocation(line: 633, column: 7, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 633, column: 7)
!6253 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 632, column: 39)
!6254 = !DILocation(line: 633, column: 7, scope: !6253)
!6255 = !DILocalVariable(name: "eve_act", scope: !6256, file: !3, line: 634, type: !1627)
!6256 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 633, column: 11)
!6257 = !DILocation(line: 634, column: 12, scope: !6256)
!6258 = !DILocation(line: 635, column: 44, scope: !6256)
!6259 = !DILocation(line: 635, column: 16, scope: !6256)
!6260 = !DILocation(line: 635, column: 14, scope: !6256)
!6261 = !DILocation(line: 636, column: 8, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 636, column: 8)
!6263 = !DILocation(line: 636, column: 8, scope: !6256)
!6264 = !DILocalVariable(name: "cd_dvert_offset", scope: !6265, file: !3, line: 637, type: !4075)
!6265 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 636, column: 19)
!6266 = !DILocation(line: 637, column: 15, scope: !6265)
!6267 = !DILocation(line: 637, column: 56, scope: !6265)
!6268 = !DILocation(line: 637, column: 60, scope: !6265)
!6269 = !DILocation(line: 637, column: 64, scope: !6265)
!6270 = !DILocation(line: 637, column: 33, scope: !6265)
!6271 = !DILocation(line: 638, column: 38, scope: !6265)
!6272 = !DILocation(line: 638, column: 42, scope: !6265)
!6273 = !DILocation(line: 638, column: 51, scope: !6265)
!6274 = !DILocation(line: 638, column: 63, scope: !6265)
!6275 = !DILocation(line: 638, column: 5, scope: !6265)
!6276 = !DILocation(line: 639, column: 4, scope: !6265)
!6277 = !DILocation(line: 640, column: 3, scope: !6256)
!6278 = !DILocalVariable(name: "v_act", scope: !6279, file: !3, line: 642, type: !354)
!6279 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 641, column: 8)
!6280 = !DILocation(line: 642, column: 8, scope: !6279)
!6281 = !DILocation(line: 643, column: 44, scope: !6279)
!6282 = !DILocation(line: 643, column: 16, scope: !6279)
!6283 = !DILocation(line: 643, column: 14, scope: !6279)
!6284 = !DILocation(line: 644, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 644, column: 8)
!6286 = !DILocation(line: 644, column: 8, scope: !6279)
!6287 = !DILocation(line: 645, column: 38, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 644, column: 19)
!6289 = !DILocation(line: 645, column: 42, scope: !6288)
!6290 = !DILocation(line: 645, column: 50, scope: !6288)
!6291 = !DILocation(line: 645, column: 5, scope: !6288)
!6292 = !DILocation(line: 646, column: 4, scope: !6288)
!6293 = !DILocation(line: 648, column: 2, scope: !6253)
!6294 = !DILocation(line: 649, column: 1, scope: !6229)
!6295 = distinct !DISubprogram(name: "ED_mesh_defvert_mirror_update_em", scope: !3, file: !3, line: 588, type: !6296, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{null, !3872, !1627, !354, !354, !4075}
!6298 = !DILocalVariable(name: "ob", arg: 1, scope: !6295, file: !3, line: 588, type: !3872)
!6299 = !DILocation(line: 588, column: 54, scope: !6295)
!6300 = !DILocalVariable(name: "eve", arg: 2, scope: !6295, file: !3, line: 588, type: !1627)
!6301 = !DILocation(line: 588, column: 66, scope: !6295)
!6302 = !DILocalVariable(name: "def_nr", arg: 3, scope: !6295, file: !3, line: 588, type: !354)
!6303 = !DILocation(line: 588, column: 75, scope: !6295)
!6304 = !DILocalVariable(name: "vidx", arg: 4, scope: !6295, file: !3, line: 588, type: !354)
!6305 = !DILocation(line: 588, column: 87, scope: !6295)
!6306 = !DILocalVariable(name: "cd_dvert_offset", arg: 5, scope: !6295, file: !3, line: 589, type: !4075)
!6307 = !DILocation(line: 589, column: 56, scope: !6295)
!6308 = !DILocalVariable(name: "me", scope: !6295, file: !3, line: 591, type: !1383)
!6309 = !DILocation(line: 591, column: 8, scope: !6295)
!6310 = !DILocation(line: 591, column: 13, scope: !6295)
!6311 = !DILocation(line: 591, column: 17, scope: !6295)
!6312 = !DILocalVariable(name: "em", scope: !6295, file: !3, line: 592, type: !4100)
!6313 = !DILocation(line: 592, column: 14, scope: !6295)
!6314 = !DILocation(line: 592, column: 19, scope: !6295)
!6315 = !DILocation(line: 592, column: 23, scope: !6295)
!6316 = !DILocalVariable(name: "eve_mirr", scope: !6295, file: !3, line: 593, type: !1627)
!6317 = !DILocation(line: 593, column: 10, scope: !6295)
!6318 = !DILocalVariable(name: "use_topology", scope: !6295, file: !3, line: 594, type: !2436)
!6319 = !DILocation(line: 594, column: 7, scope: !6295)
!6320 = !DILocation(line: 594, column: 23, scope: !6295)
!6321 = !DILocation(line: 594, column: 27, scope: !6295)
!6322 = !DILocation(line: 594, column: 36, scope: !6295)
!6323 = !DILocation(line: 594, column: 59, scope: !6295)
!6324 = !DILocation(line: 594, column: 22, scope: !6295)
!6325 = !DILocation(line: 596, column: 41, scope: !6295)
!6326 = !DILocation(line: 596, column: 45, scope: !6295)
!6327 = !DILocation(line: 596, column: 49, scope: !6295)
!6328 = !DILocation(line: 596, column: 54, scope: !6295)
!6329 = !DILocation(line: 596, column: 59, scope: !6295)
!6330 = !DILocation(line: 596, column: 63, scope: !6295)
!6331 = !DILocation(line: 596, column: 69, scope: !6295)
!6332 = !DILocation(line: 596, column: 13, scope: !6295)
!6333 = !DILocation(line: 596, column: 11, scope: !6295)
!6334 = !DILocation(line: 598, column: 6, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 598, column: 6)
!6336 = !DILocation(line: 598, column: 15, scope: !6335)
!6337 = !DILocation(line: 598, column: 18, scope: !6335)
!6338 = !DILocation(line: 598, column: 30, scope: !6335)
!6339 = !DILocation(line: 598, column: 27, scope: !6335)
!6340 = !DILocation(line: 598, column: 6, scope: !6295)
!6341 = !DILocalVariable(name: "dvert_src", scope: !6342, file: !3, line: 599, type: !4203)
!6342 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 598, column: 35)
!6343 = !DILocation(line: 599, column: 16, scope: !6342)
!6344 = !DILocation(line: 599, column: 28, scope: !6342)
!6345 = !DILocalVariable(name: "dvert_dst", scope: !6342, file: !3, line: 600, type: !4203)
!6346 = !DILocation(line: 600, column: 16, scope: !6342)
!6347 = !DILocation(line: 600, column: 28, scope: !6342)
!6348 = !DILocation(line: 601, column: 39, scope: !6342)
!6349 = !DILocation(line: 601, column: 43, scope: !6342)
!6350 = !DILocation(line: 601, column: 54, scope: !6342)
!6351 = !DILocation(line: 601, column: 65, scope: !6342)
!6352 = !DILocation(line: 601, column: 3, scope: !6342)
!6353 = !DILocation(line: 602, column: 2, scope: !6342)
!6354 = !DILocation(line: 603, column: 1, scope: !6295)
!6355 = distinct !DISubprogram(name: "ED_mesh_defvert_mirror_update_ob", scope: !3, file: !3, line: 605, type: !6356, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{null, !3872, !354, !354}
!6358 = !DILocalVariable(name: "ob", arg: 1, scope: !6355, file: !3, line: 605, type: !3872)
!6359 = !DILocation(line: 605, column: 54, scope: !6355)
!6360 = !DILocalVariable(name: "def_nr", arg: 2, scope: !6355, file: !3, line: 605, type: !354)
!6361 = !DILocation(line: 605, column: 62, scope: !6355)
!6362 = !DILocalVariable(name: "vidx", arg: 3, scope: !6355, file: !3, line: 605, type: !354)
!6363 = !DILocation(line: 605, column: 74, scope: !6355)
!6364 = !DILocalVariable(name: "vidx_mirr", scope: !6355, file: !3, line: 607, type: !354)
!6365 = !DILocation(line: 607, column: 6, scope: !6355)
!6366 = !DILocalVariable(name: "me", scope: !6355, file: !3, line: 608, type: !1383)
!6367 = !DILocation(line: 608, column: 8, scope: !6355)
!6368 = !DILocation(line: 608, column: 13, scope: !6355)
!6369 = !DILocation(line: 608, column: 17, scope: !6355)
!6370 = !DILocalVariable(name: "use_topology", scope: !6355, file: !3, line: 609, type: !2436)
!6371 = !DILocation(line: 609, column: 7, scope: !6355)
!6372 = !DILocation(line: 609, column: 23, scope: !6355)
!6373 = !DILocation(line: 609, column: 27, scope: !6355)
!6374 = !DILocation(line: 609, column: 36, scope: !6355)
!6375 = !DILocation(line: 609, column: 59, scope: !6355)
!6376 = !DILocation(line: 609, column: 22, scope: !6355)
!6377 = !DILocation(line: 611, column: 6, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 611, column: 6)
!6379 = !DILocation(line: 611, column: 11, scope: !6378)
!6380 = !DILocation(line: 611, column: 6, scope: !6355)
!6381 = !DILocation(line: 612, column: 3, scope: !6378)
!6382 = !DILocation(line: 614, column: 37, scope: !6355)
!6383 = !DILocation(line: 614, column: 41, scope: !6355)
!6384 = !DILocation(line: 614, column: 47, scope: !6355)
!6385 = !DILocation(line: 614, column: 14, scope: !6355)
!6386 = !DILocation(line: 614, column: 12, scope: !6355)
!6387 = !DILocation(line: 616, column: 7, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 616, column: 6)
!6389 = !DILocation(line: 616, column: 18, scope: !6388)
!6390 = !DILocation(line: 616, column: 23, scope: !6388)
!6391 = !DILocation(line: 616, column: 27, scope: !6388)
!6392 = !DILocation(line: 616, column: 40, scope: !6388)
!6393 = !DILocation(line: 616, column: 37, scope: !6388)
!6394 = !DILocation(line: 616, column: 6, scope: !6355)
!6395 = !DILocalVariable(name: "dvert_src", scope: !6396, file: !3, line: 617, type: !4203)
!6396 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 616, column: 47)
!6397 = !DILocation(line: 617, column: 16, scope: !6396)
!6398 = !DILocation(line: 617, column: 29, scope: !6396)
!6399 = !DILocation(line: 617, column: 33, scope: !6396)
!6400 = !DILocation(line: 617, column: 39, scope: !6396)
!6401 = !DILocalVariable(name: "dvert_dst", scope: !6396, file: !3, line: 618, type: !4203)
!6402 = !DILocation(line: 618, column: 16, scope: !6396)
!6403 = !DILocation(line: 618, column: 29, scope: !6396)
!6404 = !DILocation(line: 618, column: 33, scope: !6396)
!6405 = !DILocation(line: 618, column: 39, scope: !6396)
!6406 = !DILocation(line: 619, column: 39, scope: !6396)
!6407 = !DILocation(line: 619, column: 43, scope: !6396)
!6408 = !DILocation(line: 619, column: 54, scope: !6396)
!6409 = !DILocation(line: 619, column: 65, scope: !6396)
!6410 = !DILocation(line: 619, column: 3, scope: !6396)
!6411 = !DILocation(line: 620, column: 2, scope: !6396)
!6412 = !DILocation(line: 621, column: 1, scope: !6355)
!6413 = distinct !DISubprogram(name: "ED_object_vgroup_selection_itemf_helper", scope: !3, file: !3, line: 807, type: !6414, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6414 = !DISubroutineType(types: !6415)
!6415 = !{!6416, !6417, !6420, !3792, !6422, !6423}
!6416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!6417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 64)
!6418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6419)
!6419 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !3668, line: 69, baseType: !3619)
!6420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6421, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !188, line: 62, baseType: !3633)
!6422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!6423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!6424 = !DILocalVariable(name: "C", arg: 1, scope: !6413, file: !3, line: 808, type: !6417)
!6425 = !DILocation(line: 808, column: 25, scope: !6413)
!6426 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !6413, file: !3, line: 808, type: !6420)
!6427 = !DILocation(line: 808, column: 40, scope: !6413)
!6428 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !6413, file: !3, line: 809, type: !3792)
!6429 = !DILocation(line: 809, column: 22, scope: !6413)
!6430 = !DILocalVariable(name: "r_free", arg: 4, scope: !6413, file: !3, line: 809, type: !6422)
!6431 = !DILocation(line: 809, column: 42, scope: !6413)
!6432 = !DILocalVariable(name: "selection_mask", arg: 5, scope: !6413, file: !3, line: 809, type: !6423)
!6433 = !DILocation(line: 809, column: 69, scope: !6413)
!6434 = !DILocalVariable(name: "ob", scope: !6413, file: !3, line: 811, type: !3872)
!6435 = !DILocation(line: 811, column: 10, scope: !6413)
!6436 = !DILocalVariable(name: "item", scope: !6413, file: !3, line: 812, type: !6437)
!6437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!6438 = !DILocation(line: 812, column: 20, scope: !6413)
!6439 = !DILocalVariable(name: "totitem", scope: !6413, file: !3, line: 813, type: !354)
!6440 = !DILocation(line: 813, column: 6, scope: !6413)
!6441 = !DILocation(line: 816, column: 7, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 816, column: 6)
!6443 = !DILocation(line: 816, column: 6, scope: !6413)
!6444 = !DILocation(line: 817, column: 3, scope: !6442)
!6445 = !DILocation(line: 819, column: 30, scope: !6413)
!6446 = !DILocation(line: 819, column: 7, scope: !6413)
!6447 = !DILocation(line: 819, column: 5, scope: !6413)
!6448 = !DILocation(line: 820, column: 6, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 820, column: 6)
!6450 = !DILocation(line: 820, column: 21, scope: !6449)
!6451 = !DILocation(line: 820, column: 6, scope: !6413)
!6452 = !DILocation(line: 821, column: 3, scope: !6449)
!6453 = !DILocation(line: 823, column: 35, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 823, column: 6)
!6455 = !DILocation(line: 823, column: 6, scope: !6454)
!6456 = !DILocation(line: 823, column: 6, scope: !6413)
!6457 = !DILocation(line: 824, column: 7, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 824, column: 7)
!6459 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 823, column: 40)
!6460 = !DILocation(line: 824, column: 22, scope: !6458)
!6461 = !DILocation(line: 824, column: 7, scope: !6459)
!6462 = !DILocation(line: 825, column: 4, scope: !6458)
!6463 = !DILocation(line: 826, column: 7, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 826, column: 7)
!6465 = !DILocation(line: 826, column: 22, scope: !6464)
!6466 = !DILocation(line: 826, column: 7, scope: !6459)
!6467 = !DILocation(line: 827, column: 4, scope: !6464)
!6468 = !DILocation(line: 828, column: 2, scope: !6459)
!6469 = !DILocation(line: 830, column: 6, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 830, column: 6)
!6471 = !DILocation(line: 830, column: 21, scope: !6470)
!6472 = !DILocation(line: 830, column: 6, scope: !6413)
!6473 = !DILocation(line: 831, column: 3, scope: !6470)
!6474 = !DILocation(line: 833, column: 2, scope: !6413)
!6475 = !DILocation(line: 834, column: 3, scope: !6413)
!6476 = !DILocation(line: 834, column: 10, scope: !6413)
!6477 = !DILocation(line: 836, column: 9, scope: !6413)
!6478 = !DILocation(line: 836, column: 2, scope: !6413)
!6479 = !DILocation(line: 837, column: 1, scope: !6413)
!6480 = distinct !DISubprogram(name: "ED_vgroup_vert_add", scope: !3, file: !3, line: 1247, type: !6481, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{null, !3872, !1368, !354, !1320, !354}
!6483 = !DILocalVariable(name: "ob", arg: 1, scope: !6480, file: !3, line: 1247, type: !3872)
!6484 = !DILocation(line: 1247, column: 33, scope: !6480)
!6485 = !DILocalVariable(name: "dg", arg: 2, scope: !6480, file: !3, line: 1247, type: !1368)
!6486 = !DILocation(line: 1247, column: 51, scope: !6480)
!6487 = !DILocalVariable(name: "vertnum", arg: 3, scope: !6480, file: !3, line: 1247, type: !354)
!6488 = !DILocation(line: 1247, column: 59, scope: !6480)
!6489 = !DILocalVariable(name: "weight", arg: 4, scope: !6480, file: !3, line: 1247, type: !1320)
!6490 = !DILocation(line: 1247, column: 74, scope: !6480)
!6491 = !DILocalVariable(name: "assignmode", arg: 5, scope: !6480, file: !3, line: 1247, type: !354)
!6492 = !DILocation(line: 1247, column: 86, scope: !6480)
!6493 = !DILocalVariable(name: "def_nr", scope: !6480, file: !3, line: 1252, type: !4075)
!6494 = !DILocation(line: 1252, column: 12, scope: !6480)
!6495 = !DILocation(line: 1252, column: 36, scope: !6480)
!6496 = !DILocation(line: 1252, column: 40, scope: !6480)
!6497 = !DILocation(line: 1252, column: 49, scope: !6480)
!6498 = !DILocation(line: 1252, column: 21, scope: !6480)
!6499 = !DILocalVariable(name: "dv", scope: !6480, file: !3, line: 1254, type: !4203)
!6500 = !DILocation(line: 1254, column: 15, scope: !6480)
!6501 = !DILocalVariable(name: "tot", scope: !6480, file: !3, line: 1255, type: !354)
!6502 = !DILocation(line: 1255, column: 6, scope: !6480)
!6503 = !DILocation(line: 1260, column: 6, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 1260, column: 6)
!6505 = !DILocation(line: 1260, column: 13, scope: !6504)
!6506 = !DILocation(line: 1260, column: 6, scope: !6480)
!6507 = !DILocation(line: 1264, column: 27, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1264, column: 7)
!6509 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 1260, column: 20)
!6510 = !DILocation(line: 1264, column: 31, scope: !6508)
!6511 = !DILocation(line: 1264, column: 7, scope: !6508)
!6512 = !DILocation(line: 1264, column: 48, scope: !6508)
!6513 = !DILocation(line: 1264, column: 51, scope: !6508)
!6514 = !DILocation(line: 1264, column: 54, scope: !6508)
!6515 = !DILocation(line: 1264, column: 7, scope: !6509)
!6516 = !DILocation(line: 1265, column: 26, scope: !6508)
!6517 = !DILocation(line: 1265, column: 30, scope: !6508)
!6518 = !DILocation(line: 1265, column: 4, scope: !6508)
!6519 = !DILocation(line: 1269, column: 25, scope: !6509)
!6520 = !DILocation(line: 1269, column: 29, scope: !6509)
!6521 = !DILocation(line: 1269, column: 37, scope: !6509)
!6522 = !DILocation(line: 1269, column: 46, scope: !6509)
!6523 = !DILocation(line: 1269, column: 54, scope: !6509)
!6524 = !DILocation(line: 1269, column: 3, scope: !6509)
!6525 = !DILocation(line: 1270, column: 2, scope: !6509)
!6526 = !DILocation(line: 1271, column: 1, scope: !6480)
!6527 = distinct !DISubprogram(name: "ED_vgroup_nr_vert_add", scope: !3, file: !3, line: 1167, type: !6528, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{null, !3872, !4075, !4075, !1851, !4075}
!6530 = !DILocalVariable(name: "ob", arg: 1, scope: !6527, file: !3, line: 1167, type: !3872)
!6531 = !DILocation(line: 1167, column: 43, scope: !6527)
!6532 = !DILocalVariable(name: "def_nr", arg: 2, scope: !6527, file: !3, line: 1168, type: !4075)
!6533 = !DILocation(line: 1168, column: 45, scope: !6527)
!6534 = !DILocalVariable(name: "vertnum", arg: 3, scope: !6527, file: !3, line: 1168, type: !4075)
!6535 = !DILocation(line: 1168, column: 63, scope: !6527)
!6536 = !DILocalVariable(name: "weight", arg: 4, scope: !6527, file: !3, line: 1169, type: !1851)
!6537 = !DILocation(line: 1169, column: 47, scope: !6527)
!6538 = !DILocalVariable(name: "assignmode", arg: 5, scope: !6527, file: !3, line: 1169, type: !4075)
!6539 = !DILocation(line: 1169, column: 65, scope: !6527)
!6540 = !DILocalVariable(name: "dvert", scope: !6527, file: !3, line: 1174, type: !4203)
!6541 = !DILocation(line: 1174, column: 15, scope: !6527)
!6542 = !DILocalVariable(name: "tot", scope: !6527, file: !3, line: 1175, type: !354)
!6543 = !DILocation(line: 1175, column: 6, scope: !6527)
!6544 = !DILocation(line: 1178, column: 22, scope: !6527)
!6545 = !DILocation(line: 1178, column: 26, scope: !6527)
!6546 = !DILocation(line: 1178, column: 2, scope: !6527)
!6547 = !DILocation(line: 1180, column: 6, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1180, column: 6)
!6549 = !DILocation(line: 1180, column: 12, scope: !6548)
!6550 = !DILocation(line: 1180, column: 6, scope: !6527)
!6551 = !DILocation(line: 1181, column: 3, scope: !6548)
!6552 = !DILocation(line: 1184, column: 7, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1184, column: 6)
!6554 = !DILocation(line: 1184, column: 15, scope: !6553)
!6555 = !DILocation(line: 1184, column: 20, scope: !6553)
!6556 = !DILocation(line: 1184, column: 24, scope: !6553)
!6557 = !DILocation(line: 1184, column: 35, scope: !6553)
!6558 = !DILocation(line: 1184, column: 32, scope: !6553)
!6559 = !DILocation(line: 1184, column: 6, scope: !6527)
!6560 = !DILocation(line: 1185, column: 3, scope: !6553)
!6561 = !DILocation(line: 1188, column: 6, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1188, column: 6)
!6563 = !DILocation(line: 1188, column: 6, scope: !6527)
!6564 = !DILocalVariable(name: "dv", scope: !6565, file: !3, line: 1189, type: !4203)
!6565 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 1188, column: 13)
!6566 = !DILocation(line: 1189, column: 16, scope: !6565)
!6567 = !DILocation(line: 1189, column: 22, scope: !6565)
!6568 = !DILocation(line: 1189, column: 28, scope: !6565)
!6569 = !DILocalVariable(name: "dw", scope: !6565, file: !3, line: 1190, type: !4449)
!6570 = !DILocation(line: 1190, column: 18, scope: !6565)
!6571 = !DILocation(line: 1197, column: 27, scope: !6565)
!6572 = !DILocation(line: 1197, column: 31, scope: !6565)
!6573 = !DILocation(line: 1197, column: 8, scope: !6565)
!6574 = !DILocation(line: 1197, column: 6, scope: !6565)
!6575 = !DILocation(line: 1199, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 1199, column: 7)
!6577 = !DILocation(line: 1199, column: 7, scope: !6565)
!6578 = !DILocation(line: 1200, column: 12, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 1199, column: 11)
!6580 = !DILocation(line: 1200, column: 4, scope: !6579)
!6581 = !DILocation(line: 1202, column: 19, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 1200, column: 24)
!6583 = !DILocation(line: 1202, column: 6, scope: !6582)
!6584 = !DILocation(line: 1202, column: 10, scope: !6582)
!6585 = !DILocation(line: 1202, column: 17, scope: !6582)
!6586 = !DILocation(line: 1203, column: 6, scope: !6582)
!6587 = !DILocation(line: 1205, column: 20, scope: !6582)
!6588 = !DILocation(line: 1205, column: 6, scope: !6582)
!6589 = !DILocation(line: 1205, column: 10, scope: !6582)
!6590 = !DILocation(line: 1205, column: 17, scope: !6582)
!6591 = !DILocation(line: 1206, column: 10, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 1206, column: 10)
!6593 = !DILocation(line: 1206, column: 14, scope: !6592)
!6594 = !DILocation(line: 1206, column: 21, scope: !6592)
!6595 = !DILocation(line: 1206, column: 10, scope: !6582)
!6596 = !DILocation(line: 1207, column: 7, scope: !6592)
!6597 = !DILocation(line: 1207, column: 11, scope: !6592)
!6598 = !DILocation(line: 1207, column: 18, scope: !6592)
!6599 = !DILocation(line: 1208, column: 6, scope: !6582)
!6600 = !DILocation(line: 1210, column: 20, scope: !6582)
!6601 = !DILocation(line: 1210, column: 6, scope: !6582)
!6602 = !DILocation(line: 1210, column: 10, scope: !6582)
!6603 = !DILocation(line: 1210, column: 17, scope: !6582)
!6604 = !DILocation(line: 1214, column: 10, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 1214, column: 10)
!6606 = !DILocation(line: 1214, column: 14, scope: !6605)
!6607 = !DILocation(line: 1214, column: 21, scope: !6605)
!6608 = !DILocation(line: 1214, column: 10, scope: !6582)
!6609 = !DILocation(line: 1215, column: 28, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 1214, column: 30)
!6611 = !DILocation(line: 1215, column: 32, scope: !6610)
!6612 = !DILocation(line: 1215, column: 7, scope: !6610)
!6613 = !DILocation(line: 1216, column: 6, scope: !6610)
!6614 = !DILocation(line: 1217, column: 6, scope: !6582)
!6615 = !DILocation(line: 1219, column: 3, scope: !6579)
!6616 = !DILocation(line: 1225, column: 12, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 1220, column: 8)
!6618 = !DILocation(line: 1225, column: 4, scope: !6617)
!6619 = !DILocation(line: 1230, column: 6, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1225, column: 24)
!6621 = !DILocation(line: 1239, column: 31, scope: !6620)
!6622 = !DILocation(line: 1239, column: 35, scope: !6620)
!6623 = !DILocation(line: 1239, column: 43, scope: !6620)
!6624 = !DILocation(line: 1239, column: 6, scope: !6620)
!6625 = !DILocation(line: 1240, column: 6, scope: !6620)
!6626 = !DILocation(line: 1243, column: 2, scope: !6565)
!6627 = !DILocation(line: 1244, column: 1, scope: !6527)
!6628 = distinct !DISubprogram(name: "ED_vgroup_vert_remove", scope: !3, file: !3, line: 1274, type: !6629, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{null, !3872, !1368, !354}
!6631 = !DILocalVariable(name: "ob", arg: 1, scope: !6628, file: !3, line: 1274, type: !3872)
!6632 = !DILocation(line: 1274, column: 36, scope: !6628)
!6633 = !DILocalVariable(name: "dg", arg: 2, scope: !6628, file: !3, line: 1274, type: !1368)
!6634 = !DILocation(line: 1274, column: 54, scope: !6628)
!6635 = !DILocalVariable(name: "vertnum", arg: 3, scope: !6628, file: !3, line: 1274, type: !354)
!6636 = !DILocation(line: 1274, column: 62, scope: !6628)
!6637 = !DILocalVariable(name: "def_nr", scope: !6628, file: !3, line: 1281, type: !4075)
!6638 = !DILocation(line: 1281, column: 12, scope: !6628)
!6639 = !DILocation(line: 1281, column: 36, scope: !6628)
!6640 = !DILocation(line: 1281, column: 40, scope: !6628)
!6641 = !DILocation(line: 1281, column: 49, scope: !6628)
!6642 = !DILocation(line: 1281, column: 21, scope: !6628)
!6643 = !DILocation(line: 1283, column: 6, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 1283, column: 6)
!6645 = !DILocation(line: 1283, column: 13, scope: !6644)
!6646 = !DILocation(line: 1283, column: 6, scope: !6628)
!6647 = !DILocalVariable(name: "dvert", scope: !6648, file: !3, line: 1284, type: !4203)
!6648 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 1283, column: 20)
!6649 = !DILocation(line: 1284, column: 16, scope: !6648)
!6650 = !DILocalVariable(name: "tot", scope: !6648, file: !3, line: 1285, type: !354)
!6651 = !DILocation(line: 1285, column: 7, scope: !6648)
!6652 = !DILocation(line: 1290, column: 23, scope: !6648)
!6653 = !DILocation(line: 1290, column: 27, scope: !6648)
!6654 = !DILocation(line: 1290, column: 3, scope: !6648)
!6655 = !DILocation(line: 1292, column: 7, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 1292, column: 7)
!6657 = !DILocation(line: 1292, column: 7, scope: !6648)
!6658 = !DILocalVariable(name: "dv", scope: !6659, file: !3, line: 1293, type: !4203)
!6659 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 1292, column: 14)
!6660 = !DILocation(line: 1293, column: 17, scope: !6659)
!6661 = !DILocation(line: 1293, column: 23, scope: !6659)
!6662 = !DILocation(line: 1293, column: 29, scope: !6659)
!6663 = !DILocalVariable(name: "dw", scope: !6659, file: !3, line: 1294, type: !4449)
!6664 = !DILocation(line: 1294, column: 19, scope: !6659)
!6665 = !DILocation(line: 1296, column: 28, scope: !6659)
!6666 = !DILocation(line: 1296, column: 32, scope: !6659)
!6667 = !DILocation(line: 1296, column: 9, scope: !6659)
!6668 = !DILocation(line: 1296, column: 7, scope: !6659)
!6669 = !DILocation(line: 1297, column: 25, scope: !6659)
!6670 = !DILocation(line: 1297, column: 29, scope: !6659)
!6671 = !DILocation(line: 1297, column: 4, scope: !6659)
!6672 = !DILocation(line: 1298, column: 3, scope: !6659)
!6673 = !DILocation(line: 1299, column: 2, scope: !6648)
!6674 = !DILocation(line: 1300, column: 1, scope: !6628)
!6675 = distinct !DISubprogram(name: "ED_vgroup_vert_weight", scope: !3, file: !3, line: 1355, type: !6676, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6676 = !DISubroutineType(types: !6677)
!6677 = !{!1320, !3872, !1368, !354}
!6678 = !DILocalVariable(name: "ob", arg: 1, scope: !6675, file: !3, line: 1355, type: !3872)
!6679 = !DILocation(line: 1355, column: 37, scope: !6675)
!6680 = !DILocalVariable(name: "dg", arg: 2, scope: !6675, file: !3, line: 1355, type: !1368)
!6681 = !DILocation(line: 1355, column: 55, scope: !6675)
!6682 = !DILocalVariable(name: "vertnum", arg: 3, scope: !6675, file: !3, line: 1355, type: !354)
!6683 = !DILocation(line: 1355, column: 63, scope: !6675)
!6684 = !DILocalVariable(name: "def_nr", scope: !6675, file: !3, line: 1357, type: !4075)
!6685 = !DILocation(line: 1357, column: 12, scope: !6675)
!6686 = !DILocation(line: 1357, column: 36, scope: !6675)
!6687 = !DILocation(line: 1357, column: 40, scope: !6675)
!6688 = !DILocation(line: 1357, column: 49, scope: !6675)
!6689 = !DILocation(line: 1357, column: 21, scope: !6675)
!6690 = !DILocation(line: 1359, column: 6, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 1359, column: 6)
!6692 = !DILocation(line: 1359, column: 13, scope: !6691)
!6693 = !DILocation(line: 1359, column: 6, scope: !6675)
!6694 = !DILocation(line: 1360, column: 3, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 1359, column: 20)
!6696 = !DILocation(line: 1363, column: 25, scope: !6675)
!6697 = !DILocation(line: 1363, column: 29, scope: !6675)
!6698 = !DILocation(line: 1363, column: 37, scope: !6675)
!6699 = !DILocation(line: 1363, column: 9, scope: !6675)
!6700 = !DILocation(line: 1363, column: 2, scope: !6675)
!6701 = !DILocation(line: 1364, column: 1, scope: !6675)
!6702 = distinct !DISubprogram(name: "get_vert_def_nr", scope: !3, file: !3, line: 1302, type: !6703, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6703 = !DISubroutineType(types: !6704)
!6704 = !{!1320, !3872, !4075, !4075}
!6705 = !DILocalVariable(name: "ob", arg: 1, scope: !6702, file: !3, line: 1302, type: !3872)
!6706 = !DILocation(line: 1302, column: 38, scope: !6702)
!6707 = !DILocalVariable(name: "def_nr", arg: 2, scope: !6702, file: !3, line: 1302, type: !4075)
!6708 = !DILocation(line: 1302, column: 52, scope: !6702)
!6709 = !DILocalVariable(name: "vertnum", arg: 3, scope: !6702, file: !3, line: 1302, type: !4075)
!6710 = !DILocation(line: 1302, column: 70, scope: !6702)
!6711 = !DILocalVariable(name: "dv", scope: !6702, file: !3, line: 1304, type: !4203)
!6712 = !DILocation(line: 1304, column: 15, scope: !6702)
!6713 = !DILocation(line: 1307, column: 6, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 1307, column: 6)
!6715 = !DILocation(line: 1307, column: 10, scope: !6714)
!6716 = !DILocation(line: 1307, column: 15, scope: !6714)
!6717 = !DILocation(line: 1307, column: 6, scope: !6702)
!6718 = !DILocalVariable(name: "me", scope: !6719, file: !3, line: 1308, type: !1383)
!6719 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 1307, column: 27)
!6720 = !DILocation(line: 1308, column: 9, scope: !6719)
!6721 = !DILocation(line: 1308, column: 14, scope: !6719)
!6722 = !DILocation(line: 1308, column: 18, scope: !6719)
!6723 = !DILocation(line: 1310, column: 7, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 1310, column: 7)
!6725 = !DILocation(line: 1310, column: 11, scope: !6724)
!6726 = !DILocation(line: 1310, column: 7, scope: !6719)
!6727 = !DILocalVariable(name: "em", scope: !6728, file: !3, line: 1311, type: !4100)
!6728 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 1310, column: 24)
!6729 = !DILocation(line: 1311, column: 16, scope: !6728)
!6730 = !DILocation(line: 1311, column: 21, scope: !6728)
!6731 = !DILocation(line: 1311, column: 25, scope: !6728)
!6732 = !DILocalVariable(name: "cd_dvert_offset", scope: !6728, file: !3, line: 1312, type: !4075)
!6733 = !DILocation(line: 1312, column: 14, scope: !6728)
!6734 = !DILocation(line: 1312, column: 55, scope: !6728)
!6735 = !DILocation(line: 1312, column: 59, scope: !6728)
!6736 = !DILocation(line: 1312, column: 63, scope: !6728)
!6737 = !DILocation(line: 1312, column: 32, scope: !6728)
!6738 = !DILocation(line: 1315, column: 8, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1315, column: 8)
!6740 = !DILocation(line: 1315, column: 24, scope: !6739)
!6741 = !DILocation(line: 1315, column: 8, scope: !6728)
!6742 = !DILocalVariable(name: "eve", scope: !6743, file: !3, line: 1316, type: !1627)
!6743 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1315, column: 31)
!6744 = !DILocation(line: 1316, column: 13, scope: !6743)
!6745 = !DILocation(line: 1317, column: 31, scope: !6743)
!6746 = !DILocation(line: 1317, column: 35, scope: !6743)
!6747 = !DILocation(line: 1317, column: 5, scope: !6743)
!6748 = !DILocation(line: 1318, column: 28, scope: !6743)
!6749 = !DILocation(line: 1318, column: 32, scope: !6743)
!6750 = !DILocation(line: 1318, column: 36, scope: !6743)
!6751 = !DILocation(line: 1318, column: 11, scope: !6743)
!6752 = !DILocation(line: 1318, column: 9, scope: !6743)
!6753 = !DILocation(line: 1319, column: 10, scope: !6743)
!6754 = !DILocation(line: 1319, column: 8, scope: !6743)
!6755 = !DILocation(line: 1320, column: 4, scope: !6743)
!6756 = !DILocation(line: 1322, column: 5, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1321, column: 9)
!6758 = !DILocation(line: 1324, column: 3, scope: !6728)
!6759 = !DILocation(line: 1326, column: 8, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 1326, column: 8)
!6761 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 1325, column: 8)
!6762 = !DILocation(line: 1326, column: 12, scope: !6760)
!6763 = !DILocation(line: 1326, column: 8, scope: !6761)
!6764 = !DILocation(line: 1327, column: 9, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 1327, column: 9)
!6766 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 1326, column: 19)
!6767 = !DILocation(line: 1327, column: 20, scope: !6765)
!6768 = !DILocation(line: 1327, column: 24, scope: !6765)
!6769 = !DILocation(line: 1327, column: 17, scope: !6765)
!6770 = !DILocation(line: 1327, column: 9, scope: !6766)
!6771 = !DILocation(line: 1328, column: 6, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 1327, column: 33)
!6773 = !DILocation(line: 1330, column: 11, scope: !6766)
!6774 = !DILocation(line: 1330, column: 15, scope: !6766)
!6775 = !DILocation(line: 1330, column: 21, scope: !6766)
!6776 = !DILocation(line: 1330, column: 8, scope: !6766)
!6777 = !DILocation(line: 1331, column: 4, scope: !6766)
!6778 = !DILocation(line: 1333, column: 2, scope: !6719)
!6779 = !DILocation(line: 1334, column: 11, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 1334, column: 11)
!6781 = !DILocation(line: 1334, column: 15, scope: !6780)
!6782 = !DILocation(line: 1334, column: 20, scope: !6780)
!6783 = !DILocation(line: 1334, column: 11, scope: !6714)
!6784 = !DILocalVariable(name: "lt", scope: !6785, file: !3, line: 1335, type: !1227)
!6785 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 1334, column: 35)
!6786 = !DILocation(line: 1335, column: 12, scope: !6785)
!6787 = !DILocation(line: 1335, column: 37, scope: !6785)
!6788 = !DILocation(line: 1335, column: 17, scope: !6785)
!6789 = !DILocation(line: 1337, column: 7, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 1337, column: 7)
!6791 = !DILocation(line: 1337, column: 11, scope: !6790)
!6792 = !DILocation(line: 1337, column: 7, scope: !6785)
!6793 = !DILocation(line: 1338, column: 8, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 1338, column: 8)
!6795 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 1337, column: 18)
!6796 = !DILocation(line: 1338, column: 19, scope: !6794)
!6797 = !DILocation(line: 1338, column: 23, scope: !6794)
!6798 = !DILocation(line: 1338, column: 31, scope: !6794)
!6799 = !DILocation(line: 1338, column: 35, scope: !6794)
!6800 = !DILocation(line: 1338, column: 29, scope: !6794)
!6801 = !DILocation(line: 1338, column: 43, scope: !6794)
!6802 = !DILocation(line: 1338, column: 47, scope: !6794)
!6803 = !DILocation(line: 1338, column: 41, scope: !6794)
!6804 = !DILocation(line: 1338, column: 16, scope: !6794)
!6805 = !DILocation(line: 1338, column: 8, scope: !6795)
!6806 = !DILocation(line: 1339, column: 5, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 1338, column: 54)
!6808 = !DILocation(line: 1341, column: 10, scope: !6795)
!6809 = !DILocation(line: 1341, column: 14, scope: !6795)
!6810 = !DILocation(line: 1341, column: 20, scope: !6795)
!6811 = !DILocation(line: 1341, column: 7, scope: !6795)
!6812 = !DILocation(line: 1342, column: 3, scope: !6795)
!6813 = !DILocation(line: 1343, column: 2, scope: !6785)
!6814 = !DILocation(line: 1345, column: 6, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 1345, column: 6)
!6816 = !DILocation(line: 1345, column: 6, scope: !6702)
!6817 = !DILocalVariable(name: "dw", scope: !6818, file: !3, line: 1346, type: !4449)
!6818 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 1345, column: 10)
!6819 = !DILocation(line: 1346, column: 18, scope: !6818)
!6820 = !DILocation(line: 1346, column: 42, scope: !6818)
!6821 = !DILocation(line: 1346, column: 46, scope: !6818)
!6822 = !DILocation(line: 1346, column: 23, scope: !6818)
!6823 = !DILocation(line: 1347, column: 7, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 1347, column: 7)
!6825 = !DILocation(line: 1347, column: 7, scope: !6818)
!6826 = !DILocation(line: 1348, column: 11, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 1347, column: 11)
!6828 = !DILocation(line: 1348, column: 15, scope: !6827)
!6829 = !DILocation(line: 1348, column: 4, scope: !6827)
!6830 = !DILocation(line: 1350, column: 2, scope: !6818)
!6831 = !DILocation(line: 1352, column: 2, scope: !6702)
!6832 = !DILocation(line: 1353, column: 1, scope: !6702)
!6833 = distinct !DISubprogram(name: "ED_vgroup_select_by_name", scope: !3, file: !3, line: 1366, type: !6834, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{null, !3872, !1710}
!6836 = !DILocalVariable(name: "ob", arg: 1, scope: !6833, file: !3, line: 1366, type: !3872)
!6837 = !DILocation(line: 1366, column: 39, scope: !6833)
!6838 = !DILocalVariable(name: "name", arg: 2, scope: !6833, file: !3, line: 1366, type: !1710)
!6839 = !DILocation(line: 1366, column: 55, scope: !6833)
!6840 = !DILocation(line: 1368, column: 35, scope: !6833)
!6841 = !DILocation(line: 1368, column: 39, scope: !6833)
!6842 = !DILocation(line: 1368, column: 15, scope: !6833)
!6843 = !DILocation(line: 1368, column: 45, scope: !6833)
!6844 = !DILocation(line: 1368, column: 2, scope: !6833)
!6845 = !DILocation(line: 1368, column: 6, scope: !6833)
!6846 = !DILocation(line: 1368, column: 13, scope: !6833)
!6847 = !DILocation(line: 1369, column: 1, scope: !6833)
!6848 = distinct !DISubprogram(name: "ED_vgroup_subset_from_select_type", scope: !3, file: !3, line: 1504, type: !6849, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{!6422, !3872, !6851, !1972, !1972}
!6851 = !DIDerivedType(tag: DW_TAG_typedef, name: "eVGroupSelect", file: !173, line: 1628, baseType: !172)
!6852 = !DILocalVariable(name: "ob", arg: 1, scope: !6848, file: !3, line: 1504, type: !3872)
!6853 = !DILocation(line: 1504, column: 49, scope: !6848)
!6854 = !DILocalVariable(name: "subset_type", arg: 2, scope: !6848, file: !3, line: 1504, type: !6851)
!6855 = !DILocation(line: 1504, column: 67, scope: !6848)
!6856 = !DILocalVariable(name: "r_vgroup_tot", arg: 3, scope: !6848, file: !3, line: 1504, type: !1972)
!6857 = !DILocation(line: 1504, column: 85, scope: !6848)
!6858 = !DILocalVariable(name: "r_subset_count", arg: 4, scope: !6848, file: !3, line: 1504, type: !1972)
!6859 = !DILocation(line: 1504, column: 104, scope: !6848)
!6860 = !DILocalVariable(name: "vgroup_validmap", scope: !6848, file: !3, line: 1506, type: !6422)
!6861 = !DILocation(line: 1506, column: 8, scope: !6848)
!6862 = !DILocation(line: 1507, column: 33, scope: !6848)
!6863 = !DILocation(line: 1507, column: 37, scope: !6848)
!6864 = !DILocation(line: 1507, column: 18, scope: !6848)
!6865 = !DILocation(line: 1507, column: 3, scope: !6848)
!6866 = !DILocation(line: 1507, column: 16, scope: !6848)
!6867 = !DILocation(line: 1509, column: 10, scope: !6848)
!6868 = !DILocation(line: 1509, column: 2, scope: !6848)
!6869 = !DILocalVariable(name: "def_nr_active", scope: !6870, file: !3, line: 1512, type: !4075)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1511, column: 3)
!6871 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 1509, column: 23)
!6872 = !DILocation(line: 1512, column: 14, scope: !6870)
!6873 = !DILocation(line: 1512, column: 30, scope: !6870)
!6874 = !DILocation(line: 1512, column: 34, scope: !6870)
!6875 = !DILocation(line: 1512, column: 41, scope: !6870)
!6876 = !DILocation(line: 1513, column: 22, scope: !6870)
!6877 = !DILocation(line: 1513, column: 35, scope: !6870)
!6878 = !DILocation(line: 1513, column: 34, scope: !6870)
!6879 = !DILocation(line: 1513, column: 48, scope: !6870)
!6880 = !DILocation(line: 1513, column: 20, scope: !6870)
!6881 = !DILocation(line: 1514, column: 11, scope: !6870)
!6882 = !DILocation(line: 1514, column: 36, scope: !6870)
!6883 = !DILocation(line: 1514, column: 35, scope: !6870)
!6884 = !DILocation(line: 1514, column: 49, scope: !6870)
!6885 = !DILocation(line: 1514, column: 4, scope: !6870)
!6886 = !DILocation(line: 1515, column: 9, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1515, column: 8)
!6888 = !DILocation(line: 1515, column: 23, scope: !6887)
!6889 = !DILocation(line: 1515, column: 29, scope: !6887)
!6890 = !DILocation(line: 1515, column: 33, scope: !6887)
!6891 = !DILocation(line: 1515, column: 50, scope: !6887)
!6892 = !DILocation(line: 1515, column: 49, scope: !6887)
!6893 = !DILocation(line: 1515, column: 47, scope: !6887)
!6894 = !DILocation(line: 1515, column: 8, scope: !6870)
!6895 = !DILocation(line: 1516, column: 6, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 1515, column: 65)
!6897 = !DILocation(line: 1516, column: 21, scope: !6896)
!6898 = !DILocation(line: 1517, column: 5, scope: !6896)
!6899 = !DILocation(line: 1517, column: 21, scope: !6896)
!6900 = !DILocation(line: 1517, column: 36, scope: !6896)
!6901 = !DILocation(line: 1518, column: 4, scope: !6896)
!6902 = !DILocation(line: 1520, column: 6, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 1519, column: 9)
!6904 = !DILocation(line: 1520, column: 21, scope: !6903)
!6905 = !DILocation(line: 1522, column: 4, scope: !6870)
!6906 = !DILocation(line: 1526, column: 46, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1525, column: 3)
!6908 = !DILocation(line: 1526, column: 51, scope: !6907)
!6909 = !DILocation(line: 1526, column: 50, scope: !6907)
!6910 = !DILocation(line: 1526, column: 65, scope: !6907)
!6911 = !DILocation(line: 1526, column: 22, scope: !6907)
!6912 = !DILocation(line: 1526, column: 20, scope: !6907)
!6913 = !DILocation(line: 1527, column: 4, scope: !6907)
!6914 = !DILocalVariable(name: "i", scope: !6915, file: !3, line: 1531, type: !354)
!6915 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1530, column: 3)
!6916 = !DILocation(line: 1531, column: 8, scope: !6915)
!6917 = !DILocation(line: 1532, column: 46, scope: !6915)
!6918 = !DILocation(line: 1532, column: 51, scope: !6915)
!6919 = !DILocation(line: 1532, column: 50, scope: !6915)
!6920 = !DILocation(line: 1532, column: 22, scope: !6915)
!6921 = !DILocation(line: 1532, column: 20, scope: !6915)
!6922 = !DILocation(line: 1533, column: 5, scope: !6915)
!6923 = !DILocation(line: 1533, column: 20, scope: !6915)
!6924 = !DILocation(line: 1534, column: 11, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 1534, column: 4)
!6926 = !DILocation(line: 1534, column: 9, scope: !6925)
!6927 = !DILocation(line: 1534, column: 16, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 1534, column: 4)
!6929 = !DILocation(line: 1534, column: 21, scope: !6928)
!6930 = !DILocation(line: 1534, column: 20, scope: !6928)
!6931 = !DILocation(line: 1534, column: 18, scope: !6928)
!6932 = !DILocation(line: 1534, column: 4, scope: !6925)
!6933 = !DILocation(line: 1535, column: 9, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 1535, column: 9)
!6935 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 1534, column: 40)
!6936 = !DILocation(line: 1535, column: 25, scope: !6934)
!6937 = !DILocation(line: 1535, column: 28, scope: !6934)
!6938 = !DILocation(line: 1535, column: 9, scope: !6935)
!6939 = !DILocation(line: 1536, column: 7, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 1535, column: 37)
!6941 = !DILocation(line: 1536, column: 22, scope: !6940)
!6942 = !DILocation(line: 1537, column: 5, scope: !6940)
!6943 = !DILocation(line: 1538, column: 4, scope: !6935)
!6944 = !DILocation(line: 1534, column: 36, scope: !6928)
!6945 = !DILocation(line: 1534, column: 4, scope: !6928)
!6946 = distinct !{!6946, !6932, !6947}
!6947 = !DILocation(line: 1538, column: 4, scope: !6925)
!6948 = !DILocation(line: 1539, column: 4, scope: !6915)
!6949 = !DILocalVariable(name: "i", scope: !6950, file: !3, line: 1543, type: !354)
!6950 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1542, column: 3)
!6951 = !DILocation(line: 1543, column: 8, scope: !6950)
!6952 = !DILocation(line: 1544, column: 46, scope: !6950)
!6953 = !DILocation(line: 1544, column: 51, scope: !6950)
!6954 = !DILocation(line: 1544, column: 50, scope: !6950)
!6955 = !DILocation(line: 1544, column: 22, scope: !6950)
!6956 = !DILocation(line: 1544, column: 20, scope: !6950)
!6957 = !DILocation(line: 1545, column: 5, scope: !6950)
!6958 = !DILocation(line: 1545, column: 20, scope: !6950)
!6959 = !DILocation(line: 1546, column: 11, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 1546, column: 4)
!6961 = !DILocation(line: 1546, column: 9, scope: !6960)
!6962 = !DILocation(line: 1546, column: 16, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 1546, column: 4)
!6964 = !DILocation(line: 1546, column: 21, scope: !6963)
!6965 = !DILocation(line: 1546, column: 20, scope: !6963)
!6966 = !DILocation(line: 1546, column: 18, scope: !6963)
!6967 = !DILocation(line: 1546, column: 4, scope: !6960)
!6968 = !DILocation(line: 1547, column: 27, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 1546, column: 40)
!6970 = !DILocation(line: 1547, column: 43, scope: !6969)
!6971 = !DILocation(line: 1547, column: 26, scope: !6969)
!6972 = !DILocation(line: 1547, column: 5, scope: !6969)
!6973 = !DILocation(line: 1547, column: 21, scope: !6969)
!6974 = !DILocation(line: 1547, column: 24, scope: !6969)
!6975 = !DILocation(line: 1548, column: 9, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 1548, column: 9)
!6977 = !DILocation(line: 1548, column: 25, scope: !6976)
!6978 = !DILocation(line: 1548, column: 28, scope: !6976)
!6979 = !DILocation(line: 1548, column: 9, scope: !6969)
!6980 = !DILocation(line: 1549, column: 7, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 1548, column: 37)
!6982 = !DILocation(line: 1549, column: 22, scope: !6981)
!6983 = !DILocation(line: 1550, column: 5, scope: !6981)
!6984 = !DILocation(line: 1551, column: 4, scope: !6969)
!6985 = !DILocation(line: 1546, column: 36, scope: !6963)
!6986 = !DILocation(line: 1546, column: 4, scope: !6963)
!6987 = distinct !{!6987, !6967, !6988}
!6988 = !DILocation(line: 1551, column: 4, scope: !6960)
!6989 = !DILocation(line: 1552, column: 4, scope: !6950)
!6990 = !DILocation(line: 1553, column: 3, scope: !6950)
!6991 = !DILocation(line: 1557, column: 22, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1556, column: 3)
!6993 = !DILocation(line: 1557, column: 35, scope: !6992)
!6994 = !DILocation(line: 1557, column: 34, scope: !6992)
!6995 = !DILocation(line: 1557, column: 48, scope: !6992)
!6996 = !DILocation(line: 1557, column: 20, scope: !6992)
!6997 = !DILocation(line: 1558, column: 11, scope: !6992)
!6998 = !DILocation(line: 1558, column: 35, scope: !6992)
!6999 = !DILocation(line: 1558, column: 34, scope: !6992)
!7000 = !DILocation(line: 1558, column: 48, scope: !6992)
!7001 = !DILocation(line: 1558, column: 4, scope: !6992)
!7002 = !DILocation(line: 1559, column: 23, scope: !6992)
!7003 = !DILocation(line: 1559, column: 22, scope: !6992)
!7004 = !DILocation(line: 1559, column: 5, scope: !6992)
!7005 = !DILocation(line: 1559, column: 20, scope: !6992)
!7006 = !DILocation(line: 1560, column: 4, scope: !6992)
!7007 = !DILocation(line: 1564, column: 9, scope: !6848)
!7008 = !DILocation(line: 1564, column: 2, scope: !6848)
!7009 = distinct !DISubprogram(name: "ED_vgroup_subset_to_index_array", scope: !3, file: !3, line: 1570, type: !7010, scopeLine: 1572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7010 = !DISubroutineType(types: !7011)
!7011 = !{null, !5078, !4075, !1972}
!7012 = !DILocalVariable(name: "vgroup_validmap", arg: 1, scope: !7009, file: !3, line: 1570, type: !5078)
!7013 = !DILocation(line: 1570, column: 50, scope: !7009)
!7014 = !DILocalVariable(name: "vgroup_tot", arg: 2, scope: !7009, file: !3, line: 1570, type: !4075)
!7015 = !DILocation(line: 1570, column: 77, scope: !7009)
!7016 = !DILocalVariable(name: "r_vgroup_subset_map", arg: 3, scope: !7009, file: !3, line: 1571, type: !1972)
!7017 = !DILocation(line: 1571, column: 43, scope: !7009)
!7018 = !DILocalVariable(name: "i", scope: !7009, file: !3, line: 1573, type: !354)
!7019 = !DILocation(line: 1573, column: 6, scope: !7009)
!7020 = !DILocalVariable(name: "j", scope: !7009, file: !3, line: 1573, type: !354)
!7021 = !DILocation(line: 1573, column: 9, scope: !7009)
!7022 = !DILocation(line: 1574, column: 9, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 1574, column: 2)
!7024 = !DILocation(line: 1574, column: 7, scope: !7023)
!7025 = !DILocation(line: 1574, column: 14, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 1574, column: 2)
!7027 = !DILocation(line: 1574, column: 18, scope: !7026)
!7028 = !DILocation(line: 1574, column: 16, scope: !7026)
!7029 = !DILocation(line: 1574, column: 2, scope: !7023)
!7030 = !DILocation(line: 1575, column: 7, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 1575, column: 7)
!7032 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 1574, column: 35)
!7033 = !DILocation(line: 1575, column: 23, scope: !7031)
!7034 = !DILocation(line: 1575, column: 7, scope: !7032)
!7035 = !DILocation(line: 1576, column: 31, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 1575, column: 27)
!7037 = !DILocation(line: 1576, column: 4, scope: !7036)
!7038 = !DILocation(line: 1576, column: 25, scope: !7036)
!7039 = !DILocation(line: 1576, column: 29, scope: !7036)
!7040 = !DILocation(line: 1577, column: 3, scope: !7036)
!7041 = !DILocation(line: 1578, column: 2, scope: !7032)
!7042 = !DILocation(line: 1574, column: 31, scope: !7026)
!7043 = !DILocation(line: 1574, column: 2, scope: !7026)
!7044 = distinct !{!7044, !7029, !7045}
!7045 = !DILocation(line: 1578, column: 2, scope: !7023)
!7046 = !DILocation(line: 1579, column: 1, scope: !7009)
!7047 = distinct !DISubprogram(name: "ED_vgroup_mirror", scope: !3, file: !3, line: 2528, type: !7048, scopeLine: 2532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{null, !3872, !3381, !3381, !3381, !3381, !1972, !1972}
!7050 = !DILocalVariable(name: "ob", arg: 1, scope: !7047, file: !3, line: 2528, type: !3872)
!7051 = !DILocation(line: 2528, column: 31, scope: !7047)
!7052 = !DILocalVariable(name: "mirror_weights", arg: 2, scope: !7047, file: !3, line: 2529, type: !3381)
!7053 = !DILocation(line: 2529, column: 34, scope: !7047)
!7054 = !DILocalVariable(name: "flip_vgroups", arg: 3, scope: !7047, file: !3, line: 2529, type: !3381)
!7055 = !DILocation(line: 2529, column: 61, scope: !7047)
!7056 = !DILocalVariable(name: "all_vgroups", arg: 4, scope: !7047, file: !3, line: 2530, type: !3381)
!7057 = !DILocation(line: 2530, column: 34, scope: !7047)
!7058 = !DILocalVariable(name: "use_topology", arg: 5, scope: !7047, file: !3, line: 2530, type: !3381)
!7059 = !DILocation(line: 2530, column: 58, scope: !7047)
!7060 = !DILocalVariable(name: "r_totmirr", arg: 6, scope: !7047, file: !3, line: 2531, type: !1972)
!7061 = !DILocation(line: 2531, column: 28, scope: !7047)
!7062 = !DILocalVariable(name: "r_totfail", arg: 7, scope: !7047, file: !3, line: 2531, type: !1972)
!7063 = !DILocation(line: 2531, column: 44, scope: !7047)
!7064 = !DILocalVariable(name: "eve", scope: !7047, file: !3, line: 2542, type: !1627)
!7065 = !DILocation(line: 2542, column: 10, scope: !7047)
!7066 = !DILocalVariable(name: "eve_mirr", scope: !7047, file: !3, line: 2542, type: !1627)
!7067 = !DILocation(line: 2542, column: 16, scope: !7047)
!7068 = !DILocalVariable(name: "dvert", scope: !7047, file: !3, line: 2543, type: !4203)
!7069 = !DILocation(line: 2543, column: 15, scope: !7047)
!7070 = !DILocalVariable(name: "dvert_mirr", scope: !7047, file: !3, line: 2543, type: !4203)
!7071 = !DILocation(line: 2543, column: 23, scope: !7047)
!7072 = !DILocalVariable(name: "sel", scope: !7047, file: !3, line: 2544, type: !1253)
!7073 = !DILocation(line: 2544, column: 7, scope: !7047)
!7074 = !DILocalVariable(name: "sel_mirr", scope: !7047, file: !3, line: 2544, type: !1253)
!7075 = !DILocation(line: 2544, column: 12, scope: !7047)
!7076 = !DILocalVariable(name: "flip_map", scope: !7047, file: !3, line: 2545, type: !1972)
!7077 = !DILocation(line: 2545, column: 7, scope: !7047)
!7078 = !DILocalVariable(name: "flip_map_len", scope: !7047, file: !3, line: 2545, type: !354)
!7079 = !DILocation(line: 2545, column: 24, scope: !7047)
!7080 = !DILocalVariable(name: "def_nr", scope: !7047, file: !3, line: 2546, type: !4075)
!7081 = !DILocation(line: 2546, column: 12, scope: !7047)
!7082 = !DILocation(line: 2546, column: 21, scope: !7047)
!7083 = !DILocation(line: 2546, column: 25, scope: !7047)
!7084 = !DILocation(line: 2546, column: 32, scope: !7047)
!7085 = !DILocalVariable(name: "totmirr", scope: !7047, file: !3, line: 2547, type: !354)
!7086 = !DILocation(line: 2547, column: 6, scope: !7047)
!7087 = !DILocalVariable(name: "totfail", scope: !7047, file: !3, line: 2547, type: !354)
!7088 = !DILocation(line: 2547, column: 19, scope: !7047)
!7089 = !DILocation(line: 2549, column: 16, scope: !7047)
!7090 = !DILocation(line: 2549, column: 26, scope: !7047)
!7091 = !DILocation(line: 2549, column: 3, scope: !7047)
!7092 = !DILocation(line: 2549, column: 13, scope: !7047)
!7093 = !DILocation(line: 2551, column: 7, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 2551, column: 6)
!7095 = !DILocation(line: 2551, column: 22, scope: !7094)
!7096 = !DILocation(line: 2551, column: 31, scope: !7094)
!7097 = !DILocation(line: 2551, column: 34, scope: !7094)
!7098 = !DILocation(line: 2551, column: 47, scope: !7094)
!7099 = !DILocation(line: 2551, column: 57, scope: !7094)
!7100 = !DILocation(line: 2552, column: 21, scope: !7094)
!7101 = !DILocation(line: 2552, column: 25, scope: !7094)
!7102 = !DILocation(line: 2552, column: 34, scope: !7094)
!7103 = !DILocation(line: 2552, column: 7, scope: !7094)
!7104 = !DILocation(line: 2552, column: 42, scope: !7094)
!7105 = !DILocation(line: 2551, column: 6, scope: !7047)
!7106 = !DILocation(line: 2554, column: 3, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 2553, column: 2)
!7108 = !DILocation(line: 2557, column: 6, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 2557, column: 6)
!7110 = !DILocation(line: 2557, column: 6, scope: !7047)
!7111 = !DILocation(line: 2558, column: 14, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 2557, column: 20)
!7113 = !DILocation(line: 2559, column: 32, scope: !7112)
!7114 = !DILocation(line: 2559, column: 14, scope: !7112)
!7115 = !DILocation(line: 2560, column: 39, scope: !7112)
!7116 = !DILocation(line: 2560, column: 65, scope: !7112)
!7117 = !DILocation(line: 2560, column: 14, scope: !7112)
!7118 = !DILocation(line: 2558, column: 12, scope: !7112)
!7119 = !DILocation(line: 2564, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 2564, column: 7)
!7121 = !DILocation(line: 2564, column: 16, scope: !7120)
!7122 = !DILocation(line: 2564, column: 7, scope: !7112)
!7123 = !DILocation(line: 2566, column: 4, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 2564, column: 25)
!7125 = !DILocation(line: 2568, column: 2, scope: !7112)
!7126 = !DILocation(line: 2570, column: 12, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 2569, column: 7)
!7128 = !DILocation(line: 2571, column: 16, scope: !7127)
!7129 = !DILocation(line: 2575, column: 6, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 2575, column: 6)
!7131 = !DILocation(line: 2575, column: 10, scope: !7130)
!7132 = !DILocation(line: 2575, column: 15, scope: !7130)
!7133 = !DILocation(line: 2575, column: 6, scope: !7047)
!7134 = !DILocalVariable(name: "me", scope: !7135, file: !3, line: 2576, type: !1383)
!7135 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2575, column: 27)
!7136 = !DILocation(line: 2576, column: 9, scope: !7135)
!7137 = !DILocation(line: 2576, column: 14, scope: !7135)
!7138 = !DILocation(line: 2576, column: 18, scope: !7135)
!7139 = !DILocalVariable(name: "em", scope: !7135, file: !3, line: 2577, type: !4100)
!7140 = !DILocation(line: 2577, column: 15, scope: !7135)
!7141 = !DILocation(line: 2577, column: 20, scope: !7135)
!7142 = !DILocation(line: 2577, column: 24, scope: !7135)
!7143 = !DILocation(line: 2579, column: 7, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7135, file: !3, line: 2579, column: 7)
!7145 = !DILocation(line: 2579, column: 7, scope: !7135)
!7146 = !DILocalVariable(name: "cd_dvert_offset", scope: !7147, file: !3, line: 2580, type: !4075)
!7147 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 2579, column: 11)
!7148 = !DILocation(line: 2580, column: 14, scope: !7147)
!7149 = !DILocation(line: 2580, column: 55, scope: !7147)
!7150 = !DILocation(line: 2580, column: 59, scope: !7147)
!7151 = !DILocation(line: 2580, column: 63, scope: !7147)
!7152 = !DILocation(line: 2580, column: 32, scope: !7147)
!7153 = !DILocalVariable(name: "iter", scope: !7147, file: !3, line: 2581, type: !4112)
!7154 = !DILocation(line: 2581, column: 11, scope: !7147)
!7155 = !DILocation(line: 2583, column: 8, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 2583, column: 8)
!7157 = !DILocation(line: 2583, column: 24, scope: !7156)
!7158 = !DILocation(line: 2583, column: 8, scope: !7147)
!7159 = !DILocation(line: 2584, column: 5, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 2583, column: 31)
!7161 = !DILocation(line: 2587, column: 34, scope: !7147)
!7162 = !DILocation(line: 2587, column: 54, scope: !7147)
!7163 = !DILocation(line: 2587, column: 4, scope: !7147)
!7164 = !DILocation(line: 2590, column: 4, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 2590, column: 4)
!7166 = !DILocation(line: 2590, column: 4, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 2590, column: 4)
!7168 = !DILocation(line: 2591, column: 43, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 2591, column: 9)
!7170 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2590, column: 56)
!7171 = !DILocation(line: 2591, column: 47, scope: !7169)
!7172 = !DILocation(line: 2591, column: 21, scope: !7169)
!7173 = !DILocation(line: 2591, column: 19, scope: !7169)
!7174 = !DILocation(line: 2591, column: 9, scope: !7170)
!7175 = !DILocation(line: 2592, column: 10, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2592, column: 10)
!7177 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 2591, column: 54)
!7178 = !DILocation(line: 2592, column: 22, scope: !7176)
!7179 = !DILocation(line: 2592, column: 19, scope: !7176)
!7180 = !DILocation(line: 2592, column: 10, scope: !7177)
!7181 = !DILocation(line: 2593, column: 13, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 2592, column: 27)
!7183 = !DILocation(line: 2593, column: 11, scope: !7182)
!7184 = !DILocation(line: 2594, column: 18, scope: !7182)
!7185 = !DILocation(line: 2594, column: 16, scope: !7182)
!7186 = !DILocation(line: 2596, column: 12, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 2596, column: 11)
!7188 = !DILocation(line: 2596, column: 16, scope: !7187)
!7189 = !DILocation(line: 2596, column: 19, scope: !7187)
!7190 = !DILocation(line: 2596, column: 29, scope: !7187)
!7191 = !DILocation(line: 2596, column: 33, scope: !7187)
!7192 = !DILocation(line: 2596, column: 40, scope: !7187)
!7193 = !DILocation(line: 2596, column: 37, scope: !7187)
!7194 = !DILocation(line: 2596, column: 11, scope: !7182)
!7195 = !DILocation(line: 2597, column: 21, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 2596, column: 51)
!7197 = !DILocation(line: 2597, column: 19, scope: !7196)
!7198 = !DILocation(line: 2598, column: 21, scope: !7196)
!7199 = !DILocation(line: 2598, column: 19, scope: !7196)
!7200 = !DILocation(line: 2600, column: 8, scope: !7196)
!7201 = !DILocation(line: 2601, column: 15, scope: !7196)
!7202 = !DILocation(line: 2602, column: 7, scope: !7196)
!7203 = !DILocation(line: 2603, column: 6, scope: !7182)
!7204 = !DILocation(line: 2606, column: 36, scope: !7177)
!7205 = !DILocation(line: 2606, column: 40, scope: !7177)
!7206 = !DILocation(line: 2606, column: 6, scope: !7177)
!7207 = !DILocation(line: 2607, column: 36, scope: !7177)
!7208 = !DILocation(line: 2607, column: 40, scope: !7177)
!7209 = !DILocation(line: 2607, column: 6, scope: !7177)
!7210 = !DILocation(line: 2608, column: 5, scope: !7177)
!7211 = !DILocation(line: 2610, column: 13, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 2609, column: 10)
!7213 = !DILocation(line: 2612, column: 4, scope: !7170)
!7214 = distinct !{!7214, !7164, !7215}
!7215 = !DILocation(line: 2612, column: 4, scope: !7165)
!7216 = !DILocation(line: 2613, column: 32, scope: !7147)
!7217 = !DILocation(line: 2613, column: 4, scope: !7147)
!7218 = !DILocation(line: 2614, column: 3, scope: !7147)
!7219 = !DILocalVariable(name: "mv", scope: !7220, file: !3, line: 2617, type: !3476)
!7220 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 2615, column: 8)
!7221 = !DILocation(line: 2617, column: 11, scope: !7220)
!7222 = !DILocalVariable(name: "mv_mirr", scope: !7220, file: !3, line: 2617, type: !3476)
!7223 = !DILocation(line: 2617, column: 16, scope: !7220)
!7224 = !DILocalVariable(name: "vidx", scope: !7220, file: !3, line: 2618, type: !354)
!7225 = !DILocation(line: 2618, column: 8, scope: !7220)
!7226 = !DILocalVariable(name: "vidx_mirr", scope: !7220, file: !3, line: 2618, type: !354)
!7227 = !DILocation(line: 2618, column: 14, scope: !7220)
!7228 = !DILocalVariable(name: "use_vert_sel", scope: !7220, file: !3, line: 2619, type: !4075)
!7229 = !DILocation(line: 2619, column: 14, scope: !7220)
!7230 = !DILocation(line: 2619, column: 30, scope: !7220)
!7231 = !DILocation(line: 2619, column: 34, scope: !7220)
!7232 = !DILocation(line: 2619, column: 43, scope: !7220)
!7233 = !DILocation(line: 2619, column: 69, scope: !7220)
!7234 = !DILocation(line: 2621, column: 8, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 2621, column: 8)
!7236 = !DILocation(line: 2621, column: 12, scope: !7235)
!7237 = !DILocation(line: 2621, column: 18, scope: !7235)
!7238 = !DILocation(line: 2621, column: 8, scope: !7220)
!7239 = !DILocation(line: 2622, column: 5, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2621, column: 27)
!7241 = !DILocation(line: 2625, column: 9, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 2625, column: 8)
!7243 = !DILocation(line: 2625, column: 8, scope: !7220)
!7244 = !DILocation(line: 2626, column: 20, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 2625, column: 23)
!7246 = !DILocation(line: 2626, column: 9, scope: !7245)
!7247 = !DILocation(line: 2627, column: 4, scope: !7245)
!7248 = !DILocation(line: 2630, column: 14, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 2630, column: 4)
!7250 = !DILocation(line: 2630, column: 24, scope: !7249)
!7251 = !DILocation(line: 2630, column: 28, scope: !7249)
!7252 = !DILocation(line: 2630, column: 22, scope: !7249)
!7253 = !DILocation(line: 2630, column: 9, scope: !7249)
!7254 = !DILocation(line: 2630, column: 35, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 2630, column: 4)
!7256 = !DILocation(line: 2630, column: 42, scope: !7255)
!7257 = !DILocation(line: 2630, column: 46, scope: !7255)
!7258 = !DILocation(line: 2630, column: 40, scope: !7255)
!7259 = !DILocation(line: 2630, column: 4, scope: !7249)
!7260 = !DILocation(line: 2631, column: 5, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 2630, column: 69)
!7262 = !DILocation(line: 2631, column: 9, scope: !7261)
!7263 = !DILocation(line: 2631, column: 14, scope: !7261)
!7264 = !DILocation(line: 2632, column: 4, scope: !7261)
!7265 = !DILocation(line: 2630, column: 59, scope: !7255)
!7266 = !DILocation(line: 2630, column: 65, scope: !7255)
!7267 = !DILocation(line: 2630, column: 4, scope: !7255)
!7268 = distinct !{!7268, !7259, !7269}
!7269 = !DILocation(line: 2632, column: 4, scope: !7249)
!7270 = !DILocation(line: 2634, column: 14, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 2634, column: 4)
!7272 = !DILocation(line: 2634, column: 24, scope: !7271)
!7273 = !DILocation(line: 2634, column: 28, scope: !7271)
!7274 = !DILocation(line: 2634, column: 22, scope: !7271)
!7275 = !DILocation(line: 2634, column: 9, scope: !7271)
!7276 = !DILocation(line: 2634, column: 35, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 2634, column: 4)
!7278 = !DILocation(line: 2634, column: 42, scope: !7277)
!7279 = !DILocation(line: 2634, column: 46, scope: !7277)
!7280 = !DILocation(line: 2634, column: 40, scope: !7277)
!7281 = !DILocation(line: 2634, column: 4, scope: !7271)
!7282 = !DILocation(line: 2635, column: 10, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 2635, column: 9)
!7284 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 2634, column: 69)
!7285 = !DILocation(line: 2635, column: 14, scope: !7283)
!7286 = !DILocation(line: 2635, column: 19, scope: !7283)
!7287 = !DILocation(line: 2635, column: 38, scope: !7283)
!7288 = !DILocation(line: 2635, column: 9, scope: !7284)
!7289 = !DILocation(line: 2636, column: 46, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 2636, column: 10)
!7291 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2635, column: 44)
!7292 = !DILocation(line: 2636, column: 50, scope: !7290)
!7293 = !DILocation(line: 2636, column: 56, scope: !7290)
!7294 = !DILocation(line: 2636, column: 23, scope: !7290)
!7295 = !DILocation(line: 2636, column: 21, scope: !7290)
!7296 = !DILocation(line: 2636, column: 71, scope: !7290)
!7297 = !DILocation(line: 2636, column: 10, scope: !7291)
!7298 = !DILocation(line: 2637, column: 11, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 2637, column: 11)
!7300 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 2636, column: 78)
!7301 = !DILocation(line: 2637, column: 19, scope: !7299)
!7302 = !DILocation(line: 2637, column: 16, scope: !7299)
!7303 = !DILocation(line: 2637, column: 11, scope: !7300)
!7304 = !DILocation(line: 2638, column: 19, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2637, column: 30)
!7306 = !DILocation(line: 2638, column: 23, scope: !7305)
!7307 = !DILocation(line: 2638, column: 29, scope: !7305)
!7308 = !DILocation(line: 2638, column: 16, scope: !7305)
!7309 = !DILocation(line: 2639, column: 13, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 2639, column: 12)
!7311 = !DILocation(line: 2639, column: 22, scope: !7310)
!7312 = !DILocation(line: 2639, column: 27, scope: !7310)
!7313 = !DILocation(line: 2639, column: 46, scope: !7310)
!7314 = !DILocation(line: 2639, column: 12, scope: !7305)
!7315 = !DILocation(line: 2641, column: 13, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 2641, column: 13)
!7317 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 2639, column: 52)
!7318 = !DILocation(line: 2641, column: 13, scope: !7317)
!7319 = !DILocation(line: 2642, column: 16, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 2641, column: 27)
!7321 = !DILocation(line: 2642, column: 20, scope: !7320)
!7322 = !DILocation(line: 2642, column: 25, scope: !7320)
!7323 = !DILocation(line: 2642, column: 14, scope: !7320)
!7324 = !DILocation(line: 2643, column: 21, scope: !7320)
!7325 = !DILocation(line: 2643, column: 30, scope: !7320)
!7326 = !DILocation(line: 2643, column: 35, scope: !7320)
!7327 = !DILocation(line: 2643, column: 19, scope: !7320)
!7328 = !DILocation(line: 2644, column: 9, scope: !7320)
!7329 = !DILocation(line: 2646, column: 13, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 2646, column: 13)
!7331 = !DILocation(line: 2646, column: 17, scope: !7330)
!7332 = !DILocation(line: 2646, column: 20, scope: !7330)
!7333 = !DILocation(line: 2646, column: 13, scope: !7317)
!7334 = !DILocation(line: 2647, column: 19, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 2646, column: 30)
!7336 = !DILocation(line: 2647, column: 23, scope: !7335)
!7337 = !DILocation(line: 2647, column: 29, scope: !7335)
!7338 = !DILocation(line: 2647, column: 16, scope: !7335)
!7339 = !DILocation(line: 2648, column: 24, scope: !7335)
!7340 = !DILocation(line: 2648, column: 28, scope: !7335)
!7341 = !DILocation(line: 2648, column: 34, scope: !7335)
!7342 = !DILocation(line: 2648, column: 21, scope: !7335)
!7343 = !DILocation(line: 2650, column: 10, scope: !7335)
!7344 = !DILocation(line: 2651, column: 17, scope: !7335)
!7345 = !DILocation(line: 2652, column: 9, scope: !7335)
!7346 = !DILocation(line: 2654, column: 9, scope: !7317)
!7347 = !DILocation(line: 2654, column: 13, scope: !7317)
!7348 = !DILocation(line: 2654, column: 18, scope: !7317)
!7349 = !DILocation(line: 2655, column: 9, scope: !7317)
!7350 = !DILocation(line: 2655, column: 18, scope: !7317)
!7351 = !DILocation(line: 2655, column: 23, scope: !7317)
!7352 = !DILocation(line: 2656, column: 8, scope: !7317)
!7353 = !DILocation(line: 2657, column: 7, scope: !7305)
!7354 = !DILocation(line: 2658, column: 6, scope: !7300)
!7355 = !DILocation(line: 2660, column: 14, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 2659, column: 11)
!7357 = !DILocation(line: 2662, column: 5, scope: !7291)
!7358 = !DILocation(line: 2663, column: 4, scope: !7284)
!7359 = !DILocation(line: 2634, column: 59, scope: !7277)
!7360 = !DILocation(line: 2634, column: 65, scope: !7277)
!7361 = !DILocation(line: 2634, column: 4, scope: !7277)
!7362 = distinct !{!7362, !7281, !7363}
!7363 = !DILocation(line: 2663, column: 4, scope: !7271)
!7364 = !DILocation(line: 2665, column: 2, scope: !7135)
!7365 = !DILocation(line: 2666, column: 11, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2666, column: 11)
!7367 = !DILocation(line: 2666, column: 15, scope: !7366)
!7368 = !DILocation(line: 2666, column: 20, scope: !7366)
!7369 = !DILocation(line: 2666, column: 11, scope: !7130)
!7370 = !DILocalVariable(name: "lt", scope: !7371, file: !3, line: 2667, type: !1227)
!7371 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 2666, column: 35)
!7372 = !DILocation(line: 2667, column: 12, scope: !7371)
!7373 = !DILocation(line: 2667, column: 37, scope: !7371)
!7374 = !DILocation(line: 2667, column: 17, scope: !7371)
!7375 = !DILocalVariable(name: "i1", scope: !7371, file: !3, line: 2668, type: !354)
!7376 = !DILocation(line: 2668, column: 7, scope: !7371)
!7377 = !DILocalVariable(name: "i2", scope: !7371, file: !3, line: 2668, type: !354)
!7378 = !DILocation(line: 2668, column: 11, scope: !7371)
!7379 = !DILocalVariable(name: "u", scope: !7371, file: !3, line: 2669, type: !354)
!7380 = !DILocation(line: 2669, column: 7, scope: !7371)
!7381 = !DILocalVariable(name: "v", scope: !7371, file: !3, line: 2669, type: !354)
!7382 = !DILocation(line: 2669, column: 10, scope: !7371)
!7383 = !DILocalVariable(name: "w", scope: !7371, file: !3, line: 2669, type: !354)
!7384 = !DILocation(line: 2669, column: 13, scope: !7371)
!7385 = !DILocalVariable(name: "pntsu_half", scope: !7371, file: !3, line: 2670, type: !354)
!7386 = !DILocation(line: 2670, column: 7, scope: !7371)
!7387 = !DILocation(line: 2673, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2673, column: 7)
!7389 = !DILocation(line: 2673, column: 11, scope: !7388)
!7390 = !DILocation(line: 2673, column: 17, scope: !7388)
!7391 = !DILocation(line: 2673, column: 22, scope: !7388)
!7392 = !DILocation(line: 2673, column: 25, scope: !7388)
!7393 = !DILocation(line: 2673, column: 29, scope: !7388)
!7394 = !DILocation(line: 2673, column: 35, scope: !7388)
!7395 = !DILocation(line: 2673, column: 7, scope: !7371)
!7396 = !DILocation(line: 2674, column: 4, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2673, column: 44)
!7398 = !DILocation(line: 2680, column: 16, scope: !7371)
!7399 = !DILocation(line: 2680, column: 20, scope: !7371)
!7400 = !DILocation(line: 2680, column: 26, scope: !7371)
!7401 = !DILocation(line: 2680, column: 14, scope: !7371)
!7402 = !DILocation(line: 2682, column: 10, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2682, column: 3)
!7404 = !DILocation(line: 2682, column: 8, scope: !7403)
!7405 = !DILocation(line: 2682, column: 15, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 2682, column: 3)
!7407 = !DILocation(line: 2682, column: 19, scope: !7406)
!7408 = !DILocation(line: 2682, column: 23, scope: !7406)
!7409 = !DILocation(line: 2682, column: 17, scope: !7406)
!7410 = !DILocation(line: 2682, column: 3, scope: !7403)
!7411 = !DILocation(line: 2683, column: 11, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 2683, column: 4)
!7413 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 2682, column: 35)
!7414 = !DILocation(line: 2683, column: 9, scope: !7412)
!7415 = !DILocation(line: 2683, column: 16, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 2683, column: 4)
!7417 = !DILocation(line: 2683, column: 20, scope: !7416)
!7418 = !DILocation(line: 2683, column: 24, scope: !7416)
!7419 = !DILocation(line: 2683, column: 18, scope: !7416)
!7420 = !DILocation(line: 2683, column: 4, scope: !7412)
!7421 = !DILocation(line: 2684, column: 12, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 2684, column: 5)
!7423 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 2683, column: 36)
!7424 = !DILocation(line: 2684, column: 10, scope: !7422)
!7425 = !DILocation(line: 2684, column: 17, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 2684, column: 5)
!7427 = !DILocation(line: 2684, column: 21, scope: !7426)
!7428 = !DILocation(line: 2684, column: 19, scope: !7426)
!7429 = !DILocation(line: 2684, column: 5, scope: !7422)
!7430 = !DILocalVariable(name: "u_inv", scope: !7431, file: !3, line: 2685, type: !354)
!7431 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 2684, column: 38)
!7432 = !DILocation(line: 2685, column: 10, scope: !7431)
!7433 = !DILocation(line: 2685, column: 19, scope: !7431)
!7434 = !DILocation(line: 2685, column: 23, scope: !7431)
!7435 = !DILocation(line: 2685, column: 29, scope: !7431)
!7436 = !DILocation(line: 2685, column: 36, scope: !7431)
!7437 = !DILocation(line: 2685, column: 34, scope: !7431)
!7438 = !DILocation(line: 2686, column: 10, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 2686, column: 10)
!7440 = !DILocation(line: 2686, column: 15, scope: !7439)
!7441 = !DILocation(line: 2686, column: 12, scope: !7439)
!7442 = !DILocation(line: 2686, column: 10, scope: !7431)
!7443 = !DILocalVariable(name: "bp", scope: !7444, file: !3, line: 2687, type: !4257)
!7444 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 2686, column: 22)
!7445 = !DILocation(line: 2687, column: 15, scope: !7444)
!7446 = !DILocalVariable(name: "bp_mirr", scope: !7444, file: !3, line: 2687, type: !4257)
!7447 = !DILocation(line: 2687, column: 20, scope: !7444)
!7448 = !DILocation(line: 2689, column: 39, scope: !7444)
!7449 = !DILocation(line: 2689, column: 43, scope: !7444)
!7450 = !DILocation(line: 2689, column: 46, scope: !7444)
!7451 = !DILocation(line: 2689, column: 49, scope: !7444)
!7452 = !DILocation(line: 2689, column: 12, scope: !7444)
!7453 = !DILocation(line: 2689, column: 10, scope: !7444)
!7454 = !DILocation(line: 2690, column: 39, scope: !7444)
!7455 = !DILocation(line: 2690, column: 43, scope: !7444)
!7456 = !DILocation(line: 2690, column: 50, scope: !7444)
!7457 = !DILocation(line: 2690, column: 53, scope: !7444)
!7458 = !DILocation(line: 2690, column: 12, scope: !7444)
!7459 = !DILocation(line: 2690, column: 10, scope: !7444)
!7460 = !DILocation(line: 2692, column: 13, scope: !7444)
!7461 = !DILocation(line: 2692, column: 17, scope: !7444)
!7462 = !DILocation(line: 2692, column: 21, scope: !7444)
!7463 = !DILocation(line: 2692, column: 10, scope: !7444)
!7464 = !DILocation(line: 2693, column: 18, scope: !7444)
!7465 = !DILocation(line: 2693, column: 22, scope: !7444)
!7466 = !DILocation(line: 2693, column: 26, scope: !7444)
!7467 = !DILocation(line: 2693, column: 15, scope: !7444)
!7468 = !DILocation(line: 2695, column: 13, scope: !7444)
!7469 = !DILocation(line: 2695, column: 17, scope: !7444)
!7470 = !DILocation(line: 2695, column: 20, scope: !7444)
!7471 = !DILocation(line: 2695, column: 11, scope: !7444)
!7472 = !DILocation(line: 2696, column: 18, scope: !7444)
!7473 = !DILocation(line: 2696, column: 27, scope: !7444)
!7474 = !DILocation(line: 2696, column: 30, scope: !7444)
!7475 = !DILocation(line: 2696, column: 16, scope: !7444)
!7476 = !DILocation(line: 2698, column: 11, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 2698, column: 11)
!7478 = !DILocation(line: 2698, column: 15, scope: !7477)
!7479 = !DILocation(line: 2698, column: 18, scope: !7477)
!7480 = !DILocation(line: 2698, column: 11, scope: !7444)
!7481 = !DILocation(line: 2699, column: 17, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7477, file: !3, line: 2698, column: 28)
!7483 = !DILocation(line: 2699, column: 21, scope: !7482)
!7484 = !DILocation(line: 2699, column: 27, scope: !7482)
!7485 = !DILocation(line: 2699, column: 14, scope: !7482)
!7486 = !DILocation(line: 2700, column: 22, scope: !7482)
!7487 = !DILocation(line: 2700, column: 26, scope: !7482)
!7488 = !DILocation(line: 2700, column: 32, scope: !7482)
!7489 = !DILocation(line: 2700, column: 19, scope: !7482)
!7490 = !DILocation(line: 2702, column: 8, scope: !7482)
!7491 = !DILocation(line: 2703, column: 15, scope: !7482)
!7492 = !DILocation(line: 2704, column: 7, scope: !7482)
!7493 = !DILocation(line: 2705, column: 6, scope: !7444)
!7494 = !DILocation(line: 2706, column: 5, scope: !7431)
!7495 = !DILocation(line: 2684, column: 34, scope: !7426)
!7496 = !DILocation(line: 2684, column: 5, scope: !7426)
!7497 = distinct !{!7497, !7429, !7498}
!7498 = !DILocation(line: 2706, column: 5, scope: !7422)
!7499 = !DILocation(line: 2707, column: 4, scope: !7423)
!7500 = !DILocation(line: 2683, column: 32, scope: !7416)
!7501 = !DILocation(line: 2683, column: 4, scope: !7416)
!7502 = distinct !{!7502, !7420, !7503}
!7503 = !DILocation(line: 2707, column: 4, scope: !7412)
!7504 = !DILocation(line: 2708, column: 3, scope: !7413)
!7505 = !DILocation(line: 2682, column: 31, scope: !7406)
!7506 = !DILocation(line: 2682, column: 3, scope: !7406)
!7507 = distinct !{!7507, !7410, !7508}
!7508 = !DILocation(line: 2708, column: 3, scope: !7403)
!7509 = !DILocation(line: 2709, column: 2, scope: !7371)
!7510 = !DILocation(line: 2575, column: 18, scope: !7130)
!7511 = !DILabel(scope: !7047, name: "cleanup", file: !3, line: 2718)
!7512 = !DILocation(line: 2718, column: 1, scope: !7047)
!7513 = !DILocation(line: 2719, column: 15, scope: !7047)
!7514 = !DILocation(line: 2719, column: 3, scope: !7047)
!7515 = !DILocation(line: 2719, column: 13, scope: !7047)
!7516 = !DILocation(line: 2720, column: 15, scope: !7047)
!7517 = !DILocation(line: 2720, column: 3, scope: !7047)
!7518 = !DILocation(line: 2720, column: 13, scope: !7047)
!7519 = !DILocation(line: 2722, column: 6, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 2722, column: 6)
!7521 = !DILocation(line: 2722, column: 6, scope: !7047)
!7522 = !DILocation(line: 2722, column: 16, scope: !7520)
!7523 = !DILocation(line: 2722, column: 26, scope: !7520)
!7524 = !DILocation(line: 2726, column: 1, scope: !7047)
!7525 = distinct !DISubprogram(name: "dvert_mirror_op", scope: !3, file: !3, line: 2470, type: !7526, scopeLine: 2475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7526 = !DISubroutineType(types: !7527)
!7527 = !{null, !4203, !4203, !1711, !1711, !7528, !4075, !3381, !3381, !3381, !4075}
!7528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!7529 = !DILocalVariable(name: "dvert", arg: 1, scope: !7525, file: !3, line: 2470, type: !4203)
!7530 = !DILocation(line: 2470, column: 42, scope: !7525)
!7531 = !DILocalVariable(name: "dvert_mirr", arg: 2, scope: !7525, file: !3, line: 2470, type: !4203)
!7532 = !DILocation(line: 2470, column: 62, scope: !7525)
!7533 = !DILocalVariable(name: "sel", arg: 3, scope: !7525, file: !3, line: 2471, type: !1711)
!7534 = !DILocation(line: 2471, column: 40, scope: !7525)
!7535 = !DILocalVariable(name: "sel_mirr", arg: 4, scope: !7525, file: !3, line: 2471, type: !1711)
!7536 = !DILocation(line: 2471, column: 56, scope: !7525)
!7537 = !DILocalVariable(name: "flip_map", arg: 5, scope: !7525, file: !3, line: 2472, type: !7528)
!7538 = !DILocation(line: 2472, column: 40, scope: !7525)
!7539 = !DILocalVariable(name: "flip_map_len", arg: 6, scope: !7525, file: !3, line: 2472, type: !4075)
!7540 = !DILocation(line: 2472, column: 60, scope: !7525)
!7541 = !DILocalVariable(name: "mirror_weights", arg: 7, scope: !7525, file: !3, line: 2473, type: !3381)
!7542 = !DILocation(line: 2473, column: 40, scope: !7525)
!7543 = !DILocalVariable(name: "flip_vgroups", arg: 8, scope: !7525, file: !3, line: 2473, type: !3381)
!7544 = !DILocation(line: 2473, column: 67, scope: !7525)
!7545 = !DILocalVariable(name: "all_vgroups", arg: 9, scope: !7525, file: !3, line: 2473, type: !3381)
!7546 = !DILocation(line: 2473, column: 92, scope: !7525)
!7547 = !DILocalVariable(name: "act_vgroup", arg: 10, scope: !7525, file: !3, line: 2474, type: !4075)
!7548 = !DILocation(line: 2474, column: 39, scope: !7525)
!7549 = !DILocation(line: 2478, column: 6, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 2478, column: 6)
!7551 = !DILocation(line: 2478, column: 15, scope: !7550)
!7552 = !DILocation(line: 2478, column: 18, scope: !7550)
!7553 = !DILocation(line: 2478, column: 6, scope: !7525)
!7554 = !DILocation(line: 2480, column: 7, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 2480, column: 7)
!7556 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 2478, column: 23)
!7557 = !DILocation(line: 2480, column: 7, scope: !7556)
!7558 = !DILocation(line: 2481, column: 8, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 2481, column: 8)
!7560 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 2480, column: 23)
!7561 = !DILocation(line: 2481, column: 8, scope: !7560)
!7562 = !DILocalVariable(name: "sw_ap", scope: !7563, file: !3, line: 2482, type: !4204)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 2482, column: 5)
!7564 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 2481, column: 21)
!7565 = !DILocation(line: 2482, column: 5, scope: !7563)
!7566 = !DILocation(line: 2483, column: 4, scope: !7564)
!7567 = !DILocalVariable(name: "dw", scope: !7568, file: !3, line: 2485, type: !4449)
!7568 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 2484, column: 9)
!7569 = !DILocation(line: 2485, column: 20, scope: !7568)
!7570 = !DILocation(line: 2485, column: 49, scope: !7568)
!7571 = !DILocation(line: 2485, column: 56, scope: !7568)
!7572 = !DILocation(line: 2485, column: 30, scope: !7568)
!7573 = !DILocalVariable(name: "dw_mirr", scope: !7568, file: !3, line: 2486, type: !4449)
!7574 = !DILocation(line: 2486, column: 20, scope: !7568)
!7575 = !DILocation(line: 2486, column: 49, scope: !7568)
!7576 = !DILocation(line: 2486, column: 61, scope: !7568)
!7577 = !DILocation(line: 2486, column: 30, scope: !7568)
!7578 = !DILocation(line: 2488, column: 9, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 2488, column: 9)
!7580 = !DILocation(line: 2488, column: 12, scope: !7579)
!7581 = !DILocation(line: 2488, column: 15, scope: !7579)
!7582 = !DILocation(line: 2488, column: 9, scope: !7568)
!7583 = !DILocation(line: 2489, column: 10, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 2489, column: 10)
!7585 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 2488, column: 24)
!7586 = !DILocation(line: 2489, column: 18, scope: !7584)
!7587 = !DILocation(line: 2489, column: 10, scope: !7585)
!7588 = !DILocation(line: 2490, column: 38, scope: !7584)
!7589 = !DILocation(line: 2490, column: 50, scope: !7584)
!7590 = !DILocation(line: 2490, column: 17, scope: !7584)
!7591 = !DILocation(line: 2490, column: 15, scope: !7584)
!7592 = !DILocation(line: 2490, column: 7, scope: !7584)
!7593 = !DILocation(line: 2491, column: 10, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 2491, column: 10)
!7595 = !DILocation(line: 2491, column: 13, scope: !7594)
!7596 = !DILocation(line: 2491, column: 10, scope: !7585)
!7597 = !DILocation(line: 2492, column: 33, scope: !7594)
!7598 = !DILocation(line: 2492, column: 40, scope: !7594)
!7599 = !DILocation(line: 2492, column: 12, scope: !7594)
!7600 = !DILocation(line: 2492, column: 10, scope: !7594)
!7601 = !DILocation(line: 2492, column: 7, scope: !7594)
!7602 = !DILocalVariable(name: "sw_ap", scope: !7603, file: !3, line: 2494, type: !1320)
!7603 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 2494, column: 6)
!7604 = !DILocation(line: 2494, column: 6, scope: !7603)
!7605 = !DILocation(line: 2495, column: 5, scope: !7585)
!7606 = !DILocation(line: 2497, column: 3, scope: !7560)
!7607 = !DILocation(line: 2499, column: 7, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 2499, column: 7)
!7609 = !DILocation(line: 2499, column: 7, scope: !7556)
!7610 = !DILocation(line: 2500, column: 17, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 2499, column: 21)
!7612 = !DILocation(line: 2500, column: 24, scope: !7611)
!7613 = !DILocation(line: 2500, column: 34, scope: !7611)
!7614 = !DILocation(line: 2500, column: 4, scope: !7611)
!7615 = !DILocation(line: 2501, column: 17, scope: !7611)
!7616 = !DILocation(line: 2501, column: 29, scope: !7611)
!7617 = !DILocation(line: 2501, column: 39, scope: !7611)
!7618 = !DILocation(line: 2501, column: 4, scope: !7611)
!7619 = !DILocation(line: 2502, column: 3, scope: !7611)
!7620 = !DILocation(line: 2503, column: 2, scope: !7556)
!7621 = !DILocation(line: 2506, column: 7, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2506, column: 7)
!7623 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 2504, column: 7)
!7624 = !DILocation(line: 2506, column: 7, scope: !7623)
!7625 = !DILocalVariable(name: "sw_ap", scope: !7626, file: !3, line: 2507, type: !4203)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 2507, column: 4)
!7627 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 2506, column: 17)
!7628 = !DILocation(line: 2507, column: 4, scope: !7626)
!7629 = !DILocation(line: 2508, column: 3, scope: !7627)
!7630 = !DILocation(line: 2510, column: 7, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2510, column: 7)
!7632 = !DILocation(line: 2510, column: 7, scope: !7623)
!7633 = !DILocation(line: 2511, column: 8, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 2511, column: 8)
!7635 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 2510, column: 23)
!7636 = !DILocation(line: 2511, column: 8, scope: !7635)
!7637 = !DILocation(line: 2512, column: 18, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 2511, column: 21)
!7639 = !DILocation(line: 2512, column: 25, scope: !7638)
!7640 = !DILocation(line: 2512, column: 5, scope: !7638)
!7641 = !DILocation(line: 2513, column: 4, scope: !7638)
!7642 = !DILocation(line: 2515, column: 24, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 2514, column: 9)
!7644 = !DILocation(line: 2515, column: 31, scope: !7643)
!7645 = !DILocation(line: 2515, column: 43, scope: !7643)
!7646 = !DILocation(line: 2515, column: 5, scope: !7643)
!7647 = !DILocation(line: 2517, column: 3, scope: !7635)
!7648 = !DILocation(line: 2520, column: 7, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2520, column: 7)
!7650 = !DILocation(line: 2520, column: 7, scope: !7623)
!7651 = !DILocation(line: 2521, column: 17, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 2520, column: 21)
!7653 = !DILocation(line: 2521, column: 24, scope: !7652)
!7654 = !DILocation(line: 2521, column: 34, scope: !7652)
!7655 = !DILocation(line: 2521, column: 4, scope: !7652)
!7656 = !DILocation(line: 2522, column: 3, scope: !7652)
!7657 = !DILocation(line: 2524, column: 1, scope: !7525)
!7658 = distinct !DISubprogram(name: "vgroup_edit_lattice", scope: !3, file: !3, line: 106, type: !7659, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{!1227, !3872}
!7661 = !DILocalVariable(name: "ob", arg: 1, scope: !7658, file: !3, line: 106, type: !3872)
!7662 = !DILocation(line: 106, column: 45, scope: !7658)
!7663 = !DILocalVariable(name: "lt", scope: !7658, file: !3, line: 108, type: !1227)
!7664 = !DILocation(line: 108, column: 11, scope: !7658)
!7665 = !DILocation(line: 108, column: 16, scope: !7658)
!7666 = !DILocation(line: 108, column: 20, scope: !7658)
!7667 = !DILocation(line: 110, column: 10, scope: !7658)
!7668 = !DILocation(line: 110, column: 14, scope: !7658)
!7669 = !DILocation(line: 110, column: 9, scope: !7658)
!7670 = !DILocation(line: 110, column: 26, scope: !7658)
!7671 = !DILocation(line: 110, column: 30, scope: !7658)
!7672 = !DILocation(line: 110, column: 40, scope: !7658)
!7673 = !DILocation(line: 110, column: 47, scope: !7658)
!7674 = !DILocation(line: 110, column: 2, scope: !7658)
!7675 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_add", scope: !3, file: !3, line: 3237, type: !3603, scopeLine: 3238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7676 = !DILocalVariable(name: "ot", arg: 1, scope: !7675, file: !3, line: 3237, type: !3605)
!7677 = !DILocation(line: 3237, column: 49, scope: !7675)
!7678 = !DILocation(line: 3240, column: 2, scope: !7675)
!7679 = !DILocation(line: 3240, column: 6, scope: !7675)
!7680 = !DILocation(line: 3240, column: 11, scope: !7675)
!7681 = !DILocation(line: 3241, column: 2, scope: !7675)
!7682 = !DILocation(line: 3241, column: 6, scope: !7675)
!7683 = !DILocation(line: 3241, column: 13, scope: !7675)
!7684 = !DILocation(line: 3242, column: 2, scope: !7675)
!7685 = !DILocation(line: 3242, column: 6, scope: !7675)
!7686 = !DILocation(line: 3242, column: 18, scope: !7675)
!7687 = !DILocation(line: 3245, column: 2, scope: !7675)
!7688 = !DILocation(line: 3245, column: 6, scope: !7675)
!7689 = !DILocation(line: 3245, column: 11, scope: !7675)
!7690 = !DILocation(line: 3246, column: 2, scope: !7675)
!7691 = !DILocation(line: 3246, column: 6, scope: !7675)
!7692 = !DILocation(line: 3246, column: 11, scope: !7675)
!7693 = !DILocation(line: 3249, column: 2, scope: !7675)
!7694 = !DILocation(line: 3249, column: 6, scope: !7675)
!7695 = !DILocation(line: 3249, column: 11, scope: !7675)
!7696 = !DILocation(line: 3250, column: 1, scope: !7675)
!7697 = distinct !DISubprogram(name: "vertex_group_supported_poll", scope: !3, file: !3, line: 3135, type: !7698, scopeLine: 3136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!354, !7700}
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6419, size: 64)
!7701 = !DILocalVariable(name: "C", arg: 1, scope: !7697, file: !3, line: 3135, type: !7700)
!7702 = !DILocation(line: 3135, column: 50, scope: !7697)
!7703 = !DILocalVariable(name: "ob", scope: !7697, file: !3, line: 3137, type: !3872)
!7704 = !DILocation(line: 3137, column: 10, scope: !7697)
!7705 = !DILocation(line: 3137, column: 33, scope: !7697)
!7706 = !DILocation(line: 3137, column: 15, scope: !7697)
!7707 = !DILocalVariable(name: "data", scope: !7697, file: !3, line: 3138, type: !1247)
!7708 = !DILocation(line: 3138, column: 6, scope: !7697)
!7709 = !DILocation(line: 3138, column: 14, scope: !7697)
!7710 = !DILocation(line: 3138, column: 13, scope: !7697)
!7711 = !DILocation(line: 3138, column: 20, scope: !7697)
!7712 = !DILocation(line: 3138, column: 24, scope: !7697)
!7713 = !DILocation(line: 3139, column: 10, scope: !7697)
!7714 = !DILocation(line: 3139, column: 13, scope: !7697)
!7715 = !DILocation(line: 3139, column: 17, scope: !7697)
!7716 = !DILocation(line: 3139, column: 21, scope: !7697)
!7717 = !DILocation(line: 3139, column: 24, scope: !7697)
!7718 = !DILocation(line: 3139, column: 28, scope: !7697)
!7719 = !DILocation(line: 3139, column: 31, scope: !7697)
!7720 = !DILocation(line: 3139, column: 64, scope: !7697)
!7721 = !DILocation(line: 3139, column: 67, scope: !7697)
!7722 = !DILocation(line: 3139, column: 72, scope: !7697)
!7723 = !DILocation(line: 3139, column: 76, scope: !7697)
!7724 = !DILocation(line: 3139, column: 82, scope: !7697)
!7725 = !DILocation(line: 3139, column: 75, scope: !7697)
!7726 = !DILocation(line: 0, scope: !7697)
!7727 = !DILocation(line: 3139, column: 2, scope: !7697)
!7728 = distinct !DISubprogram(name: "vertex_group_add_exec", scope: !3, file: !3, line: 3225, type: !7729, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7729 = !DISubroutineType(types: !7730)
!7730 = !{!354, !7700, !7731}
!7731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7732, size: 64)
!7732 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !345, line: 348, baseType: !3621)
!7733 = !DILocalVariable(name: "C", arg: 1, scope: !7728, file: !3, line: 3225, type: !7700)
!7734 = !DILocation(line: 3225, column: 44, scope: !7728)
!7735 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7728, file: !3, line: 3225, type: !7731)
!7736 = !DILocation(line: 3225, column: 59, scope: !7728)
!7737 = !DILocalVariable(name: "ob", scope: !7728, file: !3, line: 3227, type: !3872)
!7738 = !DILocation(line: 3227, column: 10, scope: !7728)
!7739 = !DILocation(line: 3227, column: 33, scope: !7728)
!7740 = !DILocation(line: 3227, column: 15, scope: !7728)
!7741 = !DILocation(line: 3229, column: 16, scope: !7728)
!7742 = !DILocation(line: 3229, column: 2, scope: !7728)
!7743 = !DILocation(line: 3230, column: 21, scope: !7728)
!7744 = !DILocation(line: 3230, column: 25, scope: !7728)
!7745 = !DILocation(line: 3230, column: 2, scope: !7728)
!7746 = !DILocation(line: 3231, column: 24, scope: !7728)
!7747 = !DILocation(line: 3231, column: 54, scope: !7728)
!7748 = !DILocation(line: 3231, column: 58, scope: !7728)
!7749 = !DILocation(line: 3231, column: 2, scope: !7728)
!7750 = !DILocation(line: 3232, column: 24, scope: !7728)
!7751 = !DILocation(line: 3232, column: 48, scope: !7728)
!7752 = !DILocation(line: 3232, column: 2, scope: !7728)
!7753 = !DILocation(line: 3234, column: 2, scope: !7728)
!7754 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_remove", scope: !3, file: !3, line: 3268, type: !3603, scopeLine: 3269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7755 = !DILocalVariable(name: "ot", arg: 1, scope: !7754, file: !3, line: 3268, type: !3605)
!7756 = !DILocation(line: 3268, column: 52, scope: !7754)
!7757 = !DILocation(line: 3271, column: 2, scope: !7754)
!7758 = !DILocation(line: 3271, column: 6, scope: !7754)
!7759 = !DILocation(line: 3271, column: 11, scope: !7754)
!7760 = !DILocation(line: 3272, column: 2, scope: !7754)
!7761 = !DILocation(line: 3272, column: 6, scope: !7754)
!7762 = !DILocation(line: 3272, column: 13, scope: !7754)
!7763 = !DILocation(line: 3273, column: 2, scope: !7754)
!7764 = !DILocation(line: 3273, column: 6, scope: !7754)
!7765 = !DILocation(line: 3273, column: 18, scope: !7754)
!7766 = !DILocation(line: 3276, column: 2, scope: !7754)
!7767 = !DILocation(line: 3276, column: 6, scope: !7754)
!7768 = !DILocation(line: 3276, column: 11, scope: !7754)
!7769 = !DILocation(line: 3277, column: 2, scope: !7754)
!7770 = !DILocation(line: 3277, column: 6, scope: !7754)
!7771 = !DILocation(line: 3277, column: 11, scope: !7754)
!7772 = !DILocation(line: 3283, column: 2, scope: !7754)
!7773 = !DILocation(line: 3283, column: 6, scope: !7754)
!7774 = !DILocation(line: 3283, column: 11, scope: !7754)
!7775 = !DILocation(line: 3286, column: 18, scope: !7754)
!7776 = !DILocation(line: 3286, column: 22, scope: !7754)
!7777 = !DILocation(line: 3286, column: 2, scope: !7754)
!7778 = !DILocation(line: 3287, column: 1, scope: !7754)
!7779 = distinct !DISubprogram(name: "vertex_group_poll", scope: !3, file: !3, line: 3124, type: !7698, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7780 = !DILocalVariable(name: "C", arg: 1, scope: !7779, file: !3, line: 3124, type: !7700)
!7781 = !DILocation(line: 3124, column: 40, scope: !7779)
!7782 = !DILocalVariable(name: "ob", scope: !7779, file: !3, line: 3126, type: !3872)
!7783 = !DILocation(line: 3126, column: 10, scope: !7779)
!7784 = !DILocation(line: 3126, column: 33, scope: !7779)
!7785 = !DILocation(line: 3126, column: 15, scope: !7779)
!7786 = !DILocalVariable(name: "data", scope: !7779, file: !3, line: 3127, type: !1247)
!7787 = !DILocation(line: 3127, column: 6, scope: !7779)
!7788 = !DILocation(line: 3127, column: 14, scope: !7779)
!7789 = !DILocation(line: 3127, column: 13, scope: !7779)
!7790 = !DILocation(line: 3127, column: 20, scope: !7779)
!7791 = !DILocation(line: 3127, column: 24, scope: !7779)
!7792 = !DILocation(line: 3129, column: 10, scope: !7779)
!7793 = !DILocation(line: 3129, column: 13, scope: !7779)
!7794 = !DILocation(line: 3129, column: 17, scope: !7779)
!7795 = !DILocation(line: 3129, column: 21, scope: !7779)
!7796 = !DILocation(line: 3129, column: 24, scope: !7779)
!7797 = !DILocation(line: 3129, column: 28, scope: !7779)
!7798 = !DILocation(line: 3130, column: 10, scope: !7779)
!7799 = !DILocation(line: 3130, column: 15, scope: !7779)
!7800 = !DILocation(line: 3130, column: 19, scope: !7779)
!7801 = !DILocation(line: 3130, column: 25, scope: !7779)
!7802 = !DILocation(line: 3130, column: 29, scope: !7779)
!7803 = !DILocation(line: 3131, column: 10, scope: !7779)
!7804 = !DILocation(line: 3131, column: 43, scope: !7779)
!7805 = !DILocation(line: 3132, column: 10, scope: !7779)
!7806 = !DILocation(line: 3132, column: 14, scope: !7779)
!7807 = !DILocation(line: 3132, column: 22, scope: !7779)
!7808 = !DILocation(line: 0, scope: !7779)
!7809 = !DILocation(line: 3129, column: 2, scope: !7779)
!7810 = distinct !DISubprogram(name: "vertex_group_remove_exec", scope: !3, file: !3, line: 3252, type: !7729, scopeLine: 3253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7811 = !DILocalVariable(name: "C", arg: 1, scope: !7810, file: !3, line: 3252, type: !7700)
!7812 = !DILocation(line: 3252, column: 47, scope: !7810)
!7813 = !DILocalVariable(name: "op", arg: 2, scope: !7810, file: !3, line: 3252, type: !7731)
!7814 = !DILocation(line: 3252, column: 62, scope: !7810)
!7815 = !DILocalVariable(name: "ob", scope: !7810, file: !3, line: 3254, type: !3872)
!7816 = !DILocation(line: 3254, column: 10, scope: !7810)
!7817 = !DILocation(line: 3254, column: 33, scope: !7810)
!7818 = !DILocation(line: 3254, column: 15, scope: !7810)
!7819 = !DILocation(line: 3256, column: 22, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 3256, column: 6)
!7821 = !DILocation(line: 3256, column: 26, scope: !7820)
!7822 = !DILocation(line: 3256, column: 6, scope: !7820)
!7823 = !DILocation(line: 3256, column: 6, scope: !7810)
!7824 = !DILocation(line: 3257, column: 21, scope: !7820)
!7825 = !DILocation(line: 3257, column: 3, scope: !7820)
!7826 = !DILocation(line: 3259, column: 17, scope: !7820)
!7827 = !DILocation(line: 3259, column: 3, scope: !7820)
!7828 = !DILocation(line: 3261, column: 21, scope: !7810)
!7829 = !DILocation(line: 3261, column: 25, scope: !7810)
!7830 = !DILocation(line: 3261, column: 2, scope: !7810)
!7831 = !DILocation(line: 3262, column: 24, scope: !7810)
!7832 = !DILocation(line: 3262, column: 54, scope: !7810)
!7833 = !DILocation(line: 3262, column: 58, scope: !7810)
!7834 = !DILocation(line: 3262, column: 2, scope: !7810)
!7835 = !DILocation(line: 3263, column: 24, scope: !7810)
!7836 = !DILocation(line: 3263, column: 48, scope: !7810)
!7837 = !DILocation(line: 3263, column: 2, scope: !7810)
!7838 = !DILocation(line: 3265, column: 2, scope: !7810)
!7839 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_assign", scope: !3, file: !3, line: 3301, type: !3603, scopeLine: 3302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7840 = !DILocalVariable(name: "ot", arg: 1, scope: !7839, file: !3, line: 3301, type: !3605)
!7841 = !DILocation(line: 3301, column: 52, scope: !7839)
!7842 = !DILocation(line: 3304, column: 2, scope: !7839)
!7843 = !DILocation(line: 3304, column: 6, scope: !7839)
!7844 = !DILocation(line: 3304, column: 11, scope: !7839)
!7845 = !DILocation(line: 3305, column: 2, scope: !7839)
!7846 = !DILocation(line: 3305, column: 6, scope: !7839)
!7847 = !DILocation(line: 3305, column: 13, scope: !7839)
!7848 = !DILocation(line: 3306, column: 2, scope: !7839)
!7849 = !DILocation(line: 3306, column: 6, scope: !7839)
!7850 = !DILocation(line: 3306, column: 18, scope: !7839)
!7851 = !DILocation(line: 3309, column: 2, scope: !7839)
!7852 = !DILocation(line: 3309, column: 6, scope: !7839)
!7853 = !DILocation(line: 3309, column: 11, scope: !7839)
!7854 = !DILocation(line: 3310, column: 2, scope: !7839)
!7855 = !DILocation(line: 3310, column: 6, scope: !7839)
!7856 = !DILocation(line: 3310, column: 11, scope: !7839)
!7857 = !DILocation(line: 3316, column: 2, scope: !7839)
!7858 = !DILocation(line: 3316, column: 6, scope: !7839)
!7859 = !DILocation(line: 3316, column: 11, scope: !7839)
!7860 = !DILocation(line: 3317, column: 1, scope: !7839)
!7861 = distinct !DISubprogram(name: "vertex_group_vert_select_unlocked_poll", scope: !3, file: !3, line: 3186, type: !7698, scopeLine: 3187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7862 = !DILocalVariable(name: "C", arg: 1, scope: !7861, file: !3, line: 3186, type: !7700)
!7863 = !DILocation(line: 3186, column: 61, scope: !7861)
!7864 = !DILocalVariable(name: "ob", scope: !7861, file: !3, line: 3188, type: !3872)
!7865 = !DILocation(line: 3188, column: 10, scope: !7861)
!7866 = !DILocation(line: 3188, column: 33, scope: !7861)
!7867 = !DILocation(line: 3188, column: 15, scope: !7861)
!7868 = !DILocalVariable(name: "data", scope: !7861, file: !3, line: 3189, type: !1247)
!7869 = !DILocation(line: 3189, column: 6, scope: !7861)
!7870 = !DILocation(line: 3189, column: 14, scope: !7861)
!7871 = !DILocation(line: 3189, column: 13, scope: !7861)
!7872 = !DILocation(line: 3189, column: 20, scope: !7861)
!7873 = !DILocation(line: 3189, column: 24, scope: !7861)
!7874 = !DILocation(line: 3191, column: 8, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 3191, column: 6)
!7876 = !DILocation(line: 3191, column: 11, scope: !7875)
!7877 = !DILocation(line: 3191, column: 15, scope: !7875)
!7878 = !DILocation(line: 3191, column: 19, scope: !7875)
!7879 = !DILocation(line: 3191, column: 22, scope: !7875)
!7880 = !DILocation(line: 3191, column: 26, scope: !7875)
!7881 = !DILocation(line: 3191, column: 29, scope: !7875)
!7882 = !DILocation(line: 3191, column: 34, scope: !7875)
!7883 = !DILocation(line: 3191, column: 38, scope: !7875)
!7884 = !DILocation(line: 3191, column: 44, scope: !7875)
!7885 = !DILocation(line: 3191, column: 6, scope: !7861)
!7886 = !DILocation(line: 3192, column: 3, scope: !7875)
!7887 = !DILocation(line: 3194, column: 41, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 3194, column: 6)
!7889 = !DILocation(line: 3194, column: 8, scope: !7888)
!7890 = !DILocation(line: 3194, column: 45, scope: !7888)
!7891 = !DILocation(line: 3195, column: 42, scope: !7888)
!7892 = !DILocation(line: 3195, column: 6, scope: !7888)
!7893 = !DILocation(line: 3194, column: 6, scope: !7861)
!7894 = !DILocation(line: 3197, column: 3, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7888, file: !3, line: 3196, column: 2)
!7896 = !DILocation(line: 3200, column: 6, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 3200, column: 6)
!7898 = !DILocation(line: 3200, column: 10, scope: !7897)
!7899 = !DILocation(line: 3200, column: 17, scope: !7897)
!7900 = !DILocation(line: 3200, column: 6, scope: !7861)
!7901 = !DILocalVariable(name: "dg", scope: !7902, file: !3, line: 3201, type: !1368)
!7902 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 3200, column: 23)
!7903 = !DILocation(line: 3201, column: 17, scope: !7902)
!7904 = !DILocation(line: 3201, column: 36, scope: !7902)
!7905 = !DILocation(line: 3201, column: 40, scope: !7902)
!7906 = !DILocation(line: 3201, column: 49, scope: !7902)
!7907 = !DILocation(line: 3201, column: 53, scope: !7902)
!7908 = !DILocation(line: 3201, column: 60, scope: !7902)
!7909 = !DILocation(line: 3201, column: 22, scope: !7902)
!7910 = !DILocation(line: 3202, column: 7, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 3202, column: 7)
!7912 = !DILocation(line: 3202, column: 7, scope: !7902)
!7913 = !DILocation(line: 3203, column: 13, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 3202, column: 11)
!7915 = !DILocation(line: 3203, column: 17, scope: !7914)
!7916 = !DILocation(line: 3203, column: 22, scope: !7914)
!7917 = !DILocation(line: 3203, column: 11, scope: !7914)
!7918 = !DILocation(line: 3203, column: 4, scope: !7914)
!7919 = !DILocation(line: 3205, column: 2, scope: !7902)
!7920 = !DILocation(line: 3206, column: 2, scope: !7861)
!7921 = !DILocation(line: 3207, column: 1, scope: !7861)
!7922 = distinct !DISubprogram(name: "vertex_group_assign_exec", scope: !3, file: !3, line: 3289, type: !7729, scopeLine: 3290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7923 = !DILocalVariable(name: "C", arg: 1, scope: !7922, file: !3, line: 3289, type: !7700)
!7924 = !DILocation(line: 3289, column: 47, scope: !7922)
!7925 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7922, file: !3, line: 3289, type: !7731)
!7926 = !DILocation(line: 3289, column: 62, scope: !7922)
!7927 = !DILocalVariable(name: "ts", scope: !7922, file: !3, line: 3291, type: !7928)
!7928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7929, size: 64)
!7929 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !173, line: 1180, baseType: !2416)
!7930 = !DILocation(line: 3291, column: 16, scope: !7922)
!7931 = !DILocation(line: 3291, column: 44, scope: !7922)
!7932 = !DILocation(line: 3291, column: 21, scope: !7922)
!7933 = !DILocalVariable(name: "ob", scope: !7922, file: !3, line: 3292, type: !3872)
!7934 = !DILocation(line: 3292, column: 10, scope: !7922)
!7935 = !DILocation(line: 3292, column: 33, scope: !7922)
!7936 = !DILocation(line: 3292, column: 15, scope: !7922)
!7937 = !DILocation(line: 3294, column: 22, scope: !7922)
!7938 = !DILocation(line: 3294, column: 26, scope: !7922)
!7939 = !DILocation(line: 3294, column: 30, scope: !7922)
!7940 = !DILocation(line: 3294, column: 2, scope: !7922)
!7941 = !DILocation(line: 3295, column: 21, scope: !7922)
!7942 = !DILocation(line: 3295, column: 25, scope: !7922)
!7943 = !DILocation(line: 3295, column: 2, scope: !7922)
!7944 = !DILocation(line: 3296, column: 24, scope: !7922)
!7945 = !DILocation(line: 3296, column: 46, scope: !7922)
!7946 = !DILocation(line: 3296, column: 50, scope: !7922)
!7947 = !DILocation(line: 3296, column: 2, scope: !7922)
!7948 = !DILocation(line: 3298, column: 2, scope: !7922)
!7949 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_assign_new", scope: !3, file: !3, line: 3330, type: !3603, scopeLine: 3331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7950 = !DILocalVariable(name: "ot", arg: 1, scope: !7949, file: !3, line: 3330, type: !3605)
!7951 = !DILocation(line: 3330, column: 56, scope: !7949)
!7952 = !DILocation(line: 3333, column: 2, scope: !7949)
!7953 = !DILocation(line: 3333, column: 6, scope: !7949)
!7954 = !DILocation(line: 3333, column: 11, scope: !7949)
!7955 = !DILocation(line: 3334, column: 2, scope: !7949)
!7956 = !DILocation(line: 3334, column: 6, scope: !7949)
!7957 = !DILocation(line: 3334, column: 13, scope: !7949)
!7958 = !DILocation(line: 3335, column: 2, scope: !7949)
!7959 = !DILocation(line: 3335, column: 6, scope: !7949)
!7960 = !DILocation(line: 3335, column: 18, scope: !7949)
!7961 = !DILocation(line: 3338, column: 2, scope: !7949)
!7962 = !DILocation(line: 3338, column: 6, scope: !7949)
!7963 = !DILocation(line: 3338, column: 11, scope: !7949)
!7964 = !DILocation(line: 3339, column: 2, scope: !7949)
!7965 = !DILocation(line: 3339, column: 6, scope: !7949)
!7966 = !DILocation(line: 3339, column: 11, scope: !7949)
!7967 = !DILocation(line: 3345, column: 2, scope: !7949)
!7968 = !DILocation(line: 3345, column: 6, scope: !7949)
!7969 = !DILocation(line: 3345, column: 11, scope: !7949)
!7970 = !DILocation(line: 3346, column: 1, scope: !7949)
!7971 = distinct !DISubprogram(name: "vertex_group_vert_select_poll", scope: !3, file: !3, line: 3173, type: !7698, scopeLine: 3174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!7972 = !DILocalVariable(name: "C", arg: 1, scope: !7971, file: !3, line: 3173, type: !7700)
!7973 = !DILocation(line: 3173, column: 52, scope: !7971)
!7974 = !DILocalVariable(name: "ob", scope: !7971, file: !3, line: 3175, type: !3872)
!7975 = !DILocation(line: 3175, column: 10, scope: !7971)
!7976 = !DILocation(line: 3175, column: 33, scope: !7971)
!7977 = !DILocation(line: 3175, column: 15, scope: !7971)
!7978 = !DILocalVariable(name: "data", scope: !7971, file: !3, line: 3176, type: !1247)
!7979 = !DILocation(line: 3176, column: 6, scope: !7971)
!7980 = !DILocation(line: 3176, column: 14, scope: !7971)
!7981 = !DILocation(line: 3176, column: 13, scope: !7971)
!7982 = !DILocation(line: 3176, column: 20, scope: !7971)
!7983 = !DILocation(line: 3176, column: 24, scope: !7971)
!7984 = !DILocation(line: 3178, column: 8, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 3178, column: 6)
!7986 = !DILocation(line: 3178, column: 11, scope: !7985)
!7987 = !DILocation(line: 3178, column: 15, scope: !7985)
!7988 = !DILocation(line: 3178, column: 19, scope: !7985)
!7989 = !DILocation(line: 3178, column: 22, scope: !7985)
!7990 = !DILocation(line: 3178, column: 26, scope: !7985)
!7991 = !DILocation(line: 3178, column: 29, scope: !7985)
!7992 = !DILocation(line: 3178, column: 34, scope: !7985)
!7993 = !DILocation(line: 3178, column: 38, scope: !7985)
!7994 = !DILocation(line: 3178, column: 44, scope: !7985)
!7995 = !DILocation(line: 3178, column: 6, scope: !7971)
!7996 = !DILocation(line: 3179, column: 3, scope: !7985)
!7997 = !DILocation(line: 3181, column: 43, scope: !7971)
!7998 = !DILocation(line: 3181, column: 10, scope: !7971)
!7999 = !DILocation(line: 3181, column: 47, scope: !7971)
!8000 = !DILocation(line: 3182, column: 46, scope: !7971)
!8001 = !DILocation(line: 3182, column: 10, scope: !7971)
!8002 = !DILocation(line: 3181, column: 2, scope: !7971)
!8003 = !DILocation(line: 3183, column: 1, scope: !7971)
!8004 = distinct !DISubprogram(name: "vertex_group_assign_new_exec", scope: !3, file: !3, line: 3320, type: !7729, scopeLine: 3321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8005 = !DILocalVariable(name: "C", arg: 1, scope: !8004, file: !3, line: 3320, type: !7700)
!8006 = !DILocation(line: 3320, column: 51, scope: !8004)
!8007 = !DILocalVariable(name: "op", arg: 2, scope: !8004, file: !3, line: 3320, type: !7731)
!8008 = !DILocation(line: 3320, column: 66, scope: !8004)
!8009 = !DILocalVariable(name: "ob", scope: !8004, file: !3, line: 3323, type: !3872)
!8010 = !DILocation(line: 3323, column: 10, scope: !8004)
!8011 = !DILocation(line: 3323, column: 33, scope: !8004)
!8012 = !DILocation(line: 3323, column: 15, scope: !8004)
!8013 = !DILocation(line: 3324, column: 16, scope: !8004)
!8014 = !DILocation(line: 3324, column: 2, scope: !8004)
!8015 = !DILocation(line: 3327, column: 34, scope: !8004)
!8016 = !DILocation(line: 3327, column: 37, scope: !8004)
!8017 = !DILocation(line: 3327, column: 9, scope: !8004)
!8018 = !DILocation(line: 3327, column: 2, scope: !8004)
!8019 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_remove_from", scope: !3, file: !3, line: 3374, type: !3603, scopeLine: 3375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8020 = !DILocalVariable(name: "ot", arg: 1, scope: !8019, file: !3, line: 3374, type: !3605)
!8021 = !DILocation(line: 3374, column: 57, scope: !8019)
!8022 = !DILocalVariable(name: "prop", scope: !8019, file: !3, line: 3376, type: !3792)
!8023 = !DILocation(line: 3376, column: 15, scope: !8019)
!8024 = !DILocation(line: 3378, column: 2, scope: !8019)
!8025 = !DILocation(line: 3378, column: 6, scope: !8019)
!8026 = !DILocation(line: 3378, column: 11, scope: !8019)
!8027 = !DILocation(line: 3379, column: 2, scope: !8019)
!8028 = !DILocation(line: 3379, column: 6, scope: !8019)
!8029 = !DILocation(line: 3379, column: 13, scope: !8019)
!8030 = !DILocation(line: 3380, column: 2, scope: !8019)
!8031 = !DILocation(line: 3380, column: 6, scope: !8019)
!8032 = !DILocation(line: 3380, column: 18, scope: !8019)
!8033 = !DILocation(line: 3383, column: 2, scope: !8019)
!8034 = !DILocation(line: 3383, column: 6, scope: !8019)
!8035 = !DILocation(line: 3383, column: 11, scope: !8019)
!8036 = !DILocation(line: 3384, column: 2, scope: !8019)
!8037 = !DILocation(line: 3384, column: 6, scope: !8019)
!8038 = !DILocation(line: 3384, column: 11, scope: !8019)
!8039 = !DILocation(line: 3390, column: 2, scope: !8019)
!8040 = !DILocation(line: 3390, column: 6, scope: !8019)
!8041 = !DILocation(line: 3390, column: 11, scope: !8019)
!8042 = !DILocation(line: 3393, column: 25, scope: !8019)
!8043 = !DILocation(line: 3393, column: 29, scope: !8019)
!8044 = !DILocation(line: 3393, column: 9, scope: !8019)
!8045 = !DILocation(line: 3393, column: 7, scope: !8019)
!8046 = !DILocation(line: 3394, column: 24, scope: !8019)
!8047 = !DILocation(line: 3394, column: 2, scope: !8019)
!8048 = !DILocation(line: 3395, column: 25, scope: !8019)
!8049 = !DILocation(line: 3395, column: 29, scope: !8019)
!8050 = !DILocation(line: 3395, column: 9, scope: !8019)
!8051 = !DILocation(line: 3395, column: 7, scope: !8019)
!8052 = !DILocation(line: 3396, column: 24, scope: !8019)
!8053 = !DILocation(line: 3396, column: 2, scope: !8019)
!8054 = !DILocation(line: 3397, column: 1, scope: !8019)
!8055 = distinct !DISubprogram(name: "vertex_group_remove_from_exec", scope: !3, file: !3, line: 3348, type: !7729, scopeLine: 3349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8056 = !DILocalVariable(name: "C", arg: 1, scope: !8055, file: !3, line: 3348, type: !7700)
!8057 = !DILocation(line: 3348, column: 52, scope: !8055)
!8058 = !DILocalVariable(name: "op", arg: 2, scope: !8055, file: !3, line: 3348, type: !7731)
!8059 = !DILocation(line: 3348, column: 67, scope: !8055)
!8060 = !DILocalVariable(name: "use_all_groups", scope: !8055, file: !3, line: 3350, type: !3381)
!8061 = !DILocation(line: 3350, column: 13, scope: !8055)
!8062 = !DILocation(line: 3350, column: 46, scope: !8055)
!8063 = !DILocation(line: 3350, column: 50, scope: !8055)
!8064 = !DILocation(line: 3350, column: 30, scope: !8055)
!8065 = !DILocalVariable(name: "use_all_verts", scope: !8055, file: !3, line: 3351, type: !3381)
!8066 = !DILocation(line: 3351, column: 13, scope: !8055)
!8067 = !DILocation(line: 3351, column: 45, scope: !8055)
!8068 = !DILocation(line: 3351, column: 49, scope: !8055)
!8069 = !DILocation(line: 3351, column: 29, scope: !8055)
!8070 = !DILocalVariable(name: "ob", scope: !8055, file: !3, line: 3353, type: !3872)
!8071 = !DILocation(line: 3353, column: 10, scope: !8055)
!8072 = !DILocation(line: 3353, column: 33, scope: !8055)
!8073 = !DILocation(line: 3353, column: 15, scope: !8055)
!8074 = !DILocation(line: 3355, column: 6, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 3355, column: 6)
!8076 = !DILocation(line: 3355, column: 6, scope: !8055)
!8077 = !DILocation(line: 3356, column: 27, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 3356, column: 7)
!8079 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 3355, column: 22)
!8080 = !DILocation(line: 3356, column: 7, scope: !8078)
!8081 = !DILocation(line: 3356, column: 34, scope: !8078)
!8082 = !DILocation(line: 3356, column: 7, scope: !8079)
!8083 = !DILocation(line: 3357, column: 4, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3356, column: 44)
!8085 = !DILocation(line: 3359, column: 2, scope: !8079)
!8086 = !DILocalVariable(name: "dg", scope: !8087, file: !3, line: 3361, type: !1368)
!8087 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 3360, column: 7)
!8088 = !DILocation(line: 3361, column: 17, scope: !8087)
!8089 = !DILocation(line: 3361, column: 36, scope: !8087)
!8090 = !DILocation(line: 3361, column: 40, scope: !8087)
!8091 = !DILocation(line: 3361, column: 49, scope: !8087)
!8092 = !DILocation(line: 3361, column: 53, scope: !8087)
!8093 = !DILocation(line: 3361, column: 60, scope: !8087)
!8094 = !DILocation(line: 3361, column: 22, scope: !8087)
!8095 = !DILocation(line: 3363, column: 8, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 3363, column: 7)
!8097 = !DILocation(line: 3363, column: 11, scope: !8096)
!8098 = !DILocation(line: 3363, column: 20, scope: !8096)
!8099 = !DILocation(line: 3363, column: 51, scope: !8096)
!8100 = !DILocation(line: 3363, column: 55, scope: !8096)
!8101 = !DILocation(line: 3363, column: 70, scope: !8096)
!8102 = !DILocation(line: 3363, column: 24, scope: !8096)
!8103 = !DILocation(line: 3363, column: 74, scope: !8096)
!8104 = !DILocation(line: 3363, column: 7, scope: !8087)
!8105 = !DILocation(line: 3364, column: 4, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 3363, column: 85)
!8107 = !DILocation(line: 3368, column: 21, scope: !8055)
!8108 = !DILocation(line: 3368, column: 25, scope: !8055)
!8109 = !DILocation(line: 3368, column: 2, scope: !8055)
!8110 = !DILocation(line: 3369, column: 24, scope: !8055)
!8111 = !DILocation(line: 3369, column: 46, scope: !8055)
!8112 = !DILocation(line: 3369, column: 50, scope: !8055)
!8113 = !DILocation(line: 3369, column: 2, scope: !8055)
!8114 = !DILocation(line: 3371, column: 2, scope: !8055)
!8115 = !DILocation(line: 3372, column: 1, scope: !8055)
!8116 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_select", scope: !3, file: !3, line: 3412, type: !3603, scopeLine: 3413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8117 = !DILocalVariable(name: "ot", arg: 1, scope: !8116, file: !3, line: 3412, type: !3605)
!8118 = !DILocation(line: 3412, column: 52, scope: !8116)
!8119 = !DILocation(line: 3415, column: 2, scope: !8116)
!8120 = !DILocation(line: 3415, column: 6, scope: !8116)
!8121 = !DILocation(line: 3415, column: 11, scope: !8116)
!8122 = !DILocation(line: 3416, column: 2, scope: !8116)
!8123 = !DILocation(line: 3416, column: 6, scope: !8116)
!8124 = !DILocation(line: 3416, column: 13, scope: !8116)
!8125 = !DILocation(line: 3417, column: 2, scope: !8116)
!8126 = !DILocation(line: 3417, column: 6, scope: !8116)
!8127 = !DILocation(line: 3417, column: 18, scope: !8116)
!8128 = !DILocation(line: 3420, column: 2, scope: !8116)
!8129 = !DILocation(line: 3420, column: 6, scope: !8116)
!8130 = !DILocation(line: 3420, column: 11, scope: !8116)
!8131 = !DILocation(line: 3421, column: 2, scope: !8116)
!8132 = !DILocation(line: 3421, column: 6, scope: !8116)
!8133 = !DILocation(line: 3421, column: 11, scope: !8116)
!8134 = !DILocation(line: 3424, column: 2, scope: !8116)
!8135 = !DILocation(line: 3424, column: 6, scope: !8116)
!8136 = !DILocation(line: 3424, column: 11, scope: !8116)
!8137 = !DILocation(line: 3425, column: 1, scope: !8116)
!8138 = distinct !DISubprogram(name: "vertex_group_select_exec", scope: !3, file: !3, line: 3399, type: !7729, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8139 = !DILocalVariable(name: "C", arg: 1, scope: !8138, file: !3, line: 3399, type: !7700)
!8140 = !DILocation(line: 3399, column: 47, scope: !8138)
!8141 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !8138, file: !3, line: 3399, type: !7731)
!8142 = !DILocation(line: 3399, column: 62, scope: !8138)
!8143 = !DILocalVariable(name: "ob", scope: !8138, file: !3, line: 3401, type: !3872)
!8144 = !DILocation(line: 3401, column: 10, scope: !8138)
!8145 = !DILocation(line: 3401, column: 33, scope: !8138)
!8146 = !DILocation(line: 3401, column: 15, scope: !8138)
!8147 = !DILocation(line: 3403, column: 7, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 3403, column: 6)
!8149 = !DILocation(line: 3403, column: 10, scope: !8148)
!8150 = !DILocation(line: 3403, column: 13, scope: !8148)
!8151 = !DILocation(line: 3403, column: 17, scope: !8148)
!8152 = !DILocation(line: 3403, column: 20, scope: !8148)
!8153 = !DILocation(line: 3403, column: 6, scope: !8138)
!8154 = !DILocation(line: 3404, column: 3, scope: !8148)
!8155 = !DILocation(line: 3406, column: 22, scope: !8138)
!8156 = !DILocation(line: 3406, column: 2, scope: !8138)
!8157 = !DILocation(line: 3407, column: 24, scope: !8138)
!8158 = !DILocation(line: 3407, column: 48, scope: !8138)
!8159 = !DILocation(line: 3407, column: 52, scope: !8138)
!8160 = !DILocation(line: 3407, column: 2, scope: !8138)
!8161 = !DILocation(line: 3409, column: 2, scope: !8138)
!8162 = !DILocation(line: 3410, column: 1, scope: !8138)
!8163 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_deselect", scope: !3, file: !3, line: 3437, type: !3603, scopeLine: 3438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8164 = !DILocalVariable(name: "ot", arg: 1, scope: !8163, file: !3, line: 3437, type: !3605)
!8165 = !DILocation(line: 3437, column: 54, scope: !8163)
!8166 = !DILocation(line: 3440, column: 2, scope: !8163)
!8167 = !DILocation(line: 3440, column: 6, scope: !8163)
!8168 = !DILocation(line: 3440, column: 11, scope: !8163)
!8169 = !DILocation(line: 3441, column: 2, scope: !8163)
!8170 = !DILocation(line: 3441, column: 6, scope: !8163)
!8171 = !DILocation(line: 3441, column: 13, scope: !8163)
!8172 = !DILocation(line: 3442, column: 2, scope: !8163)
!8173 = !DILocation(line: 3442, column: 6, scope: !8163)
!8174 = !DILocation(line: 3442, column: 18, scope: !8163)
!8175 = !DILocation(line: 3445, column: 2, scope: !8163)
!8176 = !DILocation(line: 3445, column: 6, scope: !8163)
!8177 = !DILocation(line: 3445, column: 11, scope: !8163)
!8178 = !DILocation(line: 3446, column: 2, scope: !8163)
!8179 = !DILocation(line: 3446, column: 6, scope: !8163)
!8180 = !DILocation(line: 3446, column: 11, scope: !8163)
!8181 = !DILocation(line: 3449, column: 2, scope: !8163)
!8182 = !DILocation(line: 3449, column: 6, scope: !8163)
!8183 = !DILocation(line: 3449, column: 11, scope: !8163)
!8184 = !DILocation(line: 3450, column: 1, scope: !8163)
!8185 = distinct !DISubprogram(name: "vertex_group_deselect_exec", scope: !3, file: !3, line: 3427, type: !7729, scopeLine: 3428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8186 = !DILocalVariable(name: "C", arg: 1, scope: !8185, file: !3, line: 3427, type: !7700)
!8187 = !DILocation(line: 3427, column: 49, scope: !8185)
!8188 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !8185, file: !3, line: 3427, type: !7731)
!8189 = !DILocation(line: 3427, column: 64, scope: !8185)
!8190 = !DILocalVariable(name: "ob", scope: !8185, file: !3, line: 3429, type: !3872)
!8191 = !DILocation(line: 3429, column: 10, scope: !8185)
!8192 = !DILocation(line: 3429, column: 33, scope: !8185)
!8193 = !DILocation(line: 3429, column: 15, scope: !8185)
!8194 = !DILocation(line: 3431, column: 22, scope: !8185)
!8195 = !DILocation(line: 3431, column: 2, scope: !8185)
!8196 = !DILocation(line: 3432, column: 24, scope: !8185)
!8197 = !DILocation(line: 3432, column: 48, scope: !8185)
!8198 = !DILocation(line: 3432, column: 52, scope: !8185)
!8199 = !DILocation(line: 3432, column: 2, scope: !8185)
!8200 = !DILocation(line: 3434, column: 2, scope: !8185)
!8201 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_copy", scope: !3, file: !3, line: 3464, type: !3603, scopeLine: 3465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8202 = !DILocalVariable(name: "ot", arg: 1, scope: !8201, file: !3, line: 3464, type: !3605)
!8203 = !DILocation(line: 3464, column: 50, scope: !8201)
!8204 = !DILocation(line: 3467, column: 2, scope: !8201)
!8205 = !DILocation(line: 3467, column: 6, scope: !8201)
!8206 = !DILocation(line: 3467, column: 11, scope: !8201)
!8207 = !DILocation(line: 3468, column: 2, scope: !8201)
!8208 = !DILocation(line: 3468, column: 6, scope: !8201)
!8209 = !DILocation(line: 3468, column: 13, scope: !8201)
!8210 = !DILocation(line: 3469, column: 2, scope: !8201)
!8211 = !DILocation(line: 3469, column: 6, scope: !8201)
!8212 = !DILocation(line: 3469, column: 18, scope: !8201)
!8213 = !DILocation(line: 3472, column: 2, scope: !8201)
!8214 = !DILocation(line: 3472, column: 6, scope: !8201)
!8215 = !DILocation(line: 3472, column: 11, scope: !8201)
!8216 = !DILocation(line: 3473, column: 2, scope: !8201)
!8217 = !DILocation(line: 3473, column: 6, scope: !8201)
!8218 = !DILocation(line: 3473, column: 11, scope: !8201)
!8219 = !DILocation(line: 3476, column: 2, scope: !8201)
!8220 = !DILocation(line: 3476, column: 6, scope: !8201)
!8221 = !DILocation(line: 3476, column: 11, scope: !8201)
!8222 = !DILocation(line: 3477, column: 1, scope: !8201)
!8223 = distinct !DISubprogram(name: "vertex_group_copy_exec", scope: !3, file: !3, line: 3452, type: !7729, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8224 = !DILocalVariable(name: "C", arg: 1, scope: !8223, file: !3, line: 3452, type: !7700)
!8225 = !DILocation(line: 3452, column: 45, scope: !8223)
!8226 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !8223, file: !3, line: 3452, type: !7731)
!8227 = !DILocation(line: 3452, column: 60, scope: !8223)
!8228 = !DILocalVariable(name: "ob", scope: !8223, file: !3, line: 3454, type: !3872)
!8229 = !DILocation(line: 3454, column: 10, scope: !8223)
!8230 = !DILocation(line: 3454, column: 33, scope: !8223)
!8231 = !DILocation(line: 3454, column: 15, scope: !8223)
!8232 = !DILocation(line: 3456, column: 19, scope: !8223)
!8233 = !DILocation(line: 3456, column: 2, scope: !8223)
!8234 = !DILocation(line: 3457, column: 21, scope: !8223)
!8235 = !DILocation(line: 3457, column: 25, scope: !8223)
!8236 = !DILocation(line: 3457, column: 2, scope: !8223)
!8237 = !DILocation(line: 3458, column: 24, scope: !8223)
!8238 = !DILocation(line: 3458, column: 48, scope: !8223)
!8239 = !DILocation(line: 3458, column: 2, scope: !8223)
!8240 = !DILocation(line: 3459, column: 24, scope: !8223)
!8241 = !DILocation(line: 3459, column: 54, scope: !8223)
!8242 = !DILocation(line: 3459, column: 58, scope: !8223)
!8243 = !DILocation(line: 3459, column: 2, scope: !8223)
!8244 = !DILocation(line: 3461, column: 2, scope: !8223)
!8245 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_levels", scope: !3, file: !3, line: 3500, type: !3603, scopeLine: 3501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8246 = !DILocalVariable(name: "ot", arg: 1, scope: !8245, file: !3, line: 3500, type: !3605)
!8247 = !DILocation(line: 3500, column: 52, scope: !8245)
!8248 = !DILocation(line: 3503, column: 2, scope: !8245)
!8249 = !DILocation(line: 3503, column: 6, scope: !8245)
!8250 = !DILocation(line: 3503, column: 11, scope: !8245)
!8251 = !DILocation(line: 3504, column: 2, scope: !8245)
!8252 = !DILocation(line: 3504, column: 6, scope: !8245)
!8253 = !DILocation(line: 3504, column: 13, scope: !8245)
!8254 = !DILocation(line: 3505, column: 2, scope: !8245)
!8255 = !DILocation(line: 3505, column: 6, scope: !8245)
!8256 = !DILocation(line: 3505, column: 18, scope: !8245)
!8257 = !DILocation(line: 3508, column: 2, scope: !8245)
!8258 = !DILocation(line: 3508, column: 6, scope: !8245)
!8259 = !DILocation(line: 3508, column: 11, scope: !8245)
!8260 = !DILocation(line: 3509, column: 2, scope: !8245)
!8261 = !DILocation(line: 3509, column: 6, scope: !8245)
!8262 = !DILocation(line: 3509, column: 11, scope: !8245)
!8263 = !DILocation(line: 3512, column: 2, scope: !8245)
!8264 = !DILocation(line: 3512, column: 6, scope: !8245)
!8265 = !DILocation(line: 3512, column: 11, scope: !8245)
!8266 = !DILocation(line: 3514, column: 38, scope: !8245)
!8267 = !DILocation(line: 3514, column: 2, scope: !8245)
!8268 = !DILocation(line: 3515, column: 16, scope: !8245)
!8269 = !DILocation(line: 3515, column: 20, scope: !8245)
!8270 = !DILocation(line: 3515, column: 2, scope: !8245)
!8271 = !DILocation(line: 3516, column: 16, scope: !8245)
!8272 = !DILocation(line: 3516, column: 20, scope: !8245)
!8273 = !DILocation(line: 3516, column: 2, scope: !8245)
!8274 = !DILocation(line: 3517, column: 1, scope: !8245)
!8275 = distinct !DISubprogram(name: "vertex_group_levels_exec", scope: !3, file: !3, line: 3479, type: !7729, scopeLine: 3480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8276 = !DILocalVariable(name: "C", arg: 1, scope: !8275, file: !3, line: 3479, type: !7700)
!8277 = !DILocation(line: 3479, column: 47, scope: !8275)
!8278 = !DILocalVariable(name: "op", arg: 2, scope: !8275, file: !3, line: 3479, type: !7731)
!8279 = !DILocation(line: 3479, column: 62, scope: !8275)
!8280 = !DILocalVariable(name: "ob", scope: !8275, file: !3, line: 3481, type: !3872)
!8281 = !DILocation(line: 3481, column: 10, scope: !8275)
!8282 = !DILocation(line: 3481, column: 33, scope: !8275)
!8283 = !DILocation(line: 3481, column: 15, scope: !8275)
!8284 = !DILocalVariable(name: "offset", scope: !8275, file: !3, line: 3483, type: !1320)
!8285 = !DILocation(line: 3483, column: 8, scope: !8275)
!8286 = !DILocation(line: 3483, column: 31, scope: !8275)
!8287 = !DILocation(line: 3483, column: 35, scope: !8275)
!8288 = !DILocation(line: 3483, column: 17, scope: !8275)
!8289 = !DILocalVariable(name: "gain", scope: !8275, file: !3, line: 3484, type: !1320)
!8290 = !DILocation(line: 3484, column: 8, scope: !8275)
!8291 = !DILocation(line: 3484, column: 29, scope: !8275)
!8292 = !DILocation(line: 3484, column: 33, scope: !8275)
!8293 = !DILocation(line: 3484, column: 15, scope: !8275)
!8294 = !DILocalVariable(name: "subset_type", scope: !8275, file: !3, line: 3485, type: !6851)
!8295 = !DILocation(line: 3485, column: 16, scope: !8275)
!8296 = !DILocation(line: 3485, column: 44, scope: !8275)
!8297 = !DILocation(line: 3485, column: 48, scope: !8275)
!8298 = !DILocation(line: 3485, column: 31, scope: !8275)
!8299 = !DILocalVariable(name: "subset_count", scope: !8275, file: !3, line: 3487, type: !354)
!8300 = !DILocation(line: 3487, column: 6, scope: !8275)
!8301 = !DILocalVariable(name: "vgroup_tot", scope: !8275, file: !3, line: 3487, type: !354)
!8302 = !DILocation(line: 3487, column: 20, scope: !8275)
!8303 = !DILocalVariable(name: "vgroup_validmap", scope: !8275, file: !3, line: 3489, type: !5078)
!8304 = !DILocation(line: 3489, column: 14, scope: !8275)
!8305 = !DILocation(line: 3489, column: 66, scope: !8275)
!8306 = !DILocation(line: 3489, column: 70, scope: !8275)
!8307 = !DILocation(line: 3489, column: 32, scope: !8275)
!8308 = !DILocation(line: 3490, column: 23, scope: !8275)
!8309 = !DILocation(line: 3490, column: 27, scope: !8275)
!8310 = !DILocation(line: 3490, column: 44, scope: !8275)
!8311 = !DILocation(line: 3490, column: 56, scope: !8275)
!8312 = !DILocation(line: 3490, column: 70, scope: !8275)
!8313 = !DILocation(line: 3490, column: 78, scope: !8275)
!8314 = !DILocation(line: 3490, column: 2, scope: !8275)
!8315 = !DILocation(line: 3491, column: 2, scope: !8275)
!8316 = !DILocation(line: 3491, column: 20, scope: !8275)
!8317 = !DILocation(line: 3493, column: 21, scope: !8275)
!8318 = !DILocation(line: 3493, column: 25, scope: !8275)
!8319 = !DILocation(line: 3493, column: 2, scope: !8275)
!8320 = !DILocation(line: 3494, column: 24, scope: !8275)
!8321 = !DILocation(line: 3494, column: 48, scope: !8275)
!8322 = !DILocation(line: 3494, column: 2, scope: !8275)
!8323 = !DILocation(line: 3495, column: 24, scope: !8275)
!8324 = !DILocation(line: 3495, column: 46, scope: !8275)
!8325 = !DILocation(line: 3495, column: 50, scope: !8275)
!8326 = !DILocation(line: 3495, column: 2, scope: !8275)
!8327 = !DILocation(line: 3497, column: 2, scope: !8275)
!8328 = distinct !DISubprogram(name: "vgroup_operator_subset_select_props", scope: !3, file: !3, line: 851, type: !8329, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8329 = !DISubroutineType(types: !8330)
!8330 = !{null, !3605, !2436}
!8331 = !DILocalVariable(name: "ot", arg: 1, scope: !8328, file: !3, line: 851, type: !3605)
!8332 = !DILocation(line: 851, column: 65, scope: !8328)
!8333 = !DILocalVariable(name: "use_active", arg: 2, scope: !8328, file: !3, line: 851, type: !2436)
!8334 = !DILocation(line: 851, column: 74, scope: !8328)
!8335 = !DILocalVariable(name: "prop", scope: !8328, file: !3, line: 853, type: !3792)
!8336 = !DILocation(line: 853, column: 15, scope: !8328)
!8337 = !DILocation(line: 855, column: 22, scope: !8328)
!8338 = !DILocation(line: 855, column: 26, scope: !8328)
!8339 = !DILocation(line: 857, column: 22, scope: !8328)
!8340 = !DILocation(line: 855, column: 9, scope: !8328)
!8341 = !DILocation(line: 855, column: 7, scope: !8328)
!8342 = !DILocation(line: 860, column: 6, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 860, column: 6)
!8344 = !DILocation(line: 860, column: 6, scope: !8328)
!8345 = !DILocation(line: 861, column: 22, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 860, column: 18)
!8347 = !DILocation(line: 861, column: 3, scope: !8346)
!8348 = !DILocation(line: 862, column: 2, scope: !8346)
!8349 = !DILocation(line: 864, column: 22, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 863, column: 7)
!8351 = !DILocation(line: 864, column: 3, scope: !8350)
!8352 = !DILocation(line: 866, column: 24, scope: !8328)
!8353 = !DILocation(line: 866, column: 2, scope: !8328)
!8354 = !DILocation(line: 867, column: 13, scope: !8328)
!8355 = !DILocation(line: 867, column: 2, scope: !8328)
!8356 = !DILocation(line: 867, column: 6, scope: !8328)
!8357 = !DILocation(line: 867, column: 11, scope: !8328)
!8358 = !DILocation(line: 868, column: 1, scope: !8328)
!8359 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_normalize", scope: !3, file: !3, line: 3532, type: !3603, scopeLine: 3533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8360 = !DILocalVariable(name: "ot", arg: 1, scope: !8359, file: !3, line: 3532, type: !3605)
!8361 = !DILocation(line: 3532, column: 55, scope: !8359)
!8362 = !DILocation(line: 3535, column: 2, scope: !8359)
!8363 = !DILocation(line: 3535, column: 6, scope: !8359)
!8364 = !DILocation(line: 3535, column: 11, scope: !8359)
!8365 = !DILocation(line: 3536, column: 2, scope: !8359)
!8366 = !DILocation(line: 3536, column: 6, scope: !8359)
!8367 = !DILocation(line: 3536, column: 13, scope: !8359)
!8368 = !DILocation(line: 3537, column: 2, scope: !8359)
!8369 = !DILocation(line: 3537, column: 6, scope: !8359)
!8370 = !DILocation(line: 3537, column: 18, scope: !8359)
!8371 = !DILocation(line: 3540, column: 2, scope: !8359)
!8372 = !DILocation(line: 3540, column: 6, scope: !8359)
!8373 = !DILocation(line: 3540, column: 11, scope: !8359)
!8374 = !DILocation(line: 3541, column: 2, scope: !8359)
!8375 = !DILocation(line: 3541, column: 6, scope: !8359)
!8376 = !DILocation(line: 3541, column: 11, scope: !8359)
!8377 = !DILocation(line: 3544, column: 2, scope: !8359)
!8378 = !DILocation(line: 3544, column: 6, scope: !8359)
!8379 = !DILocation(line: 3544, column: 11, scope: !8359)
!8380 = !DILocation(line: 3545, column: 1, scope: !8359)
!8381 = distinct !DISubprogram(name: "vertex_group_normalize_exec", scope: !3, file: !3, line: 3519, type: !7729, scopeLine: 3520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8382 = !DILocalVariable(name: "C", arg: 1, scope: !8381, file: !3, line: 3519, type: !7700)
!8383 = !DILocation(line: 3519, column: 50, scope: !8381)
!8384 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !8381, file: !3, line: 3519, type: !7731)
!8385 = !DILocation(line: 3519, column: 65, scope: !8381)
!8386 = !DILocalVariable(name: "ob", scope: !8381, file: !3, line: 3521, type: !3872)
!8387 = !DILocation(line: 3521, column: 10, scope: !8381)
!8388 = !DILocation(line: 3521, column: 33, scope: !8381)
!8389 = !DILocation(line: 3521, column: 15, scope: !8381)
!8390 = !DILocation(line: 3523, column: 19, scope: !8381)
!8391 = !DILocation(line: 3523, column: 2, scope: !8381)
!8392 = !DILocation(line: 3525, column: 21, scope: !8381)
!8393 = !DILocation(line: 3525, column: 25, scope: !8381)
!8394 = !DILocation(line: 3525, column: 2, scope: !8381)
!8395 = !DILocation(line: 3526, column: 24, scope: !8381)
!8396 = !DILocation(line: 3526, column: 48, scope: !8381)
!8397 = !DILocation(line: 3526, column: 2, scope: !8381)
!8398 = !DILocation(line: 3527, column: 24, scope: !8381)
!8399 = !DILocation(line: 3527, column: 46, scope: !8381)
!8400 = !DILocation(line: 3527, column: 50, scope: !8381)
!8401 = !DILocation(line: 3527, column: 2, scope: !8381)
!8402 = !DILocation(line: 3529, column: 2, scope: !8381)
!8403 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_normalize_all", scope: !3, file: !3, line: 3566, type: !3603, scopeLine: 3567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8404 = !DILocalVariable(name: "ot", arg: 1, scope: !8403, file: !3, line: 3566, type: !3605)
!8405 = !DILocation(line: 3566, column: 59, scope: !8403)
!8406 = !DILocation(line: 3569, column: 2, scope: !8403)
!8407 = !DILocation(line: 3569, column: 6, scope: !8403)
!8408 = !DILocation(line: 3569, column: 11, scope: !8403)
!8409 = !DILocation(line: 3570, column: 2, scope: !8403)
!8410 = !DILocation(line: 3570, column: 6, scope: !8403)
!8411 = !DILocation(line: 3570, column: 13, scope: !8403)
!8412 = !DILocation(line: 3571, column: 2, scope: !8403)
!8413 = !DILocation(line: 3571, column: 6, scope: !8403)
!8414 = !DILocation(line: 3571, column: 18, scope: !8403)
!8415 = !DILocation(line: 3575, column: 2, scope: !8403)
!8416 = !DILocation(line: 3575, column: 6, scope: !8403)
!8417 = !DILocation(line: 3575, column: 11, scope: !8403)
!8418 = !DILocation(line: 3576, column: 2, scope: !8403)
!8419 = !DILocation(line: 3576, column: 6, scope: !8403)
!8420 = !DILocation(line: 3576, column: 11, scope: !8403)
!8421 = !DILocation(line: 3579, column: 2, scope: !8403)
!8422 = !DILocation(line: 3579, column: 6, scope: !8403)
!8423 = !DILocation(line: 3579, column: 11, scope: !8403)
!8424 = !DILocation(line: 3581, column: 38, scope: !8403)
!8425 = !DILocation(line: 3581, column: 2, scope: !8403)
!8426 = !DILocation(line: 3582, column: 18, scope: !8403)
!8427 = !DILocation(line: 3582, column: 22, scope: !8403)
!8428 = !DILocation(line: 3582, column: 2, scope: !8403)
!8429 = !DILocation(line: 3584, column: 1, scope: !8403)
!8430 = distinct !DISubprogram(name: "vertex_group_normalize_all_exec", scope: !3, file: !3, line: 3547, type: !7729, scopeLine: 3548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8431 = !DILocalVariable(name: "C", arg: 1, scope: !8430, file: !3, line: 3547, type: !7700)
!8432 = !DILocation(line: 3547, column: 54, scope: !8430)
!8433 = !DILocalVariable(name: "op", arg: 2, scope: !8430, file: !3, line: 3547, type: !7731)
!8434 = !DILocation(line: 3547, column: 69, scope: !8430)
!8435 = !DILocalVariable(name: "ob", scope: !8430, file: !3, line: 3549, type: !3872)
!8436 = !DILocation(line: 3549, column: 10, scope: !8430)
!8437 = !DILocation(line: 3549, column: 33, scope: !8430)
!8438 = !DILocation(line: 3549, column: 15, scope: !8430)
!8439 = !DILocalVariable(name: "lock_active", scope: !8430, file: !3, line: 3550, type: !2436)
!8440 = !DILocation(line: 3550, column: 7, scope: !8430)
!8441 = !DILocation(line: 3550, column: 37, scope: !8430)
!8442 = !DILocation(line: 3550, column: 41, scope: !8430)
!8443 = !DILocation(line: 3550, column: 21, scope: !8430)
!8444 = !DILocalVariable(name: "subset_type", scope: !8430, file: !3, line: 3551, type: !6851)
!8445 = !DILocation(line: 3551, column: 16, scope: !8430)
!8446 = !DILocation(line: 3551, column: 44, scope: !8430)
!8447 = !DILocation(line: 3551, column: 48, scope: !8430)
!8448 = !DILocation(line: 3551, column: 31, scope: !8430)
!8449 = !DILocalVariable(name: "subset_count", scope: !8430, file: !3, line: 3553, type: !354)
!8450 = !DILocation(line: 3553, column: 6, scope: !8430)
!8451 = !DILocalVariable(name: "vgroup_tot", scope: !8430, file: !3, line: 3553, type: !354)
!8452 = !DILocation(line: 3553, column: 20, scope: !8430)
!8453 = !DILocalVariable(name: "vgroup_validmap", scope: !8430, file: !3, line: 3555, type: !5078)
!8454 = !DILocation(line: 3555, column: 14, scope: !8430)
!8455 = !DILocation(line: 3555, column: 66, scope: !8430)
!8456 = !DILocation(line: 3555, column: 70, scope: !8430)
!8457 = !DILocation(line: 3555, column: 32, scope: !8430)
!8458 = !DILocation(line: 3556, column: 23, scope: !8430)
!8459 = !DILocation(line: 3556, column: 27, scope: !8430)
!8460 = !DILocation(line: 3556, column: 44, scope: !8430)
!8461 = !DILocation(line: 3556, column: 56, scope: !8430)
!8462 = !DILocation(line: 3556, column: 70, scope: !8430)
!8463 = !DILocation(line: 3556, column: 2, scope: !8430)
!8464 = !DILocation(line: 3557, column: 2, scope: !8430)
!8465 = !DILocation(line: 3557, column: 20, scope: !8430)
!8466 = !DILocation(line: 3559, column: 21, scope: !8430)
!8467 = !DILocation(line: 3559, column: 25, scope: !8430)
!8468 = !DILocation(line: 3559, column: 2, scope: !8430)
!8469 = !DILocation(line: 3560, column: 24, scope: !8430)
!8470 = !DILocation(line: 3560, column: 48, scope: !8430)
!8471 = !DILocation(line: 3560, column: 2, scope: !8430)
!8472 = !DILocation(line: 3561, column: 24, scope: !8430)
!8473 = !DILocation(line: 3561, column: 46, scope: !8430)
!8474 = !DILocation(line: 3561, column: 50, scope: !8430)
!8475 = !DILocation(line: 3561, column: 2, scope: !8430)
!8476 = !DILocation(line: 3563, column: 2, scope: !8430)
!8477 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_fix", scope: !3, file: !3, line: 3616, type: !3603, scopeLine: 3617, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8478 = !DILocalVariable(name: "ot", arg: 1, scope: !8477, file: !3, line: 3616, type: !3605)
!8479 = !DILocation(line: 3616, column: 49, scope: !8477)
!8480 = !DILocation(line: 3619, column: 2, scope: !8477)
!8481 = !DILocation(line: 3619, column: 6, scope: !8477)
!8482 = !DILocation(line: 3619, column: 11, scope: !8477)
!8483 = !DILocation(line: 3620, column: 2, scope: !8477)
!8484 = !DILocation(line: 3620, column: 6, scope: !8477)
!8485 = !DILocation(line: 3620, column: 13, scope: !8477)
!8486 = !DILocation(line: 3621, column: 2, scope: !8477)
!8487 = !DILocation(line: 3621, column: 6, scope: !8477)
!8488 = !DILocation(line: 3621, column: 18, scope: !8477)
!8489 = !DILocation(line: 3625, column: 2, scope: !8477)
!8490 = !DILocation(line: 3625, column: 6, scope: !8477)
!8491 = !DILocation(line: 3625, column: 11, scope: !8477)
!8492 = !DILocation(line: 3626, column: 2, scope: !8477)
!8493 = !DILocation(line: 3626, column: 6, scope: !8477)
!8494 = !DILocation(line: 3626, column: 11, scope: !8477)
!8495 = !DILocation(line: 3629, column: 2, scope: !8477)
!8496 = !DILocation(line: 3629, column: 6, scope: !8477)
!8497 = !DILocation(line: 3629, column: 11, scope: !8477)
!8498 = !DILocation(line: 3630, column: 16, scope: !8477)
!8499 = !DILocation(line: 3630, column: 20, scope: !8477)
!8500 = !DILocation(line: 3630, column: 2, scope: !8477)
!8501 = !DILocation(line: 3631, column: 16, scope: !8477)
!8502 = !DILocation(line: 3631, column: 20, scope: !8477)
!8503 = !DILocation(line: 3631, column: 2, scope: !8477)
!8504 = !DILocation(line: 3633, column: 16, scope: !8477)
!8505 = !DILocation(line: 3633, column: 20, scope: !8477)
!8506 = !DILocation(line: 3633, column: 2, scope: !8477)
!8507 = !DILocation(line: 3635, column: 1, scope: !8477)
!8508 = distinct !DISubprogram(name: "vertex_group_mesh_poll", scope: !3, file: !3, line: 3142, type: !7698, scopeLine: 3143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8509 = !DILocalVariable(name: "C", arg: 1, scope: !8508, file: !3, line: 3142, type: !7700)
!8510 = !DILocation(line: 3142, column: 45, scope: !8508)
!8511 = !DILocalVariable(name: "ob", scope: !8508, file: !3, line: 3144, type: !3872)
!8512 = !DILocation(line: 3144, column: 10, scope: !8508)
!8513 = !DILocation(line: 3144, column: 33, scope: !8508)
!8514 = !DILocation(line: 3144, column: 15, scope: !8508)
!8515 = !DILocalVariable(name: "data", scope: !8508, file: !3, line: 3145, type: !1247)
!8516 = !DILocation(line: 3145, column: 6, scope: !8508)
!8517 = !DILocation(line: 3145, column: 14, scope: !8508)
!8518 = !DILocation(line: 3145, column: 13, scope: !8508)
!8519 = !DILocation(line: 3145, column: 20, scope: !8508)
!8520 = !DILocation(line: 3145, column: 24, scope: !8508)
!8521 = !DILocation(line: 3147, column: 10, scope: !8508)
!8522 = !DILocation(line: 3147, column: 13, scope: !8508)
!8523 = !DILocation(line: 3147, column: 17, scope: !8508)
!8524 = !DILocation(line: 3147, column: 21, scope: !8508)
!8525 = !DILocation(line: 3147, column: 24, scope: !8508)
!8526 = !DILocation(line: 3147, column: 28, scope: !8508)
!8527 = !DILocation(line: 3148, column: 10, scope: !8508)
!8528 = !DILocation(line: 3148, column: 15, scope: !8508)
!8529 = !DILocation(line: 3148, column: 19, scope: !8508)
!8530 = !DILocation(line: 3148, column: 25, scope: !8508)
!8531 = !DILocation(line: 3148, column: 29, scope: !8508)
!8532 = !DILocation(line: 3149, column: 10, scope: !8508)
!8533 = !DILocation(line: 3149, column: 14, scope: !8508)
!8534 = !DILocation(line: 3149, column: 19, scope: !8508)
!8535 = !DILocation(line: 3149, column: 30, scope: !8508)
!8536 = !DILocation(line: 3150, column: 10, scope: !8508)
!8537 = !DILocation(line: 3150, column: 14, scope: !8508)
!8538 = !DILocation(line: 3150, column: 22, scope: !8508)
!8539 = !DILocation(line: 0, scope: !8508)
!8540 = !DILocation(line: 3147, column: 2, scope: !8508)
!8541 = distinct !DISubprogram(name: "vertex_group_fix_exec", scope: !3, file: !3, line: 3586, type: !7729, scopeLine: 3587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8542 = !DILocalVariable(name: "C", arg: 1, scope: !8541, file: !3, line: 3586, type: !7700)
!8543 = !DILocation(line: 3586, column: 44, scope: !8541)
!8544 = !DILocalVariable(name: "op", arg: 2, scope: !8541, file: !3, line: 3586, type: !7731)
!8545 = !DILocation(line: 3586, column: 59, scope: !8541)
!8546 = !DILocalVariable(name: "ob", scope: !8541, file: !3, line: 3588, type: !3872)
!8547 = !DILocation(line: 3588, column: 10, scope: !8541)
!8548 = !DILocation(line: 3588, column: 38, scope: !8541)
!8549 = !DILocation(line: 3588, column: 15, scope: !8541)
!8550 = !DILocalVariable(name: "scene", scope: !8541, file: !3, line: 3589, type: !8551)
!8551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8552, size: 64)
!8552 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !173, line: 1299, baseType: !2372)
!8553 = !DILocation(line: 3589, column: 9, scope: !8541)
!8554 = !DILocation(line: 3589, column: 32, scope: !8541)
!8555 = !DILocation(line: 3589, column: 17, scope: !8541)
!8556 = !DILocalVariable(name: "distToBe", scope: !8541, file: !3, line: 3591, type: !1320)
!8557 = !DILocation(line: 3591, column: 8, scope: !8541)
!8558 = !DILocation(line: 3591, column: 33, scope: !8541)
!8559 = !DILocation(line: 3591, column: 37, scope: !8541)
!8560 = !DILocation(line: 3591, column: 19, scope: !8541)
!8561 = !DILocalVariable(name: "strength", scope: !8541, file: !3, line: 3592, type: !1320)
!8562 = !DILocation(line: 3592, column: 8, scope: !8541)
!8563 = !DILocation(line: 3592, column: 33, scope: !8541)
!8564 = !DILocation(line: 3592, column: 37, scope: !8541)
!8565 = !DILocation(line: 3592, column: 19, scope: !8541)
!8566 = !DILocalVariable(name: "cp", scope: !8541, file: !3, line: 3593, type: !1320)
!8567 = !DILocation(line: 3593, column: 8, scope: !8541)
!8568 = !DILocation(line: 3593, column: 27, scope: !8541)
!8569 = !DILocation(line: 3593, column: 31, scope: !8541)
!8570 = !DILocation(line: 3593, column: 13, scope: !8541)
!8571 = !DILocalVariable(name: "md", scope: !8541, file: !3, line: 3594, type: !5695)
!8572 = !DILocation(line: 3594, column: 16, scope: !8541)
!8573 = !DILocation(line: 3594, column: 21, scope: !8541)
!8574 = !DILocation(line: 3594, column: 25, scope: !8541)
!8575 = !DILocation(line: 3594, column: 35, scope: !8541)
!8576 = !DILocation(line: 3596, column: 2, scope: !8541)
!8577 = !DILocation(line: 3596, column: 9, scope: !8541)
!8578 = !DILocation(line: 3597, column: 7, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 3597, column: 7)
!8580 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 3596, column: 13)
!8581 = !DILocation(line: 3597, column: 11, scope: !8579)
!8582 = !DILocation(line: 3597, column: 16, scope: !8579)
!8583 = !DILocation(line: 3597, column: 40, scope: !8579)
!8584 = !DILocation(line: 3597, column: 44, scope: !8579)
!8585 = !DILocation(line: 3597, column: 48, scope: !8579)
!8586 = !DILocation(line: 3597, column: 53, scope: !8579)
!8587 = !DILocation(line: 3597, column: 7, scope: !8580)
!8588 = !DILocation(line: 3598, column: 4, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 3597, column: 80)
!8590 = !DILocation(line: 3600, column: 8, scope: !8580)
!8591 = !DILocation(line: 3600, column: 12, scope: !8580)
!8592 = !DILocation(line: 3600, column: 6, scope: !8580)
!8593 = distinct !{!8593, !8576, !8594}
!8594 = !DILocation(line: 3601, column: 2, scope: !8541)
!8595 = !DILocation(line: 3603, column: 6, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 3603, column: 6)
!8597 = !DILocation(line: 3603, column: 9, scope: !8596)
!8598 = !DILocation(line: 3603, column: 12, scope: !8596)
!8599 = !DILocation(line: 3603, column: 16, scope: !8596)
!8600 = !DILocation(line: 3603, column: 21, scope: !8596)
!8601 = !DILocation(line: 3603, column: 6, scope: !8541)
!8602 = !DILocation(line: 3604, column: 14, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 3603, column: 46)
!8604 = !DILocation(line: 3604, column: 18, scope: !8603)
!8605 = !DILocation(line: 3604, column: 3, scope: !8603)
!8606 = !DILocation(line: 3605, column: 3, scope: !8603)
!8607 = !DILocation(line: 3607, column: 13, scope: !8541)
!8608 = !DILocation(line: 3607, column: 20, scope: !8541)
!8609 = !DILocation(line: 3607, column: 24, scope: !8541)
!8610 = !DILocation(line: 3607, column: 34, scope: !8541)
!8611 = !DILocation(line: 3607, column: 44, scope: !8541)
!8612 = !DILocation(line: 3607, column: 2, scope: !8541)
!8613 = !DILocation(line: 3609, column: 21, scope: !8541)
!8614 = !DILocation(line: 3609, column: 25, scope: !8541)
!8615 = !DILocation(line: 3609, column: 2, scope: !8541)
!8616 = !DILocation(line: 3610, column: 24, scope: !8541)
!8617 = !DILocation(line: 3610, column: 48, scope: !8541)
!8618 = !DILocation(line: 3610, column: 2, scope: !8541)
!8619 = !DILocation(line: 3611, column: 24, scope: !8541)
!8620 = !DILocation(line: 3611, column: 46, scope: !8541)
!8621 = !DILocation(line: 3611, column: 50, scope: !8541)
!8622 = !DILocation(line: 3611, column: 2, scope: !8541)
!8623 = !DILocation(line: 3613, column: 2, scope: !8541)
!8624 = !DILocation(line: 3614, column: 1, scope: !8541)
!8625 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_lock", scope: !3, file: !3, line: 3649, type: !3603, scopeLine: 3650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8626 = !DILocalVariable(name: "ot", arg: 1, scope: !8625, file: !3, line: 3649, type: !3605)
!8627 = !DILocation(line: 3649, column: 50, scope: !8625)
!8628 = !DILocation(line: 3652, column: 2, scope: !8625)
!8629 = !DILocation(line: 3652, column: 6, scope: !8625)
!8630 = !DILocation(line: 3652, column: 11, scope: !8625)
!8631 = !DILocation(line: 3653, column: 2, scope: !8625)
!8632 = !DILocation(line: 3653, column: 6, scope: !8625)
!8633 = !DILocation(line: 3653, column: 13, scope: !8625)
!8634 = !DILocation(line: 3654, column: 2, scope: !8625)
!8635 = !DILocation(line: 3654, column: 6, scope: !8625)
!8636 = !DILocation(line: 3654, column: 18, scope: !8625)
!8637 = !DILocation(line: 3657, column: 2, scope: !8625)
!8638 = !DILocation(line: 3657, column: 6, scope: !8625)
!8639 = !DILocation(line: 3657, column: 11, scope: !8625)
!8640 = !DILocation(line: 3658, column: 2, scope: !8625)
!8641 = !DILocation(line: 3658, column: 6, scope: !8625)
!8642 = !DILocation(line: 3658, column: 11, scope: !8625)
!8643 = !DILocation(line: 3661, column: 2, scope: !8625)
!8644 = !DILocation(line: 3661, column: 6, scope: !8625)
!8645 = !DILocation(line: 3661, column: 11, scope: !8625)
!8646 = !DILocation(line: 3663, column: 15, scope: !8625)
!8647 = !DILocation(line: 3663, column: 19, scope: !8625)
!8648 = !DILocation(line: 3663, column: 2, scope: !8625)
!8649 = !DILocation(line: 3665, column: 1, scope: !8625)
!8650 = distinct !DISubprogram(name: "vertex_group_lock_exec", scope: !3, file: !3, line: 3638, type: !7729, scopeLine: 3639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8651 = !DILocalVariable(name: "C", arg: 1, scope: !8650, file: !3, line: 3638, type: !7700)
!8652 = !DILocation(line: 3638, column: 45, scope: !8650)
!8653 = !DILocalVariable(name: "op", arg: 2, scope: !8650, file: !3, line: 3638, type: !7731)
!8654 = !DILocation(line: 3638, column: 60, scope: !8650)
!8655 = !DILocalVariable(name: "ob", scope: !8650, file: !3, line: 3640, type: !3872)
!8656 = !DILocation(line: 3640, column: 10, scope: !8650)
!8657 = !DILocation(line: 3640, column: 38, scope: !8650)
!8658 = !DILocation(line: 3640, column: 15, scope: !8650)
!8659 = !DILocalVariable(name: "action", scope: !8650, file: !3, line: 3642, type: !354)
!8660 = !DILocation(line: 3642, column: 6, scope: !8650)
!8661 = !DILocation(line: 3642, column: 28, scope: !8650)
!8662 = !DILocation(line: 3642, column: 32, scope: !8650)
!8663 = !DILocation(line: 3642, column: 15, scope: !8650)
!8664 = !DILocation(line: 3644, column: 18, scope: !8650)
!8665 = !DILocation(line: 3644, column: 22, scope: !8650)
!8666 = !DILocation(line: 3644, column: 2, scope: !8650)
!8667 = !DILocation(line: 3646, column: 2, scope: !8650)
!8668 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_invert", scope: !3, file: !3, line: 3688, type: !3603, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8669 = !DILocalVariable(name: "ot", arg: 1, scope: !8668, file: !3, line: 3688, type: !3605)
!8670 = !DILocation(line: 3688, column: 52, scope: !8668)
!8671 = !DILocation(line: 3691, column: 2, scope: !8668)
!8672 = !DILocation(line: 3691, column: 6, scope: !8668)
!8673 = !DILocation(line: 3691, column: 11, scope: !8668)
!8674 = !DILocation(line: 3692, column: 2, scope: !8668)
!8675 = !DILocation(line: 3692, column: 6, scope: !8668)
!8676 = !DILocation(line: 3692, column: 13, scope: !8668)
!8677 = !DILocation(line: 3693, column: 2, scope: !8668)
!8678 = !DILocation(line: 3693, column: 6, scope: !8668)
!8679 = !DILocation(line: 3693, column: 18, scope: !8668)
!8680 = !DILocation(line: 3696, column: 2, scope: !8668)
!8681 = !DILocation(line: 3696, column: 6, scope: !8668)
!8682 = !DILocation(line: 3696, column: 11, scope: !8668)
!8683 = !DILocation(line: 3697, column: 2, scope: !8668)
!8684 = !DILocation(line: 3697, column: 6, scope: !8668)
!8685 = !DILocation(line: 3697, column: 11, scope: !8668)
!8686 = !DILocation(line: 3700, column: 2, scope: !8668)
!8687 = !DILocation(line: 3700, column: 6, scope: !8668)
!8688 = !DILocation(line: 3700, column: 11, scope: !8668)
!8689 = !DILocation(line: 3702, column: 38, scope: !8668)
!8690 = !DILocation(line: 3702, column: 2, scope: !8668)
!8691 = !DILocation(line: 3703, column: 18, scope: !8668)
!8692 = !DILocation(line: 3703, column: 22, scope: !8668)
!8693 = !DILocation(line: 3703, column: 2, scope: !8668)
!8694 = !DILocation(line: 3705, column: 18, scope: !8668)
!8695 = !DILocation(line: 3705, column: 22, scope: !8668)
!8696 = !DILocation(line: 3705, column: 2, scope: !8668)
!8697 = !DILocation(line: 3707, column: 1, scope: !8668)
!8698 = distinct !DISubprogram(name: "vertex_group_invert_exec", scope: !3, file: !3, line: 3667, type: !7729, scopeLine: 3668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8699 = !DILocalVariable(name: "C", arg: 1, scope: !8698, file: !3, line: 3667, type: !7700)
!8700 = !DILocation(line: 3667, column: 47, scope: !8698)
!8701 = !DILocalVariable(name: "op", arg: 2, scope: !8698, file: !3, line: 3667, type: !7731)
!8702 = !DILocation(line: 3667, column: 62, scope: !8698)
!8703 = !DILocalVariable(name: "ob", scope: !8698, file: !3, line: 3669, type: !3872)
!8704 = !DILocation(line: 3669, column: 10, scope: !8698)
!8705 = !DILocation(line: 3669, column: 33, scope: !8698)
!8706 = !DILocation(line: 3669, column: 15, scope: !8698)
!8707 = !DILocalVariable(name: "auto_assign", scope: !8698, file: !3, line: 3670, type: !2436)
!8708 = !DILocation(line: 3670, column: 7, scope: !8698)
!8709 = !DILocation(line: 3670, column: 37, scope: !8698)
!8710 = !DILocation(line: 3670, column: 41, scope: !8698)
!8711 = !DILocation(line: 3670, column: 21, scope: !8698)
!8712 = !DILocalVariable(name: "auto_remove", scope: !8698, file: !3, line: 3671, type: !2436)
!8713 = !DILocation(line: 3671, column: 7, scope: !8698)
!8714 = !DILocation(line: 3671, column: 37, scope: !8698)
!8715 = !DILocation(line: 3671, column: 41, scope: !8698)
!8716 = !DILocation(line: 3671, column: 21, scope: !8698)
!8717 = !DILocalVariable(name: "subset_type", scope: !8698, file: !3, line: 3673, type: !6851)
!8718 = !DILocation(line: 3673, column: 16, scope: !8698)
!8719 = !DILocation(line: 3673, column: 44, scope: !8698)
!8720 = !DILocation(line: 3673, column: 48, scope: !8698)
!8721 = !DILocation(line: 3673, column: 31, scope: !8698)
!8722 = !DILocalVariable(name: "subset_count", scope: !8698, file: !3, line: 3675, type: !354)
!8723 = !DILocation(line: 3675, column: 6, scope: !8698)
!8724 = !DILocalVariable(name: "vgroup_tot", scope: !8698, file: !3, line: 3675, type: !354)
!8725 = !DILocation(line: 3675, column: 20, scope: !8698)
!8726 = !DILocalVariable(name: "vgroup_validmap", scope: !8698, file: !3, line: 3677, type: !5078)
!8727 = !DILocation(line: 3677, column: 14, scope: !8698)
!8728 = !DILocation(line: 3677, column: 66, scope: !8698)
!8729 = !DILocation(line: 3677, column: 70, scope: !8698)
!8730 = !DILocation(line: 3677, column: 32, scope: !8698)
!8731 = !DILocation(line: 3678, column: 23, scope: !8698)
!8732 = !DILocation(line: 3678, column: 27, scope: !8698)
!8733 = !DILocation(line: 3678, column: 44, scope: !8698)
!8734 = !DILocation(line: 3678, column: 56, scope: !8698)
!8735 = !DILocation(line: 3678, column: 70, scope: !8698)
!8736 = !DILocation(line: 3678, column: 83, scope: !8698)
!8737 = !DILocation(line: 3678, column: 2, scope: !8698)
!8738 = !DILocation(line: 3679, column: 2, scope: !8698)
!8739 = !DILocation(line: 3679, column: 20, scope: !8698)
!8740 = !DILocation(line: 3681, column: 21, scope: !8698)
!8741 = !DILocation(line: 3681, column: 25, scope: !8698)
!8742 = !DILocation(line: 3681, column: 2, scope: !8698)
!8743 = !DILocation(line: 3682, column: 24, scope: !8698)
!8744 = !DILocation(line: 3682, column: 48, scope: !8698)
!8745 = !DILocation(line: 3682, column: 2, scope: !8698)
!8746 = !DILocation(line: 3683, column: 24, scope: !8698)
!8747 = !DILocation(line: 3683, column: 46, scope: !8698)
!8748 = !DILocation(line: 3683, column: 50, scope: !8698)
!8749 = !DILocation(line: 3683, column: 2, scope: !8698)
!8750 = !DILocation(line: 3685, column: 2, scope: !8698)
!8751 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_blend", scope: !3, file: !3, line: 3760, type: !3603, scopeLine: 3761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8752 = !DILocalVariable(name: "ot", arg: 1, scope: !8751, file: !3, line: 3760, type: !3605)
!8753 = !DILocation(line: 3760, column: 51, scope: !8751)
!8754 = !DILocalVariable(name: "prop", scope: !8751, file: !3, line: 3762, type: !3792)
!8755 = !DILocation(line: 3762, column: 15, scope: !8751)
!8756 = !DILocation(line: 3765, column: 2, scope: !8751)
!8757 = !DILocation(line: 3765, column: 6, scope: !8751)
!8758 = !DILocation(line: 3765, column: 11, scope: !8751)
!8759 = !DILocation(line: 3766, column: 2, scope: !8751)
!8760 = !DILocation(line: 3766, column: 6, scope: !8751)
!8761 = !DILocation(line: 3766, column: 13, scope: !8751)
!8762 = !DILocation(line: 3767, column: 2, scope: !8751)
!8763 = !DILocation(line: 3767, column: 6, scope: !8751)
!8764 = !DILocation(line: 3767, column: 18, scope: !8751)
!8765 = !DILocation(line: 3770, column: 2, scope: !8751)
!8766 = !DILocation(line: 3770, column: 6, scope: !8751)
!8767 = !DILocation(line: 3770, column: 11, scope: !8751)
!8768 = !DILocation(line: 3771, column: 2, scope: !8751)
!8769 = !DILocation(line: 3771, column: 6, scope: !8751)
!8770 = !DILocation(line: 3771, column: 11, scope: !8751)
!8771 = !DILocation(line: 3774, column: 2, scope: !8751)
!8772 = !DILocation(line: 3774, column: 6, scope: !8751)
!8773 = !DILocation(line: 3774, column: 11, scope: !8751)
!8774 = !DILocation(line: 3776, column: 38, scope: !8751)
!8775 = !DILocation(line: 3776, column: 2, scope: !8751)
!8776 = !DILocation(line: 3777, column: 26, scope: !8751)
!8777 = !DILocation(line: 3777, column: 30, scope: !8751)
!8778 = !DILocation(line: 3777, column: 9, scope: !8751)
!8779 = !DILocation(line: 3777, column: 7, scope: !8751)
!8780 = !DILocation(line: 3778, column: 27, scope: !8751)
!8781 = !DILocation(line: 3778, column: 2, scope: !8751)
!8782 = !DILocation(line: 3779, column: 25, scope: !8751)
!8783 = !DILocation(line: 3779, column: 2, scope: !8751)
!8784 = !DILocation(line: 3780, column: 33, scope: !8751)
!8785 = !DILocation(line: 3780, column: 2, scope: !8751)
!8786 = !DILocation(line: 3781, column: 1, scope: !8751)
!8787 = distinct !DISubprogram(name: "vertex_group_blend_poll", scope: !3, file: !3, line: 3730, type: !7698, scopeLine: 3731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8788 = !DILocalVariable(name: "C", arg: 1, scope: !8787, file: !3, line: 3730, type: !7700)
!8789 = !DILocation(line: 3730, column: 46, scope: !8787)
!8790 = !DILocalVariable(name: "ob", scope: !8787, file: !3, line: 3732, type: !3872)
!8791 = !DILocation(line: 3732, column: 10, scope: !8787)
!8792 = !DILocation(line: 3732, column: 33, scope: !8787)
!8793 = !DILocation(line: 3732, column: 15, scope: !8787)
!8794 = !DILocalVariable(name: "data", scope: !8787, file: !3, line: 3733, type: !1247)
!8795 = !DILocation(line: 3733, column: 6, scope: !8787)
!8796 = !DILocation(line: 3733, column: 14, scope: !8787)
!8797 = !DILocation(line: 3733, column: 13, scope: !8787)
!8798 = !DILocation(line: 3733, column: 20, scope: !8787)
!8799 = !DILocation(line: 3733, column: 24, scope: !8787)
!8800 = !DILocation(line: 3735, column: 8, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 3735, column: 6)
!8802 = !DILocation(line: 3735, column: 11, scope: !8801)
!8803 = !DILocation(line: 3735, column: 15, scope: !8801)
!8804 = !DILocation(line: 3735, column: 19, scope: !8801)
!8805 = !DILocation(line: 3735, column: 22, scope: !8801)
!8806 = !DILocation(line: 3735, column: 26, scope: !8801)
!8807 = !DILocation(line: 3735, column: 29, scope: !8801)
!8808 = !DILocation(line: 3735, column: 34, scope: !8801)
!8809 = !DILocation(line: 3735, column: 38, scope: !8801)
!8810 = !DILocation(line: 3735, column: 44, scope: !8801)
!8811 = !DILocation(line: 3735, column: 6, scope: !8787)
!8812 = !DILocation(line: 3736, column: 3, scope: !8801)
!8813 = !DILocation(line: 3738, column: 6, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 3738, column: 6)
!8815 = !DILocation(line: 3738, column: 10, scope: !8814)
!8816 = !DILocation(line: 3738, column: 15, scope: !8814)
!8817 = !DILocation(line: 3738, column: 6, scope: !8787)
!8818 = !DILocation(line: 3739, column: 3, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 3738, column: 27)
!8820 = !DILocation(line: 3742, column: 39, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 3742, column: 6)
!8822 = !DILocation(line: 3742, column: 6, scope: !8821)
!8823 = !DILocation(line: 3742, column: 6, scope: !8787)
!8824 = !DILocation(line: 3743, column: 3, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 3742, column: 44)
!8826 = !DILocation(line: 3745, column: 11, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 3745, column: 11)
!8828 = !DILocation(line: 3745, column: 15, scope: !8827)
!8829 = !DILocation(line: 3745, column: 20, scope: !8827)
!8830 = !DILocation(line: 3745, column: 11, scope: !8821)
!8831 = !DILocation(line: 3746, column: 7, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 3746, column: 7)
!8833 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 3745, column: 44)
!8834 = !DILocation(line: 3746, column: 46, scope: !8832)
!8835 = !DILocation(line: 3746, column: 7, scope: !8833)
!8836 = !DILocation(line: 3747, column: 4, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3746, column: 68)
!8838 = !DILocation(line: 3750, column: 33, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 3749, column: 8)
!8840 = !DILocation(line: 3750, column: 4, scope: !8839)
!8841 = !DILocation(line: 3751, column: 4, scope: !8839)
!8842 = !DILocation(line: 3756, column: 3, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 3755, column: 7)
!8844 = !DILocation(line: 3758, column: 1, scope: !8787)
!8845 = distinct !DISubprogram(name: "vertex_group_blend_exec", scope: !3, file: !3, line: 3710, type: !7729, scopeLine: 3711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8846 = !DILocalVariable(name: "C", arg: 1, scope: !8845, file: !3, line: 3710, type: !7700)
!8847 = !DILocation(line: 3710, column: 46, scope: !8845)
!8848 = !DILocalVariable(name: "op", arg: 2, scope: !8845, file: !3, line: 3710, type: !7731)
!8849 = !DILocation(line: 3710, column: 61, scope: !8845)
!8850 = !DILocalVariable(name: "ob", scope: !8845, file: !3, line: 3712, type: !3872)
!8851 = !DILocation(line: 3712, column: 10, scope: !8845)
!8852 = !DILocation(line: 3712, column: 33, scope: !8845)
!8853 = !DILocation(line: 3712, column: 15, scope: !8845)
!8854 = !DILocalVariable(name: "fac", scope: !8845, file: !3, line: 3713, type: !1320)
!8855 = !DILocation(line: 3713, column: 8, scope: !8845)
!8856 = !DILocation(line: 3713, column: 28, scope: !8845)
!8857 = !DILocation(line: 3713, column: 32, scope: !8845)
!8858 = !DILocation(line: 3713, column: 14, scope: !8845)
!8859 = !DILocalVariable(name: "subset_type", scope: !8845, file: !3, line: 3714, type: !6851)
!8860 = !DILocation(line: 3714, column: 16, scope: !8845)
!8861 = !DILocation(line: 3714, column: 44, scope: !8845)
!8862 = !DILocation(line: 3714, column: 48, scope: !8845)
!8863 = !DILocation(line: 3714, column: 31, scope: !8845)
!8864 = !DILocalVariable(name: "subset_count", scope: !8845, file: !3, line: 3716, type: !354)
!8865 = !DILocation(line: 3716, column: 6, scope: !8845)
!8866 = !DILocalVariable(name: "vgroup_tot", scope: !8845, file: !3, line: 3716, type: !354)
!8867 = !DILocation(line: 3716, column: 20, scope: !8845)
!8868 = !DILocalVariable(name: "vgroup_validmap", scope: !8845, file: !3, line: 3718, type: !5078)
!8869 = !DILocation(line: 3718, column: 14, scope: !8845)
!8870 = !DILocation(line: 3718, column: 66, scope: !8845)
!8871 = !DILocation(line: 3718, column: 70, scope: !8845)
!8872 = !DILocation(line: 3718, column: 32, scope: !8845)
!8873 = !DILocation(line: 3719, column: 22, scope: !8845)
!8874 = !DILocation(line: 3719, column: 26, scope: !8845)
!8875 = !DILocation(line: 3719, column: 43, scope: !8845)
!8876 = !DILocation(line: 3719, column: 55, scope: !8845)
!8877 = !DILocation(line: 3719, column: 69, scope: !8845)
!8878 = !DILocation(line: 3719, column: 2, scope: !8845)
!8879 = !DILocation(line: 3720, column: 2, scope: !8845)
!8880 = !DILocation(line: 3720, column: 20, scope: !8845)
!8881 = !DILocation(line: 3722, column: 21, scope: !8845)
!8882 = !DILocation(line: 3722, column: 25, scope: !8845)
!8883 = !DILocation(line: 3722, column: 2, scope: !8845)
!8884 = !DILocation(line: 3723, column: 24, scope: !8845)
!8885 = !DILocation(line: 3723, column: 48, scope: !8845)
!8886 = !DILocation(line: 3723, column: 2, scope: !8845)
!8887 = !DILocation(line: 3724, column: 24, scope: !8845)
!8888 = !DILocation(line: 3724, column: 46, scope: !8845)
!8889 = !DILocation(line: 3724, column: 50, scope: !8845)
!8890 = !DILocation(line: 3724, column: 2, scope: !8845)
!8891 = !DILocation(line: 3726, column: 2, scope: !8845)
!8892 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_clean", scope: !3, file: !3, line: 3805, type: !3603, scopeLine: 3806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8893 = !DILocalVariable(name: "ot", arg: 1, scope: !8892, file: !3, line: 3805, type: !3605)
!8894 = !DILocation(line: 3805, column: 51, scope: !8892)
!8895 = !DILocation(line: 3808, column: 2, scope: !8892)
!8896 = !DILocation(line: 3808, column: 6, scope: !8892)
!8897 = !DILocation(line: 3808, column: 11, scope: !8892)
!8898 = !DILocation(line: 3809, column: 2, scope: !8892)
!8899 = !DILocation(line: 3809, column: 6, scope: !8892)
!8900 = !DILocation(line: 3809, column: 13, scope: !8892)
!8901 = !DILocation(line: 3810, column: 2, scope: !8892)
!8902 = !DILocation(line: 3810, column: 6, scope: !8892)
!8903 = !DILocation(line: 3810, column: 18, scope: !8892)
!8904 = !DILocation(line: 3813, column: 2, scope: !8892)
!8905 = !DILocation(line: 3813, column: 6, scope: !8892)
!8906 = !DILocation(line: 3813, column: 11, scope: !8892)
!8907 = !DILocation(line: 3814, column: 2, scope: !8892)
!8908 = !DILocation(line: 3814, column: 6, scope: !8892)
!8909 = !DILocation(line: 3814, column: 11, scope: !8892)
!8910 = !DILocation(line: 3817, column: 2, scope: !8892)
!8911 = !DILocation(line: 3817, column: 6, scope: !8892)
!8912 = !DILocation(line: 3817, column: 11, scope: !8892)
!8913 = !DILocation(line: 3819, column: 38, scope: !8892)
!8914 = !DILocation(line: 3819, column: 2, scope: !8892)
!8915 = !DILocation(line: 3820, column: 16, scope: !8892)
!8916 = !DILocation(line: 3820, column: 20, scope: !8892)
!8917 = !DILocation(line: 3820, column: 2, scope: !8892)
!8918 = !DILocation(line: 3822, column: 18, scope: !8892)
!8919 = !DILocation(line: 3822, column: 22, scope: !8892)
!8920 = !DILocation(line: 3822, column: 2, scope: !8892)
!8921 = !DILocation(line: 3824, column: 1, scope: !8892)
!8922 = distinct !DISubprogram(name: "vertex_group_clean_exec", scope: !3, file: !3, line: 3784, type: !7729, scopeLine: 3785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8923 = !DILocalVariable(name: "C", arg: 1, scope: !8922, file: !3, line: 3784, type: !7700)
!8924 = !DILocation(line: 3784, column: 46, scope: !8922)
!8925 = !DILocalVariable(name: "op", arg: 2, scope: !8922, file: !3, line: 3784, type: !7731)
!8926 = !DILocation(line: 3784, column: 61, scope: !8922)
!8927 = !DILocalVariable(name: "ob", scope: !8922, file: !3, line: 3786, type: !3872)
!8928 = !DILocation(line: 3786, column: 10, scope: !8922)
!8929 = !DILocation(line: 3786, column: 33, scope: !8922)
!8930 = !DILocation(line: 3786, column: 15, scope: !8922)
!8931 = !DILocalVariable(name: "limit", scope: !8922, file: !3, line: 3788, type: !1320)
!8932 = !DILocation(line: 3788, column: 8, scope: !8922)
!8933 = !DILocation(line: 3788, column: 30, scope: !8922)
!8934 = !DILocation(line: 3788, column: 34, scope: !8922)
!8935 = !DILocation(line: 3788, column: 16, scope: !8922)
!8936 = !DILocalVariable(name: "keep_single", scope: !8922, file: !3, line: 3789, type: !2436)
!8937 = !DILocation(line: 3789, column: 7, scope: !8922)
!8938 = !DILocation(line: 3789, column: 37, scope: !8922)
!8939 = !DILocation(line: 3789, column: 41, scope: !8922)
!8940 = !DILocation(line: 3789, column: 21, scope: !8922)
!8941 = !DILocalVariable(name: "subset_type", scope: !8922, file: !3, line: 3790, type: !6851)
!8942 = !DILocation(line: 3790, column: 16, scope: !8922)
!8943 = !DILocation(line: 3790, column: 44, scope: !8922)
!8944 = !DILocation(line: 3790, column: 48, scope: !8922)
!8945 = !DILocation(line: 3790, column: 31, scope: !8922)
!8946 = !DILocalVariable(name: "subset_count", scope: !8922, file: !3, line: 3792, type: !354)
!8947 = !DILocation(line: 3792, column: 6, scope: !8922)
!8948 = !DILocalVariable(name: "vgroup_tot", scope: !8922, file: !3, line: 3792, type: !354)
!8949 = !DILocation(line: 3792, column: 20, scope: !8922)
!8950 = !DILocalVariable(name: "vgroup_validmap", scope: !8922, file: !3, line: 3794, type: !5078)
!8951 = !DILocation(line: 3794, column: 14, scope: !8922)
!8952 = !DILocation(line: 3794, column: 66, scope: !8922)
!8953 = !DILocation(line: 3794, column: 70, scope: !8922)
!8954 = !DILocation(line: 3794, column: 32, scope: !8922)
!8955 = !DILocation(line: 3795, column: 22, scope: !8922)
!8956 = !DILocation(line: 3795, column: 26, scope: !8922)
!8957 = !DILocation(line: 3795, column: 43, scope: !8922)
!8958 = !DILocation(line: 3795, column: 55, scope: !8922)
!8959 = !DILocation(line: 3795, column: 69, scope: !8922)
!8960 = !DILocation(line: 3795, column: 76, scope: !8922)
!8961 = !DILocation(line: 3795, column: 2, scope: !8922)
!8962 = !DILocation(line: 3796, column: 2, scope: !8922)
!8963 = !DILocation(line: 3796, column: 20, scope: !8922)
!8964 = !DILocation(line: 3798, column: 21, scope: !8922)
!8965 = !DILocation(line: 3798, column: 25, scope: !8922)
!8966 = !DILocation(line: 3798, column: 2, scope: !8922)
!8967 = !DILocation(line: 3799, column: 24, scope: !8922)
!8968 = !DILocation(line: 3799, column: 48, scope: !8922)
!8969 = !DILocation(line: 3799, column: 2, scope: !8922)
!8970 = !DILocation(line: 3800, column: 24, scope: !8922)
!8971 = !DILocation(line: 3800, column: 46, scope: !8922)
!8972 = !DILocation(line: 3800, column: 50, scope: !8922)
!8973 = !DILocation(line: 3800, column: 2, scope: !8922)
!8974 = !DILocation(line: 3802, column: 2, scope: !8922)
!8975 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_quantize", scope: !3, file: !3, line: 3846, type: !3603, scopeLine: 3847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!8976 = !DILocalVariable(name: "ot", arg: 1, scope: !8975, file: !3, line: 3846, type: !3605)
!8977 = !DILocation(line: 3846, column: 54, scope: !8975)
!8978 = !DILocation(line: 3849, column: 2, scope: !8975)
!8979 = !DILocation(line: 3849, column: 6, scope: !8975)
!8980 = !DILocation(line: 3849, column: 11, scope: !8975)
!8981 = !DILocation(line: 3850, column: 2, scope: !8975)
!8982 = !DILocation(line: 3850, column: 6, scope: !8975)
!8983 = !DILocation(line: 3850, column: 13, scope: !8975)
!8984 = !DILocation(line: 3851, column: 2, scope: !8975)
!8985 = !DILocation(line: 3851, column: 6, scope: !8975)
!8986 = !DILocation(line: 3851, column: 18, scope: !8975)
!8987 = !DILocation(line: 3854, column: 2, scope: !8975)
!8988 = !DILocation(line: 3854, column: 6, scope: !8975)
!8989 = !DILocation(line: 3854, column: 11, scope: !8975)
!8990 = !DILocation(line: 3855, column: 2, scope: !8975)
!8991 = !DILocation(line: 3855, column: 6, scope: !8975)
!8992 = !DILocation(line: 3855, column: 11, scope: !8975)
!8993 = !DILocation(line: 3858, column: 2, scope: !8975)
!8994 = !DILocation(line: 3858, column: 6, scope: !8975)
!8995 = !DILocation(line: 3858, column: 11, scope: !8975)
!8996 = !DILocation(line: 3860, column: 38, scope: !8975)
!8997 = !DILocation(line: 3860, column: 2, scope: !8975)
!8998 = !DILocation(line: 3861, column: 14, scope: !8975)
!8999 = !DILocation(line: 3861, column: 18, scope: !8975)
!9000 = !DILocation(line: 3861, column: 2, scope: !8975)
!9001 = !DILocation(line: 3862, column: 1, scope: !8975)
!9002 = distinct !DISubprogram(name: "vertex_group_quantize_exec", scope: !3, file: !3, line: 3826, type: !7729, scopeLine: 3827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9003 = !DILocalVariable(name: "C", arg: 1, scope: !9002, file: !3, line: 3826, type: !7700)
!9004 = !DILocation(line: 3826, column: 49, scope: !9002)
!9005 = !DILocalVariable(name: "op", arg: 2, scope: !9002, file: !3, line: 3826, type: !7731)
!9006 = !DILocation(line: 3826, column: 64, scope: !9002)
!9007 = !DILocalVariable(name: "ob", scope: !9002, file: !3, line: 3828, type: !3872)
!9008 = !DILocation(line: 3828, column: 10, scope: !9002)
!9009 = !DILocation(line: 3828, column: 33, scope: !9002)
!9010 = !DILocation(line: 3828, column: 15, scope: !9002)
!9011 = !DILocalVariable(name: "steps", scope: !9002, file: !3, line: 3830, type: !4075)
!9012 = !DILocation(line: 3830, column: 12, scope: !9002)
!9013 = !DILocation(line: 3830, column: 32, scope: !9002)
!9014 = !DILocation(line: 3830, column: 36, scope: !9002)
!9015 = !DILocation(line: 3830, column: 20, scope: !9002)
!9016 = !DILocalVariable(name: "subset_type", scope: !9002, file: !3, line: 3831, type: !6851)
!9017 = !DILocation(line: 3831, column: 16, scope: !9002)
!9018 = !DILocation(line: 3831, column: 44, scope: !9002)
!9019 = !DILocation(line: 3831, column: 48, scope: !9002)
!9020 = !DILocation(line: 3831, column: 31, scope: !9002)
!9021 = !DILocalVariable(name: "subset_count", scope: !9002, file: !3, line: 3833, type: !354)
!9022 = !DILocation(line: 3833, column: 6, scope: !9002)
!9023 = !DILocalVariable(name: "vgroup_tot", scope: !9002, file: !3, line: 3833, type: !354)
!9024 = !DILocation(line: 3833, column: 20, scope: !9002)
!9025 = !DILocalVariable(name: "vgroup_validmap", scope: !9002, file: !3, line: 3835, type: !5078)
!9026 = !DILocation(line: 3835, column: 14, scope: !9002)
!9027 = !DILocation(line: 3835, column: 66, scope: !9002)
!9028 = !DILocation(line: 3835, column: 70, scope: !9002)
!9029 = !DILocation(line: 3835, column: 32, scope: !9002)
!9030 = !DILocation(line: 3836, column: 25, scope: !9002)
!9031 = !DILocation(line: 3836, column: 29, scope: !9002)
!9032 = !DILocation(line: 3836, column: 46, scope: !9002)
!9033 = !DILocation(line: 3836, column: 58, scope: !9002)
!9034 = !DILocation(line: 3836, column: 72, scope: !9002)
!9035 = !DILocation(line: 3836, column: 2, scope: !9002)
!9036 = !DILocation(line: 3837, column: 2, scope: !9002)
!9037 = !DILocation(line: 3837, column: 20, scope: !9002)
!9038 = !DILocation(line: 3839, column: 21, scope: !9002)
!9039 = !DILocation(line: 3839, column: 25, scope: !9002)
!9040 = !DILocation(line: 3839, column: 2, scope: !9002)
!9041 = !DILocation(line: 3840, column: 24, scope: !9002)
!9042 = !DILocation(line: 3840, column: 48, scope: !9002)
!9043 = !DILocation(line: 3840, column: 2, scope: !9002)
!9044 = !DILocation(line: 3841, column: 24, scope: !9002)
!9045 = !DILocation(line: 3841, column: 46, scope: !9002)
!9046 = !DILocation(line: 3841, column: 50, scope: !9002)
!9047 = !DILocation(line: 3841, column: 2, scope: !9002)
!9048 = !DILocation(line: 3843, column: 2, scope: !9002)
!9049 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_limit_total", scope: !3, file: !3, line: 3893, type: !3603, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9050 = !DILocalVariable(name: "ot", arg: 1, scope: !9049, file: !3, line: 3893, type: !3605)
!9051 = !DILocation(line: 3893, column: 57, scope: !9049)
!9052 = !DILocation(line: 3896, column: 2, scope: !9049)
!9053 = !DILocation(line: 3896, column: 6, scope: !9049)
!9054 = !DILocation(line: 3896, column: 11, scope: !9049)
!9055 = !DILocation(line: 3897, column: 2, scope: !9049)
!9056 = !DILocation(line: 3897, column: 6, scope: !9049)
!9057 = !DILocation(line: 3897, column: 13, scope: !9049)
!9058 = !DILocation(line: 3898, column: 2, scope: !9049)
!9059 = !DILocation(line: 3898, column: 6, scope: !9049)
!9060 = !DILocation(line: 3898, column: 18, scope: !9049)
!9061 = !DILocation(line: 3901, column: 2, scope: !9049)
!9062 = !DILocation(line: 3901, column: 6, scope: !9049)
!9063 = !DILocation(line: 3901, column: 11, scope: !9049)
!9064 = !DILocation(line: 3902, column: 2, scope: !9049)
!9065 = !DILocation(line: 3902, column: 6, scope: !9049)
!9066 = !DILocation(line: 3902, column: 11, scope: !9049)
!9067 = !DILocation(line: 3905, column: 2, scope: !9049)
!9068 = !DILocation(line: 3905, column: 6, scope: !9049)
!9069 = !DILocation(line: 3905, column: 11, scope: !9049)
!9070 = !DILocation(line: 3907, column: 38, scope: !9049)
!9071 = !DILocation(line: 3907, column: 2, scope: !9049)
!9072 = !DILocation(line: 3908, column: 14, scope: !9049)
!9073 = !DILocation(line: 3908, column: 18, scope: !9049)
!9074 = !DILocation(line: 3908, column: 2, scope: !9049)
!9075 = !DILocation(line: 3909, column: 1, scope: !9049)
!9076 = distinct !DISubprogram(name: "vertex_group_limit_total_exec", scope: !3, file: !3, line: 3864, type: !7729, scopeLine: 3865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9077 = !DILocalVariable(name: "C", arg: 1, scope: !9076, file: !3, line: 3864, type: !7700)
!9078 = !DILocation(line: 3864, column: 52, scope: !9076)
!9079 = !DILocalVariable(name: "op", arg: 2, scope: !9076, file: !3, line: 3864, type: !7731)
!9080 = !DILocation(line: 3864, column: 67, scope: !9076)
!9081 = !DILocalVariable(name: "ob", scope: !9076, file: !3, line: 3866, type: !3872)
!9082 = !DILocation(line: 3866, column: 10, scope: !9076)
!9083 = !DILocation(line: 3866, column: 33, scope: !9076)
!9084 = !DILocation(line: 3866, column: 15, scope: !9076)
!9085 = !DILocalVariable(name: "limit", scope: !9076, file: !3, line: 3868, type: !4075)
!9086 = !DILocation(line: 3868, column: 12, scope: !9076)
!9087 = !DILocation(line: 3868, column: 32, scope: !9076)
!9088 = !DILocation(line: 3868, column: 36, scope: !9076)
!9089 = !DILocation(line: 3868, column: 20, scope: !9076)
!9090 = !DILocalVariable(name: "subset_type", scope: !9076, file: !3, line: 3869, type: !6851)
!9091 = !DILocation(line: 3869, column: 16, scope: !9076)
!9092 = !DILocation(line: 3869, column: 44, scope: !9076)
!9093 = !DILocation(line: 3869, column: 48, scope: !9076)
!9094 = !DILocation(line: 3869, column: 31, scope: !9076)
!9095 = !DILocalVariable(name: "subset_count", scope: !9076, file: !3, line: 3871, type: !354)
!9096 = !DILocation(line: 3871, column: 6, scope: !9076)
!9097 = !DILocalVariable(name: "vgroup_tot", scope: !9076, file: !3, line: 3871, type: !354)
!9098 = !DILocation(line: 3871, column: 20, scope: !9076)
!9099 = !DILocalVariable(name: "vgroup_validmap", scope: !9076, file: !3, line: 3873, type: !5078)
!9100 = !DILocation(line: 3873, column: 14, scope: !9076)
!9101 = !DILocation(line: 3873, column: 66, scope: !9076)
!9102 = !DILocation(line: 3873, column: 70, scope: !9076)
!9103 = !DILocation(line: 3873, column: 32, scope: !9076)
!9104 = !DILocalVariable(name: "remove_tot", scope: !9076, file: !3, line: 3874, type: !354)
!9105 = !DILocation(line: 3874, column: 6, scope: !9076)
!9106 = !DILocation(line: 3874, column: 45, scope: !9076)
!9107 = !DILocation(line: 3874, column: 49, scope: !9076)
!9108 = !DILocation(line: 3874, column: 66, scope: !9076)
!9109 = !DILocation(line: 3874, column: 78, scope: !9076)
!9110 = !DILocation(line: 3874, column: 92, scope: !9076)
!9111 = !DILocation(line: 3874, column: 19, scope: !9076)
!9112 = !DILocation(line: 3875, column: 2, scope: !9076)
!9113 = !DILocation(line: 3875, column: 20, scope: !9076)
!9114 = !DILocation(line: 3877, column: 14, scope: !9076)
!9115 = !DILocation(line: 3877, column: 18, scope: !9076)
!9116 = !DILocation(line: 3877, column: 27, scope: !9076)
!9117 = !DILocation(line: 3877, column: 93, scope: !9076)
!9118 = !DILocation(line: 3877, column: 2, scope: !9076)
!9119 = !DILocation(line: 3879, column: 6, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 3879, column: 6)
!9121 = !DILocation(line: 3879, column: 6, scope: !9076)
!9122 = !DILocation(line: 3880, column: 22, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 3879, column: 18)
!9124 = !DILocation(line: 3880, column: 26, scope: !9123)
!9125 = !DILocation(line: 3880, column: 3, scope: !9123)
!9126 = !DILocation(line: 3881, column: 25, scope: !9123)
!9127 = !DILocation(line: 3881, column: 49, scope: !9123)
!9128 = !DILocation(line: 3881, column: 3, scope: !9123)
!9129 = !DILocation(line: 3882, column: 25, scope: !9123)
!9130 = !DILocation(line: 3882, column: 47, scope: !9123)
!9131 = !DILocation(line: 3882, column: 51, scope: !9123)
!9132 = !DILocation(line: 3882, column: 3, scope: !9123)
!9133 = !DILocation(line: 3884, column: 3, scope: !9123)
!9134 = !DILocation(line: 3889, column: 3, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 3886, column: 7)
!9136 = !DILocation(line: 3891, column: 1, scope: !9076)
!9137 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_mirror", scope: !3, file: !3, line: 3932, type: !3603, scopeLine: 3933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9138 = !DILocalVariable(name: "ot", arg: 1, scope: !9137, file: !3, line: 3932, type: !3605)
!9139 = !DILocation(line: 3932, column: 52, scope: !9137)
!9140 = !DILocation(line: 3935, column: 2, scope: !9137)
!9141 = !DILocation(line: 3935, column: 6, scope: !9137)
!9142 = !DILocation(line: 3935, column: 11, scope: !9137)
!9143 = !DILocation(line: 3936, column: 2, scope: !9137)
!9144 = !DILocation(line: 3936, column: 6, scope: !9137)
!9145 = !DILocation(line: 3936, column: 13, scope: !9137)
!9146 = !DILocation(line: 3937, column: 2, scope: !9137)
!9147 = !DILocation(line: 3937, column: 6, scope: !9137)
!9148 = !DILocation(line: 3937, column: 18, scope: !9137)
!9149 = !DILocation(line: 3941, column: 2, scope: !9137)
!9150 = !DILocation(line: 3941, column: 6, scope: !9137)
!9151 = !DILocation(line: 3941, column: 11, scope: !9137)
!9152 = !DILocation(line: 3942, column: 2, scope: !9137)
!9153 = !DILocation(line: 3942, column: 6, scope: !9137)
!9154 = !DILocation(line: 3942, column: 11, scope: !9137)
!9155 = !DILocation(line: 3945, column: 2, scope: !9137)
!9156 = !DILocation(line: 3945, column: 6, scope: !9137)
!9157 = !DILocation(line: 3945, column: 11, scope: !9137)
!9158 = !DILocation(line: 3948, column: 18, scope: !9137)
!9159 = !DILocation(line: 3948, column: 22, scope: !9137)
!9160 = !DILocation(line: 3948, column: 2, scope: !9137)
!9161 = !DILocation(line: 3949, column: 18, scope: !9137)
!9162 = !DILocation(line: 3949, column: 22, scope: !9137)
!9163 = !DILocation(line: 3949, column: 2, scope: !9137)
!9164 = !DILocation(line: 3950, column: 18, scope: !9137)
!9165 = !DILocation(line: 3950, column: 22, scope: !9137)
!9166 = !DILocation(line: 3950, column: 2, scope: !9137)
!9167 = !DILocation(line: 3951, column: 18, scope: !9137)
!9168 = !DILocation(line: 3951, column: 22, scope: !9137)
!9169 = !DILocation(line: 3951, column: 2, scope: !9137)
!9170 = !DILocation(line: 3953, column: 1, scope: !9137)
!9171 = distinct !DISubprogram(name: "vertex_group_mirror_exec", scope: !3, file: !3, line: 3911, type: !7729, scopeLine: 3912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9172 = !DILocalVariable(name: "C", arg: 1, scope: !9171, file: !3, line: 3911, type: !7700)
!9173 = !DILocation(line: 3911, column: 47, scope: !9171)
!9174 = !DILocalVariable(name: "op", arg: 2, scope: !9171, file: !3, line: 3911, type: !7731)
!9175 = !DILocation(line: 3911, column: 62, scope: !9171)
!9176 = !DILocalVariable(name: "ob", scope: !9171, file: !3, line: 3913, type: !3872)
!9177 = !DILocation(line: 3913, column: 10, scope: !9171)
!9178 = !DILocation(line: 3913, column: 33, scope: !9171)
!9179 = !DILocation(line: 3913, column: 15, scope: !9171)
!9180 = !DILocalVariable(name: "totmirr", scope: !9171, file: !3, line: 3914, type: !354)
!9181 = !DILocation(line: 3914, column: 6, scope: !9171)
!9182 = !DILocalVariable(name: "totfail", scope: !9171, file: !3, line: 3914, type: !354)
!9183 = !DILocation(line: 3914, column: 19, scope: !9171)
!9184 = !DILocation(line: 3916, column: 19, scope: !9171)
!9185 = !DILocation(line: 3917, column: 35, scope: !9171)
!9186 = !DILocation(line: 3917, column: 39, scope: !9171)
!9187 = !DILocation(line: 3917, column: 19, scope: !9171)
!9188 = !DILocation(line: 3918, column: 35, scope: !9171)
!9189 = !DILocation(line: 3918, column: 39, scope: !9171)
!9190 = !DILocation(line: 3918, column: 19, scope: !9171)
!9191 = !DILocation(line: 3919, column: 35, scope: !9171)
!9192 = !DILocation(line: 3919, column: 39, scope: !9171)
!9193 = !DILocation(line: 3919, column: 19, scope: !9171)
!9194 = !DILocation(line: 3920, column: 35, scope: !9171)
!9195 = !DILocation(line: 3920, column: 39, scope: !9171)
!9196 = !DILocation(line: 3920, column: 19, scope: !9171)
!9197 = !DILocation(line: 3916, column: 2, scope: !9171)
!9198 = !DILocation(line: 3923, column: 24, scope: !9171)
!9199 = !DILocation(line: 3923, column: 28, scope: !9171)
!9200 = !DILocation(line: 3923, column: 37, scope: !9171)
!9201 = !DILocation(line: 3923, column: 2, scope: !9171)
!9202 = !DILocation(line: 3925, column: 21, scope: !9171)
!9203 = !DILocation(line: 3925, column: 25, scope: !9171)
!9204 = !DILocation(line: 3925, column: 2, scope: !9171)
!9205 = !DILocation(line: 3926, column: 24, scope: !9171)
!9206 = !DILocation(line: 3926, column: 48, scope: !9171)
!9207 = !DILocation(line: 3926, column: 2, scope: !9171)
!9208 = !DILocation(line: 3927, column: 24, scope: !9171)
!9209 = !DILocation(line: 3927, column: 46, scope: !9171)
!9210 = !DILocation(line: 3927, column: 50, scope: !9171)
!9211 = !DILocation(line: 3927, column: 2, scope: !9171)
!9212 = !DILocation(line: 3929, column: 2, scope: !9171)
!9213 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_copy_to_linked", scope: !3, file: !3, line: 3981, type: !3603, scopeLine: 3982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9214 = !DILocalVariable(name: "ot", arg: 1, scope: !9213, file: !3, line: 3981, type: !3605)
!9215 = !DILocation(line: 3981, column: 60, scope: !9213)
!9216 = !DILocation(line: 3984, column: 2, scope: !9213)
!9217 = !DILocation(line: 3984, column: 6, scope: !9213)
!9218 = !DILocation(line: 3984, column: 11, scope: !9213)
!9219 = !DILocation(line: 3985, column: 2, scope: !9213)
!9220 = !DILocation(line: 3985, column: 6, scope: !9213)
!9221 = !DILocation(line: 3985, column: 13, scope: !9213)
!9222 = !DILocation(line: 3986, column: 2, scope: !9213)
!9223 = !DILocation(line: 3986, column: 6, scope: !9213)
!9224 = !DILocation(line: 3986, column: 18, scope: !9213)
!9225 = !DILocation(line: 3989, column: 2, scope: !9213)
!9226 = !DILocation(line: 3989, column: 6, scope: !9213)
!9227 = !DILocation(line: 3989, column: 11, scope: !9213)
!9228 = !DILocation(line: 3990, column: 2, scope: !9213)
!9229 = !DILocation(line: 3990, column: 6, scope: !9213)
!9230 = !DILocation(line: 3990, column: 11, scope: !9213)
!9231 = !DILocation(line: 3993, column: 2, scope: !9213)
!9232 = !DILocation(line: 3993, column: 6, scope: !9213)
!9233 = !DILocation(line: 3993, column: 11, scope: !9213)
!9234 = !DILocation(line: 3994, column: 1, scope: !9213)
!9235 = distinct !DISubprogram(name: "vertex_group_copy_to_linked_exec", scope: !3, file: !3, line: 3955, type: !7729, scopeLine: 3956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9236 = !DILocalVariable(name: "C", arg: 1, scope: !9235, file: !3, line: 3955, type: !7700)
!9237 = !DILocation(line: 3955, column: 55, scope: !9235)
!9238 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !9235, file: !3, line: 3955, type: !7731)
!9239 = !DILocation(line: 3955, column: 70, scope: !9235)
!9240 = !DILocalVariable(name: "scene", scope: !9235, file: !3, line: 3957, type: !8551)
!9241 = !DILocation(line: 3957, column: 9, scope: !9235)
!9242 = !DILocation(line: 3957, column: 32, scope: !9235)
!9243 = !DILocation(line: 3957, column: 17, scope: !9235)
!9244 = !DILocalVariable(name: "ob", scope: !9235, file: !3, line: 3958, type: !3872)
!9245 = !DILocation(line: 3958, column: 10, scope: !9235)
!9246 = !DILocation(line: 3958, column: 33, scope: !9235)
!9247 = !DILocation(line: 3958, column: 15, scope: !9235)
!9248 = !DILocalVariable(name: "base", scope: !9235, file: !3, line: 3959, type: !9249)
!9249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9250, size: 64)
!9250 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !173, line: 75, baseType: !2384)
!9251 = !DILocation(line: 3959, column: 8, scope: !9235)
!9252 = !DILocalVariable(name: "retval", scope: !9235, file: !3, line: 3960, type: !354)
!9253 = !DILocation(line: 3960, column: 6, scope: !9235)
!9254 = !DILocation(line: 3962, column: 14, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 3962, column: 2)
!9256 = !DILocation(line: 3962, column: 21, scope: !9255)
!9257 = !DILocation(line: 3962, column: 26, scope: !9255)
!9258 = !DILocation(line: 3962, column: 12, scope: !9255)
!9259 = !DILocation(line: 3962, column: 7, scope: !9255)
!9260 = !DILocation(line: 3962, column: 33, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 3962, column: 2)
!9262 = !DILocation(line: 3962, column: 2, scope: !9255)
!9263 = !DILocation(line: 3963, column: 7, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 3963, column: 7)
!9265 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 3962, column: 58)
!9266 = !DILocation(line: 3963, column: 13, scope: !9264)
!9267 = !DILocation(line: 3963, column: 21, scope: !9264)
!9268 = !DILocation(line: 3963, column: 29, scope: !9264)
!9269 = !DILocation(line: 3963, column: 33, scope: !9264)
!9270 = !DILocation(line: 3963, column: 26, scope: !9264)
!9271 = !DILocation(line: 3963, column: 7, scope: !9265)
!9272 = !DILocation(line: 3964, column: 8, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !3, line: 3964, column: 8)
!9274 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 3963, column: 39)
!9275 = !DILocation(line: 3964, column: 14, scope: !9273)
!9276 = !DILocation(line: 3964, column: 24, scope: !9273)
!9277 = !DILocation(line: 3964, column: 21, scope: !9273)
!9278 = !DILocation(line: 3964, column: 27, scope: !9273)
!9279 = !DILocation(line: 3964, column: 30, scope: !9273)
!9280 = !DILocation(line: 3964, column: 36, scope: !9273)
!9281 = !DILocation(line: 3964, column: 44, scope: !9273)
!9282 = !DILocation(line: 3964, column: 52, scope: !9273)
!9283 = !DILocation(line: 3964, column: 56, scope: !9273)
!9284 = !DILocation(line: 3964, column: 49, scope: !9273)
!9285 = !DILocation(line: 3964, column: 8, scope: !9274)
!9286 = !DILocation(line: 3965, column: 20, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 3964, column: 62)
!9288 = !DILocation(line: 3965, column: 26, scope: !9287)
!9289 = !DILocation(line: 3965, column: 34, scope: !9287)
!9290 = !DILocation(line: 3965, column: 5, scope: !9287)
!9291 = !DILocation(line: 3966, column: 24, scope: !9287)
!9292 = !DILocation(line: 3966, column: 30, scope: !9287)
!9293 = !DILocation(line: 3966, column: 38, scope: !9287)
!9294 = !DILocation(line: 3966, column: 48, scope: !9287)
!9295 = !DILocation(line: 3966, column: 52, scope: !9287)
!9296 = !DILocation(line: 3966, column: 5, scope: !9287)
!9297 = !DILocation(line: 3967, column: 28, scope: !9287)
!9298 = !DILocation(line: 3967, column: 32, scope: !9287)
!9299 = !DILocation(line: 3967, column: 5, scope: !9287)
!9300 = !DILocation(line: 3967, column: 11, scope: !9287)
!9301 = !DILocation(line: 3967, column: 19, scope: !9287)
!9302 = !DILocation(line: 3967, column: 26, scope: !9287)
!9303 = !DILocation(line: 3969, column: 24, scope: !9287)
!9304 = !DILocation(line: 3969, column: 30, scope: !9287)
!9305 = !DILocation(line: 3969, column: 38, scope: !9287)
!9306 = !DILocation(line: 3969, column: 5, scope: !9287)
!9307 = !DILocation(line: 3970, column: 27, scope: !9287)
!9308 = !DILocation(line: 3970, column: 51, scope: !9287)
!9309 = !DILocation(line: 3970, column: 57, scope: !9287)
!9310 = !DILocation(line: 3970, column: 5, scope: !9287)
!9311 = !DILocation(line: 3971, column: 27, scope: !9287)
!9312 = !DILocation(line: 3971, column: 57, scope: !9287)
!9313 = !DILocation(line: 3971, column: 63, scope: !9287)
!9314 = !DILocation(line: 3971, column: 71, scope: !9287)
!9315 = !DILocation(line: 3971, column: 5, scope: !9287)
!9316 = !DILocation(line: 3973, column: 12, scope: !9287)
!9317 = !DILocation(line: 3974, column: 4, scope: !9287)
!9318 = !DILocation(line: 3975, column: 3, scope: !9274)
!9319 = !DILocation(line: 3976, column: 2, scope: !9265)
!9320 = !DILocation(line: 3962, column: 46, scope: !9261)
!9321 = !DILocation(line: 3962, column: 52, scope: !9261)
!9322 = !DILocation(line: 3962, column: 44, scope: !9261)
!9323 = !DILocation(line: 3962, column: 2, scope: !9261)
!9324 = distinct !{!9324, !9262, !9325}
!9325 = !DILocation(line: 3976, column: 2, scope: !9255)
!9326 = !DILocation(line: 3978, column: 9, scope: !9235)
!9327 = !DILocation(line: 3978, column: 2, scope: !9235)
!9328 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_copy_to_selected", scope: !3, file: !3, line: 4020, type: !3603, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9329 = !DILocalVariable(name: "ot", arg: 1, scope: !9328, file: !3, line: 4020, type: !3605)
!9330 = !DILocation(line: 4020, column: 62, scope: !9328)
!9331 = !DILocation(line: 4023, column: 2, scope: !9328)
!9332 = !DILocation(line: 4023, column: 6, scope: !9328)
!9333 = !DILocation(line: 4023, column: 11, scope: !9328)
!9334 = !DILocation(line: 4024, column: 2, scope: !9328)
!9335 = !DILocation(line: 4024, column: 6, scope: !9328)
!9336 = !DILocation(line: 4024, column: 13, scope: !9328)
!9337 = !DILocation(line: 4025, column: 2, scope: !9328)
!9338 = !DILocation(line: 4025, column: 6, scope: !9328)
!9339 = !DILocation(line: 4025, column: 18, scope: !9328)
!9340 = !DILocation(line: 4028, column: 2, scope: !9328)
!9341 = !DILocation(line: 4028, column: 6, scope: !9328)
!9342 = !DILocation(line: 4028, column: 11, scope: !9328)
!9343 = !DILocation(line: 4029, column: 2, scope: !9328)
!9344 = !DILocation(line: 4029, column: 6, scope: !9328)
!9345 = !DILocation(line: 4029, column: 11, scope: !9328)
!9346 = !DILocation(line: 4032, column: 2, scope: !9328)
!9347 = !DILocation(line: 4032, column: 6, scope: !9328)
!9348 = !DILocation(line: 4032, column: 11, scope: !9328)
!9349 = !DILocation(line: 4033, column: 1, scope: !9328)
!9350 = distinct !DISubprogram(name: "vertex_group_copy_to_selected_exec", scope: !3, file: !3, line: 3996, type: !7729, scopeLine: 3997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9351 = !DILocalVariable(name: "C", arg: 1, scope: !9350, file: !3, line: 3996, type: !7700)
!9352 = !DILocation(line: 3996, column: 57, scope: !9350)
!9353 = !DILocalVariable(name: "op", arg: 2, scope: !9350, file: !3, line: 3996, type: !7731)
!9354 = !DILocation(line: 3996, column: 72, scope: !9350)
!9355 = !DILocalVariable(name: "obact", scope: !9350, file: !3, line: 3998, type: !3872)
!9356 = !DILocation(line: 3998, column: 10, scope: !9350)
!9357 = !DILocation(line: 3998, column: 36, scope: !9350)
!9358 = !DILocation(line: 3998, column: 18, scope: !9350)
!9359 = !DILocalVariable(name: "changed_tot", scope: !9350, file: !3, line: 3999, type: !354)
!9360 = !DILocation(line: 3999, column: 6, scope: !9350)
!9361 = !DILocalVariable(name: "fail", scope: !9350, file: !3, line: 4000, type: !354)
!9362 = !DILocation(line: 4000, column: 6, scope: !9350)
!9363 = !DILocalVariable(name: "ctx_data_list", scope: !9364, file: !3, line: 4002, type: !1292)
!9364 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 4002, column: 2)
!9365 = !DILocation(line: 4002, column: 2, scope: !9364)
!9366 = !DILocalVariable(name: "ctx_link", scope: !9364, file: !3, line: 4002, type: !9367)
!9367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9368, size: 64)
!9368 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPointerLink", file: !188, line: 284, baseType: !9369)
!9369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPointerLink", file: !188, line: 281, size: 320, elements: !9370)
!9370 = !{!9371, !9373, !9374}
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9369, file: !188, line: 282, baseType: !9372, size: 64)
!9372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9369, size: 64)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9369, file: !188, line: 282, baseType: !9372, size: 64, offset: 64)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !9369, file: !188, line: 283, baseType: !6421, size: 192, offset: 128)
!9375 = !DILocation(line: 4002, column: 2, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 4002, column: 2)
!9377 = !DILocation(line: 4002, column: 2, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 4002, column: 2)
!9379 = !DILocalVariable(name: "ob", scope: !9380, file: !3, line: 4002, type: !3872)
!9380 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 4002, column: 2)
!9381 = !DILocation(line: 4002, column: 2, scope: !9380)
!9382 = !DILocation(line: 4004, column: 7, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !3, line: 4004, column: 7)
!9384 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 4003, column: 2)
!9385 = !DILocation(line: 4004, column: 16, scope: !9383)
!9386 = !DILocation(line: 4004, column: 13, scope: !9383)
!9387 = !DILocation(line: 4004, column: 7, scope: !9384)
!9388 = !DILocation(line: 4005, column: 29, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 4005, column: 8)
!9390 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 4004, column: 20)
!9391 = !DILocation(line: 4005, column: 33, scope: !9389)
!9392 = !DILocation(line: 4005, column: 8, scope: !9389)
!9393 = !DILocation(line: 4005, column: 8, scope: !9390)
!9394 = !DILocation(line: 4005, column: 52, scope: !9389)
!9395 = !DILocation(line: 4005, column: 41, scope: !9389)
!9396 = !DILocation(line: 4006, column: 13, scope: !9389)
!9397 = !DILocation(line: 4007, column: 3, scope: !9390)
!9398 = !DILocation(line: 4009, column: 2, scope: !9380)
!9399 = distinct !{!9399, !9375, !9400}
!9400 = !DILocation(line: 4009, column: 2, scope: !9376)
!9401 = !DILocation(line: 4009, column: 2, scope: !9364)
!9402 = !DILocation(line: 4011, column: 7, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 4011, column: 6)
!9404 = !DILocation(line: 4011, column: 19, scope: !9403)
!9405 = !DILocation(line: 4011, column: 24, scope: !9403)
!9406 = !DILocation(line: 4011, column: 27, scope: !9403)
!9407 = !DILocation(line: 4011, column: 32, scope: !9403)
!9408 = !DILocation(line: 4011, column: 38, scope: !9403)
!9409 = !DILocation(line: 4011, column: 41, scope: !9403)
!9410 = !DILocation(line: 4011, column: 6, scope: !9350)
!9411 = !DILocation(line: 4012, column: 15, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 4011, column: 47)
!9413 = !DILocation(line: 4012, column: 19, scope: !9412)
!9414 = !DILocation(line: 4014, column: 15, scope: !9412)
!9415 = !DILocation(line: 4014, column: 28, scope: !9412)
!9416 = !DILocation(line: 4012, column: 3, scope: !9412)
!9417 = !DILocation(line: 4015, column: 2, scope: !9412)
!9418 = !DILocation(line: 4017, column: 2, scope: !9350)
!9419 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_transfer_weight", scope: !3, file: !3, line: 4151, type: !3603, scopeLine: 4152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9420 = !DILocalVariable(name: "ot", arg: 1, scope: !9419, file: !3, line: 4151, type: !3605)
!9421 = !DILocation(line: 4151, column: 61, scope: !9419)
!9422 = !DILocation(line: 4154, column: 2, scope: !9419)
!9423 = !DILocation(line: 4154, column: 6, scope: !9419)
!9424 = !DILocation(line: 4154, column: 11, scope: !9419)
!9425 = !DILocation(line: 4155, column: 2, scope: !9419)
!9426 = !DILocation(line: 4155, column: 6, scope: !9419)
!9427 = !DILocation(line: 4155, column: 13, scope: !9419)
!9428 = !DILocation(line: 4156, column: 2, scope: !9419)
!9429 = !DILocation(line: 4156, column: 6, scope: !9419)
!9430 = !DILocation(line: 4156, column: 18, scope: !9419)
!9431 = !DILocation(line: 4159, column: 2, scope: !9419)
!9432 = !DILocation(line: 4159, column: 6, scope: !9419)
!9433 = !DILocation(line: 4159, column: 11, scope: !9419)
!9434 = !DILocation(line: 4160, column: 2, scope: !9419)
!9435 = !DILocation(line: 4160, column: 6, scope: !9419)
!9436 = !DILocation(line: 4160, column: 11, scope: !9419)
!9437 = !DILocation(line: 4163, column: 2, scope: !9419)
!9438 = !DILocation(line: 4163, column: 6, scope: !9419)
!9439 = !DILocation(line: 4163, column: 11, scope: !9419)
!9440 = !DILocation(line: 4167, column: 26, scope: !9419)
!9441 = !DILocation(line: 4167, column: 30, scope: !9419)
!9442 = !DILocation(line: 4167, column: 13, scope: !9419)
!9443 = !DILocation(line: 4167, column: 2, scope: !9419)
!9444 = !DILocation(line: 4167, column: 6, scope: !9419)
!9445 = !DILocation(line: 4167, column: 11, scope: !9419)
!9446 = !DILocation(line: 4168, column: 26, scope: !9419)
!9447 = !DILocation(line: 4168, column: 30, scope: !9419)
!9448 = !DILocation(line: 4168, column: 13, scope: !9419)
!9449 = !DILocation(line: 4168, column: 2, scope: !9419)
!9450 = !DILocation(line: 4168, column: 6, scope: !9419)
!9451 = !DILocation(line: 4168, column: 11, scope: !9419)
!9452 = !DILocation(line: 4169, column: 26, scope: !9419)
!9453 = !DILocation(line: 4169, column: 30, scope: !9419)
!9454 = !DILocation(line: 4169, column: 13, scope: !9419)
!9455 = !DILocation(line: 4169, column: 2, scope: !9419)
!9456 = !DILocation(line: 4169, column: 6, scope: !9419)
!9457 = !DILocation(line: 4169, column: 11, scope: !9419)
!9458 = !DILocation(line: 4170, column: 1, scope: !9419)
!9459 = distinct !DISubprogram(name: "vertex_group_mesh_supported_poll", scope: !3, file: !3, line: 3153, type: !7698, scopeLine: 3154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9460 = !DILocalVariable(name: "C", arg: 1, scope: !9459, file: !3, line: 3153, type: !7700)
!9461 = !DILocation(line: 3153, column: 55, scope: !9459)
!9462 = !DILocalVariable(name: "ob", scope: !9459, file: !3, line: 3155, type: !3872)
!9463 = !DILocation(line: 3155, column: 10, scope: !9459)
!9464 = !DILocation(line: 3155, column: 33, scope: !9459)
!9465 = !DILocation(line: 3155, column: 15, scope: !9459)
!9466 = !DILocalVariable(name: "data", scope: !9459, file: !3, line: 3156, type: !1247)
!9467 = !DILocation(line: 3156, column: 6, scope: !9459)
!9468 = !DILocation(line: 3156, column: 14, scope: !9459)
!9469 = !DILocation(line: 3156, column: 13, scope: !9459)
!9470 = !DILocation(line: 3156, column: 20, scope: !9459)
!9471 = !DILocation(line: 3156, column: 24, scope: !9459)
!9472 = !DILocation(line: 3157, column: 10, scope: !9459)
!9473 = !DILocation(line: 3157, column: 13, scope: !9459)
!9474 = !DILocation(line: 3157, column: 17, scope: !9459)
!9475 = !DILocation(line: 3157, column: 21, scope: !9459)
!9476 = !DILocation(line: 3157, column: 24, scope: !9459)
!9477 = !DILocation(line: 3157, column: 28, scope: !9459)
!9478 = !DILocation(line: 3157, column: 31, scope: !9459)
!9479 = !DILocation(line: 3157, column: 35, scope: !9459)
!9480 = !DILocation(line: 3157, column: 40, scope: !9459)
!9481 = !DILocation(line: 3157, column: 51, scope: !9459)
!9482 = !DILocation(line: 3157, column: 54, scope: !9459)
!9483 = !DILocation(line: 3157, column: 59, scope: !9459)
!9484 = !DILocation(line: 3157, column: 63, scope: !9459)
!9485 = !DILocation(line: 3157, column: 69, scope: !9459)
!9486 = !DILocation(line: 3157, column: 62, scope: !9459)
!9487 = !DILocation(line: 0, scope: !9459)
!9488 = !DILocation(line: 3157, column: 2, scope: !9459)
!9489 = distinct !DISubprogram(name: "vertex_group_transfer_weight_exec", scope: !3, file: !3, line: 4035, type: !7729, scopeLine: 4036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9490 = !DILocalVariable(name: "C", arg: 1, scope: !9489, file: !3, line: 4035, type: !7700)
!9491 = !DILocation(line: 4035, column: 56, scope: !9489)
!9492 = !DILocalVariable(name: "op", arg: 2, scope: !9489, file: !3, line: 4035, type: !7731)
!9493 = !DILocation(line: 4035, column: 71, scope: !9489)
!9494 = !DILocalVariable(name: "scene", scope: !9489, file: !3, line: 4037, type: !8551)
!9495 = !DILocation(line: 4037, column: 9, scope: !9489)
!9496 = !DILocation(line: 4037, column: 32, scope: !9489)
!9497 = !DILocation(line: 4037, column: 17, scope: !9489)
!9498 = !DILocalVariable(name: "ob_act", scope: !9489, file: !3, line: 4038, type: !3872)
!9499 = !DILocation(line: 4038, column: 10, scope: !9489)
!9500 = !DILocation(line: 4038, column: 42, scope: !9489)
!9501 = !DILocation(line: 4038, column: 19, scope: !9489)
!9502 = !DILocalVariable(name: "dg_act", scope: !9489, file: !3, line: 4040, type: !1368)
!9503 = !DILocation(line: 4040, column: 16, scope: !9489)
!9504 = !DILocation(line: 4040, column: 39, scope: !9489)
!9505 = !DILocation(line: 4040, column: 47, scope: !9489)
!9506 = !DILocation(line: 4040, column: 57, scope: !9489)
!9507 = !DILocation(line: 4040, column: 65, scope: !9489)
!9508 = !DILocation(line: 4040, column: 72, scope: !9489)
!9509 = !DILocation(line: 4040, column: 25, scope: !9489)
!9510 = !DILocalVariable(name: "dg_act_name", scope: !9489, file: !3, line: 4041, type: !1282)
!9511 = !DILocation(line: 4041, column: 7, scope: !9489)
!9512 = !DILocalVariable(name: "fail", scope: !9489, file: !3, line: 4043, type: !354)
!9513 = !DILocation(line: 4043, column: 6, scope: !9489)
!9514 = !DILocalVariable(name: "changed", scope: !9489, file: !3, line: 4044, type: !2436)
!9515 = !DILocation(line: 4044, column: 7, scope: !9489)
!9516 = !DILocalVariable(name: "vertex_group_mode", scope: !9489, file: !3, line: 4046, type: !9517)
!9517 = !DIDerivedType(tag: DW_TAG_typedef, name: "WT_VertexGroupMode", file: !3, line: 753, baseType: !267)
!9518 = !DILocation(line: 4046, column: 21, scope: !9489)
!9519 = !DILocation(line: 4046, column: 54, scope: !9489)
!9520 = !DILocation(line: 4046, column: 58, scope: !9489)
!9521 = !DILocation(line: 4046, column: 41, scope: !9489)
!9522 = !DILocalVariable(name: "method", scope: !9489, file: !3, line: 4047, type: !9523)
!9523 = !DIDerivedType(tag: DW_TAG_typedef, name: "WT_Method", file: !3, line: 760, baseType: !271)
!9524 = !DILocation(line: 4047, column: 12, scope: !9489)
!9525 = !DILocation(line: 4047, column: 34, scope: !9489)
!9526 = !DILocation(line: 4047, column: 38, scope: !9489)
!9527 = !DILocation(line: 4047, column: 21, scope: !9489)
!9528 = !DILocalVariable(name: "replace_mode", scope: !9489, file: !3, line: 4048, type: !9529)
!9529 = !DIDerivedType(tag: DW_TAG_typedef, name: "WT_ReplaceMode", file: !3, line: 765, baseType: !277)
!9530 = !DILocation(line: 4048, column: 17, scope: !9489)
!9531 = !DILocation(line: 4048, column: 45, scope: !9489)
!9532 = !DILocation(line: 4048, column: 49, scope: !9489)
!9533 = !DILocation(line: 4048, column: 32, scope: !9489)
!9534 = !DILocation(line: 4050, column: 6, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 4050, column: 6)
!9536 = !DILocation(line: 4050, column: 24, scope: !9535)
!9537 = !DILocation(line: 4050, column: 6, scope: !9489)
!9538 = !DILocation(line: 4051, column: 8, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 4051, column: 7)
!9540 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 4050, column: 59)
!9541 = !DILocation(line: 4051, column: 7, scope: !9540)
!9542 = !DILocation(line: 4052, column: 15, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 4051, column: 16)
!9544 = !DILocation(line: 4052, column: 19, scope: !9543)
!9545 = !DILocation(line: 4052, column: 4, scope: !9543)
!9546 = !DILocation(line: 4053, column: 4, scope: !9543)
!9547 = !DILocation(line: 4055, column: 2, scope: !9540)
!9548 = !DILocation(line: 4057, column: 6, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 4057, column: 6)
!9550 = !DILocation(line: 4057, column: 6, scope: !9489)
!9551 = !DILocation(line: 4058, column: 15, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 4057, column: 14)
!9553 = !DILocation(line: 4058, column: 28, scope: !9552)
!9554 = !DILocation(line: 4058, column: 36, scope: !9552)
!9555 = !DILocation(line: 4058, column: 3, scope: !9552)
!9556 = !DILocation(line: 4059, column: 2, scope: !9552)
!9557 = !DILocalVariable(name: "ctx_data_list", scope: !9558, file: !3, line: 4062, type: !1292)
!9558 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 4062, column: 2)
!9559 = !DILocation(line: 4062, column: 2, scope: !9558)
!9560 = !DILocalVariable(name: "ctx_link", scope: !9558, file: !3, line: 4062, type: !9367)
!9561 = !DILocation(line: 4062, column: 2, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9558, file: !3, line: 4062, column: 2)
!9563 = !DILocation(line: 4062, column: 2, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9562, file: !3, line: 4062, column: 2)
!9565 = !DILocalVariable(name: "ob_src", scope: !9566, file: !3, line: 4062, type: !3872)
!9566 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 4062, column: 2)
!9567 = !DILocation(line: 4062, column: 2, scope: !9566)
!9568 = !DILocation(line: 4064, column: 7, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 4064, column: 7)
!9570 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 4063, column: 2)
!9571 = !DILocation(line: 4064, column: 17, scope: !9569)
!9572 = !DILocation(line: 4064, column: 14, scope: !9569)
!9573 = !DILocation(line: 4064, column: 7, scope: !9570)
!9574 = !DILocation(line: 4066, column: 31, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 4066, column: 8)
!9576 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 4064, column: 25)
!9577 = !DILocation(line: 4066, column: 39, scope: !9575)
!9578 = !DILocation(line: 4066, column: 8, scope: !9575)
!9579 = !DILocation(line: 4066, column: 8, scope: !9576)
!9580 = !DILocation(line: 4067, column: 17, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9575, file: !3, line: 4066, column: 49)
!9582 = !DILocation(line: 4067, column: 21, scope: !9581)
!9583 = !DILocation(line: 4068, column: 65, scope: !9581)
!9584 = !DILocation(line: 4068, column: 73, scope: !9581)
!9585 = !DILocation(line: 4068, column: 76, scope: !9581)
!9586 = !DILocation(line: 4068, column: 81, scope: !9581)
!9587 = !DILocation(line: 4067, column: 5, scope: !9581)
!9588 = !DILocation(line: 4069, column: 5, scope: !9581)
!9589 = !DILocation(line: 4071, column: 13, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9575, file: !3, line: 4071, column: 13)
!9591 = !DILocation(line: 4071, column: 21, scope: !9590)
!9592 = !DILocation(line: 4071, column: 26, scope: !9590)
!9593 = !DILocation(line: 4071, column: 13, scope: !9575)
!9594 = !DILocation(line: 4073, column: 9, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 4073, column: 9)
!9596 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 4071, column: 38)
!9597 = !DILocation(line: 4073, column: 17, scope: !9595)
!9598 = !DILocation(line: 4073, column: 22, scope: !9595)
!9599 = !DILocation(line: 4073, column: 9, scope: !9596)
!9600 = !DILocation(line: 4074, column: 18, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 4073, column: 38)
!9602 = !DILocation(line: 4074, column: 22, scope: !9601)
!9603 = !DILocation(line: 4075, column: 80, scope: !9601)
!9604 = !DILocation(line: 4075, column: 88, scope: !9601)
!9605 = !DILocation(line: 4075, column: 91, scope: !9601)
!9606 = !DILocation(line: 4075, column: 96, scope: !9601)
!9607 = !DILocation(line: 4074, column: 6, scope: !9601)
!9608 = !DILocation(line: 4076, column: 5, scope: !9601)
!9609 = !DILocation(line: 4077, column: 5, scope: !9596)
!9610 = !DILocation(line: 4080, column: 12, scope: !9576)
!9611 = !DILocation(line: 4080, column: 4, scope: !9576)
!9612 = !DILocalVariable(name: "dg_src", scope: !9613, file: !3, line: 4084, type: !1368)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 4083, column: 5)
!9614 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 4080, column: 31)
!9615 = !DILocation(line: 4084, column: 20, scope: !9613)
!9616 = !DILocation(line: 4085, column: 34, scope: !9613)
!9617 = !DILocation(line: 4085, column: 42, scope: !9613)
!9618 = !DILocation(line: 4085, column: 15, scope: !9613)
!9619 = !DILocation(line: 4085, column: 13, scope: !9613)
!9620 = !DILocation(line: 4087, column: 10, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 4087, column: 10)
!9622 = !DILocation(line: 4087, column: 17, scope: !9621)
!9623 = !DILocation(line: 4087, column: 10, scope: !9613)
!9624 = !DILocation(line: 4088, column: 19, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 4087, column: 26)
!9626 = !DILocation(line: 4088, column: 23, scope: !9625)
!9627 = !DILocation(line: 4089, column: 63, scope: !9625)
!9628 = !DILocation(line: 4089, column: 71, scope: !9625)
!9629 = !DILocation(line: 4089, column: 74, scope: !9625)
!9630 = !DILocation(line: 4089, column: 79, scope: !9625)
!9631 = !DILocation(line: 4089, column: 84, scope: !9625)
!9632 = !DILocation(line: 4088, column: 7, scope: !9625)
!9633 = !DILocation(line: 4090, column: 7, scope: !9625)
!9634 = !DILocation(line: 4093, column: 36, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 4093, column: 10)
!9636 = !DILocation(line: 4093, column: 44, scope: !9635)
!9637 = !DILocation(line: 4093, column: 52, scope: !9635)
!9638 = !DILocation(line: 4093, column: 60, scope: !9635)
!9639 = !DILocation(line: 4093, column: 67, scope: !9635)
!9640 = !DILocation(line: 4093, column: 75, scope: !9635)
!9641 = !DILocation(line: 4093, column: 89, scope: !9635)
!9642 = !DILocation(line: 4093, column: 10, scope: !9635)
!9643 = !DILocation(line: 4093, column: 10, scope: !9613)
!9644 = !DILocation(line: 4094, column: 15, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 4093, column: 94)
!9646 = !DILocation(line: 4095, column: 6, scope: !9645)
!9647 = !DILocation(line: 4097, column: 11, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 4096, column: 11)
!9649 = !DILocation(line: 4099, column: 6, scope: !9613)
!9650 = !DILocalVariable(name: "dg_src", scope: !9651, file: !3, line: 4103, type: !1368)
!9651 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 4102, column: 5)
!9652 = !DILocation(line: 4103, column: 20, scope: !9651)
!9653 = !DILocation(line: 4104, column: 20, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 4104, column: 6)
!9655 = !DILocation(line: 4104, column: 28, scope: !9654)
!9656 = !DILocation(line: 4104, column: 36, scope: !9654)
!9657 = !DILocation(line: 4104, column: 18, scope: !9654)
!9658 = !DILocation(line: 4104, column: 11, scope: !9654)
!9659 = !DILocation(line: 4104, column: 43, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4104, column: 6)
!9661 = !DILocation(line: 4104, column: 6, scope: !9654)
!9662 = !DILocation(line: 4105, column: 37, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 4105, column: 11)
!9664 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 4104, column: 74)
!9665 = !DILocation(line: 4105, column: 45, scope: !9663)
!9666 = !DILocation(line: 4105, column: 53, scope: !9663)
!9667 = !DILocation(line: 4105, column: 61, scope: !9663)
!9668 = !DILocation(line: 4105, column: 68, scope: !9663)
!9669 = !DILocation(line: 4105, column: 76, scope: !9663)
!9670 = !DILocation(line: 4105, column: 90, scope: !9663)
!9671 = !DILocation(line: 4105, column: 11, scope: !9663)
!9672 = !DILocation(line: 4105, column: 11, scope: !9664)
!9673 = !DILocation(line: 4106, column: 16, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 4105, column: 95)
!9675 = !DILocation(line: 4107, column: 7, scope: !9674)
!9676 = !DILocation(line: 4109, column: 12, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 4108, column: 12)
!9678 = !DILocation(line: 4111, column: 6, scope: !9664)
!9679 = !DILocation(line: 4104, column: 60, scope: !9660)
!9680 = !DILocation(line: 4104, column: 68, scope: !9660)
!9681 = !DILocation(line: 4104, column: 58, scope: !9660)
!9682 = !DILocation(line: 4104, column: 6, scope: !9660)
!9683 = distinct !{!9683, !9661, !9684}
!9684 = !DILocation(line: 4111, column: 6, scope: !9654)
!9685 = !DILocation(line: 4112, column: 6, scope: !9651)
!9686 = !DILocation(line: 4116, column: 6, scope: !9614)
!9687 = !DILocation(line: 4118, column: 3, scope: !9576)
!9688 = !DILocation(line: 4120, column: 2, scope: !9566)
!9689 = distinct !{!9689, !9561, !9690}
!9690 = !DILocation(line: 4120, column: 2, scope: !9562)
!9691 = !DILocation(line: 4120, column: 2, scope: !9558)
!9692 = !DILocation(line: 4122, column: 6, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 4122, column: 6)
!9694 = !DILocation(line: 4122, column: 6, scope: !9489)
!9695 = !DILocation(line: 4126, column: 7, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 4126, column: 7)
!9697 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 4122, column: 15)
!9698 = !DILocation(line: 4126, column: 7, scope: !9697)
!9699 = !DILocation(line: 4127, column: 29, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 4126, column: 15)
!9701 = !DILocation(line: 4127, column: 37, scope: !9700)
!9702 = !DILocation(line: 4127, column: 4, scope: !9700)
!9703 = !DILocation(line: 4128, column: 3, scope: !9700)
!9704 = !DILocation(line: 4130, column: 29, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 4129, column: 8)
!9706 = !DILocation(line: 4130, column: 4, scope: !9705)
!9707 = !DILocation(line: 4136, column: 22, scope: !9697)
!9708 = !DILocation(line: 4136, column: 30, scope: !9697)
!9709 = !DILocation(line: 4136, column: 3, scope: !9697)
!9710 = !DILocation(line: 4137, column: 25, scope: !9697)
!9711 = !DILocation(line: 4137, column: 49, scope: !9697)
!9712 = !DILocation(line: 4137, column: 3, scope: !9697)
!9713 = !DILocation(line: 4138, column: 25, scope: !9697)
!9714 = !DILocation(line: 4138, column: 55, scope: !9697)
!9715 = !DILocation(line: 4138, column: 3, scope: !9697)
!9716 = !DILocation(line: 4139, column: 3, scope: !9697)
!9717 = !DILocation(line: 4142, column: 30, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 4142, column: 7)
!9719 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 4141, column: 7)
!9720 = !DILocation(line: 4142, column: 34, scope: !9718)
!9721 = !DILocation(line: 4142, column: 43, scope: !9718)
!9722 = !DILocation(line: 4142, column: 7, scope: !9718)
!9723 = !DILocation(line: 4142, column: 7, scope: !9719)
!9724 = !DILocation(line: 4143, column: 15, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 4142, column: 50)
!9726 = !DILocation(line: 4143, column: 19, scope: !9725)
!9727 = !DILocation(line: 4143, column: 4, scope: !9725)
!9728 = !DILocation(line: 4144, column: 3, scope: !9725)
!9729 = !DILocation(line: 4146, column: 3, scope: !9719)
!9730 = !DILocation(line: 4148, column: 1, scope: !9489)
!9731 = distinct !DISubprogram(name: "OBJECT_OT_vertex_group_set_active", scope: !3, file: !3, line: 4211, type: !3603, scopeLine: 4212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9732 = !DILocalVariable(name: "ot", arg: 1, scope: !9731, file: !3, line: 4211, type: !3605)
!9733 = !DILocation(line: 4211, column: 56, scope: !9731)
!9734 = !DILocalVariable(name: "prop", scope: !9731, file: !3, line: 4213, type: !3792)
!9735 = !DILocation(line: 4213, column: 15, scope: !9731)
!9736 = !DILocation(line: 4216, column: 2, scope: !9731)
!9737 = !DILocation(line: 4216, column: 6, scope: !9731)
!9738 = !DILocation(line: 4216, column: 11, scope: !9731)
!9739 = !DILocation(line: 4217, column: 2, scope: !9731)
!9740 = !DILocation(line: 4217, column: 6, scope: !9731)
!9741 = !DILocation(line: 4217, column: 13, scope: !9731)
!9742 = !DILocation(line: 4218, column: 2, scope: !9731)
!9743 = !DILocation(line: 4218, column: 6, scope: !9731)
!9744 = !DILocation(line: 4218, column: 18, scope: !9731)
!9745 = !DILocation(line: 4221, column: 2, scope: !9731)
!9746 = !DILocation(line: 4221, column: 6, scope: !9731)
!9747 = !DILocation(line: 4221, column: 11, scope: !9731)
!9748 = !DILocation(line: 4222, column: 2, scope: !9731)
!9749 = !DILocation(line: 4222, column: 6, scope: !9731)
!9750 = !DILocation(line: 4222, column: 11, scope: !9731)
!9751 = !DILocation(line: 4223, column: 2, scope: !9731)
!9752 = !DILocation(line: 4223, column: 6, scope: !9731)
!9753 = !DILocation(line: 4223, column: 13, scope: !9731)
!9754 = !DILocation(line: 4226, column: 2, scope: !9731)
!9755 = !DILocation(line: 4226, column: 6, scope: !9731)
!9756 = !DILocation(line: 4226, column: 11, scope: !9731)
!9757 = !DILocation(line: 4229, column: 22, scope: !9731)
!9758 = !DILocation(line: 4229, column: 26, scope: !9731)
!9759 = !DILocation(line: 4229, column: 9, scope: !9731)
!9760 = !DILocation(line: 4229, column: 7, scope: !9731)
!9761 = !DILocation(line: 4230, column: 21, scope: !9731)
!9762 = !DILocation(line: 4230, column: 2, scope: !9731)
!9763 = !DILocation(line: 4231, column: 24, scope: !9731)
!9764 = !DILocation(line: 4231, column: 2, scope: !9731)
!9765 = !DILocation(line: 4232, column: 13, scope: !9731)
!9766 = !DILocation(line: 4232, column: 2, scope: !9731)
!9767 = !DILocation(line: 4232, column: 6, scope: !9731)
!9768 = !DILocation(line: 4232, column: 11, scope: !9731)
!9769 = !DILocation(line: 4233, column: 1, scope: !9731)
!9770 = distinct !DISubprogram(name: "set_active_group_exec", scope: !3, file: !3, line: 4172, type: !7729, scopeLine: 4173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9771 = !DILocalVariable(name: "C", arg: 1, scope: !9770, file: !3, line: 4172, type: !7700)
!9772 = !DILocation(line: 4172, column: 44, scope: !9770)
!9773 = !DILocalVariable(name: "op", arg: 2, scope: !9770, file: !3, line: 4172, type: !7731)
!9774 = !DILocation(line: 4172, column: 59, scope: !9770)
!9775 = !DILocalVariable(name: "ob", scope: !9770, file: !3, line: 4174, type: !3872)
!9776 = !DILocation(line: 4174, column: 10, scope: !9770)
!9777 = !DILocation(line: 4174, column: 33, scope: !9770)
!9778 = !DILocation(line: 4174, column: 15, scope: !9770)
!9779 = !DILocalVariable(name: "nr", scope: !9770, file: !3, line: 4175, type: !354)
!9780 = !DILocation(line: 4175, column: 6, scope: !9770)
!9781 = !DILocation(line: 4175, column: 24, scope: !9770)
!9782 = !DILocation(line: 4175, column: 28, scope: !9770)
!9783 = !DILocation(line: 4175, column: 11, scope: !9770)
!9784 = !DILocation(line: 4178, column: 15, scope: !9770)
!9785 = !DILocation(line: 4178, column: 18, scope: !9770)
!9786 = !DILocation(line: 4178, column: 2, scope: !9770)
!9787 = !DILocation(line: 4178, column: 6, scope: !9770)
!9788 = !DILocation(line: 4178, column: 13, scope: !9770)
!9789 = !DILocation(line: 4180, column: 21, scope: !9770)
!9790 = !DILocation(line: 4180, column: 25, scope: !9770)
!9791 = !DILocation(line: 4180, column: 2, scope: !9770)
!9792 = !DILocation(line: 4181, column: 24, scope: !9770)
!9793 = !DILocation(line: 4181, column: 54, scope: !9770)
!9794 = !DILocation(line: 4181, column: 2, scope: !9770)
!9795 = !DILocation(line: 4183, column: 2, scope: !9770)
!9796 = distinct !DISubprogram(name: "vgroup_itemf", scope: !3, file: !3, line: 4186, type: !9797, scopeLine: 4187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9797 = !DISubroutineType(types: !9798)
!9798 = !{!6437, !7700, !6420, !3792, !6422}
!9799 = !DILocalVariable(name: "C", arg: 1, scope: !9796, file: !3, line: 4186, type: !7700)
!9800 = !DILocation(line: 4186, column: 49, scope: !9796)
!9801 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !9796, file: !3, line: 4186, type: !6420)
!9802 = !DILocation(line: 4186, column: 64, scope: !9796)
!9803 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9796, file: !3, line: 4186, type: !3792)
!9804 = !DILocation(line: 4186, column: 90, scope: !9796)
!9805 = !DILocalVariable(name: "r_free", arg: 4, scope: !9796, file: !3, line: 4186, type: !6422)
!9806 = !DILocation(line: 4186, column: 110, scope: !9796)
!9807 = !DILocalVariable(name: "ob", scope: !9796, file: !3, line: 4188, type: !3872)
!9808 = !DILocation(line: 4188, column: 10, scope: !9796)
!9809 = !DILocation(line: 4188, column: 33, scope: !9796)
!9810 = !DILocation(line: 4188, column: 15, scope: !9796)
!9811 = !DILocalVariable(name: "tmp", scope: !9796, file: !3, line: 4189, type: !3845)
!9812 = !DILocation(line: 4189, column: 19, scope: !9796)
!9813 = !DILocalVariable(name: "item", scope: !9796, file: !3, line: 4190, type: !6437)
!9814 = !DILocation(line: 4190, column: 20, scope: !9796)
!9815 = !DILocalVariable(name: "def", scope: !9796, file: !3, line: 4191, type: !1368)
!9816 = !DILocation(line: 4191, column: 16, scope: !9796)
!9817 = !DILocalVariable(name: "a", scope: !9796, file: !3, line: 4192, type: !354)
!9818 = !DILocation(line: 4192, column: 6, scope: !9796)
!9819 = !DILocalVariable(name: "totitem", scope: !9796, file: !3, line: 4192, type: !354)
!9820 = !DILocation(line: 4192, column: 9, scope: !9796)
!9821 = !DILocation(line: 4194, column: 7, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9796, file: !3, line: 4194, column: 6)
!9823 = !DILocation(line: 4194, column: 6, scope: !9796)
!9824 = !DILocation(line: 4195, column: 3, scope: !9822)
!9825 = !DILocation(line: 4197, column: 9, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9796, file: !3, line: 4197, column: 2)
!9827 = !DILocation(line: 4197, column: 20, scope: !9826)
!9828 = !DILocation(line: 4197, column: 24, scope: !9826)
!9829 = !DILocation(line: 4197, column: 32, scope: !9826)
!9830 = !DILocation(line: 4197, column: 18, scope: !9826)
!9831 = !DILocation(line: 4197, column: 7, scope: !9826)
!9832 = !DILocation(line: 4197, column: 39, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 4197, column: 2)
!9834 = !DILocation(line: 4197, column: 2, scope: !9826)
!9835 = !DILocation(line: 4198, column: 15, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 4197, column: 66)
!9837 = !DILocation(line: 4198, column: 7, scope: !9836)
!9838 = !DILocation(line: 4198, column: 13, scope: !9836)
!9839 = !DILocation(line: 4199, column: 7, scope: !9836)
!9840 = !DILocation(line: 4199, column: 12, scope: !9836)
!9841 = !DILocation(line: 4200, column: 20, scope: !9836)
!9842 = !DILocation(line: 4200, column: 25, scope: !9836)
!9843 = !DILocation(line: 4200, column: 7, scope: !9836)
!9844 = !DILocation(line: 4200, column: 18, scope: !9836)
!9845 = !DILocation(line: 4201, column: 14, scope: !9836)
!9846 = !DILocation(line: 4201, column: 19, scope: !9836)
!9847 = !DILocation(line: 4201, column: 7, scope: !9836)
!9848 = !DILocation(line: 4201, column: 12, scope: !9836)
!9849 = !DILocation(line: 4202, column: 3, scope: !9836)
!9850 = !DILocation(line: 4203, column: 2, scope: !9836)
!9851 = !DILocation(line: 4197, column: 50, scope: !9833)
!9852 = !DILocation(line: 4197, column: 55, scope: !9833)
!9853 = !DILocation(line: 4197, column: 48, scope: !9833)
!9854 = !DILocation(line: 4197, column: 62, scope: !9833)
!9855 = !DILocation(line: 4197, column: 2, scope: !9833)
!9856 = distinct !{!9856, !9834, !9857}
!9857 = !DILocation(line: 4203, column: 2, scope: !9826)
!9858 = !DILocation(line: 4205, column: 2, scope: !9796)
!9859 = !DILocation(line: 4206, column: 3, scope: !9796)
!9860 = !DILocation(line: 4206, column: 10, scope: !9796)
!9861 = !DILocation(line: 4208, column: 9, scope: !9796)
!9862 = !DILocation(line: 4208, column: 2, scope: !9796)
!9863 = !DILocation(line: 4209, column: 1, scope: !9796)
!9864 = !DILocalVariable(name: "ot", arg: 1, scope: !3602, file: !3, line: 4401, type: !3605)
!9865 = !DILocation(line: 4401, column: 50, scope: !3602)
!9866 = !DILocation(line: 4409, column: 2, scope: !3602)
!9867 = !DILocation(line: 4409, column: 6, scope: !3602)
!9868 = !DILocation(line: 4409, column: 11, scope: !3602)
!9869 = !DILocation(line: 4410, column: 2, scope: !3602)
!9870 = !DILocation(line: 4410, column: 6, scope: !3602)
!9871 = !DILocation(line: 4410, column: 13, scope: !3602)
!9872 = !DILocation(line: 4411, column: 2, scope: !3602)
!9873 = !DILocation(line: 4411, column: 6, scope: !3602)
!9874 = !DILocation(line: 4411, column: 18, scope: !3602)
!9875 = !DILocation(line: 4414, column: 2, scope: !3602)
!9876 = !DILocation(line: 4414, column: 6, scope: !3602)
!9877 = !DILocation(line: 4414, column: 11, scope: !3602)
!9878 = !DILocation(line: 4415, column: 2, scope: !3602)
!9879 = !DILocation(line: 4415, column: 6, scope: !3602)
!9880 = !DILocation(line: 4415, column: 11, scope: !3602)
!9881 = !DILocation(line: 4418, column: 2, scope: !3602)
!9882 = !DILocation(line: 4418, column: 6, scope: !3602)
!9883 = !DILocation(line: 4418, column: 11, scope: !3602)
!9884 = !DILocation(line: 4420, column: 15, scope: !3602)
!9885 = !DILocation(line: 4420, column: 19, scope: !3602)
!9886 = !DILocation(line: 4420, column: 2, scope: !3602)
!9887 = !DILocation(line: 4421, column: 1, scope: !3602)
!9888 = distinct !DISubprogram(name: "vertex_group_sort_exec", scope: !3, file: !3, line: 4368, type: !7729, scopeLine: 4369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9889 = !DILocalVariable(name: "C", arg: 1, scope: !9888, file: !3, line: 4368, type: !7700)
!9890 = !DILocation(line: 4368, column: 45, scope: !9888)
!9891 = !DILocalVariable(name: "op", arg: 2, scope: !9888, file: !3, line: 4368, type: !7731)
!9892 = !DILocation(line: 4368, column: 60, scope: !9888)
!9893 = !DILocalVariable(name: "ob", scope: !9888, file: !3, line: 4370, type: !3872)
!9894 = !DILocation(line: 4370, column: 10, scope: !9888)
!9895 = !DILocation(line: 4370, column: 33, scope: !9888)
!9896 = !DILocation(line: 4370, column: 15, scope: !9888)
!9897 = !DILocalVariable(name: "name_array", scope: !9888, file: !3, line: 4371, type: !1381)
!9898 = !DILocation(line: 4371, column: 8, scope: !9888)
!9899 = !DILocalVariable(name: "ret", scope: !9888, file: !3, line: 4372, type: !354)
!9900 = !DILocation(line: 4372, column: 6, scope: !9888)
!9901 = !DILocalVariable(name: "sort_type", scope: !9888, file: !3, line: 4373, type: !354)
!9902 = !DILocation(line: 4373, column: 6, scope: !9888)
!9903 = !DILocation(line: 4373, column: 31, scope: !9888)
!9904 = !DILocation(line: 4373, column: 35, scope: !9888)
!9905 = !DILocation(line: 4373, column: 18, scope: !9888)
!9906 = !DILocation(line: 4376, column: 33, scope: !9888)
!9907 = !DILocation(line: 4376, column: 15, scope: !9888)
!9908 = !DILocation(line: 4376, column: 13, scope: !9888)
!9909 = !DILocation(line: 4379, column: 10, scope: !9888)
!9910 = !DILocation(line: 4379, column: 2, scope: !9888)
!9911 = !DILocation(line: 4381, column: 18, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 4379, column: 21)
!9913 = !DILocation(line: 4381, column: 22, scope: !9912)
!9914 = !DILocation(line: 4381, column: 4, scope: !9912)
!9915 = !DILocation(line: 4382, column: 4, scope: !9912)
!9916 = !DILocation(line: 4384, column: 31, scope: !9912)
!9917 = !DILocation(line: 4384, column: 4, scope: !9912)
!9918 = !DILocation(line: 4385, column: 4, scope: !9912)
!9919 = !DILocation(line: 4389, column: 24, scope: !9888)
!9920 = !DILocation(line: 4389, column: 28, scope: !9888)
!9921 = !DILocation(line: 4389, column: 40, scope: !9888)
!9922 = !DILocation(line: 4389, column: 8, scope: !9888)
!9923 = !DILocation(line: 4389, column: 6, scope: !9888)
!9924 = !DILocation(line: 4391, column: 6, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 4391, column: 6)
!9926 = !DILocation(line: 4391, column: 10, scope: !9925)
!9927 = !DILocation(line: 4391, column: 6, scope: !9888)
!9928 = !DILocation(line: 4392, column: 22, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 4391, column: 33)
!9930 = !DILocation(line: 4392, column: 26, scope: !9929)
!9931 = !DILocation(line: 4392, column: 3, scope: !9929)
!9932 = !DILocation(line: 4393, column: 25, scope: !9929)
!9933 = !DILocation(line: 4393, column: 55, scope: !9929)
!9934 = !DILocation(line: 4393, column: 3, scope: !9929)
!9935 = !DILocation(line: 4394, column: 2, scope: !9929)
!9936 = !DILocation(line: 4396, column: 6, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 4396, column: 6)
!9938 = !DILocation(line: 4396, column: 6, scope: !9888)
!9939 = !DILocation(line: 4396, column: 18, scope: !9937)
!9940 = !DILocation(line: 4396, column: 28, scope: !9937)
!9941 = !DILocation(line: 4398, column: 9, scope: !9888)
!9942 = !DILocation(line: 4398, column: 2, scope: !9888)
!9943 = !DILocalVariable(name: "ot", arg: 1, scope: !3855, file: !3, line: 4462, type: !3605)
!9944 = !DILocation(line: 4462, column: 50, scope: !3855)
!9945 = !DILocation(line: 4471, column: 2, scope: !3855)
!9946 = !DILocation(line: 4471, column: 6, scope: !3855)
!9947 = !DILocation(line: 4471, column: 11, scope: !3855)
!9948 = !DILocation(line: 4472, column: 2, scope: !3855)
!9949 = !DILocation(line: 4472, column: 6, scope: !3855)
!9950 = !DILocation(line: 4472, column: 13, scope: !3855)
!9951 = !DILocation(line: 4473, column: 2, scope: !3855)
!9952 = !DILocation(line: 4473, column: 6, scope: !3855)
!9953 = !DILocation(line: 4473, column: 18, scope: !3855)
!9954 = !DILocation(line: 4476, column: 2, scope: !3855)
!9955 = !DILocation(line: 4476, column: 6, scope: !3855)
!9956 = !DILocation(line: 4476, column: 11, scope: !3855)
!9957 = !DILocation(line: 4477, column: 2, scope: !3855)
!9958 = !DILocation(line: 4477, column: 6, scope: !3855)
!9959 = !DILocation(line: 4477, column: 11, scope: !3855)
!9960 = !DILocation(line: 4480, column: 2, scope: !3855)
!9961 = !DILocation(line: 4480, column: 6, scope: !3855)
!9962 = !DILocation(line: 4480, column: 11, scope: !3855)
!9963 = !DILocation(line: 4482, column: 15, scope: !3855)
!9964 = !DILocation(line: 4482, column: 19, scope: !3855)
!9965 = !DILocation(line: 4482, column: 2, scope: !3855)
!9966 = !DILocation(line: 4483, column: 1, scope: !3855)
!9967 = distinct !DISubprogram(name: "vgroup_move_exec", scope: !3, file: !3, line: 4423, type: !7729, scopeLine: 4424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!9968 = !DILocalVariable(name: "C", arg: 1, scope: !9967, file: !3, line: 4423, type: !7700)
!9969 = !DILocation(line: 4423, column: 39, scope: !9967)
!9970 = !DILocalVariable(name: "op", arg: 2, scope: !9967, file: !3, line: 4423, type: !7731)
!9971 = !DILocation(line: 4423, column: 54, scope: !9967)
!9972 = !DILocalVariable(name: "ob", scope: !9967, file: !3, line: 4425, type: !3872)
!9973 = !DILocation(line: 4425, column: 10, scope: !9967)
!9974 = !DILocation(line: 4425, column: 33, scope: !9967)
!9975 = !DILocation(line: 4425, column: 15, scope: !9967)
!9976 = !DILocalVariable(name: "def", scope: !9967, file: !3, line: 4426, type: !1368)
!9977 = !DILocation(line: 4426, column: 16, scope: !9967)
!9978 = !DILocalVariable(name: "name_array", scope: !9967, file: !3, line: 4427, type: !1381)
!9979 = !DILocation(line: 4427, column: 8, scope: !9967)
!9980 = !DILocalVariable(name: "dir", scope: !9967, file: !3, line: 4428, type: !354)
!9981 = !DILocation(line: 4428, column: 6, scope: !9967)
!9982 = !DILocation(line: 4428, column: 25, scope: !9967)
!9983 = !DILocation(line: 4428, column: 29, scope: !9967)
!9984 = !DILocation(line: 4428, column: 12, scope: !9967)
!9985 = !DILocalVariable(name: "ret", scope: !9967, file: !3, line: 4428, type: !354)
!9986 = !DILocation(line: 4428, column: 48, scope: !9967)
!9987 = !DILocation(line: 4430, column: 22, scope: !9967)
!9988 = !DILocation(line: 4430, column: 26, scope: !9967)
!9989 = !DILocation(line: 4430, column: 35, scope: !9967)
!9990 = !DILocation(line: 4430, column: 39, scope: !9967)
!9991 = !DILocation(line: 4430, column: 46, scope: !9967)
!9992 = !DILocation(line: 4430, column: 8, scope: !9967)
!9993 = !DILocation(line: 4430, column: 6, scope: !9967)
!9994 = !DILocation(line: 4431, column: 7, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 4431, column: 6)
!9996 = !DILocation(line: 4431, column: 6, scope: !9967)
!9997 = !DILocation(line: 4432, column: 3, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 4431, column: 12)
!9999 = !DILocation(line: 4435, column: 33, scope: !9967)
!10000 = !DILocation(line: 4435, column: 15, scope: !9967)
!10001 = !DILocation(line: 4435, column: 13, scope: !9967)
!10002 = !DILocation(line: 4437, column: 6, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 4437, column: 6)
!10004 = !DILocation(line: 4437, column: 10, scope: !10003)
!10005 = !DILocation(line: 4437, column: 6, scope: !9967)
!10006 = !DILocalVariable(name: "prev", scope: !10007, file: !3, line: 4438, type: !1226)
!10007 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 4437, column: 16)
!10008 = !DILocation(line: 4438, column: 9, scope: !10007)
!10009 = !DILocation(line: 4438, column: 16, scope: !10007)
!10010 = !DILocation(line: 4438, column: 21, scope: !10007)
!10011 = !DILocation(line: 4440, column: 16, scope: !10007)
!10012 = !DILocation(line: 4440, column: 20, scope: !10007)
!10013 = !DILocation(line: 4440, column: 29, scope: !10007)
!10014 = !DILocation(line: 4440, column: 3, scope: !10007)
!10015 = !DILocation(line: 4441, column: 25, scope: !10007)
!10016 = !DILocation(line: 4441, column: 29, scope: !10007)
!10017 = !DILocation(line: 4441, column: 38, scope: !10007)
!10018 = !DILocation(line: 4441, column: 44, scope: !10007)
!10019 = !DILocation(line: 4441, column: 3, scope: !10007)
!10020 = !DILocation(line: 4442, column: 2, scope: !10007)
!10021 = !DILocalVariable(name: "next", scope: !10022, file: !3, line: 4444, type: !1226)
!10022 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 4443, column: 7)
!10023 = !DILocation(line: 4444, column: 9, scope: !10022)
!10024 = !DILocation(line: 4444, column: 16, scope: !10022)
!10025 = !DILocation(line: 4444, column: 21, scope: !10022)
!10026 = !DILocation(line: 4446, column: 16, scope: !10022)
!10027 = !DILocation(line: 4446, column: 20, scope: !10022)
!10028 = !DILocation(line: 4446, column: 29, scope: !10022)
!10029 = !DILocation(line: 4446, column: 3, scope: !10022)
!10030 = !DILocation(line: 4447, column: 24, scope: !10022)
!10031 = !DILocation(line: 4447, column: 28, scope: !10022)
!10032 = !DILocation(line: 4447, column: 37, scope: !10022)
!10033 = !DILocation(line: 4447, column: 43, scope: !10022)
!10034 = !DILocation(line: 4447, column: 3, scope: !10022)
!10035 = !DILocation(line: 4450, column: 24, scope: !9967)
!10036 = !DILocation(line: 4450, column: 28, scope: !9967)
!10037 = !DILocation(line: 4450, column: 40, scope: !9967)
!10038 = !DILocation(line: 4450, column: 8, scope: !9967)
!10039 = !DILocation(line: 4450, column: 6, scope: !9967)
!10040 = !DILocation(line: 4452, column: 6, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 4452, column: 6)
!10042 = !DILocation(line: 4452, column: 6, scope: !9967)
!10043 = !DILocation(line: 4452, column: 18, scope: !10041)
!10044 = !DILocation(line: 4452, column: 28, scope: !10041)
!10045 = !DILocation(line: 4454, column: 6, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 4454, column: 6)
!10047 = !DILocation(line: 4454, column: 10, scope: !10046)
!10048 = !DILocation(line: 4454, column: 6, scope: !9967)
!10049 = !DILocation(line: 4455, column: 22, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10046, file: !3, line: 4454, column: 33)
!10051 = !DILocation(line: 4455, column: 26, scope: !10050)
!10052 = !DILocation(line: 4455, column: 3, scope: !10050)
!10053 = !DILocation(line: 4456, column: 25, scope: !10050)
!10054 = !DILocation(line: 4456, column: 55, scope: !10050)
!10055 = !DILocation(line: 4456, column: 3, scope: !10050)
!10056 = !DILocation(line: 4457, column: 2, scope: !10050)
!10057 = !DILocation(line: 4459, column: 9, scope: !9967)
!10058 = !DILocation(line: 4459, column: 2, scope: !9967)
!10059 = !DILocation(line: 4460, column: 1, scope: !9967)
!10060 = distinct !DISubprogram(name: "OBJECT_OT_vertex_weight_paste", scope: !3, file: !3, line: 4586, type: !3603, scopeLine: 4587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10061 = !DILocalVariable(name: "ot", arg: 1, scope: !10060, file: !3, line: 4586, type: !3605)
!10062 = !DILocation(line: 4586, column: 52, scope: !10060)
!10063 = !DILocalVariable(name: "prop", scope: !10060, file: !3, line: 4588, type: !3792)
!10064 = !DILocation(line: 4588, column: 15, scope: !10060)
!10065 = !DILocation(line: 4590, column: 2, scope: !10060)
!10066 = !DILocation(line: 4590, column: 6, scope: !10060)
!10067 = !DILocation(line: 4590, column: 11, scope: !10060)
!10068 = !DILocation(line: 4591, column: 2, scope: !10060)
!10069 = !DILocation(line: 4591, column: 6, scope: !10060)
!10070 = !DILocation(line: 4591, column: 13, scope: !10060)
!10071 = !DILocation(line: 4592, column: 2, scope: !10060)
!10072 = !DILocation(line: 4592, column: 6, scope: !10060)
!10073 = !DILocation(line: 4592, column: 18, scope: !10060)
!10074 = !DILocation(line: 4595, column: 2, scope: !10060)
!10075 = !DILocation(line: 4595, column: 6, scope: !10060)
!10076 = !DILocation(line: 4595, column: 11, scope: !10060)
!10077 = !DILocation(line: 4596, column: 2, scope: !10060)
!10078 = !DILocation(line: 4596, column: 6, scope: !10060)
!10079 = !DILocation(line: 4596, column: 11, scope: !10060)
!10080 = !DILocation(line: 4599, column: 2, scope: !10060)
!10081 = !DILocation(line: 4599, column: 6, scope: !10060)
!10082 = !DILocation(line: 4599, column: 11, scope: !10060)
!10083 = !DILocation(line: 4601, column: 21, scope: !10060)
!10084 = !DILocation(line: 4601, column: 25, scope: !10060)
!10085 = !DILocation(line: 4601, column: 9, scope: !10060)
!10086 = !DILocation(line: 4601, column: 7, scope: !10060)
!10087 = !DILocation(line: 4603, column: 24, scope: !10060)
!10088 = !DILocation(line: 4603, column: 2, scope: !10060)
!10089 = !DILocation(line: 4604, column: 1, scope: !10060)
!10090 = distinct !DISubprogram(name: "vertex_group_vert_select_mesh_poll", scope: !3, file: !3, line: 3209, type: !7698, scopeLine: 3210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10091 = !DILocalVariable(name: "C", arg: 1, scope: !10090, file: !3, line: 3209, type: !7700)
!10092 = !DILocation(line: 3209, column: 57, scope: !10090)
!10093 = !DILocalVariable(name: "ob", scope: !10090, file: !3, line: 3211, type: !3872)
!10094 = !DILocation(line: 3211, column: 10, scope: !10090)
!10095 = !DILocation(line: 3211, column: 33, scope: !10090)
!10096 = !DILocation(line: 3211, column: 15, scope: !10090)
!10097 = !DILocalVariable(name: "data", scope: !10090, file: !3, line: 3212, type: !1247)
!10098 = !DILocation(line: 3212, column: 6, scope: !10090)
!10099 = !DILocation(line: 3212, column: 14, scope: !10090)
!10100 = !DILocation(line: 3212, column: 13, scope: !10090)
!10101 = !DILocation(line: 3212, column: 20, scope: !10090)
!10102 = !DILocation(line: 3212, column: 24, scope: !10090)
!10103 = !DILocation(line: 3214, column: 8, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 3214, column: 6)
!10105 = !DILocation(line: 3214, column: 11, scope: !10104)
!10106 = !DILocation(line: 3214, column: 15, scope: !10104)
!10107 = !DILocation(line: 3214, column: 19, scope: !10104)
!10108 = !DILocation(line: 3214, column: 22, scope: !10104)
!10109 = !DILocation(line: 3214, column: 26, scope: !10104)
!10110 = !DILocation(line: 3214, column: 29, scope: !10104)
!10111 = !DILocation(line: 3214, column: 34, scope: !10104)
!10112 = !DILocation(line: 3214, column: 38, scope: !10104)
!10113 = !DILocation(line: 3214, column: 44, scope: !10104)
!10114 = !DILocation(line: 3214, column: 6, scope: !10090)
!10115 = !DILocation(line: 3215, column: 3, scope: !10104)
!10116 = !DILocation(line: 3218, column: 6, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 3218, column: 6)
!10118 = !DILocation(line: 3218, column: 10, scope: !10117)
!10119 = !DILocation(line: 3218, column: 15, scope: !10117)
!10120 = !DILocation(line: 3218, column: 6, scope: !10090)
!10121 = !DILocation(line: 3219, column: 3, scope: !10117)
!10122 = !DILocation(line: 3221, column: 43, scope: !10090)
!10123 = !DILocation(line: 3221, column: 10, scope: !10090)
!10124 = !DILocation(line: 3221, column: 47, scope: !10090)
!10125 = !DILocation(line: 3222, column: 46, scope: !10090)
!10126 = !DILocation(line: 3222, column: 10, scope: !10090)
!10127 = !DILocation(line: 3221, column: 2, scope: !10090)
!10128 = !DILocation(line: 3223, column: 1, scope: !10090)
!10129 = distinct !DISubprogram(name: "vertex_weight_paste_exec", scope: !3, file: !3, line: 4569, type: !7729, scopeLine: 4570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10130 = !DILocalVariable(name: "C", arg: 1, scope: !10129, file: !3, line: 4569, type: !7700)
!10131 = !DILocation(line: 4569, column: 47, scope: !10129)
!10132 = !DILocalVariable(name: "op", arg: 2, scope: !10129, file: !3, line: 4569, type: !7731)
!10133 = !DILocation(line: 4569, column: 62, scope: !10129)
!10134 = !DILocalVariable(name: "ob", scope: !10129, file: !3, line: 4571, type: !3872)
!10135 = !DILocation(line: 4571, column: 10, scope: !10129)
!10136 = !DILocation(line: 4571, column: 33, scope: !10129)
!10137 = !DILocation(line: 4571, column: 15, scope: !10129)
!10138 = !DILocalVariable(name: "def_nr", scope: !10129, file: !3, line: 4572, type: !4075)
!10139 = !DILocation(line: 4572, column: 12, scope: !10129)
!10140 = !DILocation(line: 4572, column: 33, scope: !10129)
!10141 = !DILocation(line: 4572, column: 37, scope: !10129)
!10142 = !DILocation(line: 4572, column: 21, scope: !10129)
!10143 = !DILocation(line: 4574, column: 37, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 4574, column: 6)
!10145 = !DILocation(line: 4574, column: 41, scope: !10144)
!10146 = !DILocation(line: 4574, column: 45, scope: !10144)
!10147 = !DILocation(line: 4574, column: 7, scope: !10144)
!10148 = !DILocation(line: 4574, column: 6, scope: !10129)
!10149 = !DILocation(line: 4575, column: 3, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 4574, column: 54)
!10151 = !DILocation(line: 4578, column: 35, scope: !10129)
!10152 = !DILocation(line: 4578, column: 39, scope: !10129)
!10153 = !DILocation(line: 4578, column: 2, scope: !10129)
!10154 = !DILocation(line: 4580, column: 21, scope: !10129)
!10155 = !DILocation(line: 4580, column: 25, scope: !10129)
!10156 = !DILocation(line: 4580, column: 2, scope: !10129)
!10157 = !DILocation(line: 4581, column: 24, scope: !10129)
!10158 = !DILocation(line: 4581, column: 48, scope: !10129)
!10159 = !DILocation(line: 4581, column: 2, scope: !10129)
!10160 = !DILocation(line: 4583, column: 2, scope: !10129)
!10161 = !DILocation(line: 4584, column: 1, scope: !10129)
!10162 = distinct !DISubprogram(name: "OBJECT_OT_vertex_weight_delete", scope: !3, file: !3, line: 4623, type: !3603, scopeLine: 4624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10163 = !DILocalVariable(name: "ot", arg: 1, scope: !10162, file: !3, line: 4623, type: !3605)
!10164 = !DILocation(line: 4623, column: 53, scope: !10162)
!10165 = !DILocalVariable(name: "prop", scope: !10162, file: !3, line: 4625, type: !3792)
!10166 = !DILocation(line: 4625, column: 15, scope: !10162)
!10167 = !DILocation(line: 4627, column: 2, scope: !10162)
!10168 = !DILocation(line: 4627, column: 6, scope: !10162)
!10169 = !DILocation(line: 4627, column: 11, scope: !10162)
!10170 = !DILocation(line: 4628, column: 2, scope: !10162)
!10171 = !DILocation(line: 4628, column: 6, scope: !10162)
!10172 = !DILocation(line: 4628, column: 13, scope: !10162)
!10173 = !DILocation(line: 4629, column: 2, scope: !10162)
!10174 = !DILocation(line: 4629, column: 6, scope: !10162)
!10175 = !DILocation(line: 4629, column: 18, scope: !10162)
!10176 = !DILocation(line: 4632, column: 2, scope: !10162)
!10177 = !DILocation(line: 4632, column: 6, scope: !10162)
!10178 = !DILocation(line: 4632, column: 11, scope: !10162)
!10179 = !DILocation(line: 4633, column: 2, scope: !10162)
!10180 = !DILocation(line: 4633, column: 6, scope: !10162)
!10181 = !DILocation(line: 4633, column: 11, scope: !10162)
!10182 = !DILocation(line: 4636, column: 2, scope: !10162)
!10183 = !DILocation(line: 4636, column: 6, scope: !10162)
!10184 = !DILocation(line: 4636, column: 11, scope: !10162)
!10185 = !DILocation(line: 4638, column: 21, scope: !10162)
!10186 = !DILocation(line: 4638, column: 25, scope: !10162)
!10187 = !DILocation(line: 4638, column: 9, scope: !10162)
!10188 = !DILocation(line: 4638, column: 7, scope: !10162)
!10189 = !DILocation(line: 4640, column: 24, scope: !10162)
!10190 = !DILocation(line: 4640, column: 2, scope: !10162)
!10191 = !DILocation(line: 4641, column: 1, scope: !10162)
!10192 = distinct !DISubprogram(name: "vertex_weight_delete_exec", scope: !3, file: !3, line: 4606, type: !7729, scopeLine: 4607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10193 = !DILocalVariable(name: "C", arg: 1, scope: !10192, file: !3, line: 4606, type: !7700)
!10194 = !DILocation(line: 4606, column: 48, scope: !10192)
!10195 = !DILocalVariable(name: "op", arg: 2, scope: !10192, file: !3, line: 4606, type: !7731)
!10196 = !DILocation(line: 4606, column: 63, scope: !10192)
!10197 = !DILocalVariable(name: "ob", scope: !10192, file: !3, line: 4608, type: !3872)
!10198 = !DILocation(line: 4608, column: 10, scope: !10192)
!10199 = !DILocation(line: 4608, column: 33, scope: !10192)
!10200 = !DILocation(line: 4608, column: 15, scope: !10192)
!10201 = !DILocalVariable(name: "def_nr", scope: !10192, file: !3, line: 4609, type: !4075)
!10202 = !DILocation(line: 4609, column: 12, scope: !10192)
!10203 = !DILocation(line: 4609, column: 33, scope: !10192)
!10204 = !DILocation(line: 4609, column: 37, scope: !10192)
!10205 = !DILocation(line: 4609, column: 21, scope: !10192)
!10206 = !DILocation(line: 4611, column: 37, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 4611, column: 6)
!10208 = !DILocation(line: 4611, column: 41, scope: !10207)
!10209 = !DILocation(line: 4611, column: 45, scope: !10207)
!10210 = !DILocation(line: 4611, column: 7, scope: !10207)
!10211 = !DILocation(line: 4611, column: 6, scope: !10192)
!10212 = !DILocation(line: 4612, column: 3, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 4611, column: 54)
!10214 = !DILocation(line: 4615, column: 23, scope: !10192)
!10215 = !DILocation(line: 4615, column: 27, scope: !10192)
!10216 = !DILocation(line: 4615, column: 2, scope: !10192)
!10217 = !DILocation(line: 4617, column: 21, scope: !10192)
!10218 = !DILocation(line: 4617, column: 25, scope: !10192)
!10219 = !DILocation(line: 4617, column: 2, scope: !10192)
!10220 = !DILocation(line: 4618, column: 24, scope: !10192)
!10221 = !DILocation(line: 4618, column: 48, scope: !10192)
!10222 = !DILocation(line: 4618, column: 2, scope: !10192)
!10223 = !DILocation(line: 4620, column: 2, scope: !10192)
!10224 = !DILocation(line: 4621, column: 1, scope: !10192)
!10225 = distinct !DISubprogram(name: "OBJECT_OT_vertex_weight_set_active", scope: !3, file: !3, line: 4657, type: !3603, scopeLine: 4658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10226 = !DILocalVariable(name: "ot", arg: 1, scope: !10225, file: !3, line: 4657, type: !3605)
!10227 = !DILocation(line: 4657, column: 57, scope: !10225)
!10228 = !DILocalVariable(name: "prop", scope: !10225, file: !3, line: 4659, type: !3792)
!10229 = !DILocation(line: 4659, column: 15, scope: !10225)
!10230 = !DILocation(line: 4661, column: 2, scope: !10225)
!10231 = !DILocation(line: 4661, column: 6, scope: !10225)
!10232 = !DILocation(line: 4661, column: 11, scope: !10225)
!10233 = !DILocation(line: 4662, column: 2, scope: !10225)
!10234 = !DILocation(line: 4662, column: 6, scope: !10225)
!10235 = !DILocation(line: 4662, column: 13, scope: !10225)
!10236 = !DILocation(line: 4663, column: 2, scope: !10225)
!10237 = !DILocation(line: 4663, column: 6, scope: !10225)
!10238 = !DILocation(line: 4663, column: 18, scope: !10225)
!10239 = !DILocation(line: 4666, column: 2, scope: !10225)
!10240 = !DILocation(line: 4666, column: 6, scope: !10225)
!10241 = !DILocation(line: 4666, column: 11, scope: !10225)
!10242 = !DILocation(line: 4667, column: 2, scope: !10225)
!10243 = !DILocation(line: 4667, column: 6, scope: !10225)
!10244 = !DILocation(line: 4667, column: 11, scope: !10225)
!10245 = !DILocation(line: 4670, column: 2, scope: !10225)
!10246 = !DILocation(line: 4670, column: 6, scope: !10225)
!10247 = !DILocation(line: 4670, column: 11, scope: !10225)
!10248 = !DILocation(line: 4672, column: 21, scope: !10225)
!10249 = !DILocation(line: 4672, column: 25, scope: !10225)
!10250 = !DILocation(line: 4672, column: 9, scope: !10225)
!10251 = !DILocation(line: 4672, column: 7, scope: !10225)
!10252 = !DILocation(line: 4674, column: 24, scope: !10225)
!10253 = !DILocation(line: 4674, column: 2, scope: !10225)
!10254 = !DILocation(line: 4675, column: 1, scope: !10225)
!10255 = distinct !DISubprogram(name: "vertex_weight_set_active_exec", scope: !3, file: !3, line: 4643, type: !7729, scopeLine: 4644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10256 = !DILocalVariable(name: "C", arg: 1, scope: !10255, file: !3, line: 4643, type: !7700)
!10257 = !DILocation(line: 4643, column: 52, scope: !10255)
!10258 = !DILocalVariable(name: "op", arg: 2, scope: !10255, file: !3, line: 4643, type: !7731)
!10259 = !DILocation(line: 4643, column: 67, scope: !10255)
!10260 = !DILocalVariable(name: "ob", scope: !10255, file: !3, line: 4645, type: !3872)
!10261 = !DILocation(line: 4645, column: 10, scope: !10255)
!10262 = !DILocation(line: 4645, column: 33, scope: !10255)
!10263 = !DILocation(line: 4645, column: 15, scope: !10255)
!10264 = !DILocalVariable(name: "wg_index", scope: !10255, file: !3, line: 4646, type: !4075)
!10265 = !DILocation(line: 4646, column: 12, scope: !10255)
!10266 = !DILocation(line: 4646, column: 35, scope: !10255)
!10267 = !DILocation(line: 4646, column: 39, scope: !10255)
!10268 = !DILocation(line: 4646, column: 23, scope: !10255)
!10269 = !DILocation(line: 4648, column: 6, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 4648, column: 6)
!10271 = !DILocation(line: 4648, column: 15, scope: !10270)
!10272 = !DILocation(line: 4648, column: 6, scope: !10255)
!10273 = !DILocation(line: 4649, column: 16, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 4648, column: 22)
!10275 = !DILocation(line: 4649, column: 25, scope: !10274)
!10276 = !DILocation(line: 4649, column: 3, scope: !10274)
!10277 = !DILocation(line: 4649, column: 7, scope: !10274)
!10278 = !DILocation(line: 4649, column: 14, scope: !10274)
!10279 = !DILocation(line: 4650, column: 22, scope: !10274)
!10280 = !DILocation(line: 4650, column: 26, scope: !10274)
!10281 = !DILocation(line: 4650, column: 3, scope: !10274)
!10282 = !DILocation(line: 4651, column: 25, scope: !10274)
!10283 = !DILocation(line: 4651, column: 49, scope: !10274)
!10284 = !DILocation(line: 4651, column: 3, scope: !10274)
!10285 = !DILocation(line: 4652, column: 2, scope: !10274)
!10286 = !DILocation(line: 4654, column: 2, scope: !10255)
!10287 = distinct !DISubprogram(name: "OBJECT_OT_vertex_weight_normalize_active_vertex", scope: !3, file: !3, line: 4691, type: !3603, scopeLine: 4692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10288 = !DILocalVariable(name: "ot", arg: 1, scope: !10287, file: !3, line: 4691, type: !3605)
!10289 = !DILocation(line: 4691, column: 70, scope: !10287)
!10290 = !DILocation(line: 4694, column: 2, scope: !10287)
!10291 = !DILocation(line: 4694, column: 6, scope: !10287)
!10292 = !DILocation(line: 4694, column: 11, scope: !10287)
!10293 = !DILocation(line: 4695, column: 2, scope: !10287)
!10294 = !DILocation(line: 4695, column: 6, scope: !10287)
!10295 = !DILocation(line: 4695, column: 13, scope: !10287)
!10296 = !DILocation(line: 4696, column: 2, scope: !10287)
!10297 = !DILocation(line: 4696, column: 6, scope: !10287)
!10298 = !DILocation(line: 4696, column: 18, scope: !10287)
!10299 = !DILocation(line: 4699, column: 2, scope: !10287)
!10300 = !DILocation(line: 4699, column: 6, scope: !10287)
!10301 = !DILocation(line: 4699, column: 11, scope: !10287)
!10302 = !DILocation(line: 4700, column: 2, scope: !10287)
!10303 = !DILocation(line: 4700, column: 6, scope: !10287)
!10304 = !DILocation(line: 4700, column: 11, scope: !10287)
!10305 = !DILocation(line: 4703, column: 2, scope: !10287)
!10306 = !DILocation(line: 4703, column: 6, scope: !10287)
!10307 = !DILocation(line: 4703, column: 11, scope: !10287)
!10308 = !DILocation(line: 4704, column: 1, scope: !10287)
!10309 = distinct !DISubprogram(name: "vertex_weight_normalize_active_vertex_exec", scope: !3, file: !3, line: 4677, type: !7729, scopeLine: 4678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10310 = !DILocalVariable(name: "C", arg: 1, scope: !10309, file: !3, line: 4677, type: !7700)
!10311 = !DILocation(line: 4677, column: 65, scope: !10309)
!10312 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !10309, file: !3, line: 4677, type: !7731)
!10313 = !DILocation(line: 4677, column: 80, scope: !10309)
!10314 = !DILocalVariable(name: "ob", scope: !10309, file: !3, line: 4679, type: !3872)
!10315 = !DILocation(line: 4679, column: 10, scope: !10309)
!10316 = !DILocation(line: 4679, column: 33, scope: !10309)
!10317 = !DILocation(line: 4679, column: 15, scope: !10309)
!10318 = !DILocalVariable(name: "ts", scope: !10309, file: !3, line: 4680, type: !7928)
!10319 = !DILocation(line: 4680, column: 16, scope: !10309)
!10320 = !DILocation(line: 4680, column: 44, scope: !10309)
!10321 = !DILocation(line: 4680, column: 21, scope: !10309)
!10322 = !DILocalVariable(name: "subset_type", scope: !10309, file: !3, line: 4681, type: !6851)
!10323 = !DILocation(line: 4681, column: 16, scope: !10309)
!10324 = !DILocation(line: 4681, column: 30, scope: !10309)
!10325 = !DILocation(line: 4681, column: 34, scope: !10309)
!10326 = !DILocation(line: 4683, column: 26, scope: !10309)
!10327 = !DILocation(line: 4683, column: 30, scope: !10309)
!10328 = !DILocation(line: 4683, column: 2, scope: !10309)
!10329 = !DILocation(line: 4685, column: 21, scope: !10309)
!10330 = !DILocation(line: 4685, column: 25, scope: !10309)
!10331 = !DILocation(line: 4685, column: 2, scope: !10309)
!10332 = !DILocation(line: 4686, column: 24, scope: !10309)
!10333 = !DILocation(line: 4686, column: 48, scope: !10309)
!10334 = !DILocation(line: 4686, column: 2, scope: !10309)
!10335 = !DILocation(line: 4688, column: 2, scope: !10309)
!10336 = distinct !DISubprogram(name: "OBJECT_OT_vertex_weight_copy", scope: !3, file: !3, line: 4720, type: !3603, scopeLine: 4721, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10337 = !DILocalVariable(name: "ot", arg: 1, scope: !10336, file: !3, line: 4720, type: !3605)
!10338 = !DILocation(line: 4720, column: 51, scope: !10336)
!10339 = !DILocation(line: 4723, column: 2, scope: !10336)
!10340 = !DILocation(line: 4723, column: 6, scope: !10336)
!10341 = !DILocation(line: 4723, column: 11, scope: !10336)
!10342 = !DILocation(line: 4724, column: 2, scope: !10336)
!10343 = !DILocation(line: 4724, column: 6, scope: !10336)
!10344 = !DILocation(line: 4724, column: 13, scope: !10336)
!10345 = !DILocation(line: 4725, column: 2, scope: !10336)
!10346 = !DILocation(line: 4725, column: 6, scope: !10336)
!10347 = !DILocation(line: 4725, column: 18, scope: !10336)
!10348 = !DILocation(line: 4728, column: 2, scope: !10336)
!10349 = !DILocation(line: 4728, column: 6, scope: !10336)
!10350 = !DILocation(line: 4728, column: 11, scope: !10336)
!10351 = !DILocation(line: 4729, column: 2, scope: !10336)
!10352 = !DILocation(line: 4729, column: 6, scope: !10336)
!10353 = !DILocation(line: 4729, column: 11, scope: !10336)
!10354 = !DILocation(line: 4732, column: 2, scope: !10336)
!10355 = !DILocation(line: 4732, column: 6, scope: !10336)
!10356 = !DILocation(line: 4732, column: 11, scope: !10336)
!10357 = !DILocation(line: 4733, column: 1, scope: !10336)
!10358 = distinct !DISubprogram(name: "vertex_weight_copy_exec", scope: !3, file: !3, line: 4706, type: !7729, scopeLine: 4707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10359 = !DILocalVariable(name: "C", arg: 1, scope: !10358, file: !3, line: 4706, type: !7700)
!10360 = !DILocation(line: 4706, column: 46, scope: !10358)
!10361 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !10358, file: !3, line: 4706, type: !7731)
!10362 = !DILocation(line: 4706, column: 61, scope: !10358)
!10363 = !DILocalVariable(name: "ob", scope: !10358, file: !3, line: 4708, type: !3872)
!10364 = !DILocation(line: 4708, column: 10, scope: !10358)
!10365 = !DILocation(line: 4708, column: 33, scope: !10358)
!10366 = !DILocation(line: 4708, column: 15, scope: !10358)
!10367 = !DILocalVariable(name: "ts", scope: !10358, file: !3, line: 4709, type: !7928)
!10368 = !DILocation(line: 4709, column: 16, scope: !10358)
!10369 = !DILocation(line: 4709, column: 44, scope: !10358)
!10370 = !DILocation(line: 4709, column: 21, scope: !10358)
!10371 = !DILocalVariable(name: "subset_type", scope: !10358, file: !3, line: 4710, type: !6851)
!10372 = !DILocation(line: 4710, column: 16, scope: !10358)
!10373 = !DILocation(line: 4710, column: 30, scope: !10358)
!10374 = !DILocation(line: 4710, column: 34, scope: !10358)
!10375 = !DILocation(line: 4712, column: 28, scope: !10358)
!10376 = !DILocation(line: 4712, column: 32, scope: !10358)
!10377 = !DILocation(line: 4712, column: 2, scope: !10358)
!10378 = !DILocation(line: 4714, column: 21, scope: !10358)
!10379 = !DILocation(line: 4714, column: 25, scope: !10358)
!10380 = !DILocation(line: 4714, column: 2, scope: !10358)
!10381 = !DILocation(line: 4715, column: 24, scope: !10358)
!10382 = !DILocation(line: 4715, column: 48, scope: !10358)
!10383 = !DILocation(line: 4715, column: 2, scope: !10358)
!10384 = !DILocation(line: 4717, column: 2, scope: !10358)
!10385 = distinct !DISubprogram(name: "BM_iter_init", scope: !5029, file: !5029, line: 53, type: !10386, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10386 = !DISubroutineType(types: !10387)
!10387 = !{!2436, !5032, !1746, !1711, !1226}
!10388 = !DILocalVariable(name: "iter", arg: 1, scope: !10385, file: !5029, line: 53, type: !5032)
!10389 = !DILocation(line: 53, column: 38, scope: !10385)
!10390 = !DILocalVariable(name: "bm", arg: 2, scope: !10385, file: !5029, line: 53, type: !1746)
!10391 = !DILocation(line: 53, column: 51, scope: !10385)
!10392 = !DILocalVariable(name: "itype", arg: 3, scope: !10385, file: !5029, line: 53, type: !1711)
!10393 = !DILocation(line: 53, column: 66, scope: !10385)
!10394 = !DILocalVariable(name: "data", arg: 4, scope: !10385, file: !5029, line: 53, type: !1226)
!10395 = !DILocation(line: 53, column: 79, scope: !10385)
!10396 = !DILocation(line: 56, column: 16, scope: !10385)
!10397 = !DILocation(line: 56, column: 2, scope: !10385)
!10398 = !DILocation(line: 56, column: 8, scope: !10385)
!10399 = !DILocation(line: 56, column: 14, scope: !10385)
!10400 = !DILocation(line: 59, column: 22, scope: !10385)
!10401 = !DILocation(line: 59, column: 10, scope: !10385)
!10402 = !DILocation(line: 59, column: 2, scope: !10385)
!10403 = !DILocation(line: 63, column: 4, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10385, file: !5029, line: 59, column: 29)
!10405 = !DILocation(line: 63, column: 10, scope: !10404)
!10406 = !DILocation(line: 63, column: 16, scope: !10404)
!10407 = !DILocation(line: 64, column: 4, scope: !10404)
!10408 = !DILocation(line: 64, column: 10, scope: !10404)
!10409 = !DILocation(line: 64, column: 16, scope: !10404)
!10410 = !DILocation(line: 65, column: 44, scope: !10404)
!10411 = !DILocation(line: 65, column: 48, scope: !10404)
!10412 = !DILocation(line: 65, column: 4, scope: !10404)
!10413 = !DILocation(line: 65, column: 10, scope: !10404)
!10414 = !DILocation(line: 65, column: 15, scope: !10404)
!10415 = !DILocation(line: 65, column: 28, scope: !10404)
!10416 = !DILocation(line: 65, column: 37, scope: !10404)
!10417 = !DILocation(line: 65, column: 42, scope: !10404)
!10418 = !DILocation(line: 66, column: 4, scope: !10404)
!10419 = !DILocation(line: 70, column: 4, scope: !10404)
!10420 = !DILocation(line: 70, column: 10, scope: !10404)
!10421 = !DILocation(line: 70, column: 16, scope: !10404)
!10422 = !DILocation(line: 71, column: 4, scope: !10404)
!10423 = !DILocation(line: 71, column: 10, scope: !10404)
!10424 = !DILocation(line: 71, column: 16, scope: !10404)
!10425 = !DILocation(line: 72, column: 44, scope: !10404)
!10426 = !DILocation(line: 72, column: 48, scope: !10404)
!10427 = !DILocation(line: 72, column: 4, scope: !10404)
!10428 = !DILocation(line: 72, column: 10, scope: !10404)
!10429 = !DILocation(line: 72, column: 15, scope: !10404)
!10430 = !DILocation(line: 72, column: 28, scope: !10404)
!10431 = !DILocation(line: 72, column: 37, scope: !10404)
!10432 = !DILocation(line: 72, column: 42, scope: !10404)
!10433 = !DILocation(line: 73, column: 4, scope: !10404)
!10434 = !DILocation(line: 77, column: 4, scope: !10404)
!10435 = !DILocation(line: 77, column: 10, scope: !10404)
!10436 = !DILocation(line: 77, column: 16, scope: !10404)
!10437 = !DILocation(line: 78, column: 4, scope: !10404)
!10438 = !DILocation(line: 78, column: 10, scope: !10404)
!10439 = !DILocation(line: 78, column: 16, scope: !10404)
!10440 = !DILocation(line: 79, column: 44, scope: !10404)
!10441 = !DILocation(line: 79, column: 48, scope: !10404)
!10442 = !DILocation(line: 79, column: 4, scope: !10404)
!10443 = !DILocation(line: 79, column: 10, scope: !10404)
!10444 = !DILocation(line: 79, column: 15, scope: !10404)
!10445 = !DILocation(line: 79, column: 28, scope: !10404)
!10446 = !DILocation(line: 79, column: 37, scope: !10404)
!10447 = !DILocation(line: 79, column: 42, scope: !10404)
!10448 = !DILocation(line: 80, column: 4, scope: !10404)
!10449 = !DILocation(line: 84, column: 4, scope: !10404)
!10450 = !DILocation(line: 84, column: 10, scope: !10404)
!10451 = !DILocation(line: 84, column: 16, scope: !10404)
!10452 = !DILocation(line: 85, column: 4, scope: !10404)
!10453 = !DILocation(line: 85, column: 10, scope: !10404)
!10454 = !DILocation(line: 85, column: 16, scope: !10404)
!10455 = !DILocation(line: 86, column: 46, scope: !10404)
!10456 = !DILocation(line: 86, column: 36, scope: !10404)
!10457 = !DILocation(line: 86, column: 4, scope: !10404)
!10458 = !DILocation(line: 86, column: 10, scope: !10404)
!10459 = !DILocation(line: 86, column: 15, scope: !10404)
!10460 = !DILocation(line: 86, column: 28, scope: !10404)
!10461 = !DILocation(line: 86, column: 34, scope: !10404)
!10462 = !DILocation(line: 87, column: 4, scope: !10404)
!10463 = !DILocation(line: 91, column: 4, scope: !10404)
!10464 = !DILocation(line: 91, column: 10, scope: !10404)
!10465 = !DILocation(line: 91, column: 16, scope: !10404)
!10466 = !DILocation(line: 92, column: 4, scope: !10404)
!10467 = !DILocation(line: 92, column: 10, scope: !10404)
!10468 = !DILocation(line: 92, column: 16, scope: !10404)
!10469 = !DILocation(line: 93, column: 46, scope: !10404)
!10470 = !DILocation(line: 93, column: 36, scope: !10404)
!10471 = !DILocation(line: 93, column: 4, scope: !10404)
!10472 = !DILocation(line: 93, column: 10, scope: !10404)
!10473 = !DILocation(line: 93, column: 15, scope: !10404)
!10474 = !DILocation(line: 93, column: 28, scope: !10404)
!10475 = !DILocation(line: 93, column: 34, scope: !10404)
!10476 = !DILocation(line: 94, column: 4, scope: !10404)
!10477 = !DILocation(line: 98, column: 4, scope: !10404)
!10478 = !DILocation(line: 98, column: 10, scope: !10404)
!10479 = !DILocation(line: 98, column: 16, scope: !10404)
!10480 = !DILocation(line: 99, column: 4, scope: !10404)
!10481 = !DILocation(line: 99, column: 10, scope: !10404)
!10482 = !DILocation(line: 99, column: 16, scope: !10404)
!10483 = !DILocation(line: 100, column: 46, scope: !10404)
!10484 = !DILocation(line: 100, column: 36, scope: !10404)
!10485 = !DILocation(line: 100, column: 4, scope: !10404)
!10486 = !DILocation(line: 100, column: 10, scope: !10404)
!10487 = !DILocation(line: 100, column: 15, scope: !10404)
!10488 = !DILocation(line: 100, column: 28, scope: !10404)
!10489 = !DILocation(line: 100, column: 34, scope: !10404)
!10490 = !DILocation(line: 101, column: 4, scope: !10404)
!10491 = !DILocation(line: 105, column: 4, scope: !10404)
!10492 = !DILocation(line: 105, column: 10, scope: !10404)
!10493 = !DILocation(line: 105, column: 16, scope: !10404)
!10494 = !DILocation(line: 106, column: 4, scope: !10404)
!10495 = !DILocation(line: 106, column: 10, scope: !10404)
!10496 = !DILocation(line: 106, column: 16, scope: !10404)
!10497 = !DILocation(line: 107, column: 46, scope: !10404)
!10498 = !DILocation(line: 107, column: 36, scope: !10404)
!10499 = !DILocation(line: 107, column: 4, scope: !10404)
!10500 = !DILocation(line: 107, column: 10, scope: !10404)
!10501 = !DILocation(line: 107, column: 15, scope: !10404)
!10502 = !DILocation(line: 107, column: 28, scope: !10404)
!10503 = !DILocation(line: 107, column: 34, scope: !10404)
!10504 = !DILocation(line: 108, column: 4, scope: !10404)
!10505 = !DILocation(line: 112, column: 4, scope: !10404)
!10506 = !DILocation(line: 112, column: 10, scope: !10404)
!10507 = !DILocation(line: 112, column: 16, scope: !10404)
!10508 = !DILocation(line: 113, column: 4, scope: !10404)
!10509 = !DILocation(line: 113, column: 10, scope: !10404)
!10510 = !DILocation(line: 113, column: 16, scope: !10404)
!10511 = !DILocation(line: 114, column: 46, scope: !10404)
!10512 = !DILocation(line: 114, column: 36, scope: !10404)
!10513 = !DILocation(line: 114, column: 4, scope: !10404)
!10514 = !DILocation(line: 114, column: 10, scope: !10404)
!10515 = !DILocation(line: 114, column: 15, scope: !10404)
!10516 = !DILocation(line: 114, column: 28, scope: !10404)
!10517 = !DILocation(line: 114, column: 34, scope: !10404)
!10518 = !DILocation(line: 115, column: 4, scope: !10404)
!10519 = !DILocation(line: 119, column: 4, scope: !10404)
!10520 = !DILocation(line: 119, column: 10, scope: !10404)
!10521 = !DILocation(line: 119, column: 16, scope: !10404)
!10522 = !DILocation(line: 120, column: 4, scope: !10404)
!10523 = !DILocation(line: 120, column: 10, scope: !10404)
!10524 = !DILocation(line: 120, column: 16, scope: !10404)
!10525 = !DILocation(line: 121, column: 46, scope: !10404)
!10526 = !DILocation(line: 121, column: 36, scope: !10404)
!10527 = !DILocation(line: 121, column: 4, scope: !10404)
!10528 = !DILocation(line: 121, column: 10, scope: !10404)
!10529 = !DILocation(line: 121, column: 15, scope: !10404)
!10530 = !DILocation(line: 121, column: 28, scope: !10404)
!10531 = !DILocation(line: 121, column: 34, scope: !10404)
!10532 = !DILocation(line: 122, column: 4, scope: !10404)
!10533 = !DILocation(line: 126, column: 4, scope: !10404)
!10534 = !DILocation(line: 126, column: 10, scope: !10404)
!10535 = !DILocation(line: 126, column: 16, scope: !10404)
!10536 = !DILocation(line: 127, column: 4, scope: !10404)
!10537 = !DILocation(line: 127, column: 10, scope: !10404)
!10538 = !DILocation(line: 127, column: 16, scope: !10404)
!10539 = !DILocation(line: 128, column: 46, scope: !10404)
!10540 = !DILocation(line: 128, column: 36, scope: !10404)
!10541 = !DILocation(line: 128, column: 4, scope: !10404)
!10542 = !DILocation(line: 128, column: 10, scope: !10404)
!10543 = !DILocation(line: 128, column: 15, scope: !10404)
!10544 = !DILocation(line: 128, column: 28, scope: !10404)
!10545 = !DILocation(line: 128, column: 34, scope: !10404)
!10546 = !DILocation(line: 129, column: 4, scope: !10404)
!10547 = !DILocation(line: 133, column: 4, scope: !10404)
!10548 = !DILocation(line: 133, column: 10, scope: !10404)
!10549 = !DILocation(line: 133, column: 16, scope: !10404)
!10550 = !DILocation(line: 134, column: 4, scope: !10404)
!10551 = !DILocation(line: 134, column: 10, scope: !10404)
!10552 = !DILocation(line: 134, column: 16, scope: !10404)
!10553 = !DILocation(line: 135, column: 46, scope: !10404)
!10554 = !DILocation(line: 135, column: 36, scope: !10404)
!10555 = !DILocation(line: 135, column: 4, scope: !10404)
!10556 = !DILocation(line: 135, column: 10, scope: !10404)
!10557 = !DILocation(line: 135, column: 15, scope: !10404)
!10558 = !DILocation(line: 135, column: 28, scope: !10404)
!10559 = !DILocation(line: 135, column: 34, scope: !10404)
!10560 = !DILocation(line: 136, column: 4, scope: !10404)
!10561 = !DILocation(line: 140, column: 4, scope: !10404)
!10562 = !DILocation(line: 140, column: 10, scope: !10404)
!10563 = !DILocation(line: 140, column: 16, scope: !10404)
!10564 = !DILocation(line: 141, column: 4, scope: !10404)
!10565 = !DILocation(line: 141, column: 10, scope: !10404)
!10566 = !DILocation(line: 141, column: 16, scope: !10404)
!10567 = !DILocation(line: 142, column: 46, scope: !10404)
!10568 = !DILocation(line: 142, column: 36, scope: !10404)
!10569 = !DILocation(line: 142, column: 4, scope: !10404)
!10570 = !DILocation(line: 142, column: 10, scope: !10404)
!10571 = !DILocation(line: 142, column: 15, scope: !10404)
!10572 = !DILocation(line: 142, column: 28, scope: !10404)
!10573 = !DILocation(line: 142, column: 34, scope: !10404)
!10574 = !DILocation(line: 143, column: 4, scope: !10404)
!10575 = !DILocation(line: 147, column: 4, scope: !10404)
!10576 = !DILocation(line: 147, column: 10, scope: !10404)
!10577 = !DILocation(line: 147, column: 16, scope: !10404)
!10578 = !DILocation(line: 148, column: 4, scope: !10404)
!10579 = !DILocation(line: 148, column: 10, scope: !10404)
!10580 = !DILocation(line: 148, column: 16, scope: !10404)
!10581 = !DILocation(line: 149, column: 46, scope: !10404)
!10582 = !DILocation(line: 149, column: 36, scope: !10404)
!10583 = !DILocation(line: 149, column: 4, scope: !10404)
!10584 = !DILocation(line: 149, column: 10, scope: !10404)
!10585 = !DILocation(line: 149, column: 15, scope: !10404)
!10586 = !DILocation(line: 149, column: 28, scope: !10404)
!10587 = !DILocation(line: 149, column: 34, scope: !10404)
!10588 = !DILocation(line: 150, column: 4, scope: !10404)
!10589 = !DILocation(line: 154, column: 4, scope: !10404)
!10590 = !DILocation(line: 158, column: 2, scope: !10385)
!10591 = !DILocation(line: 158, column: 8, scope: !10385)
!10592 = !DILocation(line: 158, column: 14, scope: !10385)
!10593 = !DILocation(line: 160, column: 2, scope: !10385)
!10594 = !DILocation(line: 161, column: 1, scope: !10385)
!10595 = distinct !DISubprogram(name: "mesh_defvert_mirror_update_internal", scope: !3, file: !3, line: 568, type: !10596, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10596 = !DISubroutineType(types: !10597)
!10597 = !{null, !3872, !4203, !4203, !4075}
!10598 = !DILocalVariable(name: "ob", arg: 1, scope: !10595, file: !3, line: 568, type: !3872)
!10599 = !DILocation(line: 568, column: 57, scope: !10595)
!10600 = !DILocalVariable(name: "dvert_dst", arg: 2, scope: !10595, file: !3, line: 569, type: !4203)
!10601 = !DILocation(line: 569, column: 62, scope: !10595)
!10602 = !DILocalVariable(name: "dvert_src", arg: 3, scope: !10595, file: !3, line: 569, type: !4203)
!10603 = !DILocation(line: 569, column: 86, scope: !10595)
!10604 = !DILocalVariable(name: "def_nr", arg: 4, scope: !10595, file: !3, line: 570, type: !4075)
!10605 = !DILocation(line: 570, column: 59, scope: !10595)
!10606 = !DILocation(line: 572, column: 6, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 572, column: 6)
!10608 = !DILocation(line: 572, column: 13, scope: !10607)
!10609 = !DILocation(line: 572, column: 6, scope: !10595)
!10610 = !DILocalVariable(name: "flip_map_len", scope: !10611, file: !3, line: 574, type: !354)
!10611 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 572, column: 20)
!10612 = !DILocation(line: 574, column: 7, scope: !10611)
!10613 = !DILocalVariable(name: "flip_map", scope: !10611, file: !3, line: 575, type: !1972)
!10614 = !DILocation(line: 575, column: 8, scope: !10611)
!10615 = !DILocation(line: 575, column: 37, scope: !10611)
!10616 = !DILocation(line: 575, column: 19, scope: !10611)
!10617 = !DILocation(line: 576, column: 23, scope: !10611)
!10618 = !DILocation(line: 576, column: 34, scope: !10611)
!10619 = !DILocation(line: 576, column: 45, scope: !10611)
!10620 = !DILocation(line: 576, column: 55, scope: !10611)
!10621 = !DILocation(line: 576, column: 3, scope: !10611)
!10622 = !DILocation(line: 577, column: 3, scope: !10611)
!10623 = !DILocation(line: 577, column: 13, scope: !10611)
!10624 = !DILocation(line: 578, column: 2, scope: !10611)
!10625 = !DILocalVariable(name: "dw", scope: !10626, file: !3, line: 581, type: !4449)
!10626 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 579, column: 7)
!10627 = !DILocation(line: 581, column: 18, scope: !10626)
!10628 = !DILocation(line: 581, column: 44, scope: !10626)
!10629 = !DILocation(line: 581, column: 75, scope: !10626)
!10630 = !DILocation(line: 581, column: 79, scope: !10626)
!10631 = !DILocation(line: 581, column: 55, scope: !10626)
!10632 = !DILocation(line: 581, column: 23, scope: !10626)
!10633 = !DILocation(line: 582, column: 7, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10626, file: !3, line: 582, column: 7)
!10635 = !DILocation(line: 582, column: 7, scope: !10626)
!10636 = !DILocation(line: 583, column: 37, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10634, file: !3, line: 582, column: 11)
!10638 = !DILocation(line: 583, column: 48, scope: !10637)
!10639 = !DILocation(line: 583, column: 17, scope: !10637)
!10640 = !DILocation(line: 583, column: 4, scope: !10637)
!10641 = !DILocation(line: 583, column: 8, scope: !10637)
!10642 = !DILocation(line: 583, column: 15, scope: !10637)
!10643 = !DILocation(line: 584, column: 3, scope: !10637)
!10644 = !DILocation(line: 586, column: 1, scope: !10595)
!10645 = distinct !DISubprogram(name: "vgroup_delete_update_users", scope: !3, file: !3, line: 2767, type: !6230, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10646 = !DILocalVariable(name: "ob", arg: 1, scope: !10645, file: !3, line: 2767, type: !3872)
!10647 = !DILocation(line: 2767, column: 48, scope: !10645)
!10648 = !DILocalVariable(name: "id", arg: 2, scope: !10645, file: !3, line: 2767, type: !354)
!10649 = !DILocation(line: 2767, column: 56, scope: !10645)
!10650 = !DILocalVariable(name: "i", scope: !10645, file: !3, line: 2769, type: !354)
!10651 = !DILocation(line: 2769, column: 6, scope: !10645)
!10652 = !DILocalVariable(name: "defbase_tot", scope: !10645, file: !3, line: 2769, type: !354)
!10653 = !DILocation(line: 2769, column: 9, scope: !10645)
!10654 = !DILocation(line: 2769, column: 38, scope: !10645)
!10655 = !DILocation(line: 2769, column: 42, scope: !10645)
!10656 = !DILocation(line: 2769, column: 23, scope: !10645)
!10657 = !DILocation(line: 2769, column: 51, scope: !10645)
!10658 = !DILocalVariable(name: "map", scope: !10645, file: !3, line: 2770, type: !1972)
!10659 = !DILocation(line: 2770, column: 7, scope: !10645)
!10660 = !DILocation(line: 2770, column: 13, scope: !10645)
!10661 = !DILocation(line: 2770, column: 39, scope: !10645)
!10662 = !DILocation(line: 2770, column: 37, scope: !10645)
!10663 = !DILocation(line: 2772, column: 12, scope: !10645)
!10664 = !DILocation(line: 2772, column: 19, scope: !10645)
!10665 = !DILocation(line: 2772, column: 2, scope: !10645)
!10666 = !DILocation(line: 2772, column: 6, scope: !10645)
!10667 = !DILocation(line: 2772, column: 10, scope: !10645)
!10668 = !DILocation(line: 2773, column: 9, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 2773, column: 2)
!10670 = !DILocation(line: 2773, column: 7, scope: !10669)
!10671 = !DILocation(line: 2773, column: 14, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2773, column: 2)
!10673 = !DILocation(line: 2773, column: 18, scope: !10672)
!10674 = !DILocation(line: 2773, column: 16, scope: !10672)
!10675 = !DILocation(line: 2773, column: 2, scope: !10669)
!10676 = !DILocation(line: 2773, column: 36, scope: !10672)
!10677 = !DILocation(line: 2773, column: 27, scope: !10672)
!10678 = !DILocation(line: 2773, column: 31, scope: !10672)
!10679 = !DILocation(line: 2773, column: 34, scope: !10672)
!10680 = !DILocation(line: 2773, column: 23, scope: !10672)
!10681 = !DILocation(line: 2773, column: 2, scope: !10672)
!10682 = distinct !{!10682, !10675, !10683}
!10683 = !DILocation(line: 2773, column: 36, scope: !10669)
!10684 = !DILocation(line: 2774, column: 11, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 2774, column: 2)
!10686 = !DILocation(line: 2774, column: 14, scope: !10685)
!10687 = !DILocation(line: 2774, column: 9, scope: !10685)
!10688 = !DILocation(line: 2774, column: 7, scope: !10685)
!10689 = !DILocation(line: 2774, column: 19, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 2774, column: 2)
!10691 = !DILocation(line: 2774, column: 23, scope: !10690)
!10692 = !DILocation(line: 2774, column: 21, scope: !10690)
!10693 = !DILocation(line: 2774, column: 2, scope: !10685)
!10694 = !DILocation(line: 2774, column: 50, scope: !10690)
!10695 = !DILocation(line: 2774, column: 52, scope: !10690)
!10696 = !DILocation(line: 2774, column: 41, scope: !10690)
!10697 = !DILocation(line: 2774, column: 45, scope: !10690)
!10698 = !DILocation(line: 2774, column: 48, scope: !10690)
!10699 = !DILocation(line: 2774, column: 37, scope: !10690)
!10700 = !DILocation(line: 2774, column: 2, scope: !10690)
!10701 = distinct !{!10701, !10693, !10702}
!10702 = !DILocation(line: 2774, column: 54, scope: !10685)
!10703 = !DILocation(line: 2776, column: 28, scope: !10645)
!10704 = !DILocation(line: 2776, column: 32, scope: !10645)
!10705 = !DILocation(line: 2776, column: 2, scope: !10645)
!10706 = !DILocation(line: 2777, column: 2, scope: !10645)
!10707 = !DILocation(line: 2777, column: 12, scope: !10645)
!10708 = !DILocation(line: 2778, column: 1, scope: !10645)
!10709 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !10710, file: !10710, line: 88, type: !10711, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10710 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10711 = !DISubroutineType(types: !10712)
!10712 = !{!2436, !10713}
!10713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10714, size: 64)
!10714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1294)
!10715 = !DILocalVariable(name: "lb", arg: 1, scope: !10709, file: !10710, line: 88, type: !10713)
!10716 = !DILocation(line: 88, column: 62, scope: !10709)
!10717 = !DILocation(line: 88, column: 76, scope: !10709)
!10718 = !DILocation(line: 88, column: 80, scope: !10709)
!10719 = !DILocation(line: 88, column: 86, scope: !10709)
!10720 = !DILocation(line: 88, column: 75, scope: !10709)
!10721 = !DILocation(line: 88, column: 68, scope: !10709)
!10722 = distinct !DISubprogram(name: "vgroup_active_remove_verts", scope: !3, file: !3, line: 2840, type: !10723, scopeLine: 2841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10723 = !DISubroutineType(types: !10724)
!10724 = !{!2436, !3872, !3381, !1368}
!10725 = !DILocalVariable(name: "ob", arg: 1, scope: !10722, file: !3, line: 2840, type: !3872)
!10726 = !DILocation(line: 2840, column: 48, scope: !10722)
!10727 = !DILocalVariable(name: "allverts", arg: 2, scope: !10722, file: !3, line: 2840, type: !3381)
!10728 = !DILocation(line: 2840, column: 63, scope: !10722)
!10729 = !DILocalVariable(name: "dg", arg: 3, scope: !10722, file: !3, line: 2840, type: !1368)
!10730 = !DILocation(line: 2840, column: 87, scope: !10722)
!10731 = !DILocalVariable(name: "dv", scope: !10722, file: !3, line: 2842, type: !4203)
!10732 = !DILocation(line: 2842, column: 15, scope: !10722)
!10733 = !DILocalVariable(name: "def_nr", scope: !10722, file: !3, line: 2843, type: !4075)
!10734 = !DILocation(line: 2843, column: 12, scope: !10722)
!10735 = !DILocation(line: 2843, column: 36, scope: !10722)
!10736 = !DILocation(line: 2843, column: 40, scope: !10722)
!10737 = !DILocation(line: 2843, column: 49, scope: !10722)
!10738 = !DILocation(line: 2843, column: 21, scope: !10722)
!10739 = !DILocalVariable(name: "changed", scope: !10722, file: !3, line: 2844, type: !2436)
!10740 = !DILocation(line: 2844, column: 7, scope: !10722)
!10741 = !DILocation(line: 2846, column: 6, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 2846, column: 6)
!10743 = !DILocation(line: 2846, column: 10, scope: !10742)
!10744 = !DILocation(line: 2846, column: 15, scope: !10742)
!10745 = !DILocation(line: 2846, column: 6, scope: !10722)
!10746 = !DILocalVariable(name: "me", scope: !10747, file: !3, line: 2847, type: !1383)
!10747 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 2846, column: 27)
!10748 = !DILocation(line: 2847, column: 9, scope: !10747)
!10749 = !DILocation(line: 2847, column: 14, scope: !10747)
!10750 = !DILocation(line: 2847, column: 18, scope: !10747)
!10751 = !DILocation(line: 2849, column: 7, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 2849, column: 7)
!10753 = !DILocation(line: 2849, column: 11, scope: !10752)
!10754 = !DILocation(line: 2849, column: 7, scope: !10747)
!10755 = !DILocalVariable(name: "em", scope: !10756, file: !3, line: 2850, type: !4100)
!10756 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 2849, column: 24)
!10757 = !DILocation(line: 2850, column: 16, scope: !10756)
!10758 = !DILocation(line: 2850, column: 21, scope: !10756)
!10759 = !DILocation(line: 2850, column: 25, scope: !10756)
!10760 = !DILocalVariable(name: "cd_dvert_offset", scope: !10756, file: !3, line: 2851, type: !4075)
!10761 = !DILocation(line: 2851, column: 14, scope: !10756)
!10762 = !DILocation(line: 2851, column: 55, scope: !10756)
!10763 = !DILocation(line: 2851, column: 59, scope: !10756)
!10764 = !DILocation(line: 2851, column: 63, scope: !10756)
!10765 = !DILocation(line: 2851, column: 32, scope: !10756)
!10766 = !DILocation(line: 2853, column: 8, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 2853, column: 8)
!10768 = !DILocation(line: 2853, column: 24, scope: !10767)
!10769 = !DILocation(line: 2853, column: 8, scope: !10756)
!10770 = !DILocalVariable(name: "eve", scope: !10771, file: !3, line: 2854, type: !1627)
!10771 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 2853, column: 31)
!10772 = !DILocation(line: 2854, column: 13, scope: !10771)
!10773 = !DILocalVariable(name: "iter", scope: !10771, file: !3, line: 2855, type: !4112)
!10774 = !DILocation(line: 2855, column: 12, scope: !10771)
!10775 = !DILocation(line: 2857, column: 5, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 2857, column: 5)
!10777 = !DILocation(line: 2857, column: 5, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10776, file: !3, line: 2857, column: 5)
!10779 = !DILocation(line: 2858, column: 11, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10778, file: !3, line: 2857, column: 57)
!10781 = !DILocation(line: 2858, column: 9, scope: !10780)
!10782 = !DILocation(line: 2860, column: 10, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10780, file: !3, line: 2860, column: 10)
!10784 = !DILocation(line: 2860, column: 13, scope: !10783)
!10785 = !DILocation(line: 2860, column: 16, scope: !10783)
!10786 = !DILocation(line: 2860, column: 20, scope: !10783)
!10787 = !DILocation(line: 2860, column: 23, scope: !10783)
!10788 = !DILocation(line: 2860, column: 27, scope: !10783)
!10789 = !DILocation(line: 2860, column: 36, scope: !10783)
!10790 = !DILocation(line: 2860, column: 39, scope: !10783)
!10791 = !DILocation(line: 2860, column: 10, scope: !10780)
!10792 = !DILocalVariable(name: "dw", scope: !10793, file: !3, line: 2861, type: !4449)
!10793 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 2860, column: 80)
!10794 = !DILocation(line: 2861, column: 22, scope: !10793)
!10795 = !DILocation(line: 2861, column: 46, scope: !10793)
!10796 = !DILocation(line: 2861, column: 50, scope: !10793)
!10797 = !DILocation(line: 2861, column: 27, scope: !10793)
!10798 = !DILocation(line: 2862, column: 28, scope: !10793)
!10799 = !DILocation(line: 2862, column: 32, scope: !10793)
!10800 = !DILocation(line: 2862, column: 7, scope: !10793)
!10801 = !DILocation(line: 2863, column: 15, scope: !10793)
!10802 = !DILocation(line: 2864, column: 6, scope: !10793)
!10803 = !DILocation(line: 2865, column: 5, scope: !10780)
!10804 = distinct !{!10804, !10775, !10805}
!10805 = !DILocation(line: 2865, column: 5, scope: !10776)
!10806 = !DILocation(line: 2866, column: 4, scope: !10771)
!10807 = !DILocation(line: 2867, column: 3, scope: !10756)
!10808 = !DILocation(line: 2869, column: 8, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 2869, column: 8)
!10810 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 2868, column: 8)
!10811 = !DILocation(line: 2869, column: 12, scope: !10809)
!10812 = !DILocation(line: 2869, column: 8, scope: !10810)
!10813 = !DILocalVariable(name: "mv", scope: !10814, file: !3, line: 2870, type: !3476)
!10814 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 2869, column: 19)
!10815 = !DILocation(line: 2870, column: 12, scope: !10814)
!10816 = !DILocalVariable(name: "i", scope: !10814, file: !3, line: 2871, type: !354)
!10817 = !DILocation(line: 2871, column: 9, scope: !10814)
!10818 = !DILocation(line: 2873, column: 10, scope: !10814)
!10819 = !DILocation(line: 2873, column: 14, scope: !10814)
!10820 = !DILocation(line: 2873, column: 8, scope: !10814)
!10821 = !DILocation(line: 2874, column: 10, scope: !10814)
!10822 = !DILocation(line: 2874, column: 14, scope: !10814)
!10823 = !DILocation(line: 2874, column: 8, scope: !10814)
!10824 = !DILocation(line: 2876, column: 12, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 2876, column: 5)
!10826 = !DILocation(line: 2876, column: 10, scope: !10825)
!10827 = !DILocation(line: 2876, column: 17, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 2876, column: 5)
!10829 = !DILocation(line: 2876, column: 21, scope: !10828)
!10830 = !DILocation(line: 2876, column: 25, scope: !10828)
!10831 = !DILocation(line: 2876, column: 19, scope: !10828)
!10832 = !DILocation(line: 2876, column: 5, scope: !10825)
!10833 = !DILocation(line: 2877, column: 10, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10835, file: !3, line: 2877, column: 10)
!10835 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 2876, column: 51)
!10836 = !DILocation(line: 2877, column: 14, scope: !10834)
!10837 = !DILocation(line: 2877, column: 19, scope: !10834)
!10838 = !DILocation(line: 2877, column: 10, scope: !10835)
!10839 = !DILocation(line: 2878, column: 11, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 2878, column: 11)
!10841 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 2877, column: 29)
!10842 = !DILocation(line: 2878, column: 15, scope: !10840)
!10843 = !DILocation(line: 2878, column: 18, scope: !10840)
!10844 = !DILocation(line: 2878, column: 22, scope: !10840)
!10845 = !DILocation(line: 2878, column: 31, scope: !10840)
!10846 = !DILocation(line: 2878, column: 35, scope: !10840)
!10847 = !DILocation(line: 2878, column: 39, scope: !10840)
!10848 = !DILocation(line: 2878, column: 44, scope: !10840)
!10849 = !DILocation(line: 2878, column: 11, scope: !10841)
!10850 = !DILocalVariable(name: "dw", scope: !10851, file: !3, line: 2879, type: !4449)
!10851 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 2878, column: 56)
!10852 = !DILocation(line: 2879, column: 23, scope: !10851)
!10853 = !DILocation(line: 2879, column: 47, scope: !10851)
!10854 = !DILocation(line: 2879, column: 51, scope: !10851)
!10855 = !DILocation(line: 2879, column: 28, scope: !10851)
!10856 = !DILocation(line: 2880, column: 29, scope: !10851)
!10857 = !DILocation(line: 2880, column: 33, scope: !10851)
!10858 = !DILocation(line: 2880, column: 8, scope: !10851)
!10859 = !DILocation(line: 2881, column: 16, scope: !10851)
!10860 = !DILocation(line: 2882, column: 7, scope: !10851)
!10861 = !DILocation(line: 2883, column: 6, scope: !10841)
!10862 = !DILocation(line: 2884, column: 5, scope: !10835)
!10863 = !DILocation(line: 2876, column: 35, scope: !10828)
!10864 = !DILocation(line: 2876, column: 41, scope: !10828)
!10865 = !DILocation(line: 2876, column: 47, scope: !10828)
!10866 = !DILocation(line: 2876, column: 5, scope: !10828)
!10867 = distinct !{!10867, !10832, !10868}
!10868 = !DILocation(line: 2884, column: 5, scope: !10825)
!10869 = !DILocation(line: 2885, column: 4, scope: !10814)
!10870 = !DILocation(line: 2887, column: 2, scope: !10747)
!10871 = !DILocation(line: 2888, column: 11, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 2888, column: 11)
!10873 = !DILocation(line: 2888, column: 15, scope: !10872)
!10874 = !DILocation(line: 2888, column: 20, scope: !10872)
!10875 = !DILocation(line: 2888, column: 11, scope: !10742)
!10876 = !DILocalVariable(name: "lt", scope: !10877, file: !3, line: 2889, type: !1227)
!10877 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 2888, column: 35)
!10878 = !DILocation(line: 2889, column: 12, scope: !10877)
!10879 = !DILocation(line: 2889, column: 37, scope: !10877)
!10880 = !DILocation(line: 2889, column: 17, scope: !10877)
!10881 = !DILocation(line: 2891, column: 7, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 2891, column: 7)
!10883 = !DILocation(line: 2891, column: 11, scope: !10882)
!10884 = !DILocation(line: 2891, column: 7, scope: !10877)
!10885 = !DILocalVariable(name: "bp", scope: !10886, file: !3, line: 2892, type: !4257)
!10886 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 2891, column: 18)
!10887 = !DILocation(line: 2892, column: 12, scope: !10886)
!10888 = !DILocalVariable(name: "i", scope: !10886, file: !3, line: 2893, type: !354)
!10889 = !DILocation(line: 2893, column: 8, scope: !10886)
!10890 = !DILocalVariable(name: "tot", scope: !10886, file: !3, line: 2893, type: !354)
!10891 = !DILocation(line: 2893, column: 11, scope: !10886)
!10892 = !DILocation(line: 2893, column: 17, scope: !10886)
!10893 = !DILocation(line: 2893, column: 21, scope: !10886)
!10894 = !DILocation(line: 2893, column: 29, scope: !10886)
!10895 = !DILocation(line: 2893, column: 33, scope: !10886)
!10896 = !DILocation(line: 2893, column: 27, scope: !10886)
!10897 = !DILocation(line: 2893, column: 41, scope: !10886)
!10898 = !DILocation(line: 2893, column: 45, scope: !10886)
!10899 = !DILocation(line: 2893, column: 39, scope: !10886)
!10900 = !DILocation(line: 2895, column: 11, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 2895, column: 4)
!10902 = !DILocation(line: 2895, column: 21, scope: !10901)
!10903 = !DILocation(line: 2895, column: 25, scope: !10901)
!10904 = !DILocation(line: 2895, column: 19, scope: !10901)
!10905 = !DILocation(line: 2895, column: 9, scope: !10901)
!10906 = !DILocation(line: 2895, column: 30, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 2895, column: 4)
!10908 = !DILocation(line: 2895, column: 34, scope: !10907)
!10909 = !DILocation(line: 2895, column: 32, scope: !10907)
!10910 = !DILocation(line: 2895, column: 4, scope: !10901)
!10911 = !DILocation(line: 2896, column: 9, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 2896, column: 9)
!10913 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 2895, column: 50)
!10914 = !DILocation(line: 2896, column: 18, scope: !10912)
!10915 = !DILocation(line: 2896, column: 22, scope: !10912)
!10916 = !DILocation(line: 2896, column: 26, scope: !10912)
!10917 = !DILocation(line: 2896, column: 29, scope: !10912)
!10918 = !DILocation(line: 2896, column: 9, scope: !10913)
!10919 = !DILocalVariable(name: "dw", scope: !10920, file: !3, line: 2897, type: !4449)
!10920 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 2896, column: 40)
!10921 = !DILocation(line: 2897, column: 21, scope: !10920)
!10922 = !DILocation(line: 2899, column: 12, scope: !10920)
!10923 = !DILocation(line: 2899, column: 16, scope: !10920)
!10924 = !DILocation(line: 2899, column: 22, scope: !10920)
!10925 = !DILocation(line: 2899, column: 9, scope: !10920)
!10926 = !DILocation(line: 2901, column: 30, scope: !10920)
!10927 = !DILocation(line: 2901, column: 34, scope: !10920)
!10928 = !DILocation(line: 2901, column: 11, scope: !10920)
!10929 = !DILocation(line: 2901, column: 9, scope: !10920)
!10930 = !DILocation(line: 2902, column: 27, scope: !10920)
!10931 = !DILocation(line: 2902, column: 31, scope: !10920)
!10932 = !DILocation(line: 2902, column: 6, scope: !10920)
!10933 = !DILocation(line: 2903, column: 14, scope: !10920)
!10934 = !DILocation(line: 2904, column: 5, scope: !10920)
!10935 = !DILocation(line: 2905, column: 4, scope: !10913)
!10936 = !DILocation(line: 2895, column: 40, scope: !10907)
!10937 = !DILocation(line: 2895, column: 46, scope: !10907)
!10938 = !DILocation(line: 2895, column: 4, scope: !10907)
!10939 = distinct !{!10939, !10910, !10940}
!10940 = !DILocation(line: 2905, column: 4, scope: !10901)
!10941 = !DILocation(line: 2906, column: 3, scope: !10886)
!10942 = !DILocation(line: 2907, column: 2, scope: !10877)
!10943 = !DILocation(line: 2909, column: 9, scope: !10722)
!10944 = !DILocation(line: 2909, column: 2, scope: !10722)
!10945 = distinct !DISubprogram(name: "vgroup_delete", scope: !3, file: !3, line: 2987, type: !4576, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10946 = !DILocalVariable(name: "ob", arg: 1, scope: !10945, file: !3, line: 2987, type: !3872)
!10947 = !DILocation(line: 2987, column: 35, scope: !10945)
!10948 = !DILocalVariable(name: "dg", scope: !10945, file: !3, line: 2989, type: !1368)
!10949 = !DILocation(line: 2989, column: 16, scope: !10945)
!10950 = !DILocation(line: 2989, column: 35, scope: !10945)
!10951 = !DILocation(line: 2989, column: 39, scope: !10945)
!10952 = !DILocation(line: 2989, column: 48, scope: !10945)
!10953 = !DILocation(line: 2989, column: 52, scope: !10945)
!10954 = !DILocation(line: 2989, column: 59, scope: !10945)
!10955 = !DILocation(line: 2989, column: 21, scope: !10945)
!10956 = !DILocation(line: 2990, column: 7, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 2990, column: 6)
!10958 = !DILocation(line: 2990, column: 6, scope: !10945)
!10959 = !DILocation(line: 2991, column: 3, scope: !10957)
!10960 = !DILocation(line: 2993, column: 39, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 2993, column: 6)
!10962 = !DILocation(line: 2993, column: 6, scope: !10961)
!10963 = !DILocation(line: 2993, column: 6, scope: !10945)
!10964 = !DILocation(line: 2994, column: 27, scope: !10961)
!10965 = !DILocation(line: 2994, column: 31, scope: !10961)
!10966 = !DILocation(line: 2994, column: 3, scope: !10961)
!10967 = !DILocation(line: 2996, column: 29, scope: !10961)
!10968 = !DILocation(line: 2996, column: 33, scope: !10961)
!10969 = !DILocation(line: 2996, column: 3, scope: !10961)
!10970 = !DILocation(line: 2997, column: 1, scope: !10945)
!10971 = distinct !DISubprogram(name: "vgroup_assign_verts", scope: !3, file: !3, line: 3023, type: !10972, scopeLine: 3024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!10972 = !DISubroutineType(types: !10973)
!10973 = !{null, !3872, !1851}
!10974 = !DILocalVariable(name: "ob", arg: 1, scope: !10971, file: !3, line: 3023, type: !3872)
!10975 = !DILocation(line: 3023, column: 41, scope: !10971)
!10976 = !DILocalVariable(name: "weight", arg: 2, scope: !10971, file: !3, line: 3023, type: !1851)
!10977 = !DILocation(line: 3023, column: 57, scope: !10971)
!10978 = !DILocalVariable(name: "def_nr", scope: !10971, file: !3, line: 3025, type: !4075)
!10979 = !DILocation(line: 3025, column: 12, scope: !10971)
!10980 = !DILocation(line: 3025, column: 21, scope: !10971)
!10981 = !DILocation(line: 3025, column: 25, scope: !10971)
!10982 = !DILocation(line: 3025, column: 32, scope: !10971)
!10983 = !DILocation(line: 3027, column: 21, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 3027, column: 6)
!10985 = !DILocation(line: 3027, column: 25, scope: !10984)
!10986 = !DILocation(line: 3027, column: 34, scope: !10984)
!10987 = !DILocation(line: 3027, column: 7, scope: !10984)
!10988 = !DILocation(line: 3027, column: 6, scope: !10971)
!10989 = !DILocation(line: 3028, column: 3, scope: !10984)
!10990 = !DILocation(line: 3030, column: 6, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 3030, column: 6)
!10992 = !DILocation(line: 3030, column: 10, scope: !10991)
!10993 = !DILocation(line: 3030, column: 15, scope: !10991)
!10994 = !DILocation(line: 3030, column: 6, scope: !10971)
!10995 = !DILocalVariable(name: "me", scope: !10996, file: !3, line: 3031, type: !1383)
!10996 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3030, column: 27)
!10997 = !DILocation(line: 3031, column: 9, scope: !10996)
!10998 = !DILocation(line: 3031, column: 14, scope: !10996)
!10999 = !DILocation(line: 3031, column: 18, scope: !10996)
!11000 = !DILocation(line: 3033, column: 7, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 3033, column: 7)
!11002 = !DILocation(line: 3033, column: 11, scope: !11001)
!11003 = !DILocation(line: 3033, column: 7, scope: !10996)
!11004 = !DILocalVariable(name: "em", scope: !11005, file: !3, line: 3034, type: !4100)
!11005 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 3033, column: 24)
!11006 = !DILocation(line: 3034, column: 16, scope: !11005)
!11007 = !DILocation(line: 3034, column: 21, scope: !11005)
!11008 = !DILocation(line: 3034, column: 25, scope: !11005)
!11009 = !DILocalVariable(name: "cd_dvert_offset", scope: !11005, file: !3, line: 3035, type: !354)
!11010 = !DILocation(line: 3035, column: 8, scope: !11005)
!11011 = !DILocalVariable(name: "iter", scope: !11005, file: !3, line: 3037, type: !4112)
!11012 = !DILocation(line: 3037, column: 11, scope: !11005)
!11013 = !DILocalVariable(name: "eve", scope: !11005, file: !3, line: 3038, type: !1627)
!11014 = !DILocation(line: 3038, column: 12, scope: !11005)
!11015 = !DILocation(line: 3040, column: 31, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11005, file: !3, line: 3040, column: 8)
!11017 = !DILocation(line: 3040, column: 35, scope: !11016)
!11018 = !DILocation(line: 3040, column: 39, scope: !11016)
!11019 = !DILocation(line: 3040, column: 9, scope: !11016)
!11020 = !DILocation(line: 3040, column: 8, scope: !11005)
!11021 = !DILocation(line: 3041, column: 23, scope: !11016)
!11022 = !DILocation(line: 3041, column: 27, scope: !11016)
!11023 = !DILocation(line: 3041, column: 32, scope: !11016)
!11024 = !DILocation(line: 3041, column: 36, scope: !11016)
!11025 = !DILocation(line: 3041, column: 40, scope: !11016)
!11026 = !DILocation(line: 3041, column: 5, scope: !11016)
!11027 = !DILocation(line: 3043, column: 45, scope: !11005)
!11028 = !DILocation(line: 3043, column: 49, scope: !11005)
!11029 = !DILocation(line: 3043, column: 53, scope: !11005)
!11030 = !DILocation(line: 3043, column: 22, scope: !11005)
!11031 = !DILocation(line: 3043, column: 20, scope: !11005)
!11032 = !DILocation(line: 3046, column: 4, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11005, file: !3, line: 3046, column: 4)
!11034 = !DILocation(line: 3046, column: 4, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 3046, column: 4)
!11036 = !DILocation(line: 3047, column: 9, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 3047, column: 9)
!11038 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 3046, column: 56)
!11039 = !DILocation(line: 3047, column: 9, scope: !11038)
!11040 = !DILocalVariable(name: "dv", scope: !11041, file: !3, line: 3048, type: !4203)
!11041 = distinct !DILexicalBlock(scope: !11037, file: !3, line: 3047, column: 49)
!11042 = !DILocation(line: 3048, column: 19, scope: !11041)
!11043 = !DILocalVariable(name: "dw", scope: !11041, file: !3, line: 3049, type: !4449)
!11044 = !DILocation(line: 3049, column: 21, scope: !11041)
!11045 = !DILocation(line: 3050, column: 11, scope: !11041)
!11046 = !DILocation(line: 3050, column: 9, scope: !11041)
!11047 = !DILocation(line: 3051, column: 32, scope: !11041)
!11048 = !DILocation(line: 3051, column: 36, scope: !11041)
!11049 = !DILocation(line: 3051, column: 11, scope: !11041)
!11050 = !DILocation(line: 3051, column: 9, scope: !11041)
!11051 = !DILocation(line: 3052, column: 10, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11041, file: !3, line: 3052, column: 10)
!11053 = !DILocation(line: 3052, column: 10, scope: !11041)
!11054 = !DILocation(line: 3053, column: 20, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11052, file: !3, line: 3052, column: 14)
!11056 = !DILocation(line: 3053, column: 7, scope: !11055)
!11057 = !DILocation(line: 3053, column: 11, scope: !11055)
!11058 = !DILocation(line: 3053, column: 18, scope: !11055)
!11059 = !DILocation(line: 3054, column: 6, scope: !11055)
!11060 = !DILocation(line: 3055, column: 5, scope: !11041)
!11061 = !DILocation(line: 3056, column: 4, scope: !11038)
!11062 = distinct !{!11062, !11032, !11063}
!11063 = !DILocation(line: 3056, column: 4, scope: !11033)
!11064 = !DILocation(line: 3057, column: 3, scope: !11005)
!11065 = !DILocalVariable(name: "mv", scope: !11066, file: !3, line: 3059, type: !3476)
!11066 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 3058, column: 8)
!11067 = !DILocation(line: 3059, column: 11, scope: !11066)
!11068 = !DILocalVariable(name: "dv", scope: !11066, file: !3, line: 3060, type: !4203)
!11069 = !DILocation(line: 3060, column: 17, scope: !11066)
!11070 = !DILocalVariable(name: "i", scope: !11066, file: !3, line: 3061, type: !354)
!11071 = !DILocation(line: 3061, column: 8, scope: !11066)
!11072 = !DILocation(line: 3063, column: 9, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 3063, column: 8)
!11074 = !DILocation(line: 3063, column: 13, scope: !11073)
!11075 = !DILocation(line: 3063, column: 8, scope: !11066)
!11076 = !DILocation(line: 3064, column: 28, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 3063, column: 20)
!11078 = !DILocation(line: 3064, column: 32, scope: !11077)
!11079 = !DILocation(line: 3064, column: 5, scope: !11077)
!11080 = !DILocation(line: 3065, column: 4, scope: !11077)
!11081 = !DILocation(line: 3067, column: 9, scope: !11066)
!11082 = !DILocation(line: 3067, column: 13, scope: !11066)
!11083 = !DILocation(line: 3067, column: 7, scope: !11066)
!11084 = !DILocation(line: 3068, column: 9, scope: !11066)
!11085 = !DILocation(line: 3068, column: 13, scope: !11066)
!11086 = !DILocation(line: 3068, column: 7, scope: !11066)
!11087 = !DILocation(line: 3070, column: 11, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 3070, column: 4)
!11089 = !DILocation(line: 3070, column: 9, scope: !11088)
!11090 = !DILocation(line: 3070, column: 16, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 3070, column: 4)
!11092 = !DILocation(line: 3070, column: 20, scope: !11091)
!11093 = !DILocation(line: 3070, column: 24, scope: !11091)
!11094 = !DILocation(line: 3070, column: 18, scope: !11091)
!11095 = !DILocation(line: 3070, column: 4, scope: !11088)
!11096 = !DILocation(line: 3071, column: 9, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 3071, column: 9)
!11098 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 3070, column: 50)
!11099 = !DILocation(line: 3071, column: 13, scope: !11097)
!11100 = !DILocation(line: 3071, column: 18, scope: !11097)
!11101 = !DILocation(line: 3071, column: 9, scope: !11098)
!11102 = !DILocalVariable(name: "dw", scope: !11103, file: !3, line: 3072, type: !4449)
!11103 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 3071, column: 28)
!11104 = !DILocation(line: 3072, column: 21, scope: !11103)
!11105 = !DILocation(line: 3073, column: 32, scope: !11103)
!11106 = !DILocation(line: 3073, column: 36, scope: !11103)
!11107 = !DILocation(line: 3073, column: 11, scope: !11103)
!11108 = !DILocation(line: 3073, column: 9, scope: !11103)
!11109 = !DILocation(line: 3074, column: 10, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11103, file: !3, line: 3074, column: 10)
!11111 = !DILocation(line: 3074, column: 10, scope: !11103)
!11112 = !DILocation(line: 3075, column: 20, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 3074, column: 14)
!11114 = !DILocation(line: 3075, column: 7, scope: !11113)
!11115 = !DILocation(line: 3075, column: 11, scope: !11113)
!11116 = !DILocation(line: 3075, column: 18, scope: !11113)
!11117 = !DILocation(line: 3076, column: 6, scope: !11113)
!11118 = !DILocation(line: 3077, column: 5, scope: !11103)
!11119 = !DILocation(line: 3078, column: 4, scope: !11098)
!11120 = !DILocation(line: 3070, column: 34, scope: !11091)
!11121 = !DILocation(line: 3070, column: 40, scope: !11091)
!11122 = !DILocation(line: 3070, column: 46, scope: !11091)
!11123 = !DILocation(line: 3070, column: 4, scope: !11091)
!11124 = distinct !{!11124, !11095, !11125}
!11125 = !DILocation(line: 3078, column: 4, scope: !11088)
!11126 = !DILocation(line: 3080, column: 2, scope: !10996)
!11127 = !DILocation(line: 3081, column: 11, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3081, column: 11)
!11129 = !DILocation(line: 3081, column: 15, scope: !11128)
!11130 = !DILocation(line: 3081, column: 20, scope: !11128)
!11131 = !DILocation(line: 3081, column: 11, scope: !10991)
!11132 = !DILocalVariable(name: "lt", scope: !11133, file: !3, line: 3082, type: !1227)
!11133 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 3081, column: 35)
!11134 = !DILocation(line: 3082, column: 12, scope: !11133)
!11135 = !DILocation(line: 3082, column: 37, scope: !11133)
!11136 = !DILocation(line: 3082, column: 17, scope: !11133)
!11137 = !DILocalVariable(name: "dv", scope: !11133, file: !3, line: 3083, type: !4203)
!11138 = !DILocation(line: 3083, column: 16, scope: !11133)
!11139 = !DILocalVariable(name: "bp", scope: !11133, file: !3, line: 3084, type: !4257)
!11140 = !DILocation(line: 3084, column: 11, scope: !11133)
!11141 = !DILocalVariable(name: "a", scope: !11133, file: !3, line: 3085, type: !354)
!11142 = !DILocation(line: 3085, column: 7, scope: !11133)
!11143 = !DILocalVariable(name: "tot", scope: !11133, file: !3, line: 3085, type: !354)
!11144 = !DILocation(line: 3085, column: 10, scope: !11133)
!11145 = !DILocation(line: 3087, column: 7, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 3087, column: 7)
!11147 = !DILocation(line: 3087, column: 11, scope: !11146)
!11148 = !DILocation(line: 3087, column: 17, scope: !11146)
!11149 = !DILocation(line: 3087, column: 7, scope: !11133)
!11150 = !DILocation(line: 3088, column: 27, scope: !11146)
!11151 = !DILocation(line: 3088, column: 31, scope: !11146)
!11152 = !DILocation(line: 3088, column: 4, scope: !11146)
!11153 = !DILocation(line: 3090, column: 8, scope: !11133)
!11154 = !DILocation(line: 3090, column: 12, scope: !11133)
!11155 = !DILocation(line: 3090, column: 6, scope: !11133)
!11156 = !DILocation(line: 3092, column: 9, scope: !11133)
!11157 = !DILocation(line: 3092, column: 13, scope: !11133)
!11158 = !DILocation(line: 3092, column: 21, scope: !11133)
!11159 = !DILocation(line: 3092, column: 25, scope: !11133)
!11160 = !DILocation(line: 3092, column: 19, scope: !11133)
!11161 = !DILocation(line: 3092, column: 33, scope: !11133)
!11162 = !DILocation(line: 3092, column: 37, scope: !11133)
!11163 = !DILocation(line: 3092, column: 31, scope: !11133)
!11164 = !DILocation(line: 3092, column: 7, scope: !11133)
!11165 = !DILocation(line: 3093, column: 10, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 3093, column: 3)
!11167 = !DILocation(line: 3093, column: 20, scope: !11166)
!11168 = !DILocation(line: 3093, column: 24, scope: !11166)
!11169 = !DILocation(line: 3093, column: 18, scope: !11166)
!11170 = !DILocation(line: 3093, column: 8, scope: !11166)
!11171 = !DILocation(line: 3093, column: 29, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 3093, column: 3)
!11173 = !DILocation(line: 3093, column: 33, scope: !11172)
!11174 = !DILocation(line: 3093, column: 31, scope: !11172)
!11175 = !DILocation(line: 3093, column: 3, scope: !11166)
!11176 = !DILocation(line: 3094, column: 8, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !3, line: 3094, column: 8)
!11178 = distinct !DILexicalBlock(scope: !11172, file: !3, line: 3093, column: 55)
!11179 = !DILocation(line: 3094, column: 12, scope: !11177)
!11180 = !DILocation(line: 3094, column: 15, scope: !11177)
!11181 = !DILocation(line: 3094, column: 8, scope: !11178)
!11182 = !DILocalVariable(name: "dw", scope: !11183, file: !3, line: 3095, type: !4449)
!11183 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 3094, column: 25)
!11184 = !DILocation(line: 3095, column: 20, scope: !11183)
!11185 = !DILocation(line: 3097, column: 31, scope: !11183)
!11186 = !DILocation(line: 3097, column: 35, scope: !11183)
!11187 = !DILocation(line: 3097, column: 10, scope: !11183)
!11188 = !DILocation(line: 3097, column: 8, scope: !11183)
!11189 = !DILocation(line: 3098, column: 9, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11183, file: !3, line: 3098, column: 9)
!11191 = !DILocation(line: 3098, column: 9, scope: !11183)
!11192 = !DILocation(line: 3099, column: 19, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 3098, column: 13)
!11194 = !DILocation(line: 3099, column: 6, scope: !11193)
!11195 = !DILocation(line: 3099, column: 10, scope: !11193)
!11196 = !DILocation(line: 3099, column: 17, scope: !11193)
!11197 = !DILocation(line: 3100, column: 5, scope: !11193)
!11198 = !DILocation(line: 3101, column: 4, scope: !11183)
!11199 = !DILocation(line: 3102, column: 3, scope: !11178)
!11200 = !DILocation(line: 3093, column: 39, scope: !11172)
!11201 = !DILocation(line: 3093, column: 45, scope: !11172)
!11202 = !DILocation(line: 3093, column: 51, scope: !11172)
!11203 = !DILocation(line: 3093, column: 3, scope: !11172)
!11204 = distinct !{!11204, !11175, !11205}
!11205 = !DILocation(line: 3102, column: 3, scope: !11166)
!11206 = !DILocation(line: 3103, column: 2, scope: !11133)
!11207 = !DILocation(line: 3104, column: 1, scope: !10971)
!11208 = distinct !DISubprogram(name: "vgroup_remove_verts", scope: !3, file: !3, line: 3108, type: !11209, scopeLine: 3109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11209 = !DISubroutineType(types: !11210)
!11210 = !{!2436, !3872, !354}
!11211 = !DILocalVariable(name: "ob", arg: 1, scope: !11208, file: !3, line: 3108, type: !3872)
!11212 = !DILocation(line: 3108, column: 41, scope: !11208)
!11213 = !DILocalVariable(name: "allverts", arg: 2, scope: !11208, file: !3, line: 3108, type: !354)
!11214 = !DILocation(line: 3108, column: 49, scope: !11208)
!11215 = !DILocalVariable(name: "changed", scope: !11208, file: !3, line: 3110, type: !2436)
!11216 = !DILocation(line: 3110, column: 7, scope: !11208)
!11217 = !DILocalVariable(name: "dg", scope: !11208, file: !3, line: 3115, type: !1368)
!11218 = !DILocation(line: 3115, column: 16, scope: !11208)
!11219 = !DILocation(line: 3116, column: 12, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 3116, column: 2)
!11221 = !DILocation(line: 3116, column: 16, scope: !11220)
!11222 = !DILocation(line: 3116, column: 24, scope: !11220)
!11223 = !DILocation(line: 3116, column: 10, scope: !11220)
!11224 = !DILocation(line: 3116, column: 7, scope: !11220)
!11225 = !DILocation(line: 3116, column: 31, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 3116, column: 2)
!11227 = !DILocation(line: 3116, column: 2, scope: !11220)
!11228 = !DILocation(line: 3117, column: 41, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 3116, column: 50)
!11230 = !DILocation(line: 3117, column: 45, scope: !11229)
!11231 = !DILocation(line: 3117, column: 55, scope: !11229)
!11232 = !DILocation(line: 3117, column: 14, scope: !11229)
!11233 = !DILocation(line: 3117, column: 11, scope: !11229)
!11234 = !DILocation(line: 3118, column: 2, scope: !11229)
!11235 = !DILocation(line: 3116, column: 40, scope: !11226)
!11236 = !DILocation(line: 3116, column: 44, scope: !11226)
!11237 = !DILocation(line: 3116, column: 38, scope: !11226)
!11238 = !DILocation(line: 3116, column: 2, scope: !11226)
!11239 = distinct !{!11239, !11227, !11240}
!11240 = !DILocation(line: 3118, column: 2, scope: !11220)
!11241 = !DILocation(line: 3119, column: 9, scope: !11208)
!11242 = !DILocation(line: 3119, column: 2, scope: !11208)
!11243 = distinct !DISubprogram(name: "vgroup_select_verts", scope: !3, file: !3, line: 1374, type: !6230, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11244 = !DILocalVariable(name: "ob", arg: 1, scope: !11243, file: !3, line: 1374, type: !3872)
!11245 = !DILocation(line: 1374, column: 41, scope: !11243)
!11246 = !DILocalVariable(name: "select", arg: 2, scope: !11243, file: !3, line: 1374, type: !354)
!11247 = !DILocation(line: 1374, column: 49, scope: !11243)
!11248 = !DILocalVariable(name: "def_nr", scope: !11243, file: !3, line: 1376, type: !4075)
!11249 = !DILocation(line: 1376, column: 12, scope: !11243)
!11250 = !DILocation(line: 1376, column: 21, scope: !11243)
!11251 = !DILocation(line: 1376, column: 25, scope: !11243)
!11252 = !DILocation(line: 1376, column: 32, scope: !11243)
!11253 = !DILocation(line: 1378, column: 21, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 1378, column: 6)
!11255 = !DILocation(line: 1378, column: 25, scope: !11254)
!11256 = !DILocation(line: 1378, column: 34, scope: !11254)
!11257 = !DILocation(line: 1378, column: 7, scope: !11254)
!11258 = !DILocation(line: 1378, column: 6, scope: !11243)
!11259 = !DILocation(line: 1379, column: 3, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 1378, column: 43)
!11261 = !DILocation(line: 1382, column: 6, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 1382, column: 6)
!11263 = !DILocation(line: 1382, column: 10, scope: !11262)
!11264 = !DILocation(line: 1382, column: 15, scope: !11262)
!11265 = !DILocation(line: 1382, column: 6, scope: !11243)
!11266 = !DILocalVariable(name: "me", scope: !11267, file: !3, line: 1383, type: !1383)
!11267 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1382, column: 27)
!11268 = !DILocation(line: 1383, column: 9, scope: !11267)
!11269 = !DILocation(line: 1383, column: 14, scope: !11267)
!11270 = !DILocation(line: 1383, column: 18, scope: !11267)
!11271 = !DILocation(line: 1385, column: 7, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11267, file: !3, line: 1385, column: 7)
!11273 = !DILocation(line: 1385, column: 11, scope: !11272)
!11274 = !DILocation(line: 1385, column: 7, scope: !11267)
!11275 = !DILocalVariable(name: "em", scope: !11276, file: !3, line: 1386, type: !4100)
!11276 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 1385, column: 24)
!11277 = !DILocation(line: 1386, column: 16, scope: !11276)
!11278 = !DILocation(line: 1386, column: 21, scope: !11276)
!11279 = !DILocation(line: 1386, column: 25, scope: !11276)
!11280 = !DILocalVariable(name: "cd_dvert_offset", scope: !11276, file: !3, line: 1387, type: !4075)
!11281 = !DILocation(line: 1387, column: 14, scope: !11276)
!11282 = !DILocation(line: 1387, column: 55, scope: !11276)
!11283 = !DILocation(line: 1387, column: 59, scope: !11276)
!11284 = !DILocation(line: 1387, column: 63, scope: !11276)
!11285 = !DILocation(line: 1387, column: 32, scope: !11276)
!11286 = !DILocation(line: 1389, column: 8, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11276, file: !3, line: 1389, column: 8)
!11288 = !DILocation(line: 1389, column: 24, scope: !11287)
!11289 = !DILocation(line: 1389, column: 8, scope: !11276)
!11290 = !DILocalVariable(name: "iter", scope: !11291, file: !3, line: 1390, type: !4112)
!11291 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 1389, column: 31)
!11292 = !DILocation(line: 1390, column: 12, scope: !11291)
!11293 = !DILocalVariable(name: "eve", scope: !11291, file: !3, line: 1391, type: !1627)
!11294 = !DILocation(line: 1391, column: 13, scope: !11291)
!11295 = !DILocation(line: 1393, column: 5, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 1393, column: 5)
!11297 = !DILocation(line: 1393, column: 5, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11296, file: !3, line: 1393, column: 5)
!11299 = !DILocation(line: 1394, column: 11, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 1394, column: 10)
!11301 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 1393, column: 57)
!11302 = !DILocation(line: 1394, column: 10, scope: !11301)
!11303 = !DILocalVariable(name: "dv", scope: !11304, file: !3, line: 1395, type: !4203)
!11304 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 1394, column: 51)
!11305 = !DILocation(line: 1395, column: 20, scope: !11304)
!11306 = !DILocation(line: 1395, column: 25, scope: !11304)
!11307 = !DILocation(line: 1396, column: 30, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 1396, column: 11)
!11309 = !DILocation(line: 1396, column: 34, scope: !11308)
!11310 = !DILocation(line: 1396, column: 11, scope: !11308)
!11311 = !DILocation(line: 1396, column: 11, scope: !11304)
!11312 = !DILocation(line: 1397, column: 27, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11308, file: !3, line: 1396, column: 43)
!11314 = !DILocation(line: 1397, column: 31, scope: !11313)
!11315 = !DILocation(line: 1397, column: 35, scope: !11313)
!11316 = !DILocation(line: 1397, column: 40, scope: !11313)
!11317 = !DILocation(line: 1397, column: 8, scope: !11313)
!11318 = !DILocation(line: 1398, column: 7, scope: !11313)
!11319 = !DILocation(line: 1399, column: 6, scope: !11304)
!11320 = !DILocation(line: 1400, column: 5, scope: !11301)
!11321 = distinct !{!11321, !11295, !11322}
!11322 = !DILocation(line: 1400, column: 5, scope: !11296)
!11323 = !DILocation(line: 1403, column: 9, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 1403, column: 9)
!11325 = !DILocation(line: 1403, column: 9, scope: !11291)
!11326 = !DILocation(line: 1403, column: 35, scope: !11324)
!11327 = !DILocation(line: 1403, column: 17, scope: !11324)
!11328 = !DILocation(line: 1404, column: 30, scope: !11324)
!11329 = !DILocation(line: 1404, column: 10, scope: !11324)
!11330 = !DILocation(line: 1405, column: 4, scope: !11291)
!11331 = !DILocation(line: 1406, column: 3, scope: !11276)
!11332 = !DILocation(line: 1408, column: 8, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 1408, column: 8)
!11334 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 1407, column: 8)
!11335 = !DILocation(line: 1408, column: 12, scope: !11333)
!11336 = !DILocation(line: 1408, column: 8, scope: !11334)
!11337 = !DILocalVariable(name: "mv", scope: !11338, file: !3, line: 1409, type: !3476)
!11338 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 1408, column: 19)
!11339 = !DILocation(line: 1409, column: 12, scope: !11338)
!11340 = !DILocalVariable(name: "dv", scope: !11338, file: !3, line: 1410, type: !4203)
!11341 = !DILocation(line: 1410, column: 18, scope: !11338)
!11342 = !DILocalVariable(name: "i", scope: !11338, file: !3, line: 1411, type: !354)
!11343 = !DILocation(line: 1411, column: 9, scope: !11338)
!11344 = !DILocation(line: 1413, column: 10, scope: !11338)
!11345 = !DILocation(line: 1413, column: 14, scope: !11338)
!11346 = !DILocation(line: 1413, column: 8, scope: !11338)
!11347 = !DILocation(line: 1414, column: 10, scope: !11338)
!11348 = !DILocation(line: 1414, column: 14, scope: !11338)
!11349 = !DILocation(line: 1414, column: 8, scope: !11338)
!11350 = !DILocation(line: 1416, column: 12, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11338, file: !3, line: 1416, column: 5)
!11352 = !DILocation(line: 1416, column: 10, scope: !11351)
!11353 = !DILocation(line: 1416, column: 17, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11351, file: !3, line: 1416, column: 5)
!11355 = !DILocation(line: 1416, column: 21, scope: !11354)
!11356 = !DILocation(line: 1416, column: 25, scope: !11354)
!11357 = !DILocation(line: 1416, column: 19, scope: !11354)
!11358 = !DILocation(line: 1416, column: 5, scope: !11351)
!11359 = !DILocation(line: 1417, column: 12, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 1417, column: 10)
!11361 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 1416, column: 51)
!11362 = !DILocation(line: 1417, column: 16, scope: !11360)
!11363 = !DILocation(line: 1417, column: 21, scope: !11360)
!11364 = !DILocation(line: 1417, column: 10, scope: !11361)
!11365 = !DILocation(line: 1418, column: 30, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 1418, column: 11)
!11367 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 1417, column: 33)
!11368 = !DILocation(line: 1418, column: 34, scope: !11366)
!11369 = !DILocation(line: 1418, column: 11, scope: !11366)
!11370 = !DILocation(line: 1418, column: 11, scope: !11367)
!11371 = !DILocation(line: 1419, column: 12, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 1419, column: 12)
!11373 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 1418, column: 43)
!11374 = !DILocation(line: 1419, column: 12, scope: !11373)
!11375 = !DILocation(line: 1419, column: 20, scope: !11372)
!11376 = !DILocation(line: 1419, column: 24, scope: !11372)
!11377 = !DILocation(line: 1419, column: 29, scope: !11372)
!11378 = !DILocation(line: 1420, column: 13, scope: !11372)
!11379 = !DILocation(line: 1420, column: 17, scope: !11372)
!11380 = !DILocation(line: 1420, column: 22, scope: !11372)
!11381 = !DILocation(line: 1421, column: 7, scope: !11373)
!11382 = !DILocation(line: 1422, column: 6, scope: !11367)
!11383 = !DILocation(line: 1423, column: 5, scope: !11361)
!11384 = !DILocation(line: 1416, column: 35, scope: !11354)
!11385 = !DILocation(line: 1416, column: 41, scope: !11354)
!11386 = !DILocation(line: 1416, column: 47, scope: !11354)
!11387 = !DILocation(line: 1416, column: 5, scope: !11354)
!11388 = distinct !{!11388, !11358, !11389}
!11389 = !DILocation(line: 1423, column: 5, scope: !11351)
!11390 = !DILocation(line: 1425, column: 27, scope: !11338)
!11391 = !DILocation(line: 1425, column: 5, scope: !11338)
!11392 = !DILocation(line: 1426, column: 4, scope: !11338)
!11393 = !DILocation(line: 1428, column: 2, scope: !11267)
!11394 = !DILocation(line: 1429, column: 11, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1429, column: 11)
!11396 = !DILocation(line: 1429, column: 15, scope: !11395)
!11397 = !DILocation(line: 1429, column: 20, scope: !11395)
!11398 = !DILocation(line: 1429, column: 11, scope: !11262)
!11399 = !DILocalVariable(name: "lt", scope: !11400, file: !3, line: 1430, type: !1227)
!11400 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 1429, column: 35)
!11401 = !DILocation(line: 1430, column: 12, scope: !11400)
!11402 = !DILocation(line: 1430, column: 37, scope: !11400)
!11403 = !DILocation(line: 1430, column: 17, scope: !11400)
!11404 = !DILocation(line: 1432, column: 7, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 1432, column: 7)
!11406 = !DILocation(line: 1432, column: 11, scope: !11405)
!11407 = !DILocation(line: 1432, column: 7, scope: !11400)
!11408 = !DILocalVariable(name: "dv", scope: !11409, file: !3, line: 1433, type: !4203)
!11409 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1432, column: 18)
!11410 = !DILocation(line: 1433, column: 17, scope: !11409)
!11411 = !DILocalVariable(name: "bp", scope: !11409, file: !3, line: 1434, type: !4257)
!11412 = !DILocation(line: 1434, column: 12, scope: !11409)
!11413 = !DILocalVariable(name: "actbp", scope: !11409, file: !3, line: 1434, type: !4257)
!11414 = !DILocation(line: 1434, column: 17, scope: !11409)
!11415 = !DILocation(line: 1434, column: 54, scope: !11409)
!11416 = !DILocation(line: 1434, column: 25, scope: !11409)
!11417 = !DILocalVariable(name: "a", scope: !11409, file: !3, line: 1435, type: !354)
!11418 = !DILocation(line: 1435, column: 8, scope: !11409)
!11419 = !DILocalVariable(name: "tot", scope: !11409, file: !3, line: 1435, type: !354)
!11420 = !DILocation(line: 1435, column: 11, scope: !11409)
!11421 = !DILocation(line: 1437, column: 9, scope: !11409)
!11422 = !DILocation(line: 1437, column: 13, scope: !11409)
!11423 = !DILocation(line: 1437, column: 7, scope: !11409)
!11424 = !DILocation(line: 1439, column: 10, scope: !11409)
!11425 = !DILocation(line: 1439, column: 14, scope: !11409)
!11426 = !DILocation(line: 1439, column: 22, scope: !11409)
!11427 = !DILocation(line: 1439, column: 26, scope: !11409)
!11428 = !DILocation(line: 1439, column: 20, scope: !11409)
!11429 = !DILocation(line: 1439, column: 34, scope: !11409)
!11430 = !DILocation(line: 1439, column: 38, scope: !11409)
!11431 = !DILocation(line: 1439, column: 32, scope: !11409)
!11432 = !DILocation(line: 1439, column: 8, scope: !11409)
!11433 = !DILocation(line: 1440, column: 11, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 1440, column: 4)
!11435 = !DILocation(line: 1440, column: 21, scope: !11434)
!11436 = !DILocation(line: 1440, column: 25, scope: !11434)
!11437 = !DILocation(line: 1440, column: 19, scope: !11434)
!11438 = !DILocation(line: 1440, column: 9, scope: !11434)
!11439 = !DILocation(line: 1440, column: 30, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 1440, column: 4)
!11441 = !DILocation(line: 1440, column: 34, scope: !11440)
!11442 = !DILocation(line: 1440, column: 32, scope: !11440)
!11443 = !DILocation(line: 1440, column: 4, scope: !11434)
!11444 = !DILocation(line: 1441, column: 28, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 1441, column: 9)
!11446 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 1440, column: 56)
!11447 = !DILocation(line: 1441, column: 32, scope: !11445)
!11448 = !DILocation(line: 1441, column: 9, scope: !11445)
!11449 = !DILocation(line: 1441, column: 9, scope: !11446)
!11450 = !DILocation(line: 1442, column: 10, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 1442, column: 10)
!11452 = distinct !DILexicalBlock(scope: !11445, file: !3, line: 1441, column: 41)
!11453 = !DILocation(line: 1442, column: 10, scope: !11452)
!11454 = !DILocation(line: 1442, column: 18, scope: !11451)
!11455 = !DILocation(line: 1442, column: 22, scope: !11451)
!11456 = !DILocation(line: 1442, column: 25, scope: !11451)
!11457 = !DILocation(line: 1444, column: 7, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 1443, column: 11)
!11459 = !DILocation(line: 1444, column: 11, scope: !11458)
!11460 = !DILocation(line: 1444, column: 14, scope: !11458)
!11461 = !DILocation(line: 1445, column: 11, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11458, file: !3, line: 1445, column: 11)
!11463 = !DILocation(line: 1445, column: 17, scope: !11462)
!11464 = !DILocation(line: 1445, column: 20, scope: !11462)
!11465 = !DILocation(line: 1445, column: 26, scope: !11462)
!11466 = !DILocation(line: 1445, column: 23, scope: !11462)
!11467 = !DILocation(line: 1445, column: 11, scope: !11458)
!11468 = !DILocation(line: 1445, column: 33, scope: !11462)
!11469 = !DILocation(line: 1445, column: 37, scope: !11462)
!11470 = !DILocation(line: 1445, column: 43, scope: !11462)
!11471 = !DILocation(line: 1447, column: 5, scope: !11452)
!11472 = !DILocation(line: 1448, column: 4, scope: !11446)
!11473 = !DILocation(line: 1440, column: 40, scope: !11440)
!11474 = !DILocation(line: 1440, column: 46, scope: !11440)
!11475 = !DILocation(line: 1440, column: 52, scope: !11440)
!11476 = !DILocation(line: 1440, column: 4, scope: !11440)
!11477 = distinct !{!11477, !11443, !11478}
!11478 = !DILocation(line: 1448, column: 4, scope: !11434)
!11479 = !DILocation(line: 1449, column: 3, scope: !11409)
!11480 = !DILocation(line: 1450, column: 2, scope: !11400)
!11481 = !DILocation(line: 1451, column: 1, scope: !11243)
!11482 = distinct !DISubprogram(name: "vgroup_duplicate", scope: !3, file: !3, line: 1453, type: !4576, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11483 = !DILocalVariable(name: "ob", arg: 1, scope: !11482, file: !3, line: 1453, type: !3872)
!11484 = !DILocation(line: 1453, column: 38, scope: !11482)
!11485 = !DILocalVariable(name: "dg", scope: !11482, file: !3, line: 1455, type: !1368)
!11486 = !DILocation(line: 1455, column: 16, scope: !11482)
!11487 = !DILocalVariable(name: "cdg", scope: !11482, file: !3, line: 1455, type: !1368)
!11488 = !DILocation(line: 1455, column: 21, scope: !11482)
!11489 = !DILocalVariable(name: "name", scope: !11482, file: !3, line: 1456, type: !1282)
!11490 = !DILocation(line: 1456, column: 7, scope: !11482)
!11491 = !DILocalVariable(name: "dw_org", scope: !11482, file: !3, line: 1457, type: !4449)
!11492 = !DILocation(line: 1457, column: 17, scope: !11482)
!11493 = !DILocalVariable(name: "dw_cpy", scope: !11482, file: !3, line: 1457, type: !4449)
!11494 = !DILocation(line: 1457, column: 26, scope: !11482)
!11495 = !DILocalVariable(name: "dvert_array", scope: !11482, file: !3, line: 1458, type: !4668)
!11496 = !DILocation(line: 1458, column: 16, scope: !11482)
!11497 = !DILocalVariable(name: "i", scope: !11482, file: !3, line: 1459, type: !354)
!11498 = !DILocation(line: 1459, column: 6, scope: !11482)
!11499 = !DILocalVariable(name: "idg", scope: !11482, file: !3, line: 1459, type: !354)
!11500 = !DILocation(line: 1459, column: 9, scope: !11482)
!11501 = !DILocalVariable(name: "icdg", scope: !11482, file: !3, line: 1459, type: !354)
!11502 = !DILocation(line: 1459, column: 14, scope: !11482)
!11503 = !DILocalVariable(name: "dvert_tot", scope: !11482, file: !3, line: 1459, type: !354)
!11504 = !DILocation(line: 1459, column: 20, scope: !11482)
!11505 = !DILocation(line: 1461, column: 21, scope: !11482)
!11506 = !DILocation(line: 1461, column: 25, scope: !11482)
!11507 = !DILocation(line: 1461, column: 35, scope: !11482)
!11508 = !DILocation(line: 1461, column: 39, scope: !11482)
!11509 = !DILocation(line: 1461, column: 46, scope: !11482)
!11510 = !DILocation(line: 1461, column: 7, scope: !11482)
!11511 = !DILocation(line: 1461, column: 5, scope: !11482)
!11512 = !DILocation(line: 1462, column: 7, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 1462, column: 6)
!11514 = !DILocation(line: 1462, column: 6, scope: !11482)
!11515 = !DILocation(line: 1463, column: 3, scope: !11513)
!11516 = !DILocation(line: 1465, column: 14, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 1465, column: 6)
!11518 = !DILocation(line: 1465, column: 18, scope: !11517)
!11519 = !DILocation(line: 1465, column: 7, scope: !11517)
!11520 = !DILocation(line: 1465, column: 6, scope: !11482)
!11521 = !DILocation(line: 1466, column: 16, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 1465, column: 34)
!11523 = !DILocation(line: 1466, column: 47, scope: !11522)
!11524 = !DILocation(line: 1466, column: 51, scope: !11522)
!11525 = !DILocation(line: 1466, column: 3, scope: !11522)
!11526 = !DILocation(line: 1467, column: 2, scope: !11522)
!11527 = !DILocation(line: 1469, column: 15, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11517, file: !3, line: 1468, column: 7)
!11529 = !DILocation(line: 1469, column: 21, scope: !11528)
!11530 = !DILocation(line: 1469, column: 25, scope: !11528)
!11531 = !DILocation(line: 1469, column: 3, scope: !11528)
!11532 = !DILocation(line: 1472, column: 27, scope: !11482)
!11533 = !DILocation(line: 1472, column: 8, scope: !11482)
!11534 = !DILocation(line: 1472, column: 6, scope: !11482)
!11535 = !DILocation(line: 1473, column: 14, scope: !11482)
!11536 = !DILocation(line: 1473, column: 19, scope: !11482)
!11537 = !DILocation(line: 1473, column: 25, scope: !11482)
!11538 = !DILocation(line: 1473, column: 2, scope: !11482)
!11539 = !DILocation(line: 1474, column: 23, scope: !11482)
!11540 = !DILocation(line: 1474, column: 28, scope: !11482)
!11541 = !DILocation(line: 1474, column: 2, scope: !11482)
!11542 = !DILocation(line: 1476, column: 15, scope: !11482)
!11543 = !DILocation(line: 1476, column: 19, scope: !11482)
!11544 = !DILocation(line: 1476, column: 28, scope: !11482)
!11545 = !DILocation(line: 1476, column: 2, scope: !11482)
!11546 = !DILocation(line: 1478, column: 9, scope: !11482)
!11547 = !DILocation(line: 1478, column: 13, scope: !11482)
!11548 = !DILocation(line: 1478, column: 20, scope: !11482)
!11549 = !DILocation(line: 1478, column: 6, scope: !11482)
!11550 = !DILocation(line: 1479, column: 30, scope: !11482)
!11551 = !DILocation(line: 1479, column: 34, scope: !11482)
!11552 = !DILocation(line: 1479, column: 15, scope: !11482)
!11553 = !DILocation(line: 1479, column: 2, scope: !11482)
!11554 = !DILocation(line: 1479, column: 6, scope: !11482)
!11555 = !DILocation(line: 1479, column: 13, scope: !11482)
!11556 = !DILocation(line: 1480, column: 10, scope: !11482)
!11557 = !DILocation(line: 1480, column: 14, scope: !11482)
!11558 = !DILocation(line: 1480, column: 21, scope: !11482)
!11559 = !DILocation(line: 1480, column: 7, scope: !11482)
!11560 = !DILocation(line: 1483, column: 25, scope: !11482)
!11561 = !DILocation(line: 1483, column: 29, scope: !11482)
!11562 = !DILocation(line: 1483, column: 2, scope: !11482)
!11563 = !DILocation(line: 1485, column: 6, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 1485, column: 6)
!11565 = !DILocation(line: 1485, column: 6, scope: !11482)
!11566 = !DILocation(line: 1486, column: 10, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 1486, column: 3)
!11568 = distinct !DILexicalBlock(scope: !11564, file: !3, line: 1485, column: 19)
!11569 = !DILocation(line: 1486, column: 8, scope: !11567)
!11570 = !DILocation(line: 1486, column: 15, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11567, file: !3, line: 1486, column: 3)
!11572 = !DILocation(line: 1486, column: 19, scope: !11571)
!11573 = !DILocation(line: 1486, column: 17, scope: !11571)
!11574 = !DILocation(line: 1486, column: 3, scope: !11567)
!11575 = !DILocalVariable(name: "dv", scope: !11576, file: !3, line: 1487, type: !4203)
!11576 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 1486, column: 35)
!11577 = !DILocation(line: 1487, column: 17, scope: !11576)
!11578 = !DILocation(line: 1487, column: 22, scope: !11576)
!11579 = !DILocation(line: 1487, column: 34, scope: !11576)
!11580 = !DILocation(line: 1488, column: 32, scope: !11576)
!11581 = !DILocation(line: 1488, column: 36, scope: !11576)
!11582 = !DILocation(line: 1488, column: 13, scope: !11576)
!11583 = !DILocation(line: 1488, column: 11, scope: !11576)
!11584 = !DILocation(line: 1489, column: 8, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11576, file: !3, line: 1489, column: 8)
!11586 = !DILocation(line: 1489, column: 8, scope: !11576)
!11587 = !DILocalVariable(name: "weight", scope: !11588, file: !3, line: 1491, type: !1851)
!11588 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 1489, column: 16)
!11589 = !DILocation(line: 1491, column: 17, scope: !11588)
!11590 = !DILocation(line: 1491, column: 26, scope: !11588)
!11591 = !DILocation(line: 1491, column: 34, scope: !11588)
!11592 = !DILocation(line: 1492, column: 35, scope: !11588)
!11593 = !DILocation(line: 1492, column: 39, scope: !11588)
!11594 = !DILocation(line: 1492, column: 14, scope: !11588)
!11595 = !DILocation(line: 1492, column: 12, scope: !11588)
!11596 = !DILocation(line: 1493, column: 22, scope: !11588)
!11597 = !DILocation(line: 1493, column: 5, scope: !11588)
!11598 = !DILocation(line: 1493, column: 13, scope: !11588)
!11599 = !DILocation(line: 1493, column: 20, scope: !11588)
!11600 = !DILocation(line: 1494, column: 4, scope: !11588)
!11601 = !DILocation(line: 1495, column: 3, scope: !11576)
!11602 = !DILocation(line: 1486, column: 31, scope: !11571)
!11603 = !DILocation(line: 1486, column: 3, scope: !11571)
!11604 = distinct !{!11604, !11574, !11605}
!11605 = !DILocation(line: 1495, column: 3, scope: !11567)
!11606 = !DILocation(line: 1497, column: 3, scope: !11568)
!11607 = !DILocation(line: 1497, column: 13, scope: !11568)
!11608 = !DILocation(line: 1498, column: 2, scope: !11568)
!11609 = !DILocation(line: 1499, column: 1, scope: !11482)
!11610 = distinct !DISubprogram(name: "vgroup_levels_subset", scope: !3, file: !3, line: 1990, type: !11611, scopeLine: 1993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11611 = !DISubroutineType(types: !11612)
!11612 = !{null, !3872, !5078, !4075, !4075, !1851, !1851}
!11613 = !DILocalVariable(name: "ob", arg: 1, scope: !11610, file: !3, line: 1990, type: !3872)
!11614 = !DILocation(line: 1990, column: 42, scope: !11610)
!11615 = !DILocalVariable(name: "vgroup_validmap", arg: 2, scope: !11610, file: !3, line: 1990, type: !5078)
!11616 = !DILocation(line: 1990, column: 58, scope: !11610)
!11617 = !DILocalVariable(name: "vgroup_tot", arg: 3, scope: !11610, file: !3, line: 1990, type: !4075)
!11618 = !DILocation(line: 1990, column: 85, scope: !11610)
!11619 = !DILocalVariable(name: "UNUSED_subset_count", arg: 4, scope: !11610, file: !3, line: 1991, type: !4075)
!11620 = !DILocation(line: 1991, column: 44, scope: !11610)
!11621 = !DILocalVariable(name: "offset", arg: 5, scope: !11610, file: !3, line: 1992, type: !1851)
!11622 = !DILocation(line: 1992, column: 46, scope: !11610)
!11623 = !DILocalVariable(name: "gain", arg: 6, scope: !11610, file: !3, line: 1992, type: !1851)
!11624 = !DILocation(line: 1992, column: 66, scope: !11610)
!11625 = !DILocalVariable(name: "dw", scope: !11610, file: !3, line: 1994, type: !4449)
!11626 = !DILocation(line: 1994, column: 17, scope: !11610)
!11627 = !DILocalVariable(name: "dv", scope: !11610, file: !3, line: 1995, type: !4203)
!11628 = !DILocation(line: 1995, column: 15, scope: !11610)
!11629 = !DILocalVariable(name: "dvert_array", scope: !11610, file: !3, line: 1995, type: !4668)
!11630 = !DILocation(line: 1995, column: 21, scope: !11610)
!11631 = !DILocalVariable(name: "i", scope: !11610, file: !3, line: 1996, type: !354)
!11632 = !DILocation(line: 1996, column: 6, scope: !11610)
!11633 = !DILocalVariable(name: "dvert_tot", scope: !11610, file: !3, line: 1996, type: !354)
!11634 = !DILocation(line: 1996, column: 9, scope: !11610)
!11635 = !DILocalVariable(name: "use_vert_sel", scope: !11610, file: !3, line: 1998, type: !3381)
!11636 = !DILocation(line: 1998, column: 13, scope: !11610)
!11637 = !DILocation(line: 1998, column: 54, scope: !11610)
!11638 = !DILocation(line: 1998, column: 28, scope: !11610)
!11639 = !DILocalVariable(name: "use_mirror", scope: !11610, file: !3, line: 1999, type: !3381)
!11640 = !DILocation(line: 1999, column: 13, scope: !11610)
!11641 = !DILocation(line: 1999, column: 27, scope: !11610)
!11642 = !DILocation(line: 1999, column: 31, scope: !11610)
!11643 = !DILocation(line: 1999, column: 36, scope: !11610)
!11644 = !DILocation(line: 1999, column: 26, scope: !11610)
!11645 = !DILocation(line: 1999, column: 60, scope: !11610)
!11646 = !DILocation(line: 1999, column: 64, scope: !11610)
!11647 = !DILocation(line: 1999, column: 52, scope: !11610)
!11648 = !DILocation(line: 1999, column: 71, scope: !11610)
!11649 = !DILocation(line: 1999, column: 51, scope: !11610)
!11650 = !DILocation(line: 1999, column: 80, scope: !11610)
!11651 = !DILocation(line: 1999, column: 100, scope: !11610)
!11652 = !DILocation(line: 2001, column: 25, scope: !11610)
!11653 = !DILocation(line: 2001, column: 29, scope: !11610)
!11654 = !DILocation(line: 2001, column: 61, scope: !11610)
!11655 = !DILocation(line: 2001, column: 2, scope: !11610)
!11656 = !DILocation(line: 2003, column: 6, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11610, file: !3, line: 2003, column: 6)
!11658 = !DILocation(line: 2003, column: 6, scope: !11610)
!11659 = !DILocation(line: 2005, column: 10, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 2005, column: 3)
!11661 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 2003, column: 19)
!11662 = !DILocation(line: 2005, column: 8, scope: !11660)
!11663 = !DILocation(line: 2005, column: 15, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11660, file: !3, line: 2005, column: 3)
!11665 = !DILocation(line: 2005, column: 19, scope: !11664)
!11666 = !DILocation(line: 2005, column: 17, scope: !11664)
!11667 = !DILocation(line: 2005, column: 3, scope: !11660)
!11668 = !DILocalVariable(name: "j", scope: !11669, file: !3, line: 2006, type: !354)
!11669 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 2005, column: 35)
!11670 = !DILocation(line: 2006, column: 8, scope: !11669)
!11671 = !DILocation(line: 2009, column: 15, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 2009, column: 8)
!11673 = !DILocation(line: 2009, column: 27, scope: !11672)
!11674 = !DILocation(line: 2009, column: 13, scope: !11672)
!11675 = !DILocation(line: 2009, column: 8, scope: !11669)
!11676 = !DILocation(line: 2010, column: 5, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11672, file: !3, line: 2009, column: 32)
!11678 = !DILocation(line: 2013, column: 8, scope: !11669)
!11679 = !DILocation(line: 2013, column: 6, scope: !11669)
!11680 = !DILocation(line: 2014, column: 4, scope: !11669)
!11681 = !DILocation(line: 2014, column: 12, scope: !11669)
!11682 = !DILocation(line: 2015, column: 9, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 2015, column: 9)
!11684 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 2014, column: 16)
!11685 = !DILocation(line: 2015, column: 25, scope: !11683)
!11686 = !DILocation(line: 2015, column: 9, scope: !11684)
!11687 = !DILocation(line: 2016, column: 30, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 2015, column: 29)
!11689 = !DILocation(line: 2016, column: 34, scope: !11688)
!11690 = !DILocation(line: 2016, column: 11, scope: !11688)
!11691 = !DILocation(line: 2016, column: 9, scope: !11688)
!11692 = !DILocation(line: 2017, column: 10, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 2017, column: 10)
!11694 = !DILocation(line: 2017, column: 10, scope: !11688)
!11695 = !DILocation(line: 2018, column: 20, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11693, file: !3, line: 2017, column: 14)
!11697 = !DILocation(line: 2018, column: 28, scope: !11696)
!11698 = !DILocation(line: 2018, column: 32, scope: !11696)
!11699 = !DILocation(line: 2018, column: 41, scope: !11696)
!11700 = !DILocation(line: 2018, column: 39, scope: !11696)
!11701 = !DILocation(line: 2018, column: 25, scope: !11696)
!11702 = !DILocation(line: 2018, column: 7, scope: !11696)
!11703 = !DILocation(line: 2018, column: 11, scope: !11696)
!11704 = !DILocation(line: 2018, column: 18, scope: !11696)
!11705 = !DILocation(line: 2020, column: 7, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 2020, column: 7)
!11707 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 2020, column: 7)
!11708 = !DILocation(line: 2020, column: 7, scope: !11707)
!11709 = !DILocation(line: 2020, column: 7, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11706, file: !3, line: 2020, column: 7)
!11711 = !DILocation(line: 2021, column: 6, scope: !11696)
!11712 = !DILocation(line: 2022, column: 5, scope: !11688)
!11713 = distinct !{!11713, !11680, !11714}
!11714 = !DILocation(line: 2023, column: 4, scope: !11669)
!11715 = !DILocation(line: 2024, column: 3, scope: !11669)
!11716 = !DILocation(line: 2005, column: 31, scope: !11664)
!11717 = !DILocation(line: 2005, column: 3, scope: !11664)
!11718 = distinct !{!11718, !11667, !11719}
!11719 = !DILocation(line: 2024, column: 3, scope: !11660)
!11720 = !DILocation(line: 2026, column: 7, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11661, file: !3, line: 2026, column: 7)
!11722 = !DILocation(line: 2026, column: 18, scope: !11721)
!11723 = !DILocation(line: 2026, column: 21, scope: !11721)
!11724 = !DILocation(line: 2026, column: 7, scope: !11661)
!11725 = !DILocation(line: 2027, column: 33, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 2026, column: 35)
!11727 = !DILocation(line: 2027, column: 37, scope: !11726)
!11728 = !DILocation(line: 2027, column: 50, scope: !11726)
!11729 = !DILocation(line: 2028, column: 33, scope: !11726)
!11730 = !DILocation(line: 2028, column: 50, scope: !11726)
!11731 = !DILocation(line: 2027, column: 4, scope: !11726)
!11732 = !DILocation(line: 2029, column: 3, scope: !11726)
!11733 = !DILocation(line: 2031, column: 3, scope: !11661)
!11734 = !DILocation(line: 2031, column: 13, scope: !11661)
!11735 = !DILocation(line: 2032, column: 2, scope: !11661)
!11736 = !DILocation(line: 2033, column: 1, scope: !11610)
!11737 = distinct !DISubprogram(name: "vertex_group_use_vert_sel", scope: !3, file: !3, line: 93, type: !3870, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11738 = !DILocalVariable(name: "ob", arg: 1, scope: !11737, file: !3, line: 93, type: !3872)
!11739 = !DILocation(line: 93, column: 47, scope: !11737)
!11740 = !DILocation(line: 95, column: 6, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11737, file: !3, line: 95, column: 6)
!11742 = !DILocation(line: 95, column: 10, scope: !11741)
!11743 = !DILocation(line: 95, column: 15, scope: !11741)
!11744 = !DILocation(line: 95, column: 6, scope: !11737)
!11745 = !DILocation(line: 96, column: 3, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 95, column: 32)
!11747 = !DILocation(line: 98, column: 11, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 98, column: 11)
!11749 = !DILocation(line: 98, column: 15, scope: !11748)
!11750 = !DILocation(line: 98, column: 20, scope: !11748)
!11751 = !DILocation(line: 98, column: 31, scope: !11748)
!11752 = !DILocation(line: 98, column: 43, scope: !11748)
!11753 = !DILocation(line: 98, column: 47, scope: !11748)
!11754 = !DILocation(line: 98, column: 35, scope: !11748)
!11755 = !DILocation(line: 98, column: 54, scope: !11748)
!11756 = !DILocation(line: 98, column: 34, scope: !11748)
!11757 = !DILocation(line: 98, column: 63, scope: !11748)
!11758 = !DILocation(line: 98, column: 11, scope: !11741)
!11759 = !DILocation(line: 99, column: 3, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11748, file: !3, line: 98, column: 89)
!11761 = !DILocation(line: 102, column: 3, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11748, file: !3, line: 101, column: 7)
!11763 = !DILocation(line: 104, column: 1, scope: !11737)
!11764 = distinct !DISubprogram(name: "rna_vertex_group_with_single_itemf", scope: !3, file: !3, line: 839, type: !9797, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11765 = !DILocalVariable(name: "C", arg: 1, scope: !11764, file: !3, line: 839, type: !7700)
!11766 = !DILocation(line: 839, column: 71, scope: !11764)
!11767 = !DILocalVariable(name: "ptr", arg: 2, scope: !11764, file: !3, line: 839, type: !6420)
!11768 = !DILocation(line: 839, column: 86, scope: !11764)
!11769 = !DILocalVariable(name: "prop", arg: 3, scope: !11764, file: !3, line: 840, type: !3792)
!11770 = !DILocation(line: 840, column: 74, scope: !11764)
!11771 = !DILocalVariable(name: "r_free", arg: 4, scope: !11764, file: !3, line: 840, type: !6422)
!11772 = !DILocation(line: 840, column: 86, scope: !11764)
!11773 = !DILocation(line: 842, column: 49, scope: !11764)
!11774 = !DILocation(line: 842, column: 52, scope: !11764)
!11775 = !DILocation(line: 842, column: 57, scope: !11764)
!11776 = !DILocation(line: 842, column: 63, scope: !11764)
!11777 = !DILocation(line: 842, column: 9, scope: !11764)
!11778 = !DILocation(line: 842, column: 2, scope: !11764)
!11779 = distinct !DISubprogram(name: "rna_vertex_group_select_itemf", scope: !3, file: !3, line: 845, type: !9797, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11780 = !DILocalVariable(name: "C", arg: 1, scope: !11779, file: !3, line: 845, type: !7700)
!11781 = !DILocation(line: 845, column: 66, scope: !11779)
!11782 = !DILocalVariable(name: "ptr", arg: 2, scope: !11779, file: !3, line: 845, type: !6420)
!11783 = !DILocation(line: 845, column: 81, scope: !11779)
!11784 = !DILocalVariable(name: "prop", arg: 3, scope: !11779, file: !3, line: 846, type: !3792)
!11785 = !DILocation(line: 846, column: 69, scope: !11779)
!11786 = !DILocalVariable(name: "r_free", arg: 4, scope: !11779, file: !3, line: 846, type: !6422)
!11787 = !DILocation(line: 846, column: 81, scope: !11779)
!11788 = !DILocation(line: 848, column: 49, scope: !11779)
!11789 = !DILocation(line: 848, column: 52, scope: !11779)
!11790 = !DILocation(line: 848, column: 57, scope: !11779)
!11791 = !DILocation(line: 848, column: 63, scope: !11779)
!11792 = !DILocation(line: 848, column: 9, scope: !11779)
!11793 = !DILocation(line: 848, column: 2, scope: !11779)
!11794 = distinct !DISubprogram(name: "vgroup_normalize", scope: !3, file: !3, line: 1581, type: !4576, scopeLine: 1582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11795 = !DILocalVariable(name: "ob", arg: 1, scope: !11794, file: !3, line: 1581, type: !3872)
!11796 = !DILocation(line: 1581, column: 38, scope: !11794)
!11797 = !DILocalVariable(name: "dw", scope: !11794, file: !3, line: 1583, type: !4449)
!11798 = !DILocation(line: 1583, column: 17, scope: !11794)
!11799 = !DILocalVariable(name: "dv", scope: !11794, file: !3, line: 1584, type: !4203)
!11800 = !DILocation(line: 1584, column: 15, scope: !11794)
!11801 = !DILocalVariable(name: "dvert_array", scope: !11794, file: !3, line: 1584, type: !4668)
!11802 = !DILocation(line: 1584, column: 21, scope: !11794)
!11803 = !DILocalVariable(name: "i", scope: !11794, file: !3, line: 1585, type: !354)
!11804 = !DILocation(line: 1585, column: 6, scope: !11794)
!11805 = !DILocalVariable(name: "dvert_tot", scope: !11794, file: !3, line: 1585, type: !354)
!11806 = !DILocation(line: 1585, column: 9, scope: !11794)
!11807 = !DILocalVariable(name: "def_nr", scope: !11794, file: !3, line: 1586, type: !4075)
!11808 = !DILocation(line: 1586, column: 12, scope: !11794)
!11809 = !DILocation(line: 1586, column: 21, scope: !11794)
!11810 = !DILocation(line: 1586, column: 25, scope: !11794)
!11811 = !DILocation(line: 1586, column: 32, scope: !11794)
!11812 = !DILocalVariable(name: "use_vert_sel", scope: !11794, file: !3, line: 1588, type: !4075)
!11813 = !DILocation(line: 1588, column: 12, scope: !11794)
!11814 = !DILocation(line: 1588, column: 53, scope: !11794)
!11815 = !DILocation(line: 1588, column: 27, scope: !11794)
!11816 = !DILocation(line: 1590, column: 21, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 1590, column: 6)
!11818 = !DILocation(line: 1590, column: 25, scope: !11817)
!11819 = !DILocation(line: 1590, column: 34, scope: !11817)
!11820 = !DILocation(line: 1590, column: 7, scope: !11817)
!11821 = !DILocation(line: 1590, column: 6, scope: !11794)
!11822 = !DILocation(line: 1591, column: 3, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 1590, column: 43)
!11824 = !DILocation(line: 1594, column: 25, scope: !11794)
!11825 = !DILocation(line: 1594, column: 29, scope: !11794)
!11826 = !DILocation(line: 1594, column: 61, scope: !11794)
!11827 = !DILocation(line: 1594, column: 2, scope: !11794)
!11828 = !DILocation(line: 1596, column: 6, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 1596, column: 6)
!11830 = !DILocation(line: 1596, column: 6, scope: !11794)
!11831 = !DILocalVariable(name: "weight_max", scope: !11832, file: !3, line: 1597, type: !1320)
!11832 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 1596, column: 19)
!11833 = !DILocation(line: 1597, column: 9, scope: !11832)
!11834 = !DILocation(line: 1599, column: 10, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 1599, column: 3)
!11836 = !DILocation(line: 1599, column: 8, scope: !11835)
!11837 = !DILocation(line: 1599, column: 15, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 1599, column: 3)
!11839 = !DILocation(line: 1599, column: 19, scope: !11838)
!11840 = !DILocation(line: 1599, column: 17, scope: !11838)
!11841 = !DILocation(line: 1599, column: 3, scope: !11835)
!11842 = !DILocation(line: 1602, column: 15, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !3, line: 1602, column: 8)
!11844 = distinct !DILexicalBlock(scope: !11838, file: !3, line: 1599, column: 35)
!11845 = !DILocation(line: 1602, column: 27, scope: !11843)
!11846 = !DILocation(line: 1602, column: 13, scope: !11843)
!11847 = !DILocation(line: 1602, column: 8, scope: !11844)
!11848 = !DILocation(line: 1603, column: 5, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11843, file: !3, line: 1602, column: 32)
!11850 = !DILocation(line: 1606, column: 28, scope: !11844)
!11851 = !DILocation(line: 1606, column: 32, scope: !11844)
!11852 = !DILocation(line: 1606, column: 9, scope: !11844)
!11853 = !DILocation(line: 1606, column: 7, scope: !11844)
!11854 = !DILocation(line: 1607, column: 8, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11844, file: !3, line: 1607, column: 8)
!11856 = !DILocation(line: 1607, column: 8, scope: !11844)
!11857 = !DILocation(line: 1608, column: 25, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 1607, column: 12)
!11859 = !DILocation(line: 1608, column: 29, scope: !11858)
!11860 = !DILocation(line: 1608, column: 37, scope: !11858)
!11861 = !DILocation(line: 1608, column: 18, scope: !11858)
!11862 = !DILocation(line: 1608, column: 16, scope: !11858)
!11863 = !DILocation(line: 1609, column: 4, scope: !11858)
!11864 = !DILocation(line: 1610, column: 3, scope: !11844)
!11865 = !DILocation(line: 1599, column: 31, scope: !11838)
!11866 = !DILocation(line: 1599, column: 3, scope: !11838)
!11867 = distinct !{!11867, !11841, !11868}
!11868 = !DILocation(line: 1610, column: 3, scope: !11835)
!11869 = !DILocation(line: 1612, column: 7, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 1612, column: 7)
!11871 = !DILocation(line: 1612, column: 18, scope: !11870)
!11872 = !DILocation(line: 1612, column: 7, scope: !11832)
!11873 = !DILocation(line: 1613, column: 11, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 1613, column: 4)
!11875 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 1612, column: 26)
!11876 = !DILocation(line: 1613, column: 9, scope: !11874)
!11877 = !DILocation(line: 1613, column: 16, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11874, file: !3, line: 1613, column: 4)
!11879 = !DILocation(line: 1613, column: 20, scope: !11878)
!11880 = !DILocation(line: 1613, column: 18, scope: !11878)
!11881 = !DILocation(line: 1613, column: 4, scope: !11874)
!11882 = !DILocation(line: 1616, column: 16, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !3, line: 1616, column: 9)
!11884 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 1613, column: 36)
!11885 = !DILocation(line: 1616, column: 28, scope: !11883)
!11886 = !DILocation(line: 1616, column: 14, scope: !11883)
!11887 = !DILocation(line: 1616, column: 9, scope: !11884)
!11888 = !DILocation(line: 1617, column: 6, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 1616, column: 33)
!11890 = !DILocation(line: 1620, column: 29, scope: !11884)
!11891 = !DILocation(line: 1620, column: 33, scope: !11884)
!11892 = !DILocation(line: 1620, column: 10, scope: !11884)
!11893 = !DILocation(line: 1620, column: 8, scope: !11884)
!11894 = !DILocation(line: 1621, column: 9, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11884, file: !3, line: 1621, column: 9)
!11896 = !DILocation(line: 1621, column: 9, scope: !11884)
!11897 = !DILocation(line: 1622, column: 20, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11895, file: !3, line: 1621, column: 13)
!11899 = !DILocation(line: 1622, column: 6, scope: !11898)
!11900 = !DILocation(line: 1622, column: 10, scope: !11898)
!11901 = !DILocation(line: 1622, column: 17, scope: !11898)
!11902 = !DILocation(line: 1625, column: 6, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 1625, column: 6)
!11904 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 1625, column: 6)
!11905 = !DILocation(line: 1625, column: 6, scope: !11904)
!11906 = !DILocation(line: 1625, column: 6, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11903, file: !3, line: 1625, column: 6)
!11908 = !DILocation(line: 1626, column: 5, scope: !11898)
!11909 = !DILocation(line: 1627, column: 4, scope: !11884)
!11910 = !DILocation(line: 1613, column: 32, scope: !11878)
!11911 = !DILocation(line: 1613, column: 4, scope: !11878)
!11912 = distinct !{!11912, !11881, !11913}
!11913 = !DILocation(line: 1627, column: 4, scope: !11874)
!11914 = !DILocation(line: 1628, column: 3, scope: !11875)
!11915 = !DILocation(line: 1630, column: 3, scope: !11832)
!11916 = !DILocation(line: 1630, column: 13, scope: !11832)
!11917 = !DILocation(line: 1631, column: 2, scope: !11832)
!11918 = !DILocation(line: 1632, column: 1, scope: !11794)
!11919 = distinct !DISubprogram(name: "max_ff", scope: !11920, file: !11920, line: 206, type: !11921, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11920 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11921 = !DISubroutineType(types: !11922)
!11922 = !{!1320, !1320, !1320}
!11923 = !DILocalVariable(name: "a", arg: 1, scope: !11919, file: !11920, line: 206, type: !1320)
!11924 = !DILocation(line: 206, column: 28, scope: !11919)
!11925 = !DILocalVariable(name: "b", arg: 2, scope: !11919, file: !11920, line: 206, type: !1320)
!11926 = !DILocation(line: 206, column: 37, scope: !11919)
!11927 = !DILocation(line: 208, column: 10, scope: !11919)
!11928 = !DILocation(line: 208, column: 14, scope: !11919)
!11929 = !DILocation(line: 208, column: 12, scope: !11919)
!11930 = !DILocation(line: 208, column: 9, scope: !11919)
!11931 = !DILocation(line: 208, column: 19, scope: !11919)
!11932 = !DILocation(line: 208, column: 23, scope: !11919)
!11933 = !DILocation(line: 208, column: 2, scope: !11919)
!11934 = distinct !DISubprogram(name: "vgroup_normalize_all", scope: !3, file: !3, line: 2035, type: !11935, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!11935 = !DISubroutineType(types: !11936)
!11936 = !{null, !3872, !5078, !4075, !4075, !3381}
!11937 = !DILocalVariable(name: "ob", arg: 1, scope: !11934, file: !3, line: 2035, type: !3872)
!11938 = !DILocation(line: 2035, column: 42, scope: !11934)
!11939 = !DILocalVariable(name: "vgroup_validmap", arg: 2, scope: !11934, file: !3, line: 2036, type: !5078)
!11940 = !DILocation(line: 2036, column: 46, scope: !11934)
!11941 = !DILocalVariable(name: "vgroup_tot", arg: 3, scope: !11934, file: !3, line: 2037, type: !4075)
!11942 = !DILocation(line: 2037, column: 44, scope: !11934)
!11943 = !DILocalVariable(name: "subset_count", arg: 4, scope: !11934, file: !3, line: 2038, type: !4075)
!11944 = !DILocation(line: 2038, column: 44, scope: !11934)
!11945 = !DILocalVariable(name: "lock_active", arg: 5, scope: !11934, file: !3, line: 2039, type: !3381)
!11946 = !DILocation(line: 2039, column: 45, scope: !11934)
!11947 = !DILocalVariable(name: "dv", scope: !11934, file: !3, line: 2041, type: !4203)
!11948 = !DILocation(line: 2041, column: 15, scope: !11934)
!11949 = !DILocalVariable(name: "dvert_array", scope: !11934, file: !3, line: 2041, type: !4668)
!11950 = !DILocation(line: 2041, column: 21, scope: !11934)
!11951 = !DILocalVariable(name: "i", scope: !11934, file: !3, line: 2042, type: !354)
!11952 = !DILocation(line: 2042, column: 6, scope: !11934)
!11953 = !DILocalVariable(name: "dvert_tot", scope: !11934, file: !3, line: 2042, type: !354)
!11954 = !DILocation(line: 2042, column: 9, scope: !11934)
!11955 = !DILocalVariable(name: "def_nr", scope: !11934, file: !3, line: 2043, type: !4075)
!11956 = !DILocation(line: 2043, column: 12, scope: !11934)
!11957 = !DILocation(line: 2043, column: 21, scope: !11934)
!11958 = !DILocation(line: 2043, column: 25, scope: !11934)
!11959 = !DILocation(line: 2043, column: 32, scope: !11934)
!11960 = !DILocalVariable(name: "use_vert_sel", scope: !11934, file: !3, line: 2045, type: !4075)
!11961 = !DILocation(line: 2045, column: 12, scope: !11934)
!11962 = !DILocation(line: 2045, column: 53, scope: !11934)
!11963 = !DILocation(line: 2045, column: 27, scope: !11934)
!11964 = !DILocation(line: 2047, column: 7, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 2047, column: 6)
!11966 = !DILocation(line: 2047, column: 19, scope: !11965)
!11967 = !DILocation(line: 2047, column: 37, scope: !11965)
!11968 = !DILocation(line: 2047, column: 41, scope: !11965)
!11969 = !DILocation(line: 2047, column: 50, scope: !11965)
!11970 = !DILocation(line: 2047, column: 23, scope: !11965)
!11971 = !DILocation(line: 2047, column: 59, scope: !11965)
!11972 = !DILocation(line: 2047, column: 62, scope: !11965)
!11973 = !DILocation(line: 2047, column: 75, scope: !11965)
!11974 = !DILocation(line: 2047, column: 6, scope: !11934)
!11975 = !DILocation(line: 2048, column: 3, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11965, file: !3, line: 2047, column: 81)
!11977 = !DILocation(line: 2051, column: 25, scope: !11934)
!11978 = !DILocation(line: 2051, column: 29, scope: !11934)
!11979 = !DILocation(line: 2051, column: 61, scope: !11934)
!11980 = !DILocation(line: 2051, column: 2, scope: !11934)
!11981 = !DILocation(line: 2053, column: 6, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 2053, column: 6)
!11983 = !DILocation(line: 2053, column: 6, scope: !11934)
!11984 = !DILocalVariable(name: "defbase_tot", scope: !11985, file: !3, line: 2054, type: !4075)
!11985 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 2053, column: 19)
!11986 = !DILocation(line: 2054, column: 13, scope: !11985)
!11987 = !DILocation(line: 2054, column: 42, scope: !11985)
!11988 = !DILocation(line: 2054, column: 46, scope: !11985)
!11989 = !DILocation(line: 2054, column: 27, scope: !11985)
!11990 = !DILocalVariable(name: "lock_flags", scope: !11985, file: !3, line: 2055, type: !6422)
!11991 = !DILocation(line: 2055, column: 9, scope: !11985)
!11992 = !DILocation(line: 2055, column: 48, scope: !11985)
!11993 = !DILocation(line: 2055, column: 52, scope: !11985)
!11994 = !DILocation(line: 2055, column: 22, scope: !11985)
!11995 = !DILocation(line: 2057, column: 8, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 2057, column: 7)
!11997 = !DILocation(line: 2057, column: 20, scope: !11996)
!11998 = !DILocation(line: 2057, column: 29, scope: !11996)
!11999 = !DILocation(line: 2058, column: 8, scope: !11996)
!12000 = !DILocation(line: 2058, column: 19, scope: !11996)
!12001 = !DILocation(line: 2058, column: 28, scope: !11996)
!12002 = !DILocation(line: 2059, column: 8, scope: !11996)
!12003 = !DILocation(line: 2059, column: 17, scope: !11996)
!12004 = !DILocation(line: 2059, column: 15, scope: !11996)
!12005 = !DILocation(line: 2057, column: 7, scope: !11985)
!12006 = !DILocation(line: 2061, column: 4, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 2060, column: 3)
!12008 = !DILocation(line: 2061, column: 15, scope: !12007)
!12009 = !DILocation(line: 2061, column: 23, scope: !12007)
!12010 = !DILocation(line: 2062, column: 3, scope: !12007)
!12011 = !DILocation(line: 2064, column: 10, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 2064, column: 3)
!12013 = !DILocation(line: 2064, column: 8, scope: !12012)
!12014 = !DILocation(line: 2064, column: 15, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 2064, column: 3)
!12016 = !DILocation(line: 2064, column: 19, scope: !12015)
!12017 = !DILocation(line: 2064, column: 17, scope: !12015)
!12018 = !DILocation(line: 2064, column: 3, scope: !12012)
!12019 = !DILocation(line: 2066, column: 14, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 2066, column: 8)
!12021 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 2064, column: 35)
!12022 = !DILocation(line: 2066, column: 26, scope: !12020)
!12023 = !DILocation(line: 2066, column: 12, scope: !12020)
!12024 = !DILocation(line: 2066, column: 8, scope: !12021)
!12025 = !DILocation(line: 2067, column: 9, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 2067, column: 9)
!12027 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 2066, column: 31)
!12028 = !DILocation(line: 2067, column: 9, scope: !12027)
!12029 = !DILocation(line: 2068, column: 33, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12026, file: !3, line: 2067, column: 21)
!12031 = !DILocation(line: 2068, column: 37, scope: !12030)
!12032 = !DILocation(line: 2068, column: 54, scope: !12030)
!12033 = !DILocation(line: 2069, column: 33, scope: !12030)
!12034 = !DILocation(line: 2069, column: 45, scope: !12030)
!12035 = !DILocation(line: 2068, column: 6, scope: !12030)
!12036 = !DILocation(line: 2070, column: 5, scope: !12030)
!12037 = !DILocation(line: 2071, column: 14, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12026, file: !3, line: 2071, column: 14)
!12039 = !DILocation(line: 2071, column: 14, scope: !12026)
!12040 = !DILocation(line: 2072, column: 36, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 2071, column: 27)
!12042 = !DILocation(line: 2072, column: 40, scope: !12041)
!12043 = !DILocation(line: 2072, column: 57, scope: !12041)
!12044 = !DILocation(line: 2073, column: 36, scope: !12041)
!12045 = !DILocation(line: 2072, column: 6, scope: !12041)
!12046 = !DILocation(line: 2074, column: 5, scope: !12041)
!12047 = !DILocation(line: 2076, column: 31, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 2075, column: 10)
!12049 = !DILocation(line: 2076, column: 35, scope: !12048)
!12050 = !DILocation(line: 2076, column: 52, scope: !12048)
!12051 = !DILocation(line: 2076, column: 6, scope: !12048)
!12052 = !DILocation(line: 2078, column: 4, scope: !12027)
!12053 = !DILocation(line: 2079, column: 3, scope: !12021)
!12054 = !DILocation(line: 2064, column: 31, scope: !12015)
!12055 = !DILocation(line: 2064, column: 3, scope: !12015)
!12056 = distinct !{!12056, !12018, !12057}
!12057 = !DILocation(line: 2079, column: 3, scope: !12012)
!12058 = !DILocation(line: 2081, column: 7, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 2081, column: 7)
!12060 = !DILocation(line: 2081, column: 7, scope: !11985)
!12061 = !DILocation(line: 2082, column: 4, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 2081, column: 19)
!12063 = !DILocation(line: 2082, column: 14, scope: !12062)
!12064 = !DILocation(line: 2083, column: 3, scope: !12062)
!12065 = !DILocation(line: 2085, column: 3, scope: !11985)
!12066 = !DILocation(line: 2085, column: 13, scope: !11985)
!12067 = !DILocation(line: 2086, column: 2, scope: !11985)
!12068 = !DILocation(line: 2087, column: 1, scope: !11934)
!12069 = distinct !DISubprogram(name: "vgroup_fix", scope: !3, file: !3, line: 1944, type: !12070, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{null, !8551, !3872, !1320, !1320, !1320}
!12072 = !DILocalVariable(name: "scene", arg: 1, scope: !12069, file: !3, line: 1944, type: !8551)
!12073 = !DILocation(line: 1944, column: 31, scope: !12069)
!12074 = !DILocalVariable(name: "ob", arg: 2, scope: !12069, file: !3, line: 1944, type: !3872)
!12075 = !DILocation(line: 1944, column: 46, scope: !12069)
!12076 = !DILocalVariable(name: "distToBe", arg: 3, scope: !12069, file: !3, line: 1944, type: !1320)
!12077 = !DILocation(line: 1944, column: 56, scope: !12069)
!12078 = !DILocalVariable(name: "strength", arg: 4, scope: !12069, file: !3, line: 1944, type: !1320)
!12079 = !DILocation(line: 1944, column: 72, scope: !12069)
!12080 = !DILocalVariable(name: "cp", arg: 5, scope: !12069, file: !3, line: 1944, type: !1320)
!12081 = !DILocation(line: 1944, column: 88, scope: !12069)
!12082 = !DILocalVariable(name: "i", scope: !12069, file: !3, line: 1946, type: !354)
!12083 = !DILocation(line: 1946, column: 6, scope: !12069)
!12084 = !DILocalVariable(name: "me", scope: !12069, file: !3, line: 1948, type: !1383)
!12085 = !DILocation(line: 1948, column: 8, scope: !12069)
!12086 = !DILocation(line: 1948, column: 13, scope: !12069)
!12087 = !DILocation(line: 1948, column: 17, scope: !12069)
!12088 = !DILocalVariable(name: "mvert", scope: !12069, file: !3, line: 1949, type: !3476)
!12089 = !DILocation(line: 1949, column: 9, scope: !12069)
!12090 = !DILocation(line: 1949, column: 17, scope: !12069)
!12091 = !DILocation(line: 1949, column: 21, scope: !12069)
!12092 = !DILocalVariable(name: "verts", scope: !12069, file: !3, line: 1950, type: !1972)
!12093 = !DILocation(line: 1950, column: 7, scope: !12069)
!12094 = !DILocation(line: 1951, column: 8, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 1951, column: 6)
!12096 = !DILocation(line: 1951, column: 12, scope: !12095)
!12097 = !DILocation(line: 1951, column: 21, scope: !12095)
!12098 = !DILocation(line: 1951, column: 6, scope: !12069)
!12099 = !DILocation(line: 1952, column: 3, scope: !12095)
!12100 = !DILocation(line: 1953, column: 9, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 1953, column: 2)
!12102 = !DILocation(line: 1953, column: 7, scope: !12101)
!12103 = !DILocation(line: 1953, column: 14, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12101, file: !3, line: 1953, column: 2)
!12105 = !DILocation(line: 1953, column: 18, scope: !12104)
!12106 = !DILocation(line: 1953, column: 22, scope: !12104)
!12107 = !DILocation(line: 1953, column: 16, scope: !12104)
!12108 = !DILocation(line: 1953, column: 30, scope: !12104)
!12109 = !DILocation(line: 1953, column: 33, scope: !12104)
!12110 = !DILocation(line: 0, scope: !12104)
!12111 = !DILocation(line: 1953, column: 2, scope: !12101)
!12112 = !DILocation(line: 1954, column: 7, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 1954, column: 7)
!12114 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 1953, column: 54)
!12115 = !DILocation(line: 1954, column: 14, scope: !12113)
!12116 = !DILocation(line: 1954, column: 19, scope: !12113)
!12117 = !DILocation(line: 1954, column: 7, scope: !12114)
!12118 = !DILocalVariable(name: "count", scope: !12119, file: !3, line: 1955, type: !354)
!12119 = distinct !DILexicalBlock(scope: !12113, file: !3, line: 1954, column: 29)
!12120 = !DILocation(line: 1955, column: 8, scope: !12119)
!12121 = !DILocation(line: 1956, column: 37, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 1956, column: 8)
!12123 = !DILocation(line: 1956, column: 41, scope: !12122)
!12124 = !DILocation(line: 1956, column: 17, scope: !12122)
!12125 = !DILocation(line: 1956, column: 15, scope: !12122)
!12126 = !DILocation(line: 1956, column: 8, scope: !12119)
!12127 = !DILocalVariable(name: "m", scope: !12128, file: !3, line: 1957, type: !3477)
!12128 = distinct !DILexicalBlock(scope: !12122, file: !3, line: 1956, column: 54)
!12129 = !DILocation(line: 1957, column: 11, scope: !12128)
!12130 = !DILocalVariable(name: "p", scope: !12128, file: !3, line: 1958, type: !3476)
!12131 = !DILocation(line: 1958, column: 12, scope: !12128)
!12132 = !DILocation(line: 1958, column: 16, scope: !12128)
!12133 = !DILocation(line: 1958, column: 45, scope: !12128)
!12134 = !DILocation(line: 1958, column: 44, scope: !12128)
!12135 = !DILocation(line: 1958, column: 42, scope: !12128)
!12136 = !DILocalVariable(name: "k", scope: !12128, file: !3, line: 1959, type: !354)
!12137 = !DILocation(line: 1959, column: 9, scope: !12128)
!12138 = !DILocalVariable(name: "dm", scope: !12128, file: !3, line: 1961, type: !1845)
!12139 = !DILocation(line: 1961, column: 18, scope: !12128)
!12140 = !DILocation(line: 1961, column: 47, scope: !12128)
!12141 = !DILocation(line: 1961, column: 54, scope: !12128)
!12142 = !DILocation(line: 1961, column: 58, scope: !12128)
!12143 = !DILocation(line: 1961, column: 23, scope: !12128)
!12144 = !DILocation(line: 1962, column: 9, scope: !12128)
!12145 = !DILocation(line: 1962, column: 7, scope: !12128)
!12146 = !DILocation(line: 1963, column: 5, scope: !12128)
!12147 = !DILocation(line: 1963, column: 13, scope: !12128)
!12148 = !DILocation(line: 1964, column: 6, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 1963, column: 17)
!12150 = !DILocation(line: 1964, column: 10, scope: !12149)
!12151 = !DILocation(line: 1964, column: 18, scope: !12149)
!12152 = !DILocation(line: 1964, column: 22, scope: !12149)
!12153 = !DILocation(line: 1964, column: 28, scope: !12149)
!12154 = !DILocation(line: 1965, column: 6, scope: !12149)
!12155 = !DILocation(line: 1965, column: 8, scope: !12149)
!12156 = !DILocation(line: 1965, column: 13, scope: !12149)
!12157 = distinct !{!12157, !12146, !12158}
!12158 = !DILocation(line: 1966, column: 5, scope: !12128)
!12159 = !DILocation(line: 1968, column: 9, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 1968, column: 9)
!12161 = !DILocation(line: 1968, column: 15, scope: !12160)
!12162 = !DILocation(line: 1968, column: 9, scope: !12128)
!12163 = !DILocalVariable(name: "d", scope: !12164, file: !3, line: 1969, type: !1320)
!12164 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 1968, column: 21)
!12165 = !DILocation(line: 1969, column: 12, scope: !12164)
!12166 = !DILocalVariable(name: "mag", scope: !12164, file: !3, line: 1969, type: !1320)
!12167 = !DILocation(line: 1969, column: 40, scope: !12164)
!12168 = !DILocalVariable(name: "coord", scope: !12164, file: !3, line: 1970, type: !1575)
!12169 = !DILocation(line: 1970, column: 12, scope: !12164)
!12170 = !DILocalVariable(name: "norm", scope: !12164, file: !3, line: 1971, type: !1575)
!12171 = !DILocation(line: 1971, column: 12, scope: !12164)
!12172 = !DILocation(line: 1972, column: 26, scope: !12164)
!12173 = !DILocation(line: 1972, column: 29, scope: !12164)
!12174 = !DILocation(line: 1972, column: 36, scope: !12164)
!12175 = !DILocation(line: 1972, column: 6, scope: !12164)
!12176 = !DILocation(line: 1973, column: 6, scope: !12164)
!12177 = !DILocation(line: 1973, column: 10, scope: !12164)
!12178 = !DILocation(line: 1973, column: 18, scope: !12164)
!12179 = !DILocation(line: 1973, column: 22, scope: !12164)
!12180 = !DILocation(line: 1974, column: 18, scope: !12164)
!12181 = !DILocation(line: 1974, column: 26, scope: !12164)
!12182 = !DILocation(line: 1974, column: 24, scope: !12164)
!12183 = !DILocation(line: 1974, column: 30, scope: !12164)
!12184 = !DILocation(line: 1974, column: 6, scope: !12164)
!12185 = !DILocation(line: 1975, column: 25, scope: !12164)
!12186 = !DILocation(line: 1975, column: 12, scope: !12164)
!12187 = !DILocation(line: 1975, column: 10, scope: !12164)
!12188 = !DILocation(line: 1976, column: 10, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 1976, column: 10)
!12190 = !DILocation(line: 1976, column: 10, scope: !12164)
!12191 = !DILocation(line: 1977, column: 21, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12189, file: !3, line: 1976, column: 15)
!12193 = !DILocation(line: 1977, column: 27, scope: !12192)
!12194 = !DILocation(line: 1977, column: 12, scope: !12192)
!12195 = !DILocation(line: 1977, column: 11, scope: !12192)
!12196 = !DILocation(line: 1977, column: 9, scope: !12192)
!12197 = !DILocation(line: 1979, column: 37, scope: !12192)
!12198 = !DILocation(line: 1979, column: 44, scope: !12192)
!12199 = !DILocation(line: 1979, column: 48, scope: !12192)
!12200 = !DILocation(line: 1979, column: 52, scope: !12192)
!12201 = !DILocation(line: 1979, column: 55, scope: !12192)
!12202 = !DILocation(line: 1979, column: 61, scope: !12192)
!12203 = !DILocation(line: 1979, column: 68, scope: !12192)
!12204 = !DILocation(line: 1979, column: 71, scope: !12192)
!12205 = !DILocation(line: 1979, column: 81, scope: !12192)
!12206 = !DILocation(line: 1979, column: 91, scope: !12192)
!12207 = !DILocation(line: 1979, column: 7, scope: !12192)
!12208 = !DILocation(line: 1980, column: 6, scope: !12192)
!12209 = !DILocation(line: 1981, column: 5, scope: !12164)
!12210 = !DILocation(line: 1983, column: 5, scope: !12128)
!12211 = !DILocation(line: 1983, column: 15, scope: !12128)
!12212 = !DILocation(line: 1984, column: 5, scope: !12128)
!12213 = !DILocation(line: 1984, column: 15, scope: !12128)
!12214 = !DILocation(line: 1985, column: 4, scope: !12128)
!12215 = !DILocation(line: 1986, column: 3, scope: !12119)
!12216 = !DILocation(line: 1987, column: 2, scope: !12114)
!12217 = !DILocation(line: 1953, column: 41, scope: !12104)
!12218 = !DILocation(line: 1953, column: 50, scope: !12104)
!12219 = !DILocation(line: 1953, column: 2, scope: !12104)
!12220 = distinct !{!12220, !12111, !12221}
!12221 = !DILocation(line: 1987, column: 2, scope: !12101)
!12222 = !DILocation(line: 1988, column: 1, scope: !12069)
!12223 = distinct !DISubprogram(name: "getSurroundingVerts", scope: !3, file: !3, line: 1637, type: !12224, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!12224 = !DISubroutineType(types: !12225)
!12225 = !{!1972, !1383, !354, !1972}
!12226 = !DILocalVariable(name: "me", arg: 1, scope: !12223, file: !3, line: 1637, type: !1383)
!12227 = !DILocation(line: 1637, column: 39, scope: !12223)
!12228 = !DILocalVariable(name: "vert", arg: 2, scope: !12223, file: !3, line: 1637, type: !354)
!12229 = !DILocation(line: 1637, column: 47, scope: !12223)
!12230 = !DILocalVariable(name: "count", arg: 3, scope: !12223, file: !3, line: 1637, type: !1972)
!12231 = !DILocation(line: 1637, column: 58, scope: !12223)
!12232 = !DILocalVariable(name: "mp", scope: !12223, file: !3, line: 1639, type: !12233)
!12233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12234, size: 64)
!12234 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !181, line: 85, baseType: !1415)
!12235 = !DILocation(line: 1639, column: 9, scope: !12223)
!12236 = !DILocation(line: 1639, column: 14, scope: !12223)
!12237 = !DILocation(line: 1639, column: 18, scope: !12223)
!12238 = !DILocalVariable(name: "i", scope: !12223, file: !3, line: 1640, type: !354)
!12239 = !DILocation(line: 1640, column: 6, scope: !12223)
!12240 = !DILocation(line: 1640, column: 10, scope: !12223)
!12241 = !DILocation(line: 1640, column: 14, scope: !12223)
!12242 = !DILocalVariable(name: "verts", scope: !12223, file: !3, line: 1644, type: !1972)
!12243 = !DILocation(line: 1644, column: 7, scope: !12223)
!12244 = !DILocalVariable(name: "_verts_count", scope: !12223, file: !3, line: 1645, type: !354)
!12245 = !DILocation(line: 1645, column: 2, scope: !12223)
!12246 = !DILocalVariable(name: "_verts_static", scope: !12223, file: !3, line: 1645, type: !1226)
!12247 = !DILocation(line: 1647, column: 2, scope: !12223)
!12248 = !DILocation(line: 1648, column: 2, scope: !12223)
!12249 = !DILocation(line: 1648, column: 10, scope: !12223)
!12250 = !DILocalVariable(name: "j", scope: !12251, file: !3, line: 1649, type: !354)
!12251 = distinct !DILexicalBlock(scope: !12223, file: !3, line: 1648, column: 14)
!12252 = !DILocation(line: 1649, column: 7, scope: !12251)
!12253 = !DILocation(line: 1649, column: 11, scope: !12251)
!12254 = !DILocation(line: 1649, column: 15, scope: !12251)
!12255 = !DILocalVariable(name: "first_l", scope: !12251, file: !3, line: 1650, type: !354)
!12256 = !DILocation(line: 1650, column: 7, scope: !12251)
!12257 = !DILocation(line: 1650, column: 17, scope: !12251)
!12258 = !DILocation(line: 1650, column: 21, scope: !12251)
!12259 = !DILocation(line: 1650, column: 29, scope: !12251)
!12260 = !DILocalVariable(name: "ml", scope: !12251, file: !3, line: 1651, type: !12261)
!12261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12262, size: 64)
!12262 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !181, line: 91, baseType: !1514)
!12263 = !DILocation(line: 1651, column: 10, scope: !12251)
!12264 = !DILocation(line: 1651, column: 16, scope: !12251)
!12265 = !DILocation(line: 1651, column: 20, scope: !12251)
!12266 = !DILocation(line: 1651, column: 26, scope: !12251)
!12267 = !DILocation(line: 1651, column: 30, scope: !12251)
!12268 = !DILocation(line: 1652, column: 3, scope: !12251)
!12269 = !DILocation(line: 1652, column: 11, scope: !12251)
!12270 = !DILocation(line: 1655, column: 8, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 1655, column: 8)
!12272 = distinct !DILexicalBlock(scope: !12251, file: !3, line: 1652, column: 15)
!12273 = !DILocation(line: 1655, column: 12, scope: !12271)
!12274 = !DILocation(line: 1655, column: 17, scope: !12271)
!12275 = !DILocation(line: 1655, column: 14, scope: !12271)
!12276 = !DILocation(line: 1655, column: 8, scope: !12272)
!12277 = !DILocalVariable(name: "a", scope: !12278, file: !3, line: 1656, type: !354)
!12278 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 1655, column: 23)
!12279 = !DILocation(line: 1656, column: 9, scope: !12278)
!12280 = !DILocalVariable(name: "b", scope: !12278, file: !3, line: 1656, type: !354)
!12281 = !DILocation(line: 1656, column: 12, scope: !12278)
!12282 = !DILocalVariable(name: "k", scope: !12278, file: !3, line: 1656, type: !354)
!12283 = !DILocation(line: 1656, column: 15, scope: !12278)
!12284 = !DILocation(line: 1657, column: 9, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 1657, column: 9)
!12286 = !DILocation(line: 1657, column: 14, scope: !12285)
!12287 = !DILocation(line: 1657, column: 11, scope: !12285)
!12288 = !DILocation(line: 1657, column: 9, scope: !12278)
!12289 = !DILocation(line: 1659, column: 10, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 1657, column: 23)
!12291 = !DILocation(line: 1659, column: 16, scope: !12290)
!12292 = !DILocation(line: 1659, column: 8, scope: !12290)
!12293 = !DILocation(line: 1660, column: 10, scope: !12290)
!12294 = !DILocation(line: 1660, column: 13, scope: !12290)
!12295 = !DILocation(line: 1660, column: 16, scope: !12290)
!12296 = !DILocation(line: 1660, column: 8, scope: !12290)
!12297 = !DILocation(line: 1661, column: 5, scope: !12290)
!12298 = !DILocation(line: 1662, column: 15, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 1662, column: 14)
!12300 = !DILocation(line: 1662, column: 14, scope: !12285)
!12301 = !DILocation(line: 1664, column: 11, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 1662, column: 18)
!12303 = !DILocation(line: 1664, column: 14, scope: !12302)
!12304 = !DILocation(line: 1664, column: 20, scope: !12302)
!12305 = !DILocation(line: 1664, column: 8, scope: !12302)
!12306 = !DILocation(line: 1665, column: 10, scope: !12302)
!12307 = !DILocation(line: 1665, column: 14, scope: !12302)
!12308 = !DILocation(line: 1665, column: 20, scope: !12302)
!12309 = !DILocation(line: 1665, column: 24, scope: !12302)
!12310 = !DILocation(line: 1665, column: 35, scope: !12302)
!12311 = !DILocation(line: 1665, column: 8, scope: !12302)
!12312 = !DILocation(line: 1666, column: 5, scope: !12302)
!12313 = !DILocation(line: 1668, column: 11, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 1667, column: 10)
!12315 = !DILocation(line: 1668, column: 14, scope: !12314)
!12316 = !DILocation(line: 1668, column: 20, scope: !12314)
!12317 = !DILocation(line: 1668, column: 8, scope: !12314)
!12318 = !DILocation(line: 1669, column: 11, scope: !12314)
!12319 = !DILocation(line: 1669, column: 14, scope: !12314)
!12320 = !DILocation(line: 1669, column: 20, scope: !12314)
!12321 = !DILocation(line: 1669, column: 8, scope: !12314)
!12322 = !DILocation(line: 1673, column: 9, scope: !12278)
!12323 = !DILocation(line: 1673, column: 7, scope: !12278)
!12324 = !DILocation(line: 1675, column: 5, scope: !12278)
!12325 = !DILocation(line: 1675, column: 13, scope: !12278)
!12326 = !DILocation(line: 1675, column: 16, scope: !12278)
!12327 = !DILocation(line: 1675, column: 21, scope: !12278)
!12328 = !DILocation(line: 1675, column: 26, scope: !12278)
!12329 = !DILocation(line: 1675, column: 23, scope: !12278)
!12330 = !DILocation(line: 1675, column: 28, scope: !12278)
!12331 = !DILocation(line: 1675, column: 31, scope: !12278)
!12332 = !DILocation(line: 1675, column: 33, scope: !12278)
!12333 = !DILocation(line: 0, scope: !12278)
!12334 = !DILocation(line: 1675, column: 19, scope: !12278)
!12335 = !DILocation(line: 1676, column: 10, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !3, line: 1676, column: 10)
!12337 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 1675, column: 41)
!12338 = !DILocation(line: 1676, column: 16, scope: !12336)
!12339 = !DILocation(line: 1676, column: 22, scope: !12336)
!12340 = !DILocation(line: 1676, column: 19, scope: !12336)
!12341 = !DILocation(line: 1676, column: 10, scope: !12337)
!12342 = !DILocation(line: 1677, column: 9, scope: !12336)
!12343 = !DILocation(line: 1677, column: 7, scope: !12336)
!12344 = !DILocation(line: 1678, column: 15, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 1678, column: 15)
!12346 = !DILocation(line: 1678, column: 21, scope: !12345)
!12347 = !DILocation(line: 1678, column: 27, scope: !12345)
!12348 = !DILocation(line: 1678, column: 24, scope: !12345)
!12349 = !DILocation(line: 1678, column: 15, scope: !12336)
!12350 = !DILocation(line: 1679, column: 9, scope: !12345)
!12351 = !DILocation(line: 1679, column: 7, scope: !12345)
!12352 = distinct !{!12352, !12324, !12353}
!12353 = !DILocation(line: 1680, column: 5, scope: !12278)
!12354 = !DILocation(line: 1681, column: 9, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 1681, column: 9)
!12356 = !DILocation(line: 1681, column: 11, scope: !12355)
!12357 = !DILocation(line: 1681, column: 9, scope: !12278)
!12358 = !DILocation(line: 1682, column: 6, scope: !12355)
!12359 = !DILocation(line: 1683, column: 9, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 1683, column: 9)
!12361 = !DILocation(line: 1683, column: 11, scope: !12360)
!12362 = !DILocation(line: 1683, column: 9, scope: !12278)
!12363 = !DILocation(line: 1684, column: 6, scope: !12360)
!12364 = !DILocation(line: 1687, column: 5, scope: !12278)
!12365 = !DILocation(line: 1689, column: 6, scope: !12272)
!12366 = distinct !{!12366, !12268, !12367}
!12367 = !DILocation(line: 1690, column: 3, scope: !12251)
!12368 = !DILocation(line: 1691, column: 5, scope: !12251)
!12369 = distinct !{!12369, !12248, !12370}
!12370 = !DILocation(line: 1692, column: 2, scope: !12223)
!12371 = !DILocation(line: 1695, column: 11, scope: !12223)
!12372 = !DILocation(line: 1695, column: 3, scope: !12223)
!12373 = !DILocation(line: 1695, column: 9, scope: !12223)
!12374 = !DILocation(line: 1696, column: 9, scope: !12223)
!12375 = !DILocation(line: 1696, column: 2, scope: !12223)
!12376 = distinct !DISubprogram(name: "getSingleCoordinate", scope: !3, file: !3, line: 1702, type: !12377, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!12377 = !DISubroutineType(types: !12378)
!12378 = !{null, !3476, !354, !2027}
!12379 = !DILocalVariable(name: "points", arg: 1, scope: !12376, file: !3, line: 1702, type: !3476)
!12380 = !DILocation(line: 1702, column: 40, scope: !12376)
!12381 = !DILocalVariable(name: "count", arg: 2, scope: !12376, file: !3, line: 1702, type: !354)
!12382 = !DILocation(line: 1702, column: 52, scope: !12376)
!12383 = !DILocalVariable(name: "coord", arg: 3, scope: !12376, file: !3, line: 1702, type: !2027)
!12384 = !DILocation(line: 1702, column: 65, scope: !12376)
!12385 = !DILocalVariable(name: "i", scope: !12376, file: !3, line: 1704, type: !354)
!12386 = !DILocation(line: 1704, column: 6, scope: !12376)
!12387 = !DILocation(line: 1705, column: 10, scope: !12376)
!12388 = !DILocation(line: 1705, column: 2, scope: !12376)
!12389 = !DILocation(line: 1706, column: 9, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12376, file: !3, line: 1706, column: 2)
!12391 = !DILocation(line: 1706, column: 7, scope: !12390)
!12392 = !DILocation(line: 1706, column: 14, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12390, file: !3, line: 1706, column: 2)
!12394 = !DILocation(line: 1706, column: 18, scope: !12393)
!12395 = !DILocation(line: 1706, column: 16, scope: !12393)
!12396 = !DILocation(line: 1706, column: 2, scope: !12390)
!12397 = !DILocation(line: 1707, column: 13, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 1706, column: 30)
!12399 = !DILocation(line: 1707, column: 20, scope: !12398)
!12400 = !DILocation(line: 1707, column: 27, scope: !12398)
!12401 = !DILocation(line: 1707, column: 30, scope: !12398)
!12402 = !DILocation(line: 1707, column: 3, scope: !12398)
!12403 = !DILocation(line: 1708, column: 2, scope: !12398)
!12404 = !DILocation(line: 1706, column: 26, scope: !12393)
!12405 = !DILocation(line: 1706, column: 2, scope: !12393)
!12406 = distinct !{!12406, !12396, !12407}
!12407 = !DILocation(line: 1708, column: 2, scope: !12390)
!12408 = !DILocation(line: 1709, column: 12, scope: !12376)
!12409 = !DILocation(line: 1709, column: 26, scope: !12376)
!12410 = !DILocation(line: 1709, column: 24, scope: !12376)
!12411 = !DILocation(line: 1709, column: 2, scope: !12376)
!12412 = !DILocation(line: 1710, column: 1, scope: !12376)
!12413 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !12414, file: !12414, line: 357, type: !12415, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!12414 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12415 = !DISubroutineType(types: !12416)
!12416 = !{null, !2027, !2001, !2001}
!12417 = !DILocalVariable(name: "r", arg: 1, scope: !12413, file: !12414, line: 357, type: !2027)
!12418 = !DILocation(line: 357, column: 32, scope: !12413)
!12419 = !DILocalVariable(name: "a", arg: 2, scope: !12413, file: !12414, line: 357, type: !2001)
!12420 = !DILocation(line: 357, column: 50, scope: !12413)
!12421 = !DILocalVariable(name: "b", arg: 3, scope: !12413, file: !12414, line: 357, type: !2001)
!12422 = !DILocation(line: 357, column: 68, scope: !12413)
!12423 = !DILocation(line: 359, column: 9, scope: !12413)
!12424 = !DILocation(line: 359, column: 16, scope: !12413)
!12425 = !DILocation(line: 359, column: 14, scope: !12413)
!12426 = !DILocation(line: 359, column: 2, scope: !12413)
!12427 = !DILocation(line: 359, column: 7, scope: !12413)
!12428 = !DILocation(line: 360, column: 9, scope: !12413)
!12429 = !DILocation(line: 360, column: 16, scope: !12413)
!12430 = !DILocation(line: 360, column: 14, scope: !12413)
!12431 = !DILocation(line: 360, column: 2, scope: !12413)
!12432 = !DILocation(line: 360, column: 7, scope: !12413)
!12433 = !DILocation(line: 361, column: 9, scope: !12413)
!12434 = !DILocation(line: 361, column: 16, scope: !12413)
!12435 = !DILocation(line: 361, column: 14, scope: !12413)
!12436 = !DILocation(line: 361, column: 2, scope: !12413)
!12437 = !DILocation(line: 361, column: 7, scope: !12413)
!12438 = !DILocation(line: 362, column: 1, scope: !12413)
!12439 = distinct !DISubprogram(name: "normalize_v3", scope: !12414, file: !12414, line: 830, type: !12440, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!12440 = !DISubroutineType(types: !12441)
!12441 = !{!1320, !2027}
!12442 = !DILocalVariable(name: "n", arg: 1, scope: !12439, file: !12414, line: 830, type: !2027)
!12443 = !DILocation(line: 830, column: 34, scope: !12439)
!12444 = !DILocation(line: 832, column: 25, scope: !12439)
!12445 = !DILocation(line: 832, column: 28, scope: !12439)
!12446 = !DILocation(line: 832, column: 9, scope: !12439)
!12447 = !DILocation(line: 832, column: 2, scope: !12439)
!12448 = distinct !DISubprogram(name: "dot_v3v3", scope: !12414, file: !12414, line: 619, type: !12449, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!12449 = !DISubroutineType(types: !12450)
!12450 = !{!1320, !2001, !2001}
!12451 = !DILocalVariable(name: "a", arg: 1, scope: !12448, file: !12414, line: 619, type: !2001)
!12452 = !DILocation(line: 619, column: 36, scope: !12448)
!12453 = !DILocalVariable(name: "b", arg: 2, scope: !12448, file: !12414, line: 619, type: !2001)
!12454 = !DILocation(line: 619, column: 54, scope: !12448)
!12455 = !DILocation(line: 621, column: 9, scope: !12448)
!12456 = !DILocation(line: 621, column: 16, scope: !12448)
!12457 = !DILocation(line: 621, column: 14, scope: !12448)
!12458 = !DILocation(line: 621, column: 23, scope: !12448)
!12459 = !DILocation(line: 621, column: 30, scope: !12448)
!12460 = !DILocation(line: 621, column: 28, scope: !12448)
!12461 = !DILocation(line: 621, column: 21, scope: !12448)
!12462 = !DILocation(line: 621, column: 37, scope: !12448)
!12463 = !DILocation(line: 621, column: 44, scope: !12448)
!12464 = !DILocation(line: 621, column: 42, scope: !12448)
!12465 = !DILocation(line: 621, column: 35, scope: !12448)
!12466 = !DILocation(line: 621, column: 2, scope: !12448)
!12467 = distinct !DISubprogram(name: "moveCloserToDistanceFromPlane", scope: !3, file: !3, line: 1769, type: !12468, scopeLine: 1771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!12468 = !DISubroutineType(types: !12469)
!12469 = !{null, !8551, !3872, !1383, !354, !2027, !2027, !1320, !1320, !1320, !1320}
!12470 = !DILocalVariable(name: "scene", arg: 1, scope: !12467, file: !3, line: 1769, type: !8551)
!12471 = !DILocation(line: 1769, column: 50, scope: !12467)
!12472 = !DILocalVariable(name: "ob", arg: 2, scope: !12467, file: !3, line: 1769, type: !3872)
!12473 = !DILocation(line: 1769, column: 65, scope: !12467)
!12474 = !DILocalVariable(name: "me", arg: 3, scope: !12467, file: !3, line: 1769, type: !1383)
!12475 = !DILocation(line: 1769, column: 75, scope: !12467)
!12476 = !DILocalVariable(name: "index", arg: 4, scope: !12467, file: !3, line: 1769, type: !354)
!12477 = !DILocation(line: 1769, column: 83, scope: !12467)
!12478 = !DILocalVariable(name: "norm", arg: 5, scope: !12467, file: !3, line: 1769, type: !2027)
!12479 = !DILocation(line: 1769, column: 96, scope: !12467)
!12480 = !DILocalVariable(name: "coord", arg: 6, scope: !12467, file: !3, line: 1770, type: !2027)
!12481 = !DILocation(line: 1770, column: 49, scope: !12467)
!12482 = !DILocalVariable(name: "d", arg: 7, scope: !12467, file: !3, line: 1770, type: !1320)
!12483 = !DILocation(line: 1770, column: 65, scope: !12467)
!12484 = !DILocalVariable(name: "distToBe", arg: 8, scope: !12467, file: !3, line: 1770, type: !1320)
!12485 = !DILocation(line: 1770, column: 74, scope: !12467)
!12486 = !DILocalVariable(name: "strength", arg: 9, scope: !12467, file: !3, line: 1770, type: !1320)
!12487 = !DILocation(line: 1770, column: 90, scope: !12467)
!12488 = !DILocalVariable(name: "cp", arg: 10, scope: !12467, file: !3, line: 1770, type: !1320)
!12489 = !DILocation(line: 1770, column: 106, scope: !12467)
!12490 = !DILocalVariable(name: "dm", scope: !12467, file: !3, line: 1772, type: !1845)
!12491 = !DILocation(line: 1772, column: 15, scope: !12467)
!12492 = !DILocalVariable(name: "dw", scope: !12467, file: !3, line: 1773, type: !4449)
!12493 = !DILocation(line: 1773, column: 17, scope: !12467)
!12494 = !DILocalVariable(name: "m", scope: !12467, file: !3, line: 1774, type: !3477)
!12495 = !DILocation(line: 1774, column: 8, scope: !12467)
!12496 = !DILocalVariable(name: "dvert", scope: !12467, file: !3, line: 1775, type: !4203)
!12497 = !DILocation(line: 1775, column: 15, scope: !12467)
!12498 = !DILocation(line: 1775, column: 23, scope: !12467)
!12499 = !DILocation(line: 1775, column: 27, scope: !12467)
!12500 = !DILocation(line: 1775, column: 35, scope: !12467)
!12501 = !DILocation(line: 1775, column: 33, scope: !12467)
!12502 = !DILocalVariable(name: "totweight", scope: !12467, file: !3, line: 1776, type: !354)
!12503 = !DILocation(line: 1776, column: 6, scope: !12467)
!12504 = !DILocation(line: 1776, column: 18, scope: !12467)
!12505 = !DILocation(line: 1776, column: 25, scope: !12467)
!12506 = !DILocalVariable(name: "oldw", scope: !12467, file: !3, line: 1777, type: !1320)
!12507 = !DILocation(line: 1777, column: 8, scope: !12467)
!12508 = !DILocalVariable(name: "oldPos", scope: !12467, file: !3, line: 1778, type: !1575)
!12509 = !DILocation(line: 1778, column: 8, scope: !12467)
!12510 = !DILocalVariable(name: "vc", scope: !12467, file: !3, line: 1779, type: !1320)
!12511 = !DILocation(line: 1779, column: 8, scope: !12467)
!12512 = !DILocalVariable(name: "hc", scope: !12467, file: !3, line: 1779, type: !1320)
!12513 = !DILocation(line: 1779, column: 12, scope: !12467)
!12514 = !DILocalVariable(name: "dist", scope: !12467, file: !3, line: 1779, type: !1320)
!12515 = !DILocation(line: 1779, column: 16, scope: !12467)
!12516 = !DILocalVariable(name: "i", scope: !12467, file: !3, line: 1780, type: !354)
!12517 = !DILocation(line: 1780, column: 6, scope: !12467)
!12518 = !DILocalVariable(name: "k", scope: !12467, file: !3, line: 1780, type: !354)
!12519 = !DILocation(line: 1780, column: 9, scope: !12467)
!12520 = !DILocalVariable(name: "changes", scope: !12467, file: !3, line: 1781, type: !12521)
!12521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!12522 = !DILocation(line: 1781, column: 10, scope: !12467)
!12523 = !DILocation(line: 1781, column: 24, scope: !12467)
!12524 = !DILocation(line: 1781, column: 54, scope: !12467)
!12525 = !DILocation(line: 1781, column: 52, scope: !12467)
!12526 = !DILocation(line: 1781, column: 64, scope: !12467)
!12527 = !DILocalVariable(name: "dists", scope: !12467, file: !3, line: 1782, type: !2027)
!12528 = !DILocation(line: 1782, column: 9, scope: !12467)
!12529 = !DILocation(line: 1782, column: 17, scope: !12467)
!12530 = !DILocation(line: 1782, column: 45, scope: !12467)
!12531 = !DILocation(line: 1782, column: 43, scope: !12467)
!12532 = !DILocalVariable(name: "upDown", scope: !12467, file: !3, line: 1785, type: !1972)
!12533 = !DILocation(line: 1785, column: 7, scope: !12467)
!12534 = !DILocation(line: 1785, column: 16, scope: !12467)
!12535 = !DILocation(line: 1785, column: 42, scope: !12467)
!12536 = !DILocation(line: 1785, column: 40, scope: !12467)
!12537 = !DILocalVariable(name: "dwIndices", scope: !12467, file: !3, line: 1787, type: !1972)
!12538 = !DILocation(line: 1787, column: 7, scope: !12467)
!12539 = !DILocation(line: 1787, column: 19, scope: !12467)
!12540 = !DILocation(line: 1787, column: 45, scope: !12467)
!12541 = !DILocation(line: 1787, column: 43, scope: !12467)
!12542 = !DILocalVariable(name: "distToStart", scope: !12467, file: !3, line: 1788, type: !1320)
!12543 = !DILocation(line: 1788, column: 8, scope: !12467)
!12544 = !DILocalVariable(name: "bestIndex", scope: !12467, file: !3, line: 1789, type: !354)
!12545 = !DILocation(line: 1789, column: 6, scope: !12467)
!12546 = !DILocalVariable(name: "wasChange", scope: !12467, file: !3, line: 1790, type: !2436)
!12547 = !DILocation(line: 1790, column: 7, scope: !12467)
!12548 = !DILocalVariable(name: "wasUp", scope: !12467, file: !3, line: 1791, type: !1253)
!12549 = !DILocation(line: 1791, column: 7, scope: !12467)
!12550 = !DILocalVariable(name: "lastIndex", scope: !12467, file: !3, line: 1792, type: !354)
!12551 = !DILocation(line: 1792, column: 6, scope: !12467)
!12552 = !DILocalVariable(name: "originalDistToBe", scope: !12467, file: !3, line: 1793, type: !1320)
!12553 = !DILocation(line: 1793, column: 8, scope: !12467)
!12554 = !DILocation(line: 1793, column: 27, scope: !12467)
!12555 = !DILocation(line: 1794, column: 2, scope: !12467)
!12556 = !DILocation(line: 1795, column: 13, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12467, file: !3, line: 1794, column: 5)
!12558 = !DILocation(line: 1796, column: 25, scope: !12557)
!12559 = !DILocation(line: 1796, column: 32, scope: !12557)
!12560 = !DILocation(line: 1796, column: 8, scope: !12557)
!12561 = !DILocation(line: 1796, column: 6, scope: !12557)
!12562 = !DILocation(line: 1797, column: 3, scope: !12557)
!12563 = !DILocation(line: 1797, column: 7, scope: !12557)
!12564 = !DILocation(line: 1797, column: 15, scope: !12557)
!12565 = !DILocation(line: 1797, column: 19, scope: !12557)
!12566 = !DILocation(line: 1798, column: 14, scope: !12557)
!12567 = !DILocation(line: 1798, column: 24, scope: !12557)
!12568 = !DILocation(line: 1798, column: 22, scope: !12557)
!12569 = !DILocation(line: 1798, column: 3, scope: !12557)
!12570 = !DILocation(line: 1799, column: 26, scope: !12557)
!12571 = !DILocation(line: 1799, column: 32, scope: !12557)
!12572 = !DILocation(line: 1799, column: 17, scope: !12557)
!12573 = !DILocation(line: 1799, column: 42, scope: !12557)
!12574 = !DILocation(line: 1799, column: 40, scope: !12557)
!12575 = !DILocation(line: 1799, column: 15, scope: !12557)
!12576 = !DILocation(line: 1801, column: 7, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 1801, column: 7)
!12578 = !DILocation(line: 1801, column: 19, scope: !12577)
!12579 = !DILocation(line: 1801, column: 16, scope: !12577)
!12580 = !DILocation(line: 1801, column: 7, scope: !12557)
!12581 = !DILocation(line: 1802, column: 16, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 1801, column: 37)
!12583 = !DILocation(line: 1802, column: 30, scope: !12582)
!12584 = !DILocation(line: 1802, column: 44, scope: !12582)
!12585 = !DILocation(line: 1802, column: 42, scope: !12582)
!12586 = !DILocation(line: 1802, column: 28, scope: !12582)
!12587 = !DILocation(line: 1802, column: 13, scope: !12582)
!12588 = !DILocation(line: 1803, column: 3, scope: !12582)
!12589 = !DILocation(line: 1804, column: 10, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 1804, column: 3)
!12591 = !DILocation(line: 1804, column: 8, scope: !12590)
!12592 = !DILocation(line: 1804, column: 15, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 1804, column: 3)
!12594 = !DILocation(line: 1804, column: 19, scope: !12593)
!12595 = !DILocation(line: 1804, column: 17, scope: !12593)
!12596 = !DILocation(line: 1804, column: 3, scope: !12590)
!12597 = !DILocation(line: 1805, column: 19, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12593, file: !3, line: 1804, column: 35)
!12599 = !DILocation(line: 1805, column: 4, scope: !12598)
!12600 = !DILocation(line: 1805, column: 14, scope: !12598)
!12601 = !DILocation(line: 1805, column: 17, scope: !12598)
!12602 = !DILocation(line: 1806, column: 10, scope: !12598)
!12603 = !DILocation(line: 1806, column: 17, scope: !12598)
!12604 = !DILocation(line: 1806, column: 22, scope: !12598)
!12605 = !DILocation(line: 1806, column: 20, scope: !12598)
!12606 = !DILocation(line: 1806, column: 7, scope: !12598)
!12607 = !DILocation(line: 1807, column: 12, scope: !12598)
!12608 = !DILocation(line: 1807, column: 7, scope: !12598)
!12609 = !DILocation(line: 1808, column: 9, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 1808, column: 8)
!12611 = !DILocation(line: 1808, column: 13, scope: !12610)
!12612 = !DILocation(line: 1808, column: 8, scope: !12598)
!12613 = !DILocation(line: 1809, column: 5, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 1808, column: 21)
!12615 = !DILocation(line: 1809, column: 13, scope: !12614)
!12616 = !DILocation(line: 1809, column: 19, scope: !12614)
!12617 = !DILocation(line: 1810, column: 5, scope: !12614)
!12618 = !DILocation(line: 1810, column: 13, scope: !12614)
!12619 = !DILocation(line: 1810, column: 19, scope: !12614)
!12620 = !DILocation(line: 1811, column: 16, scope: !12614)
!12621 = !DILocation(line: 1811, column: 5, scope: !12614)
!12622 = !DILocation(line: 1811, column: 11, scope: !12614)
!12623 = !DILocation(line: 1811, column: 14, scope: !12614)
!12624 = !DILocation(line: 1812, column: 5, scope: !12614)
!12625 = !DILocation(line: 1814, column: 11, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 1814, column: 4)
!12627 = !DILocation(line: 1814, column: 9, scope: !12626)
!12628 = !DILocation(line: 1814, column: 16, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 1814, column: 4)
!12630 = !DILocation(line: 1814, column: 18, scope: !12629)
!12631 = !DILocation(line: 1814, column: 4, scope: !12626)
!12632 = !DILocation(line: 1815, column: 9, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 1815, column: 9)
!12634 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 1814, column: 28)
!12635 = !DILocation(line: 1815, column: 9, scope: !12634)
!12636 = !DILocation(line: 1816, column: 22, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 1815, column: 13)
!12638 = !DILocation(line: 1816, column: 26, scope: !12637)
!12639 = !DILocation(line: 1816, column: 6, scope: !12637)
!12640 = !DILocation(line: 1816, column: 34, scope: !12637)
!12641 = !DILocation(line: 1817, column: 5, scope: !12637)
!12642 = !DILocation(line: 1818, column: 12, scope: !12634)
!12643 = !DILocation(line: 1818, column: 16, scope: !12634)
!12644 = !DILocation(line: 1818, column: 10, scope: !12634)
!12645 = !DILocation(line: 1819, column: 9, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 1819, column: 9)
!12647 = !DILocation(line: 1819, column: 9, scope: !12634)
!12648 = !DILocation(line: 1820, column: 24, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12646, file: !3, line: 1819, column: 12)
!12650 = !DILocation(line: 1820, column: 22, scope: !12649)
!12651 = !DILocation(line: 1820, column: 6, scope: !12649)
!12652 = !DILocation(line: 1820, column: 10, scope: !12649)
!12653 = !DILocation(line: 1820, column: 17, scope: !12649)
!12654 = !DILocation(line: 1821, column: 5, scope: !12649)
!12655 = !DILocation(line: 1823, column: 24, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12646, file: !3, line: 1822, column: 10)
!12657 = !DILocation(line: 1823, column: 22, scope: !12656)
!12658 = !DILocation(line: 1823, column: 6, scope: !12656)
!12659 = !DILocation(line: 1823, column: 10, scope: !12656)
!12660 = !DILocation(line: 1823, column: 17, scope: !12656)
!12661 = !DILocation(line: 1825, column: 9, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 1825, column: 9)
!12663 = !DILocation(line: 1825, column: 13, scope: !12662)
!12664 = !DILocation(line: 1825, column: 23, scope: !12662)
!12665 = !DILocation(line: 1825, column: 20, scope: !12662)
!12666 = !DILocation(line: 1825, column: 9, scope: !12634)
!12667 = !DILocation(line: 1826, column: 6, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12662, file: !3, line: 1825, column: 29)
!12669 = !DILocation(line: 1826, column: 14, scope: !12668)
!12670 = !DILocation(line: 1826, column: 20, scope: !12668)
!12671 = !DILocation(line: 1827, column: 6, scope: !12668)
!12672 = !DILocation(line: 1827, column: 14, scope: !12668)
!12673 = !DILocation(line: 1827, column: 20, scope: !12668)
!12674 = !DILocation(line: 1828, column: 17, scope: !12668)
!12675 = !DILocation(line: 1828, column: 6, scope: !12668)
!12676 = !DILocation(line: 1828, column: 12, scope: !12668)
!12677 = !DILocation(line: 1828, column: 15, scope: !12668)
!12678 = !DILocation(line: 1829, column: 6, scope: !12668)
!12679 = !DILocation(line: 1831, column: 9, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 1831, column: 9)
!12681 = !DILocation(line: 1831, column: 13, scope: !12680)
!12682 = !DILocation(line: 1831, column: 20, scope: !12680)
!12683 = !DILocation(line: 1831, column: 9, scope: !12634)
!12684 = !DILocation(line: 1832, column: 6, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 1831, column: 25)
!12686 = !DILocation(line: 1832, column: 10, scope: !12685)
!12687 = !DILocation(line: 1832, column: 17, scope: !12685)
!12688 = !DILocation(line: 1833, column: 5, scope: !12685)
!12689 = !DILocation(line: 1834, column: 27, scope: !12634)
!12690 = !DILocation(line: 1834, column: 34, scope: !12634)
!12691 = !DILocation(line: 1834, column: 10, scope: !12634)
!12692 = !DILocation(line: 1834, column: 8, scope: !12634)
!12693 = !DILocation(line: 1835, column: 5, scope: !12634)
!12694 = !DILocation(line: 1835, column: 9, scope: !12634)
!12695 = !DILocation(line: 1835, column: 17, scope: !12634)
!12696 = !DILocation(line: 1835, column: 21, scope: !12634)
!12697 = !DILocation(line: 1836, column: 36, scope: !12634)
!12698 = !DILocation(line: 1836, column: 42, scope: !12634)
!12699 = !DILocation(line: 1836, column: 45, scope: !12634)
!12700 = !DILocation(line: 1836, column: 52, scope: !12634)
!12701 = !DILocation(line: 1836, column: 60, scope: !12634)
!12702 = !DILocation(line: 1836, column: 75, scope: !12634)
!12703 = !DILocation(line: 1836, column: 73, scope: !12634)
!12704 = !DILocation(line: 1836, column: 79, scope: !12634)
!12705 = !DILocation(line: 1836, column: 88, scope: !12634)
!12706 = !DILocation(line: 1836, column: 95, scope: !12634)
!12707 = !DILocation(line: 1836, column: 5, scope: !12634)
!12708 = !DILocation(line: 1837, column: 18, scope: !12634)
!12709 = !DILocation(line: 1837, column: 5, scope: !12634)
!12710 = !DILocation(line: 1837, column: 9, scope: !12634)
!12711 = !DILocation(line: 1837, column: 16, scope: !12634)
!12712 = !DILocation(line: 1838, column: 10, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 1838, column: 9)
!12714 = !DILocation(line: 1838, column: 9, scope: !12634)
!12715 = !DILocation(line: 1839, column: 11, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1838, column: 13)
!12717 = !DILocation(line: 1839, column: 19, scope: !12716)
!12718 = !DILocation(line: 1839, column: 9, scope: !12716)
!12719 = !DILocation(line: 1840, column: 11, scope: !12716)
!12720 = !DILocation(line: 1840, column: 19, scope: !12716)
!12721 = !DILocation(line: 1840, column: 9, scope: !12716)
!12722 = !DILocation(line: 1841, column: 13, scope: !12716)
!12723 = !DILocation(line: 1841, column: 19, scope: !12716)
!12724 = !DILocation(line: 1841, column: 11, scope: !12716)
!12725 = !DILocation(line: 1842, column: 5, scope: !12716)
!12726 = !DILocation(line: 1844, column: 16, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 1844, column: 10)
!12728 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1843, column: 10)
!12729 = !DILocation(line: 1844, column: 23, scope: !12727)
!12730 = !DILocation(line: 1844, column: 21, scope: !12727)
!12731 = !DILocation(line: 1844, column: 10, scope: !12727)
!12732 = !DILocation(line: 1844, column: 41, scope: !12727)
!12733 = !DILocation(line: 1844, column: 47, scope: !12727)
!12734 = !DILocation(line: 1844, column: 52, scope: !12727)
!12735 = !DILocation(line: 1844, column: 50, scope: !12727)
!12736 = !DILocation(line: 1844, column: 35, scope: !12727)
!12737 = !DILocation(line: 1844, column: 33, scope: !12727)
!12738 = !DILocation(line: 1844, column: 10, scope: !12728)
!12739 = !DILocation(line: 1845, column: 7, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 1844, column: 63)
!12741 = !DILocation(line: 1845, column: 14, scope: !12740)
!12742 = !DILocation(line: 1845, column: 17, scope: !12740)
!12743 = !DILocation(line: 1846, column: 23, scope: !12740)
!12744 = !DILocation(line: 1846, column: 7, scope: !12740)
!12745 = !DILocation(line: 1846, column: 15, scope: !12740)
!12746 = !DILocation(line: 1846, column: 21, scope: !12740)
!12747 = !DILocation(line: 1847, column: 23, scope: !12740)
!12748 = !DILocation(line: 1847, column: 7, scope: !12740)
!12749 = !DILocation(line: 1847, column: 15, scope: !12740)
!12750 = !DILocation(line: 1847, column: 21, scope: !12740)
!12751 = !DILocation(line: 1848, column: 18, scope: !12740)
!12752 = !DILocation(line: 1848, column: 7, scope: !12740)
!12753 = !DILocation(line: 1848, column: 13, scope: !12740)
!12754 = !DILocation(line: 1848, column: 16, scope: !12740)
!12755 = !DILocation(line: 1849, column: 6, scope: !12740)
!12756 = !DILocation(line: 1851, column: 7, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 1850, column: 11)
!12758 = !DILocation(line: 1851, column: 14, scope: !12757)
!12759 = !DILocation(line: 1851, column: 17, scope: !12757)
!12760 = !DILocation(line: 1853, column: 16, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 1853, column: 10)
!12762 = !DILocation(line: 1853, column: 22, scope: !12761)
!12763 = !DILocation(line: 1853, column: 27, scope: !12761)
!12764 = !DILocation(line: 1853, column: 25, scope: !12761)
!12765 = !DILocation(line: 1853, column: 10, scope: !12761)
!12766 = !DILocation(line: 1853, column: 45, scope: !12761)
!12767 = !DILocation(line: 1853, column: 59, scope: !12761)
!12768 = !DILocation(line: 1853, column: 57, scope: !12761)
!12769 = !DILocation(line: 1853, column: 39, scope: !12761)
!12770 = !DILocation(line: 1853, column: 37, scope: !12761)
!12771 = !DILocation(line: 1853, column: 10, scope: !12728)
!12772 = !DILocation(line: 1854, column: 7, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12761, file: !3, line: 1853, column: 70)
!12774 = !DILocation(line: 1854, column: 15, scope: !12773)
!12775 = !DILocation(line: 1854, column: 21, scope: !12773)
!12776 = !DILocation(line: 1855, column: 7, scope: !12773)
!12777 = !DILocation(line: 1855, column: 15, scope: !12773)
!12778 = !DILocation(line: 1855, column: 21, scope: !12773)
!12779 = !DILocation(line: 1856, column: 18, scope: !12773)
!12780 = !DILocation(line: 1856, column: 7, scope: !12773)
!12781 = !DILocation(line: 1856, column: 13, scope: !12773)
!12782 = !DILocation(line: 1856, column: 16, scope: !12773)
!12783 = !DILocation(line: 1857, column: 6, scope: !12773)
!12784 = !DILocation(line: 1859, column: 4, scope: !12634)
!12785 = !DILocation(line: 1814, column: 24, scope: !12629)
!12786 = !DILocation(line: 1814, column: 4, scope: !12629)
!12787 = distinct !{!12787, !12631, !12788}
!12788 = !DILocation(line: 1859, column: 4, scope: !12626)
!12789 = !DILocation(line: 1860, column: 3, scope: !12598)
!12790 = !DILocation(line: 1804, column: 31, scope: !12593)
!12791 = !DILocation(line: 1804, column: 3, scope: !12593)
!12792 = distinct !{!12792, !12596, !12793}
!12793 = !DILocation(line: 1860, column: 3, scope: !12590)
!12794 = !DILocation(line: 1862, column: 10, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 1862, column: 3)
!12796 = !DILocation(line: 1862, column: 8, scope: !12795)
!12797 = !DILocation(line: 1862, column: 15, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 1862, column: 3)
!12799 = !DILocation(line: 1862, column: 19, scope: !12798)
!12800 = !DILocation(line: 1862, column: 17, scope: !12798)
!12801 = !DILocation(line: 1862, column: 3, scope: !12795)
!12802 = !DILocalVariable(name: "tf", scope: !12803, file: !3, line: 1863, type: !1320)
!12803 = distinct !DILexicalBlock(scope: !12798, file: !3, line: 1862, column: 35)
!12804 = !DILocation(line: 1863, column: 10, scope: !12803)
!12805 = !DILocalVariable(name: "ti", scope: !12803, file: !3, line: 1864, type: !354)
!12806 = !DILocation(line: 1864, column: 8, scope: !12803)
!12807 = !DILocation(line: 1865, column: 16, scope: !12803)
!12808 = !DILocation(line: 1865, column: 14, scope: !12803)
!12809 = !DILocation(line: 1866, column: 13, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 1866, column: 4)
!12811 = !DILocation(line: 1866, column: 15, scope: !12810)
!12812 = !DILocation(line: 1866, column: 11, scope: !12810)
!12813 = !DILocation(line: 1866, column: 9, scope: !12810)
!12814 = !DILocation(line: 1866, column: 20, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12810, file: !3, line: 1866, column: 4)
!12816 = !DILocation(line: 1866, column: 24, scope: !12815)
!12817 = !DILocation(line: 1866, column: 22, scope: !12815)
!12818 = !DILocation(line: 1866, column: 4, scope: !12810)
!12819 = !DILocation(line: 1867, column: 12, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 1866, column: 40)
!12821 = !DILocation(line: 1867, column: 18, scope: !12820)
!12822 = !DILocation(line: 1867, column: 10, scope: !12820)
!12823 = !DILocation(line: 1869, column: 15, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 1869, column: 9)
!12825 = !DILocation(line: 1869, column: 9, scope: !12824)
!12826 = !DILocation(line: 1869, column: 29, scope: !12824)
!12827 = !DILocation(line: 1869, column: 35, scope: !12824)
!12828 = !DILocation(line: 1869, column: 23, scope: !12824)
!12829 = !DILocation(line: 1869, column: 21, scope: !12824)
!12830 = !DILocation(line: 1869, column: 9, scope: !12820)
!12831 = !DILocation(line: 1870, column: 18, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12824, file: !3, line: 1869, column: 40)
!12833 = !DILocation(line: 1870, column: 16, scope: !12832)
!12834 = !DILocation(line: 1871, column: 5, scope: !12832)
!12835 = !DILocation(line: 1872, column: 4, scope: !12820)
!12836 = !DILocation(line: 1866, column: 36, scope: !12815)
!12837 = !DILocation(line: 1866, column: 4, scope: !12815)
!12838 = distinct !{!12838, !12818, !12839}
!12839 = !DILocation(line: 1872, column: 4, scope: !12810)
!12840 = !DILocation(line: 1874, column: 8, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 1874, column: 8)
!12842 = !DILocation(line: 1874, column: 21, scope: !12841)
!12843 = !DILocation(line: 1874, column: 18, scope: !12841)
!12844 = !DILocation(line: 1874, column: 8, scope: !12803)
!12845 = !DILocation(line: 1875, column: 10, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12841, file: !3, line: 1874, column: 24)
!12847 = !DILocation(line: 1875, column: 17, scope: !12846)
!12848 = !DILocation(line: 1875, column: 8, scope: !12846)
!12849 = !DILocation(line: 1876, column: 17, scope: !12846)
!12850 = !DILocation(line: 1876, column: 24, scope: !12846)
!12851 = !DILocation(line: 1876, column: 5, scope: !12846)
!12852 = !DILocation(line: 1876, column: 12, scope: !12846)
!12853 = !DILocation(line: 1876, column: 15, scope: !12846)
!12854 = !DILocation(line: 1877, column: 25, scope: !12846)
!12855 = !DILocation(line: 1877, column: 5, scope: !12846)
!12856 = !DILocation(line: 1877, column: 12, scope: !12846)
!12857 = !DILocation(line: 1877, column: 23, scope: !12846)
!12858 = !DILocation(line: 1879, column: 10, scope: !12846)
!12859 = !DILocation(line: 1879, column: 20, scope: !12846)
!12860 = !DILocation(line: 1879, column: 8, scope: !12846)
!12861 = !DILocation(line: 1880, column: 20, scope: !12846)
!12862 = !DILocation(line: 1880, column: 30, scope: !12846)
!12863 = !DILocation(line: 1880, column: 5, scope: !12846)
!12864 = !DILocation(line: 1880, column: 15, scope: !12846)
!12865 = !DILocation(line: 1880, column: 18, scope: !12846)
!12866 = !DILocation(line: 1881, column: 28, scope: !12846)
!12867 = !DILocation(line: 1881, column: 5, scope: !12846)
!12868 = !DILocation(line: 1881, column: 15, scope: !12846)
!12869 = !DILocation(line: 1881, column: 26, scope: !12846)
!12870 = !DILocation(line: 1883, column: 10, scope: !12846)
!12871 = !DILocation(line: 1883, column: 18, scope: !12846)
!12872 = !DILocation(line: 1883, column: 8, scope: !12846)
!12873 = !DILocation(line: 1884, column: 21, scope: !12846)
!12874 = !DILocation(line: 1884, column: 29, scope: !12846)
!12875 = !DILocation(line: 1884, column: 5, scope: !12846)
!12876 = !DILocation(line: 1884, column: 13, scope: !12846)
!12877 = !DILocation(line: 1884, column: 19, scope: !12846)
!12878 = !DILocation(line: 1885, column: 29, scope: !12846)
!12879 = !DILocation(line: 1885, column: 5, scope: !12846)
!12880 = !DILocation(line: 1885, column: 13, scope: !12846)
!12881 = !DILocation(line: 1885, column: 27, scope: !12846)
!12882 = !DILocation(line: 1887, column: 10, scope: !12846)
!12883 = !DILocation(line: 1887, column: 18, scope: !12846)
!12884 = !DILocation(line: 1887, column: 8, scope: !12846)
!12885 = !DILocation(line: 1888, column: 21, scope: !12846)
!12886 = !DILocation(line: 1888, column: 29, scope: !12846)
!12887 = !DILocation(line: 1888, column: 5, scope: !12846)
!12888 = !DILocation(line: 1888, column: 13, scope: !12846)
!12889 = !DILocation(line: 1888, column: 19, scope: !12846)
!12890 = !DILocation(line: 1889, column: 29, scope: !12846)
!12891 = !DILocation(line: 1889, column: 5, scope: !12846)
!12892 = !DILocation(line: 1889, column: 13, scope: !12846)
!12893 = !DILocation(line: 1889, column: 27, scope: !12846)
!12894 = !DILocation(line: 1891, column: 10, scope: !12846)
!12895 = !DILocation(line: 1891, column: 16, scope: !12846)
!12896 = !DILocation(line: 1891, column: 8, scope: !12846)
!12897 = !DILocation(line: 1892, column: 16, scope: !12846)
!12898 = !DILocation(line: 1892, column: 22, scope: !12846)
!12899 = !DILocation(line: 1892, column: 5, scope: !12846)
!12900 = !DILocation(line: 1892, column: 11, scope: !12846)
!12901 = !DILocation(line: 1892, column: 14, scope: !12846)
!12902 = !DILocation(line: 1893, column: 24, scope: !12846)
!12903 = !DILocation(line: 1893, column: 5, scope: !12846)
!12904 = !DILocation(line: 1893, column: 11, scope: !12846)
!12905 = !DILocation(line: 1893, column: 22, scope: !12846)
!12906 = !DILocation(line: 1894, column: 4, scope: !12846)
!12907 = !DILocation(line: 1895, column: 3, scope: !12803)
!12908 = !DILocation(line: 1862, column: 31, scope: !12798)
!12909 = !DILocation(line: 1862, column: 3, scope: !12798)
!12910 = distinct !{!12910, !12801, !12911}
!12911 = !DILocation(line: 1895, column: 3, scope: !12795)
!12912 = !DILocation(line: 1896, column: 13, scope: !12557)
!12913 = !DILocation(line: 1898, column: 10, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 1898, column: 3)
!12915 = !DILocation(line: 1898, column: 8, scope: !12914)
!12916 = !DILocation(line: 1898, column: 15, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 1898, column: 3)
!12918 = !DILocation(line: 1898, column: 19, scope: !12917)
!12919 = !DILocation(line: 1898, column: 17, scope: !12917)
!12920 = !DILocation(line: 1898, column: 3, scope: !12914)
!12921 = !DILocation(line: 1899, column: 14, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 1899, column: 8)
!12923 = distinct !DILexicalBlock(scope: !12917, file: !3, line: 1898, column: 35)
!12924 = !DILocation(line: 1899, column: 22, scope: !12922)
!12925 = !DILocation(line: 1899, column: 8, scope: !12922)
!12926 = !DILocation(line: 1899, column: 37, scope: !12922)
!12927 = !DILocation(line: 1899, column: 45, scope: !12922)
!12928 = !DILocation(line: 1899, column: 51, scope: !12922)
!12929 = !DILocation(line: 1899, column: 31, scope: !12922)
!12930 = !DILocation(line: 1899, column: 29, scope: !12922)
!12931 = !DILocation(line: 1899, column: 8, scope: !12923)
!12932 = !DILocation(line: 1900, column: 17, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 1899, column: 60)
!12934 = !DILocation(line: 1900, column: 15, scope: !12933)
!12935 = !DILocation(line: 1901, column: 5, scope: !12933)
!12936 = !DILocation(line: 1903, column: 3, scope: !12923)
!12937 = !DILocation(line: 1898, column: 31, scope: !12917)
!12938 = !DILocation(line: 1898, column: 3, scope: !12917)
!12939 = distinct !{!12939, !12920, !12940}
!12940 = !DILocation(line: 1903, column: 3, scope: !12914)
!12941 = !DILocation(line: 1904, column: 7, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 1904, column: 7)
!12943 = !DILocation(line: 1904, column: 17, scope: !12942)
!12944 = !DILocation(line: 1904, column: 7, scope: !12557)
!12945 = !DILocation(line: 1905, column: 14, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12942, file: !3, line: 1904, column: 24)
!12947 = !DILocation(line: 1908, column: 8, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1908, column: 8)
!12949 = !DILocation(line: 1908, column: 18, scope: !12948)
!12950 = !DILocation(line: 1908, column: 8, scope: !12946)
!12951 = !DILocation(line: 1909, column: 9, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 1909, column: 9)
!12953 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 1908, column: 25)
!12954 = !DILocation(line: 1909, column: 18, scope: !12952)
!12955 = !DILocation(line: 1909, column: 25, scope: !12952)
!12956 = !DILocation(line: 1909, column: 15, scope: !12952)
!12957 = !DILocation(line: 1909, column: 9, scope: !12953)
!12958 = !DILocation(line: 1910, column: 16, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1909, column: 37)
!12960 = !DILocation(line: 1911, column: 5, scope: !12959)
!12961 = !DILocation(line: 1912, column: 4, scope: !12953)
!12962 = !DILocation(line: 1913, column: 16, scope: !12946)
!12963 = !DILocation(line: 1913, column: 14, scope: !12946)
!12964 = !DILocation(line: 1914, column: 12, scope: !12946)
!12965 = !DILocation(line: 1914, column: 19, scope: !12946)
!12966 = !DILocation(line: 1914, column: 10, scope: !12946)
!12967 = !DILocation(line: 1915, column: 10, scope: !12946)
!12968 = !DILocation(line: 1915, column: 17, scope: !12946)
!12969 = !DILocation(line: 1915, column: 22, scope: !12946)
!12970 = !DILocation(line: 1915, column: 32, scope: !12946)
!12971 = !DILocation(line: 1915, column: 20, scope: !12946)
!12972 = !DILocation(line: 1915, column: 7, scope: !12946)
!12973 = !DILocation(line: 1916, column: 11, scope: !12946)
!12974 = !DILocation(line: 1916, column: 15, scope: !12946)
!12975 = !DILocation(line: 1916, column: 9, scope: !12946)
!12976 = !DILocation(line: 1917, column: 8, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1917, column: 8)
!12978 = !DILocation(line: 1917, column: 15, scope: !12977)
!12979 = !DILocation(line: 1917, column: 8, scope: !12946)
!12980 = !DILocation(line: 1918, column: 23, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12977, file: !3, line: 1917, column: 27)
!12982 = !DILocation(line: 1918, column: 21, scope: !12981)
!12983 = !DILocation(line: 1918, column: 5, scope: !12981)
!12984 = !DILocation(line: 1918, column: 9, scope: !12981)
!12985 = !DILocation(line: 1918, column: 16, scope: !12981)
!12986 = !DILocation(line: 1919, column: 4, scope: !12981)
!12987 = !DILocation(line: 1921, column: 23, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12977, file: !3, line: 1920, column: 9)
!12989 = !DILocation(line: 1921, column: 21, scope: !12988)
!12990 = !DILocation(line: 1921, column: 5, scope: !12988)
!12991 = !DILocation(line: 1921, column: 9, scope: !12988)
!12992 = !DILocation(line: 1921, column: 16, scope: !12988)
!12993 = !DILocation(line: 1923, column: 8, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1923, column: 8)
!12995 = !DILocation(line: 1923, column: 12, scope: !12994)
!12996 = !DILocation(line: 1923, column: 19, scope: !12994)
!12997 = !DILocation(line: 1923, column: 8, scope: !12946)
!12998 = !DILocation(line: 1924, column: 5, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12994, file: !3, line: 1923, column: 24)
!13000 = !DILocation(line: 1924, column: 9, scope: !12999)
!13001 = !DILocation(line: 1924, column: 16, scope: !12999)
!13002 = !DILocation(line: 1925, column: 4, scope: !12999)
!13003 = !DILocation(line: 1926, column: 8, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1926, column: 8)
!13005 = !DILocation(line: 1926, column: 16, scope: !13004)
!13006 = !DILocation(line: 1926, column: 20, scope: !13004)
!13007 = !DILocation(line: 1926, column: 13, scope: !13004)
!13008 = !DILocation(line: 1926, column: 8, scope: !12946)
!13009 = !DILocation(line: 1927, column: 15, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 1926, column: 28)
!13011 = !DILocation(line: 1928, column: 4, scope: !13010)
!13012 = !DILocation(line: 1929, column: 8, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 1929, column: 8)
!13014 = !DILocation(line: 1929, column: 8, scope: !12946)
!13015 = !DILocation(line: 1930, column: 21, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13013, file: !3, line: 1929, column: 12)
!13017 = !DILocation(line: 1930, column: 25, scope: !13016)
!13018 = !DILocation(line: 1930, column: 5, scope: !13016)
!13019 = !DILocation(line: 1930, column: 33, scope: !13016)
!13020 = !DILocation(line: 1931, column: 4, scope: !13016)
!13021 = !DILocation(line: 1932, column: 3, scope: !12946)
!13022 = !DILocation(line: 1933, column: 2, scope: !12557)
!13023 = !DILocation(line: 1933, column: 11, scope: !12467)
!13024 = !DILocation(line: 1933, column: 21, scope: !12467)
!13025 = !DILocation(line: 1933, column: 26, scope: !12467)
!13026 = !DILocation(line: 1933, column: 40, scope: !12467)
!13027 = !DILocation(line: 1933, column: 38, scope: !12467)
!13028 = !DILocation(line: 1933, column: 58, scope: !12467)
!13029 = !DILocation(line: 1933, column: 72, scope: !12467)
!13030 = !DILocation(line: 1933, column: 70, scope: !12467)
!13031 = !DILocation(line: 1933, column: 52, scope: !12467)
!13032 = !DILocation(line: 1933, column: 50, scope: !12467)
!13033 = !DILocation(line: 1934, column: 26, scope: !12467)
!13034 = !DILocation(line: 1934, column: 32, scope: !12467)
!13035 = !DILocation(line: 1934, column: 45, scope: !12467)
!13036 = !DILocation(line: 1934, column: 43, scope: !12467)
!13037 = !DILocation(line: 1934, column: 63, scope: !12467)
!13038 = !DILocation(line: 1934, column: 69, scope: !12467)
!13039 = !DILocation(line: 1934, column: 82, scope: !12467)
!13040 = !DILocation(line: 1934, column: 80, scope: !12467)
!13041 = !DILocation(line: 1934, column: 57, scope: !12467)
!13042 = !DILocation(line: 1934, column: 55, scope: !12467)
!13043 = !DILocation(line: 1933, column: 82, scope: !12467)
!13044 = !DILocation(line: 0, scope: !12467)
!13045 = distinct !{!13045, !12555, !13046}
!13046 = !DILocation(line: 1934, column: 92, scope: !12467)
!13047 = !DILocation(line: 1936, column: 2, scope: !12467)
!13048 = !DILocation(line: 1936, column: 12, scope: !12467)
!13049 = !DILocation(line: 1937, column: 2, scope: !12467)
!13050 = !DILocation(line: 1937, column: 12, scope: !12467)
!13051 = !DILocation(line: 1938, column: 2, scope: !12467)
!13052 = !DILocation(line: 1938, column: 12, scope: !12467)
!13053 = !DILocation(line: 1939, column: 2, scope: !12467)
!13054 = !DILocation(line: 1939, column: 12, scope: !12467)
!13055 = !DILocation(line: 1940, column: 1, scope: !12467)
!13056 = distinct !DISubprogram(name: "zero_v3", scope: !12414, file: !12414, line: 43, type: !13057, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13057 = !DISubroutineType(types: !13058)
!13058 = !{null, !2027}
!13059 = !DILocalVariable(name: "r", arg: 1, scope: !13056, file: !12414, line: 43, type: !2027)
!13060 = !DILocation(line: 43, column: 28, scope: !13056)
!13061 = !DILocation(line: 45, column: 2, scope: !13056)
!13062 = !DILocation(line: 45, column: 7, scope: !13056)
!13063 = !DILocation(line: 46, column: 2, scope: !13056)
!13064 = !DILocation(line: 46, column: 7, scope: !13056)
!13065 = !DILocation(line: 47, column: 2, scope: !13056)
!13066 = !DILocation(line: 47, column: 7, scope: !13056)
!13067 = !DILocation(line: 48, column: 1, scope: !13056)
!13068 = distinct !DISubprogram(name: "add_v3_v3", scope: !12414, file: !12414, line: 302, type: !13069, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13069 = !DISubroutineType(types: !13070)
!13070 = !{null, !2027, !2001}
!13071 = !DILocalVariable(name: "r", arg: 1, scope: !13068, file: !12414, line: 302, type: !2027)
!13072 = !DILocation(line: 302, column: 30, scope: !13068)
!13073 = !DILocalVariable(name: "a", arg: 2, scope: !13068, file: !12414, line: 302, type: !2001)
!13074 = !DILocation(line: 302, column: 48, scope: !13068)
!13075 = !DILocation(line: 304, column: 10, scope: !13068)
!13076 = !DILocation(line: 304, column: 2, scope: !13068)
!13077 = !DILocation(line: 304, column: 7, scope: !13068)
!13078 = !DILocation(line: 305, column: 10, scope: !13068)
!13079 = !DILocation(line: 305, column: 2, scope: !13068)
!13080 = !DILocation(line: 305, column: 7, scope: !13068)
!13081 = !DILocation(line: 306, column: 10, scope: !13068)
!13082 = !DILocation(line: 306, column: 2, scope: !13068)
!13083 = !DILocation(line: 306, column: 7, scope: !13068)
!13084 = !DILocation(line: 307, column: 1, scope: !13068)
!13085 = distinct !DISubprogram(name: "mul_v3_fl", scope: !12414, file: !12414, line: 392, type: !13086, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13086 = !DISubroutineType(types: !13087)
!13087 = !{null, !2027, !1320}
!13088 = !DILocalVariable(name: "r", arg: 1, scope: !13085, file: !12414, line: 392, type: !2027)
!13089 = !DILocation(line: 392, column: 30, scope: !13085)
!13090 = !DILocalVariable(name: "f", arg: 2, scope: !13085, file: !12414, line: 392, type: !1320)
!13091 = !DILocation(line: 392, column: 42, scope: !13085)
!13092 = !DILocation(line: 394, column: 10, scope: !13085)
!13093 = !DILocation(line: 394, column: 2, scope: !13085)
!13094 = !DILocation(line: 394, column: 7, scope: !13085)
!13095 = !DILocation(line: 395, column: 10, scope: !13085)
!13096 = !DILocation(line: 395, column: 2, scope: !13085)
!13097 = !DILocation(line: 395, column: 7, scope: !13085)
!13098 = !DILocation(line: 396, column: 10, scope: !13085)
!13099 = !DILocation(line: 396, column: 2, scope: !13085)
!13100 = !DILocation(line: 396, column: 7, scope: !13085)
!13101 = !DILocation(line: 397, column: 1, scope: !13085)
!13102 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !12414, file: !12414, line: 788, type: !13103, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13103 = !DISubroutineType(types: !13104)
!13104 = !{!1320, !2027, !2001}
!13105 = !DILocalVariable(name: "r", arg: 1, scope: !13102, file: !12414, line: 788, type: !2027)
!13106 = !DILocation(line: 788, column: 37, scope: !13102)
!13107 = !DILocalVariable(name: "a", arg: 2, scope: !13102, file: !12414, line: 788, type: !2001)
!13108 = !DILocation(line: 788, column: 55, scope: !13102)
!13109 = !DILocalVariable(name: "d", scope: !13102, file: !12414, line: 790, type: !1320)
!13110 = !DILocation(line: 790, column: 8, scope: !13102)
!13111 = !DILocation(line: 790, column: 21, scope: !13102)
!13112 = !DILocation(line: 790, column: 24, scope: !13102)
!13113 = !DILocation(line: 790, column: 12, scope: !13102)
!13114 = !DILocation(line: 794, column: 6, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13102, file: !12414, line: 794, column: 6)
!13116 = !DILocation(line: 794, column: 8, scope: !13115)
!13117 = !DILocation(line: 794, column: 6, scope: !13102)
!13118 = !DILocation(line: 795, column: 13, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13115, file: !12414, line: 794, column: 20)
!13120 = !DILocation(line: 795, column: 7, scope: !13119)
!13121 = !DILocation(line: 795, column: 5, scope: !13119)
!13122 = !DILocation(line: 796, column: 15, scope: !13119)
!13123 = !DILocation(line: 796, column: 18, scope: !13119)
!13124 = !DILocation(line: 796, column: 28, scope: !13119)
!13125 = !DILocation(line: 796, column: 26, scope: !13119)
!13126 = !DILocation(line: 796, column: 3, scope: !13119)
!13127 = !DILocation(line: 797, column: 2, scope: !13119)
!13128 = !DILocation(line: 799, column: 11, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13115, file: !12414, line: 798, column: 7)
!13130 = !DILocation(line: 799, column: 3, scope: !13129)
!13131 = !DILocation(line: 800, column: 5, scope: !13129)
!13132 = !DILocation(line: 803, column: 9, scope: !13102)
!13133 = !DILocation(line: 803, column: 2, scope: !13102)
!13134 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !12414, file: !12414, line: 399, type: !13135, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13135 = !DISubroutineType(types: !13136)
!13136 = !{null, !2027, !2001, !1320}
!13137 = !DILocalVariable(name: "r", arg: 1, scope: !13134, file: !12414, line: 399, type: !2027)
!13138 = !DILocation(line: 399, column: 32, scope: !13134)
!13139 = !DILocalVariable(name: "a", arg: 2, scope: !13134, file: !12414, line: 399, type: !2001)
!13140 = !DILocation(line: 399, column: 50, scope: !13134)
!13141 = !DILocalVariable(name: "f", arg: 3, scope: !13134, file: !12414, line: 399, type: !1320)
!13142 = !DILocation(line: 399, column: 62, scope: !13134)
!13143 = !DILocation(line: 401, column: 9, scope: !13134)
!13144 = !DILocation(line: 401, column: 16, scope: !13134)
!13145 = !DILocation(line: 401, column: 14, scope: !13134)
!13146 = !DILocation(line: 401, column: 2, scope: !13134)
!13147 = !DILocation(line: 401, column: 7, scope: !13134)
!13148 = !DILocation(line: 402, column: 9, scope: !13134)
!13149 = !DILocation(line: 402, column: 16, scope: !13134)
!13150 = !DILocation(line: 402, column: 14, scope: !13134)
!13151 = !DILocation(line: 402, column: 2, scope: !13134)
!13152 = !DILocation(line: 402, column: 7, scope: !13134)
!13153 = !DILocation(line: 403, column: 9, scope: !13134)
!13154 = !DILocation(line: 403, column: 16, scope: !13134)
!13155 = !DILocation(line: 403, column: 14, scope: !13134)
!13156 = !DILocation(line: 403, column: 2, scope: !13134)
!13157 = !DILocation(line: 403, column: 7, scope: !13134)
!13158 = !DILocation(line: 404, column: 1, scope: !13134)
!13159 = distinct !DISubprogram(name: "dm_deform_recalc", scope: !3, file: !3, line: 1755, type: !13160, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13160 = !DISubroutineType(types: !13161)
!13161 = !{!1845, !8551, !3872}
!13162 = !DILocalVariable(name: "scene", arg: 1, scope: !13159, file: !3, line: 1755, type: !8551)
!13163 = !DILocation(line: 1755, column: 45, scope: !13159)
!13164 = !DILocalVariable(name: "ob", arg: 2, scope: !13159, file: !3, line: 1755, type: !3872)
!13165 = !DILocation(line: 1755, column: 60, scope: !13159)
!13166 = !DILocation(line: 1757, column: 33, scope: !13159)
!13167 = !DILocation(line: 1757, column: 40, scope: !13159)
!13168 = !DILocation(line: 1757, column: 44, scope: !13159)
!13169 = !DILocation(line: 1757, column: 9, scope: !13159)
!13170 = !DILocation(line: 1757, column: 2, scope: !13159)
!13171 = distinct !DISubprogram(name: "copy_v3_v3", scope: !12414, file: !12414, line: 64, type: !13069, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13172 = !DILocalVariable(name: "r", arg: 1, scope: !13171, file: !12414, line: 64, type: !2027)
!13173 = !DILocation(line: 64, column: 31, scope: !13171)
!13174 = !DILocalVariable(name: "a", arg: 2, scope: !13171, file: !12414, line: 64, type: !2001)
!13175 = !DILocation(line: 64, column: 49, scope: !13171)
!13176 = !DILocation(line: 66, column: 9, scope: !13171)
!13177 = !DILocation(line: 66, column: 2, scope: !13171)
!13178 = !DILocation(line: 66, column: 7, scope: !13171)
!13179 = !DILocation(line: 67, column: 9, scope: !13171)
!13180 = !DILocation(line: 67, column: 2, scope: !13171)
!13181 = !DILocation(line: 67, column: 7, scope: !13171)
!13182 = !DILocation(line: 68, column: 9, scope: !13171)
!13183 = !DILocation(line: 68, column: 2, scope: !13171)
!13184 = !DILocation(line: 68, column: 7, scope: !13171)
!13185 = !DILocation(line: 69, column: 1, scope: !13171)
!13186 = distinct !DISubprogram(name: "dm_deform_clear", scope: !3, file: !3, line: 1741, type: !13187, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13187 = !DISubroutineType(types: !13188)
!13188 = !{null, !1845, !3872}
!13189 = !DILocalVariable(name: "dm", arg: 1, scope: !13186, file: !3, line: 1741, type: !1845)
!13190 = !DILocation(line: 1741, column: 42, scope: !13186)
!13191 = !DILocalVariable(name: "ob", arg: 2, scope: !13186, file: !3, line: 1741, type: !3872)
!13192 = !DILocation(line: 1741, column: 54, scope: !13186)
!13193 = !DILocation(line: 1743, column: 6, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13186, file: !3, line: 1743, column: 6)
!13195 = !DILocation(line: 1743, column: 10, scope: !13194)
!13196 = !DILocation(line: 1743, column: 24, scope: !13194)
!13197 = !DILocation(line: 1743, column: 28, scope: !13194)
!13198 = !DILocation(line: 1743, column: 32, scope: !13194)
!13199 = !DILocation(line: 1743, column: 50, scope: !13194)
!13200 = !DILocation(line: 1743, column: 47, scope: !13194)
!13201 = !DILocation(line: 1743, column: 6, scope: !13186)
!13202 = !DILocation(line: 1744, column: 3, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13194, file: !3, line: 1743, column: 54)
!13204 = !DILocation(line: 1744, column: 7, scope: !13203)
!13205 = !DILocation(line: 1744, column: 22, scope: !13203)
!13206 = !DILocation(line: 1744, column: 32, scope: !13203)
!13207 = !DILocation(line: 1745, column: 3, scope: !13203)
!13208 = !DILocation(line: 1745, column: 7, scope: !13203)
!13209 = !DILocation(line: 1745, column: 22, scope: !13203)
!13210 = !DILocation(line: 1745, column: 30, scope: !13203)
!13211 = !DILocation(line: 1745, column: 34, scope: !13203)
!13212 = !DILocation(line: 1746, column: 3, scope: !13203)
!13213 = !DILocation(line: 1746, column: 7, scope: !13203)
!13214 = !DILocation(line: 1746, column: 21, scope: !13203)
!13215 = !DILocation(line: 1747, column: 2, scope: !13203)
!13216 = !DILocation(line: 1748, column: 11, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13194, file: !3, line: 1748, column: 11)
!13218 = !DILocation(line: 1748, column: 11, scope: !13194)
!13219 = !DILocation(line: 1749, column: 3, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 1748, column: 15)
!13221 = !DILocation(line: 1749, column: 7, scope: !13220)
!13222 = !DILocation(line: 1749, column: 17, scope: !13220)
!13223 = !DILocation(line: 1750, column: 3, scope: !13220)
!13224 = !DILocation(line: 1750, column: 7, scope: !13220)
!13225 = !DILocation(line: 1750, column: 15, scope: !13220)
!13226 = !DILocation(line: 1751, column: 2, scope: !13220)
!13227 = !DILocation(line: 1752, column: 1, scope: !13186)
!13228 = distinct !DISubprogram(name: "getVerticalAndHorizontalChange", scope: !3, file: !3, line: 1716, type: !13229, scopeLine: 1719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13229 = !DISubroutineType(types: !13230)
!13230 = !{null, !2001, !1320, !2001, !2001, !1320, !2027, !12521, !2027, !354}
!13231 = !DILocalVariable(name: "norm", arg: 1, scope: !13228, file: !3, line: 1716, type: !2001)
!13232 = !DILocation(line: 1716, column: 56, scope: !13228)
!13233 = !DILocalVariable(name: "d", arg: 2, scope: !13228, file: !3, line: 1716, type: !1320)
!13234 = !DILocation(line: 1716, column: 71, scope: !13228)
!13235 = !DILocalVariable(name: "coord", arg: 3, scope: !13228, file: !3, line: 1716, type: !2001)
!13236 = !DILocation(line: 1716, column: 86, scope: !13228)
!13237 = !DILocalVariable(name: "start", arg: 4, scope: !13228, file: !3, line: 1717, type: !2001)
!13238 = !DILocation(line: 1717, column: 56, scope: !13228)
!13239 = !DILocalVariable(name: "distToStart", arg: 5, scope: !13228, file: !3, line: 1717, type: !1320)
!13240 = !DILocation(line: 1717, column: 72, scope: !13228)
!13241 = !DILocalVariable(name: "end", arg: 6, scope: !13228, file: !3, line: 1718, type: !2027)
!13242 = !DILocation(line: 1718, column: 51, scope: !13228)
!13243 = !DILocalVariable(name: "changes", arg: 7, scope: !13228, file: !3, line: 1718, type: !12521)
!13244 = !DILocation(line: 1718, column: 64, scope: !13228)
!13245 = !DILocalVariable(name: "dists", arg: 8, scope: !13228, file: !3, line: 1718, type: !2027)
!13246 = !DILocation(line: 1718, column: 84, scope: !13228)
!13247 = !DILocalVariable(name: "index", arg: 9, scope: !13228, file: !3, line: 1718, type: !354)
!13248 = !DILocation(line: 1718, column: 95, scope: !13228)
!13249 = !DILocalVariable(name: "projA", scope: !13228, file: !3, line: 1722, type: !1575)
!13250 = !DILocation(line: 1722, column: 8, scope: !13228)
!13251 = !DILocalVariable(name: "projB", scope: !13228, file: !3, line: 1722, type: !1575)
!13252 = !DILocation(line: 1722, column: 18, scope: !13228)
!13253 = !DILocalVariable(name: "plane", scope: !13228, file: !3, line: 1723, type: !1331)
!13254 = !DILocation(line: 1723, column: 8, scope: !13228)
!13255 = !DILocation(line: 1725, column: 29, scope: !13228)
!13256 = !DILocation(line: 1725, column: 36, scope: !13228)
!13257 = !DILocation(line: 1725, column: 43, scope: !13228)
!13258 = !DILocation(line: 1725, column: 2, scope: !13228)
!13259 = !DILocation(line: 1727, column: 22, scope: !13228)
!13260 = !DILocation(line: 1727, column: 29, scope: !13228)
!13261 = !DILocation(line: 1727, column: 36, scope: !13228)
!13262 = !DILocation(line: 1727, column: 2, scope: !13228)
!13263 = !DILocation(line: 1728, column: 22, scope: !13228)
!13264 = !DILocation(line: 1728, column: 29, scope: !13228)
!13265 = !DILocation(line: 1728, column: 36, scope: !13228)
!13266 = !DILocation(line: 1728, column: 2, scope: !13228)
!13267 = !DILocation(line: 1731, column: 26, scope: !13228)
!13268 = !DILocation(line: 1731, column: 32, scope: !13228)
!13269 = !DILocation(line: 1731, column: 17, scope: !13228)
!13270 = !DILocation(line: 1731, column: 39, scope: !13228)
!13271 = !DILocation(line: 1731, column: 37, scope: !13228)
!13272 = !DILocation(line: 1731, column: 2, scope: !13228)
!13273 = !DILocation(line: 1731, column: 8, scope: !13228)
!13274 = !DILocation(line: 1731, column: 15, scope: !13228)
!13275 = !DILocation(line: 1733, column: 22, scope: !13228)
!13276 = !DILocation(line: 1733, column: 28, scope: !13228)
!13277 = !DILocation(line: 1733, column: 37, scope: !13228)
!13278 = !DILocation(line: 1733, column: 35, scope: !13228)
!13279 = !DILocation(line: 1733, column: 2, scope: !13228)
!13280 = !DILocation(line: 1733, column: 10, scope: !13228)
!13281 = !DILocation(line: 1733, column: 20, scope: !13228)
!13282 = !DILocation(line: 1736, column: 31, scope: !13228)
!13283 = !DILocation(line: 1736, column: 38, scope: !13228)
!13284 = !DILocation(line: 1736, column: 22, scope: !13228)
!13285 = !DILocation(line: 1736, column: 2, scope: !13228)
!13286 = !DILocation(line: 1736, column: 10, scope: !13228)
!13287 = !DILocation(line: 1736, column: 20, scope: !13228)
!13288 = !DILocation(line: 1737, column: 1, scope: !13228)
!13289 = distinct !DISubprogram(name: "len_v3v3", scope: !12414, file: !12414, line: 759, type: !12449, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13290 = !DILocalVariable(name: "a", arg: 1, scope: !13289, file: !12414, line: 759, type: !2001)
!13291 = !DILocation(line: 759, column: 36, scope: !13289)
!13292 = !DILocalVariable(name: "b", arg: 2, scope: !13289, file: !12414, line: 759, type: !2001)
!13293 = !DILocation(line: 759, column: 54, scope: !13289)
!13294 = !DILocalVariable(name: "d", scope: !13289, file: !12414, line: 761, type: !1575)
!13295 = !DILocation(line: 761, column: 8, scope: !13289)
!13296 = !DILocation(line: 763, column: 14, scope: !13289)
!13297 = !DILocation(line: 763, column: 17, scope: !13289)
!13298 = !DILocation(line: 763, column: 20, scope: !13289)
!13299 = !DILocation(line: 763, column: 2, scope: !13289)
!13300 = !DILocation(line: 764, column: 16, scope: !13289)
!13301 = !DILocation(line: 764, column: 9, scope: !13289)
!13302 = !DILocation(line: 764, column: 2, scope: !13289)
!13303 = distinct !DISubprogram(name: "len_v3", scope: !12414, file: !12414, line: 714, type: !13304, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13304 = !DISubroutineType(types: !13305)
!13305 = !{!1320, !2001}
!13306 = !DILocalVariable(name: "a", arg: 1, scope: !13303, file: !12414, line: 714, type: !2001)
!13307 = !DILocation(line: 714, column: 34, scope: !13303)
!13308 = !DILocation(line: 716, column: 24, scope: !13303)
!13309 = !DILocation(line: 716, column: 27, scope: !13303)
!13310 = !DILocation(line: 716, column: 15, scope: !13303)
!13311 = !DILocation(line: 716, column: 9, scope: !13303)
!13312 = !DILocation(line: 716, column: 2, scope: !13303)
!13313 = distinct !DISubprogram(name: "vgroup_lock_all", scope: !3, file: !3, line: 2104, type: !6230, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13314 = !DILocalVariable(name: "ob", arg: 1, scope: !13313, file: !3, line: 2104, type: !3872)
!13315 = !DILocation(line: 2104, column: 37, scope: !13313)
!13316 = !DILocalVariable(name: "action", arg: 2, scope: !13313, file: !3, line: 2104, type: !354)
!13317 = !DILocation(line: 2104, column: 45, scope: !13313)
!13318 = !DILocalVariable(name: "dg", scope: !13313, file: !3, line: 2106, type: !1368)
!13319 = !DILocation(line: 2106, column: 16, scope: !13313)
!13320 = !DILocation(line: 2108, column: 6, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 2108, column: 6)
!13322 = !DILocation(line: 2108, column: 13, scope: !13321)
!13323 = !DILocation(line: 2108, column: 6, scope: !13313)
!13324 = !DILocation(line: 2109, column: 10, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13321, file: !3, line: 2108, column: 31)
!13326 = !DILocation(line: 2110, column: 13, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 2110, column: 3)
!13328 = !DILocation(line: 2110, column: 17, scope: !13327)
!13329 = !DILocation(line: 2110, column: 25, scope: !13327)
!13330 = !DILocation(line: 2110, column: 11, scope: !13327)
!13331 = !DILocation(line: 2110, column: 8, scope: !13327)
!13332 = !DILocation(line: 2110, column: 32, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13327, file: !3, line: 2110, column: 3)
!13334 = !DILocation(line: 2110, column: 3, scope: !13327)
!13335 = !DILocation(line: 2111, column: 8, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 2111, column: 8)
!13337 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 2110, column: 51)
!13338 = !DILocation(line: 2111, column: 12, scope: !13336)
!13339 = !DILocation(line: 2111, column: 17, scope: !13336)
!13340 = !DILocation(line: 2111, column: 8, scope: !13337)
!13341 = !DILocation(line: 2112, column: 12, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13336, file: !3, line: 2111, column: 35)
!13343 = !DILocation(line: 2113, column: 5, scope: !13342)
!13344 = !DILocation(line: 2115, column: 3, scope: !13337)
!13345 = !DILocation(line: 2110, column: 41, scope: !13333)
!13346 = !DILocation(line: 2110, column: 45, scope: !13333)
!13347 = !DILocation(line: 2110, column: 39, scope: !13333)
!13348 = !DILocation(line: 2110, column: 3, scope: !13333)
!13349 = distinct !{!13349, !13334, !13350}
!13350 = !DILocation(line: 2115, column: 3, scope: !13327)
!13351 = !DILocation(line: 2116, column: 2, scope: !13325)
!13352 = !DILocation(line: 2118, column: 12, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 2118, column: 2)
!13354 = !DILocation(line: 2118, column: 16, scope: !13353)
!13355 = !DILocation(line: 2118, column: 24, scope: !13353)
!13356 = !DILocation(line: 2118, column: 10, scope: !13353)
!13357 = !DILocation(line: 2118, column: 7, scope: !13353)
!13358 = !DILocation(line: 2118, column: 31, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 2118, column: 2)
!13360 = !DILocation(line: 2118, column: 2, scope: !13353)
!13361 = !DILocation(line: 2119, column: 11, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13359, file: !3, line: 2118, column: 50)
!13363 = !DILocation(line: 2119, column: 3, scope: !13362)
!13364 = !DILocation(line: 2121, column: 5, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13362, file: !3, line: 2119, column: 19)
!13366 = !DILocation(line: 2121, column: 9, scope: !13365)
!13367 = !DILocation(line: 2121, column: 14, scope: !13365)
!13368 = !DILocation(line: 2122, column: 5, scope: !13365)
!13369 = !DILocation(line: 2124, column: 5, scope: !13365)
!13370 = !DILocation(line: 2124, column: 9, scope: !13365)
!13371 = !DILocation(line: 2124, column: 14, scope: !13365)
!13372 = !DILocation(line: 2125, column: 5, scope: !13365)
!13373 = !DILocation(line: 2127, column: 5, scope: !13365)
!13374 = !DILocation(line: 2127, column: 9, scope: !13365)
!13375 = !DILocation(line: 2127, column: 14, scope: !13365)
!13376 = !DILocation(line: 2128, column: 5, scope: !13365)
!13377 = !DILocation(line: 2130, column: 2, scope: !13362)
!13378 = !DILocation(line: 2118, column: 40, scope: !13359)
!13379 = !DILocation(line: 2118, column: 44, scope: !13359)
!13380 = !DILocation(line: 2118, column: 38, scope: !13359)
!13381 = !DILocation(line: 2118, column: 2, scope: !13359)
!13382 = distinct !{!13382, !13360, !13383}
!13383 = !DILocation(line: 2130, column: 2, scope: !13353)
!13384 = !DILocation(line: 2131, column: 1, scope: !13313)
!13385 = distinct !DISubprogram(name: "vgroup_invert_subset", scope: !3, file: !3, line: 2133, type: !13386, scopeLine: 2136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13386 = !DISubroutineType(types: !13387)
!13387 = !{null, !3872, !5078, !4075, !4075, !3381, !3381}
!13388 = !DILocalVariable(name: "ob", arg: 1, scope: !13385, file: !3, line: 2133, type: !3872)
!13389 = !DILocation(line: 2133, column: 42, scope: !13385)
!13390 = !DILocalVariable(name: "vgroup_validmap", arg: 2, scope: !13385, file: !3, line: 2134, type: !5078)
!13391 = !DILocation(line: 2134, column: 46, scope: !13385)
!13392 = !DILocalVariable(name: "vgroup_tot", arg: 3, scope: !13385, file: !3, line: 2134, type: !4075)
!13393 = !DILocation(line: 2134, column: 73, scope: !13385)
!13394 = !DILocalVariable(name: "UNUSED_subset_count", arg: 4, scope: !13385, file: !3, line: 2135, type: !4075)
!13395 = !DILocation(line: 2135, column: 44, scope: !13385)
!13396 = !DILocalVariable(name: "auto_assign", arg: 5, scope: !13385, file: !3, line: 2135, type: !3381)
!13397 = !DILocation(line: 2135, column: 77, scope: !13385)
!13398 = !DILocalVariable(name: "auto_remove", arg: 6, scope: !13385, file: !3, line: 2135, type: !3381)
!13399 = !DILocation(line: 2135, column: 101, scope: !13385)
!13400 = !DILocalVariable(name: "dw", scope: !13385, file: !3, line: 2137, type: !4449)
!13401 = !DILocation(line: 2137, column: 17, scope: !13385)
!13402 = !DILocalVariable(name: "dv", scope: !13385, file: !3, line: 2138, type: !4203)
!13403 = !DILocation(line: 2138, column: 15, scope: !13385)
!13404 = !DILocalVariable(name: "dvert_array", scope: !13385, file: !3, line: 2138, type: !4668)
!13405 = !DILocation(line: 2138, column: 21, scope: !13385)
!13406 = !DILocalVariable(name: "i", scope: !13385, file: !3, line: 2139, type: !354)
!13407 = !DILocation(line: 2139, column: 6, scope: !13385)
!13408 = !DILocalVariable(name: "dvert_tot", scope: !13385, file: !3, line: 2139, type: !354)
!13409 = !DILocation(line: 2139, column: 9, scope: !13385)
!13410 = !DILocalVariable(name: "use_vert_sel", scope: !13385, file: !3, line: 2140, type: !3381)
!13411 = !DILocation(line: 2140, column: 13, scope: !13385)
!13412 = !DILocation(line: 2140, column: 54, scope: !13385)
!13413 = !DILocation(line: 2140, column: 28, scope: !13385)
!13414 = !DILocalVariable(name: "use_mirror", scope: !13385, file: !3, line: 2141, type: !3381)
!13415 = !DILocation(line: 2141, column: 13, scope: !13385)
!13416 = !DILocation(line: 2141, column: 27, scope: !13385)
!13417 = !DILocation(line: 2141, column: 31, scope: !13385)
!13418 = !DILocation(line: 2141, column: 36, scope: !13385)
!13419 = !DILocation(line: 2141, column: 26, scope: !13385)
!13420 = !DILocation(line: 2141, column: 60, scope: !13385)
!13421 = !DILocation(line: 2141, column: 64, scope: !13385)
!13422 = !DILocation(line: 2141, column: 52, scope: !13385)
!13423 = !DILocation(line: 2141, column: 71, scope: !13385)
!13424 = !DILocation(line: 2141, column: 51, scope: !13385)
!13425 = !DILocation(line: 2141, column: 80, scope: !13385)
!13426 = !DILocation(line: 2141, column: 100, scope: !13385)
!13427 = !DILocation(line: 2143, column: 25, scope: !13385)
!13428 = !DILocation(line: 2143, column: 29, scope: !13385)
!13429 = !DILocation(line: 2143, column: 61, scope: !13385)
!13430 = !DILocation(line: 2143, column: 2, scope: !13385)
!13431 = !DILocation(line: 2145, column: 6, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 2145, column: 6)
!13433 = !DILocation(line: 2145, column: 6, scope: !13385)
!13434 = !DILocation(line: 2146, column: 10, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !3, line: 2146, column: 3)
!13436 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 2145, column: 19)
!13437 = !DILocation(line: 2146, column: 8, scope: !13435)
!13438 = !DILocation(line: 2146, column: 15, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 2146, column: 3)
!13440 = !DILocation(line: 2146, column: 19, scope: !13439)
!13441 = !DILocation(line: 2146, column: 17, scope: !13439)
!13442 = !DILocation(line: 2146, column: 3, scope: !13435)
!13443 = !DILocalVariable(name: "j", scope: !13444, file: !3, line: 2147, type: !354)
!13444 = distinct !DILexicalBlock(scope: !13439, file: !3, line: 2146, column: 35)
!13445 = !DILocation(line: 2147, column: 8, scope: !13444)
!13446 = !DILocation(line: 2150, column: 15, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13444, file: !3, line: 2150, column: 8)
!13448 = !DILocation(line: 2150, column: 27, scope: !13447)
!13449 = !DILocation(line: 2150, column: 13, scope: !13447)
!13450 = !DILocation(line: 2150, column: 8, scope: !13444)
!13451 = !DILocation(line: 2151, column: 5, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 2150, column: 32)
!13453 = !DILocation(line: 2154, column: 8, scope: !13444)
!13454 = !DILocation(line: 2154, column: 6, scope: !13444)
!13455 = !DILocation(line: 2155, column: 4, scope: !13444)
!13456 = !DILocation(line: 2155, column: 12, scope: !13444)
!13457 = !DILocation(line: 2157, column: 9, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !3, line: 2157, column: 9)
!13459 = distinct !DILexicalBlock(scope: !13444, file: !3, line: 2155, column: 16)
!13460 = !DILocation(line: 2157, column: 25, scope: !13458)
!13461 = !DILocation(line: 2157, column: 9, scope: !13459)
!13462 = !DILocation(line: 2158, column: 10, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13464, file: !3, line: 2158, column: 10)
!13464 = distinct !DILexicalBlock(scope: !13458, file: !3, line: 2157, column: 29)
!13465 = !DILocation(line: 2158, column: 10, scope: !13464)
!13466 = !DILocation(line: 2159, column: 33, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13463, file: !3, line: 2158, column: 23)
!13468 = !DILocation(line: 2159, column: 37, scope: !13467)
!13469 = !DILocation(line: 2159, column: 12, scope: !13467)
!13470 = !DILocation(line: 2159, column: 10, scope: !13467)
!13471 = !DILocation(line: 2160, column: 6, scope: !13467)
!13472 = !DILocation(line: 2162, column: 31, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13463, file: !3, line: 2161, column: 11)
!13474 = !DILocation(line: 2162, column: 35, scope: !13473)
!13475 = !DILocation(line: 2162, column: 12, scope: !13473)
!13476 = !DILocation(line: 2162, column: 10, scope: !13473)
!13477 = !DILocation(line: 2165, column: 10, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13464, file: !3, line: 2165, column: 10)
!13479 = !DILocation(line: 2165, column: 10, scope: !13464)
!13480 = !DILocation(line: 2166, column: 27, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13478, file: !3, line: 2165, column: 14)
!13482 = !DILocation(line: 2166, column: 31, scope: !13481)
!13483 = !DILocation(line: 2166, column: 25, scope: !13481)
!13484 = !DILocation(line: 2166, column: 7, scope: !13481)
!13485 = !DILocation(line: 2166, column: 11, scope: !13481)
!13486 = !DILocation(line: 2166, column: 18, scope: !13481)
!13487 = !DILocation(line: 2167, column: 7, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !3, line: 2167, column: 7)
!13489 = distinct !DILexicalBlock(scope: !13481, file: !3, line: 2167, column: 7)
!13490 = !DILocation(line: 2167, column: 7, scope: !13489)
!13491 = !DILocation(line: 2167, column: 7, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 2167, column: 7)
!13493 = !DILocation(line: 2168, column: 6, scope: !13481)
!13494 = !DILocation(line: 2169, column: 5, scope: !13464)
!13495 = distinct !{!13495, !13455, !13496}
!13496 = !DILocation(line: 2170, column: 4, scope: !13444)
!13497 = !DILocation(line: 2171, column: 3, scope: !13444)
!13498 = !DILocation(line: 2146, column: 31, scope: !13439)
!13499 = !DILocation(line: 2146, column: 3, scope: !13439)
!13500 = distinct !{!13500, !13442, !13501}
!13501 = !DILocation(line: 2171, column: 3, scope: !13435)
!13502 = !DILocation(line: 2173, column: 7, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13436, file: !3, line: 2173, column: 7)
!13504 = !DILocation(line: 2173, column: 18, scope: !13503)
!13505 = !DILocation(line: 2173, column: 21, scope: !13503)
!13506 = !DILocation(line: 2173, column: 7, scope: !13436)
!13507 = !DILocation(line: 2174, column: 33, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13503, file: !3, line: 2173, column: 35)
!13509 = !DILocation(line: 2174, column: 37, scope: !13508)
!13510 = !DILocation(line: 2174, column: 50, scope: !13508)
!13511 = !DILocation(line: 2175, column: 33, scope: !13508)
!13512 = !DILocation(line: 2175, column: 50, scope: !13508)
!13513 = !DILocation(line: 2174, column: 4, scope: !13508)
!13514 = !DILocation(line: 2176, column: 3, scope: !13508)
!13515 = !DILocation(line: 2178, column: 7, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13436, file: !3, line: 2178, column: 7)
!13517 = !DILocation(line: 2178, column: 7, scope: !13436)
!13518 = !DILocation(line: 2179, column: 33, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 2178, column: 20)
!13520 = !DILocation(line: 2179, column: 46, scope: !13519)
!13521 = !DILocation(line: 2180, column: 33, scope: !13519)
!13522 = !DILocation(line: 2180, column: 50, scope: !13519)
!13523 = !DILocation(line: 2179, column: 4, scope: !13519)
!13524 = !DILocation(line: 2182, column: 3, scope: !13519)
!13525 = !DILocation(line: 2184, column: 3, scope: !13436)
!13526 = !DILocation(line: 2184, column: 13, scope: !13436)
!13527 = !DILocation(line: 2185, column: 2, scope: !13436)
!13528 = !DILocation(line: 2186, column: 1, scope: !13385)
!13529 = distinct !DISubprogram(name: "vgroup_blend_subset", scope: !3, file: !3, line: 2188, type: !13530, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{null, !3872, !5078, !4075, !4075, !1851}
!13532 = !DILocalVariable(name: "ob", arg: 1, scope: !13529, file: !3, line: 2188, type: !3872)
!13533 = !DILocation(line: 2188, column: 41, scope: !13529)
!13534 = !DILocalVariable(name: "vgroup_validmap", arg: 2, scope: !13529, file: !3, line: 2188, type: !5078)
!13535 = !DILocation(line: 2188, column: 57, scope: !13529)
!13536 = !DILocalVariable(name: "vgroup_tot", arg: 3, scope: !13529, file: !3, line: 2188, type: !4075)
!13537 = !DILocation(line: 2188, column: 84, scope: !13529)
!13538 = !DILocalVariable(name: "subset_count", arg: 4, scope: !13529, file: !3, line: 2189, type: !4075)
!13539 = !DILocation(line: 2189, column: 43, scope: !13529)
!13540 = !DILocalVariable(name: "fac", arg: 5, scope: !13529, file: !3, line: 2190, type: !1851)
!13541 = !DILocation(line: 2190, column: 45, scope: !13529)
!13542 = !DILocalVariable(name: "ifac", scope: !13529, file: !3, line: 2192, type: !1851)
!13543 = !DILocation(line: 2192, column: 14, scope: !13529)
!13544 = !DILocation(line: 2192, column: 28, scope: !13529)
!13545 = !DILocation(line: 2192, column: 26, scope: !13529)
!13546 = !DILocalVariable(name: "dvert_array", scope: !13529, file: !3, line: 2193, type: !4668)
!13547 = !DILocation(line: 2193, column: 16, scope: !13529)
!13548 = !DILocalVariable(name: "i", scope: !13529, file: !3, line: 2194, type: !354)
!13549 = !DILocation(line: 2194, column: 6, scope: !13529)
!13550 = !DILocalVariable(name: "dvert_tot", scope: !13529, file: !3, line: 2194, type: !354)
!13551 = !DILocation(line: 2194, column: 9, scope: !13529)
!13552 = !DILocalVariable(name: "vgroup_subset_map", scope: !13529, file: !3, line: 2195, type: !1972)
!13553 = !DILocation(line: 2195, column: 7, scope: !13529)
!13554 = !DILocation(line: 2195, column: 27, scope: !13529)
!13555 = !DILocalVariable(name: "vgroup_subset_weights", scope: !13529, file: !3, line: 2196, type: !2027)
!13556 = !DILocation(line: 2196, column: 9, scope: !13529)
!13557 = !DILocation(line: 2196, column: 33, scope: !13529)
!13558 = !DILocalVariable(name: "use_mirror", scope: !13529, file: !3, line: 2197, type: !3381)
!13559 = !DILocation(line: 2197, column: 13, scope: !13529)
!13560 = !DILocation(line: 2197, column: 27, scope: !13529)
!13561 = !DILocation(line: 2197, column: 31, scope: !13529)
!13562 = !DILocation(line: 2197, column: 36, scope: !13529)
!13563 = !DILocation(line: 2197, column: 26, scope: !13529)
!13564 = !DILocation(line: 2197, column: 60, scope: !13529)
!13565 = !DILocation(line: 2197, column: 64, scope: !13529)
!13566 = !DILocation(line: 2197, column: 52, scope: !13529)
!13567 = !DILocation(line: 2197, column: 71, scope: !13529)
!13568 = !DILocation(line: 2197, column: 51, scope: !13529)
!13569 = !DILocation(line: 2197, column: 80, scope: !13529)
!13570 = !DILocation(line: 2197, column: 100, scope: !13529)
!13571 = !DILocalVariable(name: "em", scope: !13529, file: !3, line: 2199, type: !4100)
!13572 = !DILocation(line: 2199, column: 14, scope: !13529)
!13573 = !DILocation(line: 2199, column: 44, scope: !13529)
!13574 = !DILocation(line: 2199, column: 19, scope: !13529)
!13575 = !DILocalVariable(name: "bm", scope: !13529, file: !3, line: 2200, type: !1746)
!13576 = !DILocation(line: 2200, column: 9, scope: !13529)
!13577 = !DILocation(line: 2200, column: 14, scope: !13529)
!13578 = !DILocation(line: 2200, column: 19, scope: !13529)
!13579 = !DILocation(line: 2200, column: 23, scope: !13529)
!13580 = !DILocalVariable(name: "me", scope: !13529, file: !3, line: 2201, type: !1383)
!13581 = !DILocation(line: 2201, column: 9, scope: !13529)
!13582 = !DILocation(line: 2201, column: 14, scope: !13529)
!13583 = !DILocation(line: 2201, column: 28, scope: !13529)
!13584 = !DILocation(line: 2201, column: 32, scope: !13529)
!13585 = !DILocalVariable(name: "emap", scope: !13529, file: !3, line: 2203, type: !13586)
!13586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13587, size: 64)
!13587 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshElemMap", file: !2046, line: 99, baseType: !2045)
!13588 = !DILocation(line: 2203, column: 15, scope: !13529)
!13589 = !DILocalVariable(name: "emap_mem", scope: !13529, file: !3, line: 2204, type: !1972)
!13590 = !DILocation(line: 2204, column: 7, scope: !13529)
!13591 = !DILocalVariable(name: "_dv_stack_stack", scope: !13529, file: !3, line: 2206, type: !13592)
!13592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13593, size: 64)
!13593 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !1751, line: 48, baseType: !1826)
!13594 = !DILocation(line: 2206, column: 2, scope: !13529)
!13595 = !DILocalVariable(name: "_dv_stack_free", scope: !13529, file: !3, line: 2206, type: !13592)
!13596 = !DILocalVariable(name: "_dv_stack_temp", scope: !13529, file: !3, line: 2206, type: !13592)
!13597 = !DILocalVariable(name: "_dv_stack_type", scope: !13529, file: !3, line: 2206, type: !4203)
!13598 = !DILocation(line: 2208, column: 34, scope: !13529)
!13599 = !DILocation(line: 2208, column: 51, scope: !13529)
!13600 = !DILocation(line: 2208, column: 63, scope: !13529)
!13601 = !DILocation(line: 2208, column: 2, scope: !13529)
!13602 = !DILocation(line: 2209, column: 25, scope: !13529)
!13603 = !DILocation(line: 2209, column: 29, scope: !13529)
!13604 = !DILocation(line: 2209, column: 2, scope: !13529)
!13605 = !DILocation(line: 2210, column: 9, scope: !13529)
!13606 = !DILocation(line: 2210, column: 2, scope: !13529)
!13607 = !DILocation(line: 2210, column: 68, scope: !13529)
!13608 = !DILocation(line: 2210, column: 66, scope: !13529)
!13609 = !DILocation(line: 2212, column: 6, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 2212, column: 6)
!13611 = !DILocation(line: 2212, column: 6, scope: !13529)
!13612 = !DILocation(line: 2213, column: 29, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13610, file: !3, line: 2212, column: 10)
!13614 = !DILocation(line: 2213, column: 3, scope: !13613)
!13615 = !DILocation(line: 2215, column: 8, scope: !13613)
!13616 = !DILocation(line: 2216, column: 12, scope: !13613)
!13617 = !DILocation(line: 2217, column: 2, scope: !13613)
!13618 = !DILocation(line: 2220, column: 33, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13610, file: !3, line: 2218, column: 7)
!13620 = !DILocation(line: 2220, column: 37, scope: !13619)
!13621 = !DILocation(line: 2220, column: 44, scope: !13619)
!13622 = !DILocation(line: 2220, column: 48, scope: !13619)
!13623 = !DILocation(line: 2220, column: 57, scope: !13619)
!13624 = !DILocation(line: 2220, column: 61, scope: !13619)
!13625 = !DILocation(line: 2219, column: 3, scope: !13619)
!13626 = !DILocation(line: 2224, column: 9, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 2224, column: 2)
!13628 = !DILocation(line: 2224, column: 7, scope: !13627)
!13629 = !DILocation(line: 2224, column: 14, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13627, file: !3, line: 2224, column: 2)
!13631 = !DILocation(line: 2224, column: 18, scope: !13630)
!13632 = !DILocation(line: 2224, column: 16, scope: !13630)
!13633 = !DILocation(line: 2224, column: 2, scope: !13627)
!13634 = !DILocalVariable(name: "dv", scope: !13635, file: !3, line: 2225, type: !4203)
!13635 = distinct !DILexicalBlock(scope: !13630, file: !3, line: 2224, column: 34)
!13636 = !DILocation(line: 2225, column: 16, scope: !13635)
!13637 = !DILocalVariable(name: "dv_stack_tot", scope: !13635, file: !3, line: 2226, type: !354)
!13638 = !DILocation(line: 2226, column: 7, scope: !13635)
!13639 = !DILocalVariable(name: "j", scope: !13635, file: !3, line: 2227, type: !354)
!13640 = !DILocation(line: 2227, column: 7, scope: !13635)
!13641 = !DILocation(line: 2230, column: 7, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13635, file: !3, line: 2230, column: 7)
!13643 = !DILocation(line: 2230, column: 7, scope: !13635)
!13644 = !DILocalVariable(name: "v", scope: !13645, file: !3, line: 2231, type: !1627)
!13645 = distinct !DILexicalBlock(scope: !13642, file: !3, line: 2230, column: 11)
!13646 = !DILocation(line: 2231, column: 12, scope: !13645)
!13647 = !DILocation(line: 2231, column: 33, scope: !13645)
!13648 = !DILocation(line: 2231, column: 37, scope: !13645)
!13649 = !DILocation(line: 2231, column: 16, scope: !13645)
!13650 = !DILocation(line: 2232, column: 8, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13645, file: !3, line: 2232, column: 8)
!13652 = !DILocation(line: 2232, column: 8, scope: !13645)
!13653 = !DILocalVariable(name: "eiter", scope: !13654, file: !3, line: 2233, type: !4112)
!13654 = distinct !DILexicalBlock(scope: !13651, file: !3, line: 2232, column: 46)
!13655 = !DILocation(line: 2233, column: 12, scope: !13654)
!13656 = !DILocalVariable(name: "e", scope: !13654, file: !3, line: 2234, type: !1688)
!13657 = !DILocation(line: 2234, column: 13, scope: !13654)
!13658 = !DILocation(line: 2235, column: 5, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13654, file: !3, line: 2235, column: 5)
!13660 = !DILocation(line: 2235, column: 5, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13659, file: !3, line: 2235, column: 5)
!13662 = !DILocalVariable(name: "v_other", scope: !13663, file: !3, line: 2236, type: !1627)
!13663 = distinct !DILexicalBlock(scope: !13661, file: !3, line: 2235, column: 51)
!13664 = !DILocation(line: 2236, column: 14, scope: !13663)
!13665 = !DILocation(line: 2236, column: 43, scope: !13663)
!13666 = !DILocation(line: 2236, column: 46, scope: !13663)
!13667 = !DILocation(line: 2236, column: 24, scope: !13663)
!13668 = !DILocalVariable(name: "i_other", scope: !13663, file: !3, line: 2237, type: !4075)
!13669 = !DILocation(line: 2237, column: 16, scope: !13663)
!13670 = !DILocation(line: 2237, column: 26, scope: !13663)
!13671 = !DILocation(line: 2239, column: 10, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13663, file: !3, line: 2239, column: 10)
!13673 = !DILocation(line: 2239, column: 53, scope: !13672)
!13674 = !DILocation(line: 2239, column: 10, scope: !13663)
!13675 = !DILocation(line: 2240, column: 12, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 2239, column: 59)
!13677 = !DILocation(line: 2240, column: 24, scope: !13676)
!13678 = !DILocation(line: 2240, column: 10, scope: !13676)
!13679 = !DILocation(line: 2241, column: 7, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13681, file: !3, line: 2241, column: 7)
!13681 = distinct !DILexicalBlock(scope: !13676, file: !3, line: 2241, column: 7)
!13682 = !DILocation(line: 2241, column: 7, scope: !13681)
!13683 = !DILocation(line: 2241, column: 7, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13680, file: !3, line: 2241, column: 7)
!13685 = !DILocation(line: 2241, column: 7, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13680, file: !3, line: 2241, column: 7)
!13687 = !DILocation(line: 2242, column: 19, scope: !13676)
!13688 = !DILocation(line: 2243, column: 6, scope: !13676)
!13689 = !DILocation(line: 2244, column: 5, scope: !13663)
!13690 = distinct !{!13690, !13658, !13691}
!13691 = !DILocation(line: 2244, column: 5, scope: !13659)
!13692 = !DILocation(line: 2245, column: 4, scope: !13654)
!13693 = !DILocation(line: 2246, column: 3, scope: !13645)
!13694 = !DILocalVariable(name: "v", scope: !13695, file: !3, line: 2248, type: !3476)
!13695 = distinct !DILexicalBlock(scope: !13642, file: !3, line: 2247, column: 8)
!13696 = !DILocation(line: 2248, column: 11, scope: !13695)
!13697 = !DILocation(line: 2248, column: 16, scope: !13695)
!13698 = !DILocation(line: 2248, column: 20, scope: !13695)
!13699 = !DILocation(line: 2248, column: 26, scope: !13695)
!13700 = !DILocation(line: 2249, column: 8, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13695, file: !3, line: 2249, column: 8)
!13702 = !DILocation(line: 2249, column: 11, scope: !13701)
!13703 = !DILocation(line: 2249, column: 16, scope: !13701)
!13704 = !DILocation(line: 2249, column: 8, scope: !13695)
!13705 = !DILocation(line: 2250, column: 12, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13707, file: !3, line: 2250, column: 5)
!13707 = distinct !DILexicalBlock(scope: !13701, file: !3, line: 2249, column: 26)
!13708 = !DILocation(line: 2250, column: 10, scope: !13706)
!13709 = !DILocation(line: 2250, column: 17, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13706, file: !3, line: 2250, column: 5)
!13711 = !DILocation(line: 2250, column: 21, scope: !13710)
!13712 = !DILocation(line: 2250, column: 26, scope: !13710)
!13713 = !DILocation(line: 2250, column: 29, scope: !13710)
!13714 = !DILocation(line: 2250, column: 19, scope: !13710)
!13715 = !DILocation(line: 2250, column: 5, scope: !13706)
!13716 = !DILocalVariable(name: "e", scope: !13717, file: !3, line: 2251, type: !13718)
!13717 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 2250, column: 41)
!13718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13719, size: 64)
!13719 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !181, line: 52, baseType: !1583)
!13720 = !DILocation(line: 2251, column: 13, scope: !13717)
!13721 = !DILocation(line: 2251, column: 18, scope: !13717)
!13722 = !DILocation(line: 2251, column: 22, scope: !13717)
!13723 = !DILocation(line: 2251, column: 28, scope: !13717)
!13724 = !DILocation(line: 2251, column: 33, scope: !13717)
!13725 = !DILocation(line: 2251, column: 36, scope: !13717)
!13726 = !DILocation(line: 2251, column: 44, scope: !13717)
!13727 = !DILocalVariable(name: "i_other", scope: !13717, file: !3, line: 2252, type: !4075)
!13728 = !DILocation(line: 2252, column: 16, scope: !13717)
!13729 = !DILocation(line: 2252, column: 27, scope: !13717)
!13730 = !DILocation(line: 2252, column: 30, scope: !13717)
!13731 = !DILocation(line: 2252, column: 36, scope: !13717)
!13732 = !DILocation(line: 2252, column: 33, scope: !13717)
!13733 = !DILocation(line: 2252, column: 40, scope: !13717)
!13734 = !DILocation(line: 2252, column: 43, scope: !13717)
!13735 = !DILocation(line: 2252, column: 48, scope: !13717)
!13736 = !DILocation(line: 2252, column: 51, scope: !13717)
!13737 = !DILocalVariable(name: "v_other", scope: !13717, file: !3, line: 2253, type: !3476)
!13738 = !DILocation(line: 2253, column: 13, scope: !13717)
!13739 = !DILocation(line: 2253, column: 24, scope: !13717)
!13740 = !DILocation(line: 2253, column: 28, scope: !13717)
!13741 = !DILocation(line: 2253, column: 34, scope: !13717)
!13742 = !DILocation(line: 2255, column: 11, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13717, file: !3, line: 2255, column: 10)
!13744 = !DILocation(line: 2255, column: 20, scope: !13743)
!13745 = !DILocation(line: 2255, column: 25, scope: !13743)
!13746 = !DILocation(line: 2255, column: 35, scope: !13743)
!13747 = !DILocation(line: 2255, column: 10, scope: !13717)
!13748 = !DILocation(line: 2256, column: 12, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 2255, column: 41)
!13750 = !DILocation(line: 2256, column: 24, scope: !13749)
!13751 = !DILocation(line: 2256, column: 10, scope: !13749)
!13752 = !DILocation(line: 2257, column: 7, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 2257, column: 7)
!13754 = distinct !DILexicalBlock(scope: !13749, file: !3, line: 2257, column: 7)
!13755 = !DILocation(line: 2257, column: 7, scope: !13754)
!13756 = !DILocation(line: 2257, column: 7, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 2257, column: 7)
!13758 = !DILocation(line: 2257, column: 7, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 2257, column: 7)
!13760 = !DILocation(line: 2258, column: 19, scope: !13749)
!13761 = !DILocation(line: 2259, column: 6, scope: !13749)
!13762 = !DILocation(line: 2260, column: 5, scope: !13717)
!13763 = !DILocation(line: 2250, column: 37, scope: !13710)
!13764 = !DILocation(line: 2250, column: 5, scope: !13710)
!13765 = distinct !{!13765, !13715, !13766}
!13766 = !DILocation(line: 2260, column: 5, scope: !13706)
!13767 = !DILocation(line: 2261, column: 4, scope: !13707)
!13768 = !DILocation(line: 2264, column: 7, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13635, file: !3, line: 2264, column: 7)
!13770 = !DILocation(line: 2264, column: 7, scope: !13635)
!13771 = !DILocalVariable(name: "dv_mul", scope: !13772, file: !3, line: 2265, type: !1851)
!13772 = distinct !DILexicalBlock(scope: !13769, file: !3, line: 2264, column: 21)
!13773 = !DILocation(line: 2265, column: 16, scope: !13772)
!13774 = !DILocation(line: 2265, column: 39, scope: !13772)
!13775 = !DILocation(line: 2265, column: 32, scope: !13772)
!13776 = !DILocation(line: 2265, column: 30, scope: !13772)
!13777 = !DILocation(line: 2268, column: 4, scope: !13772)
!13778 = !DILocation(line: 2268, column: 17, scope: !13772)
!13779 = !DILocation(line: 2268, column: 15, scope: !13772)
!13780 = !DILocation(line: 2269, column: 12, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !3, line: 2269, column: 5)
!13782 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 2268, column: 48)
!13783 = !DILocation(line: 2269, column: 10, scope: !13781)
!13784 = !DILocation(line: 2269, column: 17, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13781, file: !3, line: 2269, column: 5)
!13786 = !DILocation(line: 2269, column: 21, scope: !13785)
!13787 = !DILocation(line: 2269, column: 19, scope: !13785)
!13788 = !DILocation(line: 2269, column: 5, scope: !13781)
!13789 = !DILocation(line: 2270, column: 34, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13785, file: !3, line: 2269, column: 40)
!13791 = !DILocation(line: 2270, column: 63, scope: !13790)
!13792 = !DILocation(line: 2270, column: 67, scope: !13790)
!13793 = !DILocation(line: 2270, column: 85, scope: !13790)
!13794 = !DILocation(line: 2270, column: 43, scope: !13790)
!13795 = !DILocation(line: 2270, column: 41, scope: !13790)
!13796 = !DILocation(line: 2270, column: 6, scope: !13790)
!13797 = !DILocation(line: 2270, column: 28, scope: !13790)
!13798 = !DILocation(line: 2270, column: 31, scope: !13790)
!13799 = !DILocation(line: 2271, column: 5, scope: !13790)
!13800 = !DILocation(line: 2269, column: 36, scope: !13785)
!13801 = !DILocation(line: 2269, column: 5, scope: !13785)
!13802 = distinct !{!13802, !13788, !13803}
!13803 = !DILocation(line: 2271, column: 5, scope: !13781)
!13804 = distinct !{!13804, !13777, !13805}
!13805 = !DILocation(line: 2272, column: 4, scope: !13772)
!13806 = !DILocation(line: 2274, column: 9, scope: !13772)
!13807 = !DILocation(line: 2274, column: 21, scope: !13772)
!13808 = !DILocation(line: 2274, column: 7, scope: !13772)
!13809 = !DILocation(line: 2275, column: 11, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 2275, column: 4)
!13811 = !DILocation(line: 2275, column: 9, scope: !13810)
!13812 = !DILocation(line: 2275, column: 16, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 2275, column: 4)
!13814 = !DILocation(line: 2275, column: 20, scope: !13813)
!13815 = !DILocation(line: 2275, column: 18, scope: !13813)
!13816 = !DILocation(line: 2275, column: 4, scope: !13810)
!13817 = !DILocalVariable(name: "dw", scope: !13818, file: !3, line: 2276, type: !4449)
!13818 = distinct !DILexicalBlock(scope: !13813, file: !3, line: 2275, column: 39)
!13819 = !DILocation(line: 2276, column: 20, scope: !13818)
!13820 = !DILocation(line: 2277, column: 9, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13818, file: !3, line: 2277, column: 9)
!13822 = !DILocation(line: 2277, column: 31, scope: !13821)
!13823 = !DILocation(line: 2277, column: 34, scope: !13821)
!13824 = !DILocation(line: 2277, column: 9, scope: !13818)
!13825 = !DILocation(line: 2278, column: 32, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13821, file: !3, line: 2277, column: 42)
!13827 = !DILocation(line: 2278, column: 36, scope: !13826)
!13828 = !DILocation(line: 2278, column: 54, scope: !13826)
!13829 = !DILocation(line: 2278, column: 11, scope: !13826)
!13830 = !DILocation(line: 2278, column: 9, scope: !13826)
!13831 = !DILocation(line: 2279, column: 5, scope: !13826)
!13832 = !DILocation(line: 2281, column: 30, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13821, file: !3, line: 2280, column: 10)
!13834 = !DILocation(line: 2281, column: 34, scope: !13833)
!13835 = !DILocation(line: 2281, column: 52, scope: !13833)
!13836 = !DILocation(line: 2281, column: 11, scope: !13833)
!13837 = !DILocation(line: 2281, column: 9, scope: !13833)
!13838 = !DILocation(line: 2284, column: 9, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13818, file: !3, line: 2284, column: 9)
!13840 = !DILocation(line: 2284, column: 9, scope: !13818)
!13841 = !DILocation(line: 2285, column: 20, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13839, file: !3, line: 2284, column: 13)
!13843 = !DILocation(line: 2285, column: 26, scope: !13842)
!13844 = !DILocation(line: 2285, column: 48, scope: !13842)
!13845 = !DILocation(line: 2285, column: 24, scope: !13842)
!13846 = !DILocation(line: 2285, column: 55, scope: !13842)
!13847 = !DILocation(line: 2285, column: 62, scope: !13842)
!13848 = !DILocation(line: 2285, column: 66, scope: !13842)
!13849 = !DILocation(line: 2285, column: 60, scope: !13842)
!13850 = !DILocation(line: 2285, column: 52, scope: !13842)
!13851 = !DILocation(line: 2285, column: 6, scope: !13842)
!13852 = !DILocation(line: 2285, column: 10, scope: !13842)
!13853 = !DILocation(line: 2285, column: 17, scope: !13842)
!13854 = !DILocation(line: 2286, column: 6, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 2286, column: 6)
!13856 = distinct !DILexicalBlock(scope: !13842, file: !3, line: 2286, column: 6)
!13857 = !DILocation(line: 2286, column: 6, scope: !13856)
!13858 = !DILocation(line: 2286, column: 6, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 2286, column: 6)
!13860 = !DILocation(line: 2287, column: 5, scope: !13842)
!13861 = !DILocation(line: 2290, column: 5, scope: !13818)
!13862 = !DILocation(line: 2290, column: 27, scope: !13818)
!13863 = !DILocation(line: 2290, column: 30, scope: !13818)
!13864 = !DILocation(line: 2291, column: 4, scope: !13818)
!13865 = !DILocation(line: 2275, column: 35, scope: !13813)
!13866 = !DILocation(line: 2275, column: 4, scope: !13813)
!13867 = distinct !{!13867, !13816, !13868}
!13868 = !DILocation(line: 2291, column: 4, scope: !13810)
!13869 = !DILocation(line: 2292, column: 3, scope: !13772)
!13870 = !DILocation(line: 2293, column: 2, scope: !13635)
!13871 = !DILocation(line: 2224, column: 30, scope: !13630)
!13872 = !DILocation(line: 2224, column: 2, scope: !13630)
!13873 = distinct !{!13873, !13633, !13874}
!13874 = !DILocation(line: 2293, column: 2, scope: !13627)
!13875 = !DILocation(line: 2295, column: 6, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 2295, column: 6)
!13877 = !DILocation(line: 2295, column: 6, scope: !13529)
!13878 = !DILocation(line: 2297, column: 2, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 2295, column: 10)
!13880 = !DILocation(line: 2299, column: 3, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13876, file: !3, line: 2298, column: 7)
!13882 = !DILocation(line: 2299, column: 13, scope: !13881)
!13883 = !DILocation(line: 2300, column: 3, scope: !13881)
!13884 = !DILocation(line: 2300, column: 13, scope: !13881)
!13885 = !DILocation(line: 2303, column: 6, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 2303, column: 6)
!13887 = !DILocation(line: 2303, column: 6, scope: !13529)
!13888 = !DILocation(line: 2304, column: 3, scope: !13886)
!13889 = !DILocation(line: 2304, column: 13, scope: !13886)
!13890 = !DILocation(line: 2307, column: 6, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 2307, column: 6)
!13892 = !DILocation(line: 2307, column: 6, scope: !13529)
!13893 = !DILocation(line: 2308, column: 26, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13891, file: !3, line: 2307, column: 18)
!13895 = !DILocation(line: 2308, column: 30, scope: !13894)
!13896 = !DILocation(line: 2308, column: 3, scope: !13894)
!13897 = !DILocation(line: 2309, column: 32, scope: !13894)
!13898 = !DILocation(line: 2309, column: 36, scope: !13894)
!13899 = !DILocation(line: 2309, column: 49, scope: !13894)
!13900 = !DILocation(line: 2310, column: 32, scope: !13894)
!13901 = !DILocation(line: 2310, column: 49, scope: !13894)
!13902 = !DILocation(line: 2309, column: 3, scope: !13894)
!13903 = !DILocation(line: 2311, column: 7, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 2311, column: 7)
!13905 = !DILocation(line: 2311, column: 7, scope: !13894)
!13906 = !DILocation(line: 2312, column: 4, scope: !13904)
!13907 = !DILocation(line: 2312, column: 14, scope: !13904)
!13908 = !DILocation(line: 2313, column: 2, scope: !13894)
!13909 = !DILocation(line: 2314, column: 1, scope: !13529)
!13910 = distinct !DISubprogram(name: "BM_edge_other_vert", scope: !13911, file: !13911, line: 60, type: !13912, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13911 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_queries_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13912 = !DISubroutineType(types: !13913)
!13913 = !{!1627, !1688, !13914}
!13914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13915, size: 64)
!13915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1628)
!13916 = !DILocalVariable(name: "e", arg: 1, scope: !13910, file: !13911, line: 60, type: !1688)
!13917 = !DILocation(line: 60, column: 47, scope: !13910)
!13918 = !DILocalVariable(name: "v", arg: 2, scope: !13910, file: !13911, line: 60, type: !13914)
!13919 = !DILocation(line: 60, column: 64, scope: !13910)
!13920 = !DILocation(line: 62, column: 6, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13910, file: !13911, line: 62, column: 6)
!13922 = !DILocation(line: 62, column: 9, scope: !13921)
!13923 = !DILocation(line: 62, column: 15, scope: !13921)
!13924 = !DILocation(line: 62, column: 12, scope: !13921)
!13925 = !DILocation(line: 62, column: 6, scope: !13910)
!13926 = !DILocation(line: 63, column: 10, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13921, file: !13911, line: 62, column: 18)
!13928 = !DILocation(line: 63, column: 13, scope: !13927)
!13929 = !DILocation(line: 63, column: 3, scope: !13927)
!13930 = !DILocation(line: 65, column: 11, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13921, file: !13911, line: 65, column: 11)
!13932 = !DILocation(line: 65, column: 14, scope: !13931)
!13933 = !DILocation(line: 65, column: 20, scope: !13931)
!13934 = !DILocation(line: 65, column: 17, scope: !13931)
!13935 = !DILocation(line: 65, column: 11, scope: !13921)
!13936 = !DILocation(line: 66, column: 10, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13931, file: !13911, line: 65, column: 23)
!13938 = !DILocation(line: 66, column: 13, scope: !13937)
!13939 = !DILocation(line: 66, column: 3, scope: !13937)
!13940 = !DILocation(line: 68, column: 2, scope: !13910)
!13941 = !DILocation(line: 69, column: 1, scope: !13910)
!13942 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !5052, file: !5052, line: 119, type: !13943, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13943 = !DISubroutineType(types: !13944)
!13944 = !{!354, !5055}
!13945 = !DILocalVariable(name: "head", arg: 1, scope: !13942, file: !5052, line: 119, type: !5055)
!13946 = !DILocation(line: 119, column: 51, scope: !13942)
!13947 = !DILocation(line: 121, column: 9, scope: !13942)
!13948 = !DILocation(line: 121, column: 15, scope: !13942)
!13949 = !DILocation(line: 121, column: 2, scope: !13942)
!13950 = distinct !DISubprogram(name: "vgroup_clean_subset", scope: !3, file: !3, line: 2405, type: !13951, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!13951 = !DISubroutineType(types: !13952)
!13952 = !{null, !3872, !5078, !4075, !4075, !1851, !3381}
!13953 = !DILocalVariable(name: "ob", arg: 1, scope: !13950, file: !3, line: 2405, type: !3872)
!13954 = !DILocation(line: 2405, column: 41, scope: !13950)
!13955 = !DILocalVariable(name: "vgroup_validmap", arg: 2, scope: !13950, file: !3, line: 2405, type: !5078)
!13956 = !DILocation(line: 2405, column: 57, scope: !13950)
!13957 = !DILocalVariable(name: "vgroup_tot", arg: 3, scope: !13950, file: !3, line: 2405, type: !4075)
!13958 = !DILocation(line: 2405, column: 84, scope: !13950)
!13959 = !DILocalVariable(name: "UNUSED_subset_count", arg: 4, scope: !13950, file: !3, line: 2405, type: !4075)
!13960 = !DILocation(line: 2405, column: 106, scope: !13950)
!13961 = !DILocalVariable(name: "epsilon", arg: 5, scope: !13950, file: !3, line: 2406, type: !1851)
!13962 = !DILocation(line: 2406, column: 45, scope: !13950)
!13963 = !DILocalVariable(name: "keep_single", arg: 6, scope: !13950, file: !3, line: 2406, type: !3381)
!13964 = !DILocation(line: 2406, column: 65, scope: !13950)
!13965 = !DILocalVariable(name: "dvert_array", scope: !13950, file: !3, line: 2408, type: !4668)
!13966 = !DILocation(line: 2408, column: 16, scope: !13950)
!13967 = !DILocalVariable(name: "dvert_tot", scope: !13950, file: !3, line: 2409, type: !354)
!13968 = !DILocation(line: 2409, column: 6, scope: !13950)
!13969 = !DILocalVariable(name: "use_vert_sel", scope: !13950, file: !3, line: 2410, type: !3381)
!13970 = !DILocation(line: 2410, column: 13, scope: !13950)
!13971 = !DILocation(line: 2410, column: 54, scope: !13950)
!13972 = !DILocation(line: 2410, column: 28, scope: !13950)
!13973 = !DILocalVariable(name: "use_mirror", scope: !13950, file: !3, line: 2411, type: !3381)
!13974 = !DILocation(line: 2411, column: 13, scope: !13950)
!13975 = !DILocation(line: 2411, column: 27, scope: !13950)
!13976 = !DILocation(line: 2411, column: 31, scope: !13950)
!13977 = !DILocation(line: 2411, column: 36, scope: !13950)
!13978 = !DILocation(line: 2411, column: 26, scope: !13950)
!13979 = !DILocation(line: 2411, column: 60, scope: !13950)
!13980 = !DILocation(line: 2411, column: 64, scope: !13950)
!13981 = !DILocation(line: 2411, column: 52, scope: !13950)
!13982 = !DILocation(line: 2411, column: 71, scope: !13950)
!13983 = !DILocation(line: 2411, column: 51, scope: !13950)
!13984 = !DILocation(line: 2411, column: 80, scope: !13950)
!13985 = !DILocation(line: 2411, column: 100, scope: !13950)
!13986 = !DILocation(line: 2413, column: 25, scope: !13950)
!13987 = !DILocation(line: 2413, column: 29, scope: !13950)
!13988 = !DILocation(line: 2413, column: 61, scope: !13950)
!13989 = !DILocation(line: 2413, column: 2, scope: !13950)
!13990 = !DILocation(line: 2415, column: 6, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13950, file: !3, line: 2415, column: 6)
!13992 = !DILocation(line: 2415, column: 6, scope: !13950)
!13993 = !DILocation(line: 2416, column: 7, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 2416, column: 7)
!13995 = distinct !DILexicalBlock(scope: !13991, file: !3, line: 2415, column: 19)
!13996 = !DILocation(line: 2416, column: 18, scope: !13994)
!13997 = !DILocation(line: 2416, column: 21, scope: !13994)
!13998 = !DILocation(line: 2416, column: 7, scope: !13995)
!13999 = !DILocation(line: 2420, column: 35, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 2416, column: 35)
!14001 = !DILocation(line: 2420, column: 39, scope: !14000)
!14002 = !DILocation(line: 2420, column: 52, scope: !14000)
!14003 = !DILocation(line: 2420, column: 4, scope: !14000)
!14004 = !DILocation(line: 2421, column: 3, scope: !14000)
!14005 = !DILocation(line: 2423, column: 32, scope: !13995)
!14006 = !DILocation(line: 2423, column: 45, scope: !13995)
!14007 = !DILocation(line: 2424, column: 32, scope: !13995)
!14008 = !DILocation(line: 2424, column: 49, scope: !13995)
!14009 = !DILocation(line: 2425, column: 32, scope: !13995)
!14010 = !DILocation(line: 2425, column: 41, scope: !13995)
!14011 = !DILocation(line: 2423, column: 3, scope: !13995)
!14012 = !DILocation(line: 2427, column: 3, scope: !13995)
!14013 = !DILocation(line: 2427, column: 13, scope: !13995)
!14014 = !DILocation(line: 2428, column: 2, scope: !13995)
!14015 = !DILocation(line: 2429, column: 1, scope: !13950)
!14016 = distinct !DISubprogram(name: "vgroup_quantize_subset", scope: !3, file: !3, line: 2431, type: !14017, scopeLine: 2433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!14017 = !DISubroutineType(types: !14018)
!14018 = !{null, !3872, !5078, !4075, !4075, !4075}
!14019 = !DILocalVariable(name: "ob", arg: 1, scope: !14016, file: !3, line: 2431, type: !3872)
!14020 = !DILocation(line: 2431, column: 44, scope: !14016)
!14021 = !DILocalVariable(name: "vgroup_validmap", arg: 2, scope: !14016, file: !3, line: 2431, type: !5078)
!14022 = !DILocation(line: 2431, column: 60, scope: !14016)
!14023 = !DILocalVariable(name: "vgroup_tot", arg: 3, scope: !14016, file: !3, line: 2431, type: !4075)
!14024 = !DILocation(line: 2431, column: 87, scope: !14016)
!14025 = !DILocalVariable(name: "UNUSED_subset_count", arg: 4, scope: !14016, file: !3, line: 2431, type: !4075)
!14026 = !DILocation(line: 2431, column: 109, scope: !14016)
!14027 = !DILocalVariable(name: "steps", arg: 5, scope: !14016, file: !3, line: 2432, type: !4075)
!14028 = !DILocation(line: 2432, column: 46, scope: !14016)
!14029 = !DILocalVariable(name: "dvert_array", scope: !14016, file: !3, line: 2434, type: !4668)
!14030 = !DILocation(line: 2434, column: 16, scope: !14016)
!14031 = !DILocalVariable(name: "dvert_tot", scope: !14016, file: !3, line: 2435, type: !354)
!14032 = !DILocation(line: 2435, column: 6, scope: !14016)
!14033 = !DILocalVariable(name: "use_vert_sel", scope: !14016, file: !3, line: 2436, type: !3381)
!14034 = !DILocation(line: 2436, column: 13, scope: !14016)
!14035 = !DILocation(line: 2436, column: 54, scope: !14016)
!14036 = !DILocation(line: 2436, column: 28, scope: !14016)
!14037 = !DILocalVariable(name: "use_mirror", scope: !14016, file: !3, line: 2437, type: !3381)
!14038 = !DILocation(line: 2437, column: 13, scope: !14016)
!14039 = !DILocation(line: 2437, column: 27, scope: !14016)
!14040 = !DILocation(line: 2437, column: 31, scope: !14016)
!14041 = !DILocation(line: 2437, column: 36, scope: !14016)
!14042 = !DILocation(line: 2437, column: 26, scope: !14016)
!14043 = !DILocation(line: 2437, column: 60, scope: !14016)
!14044 = !DILocation(line: 2437, column: 64, scope: !14016)
!14045 = !DILocation(line: 2437, column: 52, scope: !14016)
!14046 = !DILocation(line: 2437, column: 71, scope: !14016)
!14047 = !DILocation(line: 2437, column: 51, scope: !14016)
!14048 = !DILocation(line: 2437, column: 80, scope: !14016)
!14049 = !DILocation(line: 2437, column: 100, scope: !14016)
!14050 = !DILocation(line: 2438, column: 25, scope: !14016)
!14051 = !DILocation(line: 2438, column: 29, scope: !14016)
!14052 = !DILocation(line: 2438, column: 61, scope: !14016)
!14053 = !DILocation(line: 2438, column: 2, scope: !14016)
!14054 = !DILocation(line: 2440, column: 6, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14016, file: !3, line: 2440, column: 6)
!14056 = !DILocation(line: 2440, column: 6, scope: !14016)
!14057 = !DILocalVariable(name: "steps_fl", scope: !14058, file: !3, line: 2441, type: !1851)
!14058 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 2440, column: 19)
!14059 = !DILocation(line: 2441, column: 15, scope: !14058)
!14060 = !DILocation(line: 2441, column: 26, scope: !14058)
!14061 = !DILocalVariable(name: "dv", scope: !14058, file: !3, line: 2442, type: !4203)
!14062 = !DILocation(line: 2442, column: 16, scope: !14058)
!14063 = !DILocalVariable(name: "i", scope: !14058, file: !3, line: 2443, type: !354)
!14064 = !DILocation(line: 2443, column: 7, scope: !14058)
!14065 = !DILocation(line: 2445, column: 7, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14058, file: !3, line: 2445, column: 7)
!14067 = !DILocation(line: 2445, column: 18, scope: !14066)
!14068 = !DILocation(line: 2445, column: 21, scope: !14066)
!14069 = !DILocation(line: 2445, column: 7, scope: !14058)
!14070 = !DILocation(line: 2446, column: 35, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2445, column: 35)
!14072 = !DILocation(line: 2446, column: 39, scope: !14071)
!14073 = !DILocation(line: 2446, column: 52, scope: !14071)
!14074 = !DILocation(line: 2446, column: 4, scope: !14071)
!14075 = !DILocation(line: 2447, column: 3, scope: !14071)
!14076 = !DILocation(line: 2449, column: 10, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14058, file: !3, line: 2449, column: 3)
!14078 = !DILocation(line: 2449, column: 8, scope: !14077)
!14079 = !DILocation(line: 2449, column: 15, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14077, file: !3, line: 2449, column: 3)
!14081 = !DILocation(line: 2449, column: 19, scope: !14080)
!14082 = !DILocation(line: 2449, column: 17, scope: !14080)
!14083 = !DILocation(line: 2449, column: 3, scope: !14077)
!14084 = !DILocalVariable(name: "dw", scope: !14085, file: !3, line: 2450, type: !4449)
!14085 = distinct !DILexicalBlock(scope: !14080, file: !3, line: 2449, column: 35)
!14086 = !DILocation(line: 2450, column: 19, scope: !14085)
!14087 = !DILocalVariable(name: "j", scope: !14085, file: !3, line: 2451, type: !354)
!14088 = !DILocation(line: 2451, column: 8, scope: !14085)
!14089 = !DILocation(line: 2454, column: 15, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14085, file: !3, line: 2454, column: 8)
!14091 = !DILocation(line: 2454, column: 27, scope: !14090)
!14092 = !DILocation(line: 2454, column: 13, scope: !14090)
!14093 = !DILocation(line: 2454, column: 8, scope: !14085)
!14094 = !DILocation(line: 2455, column: 5, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14090, file: !3, line: 2454, column: 32)
!14096 = !DILocation(line: 2458, column: 11, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14085, file: !3, line: 2458, column: 4)
!14098 = !DILocation(line: 2458, column: 21, scope: !14097)
!14099 = !DILocation(line: 2458, column: 25, scope: !14097)
!14100 = !DILocation(line: 2458, column: 19, scope: !14097)
!14101 = !DILocation(line: 2458, column: 9, scope: !14097)
!14102 = !DILocation(line: 2458, column: 29, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14097, file: !3, line: 2458, column: 4)
!14104 = !DILocation(line: 2458, column: 33, scope: !14103)
!14105 = !DILocation(line: 2458, column: 37, scope: !14103)
!14106 = !DILocation(line: 2458, column: 31, scope: !14103)
!14107 = !DILocation(line: 2458, column: 4, scope: !14097)
!14108 = !DILocation(line: 2459, column: 10, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14110, file: !3, line: 2459, column: 9)
!14110 = distinct !DILexicalBlock(scope: !14103, file: !3, line: 2458, column: 59)
!14111 = !DILocation(line: 2459, column: 14, scope: !14109)
!14112 = !DILocation(line: 2459, column: 23, scope: !14109)
!14113 = !DILocation(line: 2459, column: 21, scope: !14109)
!14114 = !DILocation(line: 2459, column: 35, scope: !14109)
!14115 = !DILocation(line: 2459, column: 38, scope: !14109)
!14116 = !DILocation(line: 2459, column: 54, scope: !14109)
!14117 = !DILocation(line: 2459, column: 58, scope: !14109)
!14118 = !DILocation(line: 2459, column: 9, scope: !14110)
!14119 = !DILocation(line: 2460, column: 27, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14109, file: !3, line: 2459, column: 67)
!14121 = !DILocation(line: 2460, column: 31, scope: !14120)
!14122 = !DILocation(line: 2460, column: 40, scope: !14120)
!14123 = !DILocation(line: 2460, column: 38, scope: !14120)
!14124 = !DILocation(line: 2460, column: 50, scope: !14120)
!14125 = !DILocation(line: 2460, column: 19, scope: !14120)
!14126 = !DILocation(line: 2460, column: 60, scope: !14120)
!14127 = !DILocation(line: 2460, column: 58, scope: !14120)
!14128 = !DILocation(line: 2460, column: 6, scope: !14120)
!14129 = !DILocation(line: 2460, column: 10, scope: !14120)
!14130 = !DILocation(line: 2460, column: 17, scope: !14120)
!14131 = !DILocation(line: 2461, column: 6, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14133, file: !3, line: 2461, column: 6)
!14133 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 2461, column: 6)
!14134 = !DILocation(line: 2461, column: 6, scope: !14133)
!14135 = !DILocation(line: 2461, column: 6, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 2461, column: 6)
!14137 = !DILocation(line: 2462, column: 5, scope: !14120)
!14138 = !DILocation(line: 2463, column: 4, scope: !14110)
!14139 = !DILocation(line: 2458, column: 49, scope: !14103)
!14140 = !DILocation(line: 2458, column: 55, scope: !14103)
!14141 = !DILocation(line: 2458, column: 4, scope: !14103)
!14142 = distinct !{!14142, !14107, !14143}
!14143 = !DILocation(line: 2463, column: 4, scope: !14097)
!14144 = !DILocation(line: 2464, column: 3, scope: !14085)
!14145 = !DILocation(line: 2449, column: 31, scope: !14080)
!14146 = !DILocation(line: 2449, column: 3, scope: !14080)
!14147 = distinct !{!14147, !14083, !14148}
!14148 = !DILocation(line: 2464, column: 3, scope: !14077)
!14149 = !DILocation(line: 2466, column: 3, scope: !14058)
!14150 = !DILocation(line: 2466, column: 13, scope: !14058)
!14151 = !DILocation(line: 2467, column: 2, scope: !14058)
!14152 = !DILocation(line: 2468, column: 1, scope: !14016)
!14153 = distinct !DISubprogram(name: "vgroup_limit_total_subset", scope: !3, file: !3, line: 2334, type: !14154, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!14154 = !DISubroutineType(types: !14155)
!14155 = !{!354, !3872, !5078, !4075, !4075, !4075}
!14156 = !DILocalVariable(name: "ob", arg: 1, scope: !14153, file: !3, line: 2334, type: !3872)
!14157 = !DILocation(line: 2334, column: 46, scope: !14153)
!14158 = !DILocalVariable(name: "vgroup_validmap", arg: 2, scope: !14153, file: !3, line: 2335, type: !5078)
!14159 = !DILocation(line: 2335, column: 50, scope: !14153)
!14160 = !DILocalVariable(name: "vgroup_tot", arg: 3, scope: !14153, file: !3, line: 2336, type: !4075)
!14161 = !DILocation(line: 2336, column: 48, scope: !14153)
!14162 = !DILocalVariable(name: "subset_count", arg: 4, scope: !14153, file: !3, line: 2337, type: !4075)
!14163 = !DILocation(line: 2337, column: 48, scope: !14153)
!14164 = !DILocalVariable(name: "max_weights", arg: 5, scope: !14153, file: !3, line: 2338, type: !4075)
!14165 = !DILocation(line: 2338, column: 48, scope: !14153)
!14166 = !DILocalVariable(name: "dv", scope: !14153, file: !3, line: 2340, type: !4203)
!14167 = !DILocation(line: 2340, column: 15, scope: !14153)
!14168 = !DILocalVariable(name: "dvert_array", scope: !14153, file: !3, line: 2340, type: !4668)
!14169 = !DILocation(line: 2340, column: 21, scope: !14153)
!14170 = !DILocalVariable(name: "i", scope: !14153, file: !3, line: 2341, type: !354)
!14171 = !DILocation(line: 2341, column: 6, scope: !14153)
!14172 = !DILocalVariable(name: "dvert_tot", scope: !14153, file: !3, line: 2341, type: !354)
!14173 = !DILocation(line: 2341, column: 9, scope: !14153)
!14174 = !DILocalVariable(name: "use_vert_sel", scope: !14153, file: !3, line: 2342, type: !4075)
!14175 = !DILocation(line: 2342, column: 12, scope: !14153)
!14176 = !DILocation(line: 2342, column: 53, scope: !14153)
!14177 = !DILocation(line: 2342, column: 27, scope: !14153)
!14178 = !DILocalVariable(name: "remove_tot", scope: !14153, file: !3, line: 2343, type: !354)
!14179 = !DILocation(line: 2343, column: 6, scope: !14153)
!14180 = !DILocation(line: 2345, column: 25, scope: !14153)
!14181 = !DILocation(line: 2345, column: 29, scope: !14153)
!14182 = !DILocation(line: 2345, column: 61, scope: !14153)
!14183 = !DILocation(line: 2345, column: 2, scope: !14153)
!14184 = !DILocation(line: 2347, column: 6, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14153, file: !3, line: 2347, column: 6)
!14186 = !DILocation(line: 2347, column: 6, scope: !14153)
!14187 = !DILocalVariable(name: "num_to_drop", scope: !14188, file: !3, line: 2348, type: !354)
!14188 = distinct !DILexicalBlock(scope: !14185, file: !3, line: 2347, column: 19)
!14189 = !DILocation(line: 2348, column: 7, scope: !14188)
!14190 = !DILocation(line: 2350, column: 10, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14188, file: !3, line: 2350, column: 3)
!14192 = !DILocation(line: 2350, column: 8, scope: !14191)
!14193 = !DILocation(line: 2350, column: 15, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14191, file: !3, line: 2350, column: 3)
!14195 = !DILocation(line: 2350, column: 19, scope: !14194)
!14196 = !DILocation(line: 2350, column: 17, scope: !14194)
!14197 = !DILocation(line: 2350, column: 3, scope: !14191)
!14198 = !DILocalVariable(name: "dw_temp", scope: !14199, file: !3, line: 2352, type: !4449)
!14199 = distinct !DILexicalBlock(scope: !14194, file: !3, line: 2350, column: 35)
!14200 = !DILocation(line: 2352, column: 19, scope: !14199)
!14201 = !DILocalVariable(name: "bone_count", scope: !14199, file: !3, line: 2353, type: !354)
!14202 = !DILocation(line: 2353, column: 8, scope: !14199)
!14203 = !DILocalVariable(name: "non_bone_count", scope: !14199, file: !3, line: 2353, type: !354)
!14204 = !DILocation(line: 2353, column: 24, scope: !14199)
!14205 = !DILocalVariable(name: "j", scope: !14199, file: !3, line: 2354, type: !354)
!14206 = !DILocation(line: 2354, column: 8, scope: !14199)
!14207 = !DILocation(line: 2357, column: 15, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14199, file: !3, line: 2357, column: 8)
!14209 = !DILocation(line: 2357, column: 27, scope: !14208)
!14210 = !DILocation(line: 2357, column: 13, scope: !14208)
!14211 = !DILocation(line: 2357, column: 8, scope: !14199)
!14212 = !DILocation(line: 2358, column: 5, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14208, file: !3, line: 2357, column: 32)
!14214 = !DILocation(line: 2361, column: 18, scope: !14199)
!14215 = !DILocation(line: 2361, column: 33, scope: !14199)
!14216 = !DILocation(line: 2361, column: 31, scope: !14199)
!14217 = !DILocation(line: 2361, column: 16, scope: !14199)
!14218 = !DILocation(line: 2364, column: 8, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14199, file: !3, line: 2364, column: 8)
!14220 = !DILocation(line: 2364, column: 20, scope: !14219)
!14221 = !DILocation(line: 2364, column: 8, scope: !14199)
!14222 = !DILocation(line: 2367, column: 15, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14219, file: !3, line: 2364, column: 25)
!14224 = !DILocation(line: 2367, column: 51, scope: !14223)
!14225 = !DILocation(line: 2367, column: 55, scope: !14223)
!14226 = !DILocation(line: 2367, column: 49, scope: !14223)
!14227 = !DILocation(line: 2367, column: 13, scope: !14223)
!14228 = !DILocation(line: 2368, column: 16, scope: !14223)
!14229 = !DILocation(line: 2368, column: 36, scope: !14223)
!14230 = !DILocation(line: 2369, column: 12, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14223, file: !3, line: 2369, column: 5)
!14232 = !DILocation(line: 2369, column: 10, scope: !14231)
!14233 = !DILocation(line: 2369, column: 17, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14231, file: !3, line: 2369, column: 5)
!14235 = !DILocation(line: 2369, column: 21, scope: !14234)
!14236 = !DILocation(line: 2369, column: 25, scope: !14234)
!14237 = !DILocation(line: 2369, column: 19, scope: !14234)
!14238 = !DILocation(line: 2369, column: 5, scope: !14231)
!14239 = !DILocation(line: 2370, column: 10, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 2370, column: 10)
!14241 = distinct !DILexicalBlock(scope: !14234, file: !3, line: 2369, column: 41)
!14242 = !DILocation(line: 2370, column: 48, scope: !14240)
!14243 = !DILocation(line: 2371, column: 10, scope: !14240)
!14244 = !DILocation(line: 2371, column: 26, scope: !14240)
!14245 = !DILocation(line: 2371, column: 30, scope: !14240)
!14246 = !DILocation(line: 2371, column: 33, scope: !14240)
!14247 = !DILocation(line: 2371, column: 36, scope: !14240)
!14248 = !DILocation(line: 2370, column: 10, scope: !14241)
!14249 = !DILocation(line: 2373, column: 7, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14240, file: !3, line: 2372, column: 6)
!14251 = !DILocation(line: 2373, column: 15, scope: !14250)
!14252 = !DILocation(line: 2373, column: 19, scope: !14250)
!14253 = !DILocation(line: 2373, column: 29, scope: !14250)
!14254 = !DILocation(line: 2373, column: 35, scope: !14250)
!14255 = !DILocation(line: 2373, column: 33, scope: !14250)
!14256 = !DILocation(line: 2373, column: 49, scope: !14250)
!14257 = !DILocation(line: 2373, column: 53, scope: !14250)
!14258 = !DILocation(line: 2373, column: 56, scope: !14250)
!14259 = !DILocation(line: 2374, column: 18, scope: !14250)
!14260 = !DILocation(line: 2375, column: 6, scope: !14250)
!14261 = !DILocation(line: 2377, column: 7, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14240, file: !3, line: 2376, column: 11)
!14263 = !DILocation(line: 2377, column: 15, scope: !14262)
!14264 = !DILocation(line: 2377, column: 33, scope: !14262)
!14265 = !DILocation(line: 2377, column: 37, scope: !14262)
!14266 = !DILocation(line: 2377, column: 40, scope: !14262)
!14267 = !DILocation(line: 2378, column: 22, scope: !14262)
!14268 = !DILocation(line: 2380, column: 5, scope: !14241)
!14269 = !DILocation(line: 2369, column: 37, scope: !14234)
!14270 = !DILocation(line: 2369, column: 5, scope: !14234)
!14271 = distinct !{!14271, !14238, !14272}
!14272 = !DILocation(line: 2380, column: 5, scope: !14231)
!14273 = !DILocation(line: 2382, column: 19, scope: !14223)
!14274 = !DILocation(line: 2382, column: 32, scope: !14223)
!14275 = !DILocation(line: 2382, column: 30, scope: !14223)
!14276 = !DILocation(line: 2382, column: 17, scope: !14223)
!14277 = !DILocation(line: 2383, column: 9, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14223, file: !3, line: 2383, column: 9)
!14279 = !DILocation(line: 2383, column: 21, scope: !14278)
!14280 = !DILocation(line: 2383, column: 9, scope: !14223)
!14281 = !DILocation(line: 2384, column: 13, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14278, file: !3, line: 2383, column: 26)
!14283 = !DILocation(line: 2384, column: 21, scope: !14282)
!14284 = !DILocation(line: 2384, column: 12, scope: !14282)
!14285 = !DILocation(line: 2384, column: 38, scope: !14282)
!14286 = !DILocation(line: 2384, column: 6, scope: !14282)
!14287 = !DILocation(line: 2385, column: 23, scope: !14282)
!14288 = !DILocation(line: 2385, column: 6, scope: !14282)
!14289 = !DILocation(line: 2385, column: 10, scope: !14282)
!14290 = !DILocation(line: 2385, column: 20, scope: !14282)
!14291 = !DILocation(line: 2387, column: 6, scope: !14282)
!14292 = !DILocation(line: 2387, column: 16, scope: !14282)
!14293 = !DILocation(line: 2387, column: 20, scope: !14282)
!14294 = !DILocation(line: 2388, column: 15, scope: !14282)
!14295 = !DILocation(line: 2388, column: 6, scope: !14282)
!14296 = !DILocation(line: 2388, column: 10, scope: !14282)
!14297 = !DILocation(line: 2388, column: 13, scope: !14282)
!14298 = !DILocation(line: 2389, column: 20, scope: !14282)
!14299 = !DILocation(line: 2389, column: 17, scope: !14282)
!14300 = !DILocation(line: 2390, column: 5, scope: !14282)
!14301 = !DILocation(line: 2392, column: 6, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14278, file: !3, line: 2391, column: 10)
!14303 = !DILocation(line: 2392, column: 16, scope: !14302)
!14304 = !DILocation(line: 2394, column: 4, scope: !14223)
!14305 = !DILocation(line: 2396, column: 3, scope: !14199)
!14306 = !DILocation(line: 2350, column: 31, scope: !14194)
!14307 = !DILocation(line: 2350, column: 3, scope: !14194)
!14308 = distinct !{!14308, !14197, !14309}
!14309 = !DILocation(line: 2396, column: 3, scope: !14191)
!14310 = !DILocation(line: 2397, column: 3, scope: !14188)
!14311 = !DILocation(line: 2397, column: 13, scope: !14188)
!14312 = !DILocation(line: 2399, column: 2, scope: !14188)
!14313 = !DILocation(line: 2401, column: 9, scope: !14153)
!14314 = !DILocation(line: 2401, column: 2, scope: !14153)
!14315 = distinct !DISubprogram(name: "inv_cmp_mdef_vert_weights", scope: !3, file: !3, line: 2316, type: !14316, scopeLine: 2317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{!354, !14318, !14318}
!14318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14319, size: 64)
!14319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!14320 = !DILocalVariable(name: "a1", arg: 1, scope: !14315, file: !3, line: 2316, type: !14318)
!14321 = !DILocation(line: 2316, column: 50, scope: !14315)
!14322 = !DILocalVariable(name: "a2", arg: 2, scope: !14315, file: !3, line: 2316, type: !14318)
!14323 = !DILocation(line: 2316, column: 66, scope: !14315)
!14324 = !DILocalVariable(name: "dw1", scope: !14315, file: !3, line: 2323, type: !14325)
!14325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14326, size: 64)
!14326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!14327 = !DILocation(line: 2323, column: 30, scope: !14315)
!14328 = !DILocation(line: 2323, column: 36, scope: !14315)
!14329 = !DILocalVariable(name: "dw2", scope: !14315, file: !3, line: 2323, type: !14325)
!14330 = !DILocation(line: 2323, column: 41, scope: !14315)
!14331 = !DILocation(line: 2323, column: 47, scope: !14315)
!14332 = !DILocation(line: 2325, column: 11, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14315, file: !3, line: 2325, column: 11)
!14334 = !DILocation(line: 2325, column: 16, scope: !14333)
!14335 = !DILocation(line: 2325, column: 25, scope: !14333)
!14336 = !DILocation(line: 2325, column: 30, scope: !14333)
!14337 = !DILocation(line: 2325, column: 23, scope: !14333)
!14338 = !DILocation(line: 2325, column: 11, scope: !14315)
!14339 = !DILocation(line: 2325, column: 38, scope: !14333)
!14340 = !DILocation(line: 2326, column: 11, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14333, file: !3, line: 2326, column: 11)
!14342 = !DILocation(line: 2326, column: 16, scope: !14341)
!14343 = !DILocation(line: 2326, column: 25, scope: !14341)
!14344 = !DILocation(line: 2326, column: 30, scope: !14341)
!14345 = !DILocation(line: 2326, column: 23, scope: !14341)
!14346 = !DILocation(line: 2326, column: 11, scope: !14333)
!14347 = !DILocation(line: 2326, column: 38, scope: !14341)
!14348 = !DILocation(line: 2327, column: 16, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14341, file: !3, line: 2327, column: 11)
!14350 = !DILocation(line: 2327, column: 11, scope: !14341)
!14351 = !DILocation(line: 2327, column: 38, scope: !14349)
!14352 = !DILocation(line: 2328, column: 38, scope: !14349)
!14353 = !DILocation(line: 2329, column: 1, scope: !14315)
!14354 = distinct !DISubprogram(name: "ed_vgroup_transfer_weight", scope: !3, file: !3, line: 893, type: !14355, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!14355 = !DISubroutineType(types: !14356)
!14356 = !{!2436, !3872, !3872, !1368, !8551, !9523, !9529, !7731}
!14357 = !DILocalVariable(name: "ob_dst", arg: 1, scope: !14354, file: !3, line: 893, type: !3872)
!14358 = !DILocation(line: 893, column: 47, scope: !14354)
!14359 = !DILocalVariable(name: "ob_src", arg: 2, scope: !14354, file: !3, line: 893, type: !3872)
!14360 = !DILocation(line: 893, column: 63, scope: !14354)
!14361 = !DILocalVariable(name: "dg_src", arg: 3, scope: !14354, file: !3, line: 893, type: !1368)
!14362 = !DILocation(line: 893, column: 85, scope: !14354)
!14363 = !DILocalVariable(name: "scene", arg: 4, scope: !14354, file: !3, line: 893, type: !8551)
!14364 = !DILocation(line: 893, column: 100, scope: !14354)
!14365 = !DILocalVariable(name: "method", arg: 5, scope: !14354, file: !3, line: 894, type: !9523)
!14366 = !DILocation(line: 894, column: 49, scope: !14354)
!14367 = !DILocalVariable(name: "replace_mode", arg: 6, scope: !14354, file: !3, line: 894, type: !9529)
!14368 = !DILocation(line: 894, column: 72, scope: !14354)
!14369 = !DILocalVariable(name: "op", arg: 7, scope: !14354, file: !3, line: 894, type: !7731)
!14370 = !DILocation(line: 894, column: 98, scope: !14354)
!14371 = !DILocalVariable(name: "dg_dst", scope: !14354, file: !3, line: 896, type: !1368)
!14372 = !DILocation(line: 896, column: 16, scope: !14354)
!14373 = !DILocalVariable(name: "me_dst", scope: !14354, file: !3, line: 897, type: !1383)
!14374 = !DILocation(line: 897, column: 8, scope: !14354)
!14375 = !DILocalVariable(name: "dmesh_src", scope: !14354, file: !3, line: 898, type: !1845)
!14376 = !DILocation(line: 898, column: 15, scope: !14354)
!14377 = !DILocalVariable(name: "tree_mesh_vertices_src", scope: !14354, file: !3, line: 899, type: !14378)
!14378 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeFromMesh", file: !1824, line: 69, baseType: !14379)
!14379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeFromMesh", file: !1824, line: 47, size: 576, elements: !14380)
!14380 = !{!14381, !14382, !14397, !14419, !14420, !14421, !14422, !14423, !14424, !14425, !14426, !14427}
!14381 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14379, file: !1824, line: 48, baseType: !6095, size: 64)
!14382 = !DIDerivedType(tag: DW_TAG_member, name: "nearest_callback", scope: !14379, file: !1824, line: 51, baseType: !14383, size: 64, offset: 64)
!14383 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_NearestPointCallback", file: !14384, line: 76, baseType: !14385)
!14384 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdopbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14386, size: 64)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{null, !1226, !354, !2001, !14388}
!14388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14389, size: 64)
!14389 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeNearest", file: !14384, line: 59, baseType: !14390)
!14390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeNearest", file: !14384, line: 53, size: 288, elements: !14391)
!14391 = !{!14392, !14393, !14394, !14395, !14396}
!14392 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !14390, file: !14384, line: 54, baseType: !354, size: 32)
!14393 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !14390, file: !14384, line: 55, baseType: !1575, size: 96, offset: 32)
!14394 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !14390, file: !14384, line: 56, baseType: !1575, size: 96, offset: 128)
!14395 = !DIDerivedType(tag: DW_TAG_member, name: "dist_sq", scope: !14390, file: !14384, line: 57, baseType: !1320, size: 32, offset: 224)
!14396 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14390, file: !14384, line: 58, baseType: !354, size: 32, offset: 256)
!14397 = !DIDerivedType(tag: DW_TAG_member, name: "raycast_callback", scope: !14379, file: !1824, line: 52, baseType: !14398, size: 64, offset: 128)
!14398 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_RayCastCallback", file: !14384, line: 79, baseType: !14399)
!14399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14400, size: 64)
!14400 = !DISubroutineType(types: !14401)
!14401 = !{null, !1226, !354, !14402, !14410}
!14402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14403, size: 64)
!14403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14404)
!14404 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRay", file: !14384, line: 65, baseType: !14405)
!14405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRay", file: !14384, line: 61, size: 224, elements: !14406)
!14406 = !{!14407, !14408, !14409}
!14407 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !14405, file: !14384, line: 62, baseType: !1575, size: 96)
!14408 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !14405, file: !14384, line: 63, baseType: !1575, size: 96, offset: 96)
!14409 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !14405, file: !14384, line: 64, baseType: !1320, size: 32, offset: 192)
!14410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14411, size: 64)
!14411 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRayHit", file: !14384, line: 73, baseType: !14412)
!14412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRayHit", file: !14384, line: 67, size: 288, elements: !14413)
!14413 = !{!14414, !14415, !14416, !14417, !14418}
!14414 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !14412, file: !14384, line: 68, baseType: !354, size: 32)
!14415 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !14412, file: !14384, line: 69, baseType: !1575, size: 96, offset: 32)
!14416 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !14412, file: !14384, line: 70, baseType: !1575, size: 96, offset: 128)
!14417 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !14412, file: !14384, line: 71, baseType: !1320, size: 32, offset: 224)
!14418 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14412, file: !14384, line: 72, baseType: !354, size: 32, offset: 256)
!14419 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !14379, file: !1824, line: 55, baseType: !1571, size: 64, offset: 192)
!14420 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !14379, file: !1824, line: 56, baseType: !1582, size: 64, offset: 256)
!14421 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !14379, file: !1824, line: 57, baseType: !1534, size: 64, offset: 320)
!14422 = !DIDerivedType(tag: DW_TAG_member, name: "vert_allocated", scope: !14379, file: !1824, line: 58, baseType: !2436, size: 8, offset: 384)
!14423 = !DIDerivedType(tag: DW_TAG_member, name: "face_allocated", scope: !14379, file: !1824, line: 59, baseType: !2436, size: 8, offset: 392)
!14424 = !DIDerivedType(tag: DW_TAG_member, name: "edge_allocated", scope: !14379, file: !1824, line: 60, baseType: !2436, size: 8, offset: 400)
!14425 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !14379, file: !1824, line: 63, baseType: !1320, size: 32, offset: 416)
!14426 = !DIDerivedType(tag: DW_TAG_member, name: "em_evil", scope: !14379, file: !1824, line: 66, baseType: !1226, size: 64, offset: 448)
!14427 = !DIDerivedType(tag: DW_TAG_member, name: "cached", scope: !14379, file: !1824, line: 67, baseType: !2436, size: 8, offset: 512)
!14428 = !DILocation(line: 899, column: 18, scope: !14354)
!14429 = !DILocalVariable(name: "tree_mesh_faces_src", scope: !14354, file: !3, line: 899, type: !14378)
!14430 = !DILocation(line: 899, column: 42, scope: !14354)
!14431 = !DILocalVariable(name: "dv_array_src", scope: !14354, file: !3, line: 900, type: !4668)
!14432 = !DILocation(line: 900, column: 16, scope: !14354)
!14433 = !DILocalVariable(name: "dv_array_dst", scope: !14354, file: !3, line: 900, type: !4668)
!14434 = !DILocation(line: 900, column: 32, scope: !14354)
!14435 = !DILocalVariable(name: "dv_src", scope: !14354, file: !3, line: 900, type: !4668)
!14436 = !DILocation(line: 900, column: 48, scope: !14354)
!14437 = !DILocalVariable(name: "dv_dst", scope: !14354, file: !3, line: 900, type: !4668)
!14438 = !DILocation(line: 900, column: 58, scope: !14354)
!14439 = !DILocalVariable(name: "mv_dst", scope: !14354, file: !3, line: 901, type: !3476)
!14440 = !DILocation(line: 901, column: 9, scope: !14354)
!14441 = !DILocalVariable(name: "mv_src", scope: !14354, file: !3, line: 901, type: !3476)
!14442 = !DILocation(line: 901, column: 18, scope: !14354)
!14443 = !DILocalVariable(name: "mface_src", scope: !14354, file: !3, line: 902, type: !14444)
!14444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14445, size: 64)
!14445 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !181, line: 46, baseType: !1535)
!14446 = !DILocation(line: 902, column: 9, scope: !14354)
!14447 = !DILocalVariable(name: "mf", scope: !14354, file: !3, line: 902, type: !14444)
!14448 = !DILocation(line: 902, column: 21, scope: !14354)
!14449 = !DILocalVariable(name: "nearest", scope: !14354, file: !3, line: 903, type: !14389)
!14450 = !DILocation(line: 903, column: 17, scope: !14354)
!14451 = !DILocalVariable(name: "dw_dst", scope: !14354, file: !3, line: 904, type: !4449)
!14452 = !DILocation(line: 904, column: 17, scope: !14354)
!14453 = !DILocalVariable(name: "dw_src", scope: !14354, file: !3, line: 904, type: !4449)
!14454 = !DILocation(line: 904, column: 26, scope: !14354)
!14455 = !DILocalVariable(name: "dv_tot_src", scope: !14354, file: !3, line: 905, type: !354)
!14456 = !DILocation(line: 905, column: 6, scope: !14354)
!14457 = !DILocalVariable(name: "dv_tot_dst", scope: !14354, file: !3, line: 905, type: !354)
!14458 = !DILocation(line: 905, column: 18, scope: !14354)
!14459 = !DILocalVariable(name: "i", scope: !14354, file: !3, line: 905, type: !354)
!14460 = !DILocation(line: 905, column: 30, scope: !14354)
!14461 = !DILocalVariable(name: "v_index", scope: !14354, file: !3, line: 905, type: !354)
!14462 = !DILocation(line: 905, column: 33, scope: !14354)
!14463 = !DILocalVariable(name: "index_dst", scope: !14354, file: !3, line: 905, type: !354)
!14464 = !DILocation(line: 905, column: 42, scope: !14354)
!14465 = !DILocalVariable(name: "index_src", scope: !14354, file: !3, line: 905, type: !354)
!14466 = !DILocation(line: 905, column: 53, scope: !14354)
!14467 = !DILocalVariable(name: "index_nearest", scope: !14354, file: !3, line: 905, type: !354)
!14468 = !DILocation(line: 905, column: 64, scope: !14354)
!14469 = !DILocalVariable(name: "index_nearest_vertex", scope: !14354, file: !3, line: 905, type: !354)
!14470 = !DILocation(line: 905, column: 79, scope: !14354)
!14471 = !DILocalVariable(name: "f_index", scope: !14354, file: !3, line: 906, type: !7)
!14472 = !DILocation(line: 906, column: 15, scope: !14354)
!14473 = !DILocalVariable(name: "weight", scope: !14354, file: !3, line: 907, type: !1320)
!14474 = !DILocation(line: 907, column: 8, scope: !14354)
!14475 = !DILocalVariable(name: "tmp_weight", scope: !14354, file: !3, line: 907, type: !1331)
!14476 = !DILocation(line: 907, column: 16, scope: !14354)
!14477 = !DILocalVariable(name: "tmp_co", scope: !14354, file: !3, line: 907, type: !1575)
!14478 = !DILocation(line: 907, column: 31, scope: !14354)
!14479 = !DILocalVariable(name: "normal", scope: !14354, file: !3, line: 907, type: !1575)
!14480 = !DILocation(line: 907, column: 42, scope: !14354)
!14481 = !DILocalVariable(name: "tmp_mat", scope: !14354, file: !3, line: 907, type: !2172)
!14482 = !DILocation(line: 907, column: 53, scope: !14354)
!14483 = !DILocalVariable(name: "dist_v1", scope: !14354, file: !3, line: 907, type: !1320)
!14484 = !DILocation(line: 907, column: 68, scope: !14354)
!14485 = !DILocalVariable(name: "dist_v2", scope: !14354, file: !3, line: 907, type: !1320)
!14486 = !DILocation(line: 907, column: 77, scope: !14354)
!14487 = !DILocalVariable(name: "dist_v3", scope: !14354, file: !3, line: 907, type: !1320)
!14488 = !DILocation(line: 907, column: 86, scope: !14354)
!14489 = !DILocalVariable(name: "dist_v4", scope: !14354, file: !3, line: 907, type: !1320)
!14490 = !DILocation(line: 907, column: 95, scope: !14354)
!14491 = !DILocalVariable(name: "use_vert_sel", scope: !14354, file: !3, line: 908, type: !4075)
!14492 = !DILocation(line: 908, column: 12, scope: !14354)
!14493 = !DILocation(line: 908, column: 53, scope: !14354)
!14494 = !DILocation(line: 908, column: 27, scope: !14354)
!14495 = !DILocalVariable(name: "is_dg_dst_new", scope: !14354, file: !3, line: 909, type: !2436)
!14496 = !DILocation(line: 909, column: 7, scope: !14354)
!14497 = !DILocation(line: 912, column: 35, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 912, column: 6)
!14499 = !DILocation(line: 912, column: 43, scope: !14498)
!14500 = !DILocation(line: 912, column: 51, scope: !14498)
!14501 = !DILocation(line: 912, column: 16, scope: !14498)
!14502 = !DILocation(line: 912, column: 14, scope: !14498)
!14503 = !DILocation(line: 912, column: 58, scope: !14498)
!14504 = !DILocation(line: 912, column: 6, scope: !14354)
!14505 = !DILocation(line: 913, column: 29, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14498, file: !3, line: 912, column: 67)
!14507 = !DILocation(line: 913, column: 37, scope: !14506)
!14508 = !DILocation(line: 913, column: 45, scope: !14506)
!14509 = !DILocation(line: 913, column: 12, scope: !14506)
!14510 = !DILocation(line: 913, column: 10, scope: !14506)
!14511 = !DILocation(line: 914, column: 17, scope: !14506)
!14512 = !DILocation(line: 915, column: 2, scope: !14506)
!14513 = !DILocation(line: 918, column: 37, scope: !14354)
!14514 = !DILocation(line: 918, column: 44, scope: !14354)
!14515 = !DILocation(line: 918, column: 52, scope: !14354)
!14516 = !DILocation(line: 918, column: 69, scope: !14354)
!14517 = !DILocation(line: 918, column: 14, scope: !14354)
!14518 = !DILocation(line: 918, column: 12, scope: !14354)
!14519 = !DILocation(line: 919, column: 11, scope: !14354)
!14520 = !DILocation(line: 919, column: 19, scope: !14354)
!14521 = !DILocation(line: 919, column: 9, scope: !14354)
!14522 = !DILocation(line: 922, column: 33, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 922, column: 6)
!14524 = !DILocation(line: 922, column: 7, scope: !14523)
!14525 = !DILocation(line: 922, column: 6, scope: !14354)
!14526 = !DILocation(line: 923, column: 14, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 922, column: 73)
!14528 = !DILocation(line: 923, column: 18, scope: !14527)
!14529 = !DILocation(line: 923, column: 3, scope: !14527)
!14530 = !DILocation(line: 924, column: 3, scope: !14527)
!14531 = !DILocation(line: 928, column: 7, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 928, column: 6)
!14533 = !DILocation(line: 928, column: 15, scope: !14532)
!14534 = !DILocation(line: 928, column: 6, scope: !14354)
!14535 = !DILocation(line: 928, column: 45, scope: !14532)
!14536 = !DILocation(line: 928, column: 53, scope: !14532)
!14537 = !DILocation(line: 928, column: 22, scope: !14532)
!14538 = !DILocation(line: 931, column: 26, scope: !14354)
!14539 = !DILocation(line: 931, column: 34, scope: !14354)
!14540 = !DILocation(line: 931, column: 66, scope: !14354)
!14541 = !DILocation(line: 931, column: 2, scope: !14354)
!14542 = !DILocation(line: 934, column: 29, scope: !14354)
!14543 = !DILocation(line: 934, column: 37, scope: !14354)
!14544 = !DILocation(line: 934, column: 46, scope: !14354)
!14545 = !DILocation(line: 934, column: 14, scope: !14354)
!14546 = !DILocation(line: 934, column: 12, scope: !14354)
!14547 = !DILocation(line: 935, column: 29, scope: !14354)
!14548 = !DILocation(line: 935, column: 37, scope: !14354)
!14549 = !DILocation(line: 935, column: 46, scope: !14354)
!14550 = !DILocation(line: 935, column: 14, scope: !14354)
!14551 = !DILocation(line: 935, column: 12, scope: !14354)
!14552 = !DILocation(line: 938, column: 11, scope: !14354)
!14553 = !DILocation(line: 938, column: 19, scope: !14354)
!14554 = !DILocation(line: 938, column: 9, scope: !14354)
!14555 = !DILocation(line: 939, column: 11, scope: !14354)
!14556 = !DILocation(line: 939, column: 22, scope: !14354)
!14557 = !DILocation(line: 939, column: 35, scope: !14354)
!14558 = !DILocation(line: 939, column: 9, scope: !14354)
!14559 = !DILocation(line: 942, column: 15, scope: !14354)
!14560 = !DILocation(line: 942, column: 23, scope: !14354)
!14561 = !DILocation(line: 942, column: 29, scope: !14354)
!14562 = !DILocation(line: 942, column: 37, scope: !14354)
!14563 = !DILocation(line: 942, column: 2, scope: !14354)
!14564 = !DILocation(line: 943, column: 14, scope: !14354)
!14565 = !DILocation(line: 943, column: 23, scope: !14354)
!14566 = !DILocation(line: 943, column: 31, scope: !14354)
!14567 = !DILocation(line: 943, column: 37, scope: !14354)
!14568 = !DILocation(line: 943, column: 45, scope: !14354)
!14569 = !DILocation(line: 943, column: 2, scope: !14354)
!14570 = !DILocation(line: 946, column: 6, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 946, column: 6)
!14572 = !DILocation(line: 946, column: 19, scope: !14571)
!14573 = !DILocation(line: 946, column: 6, scope: !14354)
!14574 = !DILocation(line: 947, column: 10, scope: !14575)
!14575 = distinct !DILexicalBlock(scope: !14576, file: !3, line: 947, column: 3)
!14576 = distinct !DILexicalBlock(scope: !14571, file: !3, line: 946, column: 46)
!14577 = !DILocation(line: 947, column: 24, scope: !14575)
!14578 = !DILocation(line: 947, column: 22, scope: !14575)
!14579 = !DILocation(line: 947, column: 8, scope: !14575)
!14580 = !DILocation(line: 947, column: 38, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14575, file: !3, line: 947, column: 3)
!14582 = !DILocation(line: 947, column: 42, scope: !14581)
!14583 = !DILocation(line: 947, column: 50, scope: !14581)
!14584 = !DILocation(line: 947, column: 40, scope: !14581)
!14585 = !DILocation(line: 947, column: 3, scope: !14575)
!14586 = !DILocation(line: 949, column: 9, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 949, column: 8)
!14588 = distinct !DILexicalBlock(scope: !14581, file: !3, line: 947, column: 74)
!14589 = !DILocation(line: 949, column: 8, scope: !14587)
!14590 = !DILocation(line: 949, column: 16, scope: !14587)
!14591 = !DILocation(line: 949, column: 8, scope: !14588)
!14592 = !DILocation(line: 949, column: 25, scope: !14587)
!14593 = !DILocation(line: 951, column: 33, scope: !14588)
!14594 = !DILocation(line: 951, column: 32, scope: !14588)
!14595 = !DILocation(line: 951, column: 41, scope: !14588)
!14596 = !DILocation(line: 951, column: 13, scope: !14588)
!14597 = !DILocation(line: 951, column: 11, scope: !14588)
!14598 = !DILocation(line: 953, column: 8, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 953, column: 8)
!14600 = !DILocation(line: 953, column: 8, scope: !14588)
!14601 = !DILocation(line: 953, column: 38, scope: !14599)
!14602 = !DILocation(line: 953, column: 37, scope: !14599)
!14603 = !DILocation(line: 953, column: 46, scope: !14599)
!14604 = !DILocation(line: 953, column: 16, scope: !14599)
!14605 = !DILocation(line: 954, column: 3, scope: !14588)
!14606 = !DILocation(line: 947, column: 60, scope: !14581)
!14607 = !DILocation(line: 947, column: 70, scope: !14581)
!14608 = !DILocation(line: 947, column: 3, scope: !14581)
!14609 = distinct !{!14609, !14585, !14610}
!14610 = !DILocation(line: 954, column: 3, scope: !14575)
!14611 = !DILocation(line: 955, column: 2, scope: !14576)
!14612 = !DILocation(line: 957, column: 10, scope: !14354)
!14613 = !DILocation(line: 957, column: 2, scope: !14354)
!14614 = !DILocation(line: 961, column: 8, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 961, column: 8)
!14616 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 957, column: 18)
!14617 = !DILocation(line: 961, column: 18, scope: !14615)
!14618 = !DILocation(line: 961, column: 15, scope: !14615)
!14619 = !DILocation(line: 961, column: 25, scope: !14615)
!14620 = !DILocation(line: 961, column: 28, scope: !14615)
!14621 = !DILocation(line: 961, column: 39, scope: !14615)
!14622 = !DILocation(line: 961, column: 44, scope: !14615)
!14623 = !DILocation(line: 961, column: 47, scope: !14615)
!14624 = !DILocation(line: 961, column: 61, scope: !14615)
!14625 = !DILocation(line: 961, column: 58, scope: !14615)
!14626 = !DILocation(line: 961, column: 72, scope: !14615)
!14627 = !DILocation(line: 962, column: 8, scope: !14615)
!14628 = !DILocation(line: 962, column: 21, scope: !14615)
!14629 = !DILocation(line: 962, column: 29, scope: !14615)
!14630 = !DILocation(line: 962, column: 32, scope: !14615)
!14631 = !DILocation(line: 962, column: 45, scope: !14615)
!14632 = !DILocation(line: 961, column: 8, scope: !14616)
!14633 = !DILocation(line: 964, column: 9, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 964, column: 9)
!14635 = distinct !DILexicalBlock(scope: !14615, file: !3, line: 963, column: 4)
!14636 = !DILocation(line: 964, column: 9, scope: !14635)
!14637 = !DILocation(line: 965, column: 23, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14634, file: !3, line: 964, column: 24)
!14639 = !DILocation(line: 965, column: 31, scope: !14638)
!14640 = !DILocation(line: 965, column: 6, scope: !14638)
!14641 = !DILocation(line: 966, column: 5, scope: !14638)
!14642 = !DILocation(line: 968, column: 9, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 968, column: 9)
!14644 = !DILocation(line: 968, column: 9, scope: !14635)
!14645 = !DILocation(line: 968, column: 23, scope: !14643)
!14646 = !DILocation(line: 968, column: 33, scope: !14643)
!14647 = !DILocation(line: 969, column: 9, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 969, column: 9)
!14649 = !DILocation(line: 969, column: 9, scope: !14635)
!14650 = !DILocation(line: 969, column: 23, scope: !14648)
!14651 = !DILocation(line: 969, column: 33, scope: !14648)
!14652 = !DILocation(line: 970, column: 5, scope: !14635)
!14653 = !DILocation(line: 970, column: 16, scope: !14635)
!14654 = !DILocation(line: 970, column: 24, scope: !14635)
!14655 = !DILocation(line: 971, column: 16, scope: !14635)
!14656 = !DILocation(line: 971, column: 20, scope: !14635)
!14657 = !DILocation(line: 971, column: 5, scope: !14635)
!14658 = !DILocation(line: 972, column: 5, scope: !14635)
!14659 = !DILocation(line: 976, column: 11, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 976, column: 4)
!14661 = !DILocation(line: 976, column: 25, scope: !14660)
!14662 = !DILocation(line: 976, column: 23, scope: !14660)
!14663 = !DILocation(line: 976, column: 48, scope: !14660)
!14664 = !DILocation(line: 976, column: 46, scope: !14660)
!14665 = !DILocation(line: 976, column: 9, scope: !14660)
!14666 = !DILocation(line: 977, column: 9, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14660, file: !3, line: 976, column: 4)
!14668 = !DILocation(line: 977, column: 13, scope: !14667)
!14669 = !DILocation(line: 977, column: 21, scope: !14667)
!14670 = !DILocation(line: 977, column: 11, scope: !14667)
!14671 = !DILocation(line: 976, column: 4, scope: !14660)
!14672 = !DILocation(line: 981, column: 10, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 981, column: 9)
!14674 = distinct !DILexicalBlock(scope: !14667, file: !3, line: 979, column: 4)
!14675 = !DILocation(line: 981, column: 9, scope: !14673)
!14676 = !DILocation(line: 981, column: 17, scope: !14673)
!14677 = !DILocation(line: 981, column: 9, scope: !14674)
!14678 = !DILocation(line: 982, column: 6, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14673, file: !3, line: 981, column: 26)
!14680 = !DILocation(line: 986, column: 34, scope: !14674)
!14681 = !DILocation(line: 986, column: 33, scope: !14674)
!14682 = !DILocation(line: 986, column: 42, scope: !14674)
!14683 = !DILocation(line: 986, column: 14, scope: !14674)
!14684 = !DILocation(line: 986, column: 12, scope: !14674)
!14685 = !DILocation(line: 987, column: 9, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 987, column: 9)
!14687 = !DILocation(line: 987, column: 16, scope: !14686)
!14688 = !DILocation(line: 987, column: 19, scope: !14686)
!14689 = !DILocation(line: 987, column: 27, scope: !14686)
!14690 = !DILocation(line: 987, column: 9, scope: !14674)
!14691 = !DILocation(line: 988, column: 37, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14686, file: !3, line: 987, column: 35)
!14693 = !DILocation(line: 988, column: 36, scope: !14692)
!14694 = !DILocation(line: 988, column: 45, scope: !14692)
!14695 = !DILocation(line: 988, column: 15, scope: !14692)
!14696 = !DILocation(line: 988, column: 13, scope: !14692)
!14697 = !DILocation(line: 989, column: 30, scope: !14692)
!14698 = !DILocation(line: 989, column: 38, scope: !14692)
!14699 = !DILocation(line: 989, column: 46, scope: !14692)
!14700 = !DILocation(line: 989, column: 54, scope: !14692)
!14701 = !DILocation(line: 989, column: 62, scope: !14692)
!14702 = !DILocation(line: 989, column: 6, scope: !14692)
!14703 = !DILocation(line: 990, column: 5, scope: !14692)
!14704 = !DILocation(line: 991, column: 4, scope: !14674)
!14705 = !DILocation(line: 978, column: 10, scope: !14667)
!14706 = !DILocation(line: 978, column: 20, scope: !14667)
!14707 = !DILocation(line: 978, column: 30, scope: !14667)
!14708 = !DILocation(line: 978, column: 40, scope: !14667)
!14709 = !DILocation(line: 978, column: 50, scope: !14667)
!14710 = !DILocation(line: 976, column: 4, scope: !14667)
!14711 = distinct !{!14711, !14671, !14712}
!14712 = !DILocation(line: 991, column: 4, scope: !14660)
!14713 = !DILocation(line: 992, column: 4, scope: !14616)
!14714 = !DILocation(line: 996, column: 53, scope: !14616)
!14715 = !DILocation(line: 996, column: 4, scope: !14616)
!14716 = !DILocation(line: 999, column: 11, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 999, column: 4)
!14718 = !DILocation(line: 999, column: 25, scope: !14717)
!14719 = !DILocation(line: 999, column: 23, scope: !14717)
!14720 = !DILocation(line: 999, column: 9, scope: !14717)
!14721 = !DILocation(line: 999, column: 39, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14717, file: !3, line: 999, column: 4)
!14723 = !DILocation(line: 999, column: 43, scope: !14722)
!14724 = !DILocation(line: 999, column: 51, scope: !14722)
!14725 = !DILocation(line: 999, column: 41, scope: !14722)
!14726 = !DILocation(line: 999, column: 4, scope: !14717)
!14727 = !DILocation(line: 1001, column: 10, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14729, file: !3, line: 1001, column: 9)
!14729 = distinct !DILexicalBlock(scope: !14722, file: !3, line: 999, column: 85)
!14730 = !DILocation(line: 1001, column: 9, scope: !14728)
!14731 = !DILocation(line: 1001, column: 17, scope: !14728)
!14732 = !DILocation(line: 1001, column: 9, scope: !14729)
!14733 = !DILocation(line: 1002, column: 6, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14728, file: !3, line: 1001, column: 26)
!14735 = !DILocation(line: 1006, column: 13, scope: !14729)
!14736 = !DILocation(line: 1006, column: 21, scope: !14729)
!14737 = !DILocation(line: 1008, column: 13, scope: !14729)
!14738 = !DILocation(line: 1008, column: 19, scope: !14729)
!14739 = !DILocation(line: 1011, column: 17, scope: !14729)
!14740 = !DILocation(line: 1011, column: 25, scope: !14729)
!14741 = !DILocation(line: 1011, column: 34, scope: !14729)
!14742 = !DILocation(line: 1011, column: 42, scope: !14729)
!14743 = !DILocation(line: 1011, column: 5, scope: !14729)
!14744 = !DILocation(line: 1014, column: 53, scope: !14729)
!14745 = !DILocation(line: 1014, column: 59, scope: !14729)
!14746 = !DILocation(line: 1015, column: 63, scope: !14729)
!14747 = !DILocation(line: 1015, column: 81, scope: !14729)
!14748 = !DILocation(line: 1014, column: 5, scope: !14729)
!14749 = !DILocation(line: 1019, column: 33, scope: !14729)
!14750 = !DILocation(line: 1019, column: 54, scope: !14729)
!14751 = !DILocation(line: 1019, column: 62, scope: !14729)
!14752 = !DILocation(line: 1019, column: 14, scope: !14729)
!14753 = !DILocation(line: 1019, column: 12, scope: !14729)
!14754 = !DILocation(line: 1020, column: 9, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14729, file: !3, line: 1020, column: 9)
!14756 = !DILocation(line: 1020, column: 16, scope: !14755)
!14757 = !DILocation(line: 1020, column: 19, scope: !14755)
!14758 = !DILocation(line: 1020, column: 27, scope: !14755)
!14759 = !DILocation(line: 1020, column: 9, scope: !14729)
!14760 = !DILocation(line: 1021, column: 37, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14755, file: !3, line: 1020, column: 35)
!14762 = !DILocation(line: 1021, column: 36, scope: !14761)
!14763 = !DILocation(line: 1021, column: 45, scope: !14761)
!14764 = !DILocation(line: 1021, column: 15, scope: !14761)
!14765 = !DILocation(line: 1021, column: 13, scope: !14761)
!14766 = !DILocation(line: 1022, column: 30, scope: !14761)
!14767 = !DILocation(line: 1022, column: 38, scope: !14761)
!14768 = !DILocation(line: 1022, column: 46, scope: !14761)
!14769 = !DILocation(line: 1022, column: 54, scope: !14761)
!14770 = !DILocation(line: 1022, column: 62, scope: !14761)
!14771 = !DILocation(line: 1022, column: 6, scope: !14761)
!14772 = !DILocation(line: 1023, column: 5, scope: !14761)
!14773 = !DILocation(line: 1024, column: 4, scope: !14729)
!14774 = !DILocation(line: 999, column: 61, scope: !14722)
!14775 = !DILocation(line: 999, column: 71, scope: !14722)
!14776 = !DILocation(line: 999, column: 81, scope: !14722)
!14777 = !DILocation(line: 999, column: 4, scope: !14722)
!14778 = distinct !{!14778, !14726, !14779}
!14779 = !DILocation(line: 1024, column: 4, scope: !14717)
!14780 = !DILocation(line: 1027, column: 4, scope: !14616)
!14781 = !DILocation(line: 1028, column: 4, scope: !14616)
!14782 = !DILocation(line: 1032, column: 23, scope: !14616)
!14783 = !DILocation(line: 1032, column: 4, scope: !14616)
!14784 = !DILocation(line: 1033, column: 16, scope: !14616)
!14785 = !DILocation(line: 1033, column: 27, scope: !14616)
!14786 = !DILocation(line: 1033, column: 44, scope: !14616)
!14787 = !DILocation(line: 1033, column: 14, scope: !14616)
!14788 = !DILocation(line: 1036, column: 50, scope: !14616)
!14789 = !DILocation(line: 1036, column: 4, scope: !14616)
!14790 = !DILocation(line: 1039, column: 11, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 1039, column: 4)
!14792 = !DILocation(line: 1039, column: 25, scope: !14791)
!14793 = !DILocation(line: 1039, column: 23, scope: !14791)
!14794 = !DILocation(line: 1039, column: 9, scope: !14791)
!14795 = !DILocation(line: 1039, column: 39, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14791, file: !3, line: 1039, column: 4)
!14797 = !DILocation(line: 1039, column: 43, scope: !14796)
!14798 = !DILocation(line: 1039, column: 51, scope: !14796)
!14799 = !DILocation(line: 1039, column: 41, scope: !14796)
!14800 = !DILocation(line: 1039, column: 4, scope: !14791)
!14801 = !DILocation(line: 1041, column: 10, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !3, line: 1041, column: 9)
!14803 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 1039, column: 85)
!14804 = !DILocation(line: 1041, column: 9, scope: !14802)
!14805 = !DILocation(line: 1041, column: 17, scope: !14802)
!14806 = !DILocation(line: 1041, column: 9, scope: !14803)
!14807 = !DILocation(line: 1042, column: 6, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 1041, column: 26)
!14809 = !DILocation(line: 1046, column: 13, scope: !14803)
!14810 = !DILocation(line: 1046, column: 21, scope: !14803)
!14811 = !DILocation(line: 1048, column: 13, scope: !14803)
!14812 = !DILocation(line: 1048, column: 19, scope: !14803)
!14813 = !DILocation(line: 1051, column: 17, scope: !14803)
!14814 = !DILocation(line: 1051, column: 25, scope: !14803)
!14815 = !DILocation(line: 1051, column: 34, scope: !14803)
!14816 = !DILocation(line: 1051, column: 42, scope: !14803)
!14817 = !DILocation(line: 1051, column: 5, scope: !14803)
!14818 = !DILocation(line: 1054, column: 50, scope: !14803)
!14819 = !DILocation(line: 1054, column: 56, scope: !14803)
!14820 = !DILocation(line: 1055, column: 60, scope: !14803)
!14821 = !DILocation(line: 1055, column: 78, scope: !14803)
!14822 = !DILocation(line: 1054, column: 5, scope: !14803)
!14823 = !DILocation(line: 1056, column: 29, scope: !14803)
!14824 = !DILocation(line: 1056, column: 19, scope: !14803)
!14825 = !DILocation(line: 1059, column: 11, scope: !14803)
!14826 = !DILocation(line: 1059, column: 21, scope: !14803)
!14827 = !DILocation(line: 1059, column: 8, scope: !14803)
!14828 = !DILocation(line: 1060, column: 19, scope: !14803)
!14829 = !DILocation(line: 1060, column: 27, scope: !14803)
!14830 = !DILocation(line: 1060, column: 34, scope: !14803)
!14831 = !DILocation(line: 1060, column: 38, scope: !14803)
!14832 = !DILocation(line: 1060, column: 42, scope: !14803)
!14833 = !DILocation(line: 1060, column: 46, scope: !14803)
!14834 = !DILocation(line: 1060, column: 53, scope: !14803)
!14835 = !DILocation(line: 1060, column: 57, scope: !14803)
!14836 = !DILocation(line: 1060, column: 61, scope: !14803)
!14837 = !DILocation(line: 1060, column: 65, scope: !14803)
!14838 = !DILocation(line: 1060, column: 72, scope: !14803)
!14839 = !DILocation(line: 1060, column: 76, scope: !14803)
!14840 = !DILocation(line: 1060, column: 80, scope: !14803)
!14841 = !DILocation(line: 1060, column: 5, scope: !14803)
!14842 = !DILocation(line: 1061, column: 22, scope: !14803)
!14843 = !DILocation(line: 1061, column: 30, scope: !14803)
!14844 = !DILocation(line: 1061, column: 38, scope: !14803)
!14845 = !DILocation(line: 1061, column: 45, scope: !14803)
!14846 = !DILocation(line: 1061, column: 49, scope: !14803)
!14847 = !DILocation(line: 1061, column: 53, scope: !14803)
!14848 = !DILocation(line: 1061, column: 5, scope: !14803)
!14849 = !DILocation(line: 1064, column: 28, scope: !14803)
!14850 = !DILocation(line: 1065, column: 28, scope: !14803)
!14851 = !DILocation(line: 1065, column: 35, scope: !14803)
!14852 = !DILocation(line: 1065, column: 39, scope: !14803)
!14853 = !DILocation(line: 1065, column: 43, scope: !14803)
!14854 = !DILocation(line: 1066, column: 28, scope: !14803)
!14855 = !DILocation(line: 1066, column: 35, scope: !14803)
!14856 = !DILocation(line: 1066, column: 39, scope: !14803)
!14857 = !DILocation(line: 1066, column: 43, scope: !14803)
!14858 = !DILocation(line: 1067, column: 28, scope: !14803)
!14859 = !DILocation(line: 1067, column: 35, scope: !14803)
!14860 = !DILocation(line: 1067, column: 39, scope: !14803)
!14861 = !DILocation(line: 1067, column: 43, scope: !14803)
!14862 = !DILocation(line: 1068, column: 28, scope: !14803)
!14863 = !DILocation(line: 1068, column: 32, scope: !14803)
!14864 = !DILocation(line: 1068, column: 37, scope: !14803)
!14865 = !DILocation(line: 1068, column: 44, scope: !14803)
!14866 = !DILocation(line: 1068, column: 48, scope: !14803)
!14867 = !DILocation(line: 1068, column: 52, scope: !14803)
!14868 = !DILocation(line: 1069, column: 28, scope: !14803)
!14869 = !DILocation(line: 1064, column: 5, scope: !14803)
!14870 = !DILocation(line: 1072, column: 15, scope: !14803)
!14871 = !DILocation(line: 1072, column: 19, scope: !14803)
!14872 = !DILocation(line: 1072, column: 13, scope: !14803)
!14873 = !DILocation(line: 1073, column: 12, scope: !14803)
!14874 = !DILocation(line: 1074, column: 5, scope: !14803)
!14875 = !DILocation(line: 1075, column: 18, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14803, file: !3, line: 1074, column: 8)
!14877 = !DILocation(line: 1075, column: 22, scope: !14876)
!14878 = !DILocation(line: 1075, column: 26, scope: !14876)
!14879 = !DILocation(line: 1075, column: 16, scope: !14876)
!14880 = !DILocation(line: 1075, column: 14, scope: !14876)
!14881 = !DILocation(line: 1076, column: 27, scope: !14876)
!14882 = !DILocation(line: 1076, column: 16, scope: !14876)
!14883 = !DILocation(line: 1076, column: 58, scope: !14876)
!14884 = !DILocation(line: 1076, column: 71, scope: !14876)
!14885 = !DILocation(line: 1076, column: 81, scope: !14876)
!14886 = !DILocation(line: 1076, column: 38, scope: !14876)
!14887 = !DILocation(line: 1076, column: 36, scope: !14876)
!14888 = !DILocation(line: 1076, column: 13, scope: !14876)
!14889 = !DILocation(line: 1077, column: 5, scope: !14876)
!14890 = !DILocation(line: 1077, column: 21, scope: !14803)
!14891 = distinct !{!14891, !14874, !14892}
!14892 = !DILocation(line: 1077, column: 23, scope: !14803)
!14893 = !DILocation(line: 1081, column: 9, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14803, file: !3, line: 1081, column: 9)
!14895 = !DILocation(line: 1081, column: 16, scope: !14894)
!14896 = !DILocation(line: 1081, column: 9, scope: !14803)
!14897 = !DILocation(line: 1082, column: 37, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14894, file: !3, line: 1081, column: 24)
!14899 = !DILocation(line: 1082, column: 36, scope: !14898)
!14900 = !DILocation(line: 1082, column: 45, scope: !14898)
!14901 = !DILocation(line: 1082, column: 15, scope: !14898)
!14902 = !DILocation(line: 1082, column: 13, scope: !14898)
!14903 = !DILocation(line: 1083, column: 30, scope: !14898)
!14904 = !DILocation(line: 1083, column: 38, scope: !14898)
!14905 = !DILocation(line: 1083, column: 46, scope: !14898)
!14906 = !DILocation(line: 1083, column: 54, scope: !14898)
!14907 = !DILocation(line: 1083, column: 6, scope: !14898)
!14908 = !DILocation(line: 1084, column: 5, scope: !14898)
!14909 = !DILocation(line: 1085, column: 4, scope: !14803)
!14910 = !DILocation(line: 1039, column: 61, scope: !14796)
!14911 = !DILocation(line: 1039, column: 71, scope: !14796)
!14912 = !DILocation(line: 1039, column: 81, scope: !14796)
!14913 = !DILocation(line: 1039, column: 4, scope: !14796)
!14914 = distinct !{!14914, !14800, !14915}
!14915 = !DILocation(line: 1085, column: 4, scope: !14791)
!14916 = !DILocation(line: 1088, column: 4, scope: !14616)
!14917 = !DILocation(line: 1089, column: 4, scope: !14616)
!14918 = !DILocation(line: 1093, column: 23, scope: !14616)
!14919 = !DILocation(line: 1093, column: 4, scope: !14616)
!14920 = !DILocation(line: 1094, column: 16, scope: !14616)
!14921 = !DILocation(line: 1094, column: 27, scope: !14616)
!14922 = !DILocation(line: 1094, column: 44, scope: !14616)
!14923 = !DILocation(line: 1094, column: 14, scope: !14616)
!14924 = !DILocation(line: 1097, column: 50, scope: !14616)
!14925 = !DILocation(line: 1097, column: 4, scope: !14616)
!14926 = !DILocation(line: 1100, column: 11, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 1100, column: 4)
!14928 = !DILocation(line: 1100, column: 25, scope: !14927)
!14929 = !DILocation(line: 1100, column: 23, scope: !14927)
!14930 = !DILocation(line: 1100, column: 9, scope: !14927)
!14931 = !DILocation(line: 1100, column: 39, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14927, file: !3, line: 1100, column: 4)
!14933 = !DILocation(line: 1100, column: 43, scope: !14932)
!14934 = !DILocation(line: 1100, column: 51, scope: !14932)
!14935 = !DILocation(line: 1100, column: 41, scope: !14932)
!14936 = !DILocation(line: 1100, column: 4, scope: !14927)
!14937 = !DILocation(line: 1102, column: 10, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14939, file: !3, line: 1102, column: 9)
!14939 = distinct !DILexicalBlock(scope: !14932, file: !3, line: 1100, column: 85)
!14940 = !DILocation(line: 1102, column: 9, scope: !14938)
!14941 = !DILocation(line: 1102, column: 17, scope: !14938)
!14942 = !DILocation(line: 1102, column: 9, scope: !14939)
!14943 = !DILocation(line: 1103, column: 6, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14938, file: !3, line: 1102, column: 26)
!14945 = !DILocation(line: 1107, column: 13, scope: !14939)
!14946 = !DILocation(line: 1107, column: 21, scope: !14939)
!14947 = !DILocation(line: 1109, column: 13, scope: !14939)
!14948 = !DILocation(line: 1109, column: 19, scope: !14939)
!14949 = !DILocation(line: 1112, column: 17, scope: !14939)
!14950 = !DILocation(line: 1112, column: 25, scope: !14939)
!14951 = !DILocation(line: 1112, column: 34, scope: !14939)
!14952 = !DILocation(line: 1112, column: 42, scope: !14939)
!14953 = !DILocation(line: 1112, column: 5, scope: !14939)
!14954 = !DILocation(line: 1115, column: 50, scope: !14939)
!14955 = !DILocation(line: 1115, column: 56, scope: !14939)
!14956 = !DILocation(line: 1116, column: 60, scope: !14939)
!14957 = !DILocation(line: 1116, column: 78, scope: !14939)
!14958 = !DILocation(line: 1115, column: 5, scope: !14939)
!14959 = !DILocation(line: 1117, column: 29, scope: !14939)
!14960 = !DILocation(line: 1117, column: 19, scope: !14939)
!14961 = !DILocation(line: 1120, column: 11, scope: !14939)
!14962 = !DILocation(line: 1120, column: 21, scope: !14939)
!14963 = !DILocation(line: 1120, column: 8, scope: !14939)
!14964 = !DILocation(line: 1121, column: 32, scope: !14939)
!14965 = !DILocation(line: 1121, column: 40, scope: !14939)
!14966 = !DILocation(line: 1121, column: 47, scope: !14939)
!14967 = !DILocation(line: 1121, column: 51, scope: !14939)
!14968 = !DILocation(line: 1121, column: 55, scope: !14939)
!14969 = !DILocation(line: 1121, column: 15, scope: !14939)
!14970 = !DILocation(line: 1121, column: 13, scope: !14939)
!14971 = !DILocation(line: 1122, column: 32, scope: !14939)
!14972 = !DILocation(line: 1122, column: 40, scope: !14939)
!14973 = !DILocation(line: 1122, column: 47, scope: !14939)
!14974 = !DILocation(line: 1122, column: 51, scope: !14939)
!14975 = !DILocation(line: 1122, column: 55, scope: !14939)
!14976 = !DILocation(line: 1122, column: 15, scope: !14939)
!14977 = !DILocation(line: 1122, column: 13, scope: !14939)
!14978 = !DILocation(line: 1123, column: 32, scope: !14939)
!14979 = !DILocation(line: 1123, column: 40, scope: !14939)
!14980 = !DILocation(line: 1123, column: 47, scope: !14939)
!14981 = !DILocation(line: 1123, column: 51, scope: !14939)
!14982 = !DILocation(line: 1123, column: 55, scope: !14939)
!14983 = !DILocation(line: 1123, column: 15, scope: !14939)
!14984 = !DILocation(line: 1123, column: 13, scope: !14939)
!14985 = !DILocation(line: 1126, column: 15, scope: !14939)
!14986 = !DILocation(line: 1126, column: 19, scope: !14939)
!14987 = !DILocation(line: 1126, column: 13, scope: !14939)
!14988 = !DILocation(line: 1127, column: 9, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14939, file: !3, line: 1127, column: 9)
!14990 = !DILocation(line: 1127, column: 19, scope: !14989)
!14991 = !DILocation(line: 1127, column: 17, scope: !14989)
!14992 = !DILocation(line: 1127, column: 27, scope: !14989)
!14993 = !DILocation(line: 1127, column: 30, scope: !14989)
!14994 = !DILocation(line: 1127, column: 40, scope: !14989)
!14995 = !DILocation(line: 1127, column: 38, scope: !14989)
!14996 = !DILocation(line: 1127, column: 9, scope: !14939)
!14997 = !DILocation(line: 1127, column: 72, scope: !14989)
!14998 = !DILocation(line: 1127, column: 76, scope: !14989)
!14999 = !DILocation(line: 1127, column: 70, scope: !14989)
!15000 = !DILocation(line: 1127, column: 49, scope: !14989)
!15001 = !DILocation(line: 1128, column: 14, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 1128, column: 14)
!15003 = !DILocation(line: 1128, column: 24, scope: !15002)
!15004 = !DILocation(line: 1128, column: 22, scope: !15002)
!15005 = !DILocation(line: 1128, column: 14, scope: !14989)
!15006 = !DILocation(line: 1128, column: 56, scope: !15002)
!15007 = !DILocation(line: 1128, column: 60, scope: !15002)
!15008 = !DILocation(line: 1128, column: 54, scope: !15002)
!15009 = !DILocation(line: 1128, column: 33, scope: !15002)
!15010 = !DILocation(line: 1129, column: 33, scope: !15002)
!15011 = !DILocation(line: 1129, column: 37, scope: !15002)
!15012 = !DILocation(line: 1129, column: 31, scope: !15002)
!15013 = !DILocation(line: 1130, column: 9, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !14939, file: !3, line: 1130, column: 9)
!15015 = !DILocation(line: 1130, column: 17, scope: !15014)
!15016 = !DILocation(line: 1130, column: 9, scope: !14939)
!15017 = !DILocation(line: 1131, column: 33, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !15014, file: !3, line: 1130, column: 23)
!15019 = !DILocation(line: 1131, column: 41, scope: !15018)
!15020 = !DILocation(line: 1131, column: 48, scope: !15018)
!15021 = !DILocation(line: 1131, column: 52, scope: !15018)
!15022 = !DILocation(line: 1131, column: 56, scope: !15018)
!15023 = !DILocation(line: 1131, column: 16, scope: !15018)
!15024 = !DILocation(line: 1131, column: 14, scope: !15018)
!15025 = !DILocation(line: 1132, column: 10, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 1132, column: 10)
!15027 = !DILocation(line: 1132, column: 20, scope: !15026)
!15028 = !DILocation(line: 1132, column: 18, scope: !15026)
!15029 = !DILocation(line: 1132, column: 28, scope: !15026)
!15030 = !DILocation(line: 1132, column: 31, scope: !15026)
!15031 = !DILocation(line: 1132, column: 41, scope: !15026)
!15032 = !DILocation(line: 1132, column: 39, scope: !15026)
!15033 = !DILocation(line: 1132, column: 49, scope: !15026)
!15034 = !DILocation(line: 1132, column: 52, scope: !15026)
!15035 = !DILocation(line: 1132, column: 62, scope: !15026)
!15036 = !DILocation(line: 1132, column: 60, scope: !15026)
!15037 = !DILocation(line: 1132, column: 10, scope: !15018)
!15038 = !DILocation(line: 1133, column: 30, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 1132, column: 71)
!15040 = !DILocation(line: 1133, column: 34, scope: !15039)
!15041 = !DILocation(line: 1133, column: 28, scope: !15039)
!15042 = !DILocation(line: 1134, column: 6, scope: !15039)
!15043 = !DILocation(line: 1135, column: 5, scope: !15018)
!15044 = !DILocation(line: 1139, column: 33, scope: !14939)
!15045 = !DILocation(line: 1139, column: 46, scope: !14939)
!15046 = !DILocation(line: 1139, column: 69, scope: !14939)
!15047 = !DILocation(line: 1139, column: 14, scope: !14939)
!15048 = !DILocation(line: 1139, column: 12, scope: !14939)
!15049 = !DILocation(line: 1140, column: 9, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !14939, file: !3, line: 1140, column: 9)
!15051 = !DILocation(line: 1140, column: 16, scope: !15050)
!15052 = !DILocation(line: 1140, column: 19, scope: !15050)
!15053 = !DILocation(line: 1140, column: 27, scope: !15050)
!15054 = !DILocation(line: 1140, column: 9, scope: !14939)
!15055 = !DILocation(line: 1141, column: 37, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15050, file: !3, line: 1140, column: 35)
!15057 = !DILocation(line: 1141, column: 36, scope: !15056)
!15058 = !DILocation(line: 1141, column: 45, scope: !15056)
!15059 = !DILocation(line: 1141, column: 15, scope: !15056)
!15060 = !DILocation(line: 1141, column: 13, scope: !15056)
!15061 = !DILocation(line: 1142, column: 30, scope: !15056)
!15062 = !DILocation(line: 1142, column: 38, scope: !15056)
!15063 = !DILocation(line: 1142, column: 46, scope: !15056)
!15064 = !DILocation(line: 1142, column: 54, scope: !15056)
!15065 = !DILocation(line: 1142, column: 62, scope: !15056)
!15066 = !DILocation(line: 1142, column: 6, scope: !15056)
!15067 = !DILocation(line: 1143, column: 5, scope: !15056)
!15068 = !DILocation(line: 1144, column: 4, scope: !14939)
!15069 = !DILocation(line: 1100, column: 61, scope: !14932)
!15070 = !DILocation(line: 1100, column: 71, scope: !14932)
!15071 = !DILocation(line: 1100, column: 81, scope: !14932)
!15072 = !DILocation(line: 1100, column: 4, scope: !14932)
!15073 = distinct !{!15073, !14936, !15074}
!15074 = !DILocation(line: 1144, column: 4, scope: !14927)
!15075 = !DILocation(line: 1147, column: 4, scope: !14616)
!15076 = !DILocation(line: 1148, column: 4, scope: !14616)
!15077 = !DILocation(line: 1152, column: 4, scope: !14616)
!15078 = !DILocation(line: 1156, column: 6, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 1156, column: 6)
!15080 = !DILocation(line: 1156, column: 6, scope: !14354)
!15081 = !DILocation(line: 1156, column: 20, scope: !15079)
!15082 = !DILocation(line: 1156, column: 30, scope: !15079)
!15083 = !DILocation(line: 1157, column: 6, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !14354, file: !3, line: 1157, column: 6)
!15085 = !DILocation(line: 1157, column: 6, scope: !14354)
!15086 = !DILocation(line: 1157, column: 20, scope: !15084)
!15087 = !DILocation(line: 1157, column: 30, scope: !15084)
!15088 = !DILocation(line: 1158, column: 2, scope: !14354)
!15089 = !DILocation(line: 1158, column: 13, scope: !14354)
!15090 = !DILocation(line: 1158, column: 21, scope: !14354)
!15091 = !DILocation(line: 1160, column: 2, scope: !14354)
!15092 = !DILocation(line: 1161, column: 1, scope: !14354)
!15093 = distinct !DISubprogram(name: "ed_vgroup_dm_parray_alloc", scope: !3, file: !3, line: 330, type: !15094, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15094 = !DISubroutineType(types: !15095)
!15095 = !{!2436, !1845, !4735, !1972}
!15096 = !DILocalVariable(name: "dm", arg: 1, scope: !15093, file: !3, line: 330, type: !1845)
!15097 = !DILocation(line: 330, column: 52, scope: !15093)
!15098 = !DILocalVariable(name: "dvert_arr", arg: 2, scope: !15093, file: !3, line: 330, type: !4735)
!15099 = !DILocation(line: 330, column: 71, scope: !15093)
!15100 = !DILocalVariable(name: "dvert_tot", arg: 3, scope: !15093, file: !3, line: 330, type: !1972)
!15101 = !DILocation(line: 330, column: 87, scope: !15093)
!15102 = !DILocation(line: 332, column: 3, scope: !15093)
!15103 = !DILocation(line: 332, column: 13, scope: !15093)
!15104 = !DILocation(line: 333, column: 3, scope: !15093)
!15105 = !DILocation(line: 333, column: 13, scope: !15093)
!15106 = !DILocation(line: 335, column: 6, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !15093, file: !3, line: 335, column: 6)
!15108 = !DILocation(line: 335, column: 6, scope: !15093)
!15109 = !DILocalVariable(name: "dvert", scope: !15110, file: !3, line: 336, type: !4203)
!15110 = distinct !DILexicalBlock(scope: !15107, file: !3, line: 335, column: 10)
!15111 = !DILocation(line: 336, column: 16, scope: !15110)
!15112 = !DILocation(line: 336, column: 24, scope: !15110)
!15113 = !DILocation(line: 336, column: 28, scope: !15110)
!15114 = !DILocation(line: 336, column: 45, scope: !15110)
!15115 = !DILocation(line: 338, column: 7, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15110, file: !3, line: 338, column: 7)
!15117 = !DILocation(line: 338, column: 7, scope: !15110)
!15118 = !DILocalVariable(name: "i", scope: !15119, file: !3, line: 339, type: !354)
!15119 = distinct !DILexicalBlock(scope: !15116, file: !3, line: 338, column: 14)
!15120 = !DILocation(line: 339, column: 8, scope: !15119)
!15121 = !DILocalVariable(name: "totvert", scope: !15119, file: !3, line: 339, type: !354)
!15122 = !DILocation(line: 339, column: 11, scope: !15119)
!15123 = !DILocation(line: 339, column: 21, scope: !15119)
!15124 = !DILocation(line: 339, column: 25, scope: !15119)
!15125 = !DILocation(line: 339, column: 37, scope: !15119)
!15126 = !DILocation(line: 341, column: 17, scope: !15119)
!15127 = !DILocation(line: 341, column: 5, scope: !15119)
!15128 = !DILocation(line: 341, column: 15, scope: !15119)
!15129 = !DILocation(line: 342, column: 17, scope: !15119)
!15130 = !DILocation(line: 342, column: 46, scope: !15119)
!15131 = !DILocation(line: 342, column: 44, scope: !15119)
!15132 = !DILocation(line: 342, column: 5, scope: !15119)
!15133 = !DILocation(line: 342, column: 15, scope: !15119)
!15134 = !DILocation(line: 344, column: 11, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15119, file: !3, line: 344, column: 4)
!15136 = !DILocation(line: 344, column: 9, scope: !15135)
!15137 = !DILocation(line: 344, column: 16, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15135, file: !3, line: 344, column: 4)
!15139 = !DILocation(line: 344, column: 20, scope: !15138)
!15140 = !DILocation(line: 344, column: 18, scope: !15138)
!15141 = !DILocation(line: 344, column: 4, scope: !15135)
!15142 = !DILocation(line: 345, column: 23, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15138, file: !3, line: 344, column: 34)
!15144 = !DILocation(line: 345, column: 31, scope: !15143)
!15145 = !DILocation(line: 345, column: 29, scope: !15143)
!15146 = !DILocation(line: 345, column: 7, scope: !15143)
!15147 = !DILocation(line: 345, column: 6, scope: !15143)
!15148 = !DILocation(line: 345, column: 18, scope: !15143)
!15149 = !DILocation(line: 345, column: 5, scope: !15143)
!15150 = !DILocation(line: 345, column: 21, scope: !15143)
!15151 = !DILocation(line: 346, column: 4, scope: !15143)
!15152 = !DILocation(line: 344, column: 30, scope: !15138)
!15153 = !DILocation(line: 344, column: 4, scope: !15138)
!15154 = distinct !{!15154, !15141, !15155}
!15155 = !DILocation(line: 346, column: 4, scope: !15135)
!15156 = !DILocation(line: 348, column: 4, scope: !15119)
!15157 = !DILocation(line: 350, column: 2, scope: !15110)
!15158 = !DILocation(line: 352, column: 2, scope: !15093)
!15159 = !DILocation(line: 353, column: 1, scope: !15093)
!15160 = distinct !DISubprogram(name: "vgroup_transfer_weight", scope: !3, file: !3, line: 871, type: !15161, scopeLine: 872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15161 = !DISubroutineType(types: !15162)
!15162 = !{null, !2027, !1851, !15163}
!15163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9529)
!15164 = !DILocalVariable(name: "r_weight_dst", arg: 1, scope: !15160, file: !3, line: 871, type: !2027)
!15165 = !DILocation(line: 871, column: 43, scope: !15160)
!15166 = !DILocalVariable(name: "weight_src", arg: 2, scope: !15160, file: !3, line: 871, type: !1851)
!15167 = !DILocation(line: 871, column: 69, scope: !15160)
!15168 = !DILocalVariable(name: "replace_mode", arg: 3, scope: !15160, file: !3, line: 871, type: !15163)
!15169 = !DILocation(line: 871, column: 102, scope: !15160)
!15170 = !DILocation(line: 873, column: 10, scope: !15160)
!15171 = !DILocation(line: 873, column: 2, scope: !15160)
!15172 = !DILocation(line: 875, column: 20, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15160, file: !3, line: 873, column: 24)
!15174 = !DILocation(line: 875, column: 5, scope: !15173)
!15175 = !DILocation(line: 875, column: 18, scope: !15173)
!15176 = !DILocation(line: 876, column: 4, scope: !15173)
!15177 = !DILocation(line: 879, column: 9, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15173, file: !3, line: 879, column: 8)
!15179 = !DILocation(line: 879, column: 8, scope: !15178)
!15180 = !DILocation(line: 879, column: 22, scope: !15178)
!15181 = !DILocation(line: 879, column: 8, scope: !15173)
!15182 = !DILocation(line: 880, column: 21, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 879, column: 31)
!15184 = !DILocation(line: 880, column: 6, scope: !15183)
!15185 = !DILocation(line: 880, column: 19, scope: !15183)
!15186 = !DILocation(line: 881, column: 4, scope: !15183)
!15187 = !DILocation(line: 882, column: 4, scope: !15173)
!15188 = !DILocation(line: 886, column: 4, scope: !15173)
!15189 = !DILocation(line: 888, column: 1, scope: !15160)
!15190 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !12414, file: !12414, line: 727, type: !12449, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15191 = !DILocalVariable(name: "a", arg: 1, scope: !15190, file: !12414, line: 727, type: !2001)
!15192 = !DILocation(line: 727, column: 44, scope: !15190)
!15193 = !DILocalVariable(name: "b", arg: 2, scope: !15190, file: !12414, line: 727, type: !2001)
!15194 = !DILocation(line: 727, column: 62, scope: !15190)
!15195 = !DILocalVariable(name: "d", scope: !15190, file: !12414, line: 729, type: !1575)
!15196 = !DILocation(line: 729, column: 8, scope: !15190)
!15197 = !DILocation(line: 731, column: 14, scope: !15190)
!15198 = !DILocation(line: 731, column: 17, scope: !15190)
!15199 = !DILocation(line: 731, column: 20, scope: !15190)
!15200 = !DILocation(line: 731, column: 2, scope: !15190)
!15201 = !DILocation(line: 732, column: 18, scope: !15190)
!15202 = !DILocation(line: 732, column: 21, scope: !15190)
!15203 = !DILocation(line: 732, column: 9, scope: !15190)
!15204 = !DILocation(line: 732, column: 2, scope: !15190)
!15205 = distinct !DISubprogram(name: "vgroup_init_remap", scope: !3, file: !3, line: 4237, type: !15206, scopeLine: 4238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15206 = !DISubroutineType(types: !15207)
!15207 = !{!1381, !3872}
!15208 = !DILocalVariable(name: "ob", arg: 1, scope: !15205, file: !3, line: 4237, type: !3872)
!15209 = !DILocation(line: 4237, column: 40, scope: !15205)
!15210 = !DILocalVariable(name: "def", scope: !15205, file: !3, line: 4239, type: !1368)
!15211 = !DILocation(line: 4239, column: 16, scope: !15205)
!15212 = !DILocalVariable(name: "defbase_tot", scope: !15205, file: !3, line: 4240, type: !354)
!15213 = !DILocation(line: 4240, column: 6, scope: !15205)
!15214 = !DILocation(line: 4240, column: 35, scope: !15205)
!15215 = !DILocation(line: 4240, column: 39, scope: !15205)
!15216 = !DILocation(line: 4240, column: 20, scope: !15205)
!15217 = !DILocalVariable(name: "name_array", scope: !15205, file: !3, line: 4241, type: !1381)
!15218 = !DILocation(line: 4241, column: 8, scope: !15205)
!15219 = !DILocation(line: 4241, column: 21, scope: !15205)
!15220 = !DILocation(line: 4241, column: 66, scope: !15205)
!15221 = !DILocation(line: 4241, column: 64, scope: !15205)
!15222 = !DILocalVariable(name: "name", scope: !15205, file: !3, line: 4242, type: !1381)
!15223 = !DILocation(line: 4242, column: 8, scope: !15205)
!15224 = !DILocation(line: 4244, column: 9, scope: !15205)
!15225 = !DILocation(line: 4244, column: 7, scope: !15205)
!15226 = !DILocation(line: 4245, column: 13, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15205, file: !3, line: 4245, column: 2)
!15228 = !DILocation(line: 4245, column: 17, scope: !15227)
!15229 = !DILocation(line: 4245, column: 25, scope: !15227)
!15230 = !DILocation(line: 4245, column: 11, scope: !15227)
!15231 = !DILocation(line: 4245, column: 7, scope: !15227)
!15232 = !DILocation(line: 4245, column: 32, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15227, file: !3, line: 4245, column: 2)
!15234 = !DILocation(line: 4245, column: 2, scope: !15227)
!15235 = !DILocation(line: 4246, column: 15, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 4245, column: 54)
!15237 = !DILocation(line: 4246, column: 21, scope: !15236)
!15238 = !DILocation(line: 4246, column: 26, scope: !15236)
!15239 = !DILocation(line: 4246, column: 3, scope: !15236)
!15240 = !DILocation(line: 4247, column: 8, scope: !15236)
!15241 = !DILocation(line: 4248, column: 2, scope: !15236)
!15242 = !DILocation(line: 4245, column: 43, scope: !15233)
!15243 = !DILocation(line: 4245, column: 48, scope: !15233)
!15244 = !DILocation(line: 4245, column: 41, scope: !15233)
!15245 = !DILocation(line: 4245, column: 2, scope: !15233)
!15246 = distinct !{!15246, !15234, !15247}
!15247 = !DILocation(line: 4248, column: 2, scope: !15227)
!15248 = !DILocation(line: 4250, column: 9, scope: !15205)
!15249 = !DILocation(line: 4250, column: 2, scope: !15205)
!15250 = distinct !DISubprogram(name: "vgroup_sort_name", scope: !3, file: !3, line: 4327, type: !14316, scopeLine: 4328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15251 = !DILocalVariable(name: "def_a_ptr", arg: 1, scope: !15250, file: !3, line: 4327, type: !14318)
!15252 = !DILocation(line: 4327, column: 41, scope: !15250)
!15253 = !DILocalVariable(name: "def_b_ptr", arg: 2, scope: !15250, file: !3, line: 4327, type: !14318)
!15254 = !DILocation(line: 4327, column: 64, scope: !15250)
!15255 = !DILocalVariable(name: "def_a", scope: !15250, file: !3, line: 4329, type: !15256)
!15256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15257, size: 64)
!15257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1369)
!15258 = !DILocation(line: 4329, column: 22, scope: !15250)
!15259 = !DILocation(line: 4329, column: 30, scope: !15250)
!15260 = !DILocalVariable(name: "def_b", scope: !15250, file: !3, line: 4330, type: !15256)
!15261 = !DILocation(line: 4330, column: 22, scope: !15250)
!15262 = !DILocation(line: 4330, column: 30, scope: !15250)
!15263 = !DILocation(line: 4332, column: 23, scope: !15250)
!15264 = !DILocation(line: 4332, column: 30, scope: !15250)
!15265 = !DILocation(line: 4332, column: 36, scope: !15250)
!15266 = !DILocation(line: 4332, column: 43, scope: !15250)
!15267 = !DILocation(line: 4332, column: 9, scope: !15250)
!15268 = !DILocation(line: 4332, column: 2, scope: !15250)
!15269 = distinct !DISubprogram(name: "vgroup_sort_bone_hierarchy", scope: !3, file: !3, line: 4337, type: !15270, scopeLine: 4338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15270 = !DISubroutineType(types: !15271)
!15271 = !{null, !3872, !3327}
!15272 = !DILocalVariable(name: "ob", arg: 1, scope: !15269, file: !3, line: 4337, type: !3872)
!15273 = !DILocation(line: 4337, column: 48, scope: !15269)
!15274 = !DILocalVariable(name: "bonebase", arg: 2, scope: !15269, file: !3, line: 4337, type: !3327)
!15275 = !DILocation(line: 4337, column: 62, scope: !15269)
!15276 = !DILocation(line: 4339, column: 6, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 4339, column: 6)
!15278 = !DILocation(line: 4339, column: 15, scope: !15277)
!15279 = !DILocation(line: 4339, column: 6, scope: !15269)
!15280 = !DILocalVariable(name: "armobj", scope: !15281, file: !3, line: 4340, type: !3872)
!15281 = distinct !DILexicalBlock(scope: !15277, file: !3, line: 4339, column: 24)
!15282 = !DILocation(line: 4340, column: 11, scope: !15281)
!15283 = !DILocation(line: 4340, column: 51, scope: !15281)
!15284 = !DILocation(line: 4340, column: 20, scope: !15281)
!15285 = !DILocation(line: 4341, column: 7, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15281, file: !3, line: 4341, column: 7)
!15287 = !DILocation(line: 4341, column: 14, scope: !15286)
!15288 = !DILocation(line: 4341, column: 7, scope: !15281)
!15289 = !DILocalVariable(name: "armature", scope: !15290, file: !3, line: 4342, type: !15291)
!15290 = distinct !DILexicalBlock(scope: !15286, file: !3, line: 4341, column: 23)
!15291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15292, size: 64)
!15292 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !3891, line: 114, baseType: !3890)
!15293 = !DILocation(line: 4342, column: 15, scope: !15290)
!15294 = !DILocation(line: 4342, column: 26, scope: !15290)
!15295 = !DILocation(line: 4342, column: 34, scope: !15290)
!15296 = !DILocation(line: 4343, column: 16, scope: !15290)
!15297 = !DILocation(line: 4343, column: 26, scope: !15290)
!15298 = !DILocation(line: 4343, column: 13, scope: !15290)
!15299 = !DILocation(line: 4344, column: 3, scope: !15290)
!15300 = !DILocation(line: 4345, column: 2, scope: !15281)
!15301 = !DILocation(line: 4347, column: 6, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 4347, column: 6)
!15303 = !DILocation(line: 4347, column: 15, scope: !15302)
!15304 = !DILocation(line: 4347, column: 6, scope: !15269)
!15305 = !DILocalVariable(name: "bone", scope: !15306, file: !3, line: 4348, type: !3899)
!15306 = distinct !DILexicalBlock(scope: !15302, file: !3, line: 4347, column: 24)
!15307 = !DILocation(line: 4348, column: 9, scope: !15306)
!15308 = !DILocation(line: 4349, column: 15, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15306, file: !3, line: 4349, column: 3)
!15310 = !DILocation(line: 4349, column: 25, scope: !15309)
!15311 = !DILocation(line: 4349, column: 13, scope: !15309)
!15312 = !DILocation(line: 4349, column: 8, scope: !15309)
!15313 = !DILocation(line: 4349, column: 31, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15309, file: !3, line: 4349, column: 3)
!15315 = !DILocation(line: 4349, column: 3, scope: !15309)
!15316 = !DILocalVariable(name: "dg", scope: !15317, file: !3, line: 4350, type: !1368)
!15317 = distinct !DILexicalBlock(scope: !15314, file: !3, line: 4349, column: 56)
!15318 = !DILocation(line: 4350, column: 18, scope: !15317)
!15319 = !DILocation(line: 4350, column: 42, scope: !15317)
!15320 = !DILocation(line: 4350, column: 46, scope: !15317)
!15321 = !DILocation(line: 4350, column: 52, scope: !15317)
!15322 = !DILocation(line: 4350, column: 23, scope: !15317)
!15323 = !DILocation(line: 4351, column: 31, scope: !15317)
!15324 = !DILocation(line: 4351, column: 36, scope: !15317)
!15325 = !DILocation(line: 4351, column: 42, scope: !15317)
!15326 = !DILocation(line: 4351, column: 4, scope: !15317)
!15327 = !DILocation(line: 4353, column: 8, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 4353, column: 8)
!15329 = !DILocation(line: 4353, column: 11, scope: !15328)
!15330 = !DILocation(line: 4353, column: 8, scope: !15317)
!15331 = !DILocation(line: 4354, column: 18, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15328, file: !3, line: 4353, column: 20)
!15333 = !DILocation(line: 4354, column: 22, scope: !15332)
!15334 = !DILocation(line: 4354, column: 31, scope: !15332)
!15335 = !DILocation(line: 4354, column: 5, scope: !15332)
!15336 = !DILocation(line: 4355, column: 18, scope: !15332)
!15337 = !DILocation(line: 4355, column: 22, scope: !15332)
!15338 = !DILocation(line: 4355, column: 31, scope: !15332)
!15339 = !DILocation(line: 4355, column: 5, scope: !15332)
!15340 = !DILocation(line: 4356, column: 4, scope: !15332)
!15341 = !DILocation(line: 4357, column: 3, scope: !15317)
!15342 = !DILocation(line: 4349, column: 44, scope: !15314)
!15343 = !DILocation(line: 4349, column: 50, scope: !15314)
!15344 = !DILocation(line: 4349, column: 42, scope: !15314)
!15345 = !DILocation(line: 4349, column: 3, scope: !15314)
!15346 = distinct !{!15346, !15315, !15347}
!15347 = !DILocation(line: 4357, column: 3, scope: !15309)
!15348 = !DILocation(line: 4358, column: 2, scope: !15306)
!15349 = !DILocation(line: 4360, column: 2, scope: !15269)
!15350 = distinct !DISubprogram(name: "vgroup_do_remap", scope: !3, file: !3, line: 4253, type: !15351, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15351 = !DISubroutineType(types: !15352)
!15352 = !{!354, !3872, !1710, !7731}
!15353 = !DILocalVariable(name: "ob", arg: 1, scope: !15350, file: !3, line: 4253, type: !3872)
!15354 = !DILocation(line: 4253, column: 36, scope: !15350)
!15355 = !DILocalVariable(name: "name_array", arg: 2, scope: !15350, file: !3, line: 4253, type: !1710)
!15356 = !DILocation(line: 4253, column: 52, scope: !15350)
!15357 = !DILocalVariable(name: "op", arg: 3, scope: !15350, file: !3, line: 4253, type: !7731)
!15358 = !DILocation(line: 4253, column: 76, scope: !15350)
!15359 = !DILocalVariable(name: "dvert", scope: !15350, file: !3, line: 4255, type: !4203)
!15360 = !DILocation(line: 4255, column: 15, scope: !15350)
!15361 = !DILocalVariable(name: "def", scope: !15350, file: !3, line: 4256, type: !1368)
!15362 = !DILocation(line: 4256, column: 16, scope: !15350)
!15363 = !DILocalVariable(name: "defbase_tot", scope: !15350, file: !3, line: 4257, type: !354)
!15364 = !DILocation(line: 4257, column: 6, scope: !15350)
!15365 = !DILocation(line: 4257, column: 35, scope: !15350)
!15366 = !DILocation(line: 4257, column: 39, scope: !15350)
!15367 = !DILocation(line: 4257, column: 20, scope: !15350)
!15368 = !DILocalVariable(name: "sort_map_update", scope: !15350, file: !3, line: 4260, type: !1972)
!15369 = !DILocation(line: 4260, column: 7, scope: !15350)
!15370 = !DILocation(line: 4260, column: 25, scope: !15350)
!15371 = !DILocation(line: 4260, column: 52, scope: !15350)
!15372 = !DILocation(line: 4260, column: 64, scope: !15350)
!15373 = !DILocation(line: 4260, column: 51, scope: !15350)
!15374 = !DILocation(line: 4260, column: 49, scope: !15350)
!15375 = !DILocalVariable(name: "sort_map", scope: !15350, file: !3, line: 4261, type: !1972)
!15376 = !DILocation(line: 4261, column: 7, scope: !15350)
!15377 = !DILocation(line: 4261, column: 18, scope: !15350)
!15378 = !DILocation(line: 4261, column: 34, scope: !15350)
!15379 = !DILocalVariable(name: "name", scope: !15350, file: !3, line: 4263, type: !1710)
!15380 = !DILocation(line: 4263, column: 14, scope: !15350)
!15381 = !DILocalVariable(name: "i", scope: !15350, file: !3, line: 4264, type: !354)
!15382 = !DILocation(line: 4264, column: 6, scope: !15350)
!15383 = !DILocation(line: 4266, column: 9, scope: !15350)
!15384 = !DILocation(line: 4266, column: 7, scope: !15350)
!15385 = !DILocation(line: 4267, column: 13, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 4267, column: 2)
!15387 = !DILocation(line: 4267, column: 17, scope: !15386)
!15388 = !DILocation(line: 4267, column: 25, scope: !15386)
!15389 = !DILocation(line: 4267, column: 11, scope: !15386)
!15390 = !DILocation(line: 4267, column: 34, scope: !15386)
!15391 = !DILocation(line: 4267, column: 7, scope: !15386)
!15392 = !DILocation(line: 4267, column: 39, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15386, file: !3, line: 4267, column: 2)
!15394 = !DILocation(line: 4267, column: 2, scope: !15386)
!15395 = !DILocation(line: 4268, column: 38, scope: !15396)
!15396 = distinct !DILexicalBlock(scope: !15393, file: !3, line: 4267, column: 66)
!15397 = !DILocation(line: 4268, column: 42, scope: !15396)
!15398 = !DILocation(line: 4268, column: 51, scope: !15396)
!15399 = !DILocation(line: 4268, column: 17, scope: !15396)
!15400 = !DILocation(line: 4268, column: 3, scope: !15396)
!15401 = !DILocation(line: 4268, column: 12, scope: !15396)
!15402 = !DILocation(line: 4268, column: 15, scope: !15396)
!15403 = !DILocation(line: 4269, column: 8, scope: !15396)
!15404 = !DILocation(line: 4272, column: 2, scope: !15396)
!15405 = !DILocation(line: 4267, column: 50, scope: !15393)
!15406 = !DILocation(line: 4267, column: 55, scope: !15393)
!15407 = !DILocation(line: 4267, column: 48, scope: !15393)
!15408 = !DILocation(line: 4267, column: 62, scope: !15393)
!15409 = !DILocation(line: 4267, column: 2, scope: !15393)
!15410 = distinct !{!15410, !15394, !15411}
!15411 = !DILocation(line: 4272, column: 2, scope: !15386)
!15412 = !DILocation(line: 4274, column: 6, scope: !15413)
!15413 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 4274, column: 6)
!15414 = !DILocation(line: 4274, column: 10, scope: !15413)
!15415 = !DILocation(line: 4274, column: 15, scope: !15413)
!15416 = !DILocation(line: 4274, column: 6, scope: !15350)
!15417 = !DILocation(line: 4275, column: 7, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15419, file: !3, line: 4275, column: 7)
!15419 = distinct !DILexicalBlock(scope: !15413, file: !3, line: 4274, column: 32)
!15420 = !DILocation(line: 4275, column: 11, scope: !15418)
!15421 = !DILocation(line: 4275, column: 16, scope: !15418)
!15422 = !DILocation(line: 4275, column: 7, scope: !15419)
!15423 = !DILocalVariable(name: "em", scope: !15424, file: !3, line: 4276, type: !4100)
!15424 = distinct !DILexicalBlock(scope: !15418, file: !3, line: 4275, column: 28)
!15425 = !DILocation(line: 4276, column: 16, scope: !15424)
!15426 = !DILocation(line: 4276, column: 46, scope: !15424)
!15427 = !DILocation(line: 4276, column: 21, scope: !15424)
!15428 = !DILocalVariable(name: "cd_dvert_offset", scope: !15424, file: !3, line: 4277, type: !4075)
!15429 = !DILocation(line: 4277, column: 14, scope: !15424)
!15430 = !DILocation(line: 4277, column: 55, scope: !15424)
!15431 = !DILocation(line: 4277, column: 59, scope: !15424)
!15432 = !DILocation(line: 4277, column: 63, scope: !15424)
!15433 = !DILocation(line: 4277, column: 32, scope: !15424)
!15434 = !DILocation(line: 4279, column: 8, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15424, file: !3, line: 4279, column: 8)
!15436 = !DILocation(line: 4279, column: 24, scope: !15435)
!15437 = !DILocation(line: 4279, column: 8, scope: !15424)
!15438 = !DILocalVariable(name: "iter", scope: !15439, file: !3, line: 4280, type: !4112)
!15439 = distinct !DILexicalBlock(scope: !15435, file: !3, line: 4279, column: 31)
!15440 = !DILocation(line: 4280, column: 12, scope: !15439)
!15441 = !DILocalVariable(name: "eve", scope: !15439, file: !3, line: 4281, type: !1627)
!15442 = !DILocation(line: 4281, column: 13, scope: !15439)
!15443 = !DILocation(line: 4283, column: 5, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15439, file: !3, line: 4283, column: 5)
!15445 = !DILocation(line: 4283, column: 5, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15444, file: !3, line: 4283, column: 5)
!15447 = !DILocation(line: 4284, column: 14, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15446, file: !3, line: 4283, column: 57)
!15449 = !DILocation(line: 4284, column: 12, scope: !15448)
!15450 = !DILocation(line: 4285, column: 10, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15448, file: !3, line: 4285, column: 10)
!15452 = !DILocation(line: 4285, column: 17, scope: !15451)
!15453 = !DILocation(line: 4285, column: 10, scope: !15448)
!15454 = !DILocation(line: 4286, column: 21, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15451, file: !3, line: 4285, column: 28)
!15456 = !DILocation(line: 4286, column: 28, scope: !15455)
!15457 = !DILocation(line: 4286, column: 38, scope: !15455)
!15458 = !DILocation(line: 4286, column: 7, scope: !15455)
!15459 = !DILocation(line: 4287, column: 6, scope: !15455)
!15460 = !DILocation(line: 4288, column: 5, scope: !15448)
!15461 = distinct !{!15461, !15443, !15462}
!15462 = !DILocation(line: 4288, column: 5, scope: !15444)
!15463 = !DILocation(line: 4289, column: 4, scope: !15439)
!15464 = !DILocation(line: 4290, column: 3, scope: !15424)
!15465 = !DILocation(line: 4292, column: 15, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15418, file: !3, line: 4291, column: 8)
!15467 = !DILocation(line: 4292, column: 19, scope: !15466)
!15468 = !DILocation(line: 4292, column: 4, scope: !15466)
!15469 = !DILocation(line: 4293, column: 4, scope: !15466)
!15470 = !DILocation(line: 4293, column: 14, scope: !15466)
!15471 = !DILocation(line: 4294, column: 4, scope: !15466)
!15472 = !DILocation(line: 4296, column: 2, scope: !15419)
!15473 = !DILocalVariable(name: "dvert_tot", scope: !15474, file: !3, line: 4298, type: !354)
!15474 = distinct !DILexicalBlock(scope: !15413, file: !3, line: 4297, column: 7)
!15475 = !DILocation(line: 4298, column: 7, scope: !15474)
!15476 = !DILocation(line: 4300, column: 23, scope: !15474)
!15477 = !DILocation(line: 4300, column: 27, scope: !15474)
!15478 = !DILocation(line: 4300, column: 3, scope: !15474)
!15479 = !DILocation(line: 4303, column: 7, scope: !15480)
!15480 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 4303, column: 7)
!15481 = !DILocation(line: 4303, column: 7, scope: !15474)
!15482 = !DILocation(line: 4304, column: 4, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15480, file: !3, line: 4303, column: 14)
!15484 = !DILocation(line: 4304, column: 20, scope: !15483)
!15485 = !DILocation(line: 4305, column: 9, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15487, file: !3, line: 4305, column: 9)
!15487 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 4304, column: 24)
!15488 = !DILocation(line: 4305, column: 16, scope: !15486)
!15489 = !DILocation(line: 4305, column: 9, scope: !15487)
!15490 = !DILocation(line: 4306, column: 20, scope: !15486)
!15491 = !DILocation(line: 4306, column: 27, scope: !15486)
!15492 = !DILocation(line: 4306, column: 37, scope: !15486)
!15493 = !DILocation(line: 4306, column: 6, scope: !15486)
!15494 = !DILocation(line: 4307, column: 10, scope: !15487)
!15495 = distinct !{!15495, !15482, !15496}
!15496 = !DILocation(line: 4308, column: 4, scope: !15483)
!15497 = !DILocation(line: 4309, column: 3, scope: !15483)
!15498 = !DILocation(line: 4313, column: 9, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 4313, column: 2)
!15500 = !DILocation(line: 4313, column: 7, scope: !15499)
!15501 = !DILocation(line: 4313, column: 14, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15499, file: !3, line: 4313, column: 2)
!15503 = !DILocation(line: 4313, column: 18, scope: !15502)
!15504 = !DILocation(line: 4313, column: 16, scope: !15502)
!15505 = !DILocation(line: 4313, column: 2, scope: !15499)
!15506 = !DILocation(line: 4314, column: 3, scope: !15502)
!15507 = !DILocation(line: 4314, column: 12, scope: !15502)
!15508 = !DILocation(line: 4314, column: 14, scope: !15502)
!15509 = !DILocation(line: 4313, column: 32, scope: !15502)
!15510 = !DILocation(line: 4313, column: 2, scope: !15502)
!15511 = distinct !{!15511, !15505, !15512}
!15512 = !DILocation(line: 4314, column: 14, scope: !15499)
!15513 = !DILocation(line: 4316, column: 2, scope: !15350)
!15514 = !DILocation(line: 4316, column: 21, scope: !15350)
!15515 = !DILocation(line: 4317, column: 28, scope: !15350)
!15516 = !DILocation(line: 4317, column: 32, scope: !15350)
!15517 = !DILocation(line: 4317, column: 2, scope: !15350)
!15518 = !DILocation(line: 4320, column: 15, scope: !15350)
!15519 = !DILocation(line: 4320, column: 31, scope: !15350)
!15520 = !DILocation(line: 4320, column: 35, scope: !15350)
!15521 = !DILocation(line: 4320, column: 2, scope: !15350)
!15522 = !DILocation(line: 4320, column: 6, scope: !15350)
!15523 = !DILocation(line: 4320, column: 13, scope: !15350)
!15524 = !DILocation(line: 4322, column: 2, scope: !15350)
!15525 = !DILocation(line: 4322, column: 12, scope: !15350)
!15526 = !DILocation(line: 4324, column: 2, scope: !15350)
!15527 = !DILocation(line: 4325, column: 1, scope: !15350)
!15528 = distinct !DISubprogram(name: "check_vertex_group_accessible", scope: !3, file: !3, line: 4552, type: !15529, scopeLine: 4553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15529 = !DISubroutineType(types: !15530)
!15530 = !{!2436, !7731, !3872, !354}
!15531 = !DILocalVariable(name: "op", arg: 1, scope: !15528, file: !3, line: 4552, type: !7731)
!15532 = !DILocation(line: 4552, column: 55, scope: !15528)
!15533 = !DILocalVariable(name: "ob", arg: 2, scope: !15528, file: !3, line: 4552, type: !3872)
!15534 = !DILocation(line: 4552, column: 67, scope: !15528)
!15535 = !DILocalVariable(name: "def_nr", arg: 3, scope: !15528, file: !3, line: 4552, type: !354)
!15536 = !DILocation(line: 4552, column: 75, scope: !15528)
!15537 = !DILocalVariable(name: "dg", scope: !15528, file: !3, line: 4554, type: !1368)
!15538 = !DILocation(line: 4554, column: 16, scope: !15528)
!15539 = !DILocation(line: 4554, column: 35, scope: !15528)
!15540 = !DILocation(line: 4554, column: 39, scope: !15528)
!15541 = !DILocation(line: 4554, column: 48, scope: !15528)
!15542 = !DILocation(line: 4554, column: 21, scope: !15528)
!15543 = !DILocation(line: 4556, column: 7, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 4556, column: 6)
!15545 = !DILocation(line: 4556, column: 6, scope: !15528)
!15546 = !DILocation(line: 4557, column: 14, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15544, file: !3, line: 4556, column: 11)
!15548 = !DILocation(line: 4557, column: 18, scope: !15547)
!15549 = !DILocation(line: 4557, column: 3, scope: !15547)
!15550 = !DILocation(line: 4558, column: 3, scope: !15547)
!15551 = !DILocation(line: 4561, column: 6, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 4561, column: 6)
!15553 = !DILocation(line: 4561, column: 10, scope: !15552)
!15554 = !DILocation(line: 4561, column: 15, scope: !15552)
!15555 = !DILocation(line: 4561, column: 6, scope: !15528)
!15556 = !DILocation(line: 4562, column: 14, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 4561, column: 33)
!15558 = !DILocation(line: 4562, column: 18, scope: !15557)
!15559 = !DILocation(line: 4562, column: 3, scope: !15557)
!15560 = !DILocation(line: 4563, column: 3, scope: !15557)
!15561 = !DILocation(line: 4566, column: 2, scope: !15528)
!15562 = !DILocation(line: 4567, column: 1, scope: !15528)
!15563 = distinct !DISubprogram(name: "vgroup_copy_active_to_sel_single", scope: !3, file: !3, line: 4485, type: !15564, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15564 = !DISubroutineType(types: !15565)
!15565 = !{null, !3872, !4075}
!15566 = !DILocalVariable(name: "ob", arg: 1, scope: !15563, file: !3, line: 4485, type: !3872)
!15567 = !DILocation(line: 4485, column: 54, scope: !15563)
!15568 = !DILocalVariable(name: "def_nr", arg: 2, scope: !15563, file: !3, line: 4485, type: !4075)
!15569 = !DILocation(line: 4485, column: 68, scope: !15563)
!15570 = !DILocalVariable(name: "dvert_act", scope: !15563, file: !3, line: 4487, type: !4203)
!15571 = !DILocation(line: 4487, column: 15, scope: !15563)
!15572 = !DILocalVariable(name: "me", scope: !15563, file: !3, line: 4489, type: !1383)
!15573 = !DILocation(line: 4489, column: 8, scope: !15563)
!15574 = !DILocation(line: 4489, column: 13, scope: !15563)
!15575 = !DILocation(line: 4489, column: 17, scope: !15563)
!15576 = !DILocalVariable(name: "em", scope: !15563, file: !3, line: 4490, type: !4100)
!15577 = !DILocation(line: 4490, column: 14, scope: !15563)
!15578 = !DILocation(line: 4490, column: 19, scope: !15563)
!15579 = !DILocation(line: 4490, column: 23, scope: !15563)
!15580 = !DILocalVariable(name: "weight_act", scope: !15563, file: !3, line: 4491, type: !1320)
!15581 = !DILocation(line: 4491, column: 8, scope: !15563)
!15582 = !DILocalVariable(name: "i", scope: !15563, file: !3, line: 4492, type: !354)
!15583 = !DILocation(line: 4492, column: 6, scope: !15563)
!15584 = !DILocation(line: 4494, column: 6, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15563, file: !3, line: 4494, column: 6)
!15586 = !DILocation(line: 4494, column: 6, scope: !15563)
!15587 = !DILocalVariable(name: "cd_dvert_offset", scope: !15588, file: !3, line: 4495, type: !4075)
!15588 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 4494, column: 10)
!15589 = !DILocation(line: 4495, column: 13, scope: !15588)
!15590 = !DILocation(line: 4495, column: 54, scope: !15588)
!15591 = !DILocation(line: 4495, column: 58, scope: !15588)
!15592 = !DILocation(line: 4495, column: 62, scope: !15588)
!15593 = !DILocation(line: 4495, column: 31, scope: !15588)
!15594 = !DILocalVariable(name: "iter", scope: !15588, file: !3, line: 4496, type: !4112)
!15595 = !DILocation(line: 4496, column: 10, scope: !15588)
!15596 = !DILocalVariable(name: "eve", scope: !15588, file: !3, line: 4497, type: !1627)
!15597 = !DILocation(line: 4497, column: 11, scope: !15588)
!15598 = !DILocalVariable(name: "eve_act", scope: !15588, file: !3, line: 4497, type: !1627)
!15599 = !DILocation(line: 4497, column: 17, scope: !15588)
!15600 = !DILocation(line: 4499, column: 43, scope: !15588)
!15601 = !DILocation(line: 4499, column: 15, scope: !15588)
!15602 = !DILocation(line: 4499, column: 13, scope: !15588)
!15603 = !DILocation(line: 4500, column: 7, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 4500, column: 7)
!15605 = !DILocation(line: 4500, column: 17, scope: !15604)
!15606 = !DILocation(line: 4500, column: 7, scope: !15588)
!15607 = !DILocation(line: 4501, column: 4, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15604, file: !3, line: 4500, column: 26)
!15609 = !DILocation(line: 4503, column: 36, scope: !15588)
!15610 = !DILocation(line: 4503, column: 47, scope: !15588)
!15611 = !DILocation(line: 4503, column: 16, scope: !15588)
!15612 = !DILocation(line: 4503, column: 14, scope: !15588)
!15613 = !DILocation(line: 4505, column: 3, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 4505, column: 3)
!15615 = !DILocation(line: 4505, column: 3, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15614, file: !3, line: 4505, column: 3)
!15617 = !DILocation(line: 4506, column: 8, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15619, file: !3, line: 4506, column: 8)
!15619 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 4505, column: 64)
!15620 = !DILocation(line: 4506, column: 47, scope: !15618)
!15621 = !DILocation(line: 4506, column: 51, scope: !15618)
!15622 = !DILocation(line: 4506, column: 58, scope: !15618)
!15623 = !DILocation(line: 4506, column: 55, scope: !15618)
!15624 = !DILocation(line: 4506, column: 8, scope: !15619)
!15625 = !DILocalVariable(name: "dv", scope: !15626, file: !3, line: 4507, type: !4203)
!15626 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 4506, column: 68)
!15627 = !DILocation(line: 4507, column: 18, scope: !15626)
!15628 = !DILocation(line: 4507, column: 23, scope: !15626)
!15629 = !DILocalVariable(name: "dw", scope: !15626, file: !3, line: 4508, type: !4449)
!15630 = !DILocation(line: 4508, column: 20, scope: !15626)
!15631 = !DILocation(line: 4508, column: 44, scope: !15626)
!15632 = !DILocation(line: 4508, column: 48, scope: !15626)
!15633 = !DILocation(line: 4508, column: 25, scope: !15626)
!15634 = !DILocation(line: 4509, column: 9, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15626, file: !3, line: 4509, column: 9)
!15636 = !DILocation(line: 4509, column: 9, scope: !15626)
!15637 = !DILocation(line: 4510, column: 19, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15635, file: !3, line: 4509, column: 13)
!15639 = !DILocation(line: 4510, column: 6, scope: !15638)
!15640 = !DILocation(line: 4510, column: 10, scope: !15638)
!15641 = !DILocation(line: 4510, column: 17, scope: !15638)
!15642 = !DILocation(line: 4512, column: 10, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15638, file: !3, line: 4512, column: 10)
!15644 = !DILocation(line: 4512, column: 14, scope: !15643)
!15645 = !DILocation(line: 4512, column: 23, scope: !15643)
!15646 = !DILocation(line: 4512, column: 10, scope: !15638)
!15647 = !DILocation(line: 4513, column: 40, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15643, file: !3, line: 4512, column: 43)
!15649 = !DILocation(line: 4513, column: 44, scope: !15648)
!15650 = !DILocation(line: 4513, column: 53, scope: !15648)
!15651 = !DILocation(line: 4513, column: 56, scope: !15648)
!15652 = !DILocation(line: 4513, column: 7, scope: !15648)
!15653 = !DILocation(line: 4514, column: 6, scope: !15648)
!15654 = !DILocation(line: 4515, column: 5, scope: !15638)
!15655 = !DILocation(line: 4516, column: 4, scope: !15626)
!15656 = !DILocation(line: 4517, column: 3, scope: !15619)
!15657 = distinct !{!15657, !15613, !15658}
!15658 = !DILocation(line: 4517, column: 3, scope: !15614)
!15659 = !DILocation(line: 4519, column: 7, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 4519, column: 7)
!15661 = !DILocation(line: 4519, column: 11, scope: !15660)
!15662 = !DILocation(line: 4519, column: 20, scope: !15660)
!15663 = !DILocation(line: 4519, column: 7, scope: !15588)
!15664 = !DILocation(line: 4520, column: 37, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15660, file: !3, line: 4519, column: 40)
!15666 = !DILocation(line: 4520, column: 41, scope: !15665)
!15667 = !DILocation(line: 4520, column: 58, scope: !15665)
!15668 = !DILocation(line: 4520, column: 4, scope: !15665)
!15669 = !DILocation(line: 4521, column: 3, scope: !15665)
!15670 = !DILocation(line: 4522, column: 2, scope: !15588)
!15671 = !DILocalVariable(name: "dv", scope: !15672, file: !3, line: 4524, type: !4203)
!15672 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 4523, column: 7)
!15673 = !DILocation(line: 4524, column: 16, scope: !15672)
!15674 = !DILocalVariable(name: "v_act", scope: !15672, file: !3, line: 4525, type: !354)
!15675 = !DILocation(line: 4525, column: 7, scope: !15672)
!15676 = !DILocation(line: 4527, column: 43, scope: !15672)
!15677 = !DILocation(line: 4527, column: 15, scope: !15672)
!15678 = !DILocation(line: 4527, column: 13, scope: !15672)
!15679 = !DILocation(line: 4528, column: 7, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15672, file: !3, line: 4528, column: 7)
!15681 = !DILocation(line: 4528, column: 17, scope: !15680)
!15682 = !DILocation(line: 4528, column: 7, scope: !15672)
!15683 = !DILocation(line: 4529, column: 4, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15680, file: !3, line: 4528, column: 26)
!15685 = !DILocation(line: 4531, column: 36, scope: !15672)
!15686 = !DILocation(line: 4531, column: 47, scope: !15672)
!15687 = !DILocation(line: 4531, column: 16, scope: !15672)
!15688 = !DILocation(line: 4531, column: 14, scope: !15672)
!15689 = !DILocation(line: 4533, column: 9, scope: !15672)
!15690 = !DILocation(line: 4533, column: 13, scope: !15672)
!15691 = !DILocation(line: 4533, column: 7, scope: !15672)
!15692 = !DILocation(line: 4534, column: 10, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15672, file: !3, line: 4534, column: 3)
!15694 = !DILocation(line: 4534, column: 8, scope: !15693)
!15695 = !DILocation(line: 4534, column: 15, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15693, file: !3, line: 4534, column: 3)
!15697 = !DILocation(line: 4534, column: 19, scope: !15696)
!15698 = !DILocation(line: 4534, column: 23, scope: !15696)
!15699 = !DILocation(line: 4534, column: 17, scope: !15696)
!15700 = !DILocation(line: 4534, column: 3, scope: !15693)
!15701 = !DILocation(line: 4535, column: 9, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15703, file: !3, line: 4535, column: 8)
!15703 = distinct !DILexicalBlock(scope: !15696, file: !3, line: 4534, column: 43)
!15704 = !DILocation(line: 4535, column: 13, scope: !15702)
!15705 = !DILocation(line: 4535, column: 19, scope: !15702)
!15706 = !DILocation(line: 4535, column: 22, scope: !15702)
!15707 = !DILocation(line: 4535, column: 27, scope: !15702)
!15708 = !DILocation(line: 4535, column: 37, scope: !15702)
!15709 = !DILocation(line: 4535, column: 41, scope: !15702)
!15710 = !DILocation(line: 4535, column: 47, scope: !15702)
!15711 = !DILocation(line: 4535, column: 44, scope: !15702)
!15712 = !DILocation(line: 4535, column: 8, scope: !15703)
!15713 = !DILocalVariable(name: "dw", scope: !15714, file: !3, line: 4536, type: !4449)
!15714 = distinct !DILexicalBlock(scope: !15702, file: !3, line: 4535, column: 59)
!15715 = !DILocation(line: 4536, column: 20, scope: !15714)
!15716 = !DILocation(line: 4536, column: 44, scope: !15714)
!15717 = !DILocation(line: 4536, column: 48, scope: !15714)
!15718 = !DILocation(line: 4536, column: 25, scope: !15714)
!15719 = !DILocation(line: 4537, column: 9, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15714, file: !3, line: 4537, column: 9)
!15721 = !DILocation(line: 4537, column: 9, scope: !15714)
!15722 = !DILocation(line: 4538, column: 19, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 4537, column: 13)
!15724 = !DILocation(line: 4538, column: 6, scope: !15723)
!15725 = !DILocation(line: 4538, column: 10, scope: !15723)
!15726 = !DILocation(line: 4538, column: 17, scope: !15723)
!15727 = !DILocation(line: 4539, column: 10, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15723, file: !3, line: 4539, column: 10)
!15729 = !DILocation(line: 4539, column: 14, scope: !15728)
!15730 = !DILocation(line: 4539, column: 23, scope: !15728)
!15731 = !DILocation(line: 4539, column: 10, scope: !15723)
!15732 = !DILocation(line: 4540, column: 40, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15728, file: !3, line: 4539, column: 43)
!15734 = !DILocation(line: 4540, column: 48, scope: !15733)
!15735 = !DILocation(line: 4540, column: 7, scope: !15733)
!15736 = !DILocation(line: 4541, column: 6, scope: !15733)
!15737 = !DILocation(line: 4542, column: 5, scope: !15723)
!15738 = !DILocation(line: 4543, column: 4, scope: !15714)
!15739 = !DILocation(line: 4544, column: 3, scope: !15703)
!15740 = !DILocation(line: 4534, column: 33, scope: !15696)
!15741 = !DILocation(line: 4534, column: 39, scope: !15696)
!15742 = !DILocation(line: 4534, column: 3, scope: !15696)
!15743 = distinct !{!15743, !15700, !15744}
!15744 = !DILocation(line: 4544, column: 3, scope: !15693)
!15745 = !DILocation(line: 4546, column: 7, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15672, file: !3, line: 4546, column: 7)
!15747 = !DILocation(line: 4546, column: 11, scope: !15746)
!15748 = !DILocation(line: 4546, column: 20, scope: !15746)
!15749 = !DILocation(line: 4546, column: 7, scope: !15672)
!15750 = !DILocation(line: 4547, column: 37, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15746, file: !3, line: 4546, column: 40)
!15752 = !DILocation(line: 4547, column: 45, scope: !15751)
!15753 = !DILocation(line: 4547, column: 4, scope: !15751)
!15754 = !DILocation(line: 4548, column: 3, scope: !15751)
!15755 = !DILocation(line: 4550, column: 1, scope: !15563)
!15756 = distinct !DISubprogram(name: "vgroup_remove_weight", scope: !3, file: !3, line: 651, type: !15564, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15757 = !DILocalVariable(name: "ob", arg: 1, scope: !15756, file: !3, line: 651, type: !3872)
!15758 = !DILocation(line: 651, column: 42, scope: !15756)
!15759 = !DILocalVariable(name: "def_nr", arg: 2, scope: !15756, file: !3, line: 651, type: !4075)
!15760 = !DILocation(line: 651, column: 56, scope: !15756)
!15761 = !DILocalVariable(name: "dvert_act", scope: !15756, file: !3, line: 653, type: !4203)
!15762 = !DILocation(line: 653, column: 15, scope: !15756)
!15763 = !DILocalVariable(name: "dw", scope: !15756, file: !3, line: 654, type: !4449)
!15764 = !DILocation(line: 654, column: 17, scope: !15756)
!15765 = !DILocation(line: 656, column: 44, scope: !15756)
!15766 = !DILocation(line: 656, column: 14, scope: !15756)
!15767 = !DILocation(line: 656, column: 12, scope: !15756)
!15768 = !DILocation(line: 658, column: 26, scope: !15756)
!15769 = !DILocation(line: 658, column: 37, scope: !15756)
!15770 = !DILocation(line: 658, column: 7, scope: !15756)
!15771 = !DILocation(line: 658, column: 5, scope: !15756)
!15772 = !DILocation(line: 659, column: 23, scope: !15756)
!15773 = !DILocation(line: 659, column: 34, scope: !15756)
!15774 = !DILocation(line: 659, column: 2, scope: !15756)
!15775 = !DILocation(line: 661, column: 1, scope: !15756)
!15776 = distinct !DISubprogram(name: "vgroup_normalize_active", scope: !3, file: !3, line: 663, type: !15777, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15777 = !DISubroutineType(types: !15778)
!15778 = !{null, !3872, !6851}
!15779 = !DILocalVariable(name: "ob", arg: 1, scope: !15776, file: !3, line: 663, type: !3872)
!15780 = !DILocation(line: 663, column: 45, scope: !15776)
!15781 = !DILocalVariable(name: "subset_type", arg: 2, scope: !15776, file: !3, line: 663, type: !6851)
!15782 = !DILocation(line: 663, column: 63, scope: !15776)
!15783 = !DILocalVariable(name: "me", scope: !15776, file: !3, line: 665, type: !1383)
!15784 = !DILocation(line: 665, column: 8, scope: !15776)
!15785 = !DILocation(line: 665, column: 13, scope: !15776)
!15786 = !DILocation(line: 665, column: 17, scope: !15776)
!15787 = !DILocalVariable(name: "em", scope: !15776, file: !3, line: 666, type: !4100)
!15788 = !DILocation(line: 666, column: 14, scope: !15776)
!15789 = !DILocation(line: 666, column: 19, scope: !15776)
!15790 = !DILocation(line: 666, column: 23, scope: !15776)
!15791 = !DILocalVariable(name: "eve_act", scope: !15776, file: !3, line: 667, type: !1627)
!15792 = !DILocation(line: 667, column: 10, scope: !15776)
!15793 = !DILocalVariable(name: "v_act", scope: !15776, file: !3, line: 668, type: !354)
!15794 = !DILocation(line: 668, column: 6, scope: !15776)
!15795 = !DILocalVariable(name: "dvert_act", scope: !15776, file: !3, line: 669, type: !4203)
!15796 = !DILocation(line: 669, column: 15, scope: !15776)
!15797 = !DILocalVariable(name: "subset_count", scope: !15776, file: !3, line: 670, type: !354)
!15798 = !DILocation(line: 670, column: 6, scope: !15776)
!15799 = !DILocalVariable(name: "vgroup_tot", scope: !15776, file: !3, line: 670, type: !354)
!15800 = !DILocation(line: 670, column: 20, scope: !15776)
!15801 = !DILocalVariable(name: "vgroup_validmap", scope: !15776, file: !3, line: 671, type: !5078)
!15802 = !DILocation(line: 671, column: 14, scope: !15776)
!15803 = !DILocation(line: 674, column: 6, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15776, file: !3, line: 674, column: 6)
!15805 = !DILocation(line: 674, column: 6, scope: !15776)
!15806 = !DILocation(line: 675, column: 43, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 674, column: 10)
!15808 = !DILocation(line: 675, column: 15, scope: !15807)
!15809 = !DILocation(line: 675, column: 13, scope: !15807)
!15810 = !DILocation(line: 676, column: 2, scope: !15807)
!15811 = !DILocation(line: 678, column: 43, scope: !15812)
!15812 = distinct !DILexicalBlock(scope: !15804, file: !3, line: 677, column: 7)
!15813 = !DILocation(line: 678, column: 15, scope: !15812)
!15814 = !DILocation(line: 678, column: 13, scope: !15812)
!15815 = !DILocation(line: 681, column: 6, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15776, file: !3, line: 681, column: 6)
!15817 = !DILocation(line: 681, column: 16, scope: !15816)
!15818 = !DILocation(line: 681, column: 6, scope: !15776)
!15819 = !DILocation(line: 682, column: 3, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15816, file: !3, line: 681, column: 25)
!15821 = !DILocation(line: 685, column: 54, scope: !15776)
!15822 = !DILocation(line: 685, column: 58, scope: !15776)
!15823 = !DILocation(line: 685, column: 20, scope: !15776)
!15824 = !DILocation(line: 685, column: 18, scope: !15776)
!15825 = !DILocation(line: 686, column: 27, scope: !15776)
!15826 = !DILocation(line: 686, column: 38, scope: !15776)
!15827 = !DILocation(line: 686, column: 55, scope: !15776)
!15828 = !DILocation(line: 686, column: 2, scope: !15776)
!15829 = !DILocation(line: 687, column: 2, scope: !15776)
!15830 = !DILocation(line: 687, column: 20, scope: !15776)
!15831 = !DILocation(line: 689, column: 6, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15776, file: !3, line: 689, column: 6)
!15833 = !DILocation(line: 689, column: 10, scope: !15832)
!15834 = !DILocation(line: 689, column: 19, scope: !15832)
!15835 = !DILocation(line: 689, column: 6, scope: !15776)
!15836 = !DILocation(line: 690, column: 7, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 690, column: 7)
!15838 = distinct !DILexicalBlock(scope: !15832, file: !3, line: 689, column: 39)
!15839 = !DILocation(line: 690, column: 7, scope: !15838)
!15840 = !DILocalVariable(name: "cd_dvert_offset", scope: !15841, file: !3, line: 691, type: !4075)
!15841 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 690, column: 11)
!15842 = !DILocation(line: 691, column: 14, scope: !15841)
!15843 = !DILocation(line: 691, column: 55, scope: !15841)
!15844 = !DILocation(line: 691, column: 59, scope: !15841)
!15845 = !DILocation(line: 691, column: 63, scope: !15841)
!15846 = !DILocation(line: 691, column: 32, scope: !15841)
!15847 = !DILocation(line: 692, column: 37, scope: !15841)
!15848 = !DILocation(line: 692, column: 41, scope: !15841)
!15849 = !DILocation(line: 692, column: 58, scope: !15841)
!15850 = !DILocation(line: 692, column: 4, scope: !15841)
!15851 = !DILocation(line: 693, column: 3, scope: !15841)
!15852 = !DILocation(line: 695, column: 37, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 694, column: 8)
!15854 = !DILocation(line: 695, column: 45, scope: !15853)
!15855 = !DILocation(line: 695, column: 4, scope: !15853)
!15856 = !DILocation(line: 697, column: 2, scope: !15838)
!15857 = !DILocation(line: 698, column: 1, scope: !15776)
!15858 = distinct !DISubprogram(name: "vgroup_copy_active_to_sel", scope: !3, file: !3, line: 700, type: !15777, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3843)
!15859 = !DILocalVariable(name: "ob", arg: 1, scope: !15858, file: !3, line: 700, type: !3872)
!15860 = !DILocation(line: 700, column: 47, scope: !15858)
!15861 = !DILocalVariable(name: "subset_type", arg: 2, scope: !15858, file: !3, line: 700, type: !6851)
!15862 = !DILocation(line: 700, column: 65, scope: !15858)
!15863 = !DILocalVariable(name: "me", scope: !15858, file: !3, line: 702, type: !1383)
!15864 = !DILocation(line: 702, column: 8, scope: !15858)
!15865 = !DILocation(line: 702, column: 13, scope: !15858)
!15866 = !DILocation(line: 702, column: 17, scope: !15858)
!15867 = !DILocalVariable(name: "em", scope: !15858, file: !3, line: 703, type: !4100)
!15868 = !DILocation(line: 703, column: 14, scope: !15858)
!15869 = !DILocation(line: 703, column: 19, scope: !15858)
!15870 = !DILocation(line: 703, column: 23, scope: !15858)
!15871 = !DILocalVariable(name: "dvert_act", scope: !15858, file: !3, line: 704, type: !4203)
!15872 = !DILocation(line: 704, column: 15, scope: !15858)
!15873 = !DILocalVariable(name: "i", scope: !15858, file: !3, line: 705, type: !354)
!15874 = !DILocation(line: 705, column: 6, scope: !15858)
!15875 = !DILocalVariable(name: "vgroup_tot", scope: !15858, file: !3, line: 705, type: !354)
!15876 = !DILocation(line: 705, column: 9, scope: !15858)
!15877 = !DILocalVariable(name: "subset_count", scope: !15858, file: !3, line: 705, type: !354)
!15878 = !DILocation(line: 705, column: 21, scope: !15858)
!15879 = !DILocalVariable(name: "vgroup_validmap", scope: !15858, file: !3, line: 706, type: !5078)
!15880 = !DILocation(line: 706, column: 14, scope: !15858)
!15881 = !DILocation(line: 706, column: 66, scope: !15858)
!15882 = !DILocation(line: 706, column: 70, scope: !15858)
!15883 = !DILocation(line: 706, column: 32, scope: !15858)
!15884 = !DILocation(line: 709, column: 6, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15858, file: !3, line: 709, column: 6)
!15886 = !DILocation(line: 709, column: 6, scope: !15858)
!15887 = !DILocalVariable(name: "iter", scope: !15888, file: !3, line: 710, type: !4112)
!15888 = distinct !DILexicalBlock(scope: !15885, file: !3, line: 709, column: 10)
!15889 = !DILocation(line: 710, column: 10, scope: !15888)
!15890 = !DILocalVariable(name: "eve", scope: !15888, file: !3, line: 711, type: !1627)
!15891 = !DILocation(line: 711, column: 11, scope: !15888)
!15892 = !DILocalVariable(name: "eve_act", scope: !15888, file: !3, line: 711, type: !1627)
!15893 = !DILocation(line: 711, column: 17, scope: !15888)
!15894 = !DILocalVariable(name: "cd_dvert_offset", scope: !15888, file: !3, line: 712, type: !4075)
!15895 = !DILocation(line: 712, column: 13, scope: !15888)
!15896 = !DILocation(line: 712, column: 54, scope: !15888)
!15897 = !DILocation(line: 712, column: 58, scope: !15888)
!15898 = !DILocation(line: 712, column: 62, scope: !15888)
!15899 = !DILocation(line: 712, column: 31, scope: !15888)
!15900 = !DILocation(line: 714, column: 43, scope: !15888)
!15901 = !DILocation(line: 714, column: 15, scope: !15888)
!15902 = !DILocation(line: 714, column: 13, scope: !15888)
!15903 = !DILocation(line: 715, column: 7, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15888, file: !3, line: 715, column: 7)
!15905 = !DILocation(line: 715, column: 7, scope: !15888)
!15906 = !DILocation(line: 716, column: 4, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !3, line: 716, column: 4)
!15908 = distinct !DILexicalBlock(scope: !15904, file: !3, line: 715, column: 18)
!15909 = !DILocation(line: 716, column: 4, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 716, column: 4)
!15911 = !DILocation(line: 717, column: 9, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15913, file: !3, line: 717, column: 9)
!15913 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 716, column: 65)
!15914 = !DILocation(line: 717, column: 48, scope: !15912)
!15915 = !DILocation(line: 717, column: 51, scope: !15912)
!15916 = !DILocation(line: 717, column: 58, scope: !15912)
!15917 = !DILocation(line: 717, column: 55, scope: !15912)
!15918 = !DILocation(line: 717, column: 9, scope: !15913)
!15919 = !DILocalVariable(name: "dv", scope: !15920, file: !3, line: 718, type: !4203)
!15920 = distinct !DILexicalBlock(scope: !15912, file: !3, line: 717, column: 67)
!15921 = !DILocation(line: 718, column: 19, scope: !15920)
!15922 = !DILocation(line: 718, column: 24, scope: !15920)
!15923 = !DILocation(line: 719, column: 26, scope: !15920)
!15924 = !DILocation(line: 719, column: 30, scope: !15920)
!15925 = !DILocation(line: 719, column: 41, scope: !15920)
!15926 = !DILocation(line: 719, column: 58, scope: !15920)
!15927 = !DILocation(line: 719, column: 6, scope: !15920)
!15928 = !DILocation(line: 720, column: 10, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15920, file: !3, line: 720, column: 10)
!15930 = !DILocation(line: 720, column: 14, scope: !15929)
!15931 = !DILocation(line: 720, column: 23, scope: !15929)
!15932 = !DILocation(line: 720, column: 10, scope: !15920)
!15933 = !DILocation(line: 721, column: 40, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15929, file: !3, line: 720, column: 43)
!15935 = !DILocation(line: 721, column: 44, scope: !15934)
!15936 = !DILocation(line: 721, column: 53, scope: !15934)
!15937 = !DILocation(line: 721, column: 56, scope: !15934)
!15938 = !DILocation(line: 721, column: 7, scope: !15934)
!15939 = !DILocation(line: 722, column: 6, scope: !15934)
!15940 = !DILocation(line: 723, column: 5, scope: !15920)
!15941 = !DILocation(line: 724, column: 4, scope: !15913)
!15942 = distinct !{!15942, !15906, !15943}
!15943 = !DILocation(line: 724, column: 4, scope: !15907)
!15944 = !DILocation(line: 725, column: 3, scope: !15908)
!15945 = !DILocation(line: 726, column: 2, scope: !15888)
!15946 = !DILocalVariable(name: "dv", scope: !15947, file: !3, line: 728, type: !4203)
!15947 = distinct !DILexicalBlock(scope: !15885, file: !3, line: 727, column: 7)
!15948 = !DILocation(line: 728, column: 16, scope: !15947)
!15949 = !DILocalVariable(name: "v_act", scope: !15947, file: !3, line: 729, type: !354)
!15950 = !DILocation(line: 729, column: 7, scope: !15947)
!15951 = !DILocation(line: 731, column: 43, scope: !15947)
!15952 = !DILocation(line: 731, column: 15, scope: !15947)
!15953 = !DILocation(line: 731, column: 13, scope: !15947)
!15954 = !DILocation(line: 732, column: 7, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15947, file: !3, line: 732, column: 7)
!15956 = !DILocation(line: 732, column: 7, scope: !15947)
!15957 = !DILocation(line: 733, column: 10, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15955, file: !3, line: 732, column: 18)
!15959 = !DILocation(line: 733, column: 14, scope: !15958)
!15960 = !DILocation(line: 733, column: 8, scope: !15958)
!15961 = !DILocation(line: 734, column: 11, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15958, file: !3, line: 734, column: 4)
!15963 = !DILocation(line: 734, column: 9, scope: !15962)
!15964 = !DILocation(line: 734, column: 16, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15962, file: !3, line: 734, column: 4)
!15966 = !DILocation(line: 734, column: 20, scope: !15965)
!15967 = !DILocation(line: 734, column: 24, scope: !15965)
!15968 = !DILocation(line: 734, column: 18, scope: !15965)
!15969 = !DILocation(line: 734, column: 4, scope: !15962)
!15970 = !DILocation(line: 735, column: 10, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15972, file: !3, line: 735, column: 9)
!15972 = distinct !DILexicalBlock(scope: !15965, file: !3, line: 734, column: 44)
!15973 = !DILocation(line: 735, column: 14, scope: !15971)
!15974 = !DILocation(line: 735, column: 20, scope: !15971)
!15975 = !DILocation(line: 735, column: 23, scope: !15971)
!15976 = !DILocation(line: 735, column: 28, scope: !15971)
!15977 = !DILocation(line: 735, column: 38, scope: !15971)
!15978 = !DILocation(line: 735, column: 41, scope: !15971)
!15979 = !DILocation(line: 735, column: 47, scope: !15971)
!15980 = !DILocation(line: 735, column: 44, scope: !15971)
!15981 = !DILocation(line: 735, column: 9, scope: !15972)
!15982 = !DILocation(line: 736, column: 26, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15971, file: !3, line: 735, column: 58)
!15984 = !DILocation(line: 736, column: 30, scope: !15983)
!15985 = !DILocation(line: 736, column: 41, scope: !15983)
!15986 = !DILocation(line: 736, column: 58, scope: !15983)
!15987 = !DILocation(line: 736, column: 6, scope: !15983)
!15988 = !DILocation(line: 737, column: 10, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15983, file: !3, line: 737, column: 10)
!15990 = !DILocation(line: 737, column: 14, scope: !15989)
!15991 = !DILocation(line: 737, column: 23, scope: !15989)
!15992 = !DILocation(line: 737, column: 10, scope: !15983)
!15993 = !DILocation(line: 738, column: 40, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15989, file: !3, line: 737, column: 43)
!15995 = !DILocation(line: 738, column: 48, scope: !15994)
!15996 = !DILocation(line: 738, column: 7, scope: !15994)
!15997 = !DILocation(line: 739, column: 6, scope: !15994)
!15998 = !DILocation(line: 740, column: 5, scope: !15983)
!15999 = !DILocation(line: 741, column: 4, scope: !15972)
!16000 = !DILocation(line: 734, column: 34, scope: !15965)
!16001 = !DILocation(line: 734, column: 40, scope: !15965)
!16002 = !DILocation(line: 734, column: 4, scope: !15965)
!16003 = distinct !{!16003, !15969, !16004}
!16004 = !DILocation(line: 741, column: 4, scope: !15962)
!16005 = !DILocation(line: 742, column: 3, scope: !15958)
!16006 = !DILocation(line: 745, column: 2, scope: !15858)
!16007 = !DILocation(line: 745, column: 20, scope: !15858)
!16008 = !DILocation(line: 746, column: 1, scope: !15858)
